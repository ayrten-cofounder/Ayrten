android.support.v4.app.BackStackState
android.support.v4.app.BackStackState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.Fragment: android.support.v4.util.SimpleArrayMap sClassMap
android.support.v4.app.Fragment: int INITIALIZING
android.support.v4.app.Fragment: int CREATED
android.support.v4.app.Fragment: int ACTIVITY_CREATED
android.support.v4.app.Fragment: int STOPPED
android.support.v4.app.Fragment: int STARTED
android.support.v4.app.Fragment: int RESUMED
android.support.v4.app.Fragment: int mState
android.support.v4.app.Fragment: android.view.View mAnimatingAway
android.support.v4.app.Fragment: int mStateAfterAnimating
android.support.v4.app.Fragment: android.os.Bundle mSavedFragmentState
android.support.v4.app.Fragment: android.util.SparseArray mSavedViewState
android.support.v4.app.Fragment: int mIndex
android.support.v4.app.Fragment: java.lang.String mWho
android.support.v4.app.Fragment: android.os.Bundle mArguments
android.support.v4.app.Fragment: android.support.v4.app.Fragment mTarget
android.support.v4.app.Fragment: int mTargetIndex
android.support.v4.app.Fragment: int mTargetRequestCode
android.support.v4.app.Fragment: boolean mAdded
android.support.v4.app.Fragment: boolean mRemoving
android.support.v4.app.Fragment: boolean mResumed
android.support.v4.app.Fragment: boolean mFromLayout
android.support.v4.app.Fragment: boolean mInLayout
android.support.v4.app.Fragment: boolean mRestored
android.support.v4.app.Fragment: int mBackStackNesting
android.support.v4.app.Fragment: android.support.v4.app.FragmentManagerImpl mFragmentManager
android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity mActivity
android.support.v4.app.Fragment: android.support.v4.app.FragmentManagerImpl mChildFragmentManager
android.support.v4.app.Fragment: android.support.v4.app.Fragment mParentFragment
android.support.v4.app.Fragment: int mFragmentId
android.support.v4.app.Fragment: int mContainerId
android.support.v4.app.Fragment: java.lang.String mTag
android.support.v4.app.Fragment: boolean mHidden
android.support.v4.app.Fragment: boolean mDetached
android.support.v4.app.Fragment: boolean mRetainInstance
android.support.v4.app.Fragment: boolean mRetaining
android.support.v4.app.Fragment: boolean mHasMenu
android.support.v4.app.Fragment: boolean mMenuVisible
android.support.v4.app.Fragment: boolean mCalled
android.support.v4.app.Fragment: int mNextAnim
android.support.v4.app.Fragment: android.view.ViewGroup mContainer
android.support.v4.app.Fragment: android.view.View mView
android.support.v4.app.Fragment: android.view.View mInnerView
android.support.v4.app.Fragment: boolean mDeferStart
android.support.v4.app.Fragment: boolean mUserVisibleHint
android.support.v4.app.Fragment: android.support.v4.app.LoaderManagerImpl mLoaderManager
android.support.v4.app.Fragment: boolean mLoadersStarted
android.support.v4.app.Fragment: boolean mCheckedForLoaderManager
android.support.v4.app.Fragment: Fragment()
android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String)
android.support.v4.app.Fragment: android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
android.support.v4.app.Fragment: boolean isSupportFragmentClass(android.content.Context,java.lang.String)
android.support.v4.app.Fragment: void restoreViewState(android.os.Bundle)
android.support.v4.app.Fragment: void setIndex(int,android.support.v4.app.Fragment)
android.support.v4.app.Fragment: boolean isInBackStack()
android.support.v4.app.Fragment: boolean equals(java.lang.Object)
android.support.v4.app.Fragment: int hashCode()
android.support.v4.app.Fragment: java.lang.String toString()
android.support.v4.app.Fragment: int getId()
android.support.v4.app.Fragment: java.lang.String getTag()
android.support.v4.app.Fragment: void setArguments(android.os.Bundle)
android.support.v4.app.Fragment: android.os.Bundle getArguments()
android.support.v4.app.Fragment: void setInitialSavedState(android.support.v4.app.Fragment$SavedState)
android.support.v4.app.Fragment: void setTargetFragment(android.support.v4.app.Fragment,int)
android.support.v4.app.Fragment: android.support.v4.app.Fragment getTargetFragment()
android.support.v4.app.Fragment: int getTargetRequestCode()
android.support.v4.app.Fragment: android.support.v4.app.FragmentActivity getActivity()
android.support.v4.app.Fragment: android.content.res.Resources getResources()
android.support.v4.app.Fragment: java.lang.CharSequence getText(int)
android.support.v4.app.Fragment: java.lang.String getString(int)
android.support.v4.app.Fragment: java.lang.String getString(int,java.lang.Object[])
android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getFragmentManager()
android.support.v4.app.Fragment: android.support.v4.app.FragmentManager getChildFragmentManager()
android.support.v4.app.Fragment: android.support.v4.app.Fragment getParentFragment()
android.support.v4.app.Fragment: boolean isAdded()
android.support.v4.app.Fragment: boolean isDetached()
android.support.v4.app.Fragment: boolean isRemoving()
android.support.v4.app.Fragment: boolean isInLayout()
android.support.v4.app.Fragment: boolean isResumed()
android.support.v4.app.Fragment: boolean isVisible()
android.support.v4.app.Fragment: boolean isHidden()
android.support.v4.app.Fragment: boolean hasOptionsMenu()
android.support.v4.app.Fragment: boolean isMenuVisible()
android.support.v4.app.Fragment: void onHiddenChanged(boolean)
android.support.v4.app.Fragment: void setRetainInstance(boolean)
android.support.v4.app.Fragment: boolean getRetainInstance()
android.support.v4.app.Fragment: void setHasOptionsMenu(boolean)
android.support.v4.app.Fragment: void setMenuVisibility(boolean)
android.support.v4.app.Fragment: void setUserVisibleHint(boolean)
android.support.v4.app.Fragment: boolean getUserVisibleHint()
android.support.v4.app.Fragment: android.support.v4.app.LoaderManager getLoaderManager()
android.support.v4.app.Fragment: void startActivity(android.content.Intent)
android.support.v4.app.Fragment: void startActivityForResult(android.content.Intent,int)
android.support.v4.app.Fragment: void onActivityResult(int,int,android.content.Intent)
android.support.v4.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
android.support.v4.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
android.support.v4.app.Fragment: void onAttach(android.app.Activity)
android.support.v4.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
android.support.v4.app.Fragment: void onCreate(android.os.Bundle)
android.support.v4.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
android.support.v4.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
android.support.v4.app.Fragment: android.view.View getView()
android.support.v4.app.Fragment: void onActivityCreated(android.os.Bundle)
android.support.v4.app.Fragment: void onViewStateRestored(android.os.Bundle)
android.support.v4.app.Fragment: void onStart()
android.support.v4.app.Fragment: void onResume()
android.support.v4.app.Fragment: void onSaveInstanceState(android.os.Bundle)
android.support.v4.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
android.support.v4.app.Fragment: void onPause()
android.support.v4.app.Fragment: void onStop()
android.support.v4.app.Fragment: void onLowMemory()
android.support.v4.app.Fragment: void onDestroyView()
android.support.v4.app.Fragment: void onDestroy()
android.support.v4.app.Fragment: void initState()
android.support.v4.app.Fragment: void onDetach()
android.support.v4.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
android.support.v4.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
android.support.v4.app.Fragment: void onDestroyOptionsMenu()
android.support.v4.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
android.support.v4.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
android.support.v4.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
android.support.v4.app.Fragment: void registerForContextMenu(android.view.View)
android.support.v4.app.Fragment: void unregisterForContextMenu(android.view.View)
android.support.v4.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
android.support.v4.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
android.support.v4.app.Fragment: android.support.v4.app.Fragment findFragmentByWho(java.lang.String)
android.support.v4.app.Fragment: void instantiateChildFragmentManager()
android.support.v4.app.Fragment: void performCreate(android.os.Bundle)
android.support.v4.app.Fragment: android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
android.support.v4.app.Fragment: void performActivityCreated(android.os.Bundle)
android.support.v4.app.Fragment: void performStart()
android.support.v4.app.Fragment: void performResume()
android.support.v4.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
android.support.v4.app.Fragment: void performLowMemory()
android.support.v4.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
android.support.v4.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
android.support.v4.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
android.support.v4.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
android.support.v4.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
android.support.v4.app.Fragment: void performSaveInstanceState(android.os.Bundle)
android.support.v4.app.Fragment: void performPause()
android.support.v4.app.Fragment: void performStop()
android.support.v4.app.Fragment: void performReallyStop()
android.support.v4.app.Fragment: void performDestroyView()
android.support.v4.app.Fragment: void performDestroy()
android.support.v4.app.Fragment: void <clinit>()
android.support.v4.app.Fragment$SavedState
android.support.v4.app.Fragment$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentManagerState
android.support.v4.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentState
android.support.v4.app.FragmentState: android.os.Parcelable$Creator CREATOR
android.support.v4.app.FragmentTabHost: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)
android.support.v4.app.FragmentTabHost$SavedState
android.support.v4.app.FragmentTabHost$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status[] values()
android.support.v4.content.ModernAsyncTask$Status: android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String)
android.support.v4.view.PagerTabStrip: void setTabIndicatorColor(int)
android.support.v4.view.PagerTabStrip: void setTabIndicatorColorResource(int)
android.support.v4.view.PagerTabStrip: int getTabIndicatorColor()
android.support.v4.view.PagerTabStrip: void setTextSpacing(int)
android.support.v4.view.PagerTabStrip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
android.support.v4.view.PagerTabStrip: void setBackgroundColor(int)
android.support.v4.view.PagerTabStrip: void setBackgroundResource(int)
android.support.v4.view.PagerTabStrip: void setDrawFullUnderline(boolean)
android.support.v4.view.PagerTabStrip: boolean getDrawFullUnderline()
android.support.v4.view.PagerTabStrip: int getMinHeight()
android.support.v4.view.PagerTitleStrip: void setSingleLineAllCaps(android.widget.TextView)
android.support.v4.view.PagerTitleStrip: void setTextSpacing(int)
android.support.v4.view.PagerTitleStrip: int getTextSpacing()
android.support.v4.view.PagerTitleStrip: void setNonPrimaryAlpha(float)
android.support.v4.view.PagerTitleStrip: void setTextColor(int)
android.support.v4.view.PagerTitleStrip: void setGravity(int)
android.support.v4.view.PagerTitleStrip: int getMinHeight()
android.support.v4.view.ViewPager: void setScrollState(int)
android.support.v4.view.ViewPager: void setAdapter(android.support.v4.view.PagerAdapter)
android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()
android.support.v4.view.ViewPager: void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)
android.support.v4.view.ViewPager: int getClientWidth()
android.support.v4.view.ViewPager: void setCurrentItem(int)
android.support.v4.view.ViewPager: int getCurrentItem()
android.support.v4.view.ViewPager: void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
android.support.v4.view.ViewPager: void setChildrenDrawingOrderEnabledCompat(boolean)
android.support.v4.view.ViewPager: int getOffscreenPageLimit()
android.support.v4.view.ViewPager: void setOffscreenPageLimit(int)
android.support.v4.view.ViewPager: void setPageMargin(int)
android.support.v4.view.ViewPager: int getPageMargin()
android.support.v4.view.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
android.support.v4.view.ViewPager: void setPageMarginDrawable(int)
android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)
android.support.v4.view.ViewPager$SavedState
android.support.v4.view.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.DrawerLayout: void setScrimColor(int)
android.support.v4.widget.DrawerLayout: void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener)
android.support.v4.widget.DrawerLayout: void setDrawerLockMode(int)
android.support.v4.widget.DrawerLayout$SavedState
android.support.v4.widget.DrawerLayout$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.SlidingPaneLayout: void setParallaxDistance(int)
android.support.v4.widget.SlidingPaneLayout: int getParallaxDistance()
android.support.v4.widget.SlidingPaneLayout: void setSliderFadeColor(int)
android.support.v4.widget.SlidingPaneLayout: int getSliderFadeColor()
android.support.v4.widget.SlidingPaneLayout: void setCoveredFadeColor(int)
android.support.v4.widget.SlidingPaneLayout: int getCoveredFadeColor()
android.support.v4.widget.SlidingPaneLayout: void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener)
android.support.v4.widget.SlidingPaneLayout: void setShadowDrawable(android.graphics.drawable.Drawable)
android.support.v4.widget.SlidingPaneLayout: void setShadowResource(int)
android.support.v4.widget.SlidingPaneLayout$SavedState
android.support.v4.widget.SlidingPaneLayout$SavedState: android.os.Parcelable$Creator CREATOR
android.support.v4.widget.SwipeRefreshLayout: void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener)
android.support.v4.widget.SwipeRefreshLayout: void setTriggerPercentage(float)
android.support.v4.widget.SwipeRefreshLayout: void setRefreshing(boolean)
android.support.v4.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
com.ayrten.scrots.android.AdLauncher: AdLauncher()
com.ayrten.scrots.android.AndroidLauncher
com.ayrten.scrots.android.AndroidLauncher: AndroidLauncher()
com.ayrten.scrots.android.R$attr: int adSize
com.ayrten.scrots.android.R$attr: int adSizes
com.ayrten.scrots.android.R$attr: int adUnitId
com.ayrten.scrots.android.R$attr: int appTheme
com.ayrten.scrots.android.R$attr: int buyButtonAppearance
com.ayrten.scrots.android.R$attr: int buyButtonHeight
com.ayrten.scrots.android.R$attr: int buyButtonText
com.ayrten.scrots.android.R$attr: int buyButtonWidth
com.ayrten.scrots.android.R$attr: int cameraBearing
com.ayrten.scrots.android.R$attr: int cameraTargetLat
com.ayrten.scrots.android.R$attr: int cameraTargetLng
com.ayrten.scrots.android.R$attr: int cameraTilt
com.ayrten.scrots.android.R$attr: int cameraZoom
com.ayrten.scrots.android.R$attr: int circleCrop
com.ayrten.scrots.android.R$attr: int environment
com.ayrten.scrots.android.R$attr: int fragmentMode
com.ayrten.scrots.android.R$attr: int fragmentStyle
com.ayrten.scrots.android.R$attr: int imageAspectRatio
com.ayrten.scrots.android.R$attr: int imageAspectRatioAdjust
com.ayrten.scrots.android.R$attr: int liteMode
com.ayrten.scrots.android.R$attr: int mapType
com.ayrten.scrots.android.R$attr: int maskedWalletDetailsBackground
com.ayrten.scrots.android.R$attr: int maskedWalletDetailsButtonBackground
com.ayrten.scrots.android.R$attr: int maskedWalletDetailsButtonTextAppearance
com.ayrten.scrots.android.R$attr: int maskedWalletDetailsHeaderTextAppearance
com.ayrten.scrots.android.R$attr: int maskedWalletDetailsLogoImageType
com.ayrten.scrots.android.R$attr: int maskedWalletDetailsLogoTextColor
com.ayrten.scrots.android.R$attr: int maskedWalletDetailsTextAppearance
com.ayrten.scrots.android.R$attr: int uiCompass
com.ayrten.scrots.android.R$attr: int uiMapToolbar
com.ayrten.scrots.android.R$attr: int uiRotateGestures
com.ayrten.scrots.android.R$attr: int uiScrollGestures
com.ayrten.scrots.android.R$attr: int uiTiltGestures
com.ayrten.scrots.android.R$attr: int uiZoomControls
com.ayrten.scrots.android.R$attr: int uiZoomGestures
com.ayrten.scrots.android.R$attr: int useViewLifecycle
com.ayrten.scrots.android.R$attr: int zOrderOnTop
com.ayrten.scrots.android.R$color: int common_action_bar_splitter
com.ayrten.scrots.android.R$color: int common_signin_btn_dark_text_default
com.ayrten.scrots.android.R$color: int common_signin_btn_dark_text_disabled
com.ayrten.scrots.android.R$color: int common_signin_btn_dark_text_focused
com.ayrten.scrots.android.R$color: int common_signin_btn_dark_text_pressed
com.ayrten.scrots.android.R$color: int common_signin_btn_default_background
com.ayrten.scrots.android.R$color: int common_signin_btn_light_text_default
com.ayrten.scrots.android.R$color: int common_signin_btn_light_text_disabled
com.ayrten.scrots.android.R$color: int common_signin_btn_light_text_focused
com.ayrten.scrots.android.R$color: int common_signin_btn_light_text_pressed
com.ayrten.scrots.android.R$color: int common_signin_btn_text_dark
com.ayrten.scrots.android.R$color: int common_signin_btn_text_light
com.ayrten.scrots.android.R$color: int wallet_bright_foreground_disabled_holo_light
com.ayrten.scrots.android.R$color: int wallet_bright_foreground_holo_dark
com.ayrten.scrots.android.R$color: int wallet_bright_foreground_holo_light
com.ayrten.scrots.android.R$color: int wallet_dim_foreground_disabled_holo_dark
com.ayrten.scrots.android.R$color: int wallet_dim_foreground_holo_dark
com.ayrten.scrots.android.R$color: int wallet_dim_foreground_inverse_disabled_holo_dark
com.ayrten.scrots.android.R$color: int wallet_dim_foreground_inverse_holo_dark
com.ayrten.scrots.android.R$color: int wallet_highlighted_text_holo_dark
com.ayrten.scrots.android.R$color: int wallet_highlighted_text_holo_light
com.ayrten.scrots.android.R$color: int wallet_hint_foreground_holo_dark
com.ayrten.scrots.android.R$color: int wallet_hint_foreground_holo_light
com.ayrten.scrots.android.R$color: int wallet_holo_blue_light
com.ayrten.scrots.android.R$color: int wallet_link_text_light
com.ayrten.scrots.android.R$color: int wallet_primary_text_holo_light
com.ayrten.scrots.android.R$color: int wallet_secondary_text_holo_dark
com.ayrten.scrots.android.R$drawable: int common_full_open_on_phone
com.ayrten.scrots.android.R$drawable: int common_ic_googleplayservices
com.ayrten.scrots.android.R$drawable: int common_signin_btn_icon_dark
com.ayrten.scrots.android.R$drawable: int common_signin_btn_icon_disabled_dark
com.ayrten.scrots.android.R$drawable: int common_signin_btn_icon_disabled_focus_dark
com.ayrten.scrots.android.R$drawable: int common_signin_btn_icon_disabled_focus_light
com.ayrten.scrots.android.R$drawable: int common_signin_btn_icon_disabled_light
com.ayrten.scrots.android.R$drawable: int common_signin_btn_icon_focus_dark
com.ayrten.scrots.android.R$drawable: int common_signin_btn_icon_focus_light
com.ayrten.scrots.android.R$drawable: int common_signin_btn_icon_light
com.ayrten.scrots.android.R$drawable: int common_signin_btn_icon_normal_dark
com.ayrten.scrots.android.R$drawable: int common_signin_btn_icon_normal_light
com.ayrten.scrots.android.R$drawable: int common_signin_btn_icon_pressed_dark
com.ayrten.scrots.android.R$drawable: int common_signin_btn_icon_pressed_light
com.ayrten.scrots.android.R$drawable: int common_signin_btn_text_dark
com.ayrten.scrots.android.R$drawable: int common_signin_btn_text_disabled_dark
com.ayrten.scrots.android.R$drawable: int common_signin_btn_text_disabled_focus_dark
com.ayrten.scrots.android.R$drawable: int common_signin_btn_text_disabled_focus_light
com.ayrten.scrots.android.R$drawable: int common_signin_btn_text_disabled_light
com.ayrten.scrots.android.R$drawable: int common_signin_btn_text_focus_dark
com.ayrten.scrots.android.R$drawable: int common_signin_btn_text_focus_light
com.ayrten.scrots.android.R$drawable: int common_signin_btn_text_light
com.ayrten.scrots.android.R$drawable: int common_signin_btn_text_normal_dark
com.ayrten.scrots.android.R$drawable: int common_signin_btn_text_normal_light
com.ayrten.scrots.android.R$drawable: int common_signin_btn_text_pressed_dark
com.ayrten.scrots.android.R$drawable: int common_signin_btn_text_pressed_light
com.ayrten.scrots.android.R$drawable: int ic_launcher
com.ayrten.scrots.android.R$drawable: int ic_plusone_medium_off_client
com.ayrten.scrots.android.R$drawable: int ic_plusone_small_off_client
com.ayrten.scrots.android.R$drawable: int ic_plusone_standard_off_client
com.ayrten.scrots.android.R$drawable: int ic_plusone_tall_off_client
com.ayrten.scrots.android.R$drawable: int powered_by_google_dark
com.ayrten.scrots.android.R$drawable: int powered_by_google_light
com.ayrten.scrots.android.R$id: int adView
com.ayrten.scrots.android.R$id: int adjust_height
com.ayrten.scrots.android.R$id: int adjust_width
com.ayrten.scrots.android.R$id: int book_now
com.ayrten.scrots.android.R$id: int buyButton
com.ayrten.scrots.android.R$id: int buy_now
com.ayrten.scrots.android.R$id: int buy_with_google
com.ayrten.scrots.android.R$id: int classic
com.ayrten.scrots.android.R$id: int dialog
com.ayrten.scrots.android.R$id: int divider
com.ayrten.scrots.android.R$id: int donate_with_google
com.ayrten.scrots.android.R$id: int grayscale
com.ayrten.scrots.android.R$id: int holo_dark
com.ayrten.scrots.android.R$id: int holo_light
com.ayrten.scrots.android.R$id: int hybrid
com.ayrten.scrots.android.R$id: int match_parent
com.ayrten.scrots.android.R$id: int monochrome
com.ayrten.scrots.android.R$id: int name
com.ayrten.scrots.android.R$id: int newHighScore
com.ayrten.scrots.android.R$id: int no_button
com.ayrten.scrots.android.R$id: int none
com.ayrten.scrots.android.R$id: int normal
com.ayrten.scrots.android.R$id: int production
com.ayrten.scrots.android.R$id: int sandbox
com.ayrten.scrots.android.R$id: int satellite
com.ayrten.scrots.android.R$id: int selectionDetails
com.ayrten.scrots.android.R$id: int strict_sandbox
com.ayrten.scrots.android.R$id: int terrain
com.ayrten.scrots.android.R$id: int title
com.ayrten.scrots.android.R$id: int wrap_content
com.ayrten.scrots.android.R$id: int yes_button
com.ayrten.scrots.android.R$integer: int google_play_services_version
com.ayrten.scrots.android.R$layout: int dialog
com.ayrten.scrots.android.R$layout: int fragment_ad
com.ayrten.scrots.android.R$layout: int game_over_dialog
com.ayrten.scrots.android.R$raw: int gtm_analytics
com.ayrten.scrots.android.R$string: int accept
com.ayrten.scrots.android.R$string: int app_name
com.ayrten.scrots.android.R$string: int banner_ad_unit_id
com.ayrten.scrots.android.R$string: int common_android_wear_notification_needs_update_text
com.ayrten.scrots.android.R$string: int common_android_wear_update_text
com.ayrten.scrots.android.R$string: int common_android_wear_update_title
com.ayrten.scrots.android.R$string: int common_google_play_services_enable_button
com.ayrten.scrots.android.R$string: int common_google_play_services_enable_text
com.ayrten.scrots.android.R$string: int common_google_play_services_enable_title
com.ayrten.scrots.android.R$string: int common_google_play_services_error_notification_requested_by_msg
com.ayrten.scrots.android.R$string: int common_google_play_services_install_button
com.ayrten.scrots.android.R$string: int common_google_play_services_install_text_phone
com.ayrten.scrots.android.R$string: int common_google_play_services_install_text_tablet
com.ayrten.scrots.android.R$string: int common_google_play_services_install_title
com.ayrten.scrots.android.R$string: int common_google_play_services_invalid_account_text
com.ayrten.scrots.android.R$string: int common_google_play_services_invalid_account_title
com.ayrten.scrots.android.R$string: int common_google_play_services_needs_enabling_title
com.ayrten.scrots.android.R$string: int common_google_play_services_network_error_text
com.ayrten.scrots.android.R$string: int common_google_play_services_network_error_title
com.ayrten.scrots.android.R$string: int common_google_play_services_notification_needs_installation_title
com.ayrten.scrots.android.R$string: int common_google_play_services_notification_needs_update_title
com.ayrten.scrots.android.R$string: int common_google_play_services_notification_ticker
com.ayrten.scrots.android.R$string: int common_google_play_services_unknown_issue
com.ayrten.scrots.android.R$string: int common_google_play_services_unsupported_text
com.ayrten.scrots.android.R$string: int common_google_play_services_unsupported_title
com.ayrten.scrots.android.R$string: int common_google_play_services_update_button
com.ayrten.scrots.android.R$string: int common_google_play_services_update_text
com.ayrten.scrots.android.R$string: int common_google_play_services_update_title
com.ayrten.scrots.android.R$string: int common_open_on_phone
com.ayrten.scrots.android.R$string: int common_signin_button_text
com.ayrten.scrots.android.R$string: int common_signin_button_text_long
com.ayrten.scrots.android.R$string: int create_calendar_message
com.ayrten.scrots.android.R$string: int create_calendar_title
com.ayrten.scrots.android.R$string: int decline
com.ayrten.scrots.android.R$string: int store_picture_message
com.ayrten.scrots.android.R$string: int store_picture_title
com.ayrten.scrots.android.R$string: int wallet_buy_button_place_holder
com.ayrten.scrots.android.R$style: int GdxTheme
com.ayrten.scrots.android.R$style: int Theme_IAPTheme
com.ayrten.scrots.android.R$style: int WalletFragmentDefaultButtonTextAppearance
com.ayrten.scrots.android.R$style: int WalletFragmentDefaultDetailsHeaderTextAppearance
com.ayrten.scrots.android.R$style: int WalletFragmentDefaultDetailsTextAppearance
com.ayrten.scrots.android.R$style: int WalletFragmentDefaultStyle
com.ayrten.scrots.android.R$styleable: int[] AdsAttrs
com.ayrten.scrots.android.R$styleable: int AdsAttrs_adSize
com.ayrten.scrots.android.R$styleable: int AdsAttrs_adSizes
com.ayrten.scrots.android.R$styleable: int AdsAttrs_adUnitId
com.ayrten.scrots.android.R$styleable: int[] LoadingImageView
com.ayrten.scrots.android.R$styleable: int LoadingImageView_circleCrop
com.ayrten.scrots.android.R$styleable: int LoadingImageView_imageAspectRatio
com.ayrten.scrots.android.R$styleable: int LoadingImageView_imageAspectRatioAdjust
com.ayrten.scrots.android.R$styleable: int[] MapAttrs
com.ayrten.scrots.android.R$styleable: int MapAttrs_cameraBearing
com.ayrten.scrots.android.R$styleable: int MapAttrs_cameraTargetLat
com.ayrten.scrots.android.R$styleable: int MapAttrs_cameraTargetLng
com.ayrten.scrots.android.R$styleable: int MapAttrs_cameraTilt
com.ayrten.scrots.android.R$styleable: int MapAttrs_cameraZoom
com.ayrten.scrots.android.R$styleable: int MapAttrs_liteMode
com.ayrten.scrots.android.R$styleable: int MapAttrs_mapType
com.ayrten.scrots.android.R$styleable: int MapAttrs_uiCompass
com.ayrten.scrots.android.R$styleable: int MapAttrs_uiMapToolbar
com.ayrten.scrots.android.R$styleable: int MapAttrs_uiRotateGestures
com.ayrten.scrots.android.R$styleable: int MapAttrs_uiScrollGestures
com.ayrten.scrots.android.R$styleable: int MapAttrs_uiTiltGestures
com.ayrten.scrots.android.R$styleable: int MapAttrs_uiZoomControls
com.ayrten.scrots.android.R$styleable: int MapAttrs_uiZoomGestures
com.ayrten.scrots.android.R$styleable: int MapAttrs_useViewLifecycle
com.ayrten.scrots.android.R$styleable: int MapAttrs_zOrderOnTop
com.ayrten.scrots.android.R$styleable: int[] WalletFragmentOptions
com.ayrten.scrots.android.R$styleable: int WalletFragmentOptions_appTheme
com.ayrten.scrots.android.R$styleable: int WalletFragmentOptions_environment
com.ayrten.scrots.android.R$styleable: int WalletFragmentOptions_fragmentMode
com.ayrten.scrots.android.R$styleable: int WalletFragmentOptions_fragmentStyle
com.ayrten.scrots.android.R$styleable: int[] WalletFragmentStyle
com.ayrten.scrots.android.R$styleable: int WalletFragmentStyle_buyButtonAppearance
com.ayrten.scrots.android.R$styleable: int WalletFragmentStyle_buyButtonHeight
com.ayrten.scrots.android.R$styleable: int WalletFragmentStyle_buyButtonText
com.ayrten.scrots.android.R$styleable: int WalletFragmentStyle_buyButtonWidth
com.ayrten.scrots.android.R$styleable: int WalletFragmentStyle_maskedWalletDetailsBackground
com.ayrten.scrots.android.R$styleable: int WalletFragmentStyle_maskedWalletDetailsButtonBackground
com.ayrten.scrots.android.R$styleable: int WalletFragmentStyle_maskedWalletDetailsButtonTextAppearance
com.ayrten.scrots.android.R$styleable: int WalletFragmentStyle_maskedWalletDetailsHeaderTextAppearance
com.ayrten.scrots.android.R$styleable: int WalletFragmentStyle_maskedWalletDetailsLogoImageType
com.ayrten.scrots.android.R$styleable: int WalletFragmentStyle_maskedWalletDetailsLogoTextColor
com.ayrten.scrots.android.R$styleable: int WalletFragmentStyle_maskedWalletDetailsTextAppearance
com.badlogic.gdx.Application
com.badlogic.gdx.Application: int LOG_NONE
com.badlogic.gdx.Application: int LOG_DEBUG
com.badlogic.gdx.Application: int LOG_INFO
com.badlogic.gdx.Application: int LOG_ERROR
com.badlogic.gdx.Application: com.badlogic.gdx.ApplicationListener getApplicationListener()
com.badlogic.gdx.Application: com.badlogic.gdx.Graphics getGraphics()
com.badlogic.gdx.Application: com.badlogic.gdx.Audio getAudio()
com.badlogic.gdx.Application: com.badlogic.gdx.Input getInput()
com.badlogic.gdx.Application: com.badlogic.gdx.Files getFiles()
com.badlogic.gdx.Application: com.badlogic.gdx.Net getNet()
com.badlogic.gdx.Application: void log(java.lang.String,java.lang.String)
com.badlogic.gdx.Application: void log(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.Application: void error(java.lang.String,java.lang.String)
com.badlogic.gdx.Application: void error(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.Application: void debug(java.lang.String,java.lang.String)
com.badlogic.gdx.Application: void debug(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.Application: void setLogLevel(int)
com.badlogic.gdx.Application: int getLogLevel()
com.badlogic.gdx.Application: com.badlogic.gdx.Application$ApplicationType getType()
com.badlogic.gdx.Application: int getVersion()
com.badlogic.gdx.Application: long getJavaHeap()
com.badlogic.gdx.Application: long getNativeHeap()
com.badlogic.gdx.Application: com.badlogic.gdx.Preferences getPreferences(java.lang.String)
com.badlogic.gdx.Application: com.badlogic.gdx.utils.Clipboard getClipboard()
com.badlogic.gdx.Application: void postRunnable(java.lang.Runnable)
com.badlogic.gdx.Application: void exit()
com.badlogic.gdx.Application: void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.Application: void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.Application$ApplicationType
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType Android
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType Desktop
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType HeadlessDesktop
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType Applet
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType WebGL
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType iOS
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType[] $VALUES
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType[] values()
com.badlogic.gdx.Application$ApplicationType: com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String)
com.badlogic.gdx.Application$ApplicationType: Application$ApplicationType(java.lang.String,int)
com.badlogic.gdx.Application$ApplicationType: void <clinit>()
com.badlogic.gdx.ApplicationAdapter
com.badlogic.gdx.ApplicationAdapter: ApplicationAdapter()
com.badlogic.gdx.ApplicationAdapter: void create()
com.badlogic.gdx.ApplicationAdapter: void resize(int,int)
com.badlogic.gdx.ApplicationAdapter: void render()
com.badlogic.gdx.ApplicationAdapter: void pause()
com.badlogic.gdx.ApplicationAdapter: void resume()
com.badlogic.gdx.ApplicationAdapter: void dispose()
com.badlogic.gdx.ApplicationListener
com.badlogic.gdx.ApplicationListener: void create()
com.badlogic.gdx.ApplicationListener: void resize(int,int)
com.badlogic.gdx.ApplicationListener: void render()
com.badlogic.gdx.ApplicationListener: void pause()
com.badlogic.gdx.ApplicationListener: void resume()
com.badlogic.gdx.ApplicationListener: void dispose()
com.badlogic.gdx.Audio
com.badlogic.gdx.Audio: com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
com.badlogic.gdx.Audio: com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
com.badlogic.gdx.Audio: com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.Audio: com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.Files
com.badlogic.gdx.Files: com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType)
com.badlogic.gdx.Files: com.badlogic.gdx.files.FileHandle classpath(java.lang.String)
com.badlogic.gdx.Files: com.badlogic.gdx.files.FileHandle internal(java.lang.String)
com.badlogic.gdx.Files: com.badlogic.gdx.files.FileHandle external(java.lang.String)
com.badlogic.gdx.Files: com.badlogic.gdx.files.FileHandle absolute(java.lang.String)
com.badlogic.gdx.Files: com.badlogic.gdx.files.FileHandle local(java.lang.String)
com.badlogic.gdx.Files: java.lang.String getExternalStoragePath()
com.badlogic.gdx.Files: boolean isExternalStorageAvailable()
com.badlogic.gdx.Files: java.lang.String getLocalStoragePath()
com.badlogic.gdx.Files: boolean isLocalStorageAvailable()
com.badlogic.gdx.Files$FileType
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType Classpath
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType Internal
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType External
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType Absolute
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType Local
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType[] $VALUES
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType[] values()
com.badlogic.gdx.Files$FileType: com.badlogic.gdx.Files$FileType valueOf(java.lang.String)
com.badlogic.gdx.Files$FileType: Files$FileType(java.lang.String,int)
com.badlogic.gdx.Files$FileType: void <clinit>()
com.badlogic.gdx.Game
com.badlogic.gdx.Game: com.badlogic.gdx.Screen screen
com.badlogic.gdx.Game: Game()
com.badlogic.gdx.Game: void dispose()
com.badlogic.gdx.Game: void pause()
com.badlogic.gdx.Game: void resume()
com.badlogic.gdx.Game: void render()
com.badlogic.gdx.Game: void resize(int,int)
com.badlogic.gdx.Game: void setScreen(com.badlogic.gdx.Screen)
com.badlogic.gdx.Game: com.badlogic.gdx.Screen getScreen()
com.badlogic.gdx.Gdx
com.badlogic.gdx.Gdx: com.badlogic.gdx.Application app
com.badlogic.gdx.Gdx: com.badlogic.gdx.Graphics graphics
com.badlogic.gdx.Gdx: com.badlogic.gdx.Audio audio
com.badlogic.gdx.Gdx: com.badlogic.gdx.Input input
com.badlogic.gdx.Gdx: com.badlogic.gdx.Files files
com.badlogic.gdx.Gdx: com.badlogic.gdx.Net net
com.badlogic.gdx.Gdx: com.badlogic.gdx.graphics.GL20 gl
com.badlogic.gdx.Gdx: com.badlogic.gdx.graphics.GL20 gl20
com.badlogic.gdx.Gdx: com.badlogic.gdx.graphics.GL30 gl30
com.badlogic.gdx.Gdx: Gdx()
com.badlogic.gdx.Graphics
com.badlogic.gdx.Graphics: boolean isGL30Available()
com.badlogic.gdx.Graphics: com.badlogic.gdx.graphics.GL20 getGL20()
com.badlogic.gdx.Graphics: com.badlogic.gdx.graphics.GL30 getGL30()
com.badlogic.gdx.Graphics: int getWidth()
com.badlogic.gdx.Graphics: int getHeight()
com.badlogic.gdx.Graphics: float getDeltaTime()
com.badlogic.gdx.Graphics: float getRawDeltaTime()
com.badlogic.gdx.Graphics: int getFramesPerSecond()
com.badlogic.gdx.Graphics: com.badlogic.gdx.Graphics$GraphicsType getType()
com.badlogic.gdx.Graphics: float getPpiX()
com.badlogic.gdx.Graphics: float getPpiY()
com.badlogic.gdx.Graphics: float getPpcX()
com.badlogic.gdx.Graphics: float getPpcY()
com.badlogic.gdx.Graphics: float getDensity()
com.badlogic.gdx.Graphics: boolean supportsDisplayModeChange()
com.badlogic.gdx.Graphics: com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
com.badlogic.gdx.Graphics: com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode()
com.badlogic.gdx.Graphics: boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
com.badlogic.gdx.Graphics: boolean setDisplayMode(int,int,boolean)
com.badlogic.gdx.Graphics: void setTitle(java.lang.String)
com.badlogic.gdx.Graphics: void setVSync(boolean)
com.badlogic.gdx.Graphics: com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
com.badlogic.gdx.Graphics: boolean supportsExtension(java.lang.String)
com.badlogic.gdx.Graphics: void setContinuousRendering(boolean)
com.badlogic.gdx.Graphics: boolean isContinuousRendering()
com.badlogic.gdx.Graphics: void requestRendering()
com.badlogic.gdx.Graphics: boolean isFullscreen()
com.badlogic.gdx.Graphics$BufferFormat
com.badlogic.gdx.Graphics$BufferFormat: int r
com.badlogic.gdx.Graphics$BufferFormat: int g
com.badlogic.gdx.Graphics$BufferFormat: int b
com.badlogic.gdx.Graphics$BufferFormat: int a
com.badlogic.gdx.Graphics$BufferFormat: int depth
com.badlogic.gdx.Graphics$BufferFormat: int stencil
com.badlogic.gdx.Graphics$BufferFormat: int samples
com.badlogic.gdx.Graphics$BufferFormat: boolean coverageSampling
com.badlogic.gdx.Graphics$BufferFormat: Graphics$BufferFormat(int,int,int,int,int,int,int,boolean)
com.badlogic.gdx.Graphics$BufferFormat: java.lang.String toString()
com.badlogic.gdx.Graphics$DisplayMode
com.badlogic.gdx.Graphics$DisplayMode: int width
com.badlogic.gdx.Graphics$DisplayMode: int height
com.badlogic.gdx.Graphics$DisplayMode: int refreshRate
com.badlogic.gdx.Graphics$DisplayMode: int bitsPerPixel
com.badlogic.gdx.Graphics$DisplayMode: Graphics$DisplayMode(int,int,int,int)
com.badlogic.gdx.Graphics$DisplayMode: java.lang.String toString()
com.badlogic.gdx.Graphics$GraphicsType
com.badlogic.gdx.Graphics$GraphicsType: com.badlogic.gdx.Graphics$GraphicsType AndroidGL
com.badlogic.gdx.Graphics$GraphicsType: com.badlogic.gdx.Graphics$GraphicsType LWJGL
com.badlogic.gdx.Graphics$GraphicsType: com.badlogic.gdx.Graphics$GraphicsType Angle
com.badlogic.gdx.Graphics$GraphicsType: com.badlogic.gdx.Graphics$GraphicsType WebGL
com.badlogic.gdx.Graphics$GraphicsType: com.badlogic.gdx.Graphics$GraphicsType iOSGL
com.badlogic.gdx.Graphics$GraphicsType: com.badlogic.gdx.Graphics$GraphicsType JGLFW
com.badlogic.gdx.Graphics$GraphicsType: com.badlogic.gdx.Graphics$GraphicsType Mock
com.badlogic.gdx.Graphics$GraphicsType: com.badlogic.gdx.Graphics$GraphicsType[] $VALUES
com.badlogic.gdx.Graphics$GraphicsType: com.badlogic.gdx.Graphics$GraphicsType[] values()
com.badlogic.gdx.Graphics$GraphicsType: com.badlogic.gdx.Graphics$GraphicsType valueOf(java.lang.String)
com.badlogic.gdx.Graphics$GraphicsType: Graphics$GraphicsType(java.lang.String,int)
com.badlogic.gdx.Graphics$GraphicsType: void <clinit>()
com.badlogic.gdx.Input
com.badlogic.gdx.Input: float getAccelerometerX()
com.badlogic.gdx.Input: float getAccelerometerY()
com.badlogic.gdx.Input: float getAccelerometerZ()
com.badlogic.gdx.Input: int getX()
com.badlogic.gdx.Input: int getX(int)
com.badlogic.gdx.Input: int getDeltaX()
com.badlogic.gdx.Input: int getDeltaX(int)
com.badlogic.gdx.Input: int getY()
com.badlogic.gdx.Input: int getY(int)
com.badlogic.gdx.Input: int getDeltaY()
com.badlogic.gdx.Input: int getDeltaY(int)
com.badlogic.gdx.Input: boolean isTouched()
com.badlogic.gdx.Input: boolean justTouched()
com.badlogic.gdx.Input: boolean isTouched(int)
com.badlogic.gdx.Input: boolean isButtonPressed(int)
com.badlogic.gdx.Input: boolean isKeyPressed(int)
com.badlogic.gdx.Input: void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
com.badlogic.gdx.Input: void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
com.badlogic.gdx.Input: void setOnscreenKeyboardVisible(boolean)
com.badlogic.gdx.Input: void vibrate(int)
com.badlogic.gdx.Input: void vibrate(long[],int)
com.badlogic.gdx.Input: void cancelVibrate()
com.badlogic.gdx.Input: float getAzimuth()
com.badlogic.gdx.Input: float getPitch()
com.badlogic.gdx.Input: float getRoll()
com.badlogic.gdx.Input: void getRotationMatrix(float[])
com.badlogic.gdx.Input: long getCurrentEventTime()
com.badlogic.gdx.Input: void setCatchBackKey(boolean)
com.badlogic.gdx.Input: void setCatchMenuKey(boolean)
com.badlogic.gdx.Input: void setInputProcessor(com.badlogic.gdx.InputProcessor)
com.badlogic.gdx.Input: com.badlogic.gdx.InputProcessor getInputProcessor()
com.badlogic.gdx.Input: boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
com.badlogic.gdx.Input: int getRotation()
com.badlogic.gdx.Input: com.badlogic.gdx.Input$Orientation getNativeOrientation()
com.badlogic.gdx.Input: void setCursorCatched(boolean)
com.badlogic.gdx.Input: boolean isCursorCatched()
com.badlogic.gdx.Input: void setCursorPosition(int,int)
com.badlogic.gdx.Input: void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.Input$Buttons
com.badlogic.gdx.Input$Buttons: int LEFT
com.badlogic.gdx.Input$Buttons: int RIGHT
com.badlogic.gdx.Input$Buttons: int MIDDLE
com.badlogic.gdx.Input$Buttons: Input$Buttons()
com.badlogic.gdx.Input$Keys
com.badlogic.gdx.Input$Keys: int ANY_KEY
com.badlogic.gdx.Input$Keys: int NUM_0
com.badlogic.gdx.Input$Keys: int NUM_1
com.badlogic.gdx.Input$Keys: int NUM_2
com.badlogic.gdx.Input$Keys: int NUM_3
com.badlogic.gdx.Input$Keys: int NUM_4
com.badlogic.gdx.Input$Keys: int NUM_5
com.badlogic.gdx.Input$Keys: int NUM_6
com.badlogic.gdx.Input$Keys: int NUM_7
com.badlogic.gdx.Input$Keys: int NUM_8
com.badlogic.gdx.Input$Keys: int NUM_9
com.badlogic.gdx.Input$Keys: int A
com.badlogic.gdx.Input$Keys: int ALT_LEFT
com.badlogic.gdx.Input$Keys: int ALT_RIGHT
com.badlogic.gdx.Input$Keys: int APOSTROPHE
com.badlogic.gdx.Input$Keys: int AT
com.badlogic.gdx.Input$Keys: int B
com.badlogic.gdx.Input$Keys: int BACK
com.badlogic.gdx.Input$Keys: int BACKSLASH
com.badlogic.gdx.Input$Keys: int C
com.badlogic.gdx.Input$Keys: int CALL
com.badlogic.gdx.Input$Keys: int CAMERA
com.badlogic.gdx.Input$Keys: int CLEAR
com.badlogic.gdx.Input$Keys: int COMMA
com.badlogic.gdx.Input$Keys: int D
com.badlogic.gdx.Input$Keys: int DEL
com.badlogic.gdx.Input$Keys: int BACKSPACE
com.badlogic.gdx.Input$Keys: int FORWARD_DEL
com.badlogic.gdx.Input$Keys: int DPAD_CENTER
com.badlogic.gdx.Input$Keys: int DPAD_DOWN
com.badlogic.gdx.Input$Keys: int DPAD_LEFT
com.badlogic.gdx.Input$Keys: int DPAD_RIGHT
com.badlogic.gdx.Input$Keys: int DPAD_UP
com.badlogic.gdx.Input$Keys: int CENTER
com.badlogic.gdx.Input$Keys: int DOWN
com.badlogic.gdx.Input$Keys: int LEFT
com.badlogic.gdx.Input$Keys: int RIGHT
com.badlogic.gdx.Input$Keys: int UP
com.badlogic.gdx.Input$Keys: int E
com.badlogic.gdx.Input$Keys: int ENDCALL
com.badlogic.gdx.Input$Keys: int ENTER
com.badlogic.gdx.Input$Keys: int ENVELOPE
com.badlogic.gdx.Input$Keys: int EQUALS
com.badlogic.gdx.Input$Keys: int EXPLORER
com.badlogic.gdx.Input$Keys: int F
com.badlogic.gdx.Input$Keys: int FOCUS
com.badlogic.gdx.Input$Keys: int G
com.badlogic.gdx.Input$Keys: int GRAVE
com.badlogic.gdx.Input$Keys: int H
com.badlogic.gdx.Input$Keys: int HEADSETHOOK
com.badlogic.gdx.Input$Keys: int HOME
com.badlogic.gdx.Input$Keys: int I
com.badlogic.gdx.Input$Keys: int J
com.badlogic.gdx.Input$Keys: int K
com.badlogic.gdx.Input$Keys: int L
com.badlogic.gdx.Input$Keys: int LEFT_BRACKET
com.badlogic.gdx.Input$Keys: int M
com.badlogic.gdx.Input$Keys: int MEDIA_FAST_FORWARD
com.badlogic.gdx.Input$Keys: int MEDIA_NEXT
com.badlogic.gdx.Input$Keys: int MEDIA_PLAY_PAUSE
com.badlogic.gdx.Input$Keys: int MEDIA_PREVIOUS
com.badlogic.gdx.Input$Keys: int MEDIA_REWIND
com.badlogic.gdx.Input$Keys: int MEDIA_STOP
com.badlogic.gdx.Input$Keys: int MENU
com.badlogic.gdx.Input$Keys: int MINUS
com.badlogic.gdx.Input$Keys: int MUTE
com.badlogic.gdx.Input$Keys: int N
com.badlogic.gdx.Input$Keys: int NOTIFICATION
com.badlogic.gdx.Input$Keys: int NUM
com.badlogic.gdx.Input$Keys: int O
com.badlogic.gdx.Input$Keys: int P
com.badlogic.gdx.Input$Keys: int PERIOD
com.badlogic.gdx.Input$Keys: int PLUS
com.badlogic.gdx.Input$Keys: int POUND
com.badlogic.gdx.Input$Keys: int POWER
com.badlogic.gdx.Input$Keys: int Q
com.badlogic.gdx.Input$Keys: int R
com.badlogic.gdx.Input$Keys: int RIGHT_BRACKET
com.badlogic.gdx.Input$Keys: int S
com.badlogic.gdx.Input$Keys: int SEARCH
com.badlogic.gdx.Input$Keys: int SEMICOLON
com.badlogic.gdx.Input$Keys: int SHIFT_LEFT
com.badlogic.gdx.Input$Keys: int SHIFT_RIGHT
com.badlogic.gdx.Input$Keys: int SLASH
com.badlogic.gdx.Input$Keys: int SOFT_LEFT
com.badlogic.gdx.Input$Keys: int SOFT_RIGHT
com.badlogic.gdx.Input$Keys: int SPACE
com.badlogic.gdx.Input$Keys: int STAR
com.badlogic.gdx.Input$Keys: int SYM
com.badlogic.gdx.Input$Keys: int T
com.badlogic.gdx.Input$Keys: int TAB
com.badlogic.gdx.Input$Keys: int U
com.badlogic.gdx.Input$Keys: int UNKNOWN
com.badlogic.gdx.Input$Keys: int V
com.badlogic.gdx.Input$Keys: int VOLUME_DOWN
com.badlogic.gdx.Input$Keys: int VOLUME_UP
com.badlogic.gdx.Input$Keys: int W
com.badlogic.gdx.Input$Keys: int X
com.badlogic.gdx.Input$Keys: int Y
com.badlogic.gdx.Input$Keys: int Z
com.badlogic.gdx.Input$Keys: int META_ALT_LEFT_ON
com.badlogic.gdx.Input$Keys: int META_ALT_ON
com.badlogic.gdx.Input$Keys: int META_ALT_RIGHT_ON
com.badlogic.gdx.Input$Keys: int META_SHIFT_LEFT_ON
com.badlogic.gdx.Input$Keys: int META_SHIFT_ON
com.badlogic.gdx.Input$Keys: int META_SHIFT_RIGHT_ON
com.badlogic.gdx.Input$Keys: int META_SYM_ON
com.badlogic.gdx.Input$Keys: int CONTROL_LEFT
com.badlogic.gdx.Input$Keys: int CONTROL_RIGHT
com.badlogic.gdx.Input$Keys: int ESCAPE
com.badlogic.gdx.Input$Keys: int END
com.badlogic.gdx.Input$Keys: int INSERT
com.badlogic.gdx.Input$Keys: int PAGE_UP
com.badlogic.gdx.Input$Keys: int PAGE_DOWN
com.badlogic.gdx.Input$Keys: int PICTSYMBOLS
com.badlogic.gdx.Input$Keys: int SWITCH_CHARSET
com.badlogic.gdx.Input$Keys: int BUTTON_CIRCLE
com.badlogic.gdx.Input$Keys: int BUTTON_A
com.badlogic.gdx.Input$Keys: int BUTTON_B
com.badlogic.gdx.Input$Keys: int BUTTON_C
com.badlogic.gdx.Input$Keys: int BUTTON_X
com.badlogic.gdx.Input$Keys: int BUTTON_Y
com.badlogic.gdx.Input$Keys: int BUTTON_Z
com.badlogic.gdx.Input$Keys: int BUTTON_L1
com.badlogic.gdx.Input$Keys: int BUTTON_R1
com.badlogic.gdx.Input$Keys: int BUTTON_L2
com.badlogic.gdx.Input$Keys: int BUTTON_R2
com.badlogic.gdx.Input$Keys: int BUTTON_THUMBL
com.badlogic.gdx.Input$Keys: int BUTTON_THUMBR
com.badlogic.gdx.Input$Keys: int BUTTON_START
com.badlogic.gdx.Input$Keys: int BUTTON_SELECT
com.badlogic.gdx.Input$Keys: int BUTTON_MODE
com.badlogic.gdx.Input$Keys: int NUMPAD_0
com.badlogic.gdx.Input$Keys: int NUMPAD_1
com.badlogic.gdx.Input$Keys: int NUMPAD_2
com.badlogic.gdx.Input$Keys: int NUMPAD_3
com.badlogic.gdx.Input$Keys: int NUMPAD_4
com.badlogic.gdx.Input$Keys: int NUMPAD_5
com.badlogic.gdx.Input$Keys: int NUMPAD_6
com.badlogic.gdx.Input$Keys: int NUMPAD_7
com.badlogic.gdx.Input$Keys: int NUMPAD_8
com.badlogic.gdx.Input$Keys: int NUMPAD_9
com.badlogic.gdx.Input$Keys: int COLON
com.badlogic.gdx.Input$Keys: int F1
com.badlogic.gdx.Input$Keys: int F2
com.badlogic.gdx.Input$Keys: int F3
com.badlogic.gdx.Input$Keys: int F4
com.badlogic.gdx.Input$Keys: int F5
com.badlogic.gdx.Input$Keys: int F6
com.badlogic.gdx.Input$Keys: int F7
com.badlogic.gdx.Input$Keys: int F8
com.badlogic.gdx.Input$Keys: int F9
com.badlogic.gdx.Input$Keys: int F10
com.badlogic.gdx.Input$Keys: int F11
com.badlogic.gdx.Input$Keys: int F12
com.badlogic.gdx.Input$Keys: com.badlogic.gdx.utils.ObjectIntMap keyNames
com.badlogic.gdx.Input$Keys: Input$Keys()
com.badlogic.gdx.Input$Keys: java.lang.String toString(int)
com.badlogic.gdx.Input$Keys: int valueOf(java.lang.String)
com.badlogic.gdx.Input$Keys: void initializeKeyNames()
com.badlogic.gdx.Input$Orientation
com.badlogic.gdx.Input$Orientation: com.badlogic.gdx.Input$Orientation Landscape
com.badlogic.gdx.Input$Orientation: com.badlogic.gdx.Input$Orientation Portrait
com.badlogic.gdx.Input$Orientation: com.badlogic.gdx.Input$Orientation[] $VALUES
com.badlogic.gdx.Input$Orientation: com.badlogic.gdx.Input$Orientation[] values()
com.badlogic.gdx.Input$Orientation: com.badlogic.gdx.Input$Orientation valueOf(java.lang.String)
com.badlogic.gdx.Input$Orientation: Input$Orientation(java.lang.String,int)
com.badlogic.gdx.Input$Orientation: void <clinit>()
com.badlogic.gdx.Input$Peripheral
com.badlogic.gdx.Input$Peripheral: com.badlogic.gdx.Input$Peripheral HardwareKeyboard
com.badlogic.gdx.Input$Peripheral: com.badlogic.gdx.Input$Peripheral OnscreenKeyboard
com.badlogic.gdx.Input$Peripheral: com.badlogic.gdx.Input$Peripheral MultitouchScreen
com.badlogic.gdx.Input$Peripheral: com.badlogic.gdx.Input$Peripheral Accelerometer
com.badlogic.gdx.Input$Peripheral: com.badlogic.gdx.Input$Peripheral Compass
com.badlogic.gdx.Input$Peripheral: com.badlogic.gdx.Input$Peripheral Vibrator
com.badlogic.gdx.Input$Peripheral: com.badlogic.gdx.Input$Peripheral[] $VALUES
com.badlogic.gdx.Input$Peripheral: com.badlogic.gdx.Input$Peripheral[] values()
com.badlogic.gdx.Input$Peripheral: com.badlogic.gdx.Input$Peripheral valueOf(java.lang.String)
com.badlogic.gdx.Input$Peripheral: Input$Peripheral(java.lang.String,int)
com.badlogic.gdx.Input$Peripheral: void <clinit>()
com.badlogic.gdx.Input$TextInputListener
com.badlogic.gdx.Input$TextInputListener: void input(java.lang.String)
com.badlogic.gdx.Input$TextInputListener: void canceled()
com.badlogic.gdx.InputAdapter
com.badlogic.gdx.InputAdapter: InputAdapter()
com.badlogic.gdx.InputAdapter: boolean keyDown(int)
com.badlogic.gdx.InputAdapter: boolean keyUp(int)
com.badlogic.gdx.InputAdapter: boolean keyTyped(char)
com.badlogic.gdx.InputAdapter: boolean touchDown(int,int,int,int)
com.badlogic.gdx.InputAdapter: boolean touchUp(int,int,int,int)
com.badlogic.gdx.InputAdapter: boolean touchDragged(int,int,int)
com.badlogic.gdx.InputAdapter: boolean mouseMoved(int,int)
com.badlogic.gdx.InputAdapter: boolean scrolled(int)
com.badlogic.gdx.InputMultiplexer
com.badlogic.gdx.InputMultiplexer: com.badlogic.gdx.utils.Array processors
com.badlogic.gdx.InputMultiplexer: InputMultiplexer()
com.badlogic.gdx.InputMultiplexer: InputMultiplexer(com.badlogic.gdx.InputProcessor[])
com.badlogic.gdx.InputMultiplexer: void addProcessor(int,com.badlogic.gdx.InputProcessor)
com.badlogic.gdx.InputMultiplexer: void removeProcessor(int)
com.badlogic.gdx.InputMultiplexer: void addProcessor(com.badlogic.gdx.InputProcessor)
com.badlogic.gdx.InputMultiplexer: void removeProcessor(com.badlogic.gdx.InputProcessor)
com.badlogic.gdx.InputMultiplexer: int size()
com.badlogic.gdx.InputMultiplexer: void clear()
com.badlogic.gdx.InputMultiplexer: void setProcessors(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.InputMultiplexer: com.badlogic.gdx.utils.Array getProcessors()
com.badlogic.gdx.InputMultiplexer: boolean keyDown(int)
com.badlogic.gdx.InputMultiplexer: boolean keyUp(int)
com.badlogic.gdx.InputMultiplexer: boolean keyTyped(char)
com.badlogic.gdx.InputMultiplexer: boolean touchDown(int,int,int,int)
com.badlogic.gdx.InputMultiplexer: boolean touchUp(int,int,int,int)
com.badlogic.gdx.InputMultiplexer: boolean touchDragged(int,int,int)
com.badlogic.gdx.InputMultiplexer: boolean mouseMoved(int,int)
com.badlogic.gdx.InputMultiplexer: boolean scrolled(int)
com.badlogic.gdx.InputProcessor
com.badlogic.gdx.InputProcessor: boolean keyDown(int)
com.badlogic.gdx.InputProcessor: boolean keyUp(int)
com.badlogic.gdx.InputProcessor: boolean keyTyped(char)
com.badlogic.gdx.InputProcessor: boolean touchDown(int,int,int,int)
com.badlogic.gdx.InputProcessor: boolean touchUp(int,int,int,int)
com.badlogic.gdx.InputProcessor: boolean touchDragged(int,int,int)
com.badlogic.gdx.InputProcessor: boolean mouseMoved(int,int)
com.badlogic.gdx.InputProcessor: boolean scrolled(int)
com.badlogic.gdx.InputProcessorQueue
com.badlogic.gdx.InputProcessorQueue: int KEY_DOWN
com.badlogic.gdx.InputProcessorQueue: int KEY_UP
com.badlogic.gdx.InputProcessorQueue: int KEY_TYPED
com.badlogic.gdx.InputProcessorQueue: int TOUCH_DOWN
com.badlogic.gdx.InputProcessorQueue: int TOUCH_UP
com.badlogic.gdx.InputProcessorQueue: int TOUCH_DRAGGED
com.badlogic.gdx.InputProcessorQueue: int MOUSE_MOVED
com.badlogic.gdx.InputProcessorQueue: int SCROLLED
com.badlogic.gdx.InputProcessorQueue: com.badlogic.gdx.InputProcessor processor
com.badlogic.gdx.InputProcessorQueue: com.badlogic.gdx.utils.IntArray queue
com.badlogic.gdx.InputProcessorQueue: com.badlogic.gdx.utils.IntArray processingQueue
com.badlogic.gdx.InputProcessorQueue: long currentEventTime
com.badlogic.gdx.InputProcessorQueue: InputProcessorQueue()
com.badlogic.gdx.InputProcessorQueue: InputProcessorQueue(com.badlogic.gdx.InputProcessor)
com.badlogic.gdx.InputProcessorQueue: void setProcessor(com.badlogic.gdx.InputProcessor)
com.badlogic.gdx.InputProcessorQueue: com.badlogic.gdx.InputProcessor getProcessor()
com.badlogic.gdx.InputProcessorQueue: void drain()
com.badlogic.gdx.InputProcessorQueue: void queueTime()
com.badlogic.gdx.InputProcessorQueue: boolean keyDown(int)
com.badlogic.gdx.InputProcessorQueue: boolean keyUp(int)
com.badlogic.gdx.InputProcessorQueue: boolean keyTyped(char)
com.badlogic.gdx.InputProcessorQueue: boolean touchDown(int,int,int,int)
com.badlogic.gdx.InputProcessorQueue: boolean touchUp(int,int,int,int)
com.badlogic.gdx.InputProcessorQueue: boolean touchDragged(int,int,int)
com.badlogic.gdx.InputProcessorQueue: boolean mouseMoved(int,int)
com.badlogic.gdx.InputProcessorQueue: boolean scrolled(int)
com.badlogic.gdx.InputProcessorQueue: long getCurrentEventTime()
com.badlogic.gdx.LifecycleListener
com.badlogic.gdx.LifecycleListener: void pause()
com.badlogic.gdx.LifecycleListener: void resume()
com.badlogic.gdx.LifecycleListener: void dispose()
com.badlogic.gdx.Net
com.badlogic.gdx.Net: void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
com.badlogic.gdx.Net: void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest)
com.badlogic.gdx.Net: com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
com.badlogic.gdx.Net: com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints)
com.badlogic.gdx.Net: void openURI(java.lang.String)
com.badlogic.gdx.Net$HttpMethods
com.badlogic.gdx.Net$HttpMethods: java.lang.String GET
com.badlogic.gdx.Net$HttpMethods: java.lang.String POST
com.badlogic.gdx.Net$HttpMethods: java.lang.String PUT
com.badlogic.gdx.Net$HttpMethods: java.lang.String DELETE
com.badlogic.gdx.Net$HttpRequest
com.badlogic.gdx.Net$HttpRequest: java.lang.String httpMethod
com.badlogic.gdx.Net$HttpRequest: java.lang.String url
com.badlogic.gdx.Net$HttpRequest: java.util.Map headers
com.badlogic.gdx.Net$HttpRequest: int timeOut
com.badlogic.gdx.Net$HttpRequest: java.lang.String content
com.badlogic.gdx.Net$HttpRequest: java.io.InputStream contentStream
com.badlogic.gdx.Net$HttpRequest: long contentLength
com.badlogic.gdx.Net$HttpRequest: Net$HttpRequest(java.lang.String)
com.badlogic.gdx.Net$HttpRequest: void setUrl(java.lang.String)
com.badlogic.gdx.Net$HttpRequest: void setHeader(java.lang.String,java.lang.String)
com.badlogic.gdx.Net$HttpRequest: void setContent(java.lang.String)
com.badlogic.gdx.Net$HttpRequest: void setContent(java.io.InputStream,long)
com.badlogic.gdx.Net$HttpRequest: void setTimeOut(int)
com.badlogic.gdx.Net$HttpRequest: int getTimeOut()
com.badlogic.gdx.Net$HttpRequest: java.lang.String getMethod()
com.badlogic.gdx.Net$HttpRequest: java.lang.String getUrl()
com.badlogic.gdx.Net$HttpRequest: java.lang.String getContent()
com.badlogic.gdx.Net$HttpRequest: java.io.InputStream getContentStream()
com.badlogic.gdx.Net$HttpRequest: long getContentLength()
com.badlogic.gdx.Net$HttpRequest: java.util.Map getHeaders()
com.badlogic.gdx.Net$HttpResponse
com.badlogic.gdx.Net$HttpResponse: byte[] getResult()
com.badlogic.gdx.Net$HttpResponse: java.lang.String getResultAsString()
com.badlogic.gdx.Net$HttpResponse: java.io.InputStream getResultAsStream()
com.badlogic.gdx.Net$HttpResponse: com.badlogic.gdx.net.HttpStatus getStatus()
com.badlogic.gdx.Net$HttpResponse: java.lang.String getHeader(java.lang.String)
com.badlogic.gdx.Net$HttpResponse: java.util.Map getHeaders()
com.badlogic.gdx.Net$HttpResponseListener
com.badlogic.gdx.Net$HttpResponseListener: void handleHttpResponse(com.badlogic.gdx.Net$HttpResponse)
com.badlogic.gdx.Net$HttpResponseListener: void failed(java.lang.Throwable)
com.badlogic.gdx.Net$HttpResponseListener: void cancelled()
com.badlogic.gdx.Net$Protocol
com.badlogic.gdx.Net$Protocol: com.badlogic.gdx.Net$Protocol TCP
com.badlogic.gdx.Net$Protocol: com.badlogic.gdx.Net$Protocol[] $VALUES
com.badlogic.gdx.Net$Protocol: com.badlogic.gdx.Net$Protocol[] values()
com.badlogic.gdx.Net$Protocol: com.badlogic.gdx.Net$Protocol valueOf(java.lang.String)
com.badlogic.gdx.Net$Protocol: Net$Protocol(java.lang.String,int)
com.badlogic.gdx.Net$Protocol: void <clinit>()
com.badlogic.gdx.Preferences
com.badlogic.gdx.Preferences: void putBoolean(java.lang.String,boolean)
com.badlogic.gdx.Preferences: void putInteger(java.lang.String,int)
com.badlogic.gdx.Preferences: void putLong(java.lang.String,long)
com.badlogic.gdx.Preferences: void putFloat(java.lang.String,float)
com.badlogic.gdx.Preferences: void putString(java.lang.String,java.lang.String)
com.badlogic.gdx.Preferences: void put(java.util.Map)
com.badlogic.gdx.Preferences: boolean getBoolean(java.lang.String)
com.badlogic.gdx.Preferences: int getInteger(java.lang.String)
com.badlogic.gdx.Preferences: long getLong(java.lang.String)
com.badlogic.gdx.Preferences: float getFloat(java.lang.String)
com.badlogic.gdx.Preferences: java.lang.String getString(java.lang.String)
com.badlogic.gdx.Preferences: boolean getBoolean(java.lang.String,boolean)
com.badlogic.gdx.Preferences: int getInteger(java.lang.String,int)
com.badlogic.gdx.Preferences: long getLong(java.lang.String,long)
com.badlogic.gdx.Preferences: float getFloat(java.lang.String,float)
com.badlogic.gdx.Preferences: java.lang.String getString(java.lang.String,java.lang.String)
com.badlogic.gdx.Preferences: java.util.Map get()
com.badlogic.gdx.Preferences: boolean contains(java.lang.String)
com.badlogic.gdx.Preferences: void clear()
com.badlogic.gdx.Preferences: void remove(java.lang.String)
com.badlogic.gdx.Preferences: void flush()
com.badlogic.gdx.Screen
com.badlogic.gdx.Screen: void render(float)
com.badlogic.gdx.Screen: void resize(int,int)
com.badlogic.gdx.Screen: void show()
com.badlogic.gdx.Screen: void hide()
com.badlogic.gdx.Screen: void pause()
com.badlogic.gdx.Screen: void resume()
com.badlogic.gdx.Screen: void dispose()
com.badlogic.gdx.ScreenAdapter
com.badlogic.gdx.ScreenAdapter: ScreenAdapter()
com.badlogic.gdx.ScreenAdapter: void render(float)
com.badlogic.gdx.ScreenAdapter: void resize(int,int)
com.badlogic.gdx.ScreenAdapter: void show()
com.badlogic.gdx.ScreenAdapter: void hide()
com.badlogic.gdx.ScreenAdapter: void pause()
com.badlogic.gdx.ScreenAdapter: void resume()
com.badlogic.gdx.ScreenAdapter: void dispose()
com.badlogic.gdx.Version
com.badlogic.gdx.Version: java.lang.String VERSION
com.badlogic.gdx.Version: int MAJOR
com.badlogic.gdx.Version: int MINOR
com.badlogic.gdx.Version: int REVISION
com.badlogic.gdx.Version: Version()
com.badlogic.gdx.Version: boolean isHigher(int,int,int)
com.badlogic.gdx.Version: boolean isHigherEqual(int,int,int)
com.badlogic.gdx.Version: boolean isLower(int,int,int)
com.badlogic.gdx.Version: boolean isLowerEqual(int,int,int)
com.badlogic.gdx.Version: void <clinit>()
com.badlogic.gdx.assets.AssetDescriptor
com.badlogic.gdx.assets.AssetDescriptor: java.lang.String fileName
com.badlogic.gdx.assets.AssetDescriptor: java.lang.Class type
com.badlogic.gdx.assets.AssetDescriptor: com.badlogic.gdx.assets.AssetLoaderParameters params
com.badlogic.gdx.assets.AssetDescriptor: com.badlogic.gdx.files.FileHandle file
com.badlogic.gdx.assets.AssetDescriptor: AssetDescriptor(java.lang.String,java.lang.Class)
com.badlogic.gdx.assets.AssetDescriptor: AssetDescriptor(com.badlogic.gdx.files.FileHandle,java.lang.Class)
com.badlogic.gdx.assets.AssetDescriptor: AssetDescriptor(java.lang.String,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.AssetDescriptor: AssetDescriptor(com.badlogic.gdx.files.FileHandle,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.AssetDescriptor: java.lang.String toString()
com.badlogic.gdx.assets.AssetErrorListener
com.badlogic.gdx.assets.AssetErrorListener: void error(com.badlogic.gdx.assets.AssetDescriptor,java.lang.Throwable)
com.badlogic.gdx.assets.AssetLoaderParameters
com.badlogic.gdx.assets.AssetLoaderParameters: com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback loadedCallback
com.badlogic.gdx.assets.AssetLoaderParameters: AssetLoaderParameters()
com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback
com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback: void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class)
com.badlogic.gdx.assets.AssetLoadingTask
com.badlogic.gdx.assets.AssetLoadingTask: com.badlogic.gdx.assets.AssetManager manager
com.badlogic.gdx.assets.AssetLoadingTask: com.badlogic.gdx.assets.AssetDescriptor assetDesc
com.badlogic.gdx.assets.AssetLoadingTask: com.badlogic.gdx.assets.loaders.AssetLoader loader
com.badlogic.gdx.assets.AssetLoadingTask: com.badlogic.gdx.utils.async.AsyncExecutor executor
com.badlogic.gdx.assets.AssetLoadingTask: long startTime
com.badlogic.gdx.assets.AssetLoadingTask: boolean asyncDone
com.badlogic.gdx.assets.AssetLoadingTask: boolean dependenciesLoaded
com.badlogic.gdx.assets.AssetLoadingTask: com.badlogic.gdx.utils.Array dependencies
com.badlogic.gdx.assets.AssetLoadingTask: com.badlogic.gdx.utils.async.AsyncResult depsFuture
com.badlogic.gdx.assets.AssetLoadingTask: com.badlogic.gdx.utils.async.AsyncResult loadFuture
com.badlogic.gdx.assets.AssetLoadingTask: java.lang.Object asset
com.badlogic.gdx.assets.AssetLoadingTask: int ticks
com.badlogic.gdx.assets.AssetLoadingTask: boolean cancel
com.badlogic.gdx.assets.AssetLoadingTask: AssetLoadingTask(com.badlogic.gdx.assets.AssetManager,com.badlogic.gdx.assets.AssetDescriptor,com.badlogic.gdx.assets.loaders.AssetLoader,com.badlogic.gdx.utils.async.AsyncExecutor)
com.badlogic.gdx.assets.AssetLoadingTask: java.lang.Void call()
com.badlogic.gdx.assets.AssetLoadingTask: boolean update()
com.badlogic.gdx.assets.AssetLoadingTask: void handleSyncLoader()
com.badlogic.gdx.assets.AssetLoadingTask: void handleAsyncLoader()
com.badlogic.gdx.assets.AssetLoadingTask: com.badlogic.gdx.files.FileHandle resolve(com.badlogic.gdx.assets.loaders.AssetLoader,com.badlogic.gdx.assets.AssetDescriptor)
com.badlogic.gdx.assets.AssetLoadingTask: java.lang.Object getAsset()
com.badlogic.gdx.assets.AssetLoadingTask: java.lang.Object call()
com.badlogic.gdx.assets.AssetManager
com.badlogic.gdx.assets.AssetManager: com.badlogic.gdx.utils.ObjectMap assets
com.badlogic.gdx.assets.AssetManager: com.badlogic.gdx.utils.ObjectMap assetTypes
com.badlogic.gdx.assets.AssetManager: com.badlogic.gdx.utils.ObjectMap assetDependencies
com.badlogic.gdx.assets.AssetManager: com.badlogic.gdx.utils.ObjectSet injected
com.badlogic.gdx.assets.AssetManager: com.badlogic.gdx.utils.ObjectMap loaders
com.badlogic.gdx.assets.AssetManager: com.badlogic.gdx.utils.Array loadQueue
com.badlogic.gdx.assets.AssetManager: com.badlogic.gdx.utils.async.AsyncExecutor executor
com.badlogic.gdx.assets.AssetManager: java.util.Stack tasks
com.badlogic.gdx.assets.AssetManager: com.badlogic.gdx.assets.AssetErrorListener listener
com.badlogic.gdx.assets.AssetManager: int loaded
com.badlogic.gdx.assets.AssetManager: int toLoad
com.badlogic.gdx.assets.AssetManager: com.badlogic.gdx.utils.Logger log
com.badlogic.gdx.assets.AssetManager: AssetManager()
com.badlogic.gdx.assets.AssetManager: AssetManager(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.AssetManager: java.lang.Object get(java.lang.String)
com.badlogic.gdx.assets.AssetManager: java.lang.Object get(java.lang.String,java.lang.Class)
com.badlogic.gdx.assets.AssetManager: com.badlogic.gdx.utils.Array getAll(java.lang.Class,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.assets.AssetManager: java.lang.Object get(com.badlogic.gdx.assets.AssetDescriptor)
com.badlogic.gdx.assets.AssetManager: void unload(java.lang.String)
com.badlogic.gdx.assets.AssetManager: boolean containsAsset(java.lang.Object)
com.badlogic.gdx.assets.AssetManager: java.lang.String getAssetFileName(java.lang.Object)
com.badlogic.gdx.assets.AssetManager: boolean isLoaded(java.lang.String)
com.badlogic.gdx.assets.AssetManager: boolean isLoaded(java.lang.String,java.lang.Class)
com.badlogic.gdx.assets.AssetManager: com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class)
com.badlogic.gdx.assets.AssetManager: com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class,java.lang.String)
com.badlogic.gdx.assets.AssetManager: void load(java.lang.String,java.lang.Class)
com.badlogic.gdx.assets.AssetManager: void load(java.lang.String,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.AssetManager: void load(com.badlogic.gdx.assets.AssetDescriptor)
com.badlogic.gdx.assets.AssetManager: void disposeDependencies(java.lang.String)
com.badlogic.gdx.assets.AssetManager: boolean update()
com.badlogic.gdx.assets.AssetManager: boolean update(int)
com.badlogic.gdx.assets.AssetManager: void finishLoading()
com.badlogic.gdx.assets.AssetManager: void injectDependencies(java.lang.String,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.assets.AssetManager: void injectDependency(java.lang.String,com.badlogic.gdx.assets.AssetDescriptor)
com.badlogic.gdx.assets.AssetManager: void nextTask()
com.badlogic.gdx.assets.AssetManager: void addTask(com.badlogic.gdx.assets.AssetDescriptor)
com.badlogic.gdx.assets.AssetManager: void addAsset(java.lang.String,java.lang.Class,java.lang.Object)
com.badlogic.gdx.assets.AssetManager: boolean updateTask()
com.badlogic.gdx.assets.AssetManager: void incrementRefCountedDependencies(java.lang.String)
com.badlogic.gdx.assets.AssetManager: void handleTaskError(java.lang.Throwable)
com.badlogic.gdx.assets.AssetManager: void setLoader(java.lang.Class,com.badlogic.gdx.assets.loaders.AssetLoader)
com.badlogic.gdx.assets.AssetManager: void setLoader(java.lang.Class,java.lang.String,com.badlogic.gdx.assets.loaders.AssetLoader)
com.badlogic.gdx.assets.AssetManager: int getLoadedAssets()
com.badlogic.gdx.assets.AssetManager: int getQueuedAssets()
com.badlogic.gdx.assets.AssetManager: float getProgress()
com.badlogic.gdx.assets.AssetManager: void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener)
com.badlogic.gdx.assets.AssetManager: void dispose()
com.badlogic.gdx.assets.AssetManager: void clear()
com.badlogic.gdx.assets.AssetManager: com.badlogic.gdx.utils.Logger getLogger()
com.badlogic.gdx.assets.AssetManager: void setLogger(com.badlogic.gdx.utils.Logger)
com.badlogic.gdx.assets.AssetManager: int getReferenceCount(java.lang.String)
com.badlogic.gdx.assets.AssetManager: void setReferenceCount(java.lang.String,int)
com.badlogic.gdx.assets.AssetManager: java.lang.String getDiagnostics()
com.badlogic.gdx.assets.AssetManager: com.badlogic.gdx.utils.Array getAssetNames()
com.badlogic.gdx.assets.AssetManager: com.badlogic.gdx.utils.Array getDependencies(java.lang.String)
com.badlogic.gdx.assets.AssetManager: java.lang.Class getAssetType(java.lang.String)
com.badlogic.gdx.assets.RefCountedContainer
com.badlogic.gdx.assets.RefCountedContainer: java.lang.Object object
com.badlogic.gdx.assets.RefCountedContainer: int refCount
com.badlogic.gdx.assets.RefCountedContainer: RefCountedContainer(java.lang.Object)
com.badlogic.gdx.assets.RefCountedContainer: void incRefCount()
com.badlogic.gdx.assets.RefCountedContainer: void decRefCount()
com.badlogic.gdx.assets.RefCountedContainer: int getRefCount()
com.badlogic.gdx.assets.RefCountedContainer: void setRefCount(int)
com.badlogic.gdx.assets.RefCountedContainer: java.lang.Object getObject(java.lang.Class)
com.badlogic.gdx.assets.RefCountedContainer: void setObject(java.lang.Object)
com.badlogic.gdx.assets.loaders.AssetLoader
com.badlogic.gdx.assets.loaders.AssetLoader: com.badlogic.gdx.assets.loaders.FileHandleResolver resolver
com.badlogic.gdx.assets.loaders.AssetLoader: AssetLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.AssetLoader: com.badlogic.gdx.files.FileHandle resolve(java.lang.String)
com.badlogic.gdx.assets.loaders.AssetLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader: AsynchronousAssetLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader: java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.BitmapFontLoader
com.badlogic.gdx.assets.loaders.BitmapFontLoader: com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data
com.badlogic.gdx.assets.loaders.BitmapFontLoader: BitmapFontLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.BitmapFontLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter)
com.badlogic.gdx.assets.loaders.BitmapFontLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter)
com.badlogic.gdx.assets.loaders.BitmapFontLoader: com.badlogic.gdx.graphics.g2d.BitmapFont loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter)
com.badlogic.gdx.assets.loaders.BitmapFontLoader: java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.BitmapFontLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.BitmapFontLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter: boolean flip
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter: boolean genMipMaps
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter: com.badlogic.gdx.graphics.Texture$TextureFilter minFilter
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter: com.badlogic.gdx.graphics.Texture$TextureFilter magFilter
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter: com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData bitmapFontData
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter: BitmapFontLoader$BitmapFontParameter()
com.badlogic.gdx.assets.loaders.FileHandleResolver
com.badlogic.gdx.assets.loaders.FileHandleResolver: com.badlogic.gdx.files.FileHandle resolve(java.lang.String)
com.badlogic.gdx.assets.loaders.I18NBundleLoader
com.badlogic.gdx.assets.loaders.I18NBundleLoader: com.badlogic.gdx.utils.I18NBundle bundle
com.badlogic.gdx.assets.loaders.I18NBundleLoader: I18NBundleLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.I18NBundleLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter)
com.badlogic.gdx.assets.loaders.I18NBundleLoader: com.badlogic.gdx.utils.I18NBundle loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter)
com.badlogic.gdx.assets.loaders.I18NBundleLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter)
com.badlogic.gdx.assets.loaders.I18NBundleLoader: java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.I18NBundleLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.I18NBundleLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter
com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter: java.util.Locale locale
com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter: java.lang.String encoding
com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter: I18NBundleLoader$I18NBundleParameter()
com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter: I18NBundleLoader$I18NBundleParameter(java.util.Locale)
com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter: I18NBundleLoader$I18NBundleParameter(java.util.Locale,java.lang.String)
com.badlogic.gdx.assets.loaders.ModelLoader
com.badlogic.gdx.assets.loaders.ModelLoader: com.badlogic.gdx.utils.Array items
com.badlogic.gdx.assets.loaders.ModelLoader: com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters defaultParameters
com.badlogic.gdx.assets.loaders.ModelLoader: ModelLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.ModelLoader: com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters)
com.badlogic.gdx.assets.loaders.ModelLoader: com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.assets.loaders.ModelLoader: com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.utils.TextureProvider,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters)
com.badlogic.gdx.assets.loaders.ModelLoader: com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters)
com.badlogic.gdx.assets.loaders.ModelLoader: com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.utils.TextureProvider)
com.badlogic.gdx.assets.loaders.ModelLoader: com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.assets.loaders.ModelLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters)
com.badlogic.gdx.assets.loaders.ModelLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters)
com.badlogic.gdx.assets.loaders.ModelLoader: com.badlogic.gdx.graphics.g3d.Model loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters)
com.badlogic.gdx.assets.loaders.ModelLoader: java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.ModelLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.ModelLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters
com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters: com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter textureParameter
com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters: ModelLoader$ModelParameters()
com.badlogic.gdx.assets.loaders.MusicLoader
com.badlogic.gdx.assets.loaders.MusicLoader: com.badlogic.gdx.audio.Music music
com.badlogic.gdx.assets.loaders.MusicLoader: MusicLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.MusicLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter)
com.badlogic.gdx.assets.loaders.MusicLoader: com.badlogic.gdx.audio.Music loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter)
com.badlogic.gdx.assets.loaders.MusicLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter)
com.badlogic.gdx.assets.loaders.MusicLoader: java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.MusicLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.MusicLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter
com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter: MusicLoader$MusicParameter()
com.badlogic.gdx.assets.loaders.ParticleEffectLoader
com.badlogic.gdx.assets.loaders.ParticleEffectLoader: ParticleEffectLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.ParticleEffectLoader: com.badlogic.gdx.graphics.g2d.ParticleEffect load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter)
com.badlogic.gdx.assets.loaders.ParticleEffectLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter)
com.badlogic.gdx.assets.loaders.ParticleEffectLoader: java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.ParticleEffectLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter
com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter: java.lang.String atlasFile
com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter: java.lang.String atlasPrefix
com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter: com.badlogic.gdx.files.FileHandle imagesDir
com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter: ParticleEffectLoader$ParticleEffectParameter()
com.badlogic.gdx.assets.loaders.PixmapLoader
com.badlogic.gdx.assets.loaders.PixmapLoader: com.badlogic.gdx.graphics.Pixmap pixmap
com.badlogic.gdx.assets.loaders.PixmapLoader: PixmapLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.PixmapLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter)
com.badlogic.gdx.assets.loaders.PixmapLoader: com.badlogic.gdx.graphics.Pixmap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter)
com.badlogic.gdx.assets.loaders.PixmapLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter)
com.badlogic.gdx.assets.loaders.PixmapLoader: java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.PixmapLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.PixmapLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter
com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter: PixmapLoader$PixmapParameter()
com.badlogic.gdx.assets.loaders.SkinLoader
com.badlogic.gdx.assets.loaders.SkinLoader: SkinLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.SkinLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter)
com.badlogic.gdx.assets.loaders.SkinLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter)
com.badlogic.gdx.assets.loaders.SkinLoader: com.badlogic.gdx.scenes.scene2d.ui.Skin loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter)
com.badlogic.gdx.assets.loaders.SkinLoader: java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.SkinLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.SkinLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter: java.lang.String textureAtlasPath
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter: com.badlogic.gdx.utils.ObjectMap resources
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter: SkinLoader$SkinParameter()
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter: SkinLoader$SkinParameter(java.lang.String)
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter: SkinLoader$SkinParameter(java.lang.String,com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.assets.loaders.SoundLoader
com.badlogic.gdx.assets.loaders.SoundLoader: com.badlogic.gdx.audio.Sound sound
com.badlogic.gdx.assets.loaders.SoundLoader: SoundLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.SoundLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter)
com.badlogic.gdx.assets.loaders.SoundLoader: com.badlogic.gdx.audio.Sound loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter)
com.badlogic.gdx.assets.loaders.SoundLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter)
com.badlogic.gdx.assets.loaders.SoundLoader: java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.SoundLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.SoundLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter
com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter: SoundLoader$SoundParameter()
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader: SynchronousAssetLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader: java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.TextureAtlasLoader
com.badlogic.gdx.assets.loaders.TextureAtlasLoader: com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData data
com.badlogic.gdx.assets.loaders.TextureAtlasLoader: TextureAtlasLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.TextureAtlasLoader: com.badlogic.gdx.graphics.g2d.TextureAtlas load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter)
com.badlogic.gdx.assets.loaders.TextureAtlasLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter)
com.badlogic.gdx.assets.loaders.TextureAtlasLoader: java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.TextureAtlasLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter: boolean flip
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter: TextureAtlasLoader$TextureAtlasParameter()
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter: TextureAtlasLoader$TextureAtlasParameter(boolean)
com.badlogic.gdx.assets.loaders.TextureLoader
com.badlogic.gdx.assets.loaders.TextureLoader: com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo info
com.badlogic.gdx.assets.loaders.TextureLoader: TextureLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.assets.loaders.TextureLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter)
com.badlogic.gdx.assets.loaders.TextureLoader: com.badlogic.gdx.graphics.Texture loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter)
com.badlogic.gdx.assets.loaders.TextureLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter)
com.badlogic.gdx.assets.loaders.TextureLoader: java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.TextureLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.TextureLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo
com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo: java.lang.String filename
com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo: com.badlogic.gdx.graphics.TextureData data
com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo: com.badlogic.gdx.graphics.Texture texture
com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo: TextureLoader$TextureLoaderInfo()
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: com.badlogic.gdx.graphics.Pixmap$Format format
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: boolean genMipMaps
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: com.badlogic.gdx.graphics.Texture texture
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: com.badlogic.gdx.graphics.TextureData textureData
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: com.badlogic.gdx.graphics.Texture$TextureFilter minFilter
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: com.badlogic.gdx.graphics.Texture$TextureFilter magFilter
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: com.badlogic.gdx.graphics.Texture$TextureWrap wrapU
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: com.badlogic.gdx.graphics.Texture$TextureWrap wrapV
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter: TextureLoader$TextureParameter()
com.badlogic.gdx.assets.loaders.resolvers.AbsoluteFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.AbsoluteFileHandleResolver: AbsoluteFileHandleResolver()
com.badlogic.gdx.assets.loaders.resolvers.AbsoluteFileHandleResolver: com.badlogic.gdx.files.FileHandle resolve(java.lang.String)
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver: ExternalFileHandleResolver()
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver: com.badlogic.gdx.files.FileHandle resolve(java.lang.String)
com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver: InternalFileHandleResolver()
com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver: com.badlogic.gdx.files.FileHandle resolve(java.lang.String)
com.badlogic.gdx.assets.loaders.resolvers.LocalFileHandleResolver
com.badlogic.gdx.assets.loaders.resolvers.LocalFileHandleResolver: LocalFileHandleResolver()
com.badlogic.gdx.assets.loaders.resolvers.LocalFileHandleResolver: com.badlogic.gdx.files.FileHandle resolve(java.lang.String)
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver: com.badlogic.gdx.assets.loaders.FileHandleResolver baseResolver
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver: com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[] descriptors
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver: ResolutionFileResolver(com.badlogic.gdx.assets.loaders.FileHandleResolver,com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[])
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver: com.badlogic.gdx.files.FileHandle resolve(java.lang.String)
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver: java.lang.String resolve(com.badlogic.gdx.files.FileHandle,java.lang.String)
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver: com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution choose(com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[])
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution: int portraitWidth
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution: int portraitHeight
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution: java.lang.String suffix
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution: ResolutionFileResolver$Resolution(int,int,java.lang.String)
com.badlogic.gdx.audio.AudioDevice
com.badlogic.gdx.audio.AudioDevice: boolean isMono()
com.badlogic.gdx.audio.AudioDevice: void writeSamples(short[],int,int)
com.badlogic.gdx.audio.AudioDevice: void writeSamples(float[],int,int)
com.badlogic.gdx.audio.AudioDevice: int getLatency()
com.badlogic.gdx.audio.AudioDevice: void dispose()
com.badlogic.gdx.audio.AudioDevice: void setVolume(float)
com.badlogic.gdx.audio.AudioRecorder
com.badlogic.gdx.audio.AudioRecorder: void read(short[],int,int)
com.badlogic.gdx.audio.AudioRecorder: void dispose()
com.badlogic.gdx.audio.Music
com.badlogic.gdx.audio.Music: void play()
com.badlogic.gdx.audio.Music: void pause()
com.badlogic.gdx.audio.Music: void stop()
com.badlogic.gdx.audio.Music: boolean isPlaying()
com.badlogic.gdx.audio.Music: void setLooping(boolean)
com.badlogic.gdx.audio.Music: boolean isLooping()
com.badlogic.gdx.audio.Music: void setVolume(float)
com.badlogic.gdx.audio.Music: float getVolume()
com.badlogic.gdx.audio.Music: void setPan(float,float)
com.badlogic.gdx.audio.Music: float getPosition()
com.badlogic.gdx.audio.Music: void dispose()
com.badlogic.gdx.audio.Music: void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener)
com.badlogic.gdx.audio.Music$OnCompletionListener
com.badlogic.gdx.audio.Music$OnCompletionListener: void onCompletion(com.badlogic.gdx.audio.Music)
com.badlogic.gdx.audio.Sound
com.badlogic.gdx.audio.Sound: long play()
com.badlogic.gdx.audio.Sound: long play(float)
com.badlogic.gdx.audio.Sound: long play(float,float,float)
com.badlogic.gdx.audio.Sound: long loop()
com.badlogic.gdx.audio.Sound: long loop(float)
com.badlogic.gdx.audio.Sound: long loop(float,float,float)
com.badlogic.gdx.audio.Sound: void stop()
com.badlogic.gdx.audio.Sound: void pause()
com.badlogic.gdx.audio.Sound: void resume()
com.badlogic.gdx.audio.Sound: void dispose()
com.badlogic.gdx.audio.Sound: void stop(long)
com.badlogic.gdx.audio.Sound: void pause(long)
com.badlogic.gdx.audio.Sound: void resume(long)
com.badlogic.gdx.audio.Sound: void setLooping(long,boolean)
com.badlogic.gdx.audio.Sound: void setPitch(long,float)
com.badlogic.gdx.audio.Sound: void setVolume(long,float)
com.badlogic.gdx.audio.Sound: void setPan(long,float,float)
com.badlogic.gdx.audio.Sound: void setPriority(long,int)
com.badlogic.gdx.backends.android.AndroidApplication
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidGraphics graphics
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidInput input
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidAudio audio
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidFiles files
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidNet net
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.ApplicationListener listener
com.badlogic.gdx.backends.android.AndroidApplication: android.os.Handler handler
com.badlogic.gdx.backends.android.AndroidApplication: boolean firstResume
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.utils.Array runnables
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.utils.Array executedRunnables
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.utils.Array lifecycleListeners
com.badlogic.gdx.backends.android.AndroidApplication: int logLevel
com.badlogic.gdx.backends.android.AndroidApplication: boolean useImmersiveMode
com.badlogic.gdx.backends.android.AndroidApplication: boolean hideStatusBar
com.badlogic.gdx.backends.android.AndroidApplication: int wasFocusChanged
com.badlogic.gdx.backends.android.AndroidApplication: boolean isWaitingForAudio
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidClipboard clipboard
com.badlogic.gdx.backends.android.AndroidApplication: AndroidApplication()
com.badlogic.gdx.backends.android.AndroidApplication: void initialize(com.badlogic.gdx.ApplicationListener)
com.badlogic.gdx.backends.android.AndroidApplication: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)
com.badlogic.gdx.backends.android.AndroidApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.backends.android.AndroidApplication: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)
com.badlogic.gdx.backends.android.AndroidApplication: android.widget.FrameLayout$LayoutParams createLayoutParams()
com.badlogic.gdx.backends.android.AndroidApplication: void createWakeLock(boolean)
com.badlogic.gdx.backends.android.AndroidApplication: void hideStatusBar(boolean)
com.badlogic.gdx.backends.android.AndroidApplication: void onWindowFocusChanged(boolean)
com.badlogic.gdx.backends.android.AndroidApplication: void useImmersiveMode(boolean)
com.badlogic.gdx.backends.android.AndroidApplication: void onPause()
com.badlogic.gdx.backends.android.AndroidApplication: void onResume()
com.badlogic.gdx.backends.android.AndroidApplication: void onDestroy()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.ApplicationListener getApplicationListener()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.Audio getAudio()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.Files getFiles()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.Graphics getGraphics()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.backends.android.AndroidInput getInput()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.Net getNet()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.Application$ApplicationType getType()
com.badlogic.gdx.backends.android.AndroidApplication: int getVersion()
com.badlogic.gdx.backends.android.AndroidApplication: long getJavaHeap()
com.badlogic.gdx.backends.android.AndroidApplication: long getNativeHeap()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.Preferences getPreferences(java.lang.String)
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.utils.Clipboard getClipboard()
com.badlogic.gdx.backends.android.AndroidApplication: void postRunnable(java.lang.Runnable)
com.badlogic.gdx.backends.android.AndroidApplication: void onConfigurationChanged(android.content.res.Configuration)
com.badlogic.gdx.backends.android.AndroidApplication: void exit()
com.badlogic.gdx.backends.android.AndroidApplication: void debug(java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidApplication: void debug(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.backends.android.AndroidApplication: void log(java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidApplication: void log(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.backends.android.AndroidApplication: void error(java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidApplication: void error(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.backends.android.AndroidApplication: void setLogLevel(int)
com.badlogic.gdx.backends.android.AndroidApplication: int getLogLevel()
com.badlogic.gdx.backends.android.AndroidApplication: void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.backends.android.AndroidApplication: void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.backends.android.AndroidApplication: android.content.Context getContext()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.utils.Array getRunnables()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.utils.Array getExecutedRunnables()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.utils.Array getLifecycleListeners()
com.badlogic.gdx.backends.android.AndroidApplication: android.view.Window getApplicationWindow()
com.badlogic.gdx.backends.android.AndroidApplication: android.os.Handler getHandler()
com.badlogic.gdx.backends.android.AndroidApplication: com.badlogic.gdx.Input getInput()
com.badlogic.gdx.backends.android.AndroidApplication: void <clinit>()
com.badlogic.gdx.backends.android.AndroidApplication$1
com.badlogic.gdx.backends.android.AndroidApplication$1: com.badlogic.gdx.backends.android.AndroidApplication this$0
com.badlogic.gdx.backends.android.AndroidApplication$1: AndroidApplication$1(com.badlogic.gdx.backends.android.AndroidApplication)
com.badlogic.gdx.backends.android.AndroidApplication$1: void resume()
com.badlogic.gdx.backends.android.AndroidApplication$1: void pause()
com.badlogic.gdx.backends.android.AndroidApplication$1: void dispose()
com.badlogic.gdx.backends.android.AndroidApplication$2
com.badlogic.gdx.backends.android.AndroidApplication$2: com.badlogic.gdx.backends.android.AndroidApplication this$0
com.badlogic.gdx.backends.android.AndroidApplication$2: AndroidApplication$2(com.badlogic.gdx.backends.android.AndroidApplication)
com.badlogic.gdx.backends.android.AndroidApplication$2: void run()
com.badlogic.gdx.backends.android.AndroidApplicationBase
com.badlogic.gdx.backends.android.AndroidApplicationBase: int MINIMUM_SDK
com.badlogic.gdx.backends.android.AndroidApplicationBase: android.content.Context getContext()
com.badlogic.gdx.backends.android.AndroidApplicationBase: com.badlogic.gdx.utils.Array getRunnables()
com.badlogic.gdx.backends.android.AndroidApplicationBase: com.badlogic.gdx.utils.Array getExecutedRunnables()
com.badlogic.gdx.backends.android.AndroidApplicationBase: void runOnUiThread(java.lang.Runnable)
com.badlogic.gdx.backends.android.AndroidApplicationBase: void startActivity(android.content.Intent)
com.badlogic.gdx.backends.android.AndroidApplicationBase: com.badlogic.gdx.backends.android.AndroidInput getInput()
com.badlogic.gdx.backends.android.AndroidApplicationBase: com.badlogic.gdx.utils.Array getLifecycleListeners()
com.badlogic.gdx.backends.android.AndroidApplicationBase: android.view.Window getApplicationWindow()
com.badlogic.gdx.backends.android.AndroidApplicationBase: android.view.WindowManager getWindowManager()
com.badlogic.gdx.backends.android.AndroidApplicationBase: void useImmersiveMode(boolean)
com.badlogic.gdx.backends.android.AndroidApplicationBase: android.os.Handler getHandler()
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int r
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int g
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int b
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int a
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int depth
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int stencil
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int numSamples
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean useAccelerometer
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean useCompass
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int touchSleepTime
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean useWakelock
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean hideStatusBar
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean disableAudio
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: int maxSimultaneousSounds
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean getTouchEventsForLiveWallpaper
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean useImmersiveMode
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: boolean useGLSurfaceView20API18
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration: AndroidApplicationConfiguration()
com.badlogic.gdx.backends.android.AndroidAudio
com.badlogic.gdx.backends.android.AndroidAudio: android.media.SoundPool soundPool
com.badlogic.gdx.backends.android.AndroidAudio: android.media.AudioManager manager
com.badlogic.gdx.backends.android.AndroidAudio: java.util.List musics
com.badlogic.gdx.backends.android.AndroidAudio: AndroidAudio(android.content.Context,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.backends.android.AndroidAudio: void pause()
com.badlogic.gdx.backends.android.AndroidAudio: void resume()
com.badlogic.gdx.backends.android.AndroidAudio: com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean)
com.badlogic.gdx.backends.android.AndroidAudio: com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.backends.android.AndroidAudio: com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.backends.android.AndroidAudio: com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean)
com.badlogic.gdx.backends.android.AndroidAudio: void dispose()
com.badlogic.gdx.backends.android.AndroidAudioDevice
com.badlogic.gdx.backends.android.AndroidAudioDevice: android.media.AudioTrack track
com.badlogic.gdx.backends.android.AndroidAudioDevice: short[] buffer
com.badlogic.gdx.backends.android.AndroidAudioDevice: boolean isMono
com.badlogic.gdx.backends.android.AndroidAudioDevice: int latency
com.badlogic.gdx.backends.android.AndroidAudioDevice: AndroidAudioDevice(int,boolean)
com.badlogic.gdx.backends.android.AndroidAudioDevice: void dispose()
com.badlogic.gdx.backends.android.AndroidAudioDevice: boolean isMono()
com.badlogic.gdx.backends.android.AndroidAudioDevice: void writeSamples(short[],int,int)
com.badlogic.gdx.backends.android.AndroidAudioDevice: void writeSamples(float[],int,int)
com.badlogic.gdx.backends.android.AndroidAudioDevice: int getLatency()
com.badlogic.gdx.backends.android.AndroidAudioDevice: void setVolume(float)
com.badlogic.gdx.backends.android.AndroidAudioRecorder
com.badlogic.gdx.backends.android.AndroidAudioRecorder: android.media.AudioRecord recorder
com.badlogic.gdx.backends.android.AndroidAudioRecorder: AndroidAudioRecorder(int,boolean)
com.badlogic.gdx.backends.android.AndroidAudioRecorder: void dispose()
com.badlogic.gdx.backends.android.AndroidAudioRecorder: void read(short[],int,int)
com.badlogic.gdx.backends.android.AndroidClipboard
com.badlogic.gdx.backends.android.AndroidClipboard: android.content.Context context
com.badlogic.gdx.backends.android.AndroidClipboard: AndroidClipboard(android.content.Context)
com.badlogic.gdx.backends.android.AndroidClipboard: java.lang.String getContents()
com.badlogic.gdx.backends.android.AndroidClipboard: void setContents(java.lang.String)
com.badlogic.gdx.backends.android.AndroidClipboard$1
com.badlogic.gdx.backends.android.AndroidClipboard$1: java.lang.String val$contents
com.badlogic.gdx.backends.android.AndroidClipboard$1: com.badlogic.gdx.backends.android.AndroidClipboard this$0
com.badlogic.gdx.backends.android.AndroidClipboard$1: AndroidClipboard$1(com.badlogic.gdx.backends.android.AndroidClipboard,java.lang.String)
com.badlogic.gdx.backends.android.AndroidClipboard$1: void run()
com.badlogic.gdx.backends.android.AndroidDaydream
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.backends.android.AndroidGraphics graphics
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.backends.android.AndroidInput input
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.backends.android.AndroidAudio audio
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.backends.android.AndroidFiles files
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.backends.android.AndroidNet net
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.ApplicationListener listener
com.badlogic.gdx.backends.android.AndroidDaydream: android.os.Handler handler
com.badlogic.gdx.backends.android.AndroidDaydream: boolean firstResume
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.utils.Array runnables
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.utils.Array executedRunnables
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.utils.Array lifecycleListeners
com.badlogic.gdx.backends.android.AndroidDaydream: int logLevel
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.backends.android.AndroidClipboard clipboard
com.badlogic.gdx.backends.android.AndroidDaydream: AndroidDaydream()
com.badlogic.gdx.backends.android.AndroidDaydream: void initialize(com.badlogic.gdx.ApplicationListener)
com.badlogic.gdx.backends.android.AndroidDaydream: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.backends.android.AndroidDaydream: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)
com.badlogic.gdx.backends.android.AndroidDaydream: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.backends.android.AndroidDaydream: void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean)
com.badlogic.gdx.backends.android.AndroidDaydream: android.widget.FrameLayout$LayoutParams createLayoutParams()
com.badlogic.gdx.backends.android.AndroidDaydream: void createWakeLock(boolean)
com.badlogic.gdx.backends.android.AndroidDaydream: void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.backends.android.AndroidDaydream: void onDreamingStopped()
com.badlogic.gdx.backends.android.AndroidDaydream: void onDreamingStarted()
com.badlogic.gdx.backends.android.AndroidDaydream: void onDetachedFromWindow()
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.ApplicationListener getApplicationListener()
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.Audio getAudio()
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.Files getFiles()
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.Graphics getGraphics()
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.backends.android.AndroidInput getInput()
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.Net getNet()
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.Application$ApplicationType getType()
com.badlogic.gdx.backends.android.AndroidDaydream: int getVersion()
com.badlogic.gdx.backends.android.AndroidDaydream: long getJavaHeap()
com.badlogic.gdx.backends.android.AndroidDaydream: long getNativeHeap()
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.Preferences getPreferences(java.lang.String)
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.utils.Clipboard getClipboard()
com.badlogic.gdx.backends.android.AndroidDaydream: void postRunnable(java.lang.Runnable)
com.badlogic.gdx.backends.android.AndroidDaydream: void onConfigurationChanged(android.content.res.Configuration)
com.badlogic.gdx.backends.android.AndroidDaydream: void exit()
com.badlogic.gdx.backends.android.AndroidDaydream: void debug(java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidDaydream: void debug(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.backends.android.AndroidDaydream: void log(java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidDaydream: void log(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.backends.android.AndroidDaydream: void error(java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidDaydream: void error(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.backends.android.AndroidDaydream: void setLogLevel(int)
com.badlogic.gdx.backends.android.AndroidDaydream: int getLogLevel()
com.badlogic.gdx.backends.android.AndroidDaydream: void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.backends.android.AndroidDaydream: void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.backends.android.AndroidDaydream: android.content.Context getContext()
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.utils.Array getRunnables()
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.utils.Array getExecutedRunnables()
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.utils.Array getLifecycleListeners()
com.badlogic.gdx.backends.android.AndroidDaydream: android.view.Window getApplicationWindow()
com.badlogic.gdx.backends.android.AndroidDaydream: android.os.Handler getHandler()
com.badlogic.gdx.backends.android.AndroidDaydream: void runOnUiThread(java.lang.Runnable)
com.badlogic.gdx.backends.android.AndroidDaydream: void useImmersiveMode(boolean)
com.badlogic.gdx.backends.android.AndroidDaydream: com.badlogic.gdx.Input getInput()
com.badlogic.gdx.backends.android.AndroidDaydream: void <clinit>()
com.badlogic.gdx.backends.android.AndroidDaydream$1
com.badlogic.gdx.backends.android.AndroidDaydream$1: com.badlogic.gdx.backends.android.AndroidDaydream this$0
com.badlogic.gdx.backends.android.AndroidDaydream$1: AndroidDaydream$1(com.badlogic.gdx.backends.android.AndroidDaydream)
com.badlogic.gdx.backends.android.AndroidDaydream$1: void resume()
com.badlogic.gdx.backends.android.AndroidDaydream$1: void pause()
com.badlogic.gdx.backends.android.AndroidDaydream$1: void dispose()
com.badlogic.gdx.backends.android.AndroidDaydream$2
com.badlogic.gdx.backends.android.AndroidDaydream$2: com.badlogic.gdx.backends.android.AndroidDaydream this$0
com.badlogic.gdx.backends.android.AndroidDaydream$2: AndroidDaydream$2(com.badlogic.gdx.backends.android.AndroidDaydream)
com.badlogic.gdx.backends.android.AndroidDaydream$2: void run()
com.badlogic.gdx.backends.android.AndroidFileHandle
com.badlogic.gdx.backends.android.AndroidFileHandle: android.content.res.AssetManager assets
com.badlogic.gdx.backends.android.AndroidFileHandle: AndroidFileHandle(android.content.res.AssetManager,java.lang.String,com.badlogic.gdx.Files$FileType)
com.badlogic.gdx.backends.android.AndroidFileHandle: AndroidFileHandle(android.content.res.AssetManager,java.io.File,com.badlogic.gdx.Files$FileType)
com.badlogic.gdx.backends.android.AndroidFileHandle: com.badlogic.gdx.files.FileHandle child(java.lang.String)
com.badlogic.gdx.backends.android.AndroidFileHandle: com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
com.badlogic.gdx.backends.android.AndroidFileHandle: com.badlogic.gdx.files.FileHandle parent()
com.badlogic.gdx.backends.android.AndroidFileHandle: java.io.InputStream read()
com.badlogic.gdx.backends.android.AndroidFileHandle: com.badlogic.gdx.files.FileHandle[] list()
com.badlogic.gdx.backends.android.AndroidFileHandle: com.badlogic.gdx.files.FileHandle[] list(java.io.FileFilter)
com.badlogic.gdx.backends.android.AndroidFileHandle: com.badlogic.gdx.files.FileHandle[] list(java.io.FilenameFilter)
com.badlogic.gdx.backends.android.AndroidFileHandle: com.badlogic.gdx.files.FileHandle[] list(java.lang.String)
com.badlogic.gdx.backends.android.AndroidFileHandle: boolean isDirectory()
com.badlogic.gdx.backends.android.AndroidFileHandle: boolean exists()
com.badlogic.gdx.backends.android.AndroidFileHandle: long length()
com.badlogic.gdx.backends.android.AndroidFileHandle: long lastModified()
com.badlogic.gdx.backends.android.AndroidFileHandle: java.io.File file()
com.badlogic.gdx.backends.android.AndroidFiles
com.badlogic.gdx.backends.android.AndroidFiles: java.lang.String sdcard
com.badlogic.gdx.backends.android.AndroidFiles: java.lang.String localpath
com.badlogic.gdx.backends.android.AndroidFiles: android.content.res.AssetManager assets
com.badlogic.gdx.backends.android.AndroidFiles: AndroidFiles(android.content.res.AssetManager)
com.badlogic.gdx.backends.android.AndroidFiles: AndroidFiles(android.content.res.AssetManager,java.lang.String)
com.badlogic.gdx.backends.android.AndroidFiles: com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType)
com.badlogic.gdx.backends.android.AndroidFiles: com.badlogic.gdx.files.FileHandle classpath(java.lang.String)
com.badlogic.gdx.backends.android.AndroidFiles: com.badlogic.gdx.files.FileHandle internal(java.lang.String)
com.badlogic.gdx.backends.android.AndroidFiles: com.badlogic.gdx.files.FileHandle external(java.lang.String)
com.badlogic.gdx.backends.android.AndroidFiles: com.badlogic.gdx.files.FileHandle absolute(java.lang.String)
com.badlogic.gdx.backends.android.AndroidFiles: com.badlogic.gdx.files.FileHandle local(java.lang.String)
com.badlogic.gdx.backends.android.AndroidFiles: java.lang.String getExternalStoragePath()
com.badlogic.gdx.backends.android.AndroidFiles: boolean isExternalStorageAvailable()
com.badlogic.gdx.backends.android.AndroidFiles: java.lang.String getLocalStoragePath()
com.badlogic.gdx.backends.android.AndroidFiles: boolean isLocalStorageAvailable()
com.badlogic.gdx.backends.android.AndroidFragmentApplication
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.backends.android.AndroidGraphics graphics
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.backends.android.AndroidInput input
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.backends.android.AndroidAudio audio
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.backends.android.AndroidFiles files
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.backends.android.AndroidNet net
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.ApplicationListener listener
com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.os.Handler handler
com.badlogic.gdx.backends.android.AndroidFragmentApplication: boolean firstResume
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.utils.Array runnables
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.utils.Array executedRunnables
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.utils.Array lifecycleListeners
com.badlogic.gdx.backends.android.AndroidFragmentApplication: int logLevel
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks callbacks
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.backends.android.AndroidClipboard clipboard
com.badlogic.gdx.backends.android.AndroidFragmentApplication: AndroidFragmentApplication()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void onAttach(android.app.Activity)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void onDetach()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.widget.FrameLayout$LayoutParams createLayoutParams()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void createWakeLock(boolean)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void useImmersiveMode(boolean)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void onPause()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void onResume()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.ApplicationListener getApplicationListener()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.Audio getAudio()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.Files getFiles()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.Graphics getGraphics()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.backends.android.AndroidInput getInput()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.Net getNet()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.Application$ApplicationType getType()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: int getVersion()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: long getJavaHeap()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: long getNativeHeap()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.Preferences getPreferences(java.lang.String)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.utils.Clipboard getClipboard()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void postRunnable(java.lang.Runnable)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void onConfigurationChanged(android.content.res.Configuration)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void exit()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void debug(java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void debug(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void log(java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void log(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void error(java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void error(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void setLogLevel(int)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: int getLogLevel()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.content.Context getContext()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.utils.Array getRunnables()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.utils.Array getExecutedRunnables()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void runOnUiThread(java.lang.Runnable)
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.utils.Array getLifecycleListeners()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.Window getApplicationWindow()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.os.Handler getHandler()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: android.view.WindowManager getWindowManager()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: com.badlogic.gdx.Input getInput()
com.badlogic.gdx.backends.android.AndroidFragmentApplication: void <clinit>()
com.badlogic.gdx.backends.android.AndroidFragmentApplication$1
com.badlogic.gdx.backends.android.AndroidFragmentApplication$1: com.badlogic.gdx.backends.android.AndroidFragmentApplication this$0
com.badlogic.gdx.backends.android.AndroidFragmentApplication$1: AndroidFragmentApplication$1(com.badlogic.gdx.backends.android.AndroidFragmentApplication)
com.badlogic.gdx.backends.android.AndroidFragmentApplication$1: void resume()
com.badlogic.gdx.backends.android.AndroidFragmentApplication$1: void pause()
com.badlogic.gdx.backends.android.AndroidFragmentApplication$1: void dispose()
com.badlogic.gdx.backends.android.AndroidFragmentApplication$2
com.badlogic.gdx.backends.android.AndroidFragmentApplication$2: com.badlogic.gdx.backends.android.AndroidFragmentApplication this$0
com.badlogic.gdx.backends.android.AndroidFragmentApplication$2: AndroidFragmentApplication$2(com.badlogic.gdx.backends.android.AndroidFragmentApplication)
com.badlogic.gdx.backends.android.AndroidFragmentApplication$2: void run()
com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks
com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks: void exit()
com.badlogic.gdx.backends.android.AndroidGL20
com.badlogic.gdx.backends.android.AndroidGL20: AndroidGL20()
com.badlogic.gdx.backends.android.AndroidGL20: void init()
com.badlogic.gdx.backends.android.AndroidGL20: void glActiveTexture(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glAttachShader(int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glBindAttribLocation(int,int,java.lang.String)
com.badlogic.gdx.backends.android.AndroidGL20: void glBindBuffer(int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glBindFramebuffer(int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glBindRenderbuffer(int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glBindTexture(int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glBlendColor(float,float,float,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glBlendEquation(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glBlendEquationSeparate(int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glBlendFunc(int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glBlendFuncSeparate(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glBufferData(int,int,java.nio.Buffer,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glBufferSubData(int,int,int,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL20: int glCheckFramebufferStatus(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glClear(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glClearColor(float,float,float,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glClearDepthf(float)
com.badlogic.gdx.backends.android.AndroidGL20: void glClearStencil(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glColorMask(boolean,boolean,boolean,boolean)
com.badlogic.gdx.backends.android.AndroidGL20: void glCompileShader(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glCopyTexImage2D(int,int,int,int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: int glCreateProgram()
com.badlogic.gdx.backends.android.AndroidGL20: int glCreateShader(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glCullFace(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glDeleteBuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glDeleteFramebuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glDeleteProgram(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glDeleteRenderbuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glDeleteShader(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glDeleteTextures(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glDepthFunc(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glDepthMask(boolean)
com.badlogic.gdx.backends.android.AndroidGL20: void glDepthRangef(float,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glDetachShader(int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glDisable(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glDisableVertexAttribArray(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glDrawArrays(int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glDrawElements(int,int,int,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glDrawElements(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glEnable(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glEnableVertexAttribArray(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glFinish()
com.badlogic.gdx.backends.android.AndroidGL20: void glFlush()
com.badlogic.gdx.backends.android.AndroidGL20: void glFramebufferRenderbuffer(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glFramebufferTexture2D(int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glFrontFace(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glGenBuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGenerateMipmap(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glGenFramebuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGenRenderbuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGenTextures(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL20: java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: int glGetAttribLocation(int,java.lang.String)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetBooleanv(int,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: int glGetError()
com.badlogic.gdx.backends.android.AndroidGL20: void glGetFloatv(int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetIntegerv(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetProgramiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: java.lang.String glGetProgramInfoLog(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetShaderiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: java.lang.String glGetShaderInfoLog(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String)
com.badlogic.gdx.backends.android.AndroidGL20: java.lang.String glGetString(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetTexParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetUniformfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetUniformiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: int glGetUniformLocation(int,java.lang.String)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glHint(int,int)
com.badlogic.gdx.backends.android.AndroidGL20: boolean glIsBuffer(int)
com.badlogic.gdx.backends.android.AndroidGL20: boolean glIsEnabled(int)
com.badlogic.gdx.backends.android.AndroidGL20: boolean glIsFramebuffer(int)
com.badlogic.gdx.backends.android.AndroidGL20: boolean glIsProgram(int)
com.badlogic.gdx.backends.android.AndroidGL20: boolean glIsRenderbuffer(int)
com.badlogic.gdx.backends.android.AndroidGL20: boolean glIsShader(int)
com.badlogic.gdx.backends.android.AndroidGL20: boolean glIsTexture(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glLineWidth(float)
com.badlogic.gdx.backends.android.AndroidGL20: void glLinkProgram(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glPixelStorei(int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glPolygonOffset(float,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glReleaseShaderCompiler()
com.badlogic.gdx.backends.android.AndroidGL20: void glRenderbufferStorage(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glSampleCoverage(float,boolean)
com.badlogic.gdx.backends.android.AndroidGL20: void glScissor(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glShaderSource(int,java.lang.String)
com.badlogic.gdx.backends.android.AndroidGL20: void glStencilFunc(int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glStencilFuncSeparate(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glStencilMask(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glStencilMaskSeparate(int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glStencilOp(int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glStencilOpSeparate(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glTexParameterf(int,int,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glTexParameterfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glTexParameteri(int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glTexParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform1f(int,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform1fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform1i(int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform1iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform2f(int,float,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform2fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform2i(int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform2iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform3f(int,float,float,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform3fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform3i(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform3iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform4f(int,float,float,float,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform4fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform4i(int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniform4iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glUseProgram(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glValidateProgram(int)
com.badlogic.gdx.backends.android.AndroidGL20: void glVertexAttrib1f(int,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glVertexAttrib1fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glVertexAttrib2f(int,float,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glVertexAttrib2fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glVertexAttrib3f(int,float,float,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glVertexAttrib3fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glVertexAttrib4f(int,float,float,float,float)
com.badlogic.gdx.backends.android.AndroidGL20: void glVertexAttrib4fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL20: void glVertexAttribPointer(int,int,int,boolean,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void glViewport(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL20: void <clinit>()
com.badlogic.gdx.backends.android.AndroidGL30
com.badlogic.gdx.backends.android.AndroidGL30: AndroidGL30()
com.badlogic.gdx.backends.android.AndroidGL30: void glReadBuffer(int)
com.badlogic.gdx.backends.android.AndroidGL30: void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glDrawRangeElements(int,int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glTexImage3D(int,int,int,int,int,int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glGenQueries(int,int[],int)
com.badlogic.gdx.backends.android.AndroidGL30: void glGenQueries(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glDeleteQueries(int,int[],int)
com.badlogic.gdx.backends.android.AndroidGL30: void glDeleteQueries(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: boolean glIsQuery(int)
com.badlogic.gdx.backends.android.AndroidGL30: void glBeginQuery(int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glEndQuery(int)
com.badlogic.gdx.backends.android.AndroidGL30: void glGetQueryiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glGetQueryObjectuiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: boolean glUnmapBuffer(int)
com.badlogic.gdx.backends.android.AndroidGL30: java.nio.Buffer glGetBufferPointerv(int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glDrawBuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glRenderbufferStorageMultisample(int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glFramebufferTextureLayer(int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glFlushMappedBufferRange(int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glBindVertexArray(int)
com.badlogic.gdx.backends.android.AndroidGL30: void glDeleteVertexArrays(int,int[],int)
com.badlogic.gdx.backends.android.AndroidGL30: void glDeleteVertexArrays(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glGenVertexArrays(int,int[],int)
com.badlogic.gdx.backends.android.AndroidGL30: void glGenVertexArrays(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: boolean glIsVertexArray(int)
com.badlogic.gdx.backends.android.AndroidGL30: void glBeginTransformFeedback(int)
com.badlogic.gdx.backends.android.AndroidGL30: void glEndTransformFeedback()
com.badlogic.gdx.backends.android.AndroidGL30: void glBindBufferRange(int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glBindBufferBase(int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glTransformFeedbackVaryings(int,java.lang.String[],int)
com.badlogic.gdx.backends.android.AndroidGL30: void glVertexAttribIPointer(int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glGetVertexAttribIiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glVertexAttribI4i(int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glVertexAttribI4ui(int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glGetUniformuiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: int glGetFragDataLocation(int,java.lang.String)
com.badlogic.gdx.backends.android.AndroidGL30: void glUniform1uiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glUniform3uiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glUniform4uiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glClearBufferiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glClearBufferuiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glClearBufferfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glClearBufferfi(int,int,float,int)
com.badlogic.gdx.backends.android.AndroidGL30: java.lang.String glGetStringi(int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glCopyBufferSubData(int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: int glGetUniformBlockIndex(int,java.lang.String)
com.badlogic.gdx.backends.android.AndroidGL30: void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer)
com.badlogic.gdx.backends.android.AndroidGL30: java.lang.String glGetActiveUniformBlockName(int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glUniformBlockBinding(int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glDrawArraysInstanced(int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glDrawElementsInstanced(int,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glGetInteger64v(int,java.nio.LongBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glGetBufferParameteri64v(int,int,java.nio.LongBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glGenSamplers(int,int[],int)
com.badlogic.gdx.backends.android.AndroidGL30: void glGenSamplers(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glDeleteSamplers(int,int[],int)
com.badlogic.gdx.backends.android.AndroidGL30: void glDeleteSamplers(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: boolean glIsSampler(int)
com.badlogic.gdx.backends.android.AndroidGL30: void glBindSampler(int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glSamplerParameteri(int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glSamplerParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glSamplerParameterf(int,int,float)
com.badlogic.gdx.backends.android.AndroidGL30: void glSamplerParameterfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glGetSamplerParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glVertexAttribDivisor(int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glBindTransformFeedback(int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glDeleteTransformFeedbacks(int,int[],int)
com.badlogic.gdx.backends.android.AndroidGL30: void glDeleteTransformFeedbacks(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glGenTransformFeedbacks(int,int[],int)
com.badlogic.gdx.backends.android.AndroidGL30: void glGenTransformFeedbacks(int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: boolean glIsTransformFeedback(int)
com.badlogic.gdx.backends.android.AndroidGL30: void glPauseTransformFeedback()
com.badlogic.gdx.backends.android.AndroidGL30: void glResumeTransformFeedback()
com.badlogic.gdx.backends.android.AndroidGL30: void glProgramParameteri(int,int,int)
com.badlogic.gdx.backends.android.AndroidGL30: void glInvalidateFramebuffer(int,int,java.nio.IntBuffer)
com.badlogic.gdx.backends.android.AndroidGL30: void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGraphics
com.badlogic.gdx.backends.android.AndroidGraphics: java.lang.String LOG_TAG
com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View view
com.badlogic.gdx.backends.android.AndroidGraphics: int width
com.badlogic.gdx.backends.android.AndroidGraphics: int height
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.backends.android.AndroidApplicationBase app
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.graphics.GL20 gl20
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.graphics.GL30 gl30
com.badlogic.gdx.backends.android.AndroidGraphics: javax.microedition.khronos.egl.EGLContext eglContext
com.badlogic.gdx.backends.android.AndroidGraphics: java.lang.String extensions
com.badlogic.gdx.backends.android.AndroidGraphics: long lastFrameTime
com.badlogic.gdx.backends.android.AndroidGraphics: float deltaTime
com.badlogic.gdx.backends.android.AndroidGraphics: long frameStart
com.badlogic.gdx.backends.android.AndroidGraphics: int frames
com.badlogic.gdx.backends.android.AndroidGraphics: int fps
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.math.WindowedMean mean
com.badlogic.gdx.backends.android.AndroidGraphics: boolean created
com.badlogic.gdx.backends.android.AndroidGraphics: boolean running
com.badlogic.gdx.backends.android.AndroidGraphics: boolean pause
com.badlogic.gdx.backends.android.AndroidGraphics: boolean resume
com.badlogic.gdx.backends.android.AndroidGraphics: boolean destroy
com.badlogic.gdx.backends.android.AndroidGraphics: float ppiX
com.badlogic.gdx.backends.android.AndroidGraphics: float ppiY
com.badlogic.gdx.backends.android.AndroidGraphics: float ppcX
com.badlogic.gdx.backends.android.AndroidGraphics: float ppcY
com.badlogic.gdx.backends.android.AndroidGraphics: float density
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.Graphics$BufferFormat bufferFormat
com.badlogic.gdx.backends.android.AndroidGraphics: boolean isContinuous
com.badlogic.gdx.backends.android.AndroidGraphics: int[] value
com.badlogic.gdx.backends.android.AndroidGraphics: java.lang.Object synch
com.badlogic.gdx.backends.android.AndroidGraphics: AndroidGraphics(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.AndroidGraphics: AndroidGraphics(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy,boolean)
com.badlogic.gdx.backends.android.AndroidGraphics: void preserveEGLContextOnPause()
com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.AndroidGraphics: void onPauseGLSurfaceView()
com.badlogic.gdx.backends.android.AndroidGraphics: void onResumeGLSurfaceView()
com.badlogic.gdx.backends.android.AndroidGraphics: android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser()
com.badlogic.gdx.backends.android.AndroidGraphics: void updatePpi()
com.badlogic.gdx.backends.android.AndroidGraphics: boolean checkGL20()
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.graphics.GL20 getGL20()
com.badlogic.gdx.backends.android.AndroidGraphics: int getHeight()
com.badlogic.gdx.backends.android.AndroidGraphics: int getWidth()
com.badlogic.gdx.backends.android.AndroidGraphics: void setupGL(javax.microedition.khronos.opengles.GL10)
com.badlogic.gdx.backends.android.AndroidGraphics: void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)
com.badlogic.gdx.backends.android.AndroidGraphics: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.AndroidGraphics: void logConfig(javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.AndroidGraphics: int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)
com.badlogic.gdx.backends.android.AndroidGraphics: void resume()
com.badlogic.gdx.backends.android.AndroidGraphics: void pause()
com.badlogic.gdx.backends.android.AndroidGraphics: void destroy()
com.badlogic.gdx.backends.android.AndroidGraphics: void onDrawFrame(javax.microedition.khronos.opengles.GL10)
com.badlogic.gdx.backends.android.AndroidGraphics: float getDeltaTime()
com.badlogic.gdx.backends.android.AndroidGraphics: float getRawDeltaTime()
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.Graphics$GraphicsType getType()
com.badlogic.gdx.backends.android.AndroidGraphics: int getFramesPerSecond()
com.badlogic.gdx.backends.android.AndroidGraphics: void clearManagedCaches()
com.badlogic.gdx.backends.android.AndroidGraphics: void logManagedCachesStatus()
com.badlogic.gdx.backends.android.AndroidGraphics: android.view.View getView()
com.badlogic.gdx.backends.android.AndroidGraphics: float getPpiX()
com.badlogic.gdx.backends.android.AndroidGraphics: float getPpiY()
com.badlogic.gdx.backends.android.AndroidGraphics: float getPpcX()
com.badlogic.gdx.backends.android.AndroidGraphics: float getPpcY()
com.badlogic.gdx.backends.android.AndroidGraphics: float getDensity()
com.badlogic.gdx.backends.android.AndroidGraphics: boolean supportsDisplayModeChange()
com.badlogic.gdx.backends.android.AndroidGraphics: boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode)
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes()
com.badlogic.gdx.backends.android.AndroidGraphics: boolean setDisplayMode(int,int,boolean)
com.badlogic.gdx.backends.android.AndroidGraphics: void setTitle(java.lang.String)
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode()
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.Graphics$BufferFormat getBufferFormat()
com.badlogic.gdx.backends.android.AndroidGraphics: void setVSync(boolean)
com.badlogic.gdx.backends.android.AndroidGraphics: boolean supportsExtension(java.lang.String)
com.badlogic.gdx.backends.android.AndroidGraphics: void setContinuousRendering(boolean)
com.badlogic.gdx.backends.android.AndroidGraphics: boolean isContinuousRendering()
com.badlogic.gdx.backends.android.AndroidGraphics: void requestRendering()
com.badlogic.gdx.backends.android.AndroidGraphics: boolean isFullscreen()
com.badlogic.gdx.backends.android.AndroidGraphics: boolean isGL30Available()
com.badlogic.gdx.backends.android.AndroidGraphics: com.badlogic.gdx.graphics.GL30 getGL30()
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode: com.badlogic.gdx.backends.android.AndroidGraphics this$0
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode: AndroidGraphics$AndroidDisplayMode(com.badlogic.gdx.backends.android.AndroidGraphics,int,int,int,int)
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: AndroidGraphicsLiveWallpaper(com.badlogic.gdx.backends.android.AndroidLiveWallpaper,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: android.view.SurfaceHolder getSurfaceHolder()
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDestroyGLSurfaceView()
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void resume()
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void onDrawFrame(javax.microedition.khronos.opengles.GL10)
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper: void logManagedCachesStatus()
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1: com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1: AndroidGraphicsLiveWallpaper$1(com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper,android.content.Context,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1: android.view.SurfaceHolder getHolder()
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1: void onDestroy()
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2: com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2: AndroidGraphicsLiveWallpaper$2(com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper,android.content.Context,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2: android.view.SurfaceHolder getHolder()
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2: void onDestroy()
com.badlogic.gdx.backends.android.AndroidInput
com.badlogic.gdx.backends.android.AndroidInput: com.badlogic.gdx.utils.Pool usedKeyEvents
com.badlogic.gdx.backends.android.AndroidInput: com.badlogic.gdx.utils.Pool usedTouchEvents
com.badlogic.gdx.backends.android.AndroidInput: int NUM_TOUCHES
com.badlogic.gdx.backends.android.AndroidInput: java.util.ArrayList keyListeners
com.badlogic.gdx.backends.android.AndroidInput: java.util.ArrayList keyEvents
com.badlogic.gdx.backends.android.AndroidInput: java.util.ArrayList touchEvents
com.badlogic.gdx.backends.android.AndroidInput: int[] touchX
com.badlogic.gdx.backends.android.AndroidInput: int[] touchY
com.badlogic.gdx.backends.android.AndroidInput: int[] deltaX
com.badlogic.gdx.backends.android.AndroidInput: int[] deltaY
com.badlogic.gdx.backends.android.AndroidInput: boolean[] touched
com.badlogic.gdx.backends.android.AndroidInput: int[] realId
com.badlogic.gdx.backends.android.AndroidInput: boolean hasMultitouch
com.badlogic.gdx.backends.android.AndroidInput: com.badlogic.gdx.utils.IntMap keys
com.badlogic.gdx.backends.android.AndroidInput: android.hardware.SensorManager manager
com.badlogic.gdx.backends.android.AndroidInput: boolean accelerometerAvailable
com.badlogic.gdx.backends.android.AndroidInput: float[] accelerometerValues
com.badlogic.gdx.backends.android.AndroidInput: java.lang.String text
com.badlogic.gdx.backends.android.AndroidInput: com.badlogic.gdx.Input$TextInputListener textListener
com.badlogic.gdx.backends.android.AndroidInput: android.os.Handler handle
com.badlogic.gdx.backends.android.AndroidInput: com.badlogic.gdx.Application app
com.badlogic.gdx.backends.android.AndroidInput: android.content.Context context
com.badlogic.gdx.backends.android.AndroidInput: com.badlogic.gdx.backends.android.AndroidTouchHandler touchHandler
com.badlogic.gdx.backends.android.AndroidInput: int sleepTime
com.badlogic.gdx.backends.android.AndroidInput: boolean catchBack
com.badlogic.gdx.backends.android.AndroidInput: boolean catchMenu
com.badlogic.gdx.backends.android.AndroidInput: android.os.Vibrator vibrator
com.badlogic.gdx.backends.android.AndroidInput: boolean compassAvailable
com.badlogic.gdx.backends.android.AndroidInput: boolean keyboardAvailable
com.badlogic.gdx.backends.android.AndroidInput: float[] magneticFieldValues
com.badlogic.gdx.backends.android.AndroidInput: float azimuth
com.badlogic.gdx.backends.android.AndroidInput: float pitch
com.badlogic.gdx.backends.android.AndroidInput: float roll
com.badlogic.gdx.backends.android.AndroidInput: float inclination
com.badlogic.gdx.backends.android.AndroidInput: boolean justTouched
com.badlogic.gdx.backends.android.AndroidInput: com.badlogic.gdx.InputProcessor processor
com.badlogic.gdx.backends.android.AndroidInput: com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config
com.badlogic.gdx.backends.android.AndroidInput: com.badlogic.gdx.Input$Orientation nativeOrientation
com.badlogic.gdx.backends.android.AndroidInput: long currentEventTimeStamp
com.badlogic.gdx.backends.android.AndroidInput: com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard
com.badlogic.gdx.backends.android.AndroidInput: android.hardware.SensorEventListener accelerometerListener
com.badlogic.gdx.backends.android.AndroidInput: android.hardware.SensorEventListener compassListener
com.badlogic.gdx.backends.android.AndroidInput: boolean requestFocus
com.badlogic.gdx.backends.android.AndroidInput: float[] R
com.badlogic.gdx.backends.android.AndroidInput: float[] orientation
com.badlogic.gdx.backends.android.AndroidInput: AndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.backends.android.AndroidInput: float getAccelerometerX()
com.badlogic.gdx.backends.android.AndroidInput: float getAccelerometerY()
com.badlogic.gdx.backends.android.AndroidInput: float getAccelerometerZ()
com.badlogic.gdx.backends.android.AndroidInput: void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidInput: void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidInput: int getX()
com.badlogic.gdx.backends.android.AndroidInput: int getY()
com.badlogic.gdx.backends.android.AndroidInput: int getX(int)
com.badlogic.gdx.backends.android.AndroidInput: int getY(int)
com.badlogic.gdx.backends.android.AndroidInput: boolean isTouched(int)
com.badlogic.gdx.backends.android.AndroidInput: boolean isKeyPressed(int)
com.badlogic.gdx.backends.android.AndroidInput: boolean isTouched()
com.badlogic.gdx.backends.android.AndroidInput: void setInputProcessor(com.badlogic.gdx.InputProcessor)
com.badlogic.gdx.backends.android.AndroidInput: void processEvents()
com.badlogic.gdx.backends.android.AndroidInput: boolean onTouch(android.view.View,android.view.MotionEvent)
com.badlogic.gdx.backends.android.AndroidInput: void onTap(int,int)
com.badlogic.gdx.backends.android.AndroidInput: void onDrop(int,int)
com.badlogic.gdx.backends.android.AndroidInput: void postTap(int,int)
com.badlogic.gdx.backends.android.AndroidInput: boolean onKey(android.view.View,int,android.view.KeyEvent)
com.badlogic.gdx.backends.android.AndroidInput: void setOnscreenKeyboardVisible(boolean)
com.badlogic.gdx.backends.android.AndroidInput: void setCatchBackKey(boolean)
com.badlogic.gdx.backends.android.AndroidInput: void setCatchMenuKey(boolean)
com.badlogic.gdx.backends.android.AndroidInput: void vibrate(int)
com.badlogic.gdx.backends.android.AndroidInput: void vibrate(long[],int)
com.badlogic.gdx.backends.android.AndroidInput: void cancelVibrate()
com.badlogic.gdx.backends.android.AndroidInput: boolean justTouched()
com.badlogic.gdx.backends.android.AndroidInput: boolean isButtonPressed(int)
com.badlogic.gdx.backends.android.AndroidInput: void updateOrientation()
com.badlogic.gdx.backends.android.AndroidInput: void getRotationMatrix(float[])
com.badlogic.gdx.backends.android.AndroidInput: float getAzimuth()
com.badlogic.gdx.backends.android.AndroidInput: float getPitch()
com.badlogic.gdx.backends.android.AndroidInput: float getRoll()
com.badlogic.gdx.backends.android.AndroidInput: void registerSensorListeners()
com.badlogic.gdx.backends.android.AndroidInput: void unregisterSensorListeners()
com.badlogic.gdx.backends.android.AndroidInput: com.badlogic.gdx.InputProcessor getInputProcessor()
com.badlogic.gdx.backends.android.AndroidInput: boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
com.badlogic.gdx.backends.android.AndroidInput: int getFreePointerIndex()
com.badlogic.gdx.backends.android.AndroidInput: int[] resize(int[])
com.badlogic.gdx.backends.android.AndroidInput: boolean[] resize(boolean[])
com.badlogic.gdx.backends.android.AndroidInput: int lookUpPointerIndex(int)
com.badlogic.gdx.backends.android.AndroidInput: int getRotation()
com.badlogic.gdx.backends.android.AndroidInput: com.badlogic.gdx.Input$Orientation getNativeOrientation()
com.badlogic.gdx.backends.android.AndroidInput: void setCursorCatched(boolean)
com.badlogic.gdx.backends.android.AndroidInput: boolean isCursorCatched()
com.badlogic.gdx.backends.android.AndroidInput: int getDeltaX()
com.badlogic.gdx.backends.android.AndroidInput: int getDeltaX(int)
com.badlogic.gdx.backends.android.AndroidInput: int getDeltaY()
com.badlogic.gdx.backends.android.AndroidInput: int getDeltaY(int)
com.badlogic.gdx.backends.android.AndroidInput: void setCursorPosition(int,int)
com.badlogic.gdx.backends.android.AndroidInput: void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.backends.android.AndroidInput: long getCurrentEventTime()
com.badlogic.gdx.backends.android.AndroidInput: void addKeyListener(android.view.View$OnKeyListener)
com.badlogic.gdx.backends.android.AndroidInput$1
com.badlogic.gdx.backends.android.AndroidInput$1: com.badlogic.gdx.backends.android.AndroidInput this$0
com.badlogic.gdx.backends.android.AndroidInput$1: AndroidInput$1(com.badlogic.gdx.backends.android.AndroidInput,int,int)
com.badlogic.gdx.backends.android.AndroidInput$1: com.badlogic.gdx.backends.android.AndroidInput$KeyEvent newObject()
com.badlogic.gdx.backends.android.AndroidInput$1: java.lang.Object newObject()
com.badlogic.gdx.backends.android.AndroidInput$2
com.badlogic.gdx.backends.android.AndroidInput$2: com.badlogic.gdx.backends.android.AndroidInput this$0
com.badlogic.gdx.backends.android.AndroidInput$2: AndroidInput$2(com.badlogic.gdx.backends.android.AndroidInput,int,int)
com.badlogic.gdx.backends.android.AndroidInput$2: com.badlogic.gdx.backends.android.AndroidInput$TouchEvent newObject()
com.badlogic.gdx.backends.android.AndroidInput$2: java.lang.Object newObject()
com.badlogic.gdx.backends.android.AndroidInput$3
com.badlogic.gdx.backends.android.AndroidInput$3: java.lang.String val$title
com.badlogic.gdx.backends.android.AndroidInput$3: java.lang.String val$text
com.badlogic.gdx.backends.android.AndroidInput$3: com.badlogic.gdx.Input$TextInputListener val$listener
com.badlogic.gdx.backends.android.AndroidInput$3: com.badlogic.gdx.backends.android.AndroidInput this$0
com.badlogic.gdx.backends.android.AndroidInput$3: AndroidInput$3(com.badlogic.gdx.backends.android.AndroidInput,java.lang.String,java.lang.String,com.badlogic.gdx.Input$TextInputListener)
com.badlogic.gdx.backends.android.AndroidInput$3: void run()
com.badlogic.gdx.backends.android.AndroidInput$3$1
com.badlogic.gdx.backends.android.AndroidInput$3$1: android.widget.EditText val$input
com.badlogic.gdx.backends.android.AndroidInput$3$1: com.badlogic.gdx.backends.android.AndroidInput$3 this$1
com.badlogic.gdx.backends.android.AndroidInput$3$1: AndroidInput$3$1(com.badlogic.gdx.backends.android.AndroidInput$3,android.widget.EditText)
com.badlogic.gdx.backends.android.AndroidInput$3$1: void onClick(android.content.DialogInterface,int)
com.badlogic.gdx.backends.android.AndroidInput$3$1$1
com.badlogic.gdx.backends.android.AndroidInput$3$1$1: com.badlogic.gdx.backends.android.AndroidInput$3$1 this$2
com.badlogic.gdx.backends.android.AndroidInput$3$1$1: AndroidInput$3$1$1(com.badlogic.gdx.backends.android.AndroidInput$3$1)
com.badlogic.gdx.backends.android.AndroidInput$3$1$1: void run()
com.badlogic.gdx.backends.android.AndroidInput$3$2
com.badlogic.gdx.backends.android.AndroidInput$3$2: com.badlogic.gdx.backends.android.AndroidInput$3 this$1
com.badlogic.gdx.backends.android.AndroidInput$3$2: AndroidInput$3$2(com.badlogic.gdx.backends.android.AndroidInput$3)
com.badlogic.gdx.backends.android.AndroidInput$3$2: void onClick(android.content.DialogInterface,int)
com.badlogic.gdx.backends.android.AndroidInput$3$2$1
com.badlogic.gdx.backends.android.AndroidInput$3$2$1: com.badlogic.gdx.backends.android.AndroidInput$3$2 this$2
com.badlogic.gdx.backends.android.AndroidInput$3$2$1: AndroidInput$3$2$1(com.badlogic.gdx.backends.android.AndroidInput$3$2)
com.badlogic.gdx.backends.android.AndroidInput$3$2$1: void run()
com.badlogic.gdx.backends.android.AndroidInput$3$3
com.badlogic.gdx.backends.android.AndroidInput$3$3: com.badlogic.gdx.backends.android.AndroidInput$3 this$1
com.badlogic.gdx.backends.android.AndroidInput$3$3: AndroidInput$3$3(com.badlogic.gdx.backends.android.AndroidInput$3)
com.badlogic.gdx.backends.android.AndroidInput$3$3: void onCancel(android.content.DialogInterface)
com.badlogic.gdx.backends.android.AndroidInput$3$3$1
com.badlogic.gdx.backends.android.AndroidInput$3$3$1: com.badlogic.gdx.backends.android.AndroidInput$3$3 this$2
com.badlogic.gdx.backends.android.AndroidInput$3$3$1: AndroidInput$3$3$1(com.badlogic.gdx.backends.android.AndroidInput$3$3)
com.badlogic.gdx.backends.android.AndroidInput$3$3$1: void run()
com.badlogic.gdx.backends.android.AndroidInput$4
com.badlogic.gdx.backends.android.AndroidInput$4: java.lang.String val$title
com.badlogic.gdx.backends.android.AndroidInput$4: java.lang.String val$placeholder
com.badlogic.gdx.backends.android.AndroidInput$4: com.badlogic.gdx.Input$TextInputListener val$listener
com.badlogic.gdx.backends.android.AndroidInput$4: com.badlogic.gdx.backends.android.AndroidInput this$0
com.badlogic.gdx.backends.android.AndroidInput$4: AndroidInput$4(com.badlogic.gdx.backends.android.AndroidInput,java.lang.String,java.lang.String,com.badlogic.gdx.Input$TextInputListener)
com.badlogic.gdx.backends.android.AndroidInput$4: void run()
com.badlogic.gdx.backends.android.AndroidInput$4$1
com.badlogic.gdx.backends.android.AndroidInput$4$1: android.widget.EditText val$input
com.badlogic.gdx.backends.android.AndroidInput$4$1: com.badlogic.gdx.backends.android.AndroidInput$4 this$1
com.badlogic.gdx.backends.android.AndroidInput$4$1: AndroidInput$4$1(com.badlogic.gdx.backends.android.AndroidInput$4,android.widget.EditText)
com.badlogic.gdx.backends.android.AndroidInput$4$1: void onClick(android.content.DialogInterface,int)
com.badlogic.gdx.backends.android.AndroidInput$4$1$1
com.badlogic.gdx.backends.android.AndroidInput$4$1$1: com.badlogic.gdx.backends.android.AndroidInput$4$1 this$2
com.badlogic.gdx.backends.android.AndroidInput$4$1$1: AndroidInput$4$1$1(com.badlogic.gdx.backends.android.AndroidInput$4$1)
com.badlogic.gdx.backends.android.AndroidInput$4$1$1: void run()
com.badlogic.gdx.backends.android.AndroidInput$4$2
com.badlogic.gdx.backends.android.AndroidInput$4$2: com.badlogic.gdx.backends.android.AndroidInput$4 this$1
com.badlogic.gdx.backends.android.AndroidInput$4$2: AndroidInput$4$2(com.badlogic.gdx.backends.android.AndroidInput$4)
com.badlogic.gdx.backends.android.AndroidInput$4$2: void onCancel(android.content.DialogInterface)
com.badlogic.gdx.backends.android.AndroidInput$4$2$1
com.badlogic.gdx.backends.android.AndroidInput$4$2$1: com.badlogic.gdx.backends.android.AndroidInput$4$2 this$2
com.badlogic.gdx.backends.android.AndroidInput$4$2$1: AndroidInput$4$2$1(com.badlogic.gdx.backends.android.AndroidInput$4$2)
com.badlogic.gdx.backends.android.AndroidInput$4$2$1: void run()
com.badlogic.gdx.backends.android.AndroidInput$5
com.badlogic.gdx.backends.android.AndroidInput$5: boolean val$visible
com.badlogic.gdx.backends.android.AndroidInput$5: com.badlogic.gdx.backends.android.AndroidInput this$0
com.badlogic.gdx.backends.android.AndroidInput$5: AndroidInput$5(com.badlogic.gdx.backends.android.AndroidInput,boolean)
com.badlogic.gdx.backends.android.AndroidInput$5: void run()
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent: int KEY_DOWN
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent: int KEY_UP
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent: int KEY_TYPED
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent: long timeStamp
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent: int type
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent: int keyCode
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent: char keyChar
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent: AndroidInput$KeyEvent()
com.badlogic.gdx.backends.android.AndroidInput$SensorListener
com.badlogic.gdx.backends.android.AndroidInput$SensorListener: float[] accelerometerValues
com.badlogic.gdx.backends.android.AndroidInput$SensorListener: float[] magneticFieldValues
com.badlogic.gdx.backends.android.AndroidInput$SensorListener: com.badlogic.gdx.Input$Orientation nativeOrientation
com.badlogic.gdx.backends.android.AndroidInput$SensorListener: com.badlogic.gdx.backends.android.AndroidInput this$0
com.badlogic.gdx.backends.android.AndroidInput$SensorListener: AndroidInput$SensorListener(com.badlogic.gdx.backends.android.AndroidInput,com.badlogic.gdx.Input$Orientation,float[],float[])
com.badlogic.gdx.backends.android.AndroidInput$SensorListener: void onAccuracyChanged(android.hardware.Sensor,int)
com.badlogic.gdx.backends.android.AndroidInput$SensorListener: void onSensorChanged(android.hardware.SensorEvent)
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent: int TOUCH_DOWN
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent: int TOUCH_UP
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent: int TOUCH_DRAGGED
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent: long timeStamp
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent: int type
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent: int x
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent: int y
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent: int pointer
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent: AndroidInput$TouchEvent()
com.badlogic.gdx.backends.android.AndroidInputFactory
com.badlogic.gdx.backends.android.AndroidInputFactory: AndroidInputFactory()
com.badlogic.gdx.backends.android.AndroidInputFactory: com.badlogic.gdx.backends.android.AndroidInput newAndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.backends.android.AndroidInputThreePlus
com.badlogic.gdx.backends.android.AndroidInputThreePlus: java.util.ArrayList genericMotionListeners
com.badlogic.gdx.backends.android.AndroidInputThreePlus: AndroidInputThreePlus(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.backends.android.AndroidInputThreePlus: boolean onGenericMotion(android.view.View,android.view.MotionEvent)
com.badlogic.gdx.backends.android.AndroidInputThreePlus: void addGenericMotionListener(android.view.View$OnGenericMotionListener)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.backends.android.AndroidLiveWallpaperService service
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper graphics
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.backends.android.AndroidInput input
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.backends.android.AndroidAudio audio
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.backends.android.AndroidFiles files
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.backends.android.AndroidNet net
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.ApplicationListener listener
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: boolean firstResume
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.utils.Array runnables
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.utils.Array executedRunnables
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.utils.Array lifecycleListeners
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: int logLevel
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.backends.android.AndroidClipboard clipboard
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: AndroidLiveWallpaper(com.badlogic.gdx.backends.android.AndroidLiveWallpaperService)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void onPause()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void onResume()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void onDestroy()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: android.view.WindowManager getWindowManager()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.backends.android.AndroidLiveWallpaperService getService()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.ApplicationListener getApplicationListener()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void postRunnable(java.lang.Runnable)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.Audio getAudio()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.Files getFiles()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.Graphics getGraphics()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.backends.android.AndroidInput getInput()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.Net getNet()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.Application$ApplicationType getType()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: int getVersion()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: long getJavaHeap()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: long getNativeHeap()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.Preferences getPreferences(java.lang.String)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.utils.Clipboard getClipboard()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void debug(java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void debug(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void log(java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void log(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void error(java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void error(java.lang.String,java.lang.String,java.lang.Throwable)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void setLogLevel(int)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: int getLogLevel()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void exit()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void addLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void removeLifecycleListener(com.badlogic.gdx.LifecycleListener)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: android.content.Context getContext()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.utils.Array getRunnables()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.utils.Array getExecutedRunnables()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.utils.Array getLifecycleListeners()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void startActivity(android.content.Intent)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: android.view.Window getApplicationWindow()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: android.os.Handler getHandler()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void runOnUiThread(java.lang.Runnable)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void useImmersiveMode(boolean)
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: com.badlogic.gdx.Input getInput()
com.badlogic.gdx.backends.android.AndroidLiveWallpaper: void <clinit>()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: java.lang.String TAG
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: boolean DEBUG
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: com.badlogic.gdx.backends.android.AndroidLiveWallpaper app
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: android.view.SurfaceHolder$Callback view
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: int viewFormat
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: int viewWidth
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: int viewHeight
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: int engines
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: int visibleEngines
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine linkedEngine
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: boolean isPreviewNotified
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: boolean notifiedPreviewState
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: int[] sync
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: void setLinkedEngine(com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: AndroidLiveWallpaperService()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: void onCreate()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: android.service.wallpaper.WallpaperService$Engine onCreateEngine()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: void onCreateApplication()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: void initialize(com.badlogic.gdx.ApplicationListener)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: android.view.SurfaceHolder getSurfaceHolder()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: void onDeepPauseApplication()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: void onDestroy()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: void finalize()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: com.badlogic.gdx.backends.android.AndroidLiveWallpaper getLiveWallpaper()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: android.view.WindowManager getWindowManager()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService: void <clinit>()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: boolean engineIsVisible
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: int engineFormat
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: int engineWidth
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: int engineHeight
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: boolean offsetsConsumed
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: float xOffset
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: float yOffset
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: float xOffsetStep
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: float yOffsetStep
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: int xPixelOffset
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: int yPixelOffset
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: com.badlogic.gdx.backends.android.AndroidLiveWallpaperService this$0
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: AndroidLiveWallpaperService$AndroidWallpaperEngine(com.badlogic.gdx.backends.android.AndroidLiveWallpaperService)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: void onCreate(android.view.SurfaceHolder)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: void onSurfaceCreated(android.view.SurfaceHolder)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: void onSurfaceChanged(android.view.SurfaceHolder,int,int,int)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: void notifySurfaceChanged(int,int,int,boolean)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: void onVisibilityChanged(boolean)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: void notifyVisibilityChanged(boolean)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: void onResume()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: void onPause()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: void onSurfaceDestroyed(android.view.SurfaceHolder)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: void onDestroy()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: void onTouchEvent(android.view.MotionEvent)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: void onOffsetsChanged(float,float,float,float,int,int)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: void notifyOffsetsChanged()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine: void notifyPreviewState()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1: com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1: AndroidLiveWallpaperService$AndroidWallpaperEngine$1(com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1: void run()
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2: boolean val$currentPreviewState
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2: com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2: AndroidLiveWallpaperService$AndroidWallpaperEngine$2(com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine,boolean)
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2: void run()
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler: AndroidMultiTouchHandler()
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler: void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput)
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler: void logAction(int,int)
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler: void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long)
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler: boolean supportsMultitouch(android.content.Context)
com.badlogic.gdx.backends.android.AndroidMusic
com.badlogic.gdx.backends.android.AndroidMusic: com.badlogic.gdx.backends.android.AndroidAudio audio
com.badlogic.gdx.backends.android.AndroidMusic: android.media.MediaPlayer player
com.badlogic.gdx.backends.android.AndroidMusic: boolean isPrepared
com.badlogic.gdx.backends.android.AndroidMusic: boolean wasPlaying
com.badlogic.gdx.backends.android.AndroidMusic: float volume
com.badlogic.gdx.backends.android.AndroidMusic: com.badlogic.gdx.audio.Music$OnCompletionListener onCompletionListener
com.badlogic.gdx.backends.android.AndroidMusic: AndroidMusic(com.badlogic.gdx.backends.android.AndroidAudio,android.media.MediaPlayer)
com.badlogic.gdx.backends.android.AndroidMusic: void dispose()
com.badlogic.gdx.backends.android.AndroidMusic: boolean isLooping()
com.badlogic.gdx.backends.android.AndroidMusic: boolean isPlaying()
com.badlogic.gdx.backends.android.AndroidMusic: void pause()
com.badlogic.gdx.backends.android.AndroidMusic: void play()
com.badlogic.gdx.backends.android.AndroidMusic: void setLooping(boolean)
com.badlogic.gdx.backends.android.AndroidMusic: void setVolume(float)
com.badlogic.gdx.backends.android.AndroidMusic: float getVolume()
com.badlogic.gdx.backends.android.AndroidMusic: void setPan(float,float)
com.badlogic.gdx.backends.android.AndroidMusic: void stop()
com.badlogic.gdx.backends.android.AndroidMusic: void setPosition(float)
com.badlogic.gdx.backends.android.AndroidMusic: float getPosition()
com.badlogic.gdx.backends.android.AndroidMusic: float getDuration()
com.badlogic.gdx.backends.android.AndroidMusic: void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener)
com.badlogic.gdx.backends.android.AndroidMusic: void onCompletion(android.media.MediaPlayer)
com.badlogic.gdx.backends.android.AndroidMusic$1
com.badlogic.gdx.backends.android.AndroidMusic$1: com.badlogic.gdx.backends.android.AndroidMusic this$0
com.badlogic.gdx.backends.android.AndroidMusic$1: AndroidMusic$1(com.badlogic.gdx.backends.android.AndroidMusic)
com.badlogic.gdx.backends.android.AndroidMusic$1: void run()
com.badlogic.gdx.backends.android.AndroidNet
com.badlogic.gdx.backends.android.AndroidNet: com.badlogic.gdx.backends.android.AndroidApplicationBase app
com.badlogic.gdx.backends.android.AndroidNet: com.badlogic.gdx.net.NetJavaImpl netJavaImpl
com.badlogic.gdx.backends.android.AndroidNet: AndroidNet(com.badlogic.gdx.backends.android.AndroidApplicationBase)
com.badlogic.gdx.backends.android.AndroidNet: void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
com.badlogic.gdx.backends.android.AndroidNet: void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest)
com.badlogic.gdx.backends.android.AndroidNet: com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
com.badlogic.gdx.backends.android.AndroidNet: com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints)
com.badlogic.gdx.backends.android.AndroidNet: void openURI(java.lang.String)
com.badlogic.gdx.backends.android.AndroidNet$1
com.badlogic.gdx.backends.android.AndroidNet$1: android.net.Uri val$uri
com.badlogic.gdx.backends.android.AndroidNet$1: com.badlogic.gdx.backends.android.AndroidNet this$0
com.badlogic.gdx.backends.android.AndroidNet$1: AndroidNet$1(com.badlogic.gdx.backends.android.AndroidNet,android.net.Uri)
com.badlogic.gdx.backends.android.AndroidNet$1: void run()
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard: android.content.Context context
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard: android.os.Handler handler
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard: com.badlogic.gdx.backends.android.AndroidInput input
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard: android.app.Dialog dialog
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard: android.widget.TextView textView
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard: AndroidOnscreenKeyboard(android.content.Context,android.os.Handler,com.badlogic.gdx.backends.android.AndroidInput)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard: android.app.Dialog createDialog()
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard: android.widget.TextView createView(android.content.Context)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard: void setVisible(boolean)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard: boolean onTouch(android.view.View,android.view.MotionEvent)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard: boolean onKey(android.view.View,int,android.view.KeyEvent)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1: android.text.Editable editable
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1: AndroidOnscreenKeyboard$1(android.content.Context)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1: boolean getDefaultEditable()
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1: android.text.Editable getEditableText()
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1: android.text.method.MovementMethod getDefaultMovementMethod()
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1: boolean onKeyDown(int,android.view.KeyEvent)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1: boolean onKeyUp(int,android.view.KeyEvent)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2: com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard this$0
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2: AndroidOnscreenKeyboard$2(com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2: void run()
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1: com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1: AndroidOnscreenKeyboard$2$1(com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1: void run()
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2: int[] screenloc
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2: int keyboardHeight
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2: boolean keyboardShowing
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2: android.view.View val$content
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2: com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2: AndroidOnscreenKeyboard$2$2(com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2,android.view.View)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2: boolean onPreDraw()
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: AndroidOnscreenKeyboard$PassThroughEditable()
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: char charAt(int)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: int length()
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: java.lang.CharSequence subSequence(int,int)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: void getChars(int,int,char[],int)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: void removeSpan(java.lang.Object)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: void setSpan(java.lang.Object,int,int,int)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: int getSpanEnd(java.lang.Object)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: int getSpanFlags(java.lang.Object)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: int getSpanStart(java.lang.Object)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: java.lang.Object[] getSpans(int,int,java.lang.Class)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: int nextSpanTransition(int,int,java.lang.Class)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: android.text.Editable append(java.lang.CharSequence)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: android.text.Editable append(char)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: android.text.Editable append(java.lang.CharSequence,int,int)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: void clear()
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: void clearSpans()
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: android.text.Editable delete(int,int)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: android.text.InputFilter[] getFilters()
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: android.text.Editable insert(int,java.lang.CharSequence)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: android.text.Editable insert(int,java.lang.CharSequence,int,int)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: android.text.Editable replace(int,int,java.lang.CharSequence)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: void setFilters(android.text.InputFilter[])
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: java.lang.Appendable append(char)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: java.lang.Appendable append(java.lang.CharSequence,int,int)
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable: java.lang.Appendable append(java.lang.CharSequence)
com.badlogic.gdx.backends.android.AndroidPreferences
com.badlogic.gdx.backends.android.AndroidPreferences: android.content.SharedPreferences sharedPrefs
com.badlogic.gdx.backends.android.AndroidPreferences: android.content.SharedPreferences$Editor editor
com.badlogic.gdx.backends.android.AndroidPreferences: AndroidPreferences(android.content.SharedPreferences)
com.badlogic.gdx.backends.android.AndroidPreferences: void putBoolean(java.lang.String,boolean)
com.badlogic.gdx.backends.android.AndroidPreferences: void putInteger(java.lang.String,int)
com.badlogic.gdx.backends.android.AndroidPreferences: void putLong(java.lang.String,long)
com.badlogic.gdx.backends.android.AndroidPreferences: void putFloat(java.lang.String,float)
com.badlogic.gdx.backends.android.AndroidPreferences: void putString(java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidPreferences: void put(java.util.Map)
com.badlogic.gdx.backends.android.AndroidPreferences: boolean getBoolean(java.lang.String)
com.badlogic.gdx.backends.android.AndroidPreferences: int getInteger(java.lang.String)
com.badlogic.gdx.backends.android.AndroidPreferences: long getLong(java.lang.String)
com.badlogic.gdx.backends.android.AndroidPreferences: float getFloat(java.lang.String)
com.badlogic.gdx.backends.android.AndroidPreferences: java.lang.String getString(java.lang.String)
com.badlogic.gdx.backends.android.AndroidPreferences: boolean getBoolean(java.lang.String,boolean)
com.badlogic.gdx.backends.android.AndroidPreferences: int getInteger(java.lang.String,int)
com.badlogic.gdx.backends.android.AndroidPreferences: long getLong(java.lang.String,long)
com.badlogic.gdx.backends.android.AndroidPreferences: float getFloat(java.lang.String,float)
com.badlogic.gdx.backends.android.AndroidPreferences: java.lang.String getString(java.lang.String,java.lang.String)
com.badlogic.gdx.backends.android.AndroidPreferences: java.util.Map get()
com.badlogic.gdx.backends.android.AndroidPreferences: boolean contains(java.lang.String)
com.badlogic.gdx.backends.android.AndroidPreferences: void clear()
com.badlogic.gdx.backends.android.AndroidPreferences: void flush()
com.badlogic.gdx.backends.android.AndroidPreferences: void remove(java.lang.String)
com.badlogic.gdx.backends.android.AndroidPreferences: void edit()
com.badlogic.gdx.backends.android.AndroidSound
com.badlogic.gdx.backends.android.AndroidSound: android.media.SoundPool soundPool
com.badlogic.gdx.backends.android.AndroidSound: android.media.AudioManager manager
com.badlogic.gdx.backends.android.AndroidSound: int soundId
com.badlogic.gdx.backends.android.AndroidSound: com.badlogic.gdx.utils.IntArray streamIds
com.badlogic.gdx.backends.android.AndroidSound: AndroidSound(android.media.SoundPool,android.media.AudioManager,int)
com.badlogic.gdx.backends.android.AndroidSound: void dispose()
com.badlogic.gdx.backends.android.AndroidSound: long play()
com.badlogic.gdx.backends.android.AndroidSound: long play(float)
com.badlogic.gdx.backends.android.AndroidSound: void stop()
com.badlogic.gdx.backends.android.AndroidSound: void stop(long)
com.badlogic.gdx.backends.android.AndroidSound: void pause()
com.badlogic.gdx.backends.android.AndroidSound: void pause(long)
com.badlogic.gdx.backends.android.AndroidSound: void resume()
com.badlogic.gdx.backends.android.AndroidSound: void resume(long)
com.badlogic.gdx.backends.android.AndroidSound: void setPitch(long,float)
com.badlogic.gdx.backends.android.AndroidSound: void setVolume(long,float)
com.badlogic.gdx.backends.android.AndroidSound: long loop()
com.badlogic.gdx.backends.android.AndroidSound: long loop(float)
com.badlogic.gdx.backends.android.AndroidSound: void setLooping(long,boolean)
com.badlogic.gdx.backends.android.AndroidSound: void setPan(long,float,float)
com.badlogic.gdx.backends.android.AndroidSound: long play(float,float,float)
com.badlogic.gdx.backends.android.AndroidSound: long loop(float,float,float)
com.badlogic.gdx.backends.android.AndroidSound: void setPriority(long,int)
com.badlogic.gdx.backends.android.AndroidTouchHandler
com.badlogic.gdx.backends.android.AndroidTouchHandler: void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput)
com.badlogic.gdx.backends.android.AndroidTouchHandler: boolean supportsMultitouch(android.content.Context)
com.badlogic.gdx.backends.android.AndroidVisibilityListener
com.badlogic.gdx.backends.android.AndroidVisibilityListener: AndroidVisibilityListener()
com.badlogic.gdx.backends.android.AndroidVisibilityListener: void createListener(com.badlogic.gdx.backends.android.AndroidApplicationBase)
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1: com.badlogic.gdx.backends.android.AndroidApplicationBase val$application
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1: com.badlogic.gdx.backends.android.AndroidVisibilityListener this$0
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1: AndroidVisibilityListener$1(com.badlogic.gdx.backends.android.AndroidVisibilityListener,com.badlogic.gdx.backends.android.AndroidApplicationBase)
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1: void onSystemUiVisibilityChange(int)
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1: com.badlogic.gdx.backends.android.AndroidVisibilityListener$1 this$1
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1: AndroidVisibilityListener$1$1(com.badlogic.gdx.backends.android.AndroidVisibilityListener$1)
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1: void run()
com.badlogic.gdx.backends.android.AndroidWallpaperListener
com.badlogic.gdx.backends.android.AndroidWallpaperListener: void offsetChange(float,float,float,float,int,int)
com.badlogic.gdx.backends.android.AndroidWallpaperListener: void previewStateChange(boolean)
com.badlogic.gdx.backends.android.InputProcessorLW
com.badlogic.gdx.backends.android.InputProcessorLW: void touchDrop(int,int)
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy: FillResolutionStrategy()
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy: com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int)
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy: int width
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy: int height
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy: FixedResolutionStrategy(int,int)
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy: com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: java.lang.String TAG
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: boolean DEBUG
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: GLSurfaceView20(android.content.Context,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: GLSurfaceView20(android.content.Context,boolean,int,int,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: void onMeasure(int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: void init(boolean,int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20: void <clinit>()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 this$0
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1: GLSurfaceView20$1(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20,android.view.View,boolean)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1: boolean deleteSurroundingText(int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1: void sendDownUpKeyEventForBackwardCompatibility(int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int EGL_OPENGL_ES2_BIT
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int[] s_configAttribs2
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int mRedSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int mGreenSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int mBlueSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int mAlphaSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int mDepthSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int mStencilSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int[] mValue
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: GLSurfaceView20$ConfigChooser(int,int,int,int,int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser: void <clinit>()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory: int EGL_CONTEXT_CLIENT_VERSION
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory: GLSurfaceView20$ContextFactory()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory: void <clinit>()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18: java.lang.String TAG
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18: boolean DEBUG
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18: com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18: GLSurfaceView20API18(android.content.Context,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18: GLSurfaceView20API18(android.content.Context,boolean,int,int,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18: void onMeasure(int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18: void init(boolean,int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18: void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18: void <clinit>()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$1
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$1: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18 this$0
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$1: GLSurfaceView20API18$1(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18,android.view.View,boolean)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$1: boolean deleteSurroundingText(int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$1: void sendDownUpKeyEventForBackwardCompatibility(int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: int EGL_OPENGL_ES2_BIT
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: int[] s_configAttribs2
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: int mRedSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: int mGreenSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: int mBlueSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: int mAlphaSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: int mDepthSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: int mStencilSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: int[] mValue
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: GLSurfaceView20API18$ConfigChooser(int,int,int,int,int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser: void <clinit>()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ContextFactory: int EGL_CONTEXT_CLIENT_VERSION
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ContextFactory: GLSurfaceView20API18$ContextFactory()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ContextFactory: void <clinit>()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: java.lang.String TAG
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: boolean LOG_ATTACH_DETACH
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: boolean LOG_THREADS
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: boolean LOG_PAUSE_RESUME
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: boolean LOG_SURFACE
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: boolean LOG_RENDERER
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: boolean LOG_RENDERER_DRAW_FRAME
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: boolean LOG_EGL
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: int RENDERMODE_WHEN_DIRTY
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: int RENDERMODE_CONTINUOUSLY
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: int DEBUG_CHECK_GL_ERROR
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: int DEBUG_LOG_GL_CALLS
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager sGLThreadManager
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: java.lang.ref.WeakReference mThisWeakRef
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread mGLThread
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: android.opengl.GLSurfaceView$Renderer mRenderer
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: boolean mDetached
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory mEGLContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper mGLWrapper
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: int mDebugFlags
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: int mEGLContextClientVersion
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: boolean mPreserveEGLContextOnPause
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: GLSurfaceViewAPI18(android.content.Context)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: GLSurfaceViewAPI18(android.content.Context,android.util.AttributeSet)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void finalize()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void init()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setDebugFlags(int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: int getDebugFlags()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setPreserveEGLContextOnPause(boolean)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: boolean getPreserveEGLContextOnPause()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderer(android.opengl.GLSurfaceView$Renderer)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setEGLConfigChooser(boolean)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setEGLConfigChooser(int,int,int,int,int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setEGLContextClientVersion(int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void setRenderMode(int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: int getRenderMode()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void requestRender()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void surfaceCreated(android.view.SurfaceHolder)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void surfaceDestroyed(android.view.SurfaceHolder)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void onPause()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void onResume()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void onAttachedToWindow()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void onDetachedFromWindow()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void checkRenderThreadState()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: int access$200(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: android.opengl.GLSurfaceView$EGLConfigChooser access$300(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory access$400(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory access$500(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper access$600(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: int access$700(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager access$800()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: boolean access$900(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: android.opengl.GLSurfaceView$Renderer access$1000(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18: void <clinit>()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$1
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser: int[] mConfigSpec
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser: GLSurfaceViewAPI18$BaseConfigChooser(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18,int[])
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser: int[] filterConfigSpec(int[])
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser: int[] mValue
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser: int mRedSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser: int mGreenSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser: int mBlueSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser: int mAlphaSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser: int mDepthSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser: int mStencilSize
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser: GLSurfaceViewAPI18$ComponentSizeChooser(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18,int,int,int,int,int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser: int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory: int EGL_CONTEXT_CLIENT_VERSION
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory: GLSurfaceViewAPI18$DefaultContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory: GLSurfaceViewAPI18$DefaultContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18,com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$1)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultWindowSurfaceFactory
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultWindowSurfaceFactory: GLSurfaceViewAPI18$DefaultWindowSurfaceFactory()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultWindowSurfaceFactory: javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultWindowSurfaceFactory: void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultWindowSurfaceFactory: GLSurfaceViewAPI18$DefaultWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$1)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory: javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory: void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: java.lang.ref.WeakReference mGLSurfaceViewWeakRef
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: javax.microedition.khronos.egl.EGL10 mEgl
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: javax.microedition.khronos.egl.EGLDisplay mEglDisplay
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: javax.microedition.khronos.egl.EGLSurface mEglSurface
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: javax.microedition.khronos.egl.EGLConfig mEglConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: javax.microedition.khronos.egl.EGLContext mEglContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: GLSurfaceViewAPI18$EglHelper(java.lang.ref.WeakReference)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: void start()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: boolean createSurface()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: javax.microedition.khronos.opengles.GL createGL()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: int swap()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: void destroySurface()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: void destroySurfaceImp()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: void finish()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: void throwEglException(java.lang.String)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: void throwEglException(java.lang.String,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: void logEglErrorAsWarning(java.lang.String,java.lang.String,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: java.lang.String getErrorString(int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper: java.lang.String formatEglError(java.lang.String,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean mShouldExit
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean mExited
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean mRequestPaused
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean mPaused
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean mHasSurface
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean mSurfaceIsBad
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean mWaitingForSurface
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean mHaveEglContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean mHaveEglSurface
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean mFinishedCreatingEglSurface
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean mShouldReleaseEglContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: int mWidth
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: int mHeight
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: int mRenderMode
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean mRequestRender
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean mRenderComplete
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: java.util.ArrayList mEventQueue
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean mSizeChanged
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper mEglHelper
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: java.lang.ref.WeakReference mGLSurfaceViewWeakRef
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: GLSurfaceViewAPI18$GLThread(java.lang.ref.WeakReference)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void run()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void stopEglSurfaceLocked()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void stopEglContextLocked()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void guardedRun()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean ableToDraw()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean readyToDraw()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void setRenderMode(int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: int getRenderMode()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void requestRender()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void surfaceCreated()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void surfaceDestroyed()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void onPause()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void onResume()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void onWindowResize(int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void requestExitAndWait()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void requestReleaseEglContextLocked()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: void queueEvent(java.lang.Runnable)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread: boolean access$1102(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread,boolean)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: java.lang.String TAG
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: boolean mGLESVersionCheckComplete
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: int mGLESVersion
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: boolean mGLESDriverCheckComplete
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: boolean mMultipleGLESContextsAllowed
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: boolean mLimitedGLESContexts
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: int kGLES_20
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: java.lang.String kMSM7K_RENDERER_PREFIX
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread mEglOwner
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: GLSurfaceViewAPI18$GLThreadManager()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: boolean tryAcquireEglContextLocked(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: void releaseEglContextLocked(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: boolean shouldReleaseEGLContextWhenPausing()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: boolean shouldTerminateEGLWhenPausing()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: void checkGLDriver(javax.microedition.khronos.opengles.GL10)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: void checkGLESVersion()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: GLSurfaceViewAPI18$GLThreadManager(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$1)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager: void <clinit>()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter: java.lang.StringBuilder mBuilder
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter: GLSurfaceViewAPI18$LogWriter()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter: void close()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter: void flush()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter: void write(char[],int,int)
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter: void flushBuilder()
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$SimpleEGLConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$SimpleEGLConfigChooser: com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$SimpleEGLConfigChooser: GLSurfaceViewAPI18$SimpleEGLConfigChooser(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18,boolean)
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int EGL_OPENGL_ES2_BIT
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int EGL_COVERAGE_BUFFERS_NV
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int EGL_COVERAGE_SAMPLES_NV
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: java.lang.String TAG
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int mRedSize
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int mGreenSize
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int mBlueSize
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int mAlphaSize
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int mDepthSize
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int mStencilSize
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int mNumSamples
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int[] mConfigAttribs
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int[] mValue
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: GdxEglConfigChooser(int,int,int,int,int,int,int)
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser: void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy: float ratio
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy: RatioResolutionStrategy(float)
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy: RatioResolutionStrategy(float,float)
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy: com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int)
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy: com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int)
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension: int width
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension: int height
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension: ResolutionStrategy$MeasuredDimension(int,int)
com.badlogic.gdx.controllers.ControlType
com.badlogic.gdx.controllers.ControlType: com.badlogic.gdx.controllers.ControlType button
com.badlogic.gdx.controllers.ControlType: com.badlogic.gdx.controllers.ControlType axis
com.badlogic.gdx.controllers.ControlType: com.badlogic.gdx.controllers.ControlType slider
com.badlogic.gdx.controllers.ControlType: com.badlogic.gdx.controllers.ControlType pov
com.badlogic.gdx.controllers.ControlType: com.badlogic.gdx.controllers.ControlType accelerometer
com.badlogic.gdx.controllers.ControlType: com.badlogic.gdx.controllers.ControlType[] $VALUES
com.badlogic.gdx.controllers.ControlType: com.badlogic.gdx.controllers.ControlType[] values()
com.badlogic.gdx.controllers.ControlType: com.badlogic.gdx.controllers.ControlType valueOf(java.lang.String)
com.badlogic.gdx.controllers.ControlType: ControlType(java.lang.String,int)
com.badlogic.gdx.controllers.ControlType: void <clinit>()
com.badlogic.gdx.controllers.Controller
com.badlogic.gdx.controllers.Controller: boolean getButton(int)
com.badlogic.gdx.controllers.Controller: float getAxis(int)
com.badlogic.gdx.controllers.Controller: com.badlogic.gdx.controllers.PovDirection getPov(int)
com.badlogic.gdx.controllers.Controller: boolean getSliderX(int)
com.badlogic.gdx.controllers.Controller: boolean getSliderY(int)
com.badlogic.gdx.controllers.Controller: com.badlogic.gdx.math.Vector3 getAccelerometer(int)
com.badlogic.gdx.controllers.Controller: void setAccelerometerSensitivity(float)
com.badlogic.gdx.controllers.Controller: java.lang.String getName()
com.badlogic.gdx.controllers.Controller: void addListener(com.badlogic.gdx.controllers.ControllerListener)
com.badlogic.gdx.controllers.Controller: void removeListener(com.badlogic.gdx.controllers.ControllerListener)
com.badlogic.gdx.controllers.ControllerAdapter
com.badlogic.gdx.controllers.ControllerAdapter: ControllerAdapter()
com.badlogic.gdx.controllers.ControllerAdapter: boolean buttonDown(com.badlogic.gdx.controllers.Controller,int)
com.badlogic.gdx.controllers.ControllerAdapter: boolean buttonUp(com.badlogic.gdx.controllers.Controller,int)
com.badlogic.gdx.controllers.ControllerAdapter: boolean axisMoved(com.badlogic.gdx.controllers.Controller,int,float)
com.badlogic.gdx.controllers.ControllerAdapter: boolean povMoved(com.badlogic.gdx.controllers.Controller,int,com.badlogic.gdx.controllers.PovDirection)
com.badlogic.gdx.controllers.ControllerAdapter: boolean xSliderMoved(com.badlogic.gdx.controllers.Controller,int,boolean)
com.badlogic.gdx.controllers.ControllerAdapter: boolean ySliderMoved(com.badlogic.gdx.controllers.Controller,int,boolean)
com.badlogic.gdx.controllers.ControllerAdapter: boolean accelerometerMoved(com.badlogic.gdx.controllers.Controller,int,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.controllers.ControllerAdapter: void connected(com.badlogic.gdx.controllers.Controller)
com.badlogic.gdx.controllers.ControllerAdapter: void disconnected(com.badlogic.gdx.controllers.Controller)
com.badlogic.gdx.controllers.ControllerListener
com.badlogic.gdx.controllers.ControllerListener: void connected(com.badlogic.gdx.controllers.Controller)
com.badlogic.gdx.controllers.ControllerListener: void disconnected(com.badlogic.gdx.controllers.Controller)
com.badlogic.gdx.controllers.ControllerListener: boolean buttonDown(com.badlogic.gdx.controllers.Controller,int)
com.badlogic.gdx.controllers.ControllerListener: boolean buttonUp(com.badlogic.gdx.controllers.Controller,int)
com.badlogic.gdx.controllers.ControllerListener: boolean axisMoved(com.badlogic.gdx.controllers.Controller,int,float)
com.badlogic.gdx.controllers.ControllerListener: boolean povMoved(com.badlogic.gdx.controllers.Controller,int,com.badlogic.gdx.controllers.PovDirection)
com.badlogic.gdx.controllers.ControllerListener: boolean xSliderMoved(com.badlogic.gdx.controllers.Controller,int,boolean)
com.badlogic.gdx.controllers.ControllerListener: boolean ySliderMoved(com.badlogic.gdx.controllers.Controller,int,boolean)
com.badlogic.gdx.controllers.ControllerListener: boolean accelerometerMoved(com.badlogic.gdx.controllers.Controller,int,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.controllers.ControllerManager
com.badlogic.gdx.controllers.ControllerManager: com.badlogic.gdx.utils.Array getControllers()
com.badlogic.gdx.controllers.ControllerManager: void addListener(com.badlogic.gdx.controllers.ControllerListener)
com.badlogic.gdx.controllers.ControllerManager: void removeListener(com.badlogic.gdx.controllers.ControllerListener)
com.badlogic.gdx.controllers.ControllerManager: void clearListeners()
com.badlogic.gdx.controllers.ControllerManagerStub
com.badlogic.gdx.controllers.ControllerManagerStub: com.badlogic.gdx.utils.Array controllers
com.badlogic.gdx.controllers.ControllerManagerStub: ControllerManagerStub()
com.badlogic.gdx.controllers.ControllerManagerStub: com.badlogic.gdx.utils.Array getControllers()
com.badlogic.gdx.controllers.ControllerManagerStub: void addListener(com.badlogic.gdx.controllers.ControllerListener)
com.badlogic.gdx.controllers.ControllerManagerStub: void removeListener(com.badlogic.gdx.controllers.ControllerListener)
com.badlogic.gdx.controllers.ControllerManagerStub: void clearListeners()
com.badlogic.gdx.controllers.Controllers
com.badlogic.gdx.controllers.Controllers: java.lang.String TAG
com.badlogic.gdx.controllers.Controllers: com.badlogic.gdx.utils.ObjectMap managers
com.badlogic.gdx.controllers.Controllers: Controllers()
com.badlogic.gdx.controllers.Controllers: com.badlogic.gdx.utils.Array getControllers()
com.badlogic.gdx.controllers.Controllers: void addListener(com.badlogic.gdx.controllers.ControllerListener)
com.badlogic.gdx.controllers.Controllers: void removeListener(com.badlogic.gdx.controllers.ControllerListener)
com.badlogic.gdx.controllers.Controllers: com.badlogic.gdx.controllers.ControllerManager getManager()
com.badlogic.gdx.controllers.Controllers: void initialize()
com.badlogic.gdx.controllers.Controllers: void <clinit>()
com.badlogic.gdx.controllers.Controllers$1
com.badlogic.gdx.controllers.Controllers$1: com.badlogic.gdx.Application val$app
com.badlogic.gdx.controllers.Controllers$1: Controllers$1(com.badlogic.gdx.Application)
com.badlogic.gdx.controllers.Controllers$1: void resume()
com.badlogic.gdx.controllers.Controllers$1: void pause()
com.badlogic.gdx.controllers.Controllers$1: void dispose()
com.badlogic.gdx.controllers.PovDirection
com.badlogic.gdx.controllers.PovDirection: com.badlogic.gdx.controllers.PovDirection center
com.badlogic.gdx.controllers.PovDirection: com.badlogic.gdx.controllers.PovDirection north
com.badlogic.gdx.controllers.PovDirection: com.badlogic.gdx.controllers.PovDirection south
com.badlogic.gdx.controllers.PovDirection: com.badlogic.gdx.controllers.PovDirection east
com.badlogic.gdx.controllers.PovDirection: com.badlogic.gdx.controllers.PovDirection west
com.badlogic.gdx.controllers.PovDirection: com.badlogic.gdx.controllers.PovDirection northEast
com.badlogic.gdx.controllers.PovDirection: com.badlogic.gdx.controllers.PovDirection southEast
com.badlogic.gdx.controllers.PovDirection: com.badlogic.gdx.controllers.PovDirection northWest
com.badlogic.gdx.controllers.PovDirection: com.badlogic.gdx.controllers.PovDirection southWest
com.badlogic.gdx.controllers.PovDirection: com.badlogic.gdx.controllers.PovDirection[] $VALUES
com.badlogic.gdx.controllers.PovDirection: com.badlogic.gdx.controllers.PovDirection[] values()
com.badlogic.gdx.controllers.PovDirection: com.badlogic.gdx.controllers.PovDirection valueOf(java.lang.String)
com.badlogic.gdx.controllers.PovDirection: PovDirection(java.lang.String,int)
com.badlogic.gdx.controllers.PovDirection: void <clinit>()
com.badlogic.gdx.controllers.android.AndroidController
com.badlogic.gdx.controllers.android.AndroidController: int deviceId
com.badlogic.gdx.controllers.android.AndroidController: boolean attached
com.badlogic.gdx.controllers.android.AndroidController: java.lang.String name
com.badlogic.gdx.controllers.android.AndroidController: com.badlogic.gdx.utils.IntIntMap buttons
com.badlogic.gdx.controllers.android.AndroidController: float[] axes
com.badlogic.gdx.controllers.android.AndroidController: int[] axesIds
com.badlogic.gdx.controllers.android.AndroidController: com.badlogic.gdx.utils.Array listeners
com.badlogic.gdx.controllers.android.AndroidController: AndroidController(int,java.lang.String)
com.badlogic.gdx.controllers.android.AndroidController: boolean isAttached()
com.badlogic.gdx.controllers.android.AndroidController: void setAttached(boolean)
com.badlogic.gdx.controllers.android.AndroidController: int getDeviceId()
com.badlogic.gdx.controllers.android.AndroidController: boolean getSliderX(int)
com.badlogic.gdx.controllers.android.AndroidController: boolean getSliderY(int)
com.badlogic.gdx.controllers.android.AndroidController: com.badlogic.gdx.math.Vector3 getAccelerometer(int)
com.badlogic.gdx.controllers.android.AndroidController: void setAccelerometerSensitivity(float)
com.badlogic.gdx.controllers.android.AndroidController: void addListener(com.badlogic.gdx.controllers.ControllerListener)
com.badlogic.gdx.controllers.android.AndroidController: void removeListener(com.badlogic.gdx.controllers.ControllerListener)
com.badlogic.gdx.controllers.android.AndroidController: com.badlogic.gdx.utils.Array getListeners()
com.badlogic.gdx.controllers.android.AndroidController: boolean getButton(int)
com.badlogic.gdx.controllers.android.AndroidController: float getAxis(int)
com.badlogic.gdx.controllers.android.AndroidController: com.badlogic.gdx.controllers.PovDirection getPov(int)
com.badlogic.gdx.controllers.android.AndroidController: java.lang.String getName()
com.badlogic.gdx.controllers.android.AndroidControllerEvent
com.badlogic.gdx.controllers.android.AndroidControllerEvent: int BUTTON_DOWN
com.badlogic.gdx.controllers.android.AndroidControllerEvent: int BUTTON_UP
com.badlogic.gdx.controllers.android.AndroidControllerEvent: int AXIS
com.badlogic.gdx.controllers.android.AndroidControllerEvent: int POV
com.badlogic.gdx.controllers.android.AndroidControllerEvent: int CONNECTED
com.badlogic.gdx.controllers.android.AndroidControllerEvent: int DISCONNECTED
com.badlogic.gdx.controllers.android.AndroidControllerEvent: com.badlogic.gdx.controllers.android.AndroidController controller
com.badlogic.gdx.controllers.android.AndroidControllerEvent: int type
com.badlogic.gdx.controllers.android.AndroidControllerEvent: int code
com.badlogic.gdx.controllers.android.AndroidControllerEvent: float axisValue
com.badlogic.gdx.controllers.android.AndroidControllerEvent: com.badlogic.gdx.controllers.PovDirection povDirection
com.badlogic.gdx.controllers.android.AndroidControllerEvent: AndroidControllerEvent()
com.badlogic.gdx.controllers.android.AndroidControllers
com.badlogic.gdx.controllers.android.AndroidControllers: java.lang.String TAG
com.badlogic.gdx.controllers.android.AndroidControllers: com.badlogic.gdx.utils.IntMap controllerMap
com.badlogic.gdx.controllers.android.AndroidControllers: com.badlogic.gdx.utils.Array controllers
com.badlogic.gdx.controllers.android.AndroidControllers: com.badlogic.gdx.utils.Array listeners
com.badlogic.gdx.controllers.android.AndroidControllers: com.badlogic.gdx.utils.Array eventQueue
com.badlogic.gdx.controllers.android.AndroidControllers: com.badlogic.gdx.utils.Pool eventPool
com.badlogic.gdx.controllers.android.AndroidControllers: AndroidControllers()
com.badlogic.gdx.controllers.android.AndroidControllers: void setupEventQueue()
com.badlogic.gdx.controllers.android.AndroidControllers: boolean onGenericMotion(android.view.View,android.view.MotionEvent)
com.badlogic.gdx.controllers.android.AndroidControllers: boolean onKey(android.view.View,int,android.view.KeyEvent)
com.badlogic.gdx.controllers.android.AndroidControllers: void gatherControllers(boolean)
com.badlogic.gdx.controllers.android.AndroidControllers: void addController(int,boolean)
com.badlogic.gdx.controllers.android.AndroidControllers: void removeController(int)
com.badlogic.gdx.controllers.android.AndroidControllers: boolean isController(android.view.InputDevice)
com.badlogic.gdx.controllers.android.AndroidControllers: com.badlogic.gdx.utils.Array getControllers()
com.badlogic.gdx.controllers.android.AndroidControllers: void addListener(com.badlogic.gdx.controllers.ControllerListener)
com.badlogic.gdx.controllers.android.AndroidControllers: void removeListener(com.badlogic.gdx.controllers.ControllerListener)
com.badlogic.gdx.controllers.android.AndroidControllers: void pause()
com.badlogic.gdx.controllers.android.AndroidControllers: void resume()
com.badlogic.gdx.controllers.android.AndroidControllers: void dispose()
com.badlogic.gdx.controllers.android.AndroidControllers: void clearListeners()
com.badlogic.gdx.controllers.android.AndroidControllers: com.badlogic.gdx.utils.Array access$000(com.badlogic.gdx.controllers.android.AndroidControllers)
com.badlogic.gdx.controllers.android.AndroidControllers: com.badlogic.gdx.utils.Array access$100(com.badlogic.gdx.controllers.android.AndroidControllers)
com.badlogic.gdx.controllers.android.AndroidControllers: com.badlogic.gdx.utils.Array access$200(com.badlogic.gdx.controllers.android.AndroidControllers)
com.badlogic.gdx.controllers.android.AndroidControllers: com.badlogic.gdx.utils.Pool access$300(com.badlogic.gdx.controllers.android.AndroidControllers)
com.badlogic.gdx.controllers.android.AndroidControllers$1
com.badlogic.gdx.controllers.android.AndroidControllers$1: com.badlogic.gdx.controllers.android.AndroidControllers this$0
com.badlogic.gdx.controllers.android.AndroidControllers$1: AndroidControllers$1(com.badlogic.gdx.controllers.android.AndroidControllers)
com.badlogic.gdx.controllers.android.AndroidControllers$1: com.badlogic.gdx.controllers.android.AndroidControllerEvent newObject()
com.badlogic.gdx.controllers.android.AndroidControllers$1: java.lang.Object newObject()
com.badlogic.gdx.controllers.android.AndroidControllers$2
com.badlogic.gdx.controllers.android.AndroidControllers$2: com.badlogic.gdx.controllers.android.AndroidControllers this$0
com.badlogic.gdx.controllers.android.AndroidControllers$2: AndroidControllers$2(com.badlogic.gdx.controllers.android.AndroidControllers)
com.badlogic.gdx.controllers.android.AndroidControllers$2: void run()
com.badlogic.gdx.controllers.android.ControllerLifeCycleListener
com.badlogic.gdx.controllers.android.ControllerLifeCycleListener: java.lang.String TAG
com.badlogic.gdx.controllers.android.ControllerLifeCycleListener: android.hardware.input.InputManager inputManager
com.badlogic.gdx.controllers.android.ControllerLifeCycleListener: com.badlogic.gdx.controllers.android.AndroidControllers controllers
com.badlogic.gdx.controllers.android.ControllerLifeCycleListener: ControllerLifeCycleListener(com.badlogic.gdx.controllers.android.AndroidControllers)
com.badlogic.gdx.controllers.android.ControllerLifeCycleListener: void resume()
com.badlogic.gdx.controllers.android.ControllerLifeCycleListener: void pause()
com.badlogic.gdx.controllers.android.ControllerLifeCycleListener: void onInputDeviceAdded(int)
com.badlogic.gdx.controllers.android.ControllerLifeCycleListener: void onInputDeviceRemoved(int)
com.badlogic.gdx.controllers.android.ControllerLifeCycleListener: void onInputDeviceChanged(int)
com.badlogic.gdx.controllers.android.ControllerLifeCycleListener: void dispose()
com.badlogic.gdx.controllers.mappings.Ouya
com.badlogic.gdx.controllers.mappings.Ouya: java.lang.String ID
com.badlogic.gdx.controllers.mappings.Ouya: int BUTTON_O
com.badlogic.gdx.controllers.mappings.Ouya: int BUTTON_U
com.badlogic.gdx.controllers.mappings.Ouya: int BUTTON_Y
com.badlogic.gdx.controllers.mappings.Ouya: int BUTTON_A
com.badlogic.gdx.controllers.mappings.Ouya: int BUTTON_MENU
com.badlogic.gdx.controllers.mappings.Ouya: int BUTTON_DPAD_UP
com.badlogic.gdx.controllers.mappings.Ouya: int BUTTON_DPAD_DOWN
com.badlogic.gdx.controllers.mappings.Ouya: int BUTTON_DPAD_RIGHT
com.badlogic.gdx.controllers.mappings.Ouya: int BUTTON_DPAD_LEFT
com.badlogic.gdx.controllers.mappings.Ouya: int BUTTON_L1
com.badlogic.gdx.controllers.mappings.Ouya: int BUTTON_L2
com.badlogic.gdx.controllers.mappings.Ouya: int BUTTON_L3
com.badlogic.gdx.controllers.mappings.Ouya: int BUTTON_R1
com.badlogic.gdx.controllers.mappings.Ouya: int BUTTON_R2
com.badlogic.gdx.controllers.mappings.Ouya: int BUTTON_R3
com.badlogic.gdx.controllers.mappings.Ouya: int AXIS_LEFT_X
com.badlogic.gdx.controllers.mappings.Ouya: int AXIS_LEFT_Y
com.badlogic.gdx.controllers.mappings.Ouya: int AXIS_LEFT_TRIGGER
com.badlogic.gdx.controllers.mappings.Ouya: int AXIS_RIGHT_X
com.badlogic.gdx.controllers.mappings.Ouya: int AXIS_RIGHT_Y
com.badlogic.gdx.controllers.mappings.Ouya: int AXIS_RIGHT_TRIGGER
com.badlogic.gdx.controllers.mappings.Ouya: float STICK_DEADZONE
com.badlogic.gdx.controllers.mappings.Ouya: boolean runningOnOuya
com.badlogic.gdx.controllers.mappings.Ouya: boolean simulateRunningOnOuya
com.badlogic.gdx.controllers.mappings.Ouya: Ouya()
com.badlogic.gdx.controllers.mappings.Ouya: boolean isRunningOnOuya()
com.badlogic.gdx.controllers.mappings.Ouya: void <clinit>()
com.badlogic.gdx.files.FileHandle
com.badlogic.gdx.files.FileHandle: java.io.File file
com.badlogic.gdx.files.FileHandle: com.badlogic.gdx.Files$FileType type
com.badlogic.gdx.files.FileHandle: FileHandle()
com.badlogic.gdx.files.FileHandle: FileHandle(java.lang.String)
com.badlogic.gdx.files.FileHandle: FileHandle(java.io.File)
com.badlogic.gdx.files.FileHandle: FileHandle(java.lang.String,com.badlogic.gdx.Files$FileType)
com.badlogic.gdx.files.FileHandle: FileHandle(java.io.File,com.badlogic.gdx.Files$FileType)
com.badlogic.gdx.files.FileHandle: java.lang.String path()
com.badlogic.gdx.files.FileHandle: java.lang.String name()
com.badlogic.gdx.files.FileHandle: java.lang.String extension()
com.badlogic.gdx.files.FileHandle: java.lang.String nameWithoutExtension()
com.badlogic.gdx.files.FileHandle: java.lang.String pathWithoutExtension()
com.badlogic.gdx.files.FileHandle: com.badlogic.gdx.Files$FileType type()
com.badlogic.gdx.files.FileHandle: java.io.File file()
com.badlogic.gdx.files.FileHandle: java.io.InputStream read()
com.badlogic.gdx.files.FileHandle: java.io.BufferedInputStream read(int)
com.badlogic.gdx.files.FileHandle: java.io.Reader reader()
com.badlogic.gdx.files.FileHandle: java.io.Reader reader(java.lang.String)
com.badlogic.gdx.files.FileHandle: java.io.BufferedReader reader(int)
com.badlogic.gdx.files.FileHandle: java.io.BufferedReader reader(int,java.lang.String)
com.badlogic.gdx.files.FileHandle: java.lang.String readString()
com.badlogic.gdx.files.FileHandle: java.lang.String readString(java.lang.String)
com.badlogic.gdx.files.FileHandle: byte[] readBytes()
com.badlogic.gdx.files.FileHandle: int estimateLength()
com.badlogic.gdx.files.FileHandle: int readBytes(byte[],int,int)
com.badlogic.gdx.files.FileHandle: java.io.OutputStream write(boolean)
com.badlogic.gdx.files.FileHandle: java.io.OutputStream write(boolean,int)
com.badlogic.gdx.files.FileHandle: void write(java.io.InputStream,boolean)
com.badlogic.gdx.files.FileHandle: java.io.Writer writer(boolean)
com.badlogic.gdx.files.FileHandle: java.io.Writer writer(boolean,java.lang.String)
com.badlogic.gdx.files.FileHandle: void writeString(java.lang.String,boolean)
com.badlogic.gdx.files.FileHandle: void writeString(java.lang.String,boolean,java.lang.String)
com.badlogic.gdx.files.FileHandle: void writeBytes(byte[],boolean)
com.badlogic.gdx.files.FileHandle: void writeBytes(byte[],int,int,boolean)
com.badlogic.gdx.files.FileHandle: com.badlogic.gdx.files.FileHandle[] list()
com.badlogic.gdx.files.FileHandle: com.badlogic.gdx.files.FileHandle[] list(java.io.FileFilter)
com.badlogic.gdx.files.FileHandle: com.badlogic.gdx.files.FileHandle[] list(java.io.FilenameFilter)
com.badlogic.gdx.files.FileHandle: com.badlogic.gdx.files.FileHandle[] list(java.lang.String)
com.badlogic.gdx.files.FileHandle: boolean isDirectory()
com.badlogic.gdx.files.FileHandle: com.badlogic.gdx.files.FileHandle child(java.lang.String)
com.badlogic.gdx.files.FileHandle: com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
com.badlogic.gdx.files.FileHandle: com.badlogic.gdx.files.FileHandle parent()
com.badlogic.gdx.files.FileHandle: void mkdirs()
com.badlogic.gdx.files.FileHandle: boolean exists()
com.badlogic.gdx.files.FileHandle: boolean delete()
com.badlogic.gdx.files.FileHandle: boolean deleteDirectory()
com.badlogic.gdx.files.FileHandle: void emptyDirectory()
com.badlogic.gdx.files.FileHandle: void emptyDirectory(boolean)
com.badlogic.gdx.files.FileHandle: void copyTo(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.files.FileHandle: void moveTo(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.files.FileHandle: long length()
com.badlogic.gdx.files.FileHandle: long lastModified()
com.badlogic.gdx.files.FileHandle: boolean equals(java.lang.Object)
com.badlogic.gdx.files.FileHandle: int hashCode()
com.badlogic.gdx.files.FileHandle: java.lang.String toString()
com.badlogic.gdx.files.FileHandle: com.badlogic.gdx.files.FileHandle tempFile(java.lang.String)
com.badlogic.gdx.files.FileHandle: com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String)
com.badlogic.gdx.files.FileHandle: void emptyDirectory(java.io.File,boolean)
com.badlogic.gdx.files.FileHandle: boolean deleteDirectory(java.io.File)
com.badlogic.gdx.files.FileHandle: void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.files.FileHandle: void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.files.FileHandle$1
com.badlogic.gdx.files.FileHandle$1: int[] $SwitchMap$com$badlogic$gdx$Files$FileType
com.badlogic.gdx.files.FileHandle$1: void <clinit>()
com.badlogic.gdx.files.FileHandleStream
com.badlogic.gdx.files.FileHandleStream: FileHandleStream(java.lang.String)
com.badlogic.gdx.files.FileHandleStream: boolean isDirectory()
com.badlogic.gdx.files.FileHandleStream: long length()
com.badlogic.gdx.files.FileHandleStream: boolean exists()
com.badlogic.gdx.files.FileHandleStream: com.badlogic.gdx.files.FileHandle child(java.lang.String)
com.badlogic.gdx.files.FileHandleStream: com.badlogic.gdx.files.FileHandle sibling(java.lang.String)
com.badlogic.gdx.files.FileHandleStream: com.badlogic.gdx.files.FileHandle parent()
com.badlogic.gdx.files.FileHandleStream: java.io.InputStream read()
com.badlogic.gdx.files.FileHandleStream: java.io.OutputStream write(boolean)
com.badlogic.gdx.files.FileHandleStream: com.badlogic.gdx.files.FileHandle[] list()
com.badlogic.gdx.files.FileHandleStream: void mkdirs()
com.badlogic.gdx.files.FileHandleStream: boolean delete()
com.badlogic.gdx.files.FileHandleStream: boolean deleteDirectory()
com.badlogic.gdx.files.FileHandleStream: void copyTo(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.files.FileHandleStream: void moveTo(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.Camera
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Vector3 position
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Vector3 direction
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Vector3 up
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Matrix4 projection
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Matrix4 view
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Matrix4 combined
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Matrix4 invProjectionView
com.badlogic.gdx.graphics.Camera: float near
com.badlogic.gdx.graphics.Camera: float far
com.badlogic.gdx.graphics.Camera: float viewportWidth
com.badlogic.gdx.graphics.Camera: float viewportHeight
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Frustum frustum
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Vector3 tmpVec
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.collision.Ray ray
com.badlogic.gdx.graphics.Camera: Camera()
com.badlogic.gdx.graphics.Camera: void update()
com.badlogic.gdx.graphics.Camera: void update(boolean)
com.badlogic.gdx.graphics.Camera: void lookAt(float,float,float)
com.badlogic.gdx.graphics.Camera: void lookAt(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.Camera: void normalizeUp()
com.badlogic.gdx.graphics.Camera: void rotate(float,float,float,float)
com.badlogic.gdx.graphics.Camera: void rotate(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.graphics.Camera: void rotate(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.Camera: void rotate(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.graphics.Camera: void rotateAround(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.graphics.Camera: void transform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.Camera: void translate(float,float,float)
com.badlogic.gdx.graphics.Camera: void translate(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3,float,float,float,float)
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3,float,float,float,float)
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.collision.Ray getPickRay(float,float,float,float,float,float)
com.badlogic.gdx.graphics.Camera: com.badlogic.gdx.math.collision.Ray getPickRay(float,float)
com.badlogic.gdx.graphics.Color
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color CLEAR
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color WHITE
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color BLACK
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color RED
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color GREEN
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color BLUE
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color LIGHT_GRAY
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color GRAY
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color DARK_GRAY
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color PINK
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color ORANGE
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color YELLOW
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color MAGENTA
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color CYAN
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color OLIVE
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color PURPLE
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color MAROON
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color TEAL
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color NAVY
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color tmp
com.badlogic.gdx.graphics.Color: float r
com.badlogic.gdx.graphics.Color: float g
com.badlogic.gdx.graphics.Color: float b
com.badlogic.gdx.graphics.Color: float a
com.badlogic.gdx.graphics.Color: Color()
com.badlogic.gdx.graphics.Color: Color(int)
com.badlogic.gdx.graphics.Color: Color(float,float,float,float)
com.badlogic.gdx.graphics.Color: Color(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color set(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color mul(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color mul(float)
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color clamp()
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color set(float,float,float,float)
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color set(int)
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color add(float,float,float,float)
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color sub(float,float,float,float)
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color mul(float,float,float,float)
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color lerp(com.badlogic.gdx.graphics.Color,float)
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color lerp(float,float,float,float,float)
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color premultiplyAlpha()
com.badlogic.gdx.graphics.Color: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.Color: int hashCode()
com.badlogic.gdx.graphics.Color: float toFloatBits()
com.badlogic.gdx.graphics.Color: int toIntBits()
com.badlogic.gdx.graphics.Color: java.lang.String toString()
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color valueOf(java.lang.String)
com.badlogic.gdx.graphics.Color: float toFloatBits(int,int,int,int)
com.badlogic.gdx.graphics.Color: float toFloatBits(float,float,float,float)
com.badlogic.gdx.graphics.Color: int toIntBits(int,int,int,int)
com.badlogic.gdx.graphics.Color: int alpha(float)
com.badlogic.gdx.graphics.Color: int luminanceAlpha(float,float)
com.badlogic.gdx.graphics.Color: int rgb565(float,float,float)
com.badlogic.gdx.graphics.Color: int rgba4444(float,float,float,float)
com.badlogic.gdx.graphics.Color: int rgb888(float,float,float)
com.badlogic.gdx.graphics.Color: int rgba8888(float,float,float,float)
com.badlogic.gdx.graphics.Color: int rgb565(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.Color: int rgba4444(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.Color: int rgb888(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.Color: int rgba8888(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.Color: void rgb565ToColor(com.badlogic.gdx.graphics.Color,int)
com.badlogic.gdx.graphics.Color: void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int)
com.badlogic.gdx.graphics.Color: void rgb888ToColor(com.badlogic.gdx.graphics.Color,int)
com.badlogic.gdx.graphics.Color: void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int)
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color tmp()
com.badlogic.gdx.graphics.Color: com.badlogic.gdx.graphics.Color cpy()
com.badlogic.gdx.graphics.Color: void <clinit>()
com.badlogic.gdx.graphics.Colors
com.badlogic.gdx.graphics.Colors: com.badlogic.gdx.utils.ObjectMap map
com.badlogic.gdx.graphics.Colors: com.badlogic.gdx.utils.ObjectMap getColors()
com.badlogic.gdx.graphics.Colors: com.badlogic.gdx.graphics.Color get(java.lang.String)
com.badlogic.gdx.graphics.Colors: com.badlogic.gdx.graphics.Color put(java.lang.String,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.Colors: void reset()
com.badlogic.gdx.graphics.Colors: Colors()
com.badlogic.gdx.graphics.Colors: void <clinit>()
com.badlogic.gdx.graphics.Cubemap
com.badlogic.gdx.graphics.Cubemap: com.badlogic.gdx.graphics.TextureData[] data
com.badlogic.gdx.graphics.Cubemap: Cubemap()
com.badlogic.gdx.graphics.Cubemap: Cubemap(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.Cubemap: Cubemap(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.Cubemap: Cubemap(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.Cubemap: Cubemap(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap,boolean)
com.badlogic.gdx.graphics.Cubemap: Cubemap(int,int,int,com.badlogic.gdx.graphics.Pixmap$Format)
com.badlogic.gdx.graphics.Cubemap: Cubemap(com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.Cubemap: void load(com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.Cubemap: boolean isManaged()
com.badlogic.gdx.graphics.Cubemap: void reload()
com.badlogic.gdx.graphics.Cubemap: void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.Cubemap: void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.Cubemap: void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.Cubemap: void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.graphics.Pixmap,boolean)
com.badlogic.gdx.graphics.Cubemap: void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.Cubemap: void unsafeLoad(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.Cubemap: boolean isComplete()
com.badlogic.gdx.graphics.Cubemap: com.badlogic.gdx.graphics.TextureData getTextureData(com.badlogic.gdx.graphics.Cubemap$CubemapSide)
com.badlogic.gdx.graphics.Cubemap: int getWidth()
com.badlogic.gdx.graphics.Cubemap: int getHeight()
com.badlogic.gdx.graphics.Cubemap: int getDepth()
com.badlogic.gdx.graphics.Cubemap$CubemapSide
com.badlogic.gdx.graphics.Cubemap$CubemapSide: com.badlogic.gdx.graphics.Cubemap$CubemapSide PositiveX
com.badlogic.gdx.graphics.Cubemap$CubemapSide: com.badlogic.gdx.graphics.Cubemap$CubemapSide NegativeX
com.badlogic.gdx.graphics.Cubemap$CubemapSide: com.badlogic.gdx.graphics.Cubemap$CubemapSide PositiveY
com.badlogic.gdx.graphics.Cubemap$CubemapSide: com.badlogic.gdx.graphics.Cubemap$CubemapSide NegativeY
com.badlogic.gdx.graphics.Cubemap$CubemapSide: com.badlogic.gdx.graphics.Cubemap$CubemapSide PositiveZ
com.badlogic.gdx.graphics.Cubemap$CubemapSide: com.badlogic.gdx.graphics.Cubemap$CubemapSide NegativeZ
com.badlogic.gdx.graphics.Cubemap$CubemapSide: int index
com.badlogic.gdx.graphics.Cubemap$CubemapSide: int glEnum
com.badlogic.gdx.graphics.Cubemap$CubemapSide: com.badlogic.gdx.graphics.Cubemap$CubemapSide[] $VALUES
com.badlogic.gdx.graphics.Cubemap$CubemapSide: com.badlogic.gdx.graphics.Cubemap$CubemapSide[] values()
com.badlogic.gdx.graphics.Cubemap$CubemapSide: com.badlogic.gdx.graphics.Cubemap$CubemapSide valueOf(java.lang.String)
com.badlogic.gdx.graphics.Cubemap$CubemapSide: Cubemap$CubemapSide(java.lang.String,int,int,int)
com.badlogic.gdx.graphics.Cubemap$CubemapSide: int getGLEnum()
com.badlogic.gdx.graphics.Cubemap$CubemapSide: void <clinit>()
com.badlogic.gdx.graphics.FPSLogger
com.badlogic.gdx.graphics.FPSLogger: long startTime
com.badlogic.gdx.graphics.FPSLogger: FPSLogger()
com.badlogic.gdx.graphics.FPSLogger: void log()
com.badlogic.gdx.graphics.GL20
com.badlogic.gdx.graphics.GL20: int GL_ES_VERSION_2_0
com.badlogic.gdx.graphics.GL20: int GL_DEPTH_BUFFER_BIT
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_BUFFER_BIT
com.badlogic.gdx.graphics.GL20: int GL_COLOR_BUFFER_BIT
com.badlogic.gdx.graphics.GL20: int GL_FALSE
com.badlogic.gdx.graphics.GL20: int GL_TRUE
com.badlogic.gdx.graphics.GL20: int GL_POINTS
com.badlogic.gdx.graphics.GL20: int GL_LINES
com.badlogic.gdx.graphics.GL20: int GL_LINE_LOOP
com.badlogic.gdx.graphics.GL20: int GL_LINE_STRIP
com.badlogic.gdx.graphics.GL20: int GL_TRIANGLES
com.badlogic.gdx.graphics.GL20: int GL_TRIANGLE_STRIP
com.badlogic.gdx.graphics.GL20: int GL_TRIANGLE_FAN
com.badlogic.gdx.graphics.GL20: int GL_ZERO
com.badlogic.gdx.graphics.GL20: int GL_ONE
com.badlogic.gdx.graphics.GL20: int GL_SRC_COLOR
com.badlogic.gdx.graphics.GL20: int GL_ONE_MINUS_SRC_COLOR
com.badlogic.gdx.graphics.GL20: int GL_SRC_ALPHA
com.badlogic.gdx.graphics.GL20: int GL_ONE_MINUS_SRC_ALPHA
com.badlogic.gdx.graphics.GL20: int GL_DST_ALPHA
com.badlogic.gdx.graphics.GL20: int GL_ONE_MINUS_DST_ALPHA
com.badlogic.gdx.graphics.GL20: int GL_DST_COLOR
com.badlogic.gdx.graphics.GL20: int GL_ONE_MINUS_DST_COLOR
com.badlogic.gdx.graphics.GL20: int GL_SRC_ALPHA_SATURATE
com.badlogic.gdx.graphics.GL20: int GL_FUNC_ADD
com.badlogic.gdx.graphics.GL20: int GL_BLEND_EQUATION
com.badlogic.gdx.graphics.GL20: int GL_BLEND_EQUATION_RGB
com.badlogic.gdx.graphics.GL20: int GL_BLEND_EQUATION_ALPHA
com.badlogic.gdx.graphics.GL20: int GL_FUNC_SUBTRACT
com.badlogic.gdx.graphics.GL20: int GL_FUNC_REVERSE_SUBTRACT
com.badlogic.gdx.graphics.GL20: int GL_BLEND_DST_RGB
com.badlogic.gdx.graphics.GL20: int GL_BLEND_SRC_RGB
com.badlogic.gdx.graphics.GL20: int GL_BLEND_DST_ALPHA
com.badlogic.gdx.graphics.GL20: int GL_BLEND_SRC_ALPHA
com.badlogic.gdx.graphics.GL20: int GL_CONSTANT_COLOR
com.badlogic.gdx.graphics.GL20: int GL_ONE_MINUS_CONSTANT_COLOR
com.badlogic.gdx.graphics.GL20: int GL_CONSTANT_ALPHA
com.badlogic.gdx.graphics.GL20: int GL_ONE_MINUS_CONSTANT_ALPHA
com.badlogic.gdx.graphics.GL20: int GL_BLEND_COLOR
com.badlogic.gdx.graphics.GL20: int GL_ARRAY_BUFFER
com.badlogic.gdx.graphics.GL20: int GL_ELEMENT_ARRAY_BUFFER
com.badlogic.gdx.graphics.GL20: int GL_ARRAY_BUFFER_BINDING
com.badlogic.gdx.graphics.GL20: int GL_ELEMENT_ARRAY_BUFFER_BINDING
com.badlogic.gdx.graphics.GL20: int GL_STREAM_DRAW
com.badlogic.gdx.graphics.GL20: int GL_STATIC_DRAW
com.badlogic.gdx.graphics.GL20: int GL_DYNAMIC_DRAW
com.badlogic.gdx.graphics.GL20: int GL_BUFFER_SIZE
com.badlogic.gdx.graphics.GL20: int GL_BUFFER_USAGE
com.badlogic.gdx.graphics.GL20: int GL_CURRENT_VERTEX_ATTRIB
com.badlogic.gdx.graphics.GL20: int GL_FRONT
com.badlogic.gdx.graphics.GL20: int GL_BACK
com.badlogic.gdx.graphics.GL20: int GL_FRONT_AND_BACK
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE_2D
com.badlogic.gdx.graphics.GL20: int GL_CULL_FACE
com.badlogic.gdx.graphics.GL20: int GL_BLEND
com.badlogic.gdx.graphics.GL20: int GL_DITHER
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_TEST
com.badlogic.gdx.graphics.GL20: int GL_DEPTH_TEST
com.badlogic.gdx.graphics.GL20: int GL_SCISSOR_TEST
com.badlogic.gdx.graphics.GL20: int GL_POLYGON_OFFSET_FILL
com.badlogic.gdx.graphics.GL20: int GL_SAMPLE_ALPHA_TO_COVERAGE
com.badlogic.gdx.graphics.GL20: int GL_SAMPLE_COVERAGE
com.badlogic.gdx.graphics.GL20: int GL_NO_ERROR
com.badlogic.gdx.graphics.GL20: int GL_INVALID_ENUM
com.badlogic.gdx.graphics.GL20: int GL_INVALID_VALUE
com.badlogic.gdx.graphics.GL20: int GL_INVALID_OPERATION
com.badlogic.gdx.graphics.GL20: int GL_OUT_OF_MEMORY
com.badlogic.gdx.graphics.GL20: int GL_CW
com.badlogic.gdx.graphics.GL20: int GL_CCW
com.badlogic.gdx.graphics.GL20: int GL_LINE_WIDTH
com.badlogic.gdx.graphics.GL20: int GL_ALIASED_POINT_SIZE_RANGE
com.badlogic.gdx.graphics.GL20: int GL_ALIASED_LINE_WIDTH_RANGE
com.badlogic.gdx.graphics.GL20: int GL_CULL_FACE_MODE
com.badlogic.gdx.graphics.GL20: int GL_FRONT_FACE
com.badlogic.gdx.graphics.GL20: int GL_DEPTH_RANGE
com.badlogic.gdx.graphics.GL20: int GL_DEPTH_WRITEMASK
com.badlogic.gdx.graphics.GL20: int GL_DEPTH_CLEAR_VALUE
com.badlogic.gdx.graphics.GL20: int GL_DEPTH_FUNC
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_CLEAR_VALUE
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_FUNC
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_FAIL
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_PASS_DEPTH_FAIL
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_PASS_DEPTH_PASS
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_REF
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_VALUE_MASK
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_WRITEMASK
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_BACK_FUNC
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_BACK_FAIL
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_BACK_PASS_DEPTH_FAIL
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_BACK_PASS_DEPTH_PASS
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_BACK_REF
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_BACK_VALUE_MASK
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_BACK_WRITEMASK
com.badlogic.gdx.graphics.GL20: int GL_VIEWPORT
com.badlogic.gdx.graphics.GL20: int GL_SCISSOR_BOX
com.badlogic.gdx.graphics.GL20: int GL_COLOR_CLEAR_VALUE
com.badlogic.gdx.graphics.GL20: int GL_COLOR_WRITEMASK
com.badlogic.gdx.graphics.GL20: int GL_UNPACK_ALIGNMENT
com.badlogic.gdx.graphics.GL20: int GL_PACK_ALIGNMENT
com.badlogic.gdx.graphics.GL20: int GL_MAX_TEXTURE_SIZE
com.badlogic.gdx.graphics.GL20: int GL_MAX_TEXTURE_UNITS
com.badlogic.gdx.graphics.GL20: int GL_MAX_VIEWPORT_DIMS
com.badlogic.gdx.graphics.GL20: int GL_SUBPIXEL_BITS
com.badlogic.gdx.graphics.GL20: int GL_RED_BITS
com.badlogic.gdx.graphics.GL20: int GL_GREEN_BITS
com.badlogic.gdx.graphics.GL20: int GL_BLUE_BITS
com.badlogic.gdx.graphics.GL20: int GL_ALPHA_BITS
com.badlogic.gdx.graphics.GL20: int GL_DEPTH_BITS
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_BITS
com.badlogic.gdx.graphics.GL20: int GL_POLYGON_OFFSET_UNITS
com.badlogic.gdx.graphics.GL20: int GL_POLYGON_OFFSET_FACTOR
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE_BINDING_2D
com.badlogic.gdx.graphics.GL20: int GL_SAMPLE_BUFFERS
com.badlogic.gdx.graphics.GL20: int GL_SAMPLES
com.badlogic.gdx.graphics.GL20: int GL_SAMPLE_COVERAGE_VALUE
com.badlogic.gdx.graphics.GL20: int GL_SAMPLE_COVERAGE_INVERT
com.badlogic.gdx.graphics.GL20: int GL_NUM_COMPRESSED_TEXTURE_FORMATS
com.badlogic.gdx.graphics.GL20: int GL_COMPRESSED_TEXTURE_FORMATS
com.badlogic.gdx.graphics.GL20: int GL_DONT_CARE
com.badlogic.gdx.graphics.GL20: int GL_FASTEST
com.badlogic.gdx.graphics.GL20: int GL_NICEST
com.badlogic.gdx.graphics.GL20: int GL_GENERATE_MIPMAP
com.badlogic.gdx.graphics.GL20: int GL_GENERATE_MIPMAP_HINT
com.badlogic.gdx.graphics.GL20: int GL_BYTE
com.badlogic.gdx.graphics.GL20: int GL_UNSIGNED_BYTE
com.badlogic.gdx.graphics.GL20: int GL_SHORT
com.badlogic.gdx.graphics.GL20: int GL_UNSIGNED_SHORT
com.badlogic.gdx.graphics.GL20: int GL_INT
com.badlogic.gdx.graphics.GL20: int GL_UNSIGNED_INT
com.badlogic.gdx.graphics.GL20: int GL_FLOAT
com.badlogic.gdx.graphics.GL20: int GL_FIXED
com.badlogic.gdx.graphics.GL20: int GL_DEPTH_COMPONENT
com.badlogic.gdx.graphics.GL20: int GL_ALPHA
com.badlogic.gdx.graphics.GL20: int GL_RGB
com.badlogic.gdx.graphics.GL20: int GL_RGBA
com.badlogic.gdx.graphics.GL20: int GL_LUMINANCE
com.badlogic.gdx.graphics.GL20: int GL_LUMINANCE_ALPHA
com.badlogic.gdx.graphics.GL20: int GL_UNSIGNED_SHORT_4_4_4_4
com.badlogic.gdx.graphics.GL20: int GL_UNSIGNED_SHORT_5_5_5_1
com.badlogic.gdx.graphics.GL20: int GL_UNSIGNED_SHORT_5_6_5
com.badlogic.gdx.graphics.GL20: int GL_FRAGMENT_SHADER
com.badlogic.gdx.graphics.GL20: int GL_VERTEX_SHADER
com.badlogic.gdx.graphics.GL20: int GL_MAX_VERTEX_ATTRIBS
com.badlogic.gdx.graphics.GL20: int GL_MAX_VERTEX_UNIFORM_VECTORS
com.badlogic.gdx.graphics.GL20: int GL_MAX_VARYING_VECTORS
com.badlogic.gdx.graphics.GL20: int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
com.badlogic.gdx.graphics.GL20: int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
com.badlogic.gdx.graphics.GL20: int GL_MAX_TEXTURE_IMAGE_UNITS
com.badlogic.gdx.graphics.GL20: int GL_MAX_FRAGMENT_UNIFORM_VECTORS
com.badlogic.gdx.graphics.GL20: int GL_SHADER_TYPE
com.badlogic.gdx.graphics.GL20: int GL_DELETE_STATUS
com.badlogic.gdx.graphics.GL20: int GL_LINK_STATUS
com.badlogic.gdx.graphics.GL20: int GL_VALIDATE_STATUS
com.badlogic.gdx.graphics.GL20: int GL_ATTACHED_SHADERS
com.badlogic.gdx.graphics.GL20: int GL_ACTIVE_UNIFORMS
com.badlogic.gdx.graphics.GL20: int GL_ACTIVE_UNIFORM_MAX_LENGTH
com.badlogic.gdx.graphics.GL20: int GL_ACTIVE_ATTRIBUTES
com.badlogic.gdx.graphics.GL20: int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
com.badlogic.gdx.graphics.GL20: int GL_SHADING_LANGUAGE_VERSION
com.badlogic.gdx.graphics.GL20: int GL_CURRENT_PROGRAM
com.badlogic.gdx.graphics.GL20: int GL_NEVER
com.badlogic.gdx.graphics.GL20: int GL_LESS
com.badlogic.gdx.graphics.GL20: int GL_EQUAL
com.badlogic.gdx.graphics.GL20: int GL_LEQUAL
com.badlogic.gdx.graphics.GL20: int GL_GREATER
com.badlogic.gdx.graphics.GL20: int GL_NOTEQUAL
com.badlogic.gdx.graphics.GL20: int GL_GEQUAL
com.badlogic.gdx.graphics.GL20: int GL_ALWAYS
com.badlogic.gdx.graphics.GL20: int GL_KEEP
com.badlogic.gdx.graphics.GL20: int GL_REPLACE
com.badlogic.gdx.graphics.GL20: int GL_INCR
com.badlogic.gdx.graphics.GL20: int GL_DECR
com.badlogic.gdx.graphics.GL20: int GL_INVERT
com.badlogic.gdx.graphics.GL20: int GL_INCR_WRAP
com.badlogic.gdx.graphics.GL20: int GL_DECR_WRAP
com.badlogic.gdx.graphics.GL20: int GL_VENDOR
com.badlogic.gdx.graphics.GL20: int GL_RENDERER
com.badlogic.gdx.graphics.GL20: int GL_VERSION
com.badlogic.gdx.graphics.GL20: int GL_EXTENSIONS
com.badlogic.gdx.graphics.GL20: int GL_NEAREST
com.badlogic.gdx.graphics.GL20: int GL_LINEAR
com.badlogic.gdx.graphics.GL20: int GL_NEAREST_MIPMAP_NEAREST
com.badlogic.gdx.graphics.GL20: int GL_LINEAR_MIPMAP_NEAREST
com.badlogic.gdx.graphics.GL20: int GL_NEAREST_MIPMAP_LINEAR
com.badlogic.gdx.graphics.GL20: int GL_LINEAR_MIPMAP_LINEAR
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE_MAG_FILTER
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE_MIN_FILTER
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE_WRAP_S
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE_WRAP_T
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE_CUBE_MAP
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE_BINDING_CUBE_MAP
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE_CUBE_MAP_POSITIVE_X
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE_CUBE_MAP_NEGATIVE_X
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE_CUBE_MAP_POSITIVE_Y
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE_CUBE_MAP_POSITIVE_Z
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
com.badlogic.gdx.graphics.GL20: int GL_MAX_CUBE_MAP_TEXTURE_SIZE
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE0
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE1
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE2
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE3
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE4
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE5
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE6
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE7
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE8
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE9
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE10
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE11
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE12
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE13
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE14
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE15
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE16
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE17
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE18
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE19
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE20
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE21
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE22
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE23
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE24
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE25
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE26
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE27
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE28
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE29
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE30
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE31
com.badlogic.gdx.graphics.GL20: int GL_ACTIVE_TEXTURE
com.badlogic.gdx.graphics.GL20: int GL_REPEAT
com.badlogic.gdx.graphics.GL20: int GL_CLAMP_TO_EDGE
com.badlogic.gdx.graphics.GL20: int GL_MIRRORED_REPEAT
com.badlogic.gdx.graphics.GL20: int GL_FLOAT_VEC2
com.badlogic.gdx.graphics.GL20: int GL_FLOAT_VEC3
com.badlogic.gdx.graphics.GL20: int GL_FLOAT_VEC4
com.badlogic.gdx.graphics.GL20: int GL_INT_VEC2
com.badlogic.gdx.graphics.GL20: int GL_INT_VEC3
com.badlogic.gdx.graphics.GL20: int GL_INT_VEC4
com.badlogic.gdx.graphics.GL20: int GL_BOOL
com.badlogic.gdx.graphics.GL20: int GL_BOOL_VEC2
com.badlogic.gdx.graphics.GL20: int GL_BOOL_VEC3
com.badlogic.gdx.graphics.GL20: int GL_BOOL_VEC4
com.badlogic.gdx.graphics.GL20: int GL_FLOAT_MAT2
com.badlogic.gdx.graphics.GL20: int GL_FLOAT_MAT3
com.badlogic.gdx.graphics.GL20: int GL_FLOAT_MAT4
com.badlogic.gdx.graphics.GL20: int GL_SAMPLER_2D
com.badlogic.gdx.graphics.GL20: int GL_SAMPLER_CUBE
com.badlogic.gdx.graphics.GL20: int GL_VERTEX_ATTRIB_ARRAY_ENABLED
com.badlogic.gdx.graphics.GL20: int GL_VERTEX_ATTRIB_ARRAY_SIZE
com.badlogic.gdx.graphics.GL20: int GL_VERTEX_ATTRIB_ARRAY_STRIDE
com.badlogic.gdx.graphics.GL20: int GL_VERTEX_ATTRIB_ARRAY_TYPE
com.badlogic.gdx.graphics.GL20: int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
com.badlogic.gdx.graphics.GL20: int GL_VERTEX_ATTRIB_ARRAY_POINTER
com.badlogic.gdx.graphics.GL20: int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
com.badlogic.gdx.graphics.GL20: int GL_IMPLEMENTATION_COLOR_READ_TYPE
com.badlogic.gdx.graphics.GL20: int GL_IMPLEMENTATION_COLOR_READ_FORMAT
com.badlogic.gdx.graphics.GL20: int GL_COMPILE_STATUS
com.badlogic.gdx.graphics.GL20: int GL_INFO_LOG_LENGTH
com.badlogic.gdx.graphics.GL20: int GL_SHADER_SOURCE_LENGTH
com.badlogic.gdx.graphics.GL20: int GL_SHADER_COMPILER
com.badlogic.gdx.graphics.GL20: int GL_SHADER_BINARY_FORMATS
com.badlogic.gdx.graphics.GL20: int GL_NUM_SHADER_BINARY_FORMATS
com.badlogic.gdx.graphics.GL20: int GL_LOW_FLOAT
com.badlogic.gdx.graphics.GL20: int GL_MEDIUM_FLOAT
com.badlogic.gdx.graphics.GL20: int GL_HIGH_FLOAT
com.badlogic.gdx.graphics.GL20: int GL_LOW_INT
com.badlogic.gdx.graphics.GL20: int GL_MEDIUM_INT
com.badlogic.gdx.graphics.GL20: int GL_HIGH_INT
com.badlogic.gdx.graphics.GL20: int GL_FRAMEBUFFER
com.badlogic.gdx.graphics.GL20: int GL_RENDERBUFFER
com.badlogic.gdx.graphics.GL20: int GL_RGBA4
com.badlogic.gdx.graphics.GL20: int GL_RGB5_A1
com.badlogic.gdx.graphics.GL20: int GL_RGB565
com.badlogic.gdx.graphics.GL20: int GL_DEPTH_COMPONENT16
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_INDEX
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_INDEX8
com.badlogic.gdx.graphics.GL20: int GL_RENDERBUFFER_WIDTH
com.badlogic.gdx.graphics.GL20: int GL_RENDERBUFFER_HEIGHT
com.badlogic.gdx.graphics.GL20: int GL_RENDERBUFFER_INTERNAL_FORMAT
com.badlogic.gdx.graphics.GL20: int GL_RENDERBUFFER_RED_SIZE
com.badlogic.gdx.graphics.GL20: int GL_RENDERBUFFER_GREEN_SIZE
com.badlogic.gdx.graphics.GL20: int GL_RENDERBUFFER_BLUE_SIZE
com.badlogic.gdx.graphics.GL20: int GL_RENDERBUFFER_ALPHA_SIZE
com.badlogic.gdx.graphics.GL20: int GL_RENDERBUFFER_DEPTH_SIZE
com.badlogic.gdx.graphics.GL20: int GL_RENDERBUFFER_STENCIL_SIZE
com.badlogic.gdx.graphics.GL20: int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
com.badlogic.gdx.graphics.GL20: int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
com.badlogic.gdx.graphics.GL20: int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
com.badlogic.gdx.graphics.GL20: int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
com.badlogic.gdx.graphics.GL20: int GL_COLOR_ATTACHMENT0
com.badlogic.gdx.graphics.GL20: int GL_DEPTH_ATTACHMENT
com.badlogic.gdx.graphics.GL20: int GL_STENCIL_ATTACHMENT
com.badlogic.gdx.graphics.GL20: int GL_NONE
com.badlogic.gdx.graphics.GL20: int GL_FRAMEBUFFER_COMPLETE
com.badlogic.gdx.graphics.GL20: int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
com.badlogic.gdx.graphics.GL20: int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
com.badlogic.gdx.graphics.GL20: int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
com.badlogic.gdx.graphics.GL20: int GL_FRAMEBUFFER_UNSUPPORTED
com.badlogic.gdx.graphics.GL20: int GL_FRAMEBUFFER_BINDING
com.badlogic.gdx.graphics.GL20: int GL_RENDERBUFFER_BINDING
com.badlogic.gdx.graphics.GL20: int GL_MAX_RENDERBUFFER_SIZE
com.badlogic.gdx.graphics.GL20: int GL_INVALID_FRAMEBUFFER_OPERATION
com.badlogic.gdx.graphics.GL20: int GL_VERTEX_PROGRAM_POINT_SIZE
com.badlogic.gdx.graphics.GL20: int GL_COVERAGE_BUFFER_BIT_NV
com.badlogic.gdx.graphics.GL20: int GL_TEXTURE_MAX_ANISOTROPY_EXT
com.badlogic.gdx.graphics.GL20: int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
com.badlogic.gdx.graphics.GL20: void glActiveTexture(int)
com.badlogic.gdx.graphics.GL20: void glBindTexture(int,int)
com.badlogic.gdx.graphics.GL20: void glBlendFunc(int,int)
com.badlogic.gdx.graphics.GL20: void glClear(int)
com.badlogic.gdx.graphics.GL20: void glClearColor(float,float,float,float)
com.badlogic.gdx.graphics.GL20: void glClearDepthf(float)
com.badlogic.gdx.graphics.GL20: void glClearStencil(int)
com.badlogic.gdx.graphics.GL20: void glColorMask(boolean,boolean,boolean,boolean)
com.badlogic.gdx.graphics.GL20: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20: void glCopyTexImage2D(int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.GL20: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.GL20: void glCullFace(int)
com.badlogic.gdx.graphics.GL20: void glDeleteTextures(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glDepthFunc(int)
com.badlogic.gdx.graphics.GL20: void glDepthMask(boolean)
com.badlogic.gdx.graphics.GL20: void glDepthRangef(float,float)
com.badlogic.gdx.graphics.GL20: void glDisable(int)
com.badlogic.gdx.graphics.GL20: void glDrawArrays(int,int,int)
com.badlogic.gdx.graphics.GL20: void glDrawElements(int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20: void glEnable(int)
com.badlogic.gdx.graphics.GL20: void glFinish()
com.badlogic.gdx.graphics.GL20: void glFlush()
com.badlogic.gdx.graphics.GL20: void glFrontFace(int)
com.badlogic.gdx.graphics.GL20: void glGenTextures(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: int glGetError()
com.badlogic.gdx.graphics.GL20: void glGetIntegerv(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: java.lang.String glGetString(int)
com.badlogic.gdx.graphics.GL20: void glHint(int,int)
com.badlogic.gdx.graphics.GL20: void glLineWidth(float)
com.badlogic.gdx.graphics.GL20: void glPixelStorei(int,int)
com.badlogic.gdx.graphics.GL20: void glPolygonOffset(float,float)
com.badlogic.gdx.graphics.GL20: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20: void glScissor(int,int,int,int)
com.badlogic.gdx.graphics.GL20: void glStencilFunc(int,int,int)
com.badlogic.gdx.graphics.GL20: void glStencilMask(int)
com.badlogic.gdx.graphics.GL20: void glStencilOp(int,int,int)
com.badlogic.gdx.graphics.GL20: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20: void glTexParameterf(int,int,float)
com.badlogic.gdx.graphics.GL20: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20: void glViewport(int,int,int,int)
com.badlogic.gdx.graphics.GL20: void glAttachShader(int,int)
com.badlogic.gdx.graphics.GL20: void glBindAttribLocation(int,int,java.lang.String)
com.badlogic.gdx.graphics.GL20: void glBindBuffer(int,int)
com.badlogic.gdx.graphics.GL20: void glBindFramebuffer(int,int)
com.badlogic.gdx.graphics.GL20: void glBindRenderbuffer(int,int)
com.badlogic.gdx.graphics.GL20: void glBlendColor(float,float,float,float)
com.badlogic.gdx.graphics.GL20: void glBlendEquation(int)
com.badlogic.gdx.graphics.GL20: void glBlendEquationSeparate(int,int)
com.badlogic.gdx.graphics.GL20: void glBlendFuncSeparate(int,int,int,int)
com.badlogic.gdx.graphics.GL20: void glBufferData(int,int,java.nio.Buffer,int)
com.badlogic.gdx.graphics.GL20: void glBufferSubData(int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20: int glCheckFramebufferStatus(int)
com.badlogic.gdx.graphics.GL20: void glCompileShader(int)
com.badlogic.gdx.graphics.GL20: int glCreateProgram()
com.badlogic.gdx.graphics.GL20: int glCreateShader(int)
com.badlogic.gdx.graphics.GL20: void glDeleteBuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glDeleteFramebuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glDeleteProgram(int)
com.badlogic.gdx.graphics.GL20: void glDeleteRenderbuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glDeleteShader(int)
com.badlogic.gdx.graphics.GL20: void glDetachShader(int,int)
com.badlogic.gdx.graphics.GL20: void glDisableVertexAttribArray(int)
com.badlogic.gdx.graphics.GL20: void glDrawElements(int,int,int,int)
com.badlogic.gdx.graphics.GL20: void glEnableVertexAttribArray(int)
com.badlogic.gdx.graphics.GL20: void glFramebufferRenderbuffer(int,int,int,int)
com.badlogic.gdx.graphics.GL20: void glFramebufferTexture2D(int,int,int,int,int)
com.badlogic.gdx.graphics.GL20: void glGenBuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glGenerateMipmap(int)
com.badlogic.gdx.graphics.GL20: void glGenFramebuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glGenRenderbuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20: java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20: void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: int glGetAttribLocation(int,java.lang.String)
com.badlogic.gdx.graphics.GL20: void glGetBooleanv(int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glGetFloatv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glGetProgramiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: java.lang.String glGetProgramInfoLog(int)
com.badlogic.gdx.graphics.GL20: void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glGetShaderiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: java.lang.String glGetShaderInfoLog(int)
com.badlogic.gdx.graphics.GL20: void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glGetTexParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glGetUniformfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glGetUniformiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: int glGetUniformLocation(int,java.lang.String)
com.badlogic.gdx.graphics.GL20: void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20: boolean glIsBuffer(int)
com.badlogic.gdx.graphics.GL20: boolean glIsEnabled(int)
com.badlogic.gdx.graphics.GL20: boolean glIsFramebuffer(int)
com.badlogic.gdx.graphics.GL20: boolean glIsProgram(int)
com.badlogic.gdx.graphics.GL20: boolean glIsRenderbuffer(int)
com.badlogic.gdx.graphics.GL20: boolean glIsShader(int)
com.badlogic.gdx.graphics.GL20: boolean glIsTexture(int)
com.badlogic.gdx.graphics.GL20: void glLinkProgram(int)
com.badlogic.gdx.graphics.GL20: void glReleaseShaderCompiler()
com.badlogic.gdx.graphics.GL20: void glRenderbufferStorage(int,int,int,int)
com.badlogic.gdx.graphics.GL20: void glSampleCoverage(float,boolean)
com.badlogic.gdx.graphics.GL20: void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
com.badlogic.gdx.graphics.GL20: void glShaderSource(int,java.lang.String)
com.badlogic.gdx.graphics.GL20: void glStencilFuncSeparate(int,int,int,int)
com.badlogic.gdx.graphics.GL20: void glStencilMaskSeparate(int,int)
com.badlogic.gdx.graphics.GL20: void glStencilOpSeparate(int,int,int,int)
com.badlogic.gdx.graphics.GL20: void glTexParameterfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glTexParameteri(int,int,int)
com.badlogic.gdx.graphics.GL20: void glTexParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glUniform1f(int,float)
com.badlogic.gdx.graphics.GL20: void glUniform1fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glUniform1i(int,int)
com.badlogic.gdx.graphics.GL20: void glUniform1iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glUniform2f(int,float,float)
com.badlogic.gdx.graphics.GL20: void glUniform2fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glUniform2i(int,int,int)
com.badlogic.gdx.graphics.GL20: void glUniform2iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glUniform3f(int,float,float,float)
com.badlogic.gdx.graphics.GL20: void glUniform3fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glUniform3i(int,int,int,int)
com.badlogic.gdx.graphics.GL20: void glUniform3iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glUniform4f(int,float,float,float,float)
com.badlogic.gdx.graphics.GL20: void glUniform4fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glUniform4i(int,int,int,int,int)
com.badlogic.gdx.graphics.GL20: void glUniform4iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL20: void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glUseProgram(int)
com.badlogic.gdx.graphics.GL20: void glValidateProgram(int)
com.badlogic.gdx.graphics.GL20: void glVertexAttrib1f(int,float)
com.badlogic.gdx.graphics.GL20: void glVertexAttrib1fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glVertexAttrib2f(int,float,float)
com.badlogic.gdx.graphics.GL20: void glVertexAttrib2fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glVertexAttrib3f(int,float,float,float)
com.badlogic.gdx.graphics.GL20: void glVertexAttrib3fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glVertexAttrib4f(int,float,float,float,float)
com.badlogic.gdx.graphics.GL20: void glVertexAttrib4fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL20: void glVertexAttribPointer(int,int,int,boolean,int,int)
com.badlogic.gdx.graphics.GL30
com.badlogic.gdx.graphics.GL30: int GL_READ_BUFFER
com.badlogic.gdx.graphics.GL30: int GL_UNPACK_ROW_LENGTH
com.badlogic.gdx.graphics.GL30: int GL_UNPACK_SKIP_ROWS
com.badlogic.gdx.graphics.GL30: int GL_UNPACK_SKIP_PIXELS
com.badlogic.gdx.graphics.GL30: int GL_PACK_ROW_LENGTH
com.badlogic.gdx.graphics.GL30: int GL_PACK_SKIP_ROWS
com.badlogic.gdx.graphics.GL30: int GL_PACK_SKIP_PIXELS
com.badlogic.gdx.graphics.GL30: int GL_COLOR
com.badlogic.gdx.graphics.GL30: int GL_DEPTH
com.badlogic.gdx.graphics.GL30: int GL_STENCIL
com.badlogic.gdx.graphics.GL30: int GL_RED
com.badlogic.gdx.graphics.GL30: int GL_RGB8
com.badlogic.gdx.graphics.GL30: int GL_RGBA8
com.badlogic.gdx.graphics.GL30: int GL_RGB10_A2
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_BINDING_3D
com.badlogic.gdx.graphics.GL30: int GL_UNPACK_SKIP_IMAGES
com.badlogic.gdx.graphics.GL30: int GL_UNPACK_IMAGE_HEIGHT
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_3D
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_WRAP_R
com.badlogic.gdx.graphics.GL30: int GL_MAX_3D_TEXTURE_SIZE
com.badlogic.gdx.graphics.GL30: int GL_UNSIGNED_INT_2_10_10_10_REV
com.badlogic.gdx.graphics.GL30: int GL_MAX_ELEMENTS_VERTICES
com.badlogic.gdx.graphics.GL30: int GL_MAX_ELEMENTS_INDICES
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_MIN_LOD
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_MAX_LOD
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_BASE_LEVEL
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_MAX_LEVEL
com.badlogic.gdx.graphics.GL30: int GL_MIN
com.badlogic.gdx.graphics.GL30: int GL_MAX
com.badlogic.gdx.graphics.GL30: int GL_DEPTH_COMPONENT24
com.badlogic.gdx.graphics.GL30: int GL_MAX_TEXTURE_LOD_BIAS
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_COMPARE_MODE
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_COMPARE_FUNC
com.badlogic.gdx.graphics.GL30: int GL_CURRENT_QUERY
com.badlogic.gdx.graphics.GL30: int GL_QUERY_RESULT
com.badlogic.gdx.graphics.GL30: int GL_QUERY_RESULT_AVAILABLE
com.badlogic.gdx.graphics.GL30: int GL_BUFFER_MAPPED
com.badlogic.gdx.graphics.GL30: int GL_BUFFER_MAP_POINTER
com.badlogic.gdx.graphics.GL30: int GL_STREAM_READ
com.badlogic.gdx.graphics.GL30: int GL_STREAM_COPY
com.badlogic.gdx.graphics.GL30: int GL_STATIC_READ
com.badlogic.gdx.graphics.GL30: int GL_STATIC_COPY
com.badlogic.gdx.graphics.GL30: int GL_DYNAMIC_READ
com.badlogic.gdx.graphics.GL30: int GL_DYNAMIC_COPY
com.badlogic.gdx.graphics.GL30: int GL_MAX_DRAW_BUFFERS
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER0
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER1
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER2
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER3
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER4
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER5
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER6
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER7
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER8
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER9
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER10
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER11
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER12
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER13
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER14
com.badlogic.gdx.graphics.GL30: int GL_DRAW_BUFFER15
com.badlogic.gdx.graphics.GL30: int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
com.badlogic.gdx.graphics.GL30: int GL_MAX_VERTEX_UNIFORM_COMPONENTS
com.badlogic.gdx.graphics.GL30: int GL_SAMPLER_3D
com.badlogic.gdx.graphics.GL30: int GL_SAMPLER_2D_SHADOW
com.badlogic.gdx.graphics.GL30: int GL_FRAGMENT_SHADER_DERIVATIVE_HINT
com.badlogic.gdx.graphics.GL30: int GL_PIXEL_PACK_BUFFER
com.badlogic.gdx.graphics.GL30: int GL_PIXEL_UNPACK_BUFFER
com.badlogic.gdx.graphics.GL30: int GL_PIXEL_PACK_BUFFER_BINDING
com.badlogic.gdx.graphics.GL30: int GL_PIXEL_UNPACK_BUFFER_BINDING
com.badlogic.gdx.graphics.GL30: int GL_FLOAT_MAT2x3
com.badlogic.gdx.graphics.GL30: int GL_FLOAT_MAT2x4
com.badlogic.gdx.graphics.GL30: int GL_FLOAT_MAT3x2
com.badlogic.gdx.graphics.GL30: int GL_FLOAT_MAT3x4
com.badlogic.gdx.graphics.GL30: int GL_FLOAT_MAT4x2
com.badlogic.gdx.graphics.GL30: int GL_FLOAT_MAT4x3
com.badlogic.gdx.graphics.GL30: int GL_SRGB
com.badlogic.gdx.graphics.GL30: int GL_SRGB8
com.badlogic.gdx.graphics.GL30: int GL_SRGB8_ALPHA8
com.badlogic.gdx.graphics.GL30: int GL_COMPARE_REF_TO_TEXTURE
com.badlogic.gdx.graphics.GL30: int GL_MAJOR_VERSION
com.badlogic.gdx.graphics.GL30: int GL_MINOR_VERSION
com.badlogic.gdx.graphics.GL30: int GL_NUM_EXTENSIONS
com.badlogic.gdx.graphics.GL30: int GL_RGBA32F
com.badlogic.gdx.graphics.GL30: int GL_RGB32F
com.badlogic.gdx.graphics.GL30: int GL_RGBA16F
com.badlogic.gdx.graphics.GL30: int GL_RGB16F
com.badlogic.gdx.graphics.GL30: int GL_VERTEX_ATTRIB_ARRAY_INTEGER
com.badlogic.gdx.graphics.GL30: int GL_MAX_ARRAY_TEXTURE_LAYERS
com.badlogic.gdx.graphics.GL30: int GL_MIN_PROGRAM_TEXEL_OFFSET
com.badlogic.gdx.graphics.GL30: int GL_MAX_PROGRAM_TEXEL_OFFSET
com.badlogic.gdx.graphics.GL30: int GL_MAX_VARYING_COMPONENTS
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_2D_ARRAY
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_BINDING_2D_ARRAY
com.badlogic.gdx.graphics.GL30: int GL_R11F_G11F_B10F
com.badlogic.gdx.graphics.GL30: int GL_UNSIGNED_INT_10F_11F_11F_REV
com.badlogic.gdx.graphics.GL30: int GL_RGB9_E5
com.badlogic.gdx.graphics.GL30: int GL_UNSIGNED_INT_5_9_9_9_REV
com.badlogic.gdx.graphics.GL30: int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
com.badlogic.gdx.graphics.GL30: int GL_TRANSFORM_FEEDBACK_BUFFER_MODE
com.badlogic.gdx.graphics.GL30: int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
com.badlogic.gdx.graphics.GL30: int GL_TRANSFORM_FEEDBACK_VARYINGS
com.badlogic.gdx.graphics.GL30: int GL_TRANSFORM_FEEDBACK_BUFFER_START
com.badlogic.gdx.graphics.GL30: int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
com.badlogic.gdx.graphics.GL30: int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
com.badlogic.gdx.graphics.GL30: int GL_RASTERIZER_DISCARD
com.badlogic.gdx.graphics.GL30: int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
com.badlogic.gdx.graphics.GL30: int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
com.badlogic.gdx.graphics.GL30: int GL_INTERLEAVED_ATTRIBS
com.badlogic.gdx.graphics.GL30: int GL_SEPARATE_ATTRIBS
com.badlogic.gdx.graphics.GL30: int GL_TRANSFORM_FEEDBACK_BUFFER
com.badlogic.gdx.graphics.GL30: int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
com.badlogic.gdx.graphics.GL30: int GL_RGBA32UI
com.badlogic.gdx.graphics.GL30: int GL_RGB32UI
com.badlogic.gdx.graphics.GL30: int GL_RGBA16UI
com.badlogic.gdx.graphics.GL30: int GL_RGB16UI
com.badlogic.gdx.graphics.GL30: int GL_RGBA8UI
com.badlogic.gdx.graphics.GL30: int GL_RGB8UI
com.badlogic.gdx.graphics.GL30: int GL_RGBA32I
com.badlogic.gdx.graphics.GL30: int GL_RGB32I
com.badlogic.gdx.graphics.GL30: int GL_RGBA16I
com.badlogic.gdx.graphics.GL30: int GL_RGB16I
com.badlogic.gdx.graphics.GL30: int GL_RGBA8I
com.badlogic.gdx.graphics.GL30: int GL_RGB8I
com.badlogic.gdx.graphics.GL30: int GL_RED_INTEGER
com.badlogic.gdx.graphics.GL30: int GL_RGB_INTEGER
com.badlogic.gdx.graphics.GL30: int GL_RGBA_INTEGER
com.badlogic.gdx.graphics.GL30: int GL_SAMPLER_2D_ARRAY
com.badlogic.gdx.graphics.GL30: int GL_SAMPLER_2D_ARRAY_SHADOW
com.badlogic.gdx.graphics.GL30: int GL_SAMPLER_CUBE_SHADOW
com.badlogic.gdx.graphics.GL30: int GL_UNSIGNED_INT_VEC2
com.badlogic.gdx.graphics.GL30: int GL_UNSIGNED_INT_VEC3
com.badlogic.gdx.graphics.GL30: int GL_UNSIGNED_INT_VEC4
com.badlogic.gdx.graphics.GL30: int GL_INT_SAMPLER_2D
com.badlogic.gdx.graphics.GL30: int GL_INT_SAMPLER_3D
com.badlogic.gdx.graphics.GL30: int GL_INT_SAMPLER_CUBE
com.badlogic.gdx.graphics.GL30: int GL_INT_SAMPLER_2D_ARRAY
com.badlogic.gdx.graphics.GL30: int GL_UNSIGNED_INT_SAMPLER_2D
com.badlogic.gdx.graphics.GL30: int GL_UNSIGNED_INT_SAMPLER_3D
com.badlogic.gdx.graphics.GL30: int GL_UNSIGNED_INT_SAMPLER_CUBE
com.badlogic.gdx.graphics.GL30: int GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
com.badlogic.gdx.graphics.GL30: int GL_BUFFER_ACCESS_FLAGS
com.badlogic.gdx.graphics.GL30: int GL_BUFFER_MAP_LENGTH
com.badlogic.gdx.graphics.GL30: int GL_BUFFER_MAP_OFFSET
com.badlogic.gdx.graphics.GL30: int GL_DEPTH_COMPONENT32F
com.badlogic.gdx.graphics.GL30: int GL_DEPTH32F_STENCIL8
com.badlogic.gdx.graphics.GL30: int GL_FLOAT_32_UNSIGNED_INT_24_8_REV
com.badlogic.gdx.graphics.GL30: int GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
com.badlogic.gdx.graphics.GL30: int GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
com.badlogic.gdx.graphics.GL30: int GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
com.badlogic.gdx.graphics.GL30: int GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
com.badlogic.gdx.graphics.GL30: int GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
com.badlogic.gdx.graphics.GL30: int GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
com.badlogic.gdx.graphics.GL30: int GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
com.badlogic.gdx.graphics.GL30: int GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
com.badlogic.gdx.graphics.GL30: int GL_FRAMEBUFFER_DEFAULT
com.badlogic.gdx.graphics.GL30: int GL_FRAMEBUFFER_UNDEFINED
com.badlogic.gdx.graphics.GL30: int GL_DEPTH_STENCIL_ATTACHMENT
com.badlogic.gdx.graphics.GL30: int GL_DEPTH_STENCIL
com.badlogic.gdx.graphics.GL30: int GL_UNSIGNED_INT_24_8
com.badlogic.gdx.graphics.GL30: int GL_DEPTH24_STENCIL8
com.badlogic.gdx.graphics.GL30: int GL_UNSIGNED_NORMALIZED
com.badlogic.gdx.graphics.GL30: int GL_DRAW_FRAMEBUFFER_BINDING
com.badlogic.gdx.graphics.GL30: int GL_READ_FRAMEBUFFER
com.badlogic.gdx.graphics.GL30: int GL_DRAW_FRAMEBUFFER
com.badlogic.gdx.graphics.GL30: int GL_READ_FRAMEBUFFER_BINDING
com.badlogic.gdx.graphics.GL30: int GL_RENDERBUFFER_SAMPLES
com.badlogic.gdx.graphics.GL30: int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
com.badlogic.gdx.graphics.GL30: int GL_MAX_COLOR_ATTACHMENTS
com.badlogic.gdx.graphics.GL30: int GL_COLOR_ATTACHMENT1
com.badlogic.gdx.graphics.GL30: int GL_COLOR_ATTACHMENT2
com.badlogic.gdx.graphics.GL30: int GL_COLOR_ATTACHMENT3
com.badlogic.gdx.graphics.GL30: int GL_COLOR_ATTACHMENT4
com.badlogic.gdx.graphics.GL30: int GL_COLOR_ATTACHMENT5
com.badlogic.gdx.graphics.GL30: int GL_COLOR_ATTACHMENT6
com.badlogic.gdx.graphics.GL30: int GL_COLOR_ATTACHMENT7
com.badlogic.gdx.graphics.GL30: int GL_COLOR_ATTACHMENT8
com.badlogic.gdx.graphics.GL30: int GL_COLOR_ATTACHMENT9
com.badlogic.gdx.graphics.GL30: int GL_COLOR_ATTACHMENT10
com.badlogic.gdx.graphics.GL30: int GL_COLOR_ATTACHMENT11
com.badlogic.gdx.graphics.GL30: int GL_COLOR_ATTACHMENT12
com.badlogic.gdx.graphics.GL30: int GL_COLOR_ATTACHMENT13
com.badlogic.gdx.graphics.GL30: int GL_COLOR_ATTACHMENT14
com.badlogic.gdx.graphics.GL30: int GL_COLOR_ATTACHMENT15
com.badlogic.gdx.graphics.GL30: int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
com.badlogic.gdx.graphics.GL30: int GL_MAX_SAMPLES
com.badlogic.gdx.graphics.GL30: int GL_HALF_FLOAT
com.badlogic.gdx.graphics.GL30: int GL_MAP_READ_BIT
com.badlogic.gdx.graphics.GL30: int GL_MAP_WRITE_BIT
com.badlogic.gdx.graphics.GL30: int GL_MAP_INVALIDATE_RANGE_BIT
com.badlogic.gdx.graphics.GL30: int GL_MAP_INVALIDATE_BUFFER_BIT
com.badlogic.gdx.graphics.GL30: int GL_MAP_FLUSH_EXPLICIT_BIT
com.badlogic.gdx.graphics.GL30: int GL_MAP_UNSYNCHRONIZED_BIT
com.badlogic.gdx.graphics.GL30: int GL_RG
com.badlogic.gdx.graphics.GL30: int GL_RG_INTEGER
com.badlogic.gdx.graphics.GL30: int GL_R8
com.badlogic.gdx.graphics.GL30: int GL_RG8
com.badlogic.gdx.graphics.GL30: int GL_R16F
com.badlogic.gdx.graphics.GL30: int GL_R32F
com.badlogic.gdx.graphics.GL30: int GL_RG16F
com.badlogic.gdx.graphics.GL30: int GL_RG32F
com.badlogic.gdx.graphics.GL30: int GL_R8I
com.badlogic.gdx.graphics.GL30: int GL_R8UI
com.badlogic.gdx.graphics.GL30: int GL_R16I
com.badlogic.gdx.graphics.GL30: int GL_R16UI
com.badlogic.gdx.graphics.GL30: int GL_R32I
com.badlogic.gdx.graphics.GL30: int GL_R32UI
com.badlogic.gdx.graphics.GL30: int GL_RG8I
com.badlogic.gdx.graphics.GL30: int GL_RG8UI
com.badlogic.gdx.graphics.GL30: int GL_RG16I
com.badlogic.gdx.graphics.GL30: int GL_RG16UI
com.badlogic.gdx.graphics.GL30: int GL_RG32I
com.badlogic.gdx.graphics.GL30: int GL_RG32UI
com.badlogic.gdx.graphics.GL30: int GL_VERTEX_ARRAY_BINDING
com.badlogic.gdx.graphics.GL30: int GL_R8_SNORM
com.badlogic.gdx.graphics.GL30: int GL_RG8_SNORM
com.badlogic.gdx.graphics.GL30: int GL_RGB8_SNORM
com.badlogic.gdx.graphics.GL30: int GL_RGBA8_SNORM
com.badlogic.gdx.graphics.GL30: int GL_SIGNED_NORMALIZED
com.badlogic.gdx.graphics.GL30: int GL_PRIMITIVE_RESTART_FIXED_INDEX
com.badlogic.gdx.graphics.GL30: int GL_COPY_READ_BUFFER
com.badlogic.gdx.graphics.GL30: int GL_COPY_WRITE_BUFFER
com.badlogic.gdx.graphics.GL30: int GL_COPY_READ_BUFFER_BINDING
com.badlogic.gdx.graphics.GL30: int GL_COPY_WRITE_BUFFER_BINDING
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_BUFFER
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_BUFFER_BINDING
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_BUFFER_START
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_BUFFER_SIZE
com.badlogic.gdx.graphics.GL30: int GL_MAX_VERTEX_UNIFORM_BLOCKS
com.badlogic.gdx.graphics.GL30: int GL_MAX_FRAGMENT_UNIFORM_BLOCKS
com.badlogic.gdx.graphics.GL30: int GL_MAX_COMBINED_UNIFORM_BLOCKS
com.badlogic.gdx.graphics.GL30: int GL_MAX_UNIFORM_BUFFER_BINDINGS
com.badlogic.gdx.graphics.GL30: int GL_MAX_UNIFORM_BLOCK_SIZE
com.badlogic.gdx.graphics.GL30: int GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
com.badlogic.gdx.graphics.GL30: int GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
com.badlogic.gdx.graphics.GL30: int GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
com.badlogic.gdx.graphics.GL30: int GL_ACTIVE_UNIFORM_BLOCKS
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_TYPE
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_SIZE
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_NAME_LENGTH
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_BLOCK_INDEX
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_OFFSET
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_ARRAY_STRIDE
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_MATRIX_STRIDE
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_IS_ROW_MAJOR
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_BLOCK_BINDING
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_BLOCK_DATA_SIZE
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_BLOCK_NAME_LENGTH
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
com.badlogic.gdx.graphics.GL30: int GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
com.badlogic.gdx.graphics.GL30: int GL_INVALID_INDEX
com.badlogic.gdx.graphics.GL30: int GL_MAX_VERTEX_OUTPUT_COMPONENTS
com.badlogic.gdx.graphics.GL30: int GL_MAX_FRAGMENT_INPUT_COMPONENTS
com.badlogic.gdx.graphics.GL30: int GL_MAX_SERVER_WAIT_TIMEOUT
com.badlogic.gdx.graphics.GL30: int GL_OBJECT_TYPE
com.badlogic.gdx.graphics.GL30: int GL_SYNC_CONDITION
com.badlogic.gdx.graphics.GL30: int GL_SYNC_STATUS
com.badlogic.gdx.graphics.GL30: int GL_SYNC_FLAGS
com.badlogic.gdx.graphics.GL30: int GL_SYNC_FENCE
com.badlogic.gdx.graphics.GL30: int GL_SYNC_GPU_COMMANDS_COMPLETE
com.badlogic.gdx.graphics.GL30: int GL_UNSIGNALED
com.badlogic.gdx.graphics.GL30: int GL_SIGNALED
com.badlogic.gdx.graphics.GL30: int GL_ALREADY_SIGNALED
com.badlogic.gdx.graphics.GL30: int GL_TIMEOUT_EXPIRED
com.badlogic.gdx.graphics.GL30: int GL_CONDITION_SATISFIED
com.badlogic.gdx.graphics.GL30: int GL_WAIT_FAILED
com.badlogic.gdx.graphics.GL30: int GL_SYNC_FLUSH_COMMANDS_BIT
com.badlogic.gdx.graphics.GL30: long GL_TIMEOUT_IGNORED
com.badlogic.gdx.graphics.GL30: int GL_VERTEX_ATTRIB_ARRAY_DIVISOR
com.badlogic.gdx.graphics.GL30: int GL_ANY_SAMPLES_PASSED
com.badlogic.gdx.graphics.GL30: int GL_ANY_SAMPLES_PASSED_CONSERVATIVE
com.badlogic.gdx.graphics.GL30: int GL_SAMPLER_BINDING
com.badlogic.gdx.graphics.GL30: int GL_RGB10_A2UI
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_SWIZZLE_R
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_SWIZZLE_G
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_SWIZZLE_B
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_SWIZZLE_A
com.badlogic.gdx.graphics.GL30: int GL_GREEN
com.badlogic.gdx.graphics.GL30: int GL_BLUE
com.badlogic.gdx.graphics.GL30: int GL_INT_2_10_10_10_REV
com.badlogic.gdx.graphics.GL30: int GL_TRANSFORM_FEEDBACK
com.badlogic.gdx.graphics.GL30: int GL_TRANSFORM_FEEDBACK_PAUSED
com.badlogic.gdx.graphics.GL30: int GL_TRANSFORM_FEEDBACK_ACTIVE
com.badlogic.gdx.graphics.GL30: int GL_TRANSFORM_FEEDBACK_BINDING
com.badlogic.gdx.graphics.GL30: int GL_PROGRAM_BINARY_RETRIEVABLE_HINT
com.badlogic.gdx.graphics.GL30: int GL_PROGRAM_BINARY_LENGTH
com.badlogic.gdx.graphics.GL30: int GL_NUM_PROGRAM_BINARY_FORMATS
com.badlogic.gdx.graphics.GL30: int GL_PROGRAM_BINARY_FORMATS
com.badlogic.gdx.graphics.GL30: int GL_COMPRESSED_R11_EAC
com.badlogic.gdx.graphics.GL30: int GL_COMPRESSED_SIGNED_R11_EAC
com.badlogic.gdx.graphics.GL30: int GL_COMPRESSED_RG11_EAC
com.badlogic.gdx.graphics.GL30: int GL_COMPRESSED_SIGNED_RG11_EAC
com.badlogic.gdx.graphics.GL30: int GL_COMPRESSED_RGB8_ETC2
com.badlogic.gdx.graphics.GL30: int GL_COMPRESSED_SRGB8_ETC2
com.badlogic.gdx.graphics.GL30: int GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
com.badlogic.gdx.graphics.GL30: int GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
com.badlogic.gdx.graphics.GL30: int GL_COMPRESSED_RGBA8_ETC2_EAC
com.badlogic.gdx.graphics.GL30: int GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_IMMUTABLE_FORMAT
com.badlogic.gdx.graphics.GL30: int GL_MAX_ELEMENT_INDEX
com.badlogic.gdx.graphics.GL30: int GL_NUM_SAMPLE_COUNTS
com.badlogic.gdx.graphics.GL30: int GL_TEXTURE_IMMUTABLE_LEVELS
com.badlogic.gdx.graphics.GL30: void glReadBuffer(int)
com.badlogic.gdx.graphics.GL30: void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL30: void glDrawRangeElements(int,int,int,int,int,int)
com.badlogic.gdx.graphics.GL30: void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL30: void glTexImage3D(int,int,int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.GL30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.GL30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.GL30: void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.GL30: void glGenQueries(int,int[],int)
com.badlogic.gdx.graphics.GL30: void glGenQueries(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glDeleteQueries(int,int[],int)
com.badlogic.gdx.graphics.GL30: void glDeleteQueries(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: boolean glIsQuery(int)
com.badlogic.gdx.graphics.GL30: void glBeginQuery(int,int)
com.badlogic.gdx.graphics.GL30: void glEndQuery(int)
com.badlogic.gdx.graphics.GL30: void glGetQueryiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glGetQueryObjectuiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: boolean glUnmapBuffer(int)
com.badlogic.gdx.graphics.GL30: java.nio.Buffer glGetBufferPointerv(int,int)
com.badlogic.gdx.graphics.GL30: void glDrawBuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL30: void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL30: void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL30: void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL30: void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL30: void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL30: void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.GL30: void glRenderbufferStorageMultisample(int,int,int,int,int)
com.badlogic.gdx.graphics.GL30: void glFramebufferTextureLayer(int,int,int,int,int)
com.badlogic.gdx.graphics.GL30: void glFlushMappedBufferRange(int,int,int)
com.badlogic.gdx.graphics.GL30: void glBindVertexArray(int)
com.badlogic.gdx.graphics.GL30: void glDeleteVertexArrays(int,int[],int)
com.badlogic.gdx.graphics.GL30: void glDeleteVertexArrays(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glGenVertexArrays(int,int[],int)
com.badlogic.gdx.graphics.GL30: void glGenVertexArrays(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: boolean glIsVertexArray(int)
com.badlogic.gdx.graphics.GL30: void glBeginTransformFeedback(int)
com.badlogic.gdx.graphics.GL30: void glEndTransformFeedback()
com.badlogic.gdx.graphics.GL30: void glBindBufferRange(int,int,int,int,int)
com.badlogic.gdx.graphics.GL30: void glBindBufferBase(int,int,int)
com.badlogic.gdx.graphics.GL30: void glTransformFeedbackVaryings(int,java.lang.String[],int)
com.badlogic.gdx.graphics.GL30: void glVertexAttribIPointer(int,int,int,int,int)
com.badlogic.gdx.graphics.GL30: void glGetVertexAttribIiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glVertexAttribI4i(int,int,int,int,int)
com.badlogic.gdx.graphics.GL30: void glVertexAttribI4ui(int,int,int,int,int)
com.badlogic.gdx.graphics.GL30: void glGetUniformuiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: int glGetFragDataLocation(int,java.lang.String)
com.badlogic.gdx.graphics.GL30: void glUniform1uiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glUniform3uiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glUniform4uiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glClearBufferiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glClearBufferuiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glClearBufferfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL30: void glClearBufferfi(int,int,float,int)
com.badlogic.gdx.graphics.GL30: java.lang.String glGetStringi(int,int)
com.badlogic.gdx.graphics.GL30: void glCopyBufferSubData(int,int,int,int,int)
com.badlogic.gdx.graphics.GL30: void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: int glGetUniformBlockIndex(int,java.lang.String)
com.badlogic.gdx.graphics.GL30: void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer)
com.badlogic.gdx.graphics.GL30: java.lang.String glGetActiveUniformBlockName(int,int)
com.badlogic.gdx.graphics.GL30: void glUniformBlockBinding(int,int,int)
com.badlogic.gdx.graphics.GL30: void glDrawArraysInstanced(int,int,int,int)
com.badlogic.gdx.graphics.GL30: void glDrawElementsInstanced(int,int,int,int,int)
com.badlogic.gdx.graphics.GL30: void glGetInteger64v(int,java.nio.LongBuffer)
com.badlogic.gdx.graphics.GL30: void glGetBufferParameteri64v(int,int,java.nio.LongBuffer)
com.badlogic.gdx.graphics.GL30: void glGenSamplers(int,int[],int)
com.badlogic.gdx.graphics.GL30: void glGenSamplers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glDeleteSamplers(int,int[],int)
com.badlogic.gdx.graphics.GL30: void glDeleteSamplers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: boolean glIsSampler(int)
com.badlogic.gdx.graphics.GL30: void glBindSampler(int,int)
com.badlogic.gdx.graphics.GL30: void glSamplerParameteri(int,int,int)
com.badlogic.gdx.graphics.GL30: void glSamplerParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glSamplerParameterf(int,int,float)
com.badlogic.gdx.graphics.GL30: void glSamplerParameterfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL30: void glGetSamplerParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.GL30: void glVertexAttribDivisor(int,int)
com.badlogic.gdx.graphics.GL30: void glBindTransformFeedback(int,int)
com.badlogic.gdx.graphics.GL30: void glDeleteTransformFeedbacks(int,int[],int)
com.badlogic.gdx.graphics.GL30: void glDeleteTransformFeedbacks(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glGenTransformFeedbacks(int,int[],int)
com.badlogic.gdx.graphics.GL30: void glGenTransformFeedbacks(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: boolean glIsTransformFeedback(int)
com.badlogic.gdx.graphics.GL30: void glPauseTransformFeedback()
com.badlogic.gdx.graphics.GL30: void glResumeTransformFeedback()
com.badlogic.gdx.graphics.GL30: void glProgramParameteri(int,int,int)
com.badlogic.gdx.graphics.GL30: void glInvalidateFramebuffer(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.GL30: void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int)
com.badlogic.gdx.graphics.GLTexture
com.badlogic.gdx.graphics.GLTexture: java.nio.IntBuffer buffer
com.badlogic.gdx.graphics.GLTexture: int glTarget
com.badlogic.gdx.graphics.GLTexture: int glHandle
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureFilter minFilter
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureFilter magFilter
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureWrap uWrap
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureWrap vWrap
com.badlogic.gdx.graphics.GLTexture: int getWidth()
com.badlogic.gdx.graphics.GLTexture: int getHeight()
com.badlogic.gdx.graphics.GLTexture: int getDepth()
com.badlogic.gdx.graphics.GLTexture: GLTexture(int)
com.badlogic.gdx.graphics.GLTexture: GLTexture(int,int)
com.badlogic.gdx.graphics.GLTexture: boolean isManaged()
com.badlogic.gdx.graphics.GLTexture: void reload()
com.badlogic.gdx.graphics.GLTexture: void bind()
com.badlogic.gdx.graphics.GLTexture: void bind(int)
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureFilter getMinFilter()
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureFilter getMagFilter()
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureWrap getUWrap()
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.Texture$TextureWrap getVWrap()
com.badlogic.gdx.graphics.GLTexture: int getTextureObjectHandle()
com.badlogic.gdx.graphics.GLTexture: void unsafeSetWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap)
com.badlogic.gdx.graphics.GLTexture: void unsafeSetWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap,boolean)
com.badlogic.gdx.graphics.GLTexture: void setWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap)
com.badlogic.gdx.graphics.GLTexture: void unsafeSetFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter)
com.badlogic.gdx.graphics.GLTexture: void unsafeSetFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean)
com.badlogic.gdx.graphics.GLTexture: void setFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter)
com.badlogic.gdx.graphics.GLTexture: void delete()
com.badlogic.gdx.graphics.GLTexture: void dispose()
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.TextureData createTextureData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
com.badlogic.gdx.graphics.GLTexture: com.badlogic.gdx.graphics.TextureData createTextureData(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.GLTexture: int createGLHandle()
com.badlogic.gdx.graphics.GLTexture: void uploadImageData(int,com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.GLTexture: void uploadImageData(int,com.badlogic.gdx.graphics.TextureData,int)
com.badlogic.gdx.graphics.GLTexture: void <clinit>()
com.badlogic.gdx.graphics.Mesh
com.badlogic.gdx.graphics.Mesh: java.util.Map meshes
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.glutils.VertexData vertices
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.glutils.IndexData indices
com.badlogic.gdx.graphics.Mesh: boolean autoBind
com.badlogic.gdx.graphics.Mesh: boolean isVertexArray
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.math.Vector3 tmpV
com.badlogic.gdx.graphics.Mesh: Mesh(boolean,int,int,com.badlogic.gdx.graphics.VertexAttribute[])
com.badlogic.gdx.graphics.Mesh: Mesh(boolean,int,int,com.badlogic.gdx.graphics.VertexAttributes)
com.badlogic.gdx.graphics.Mesh: Mesh(boolean,boolean,int,int,com.badlogic.gdx.graphics.VertexAttributes)
com.badlogic.gdx.graphics.Mesh: Mesh(com.badlogic.gdx.graphics.Mesh$VertexDataType,boolean,int,int,com.badlogic.gdx.graphics.VertexAttribute[])
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.math.Matrix4[])
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[])
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[],com.badlogic.gdx.math.Matrix4[])
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.Mesh setVertices(float[])
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.Mesh setVertices(float[],int,int)
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.Mesh updateVertices(int,float[])
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.Mesh updateVertices(int,float[],int,int)
com.badlogic.gdx.graphics.Mesh: float[] getVertices(float[])
com.badlogic.gdx.graphics.Mesh: float[] getVertices(int,float[])
com.badlogic.gdx.graphics.Mesh: float[] getVertices(int,int,float[])
com.badlogic.gdx.graphics.Mesh: float[] getVertices(int,int,float[],int)
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.Mesh setIndices(short[])
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.Mesh setIndices(short[],int,int)
com.badlogic.gdx.graphics.Mesh: void getIndices(short[])
com.badlogic.gdx.graphics.Mesh: void getIndices(short[],int)
com.badlogic.gdx.graphics.Mesh: int getNumIndices()
com.badlogic.gdx.graphics.Mesh: int getNumVertices()
com.badlogic.gdx.graphics.Mesh: int getMaxVertices()
com.badlogic.gdx.graphics.Mesh: int getMaxIndices()
com.badlogic.gdx.graphics.Mesh: int getVertexSize()
com.badlogic.gdx.graphics.Mesh: void setAutoBind(boolean)
com.badlogic.gdx.graphics.Mesh: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.Mesh: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.graphics.Mesh: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.Mesh: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.graphics.Mesh: void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int)
com.badlogic.gdx.graphics.Mesh: void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int)
com.badlogic.gdx.graphics.Mesh: void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int,boolean)
com.badlogic.gdx.graphics.Mesh: void dispose()
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.VertexAttribute getVertexAttribute(int)
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.VertexAttributes getVertexAttributes()
com.badlogic.gdx.graphics.Mesh: java.nio.FloatBuffer getVerticesBuffer()
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox()
com.badlogic.gdx.graphics.Mesh: void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int)
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int)
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.Mesh: float calculateRadiusSquared(float,float,float,int,int,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.Mesh: float calculateRadius(float,float,float,int,int,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.Mesh: float calculateRadius(com.badlogic.gdx.math.Vector3,int,int,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.Mesh: float calculateRadius(float,float,float,int,int)
com.badlogic.gdx.graphics.Mesh: float calculateRadius(com.badlogic.gdx.math.Vector3,int,int)
com.badlogic.gdx.graphics.Mesh: float calculateRadius(float,float,float)
com.badlogic.gdx.graphics.Mesh: float calculateRadius(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.Mesh: java.nio.ShortBuffer getIndicesBuffer()
com.badlogic.gdx.graphics.Mesh: void addManagedMesh(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Mesh)
com.badlogic.gdx.graphics.Mesh: void invalidateAllMeshes(com.badlogic.gdx.Application)
com.badlogic.gdx.graphics.Mesh: void clearAllMeshes(com.badlogic.gdx.Application)
com.badlogic.gdx.graphics.Mesh: java.lang.String getManagedStatus()
com.badlogic.gdx.graphics.Mesh: void scale(float,float,float)
com.badlogic.gdx.graphics.Mesh: void transform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.Mesh: void transform(com.badlogic.gdx.math.Matrix4,int,int)
com.badlogic.gdx.graphics.Mesh: void transform(com.badlogic.gdx.math.Matrix4,float[],int,int,int,int,int)
com.badlogic.gdx.graphics.Mesh: void transformUV(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.graphics.Mesh: void transformUV(com.badlogic.gdx.math.Matrix3,int,int)
com.badlogic.gdx.graphics.Mesh: void transformUV(com.badlogic.gdx.math.Matrix3,float[],int,int,int,int)
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.Mesh copy(boolean,boolean,int[])
com.badlogic.gdx.graphics.Mesh: com.badlogic.gdx.graphics.Mesh copy(boolean)
com.badlogic.gdx.graphics.Mesh: void <clinit>()
com.badlogic.gdx.graphics.Mesh$VertexDataType
com.badlogic.gdx.graphics.Mesh$VertexDataType: com.badlogic.gdx.graphics.Mesh$VertexDataType VertexArray
com.badlogic.gdx.graphics.Mesh$VertexDataType: com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObject
com.badlogic.gdx.graphics.Mesh$VertexDataType: com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectSubData
com.badlogic.gdx.graphics.Mesh$VertexDataType: com.badlogic.gdx.graphics.Mesh$VertexDataType[] $VALUES
com.badlogic.gdx.graphics.Mesh$VertexDataType: com.badlogic.gdx.graphics.Mesh$VertexDataType[] values()
com.badlogic.gdx.graphics.Mesh$VertexDataType: com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String)
com.badlogic.gdx.graphics.Mesh$VertexDataType: Mesh$VertexDataType(java.lang.String,int)
com.badlogic.gdx.graphics.Mesh$VertexDataType: void <clinit>()
com.badlogic.gdx.graphics.OrthographicCamera
com.badlogic.gdx.graphics.OrthographicCamera: float zoom
com.badlogic.gdx.graphics.OrthographicCamera: com.badlogic.gdx.math.Vector3 tmp
com.badlogic.gdx.graphics.OrthographicCamera: OrthographicCamera()
com.badlogic.gdx.graphics.OrthographicCamera: OrthographicCamera(float,float)
com.badlogic.gdx.graphics.OrthographicCamera: void update()
com.badlogic.gdx.graphics.OrthographicCamera: void update(boolean)
com.badlogic.gdx.graphics.OrthographicCamera: void setToOrtho(boolean)
com.badlogic.gdx.graphics.OrthographicCamera: void setToOrtho(boolean,float,float)
com.badlogic.gdx.graphics.OrthographicCamera: void rotate(float)
com.badlogic.gdx.graphics.OrthographicCamera: void translate(float,float)
com.badlogic.gdx.graphics.OrthographicCamera: void translate(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.PerspectiveCamera
com.badlogic.gdx.graphics.PerspectiveCamera: float fieldOfView
com.badlogic.gdx.graphics.PerspectiveCamera: com.badlogic.gdx.math.Vector3 tmp
com.badlogic.gdx.graphics.PerspectiveCamera: PerspectiveCamera()
com.badlogic.gdx.graphics.PerspectiveCamera: PerspectiveCamera(float,float,float)
com.badlogic.gdx.graphics.PerspectiveCamera: void update()
com.badlogic.gdx.graphics.PerspectiveCamera: void update(boolean)
com.badlogic.gdx.graphics.Pixmap
com.badlogic.gdx.graphics.Pixmap: com.badlogic.gdx.graphics.Pixmap$Blending blending
com.badlogic.gdx.graphics.Pixmap: com.badlogic.gdx.graphics.g2d.Gdx2DPixmap pixmap
com.badlogic.gdx.graphics.Pixmap: int color
com.badlogic.gdx.graphics.Pixmap: boolean disposed
com.badlogic.gdx.graphics.Pixmap: void setBlending(com.badlogic.gdx.graphics.Pixmap$Blending)
com.badlogic.gdx.graphics.Pixmap: void setFilter(com.badlogic.gdx.graphics.Pixmap$Filter)
com.badlogic.gdx.graphics.Pixmap: Pixmap(int,int,com.badlogic.gdx.graphics.Pixmap$Format)
com.badlogic.gdx.graphics.Pixmap: Pixmap(byte[],int,int)
com.badlogic.gdx.graphics.Pixmap: Pixmap(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.Pixmap: Pixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap)
com.badlogic.gdx.graphics.Pixmap: void setColor(int)
com.badlogic.gdx.graphics.Pixmap: void setColor(float,float,float,float)
com.badlogic.gdx.graphics.Pixmap: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.Pixmap: void fill()
com.badlogic.gdx.graphics.Pixmap: void drawLine(int,int,int,int)
com.badlogic.gdx.graphics.Pixmap: void drawRectangle(int,int,int,int)
com.badlogic.gdx.graphics.Pixmap: void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.graphics.Pixmap: void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int)
com.badlogic.gdx.graphics.Pixmap: void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.Pixmap: void fillRectangle(int,int,int,int)
com.badlogic.gdx.graphics.Pixmap: void drawCircle(int,int,int)
com.badlogic.gdx.graphics.Pixmap: void fillCircle(int,int,int)
com.badlogic.gdx.graphics.Pixmap: void fillTriangle(int,int,int,int,int,int)
com.badlogic.gdx.graphics.Pixmap: int getPixel(int,int)
com.badlogic.gdx.graphics.Pixmap: int getWidth()
com.badlogic.gdx.graphics.Pixmap: int getHeight()
com.badlogic.gdx.graphics.Pixmap: void dispose()
com.badlogic.gdx.graphics.Pixmap: void drawPixel(int,int)
com.badlogic.gdx.graphics.Pixmap: void drawPixel(int,int,int)
com.badlogic.gdx.graphics.Pixmap: int getGLFormat()
com.badlogic.gdx.graphics.Pixmap: int getGLInternalFormat()
com.badlogic.gdx.graphics.Pixmap: int getGLType()
com.badlogic.gdx.graphics.Pixmap: java.nio.ByteBuffer getPixels()
com.badlogic.gdx.graphics.Pixmap: com.badlogic.gdx.graphics.Pixmap$Format getFormat()
com.badlogic.gdx.graphics.Pixmap: com.badlogic.gdx.graphics.Pixmap$Blending getBlending()
com.badlogic.gdx.graphics.Pixmap: void <clinit>()
com.badlogic.gdx.graphics.Pixmap$Blending
com.badlogic.gdx.graphics.Pixmap$Blending: com.badlogic.gdx.graphics.Pixmap$Blending None
com.badlogic.gdx.graphics.Pixmap$Blending: com.badlogic.gdx.graphics.Pixmap$Blending SourceOver
com.badlogic.gdx.graphics.Pixmap$Blending: com.badlogic.gdx.graphics.Pixmap$Blending[] $VALUES
com.badlogic.gdx.graphics.Pixmap$Blending: com.badlogic.gdx.graphics.Pixmap$Blending[] values()
com.badlogic.gdx.graphics.Pixmap$Blending: com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String)
com.badlogic.gdx.graphics.Pixmap$Blending: Pixmap$Blending(java.lang.String,int)
com.badlogic.gdx.graphics.Pixmap$Blending: void <clinit>()
com.badlogic.gdx.graphics.Pixmap$Filter
com.badlogic.gdx.graphics.Pixmap$Filter: com.badlogic.gdx.graphics.Pixmap$Filter NearestNeighbour
com.badlogic.gdx.graphics.Pixmap$Filter: com.badlogic.gdx.graphics.Pixmap$Filter BiLinear
com.badlogic.gdx.graphics.Pixmap$Filter: com.badlogic.gdx.graphics.Pixmap$Filter[] $VALUES
com.badlogic.gdx.graphics.Pixmap$Filter: com.badlogic.gdx.graphics.Pixmap$Filter[] values()
com.badlogic.gdx.graphics.Pixmap$Filter: com.badlogic.gdx.graphics.Pixmap$Filter valueOf(java.lang.String)
com.badlogic.gdx.graphics.Pixmap$Filter: Pixmap$Filter(java.lang.String,int)
com.badlogic.gdx.graphics.Pixmap$Filter: void <clinit>()
com.badlogic.gdx.graphics.Pixmap$Format
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format Alpha
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format Intensity
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format LuminanceAlpha
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format RGB565
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format RGBA4444
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format RGB888
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format RGBA8888
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format[] $VALUES
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format[] values()
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String)
com.badlogic.gdx.graphics.Pixmap$Format: Pixmap$Format(java.lang.String,int)
com.badlogic.gdx.graphics.Pixmap$Format: int toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format)
com.badlogic.gdx.graphics.Pixmap$Format: com.badlogic.gdx.graphics.Pixmap$Format fromGdx2DPixmapFormat(int)
com.badlogic.gdx.graphics.Pixmap$Format: void <clinit>()
com.badlogic.gdx.graphics.PixmapIO
com.badlogic.gdx.graphics.PixmapIO: PixmapIO()
com.badlogic.gdx.graphics.PixmapIO: void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO: com.badlogic.gdx.graphics.Pixmap readCIM(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.PixmapIO: void writePNG(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$CIM
com.badlogic.gdx.graphics.PixmapIO$CIM: int BUFFER_SIZE
com.badlogic.gdx.graphics.PixmapIO$CIM: byte[] writeBuffer
com.badlogic.gdx.graphics.PixmapIO$CIM: byte[] readBuffer
com.badlogic.gdx.graphics.PixmapIO$CIM: PixmapIO$CIM()
com.badlogic.gdx.graphics.PixmapIO$CIM: void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$CIM: com.badlogic.gdx.graphics.Pixmap read(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.PixmapIO$CIM: void <clinit>()
com.badlogic.gdx.graphics.PixmapIO$PNG
com.badlogic.gdx.graphics.PixmapIO$PNG: int[] crcTable
com.badlogic.gdx.graphics.PixmapIO$PNG: int ZLIB_BLOCK_SIZE
com.badlogic.gdx.graphics.PixmapIO$PNG: PixmapIO$PNG()
com.badlogic.gdx.graphics.PixmapIO$PNG: byte[] write(com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$PNG: byte[] createHeaderChunk(int,int)
com.badlogic.gdx.graphics.PixmapIO$PNG: byte[] createDataChunk(com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.PixmapIO$PNG: byte[] createTrailerChunk()
com.badlogic.gdx.graphics.PixmapIO$PNG: byte[] toChunk(java.lang.String,byte[])
com.badlogic.gdx.graphics.PixmapIO$PNG: void createCRCTable()
com.badlogic.gdx.graphics.PixmapIO$PNG: int updateCRC(int,byte[])
com.badlogic.gdx.graphics.PixmapIO$PNG: byte[] toZLIB(byte[])
com.badlogic.gdx.graphics.PixmapIO$PNG: void writeUncompressedDeflateBlock(java.io.DataOutputStream,boolean,byte[],int,char)
com.badlogic.gdx.graphics.PixmapIO$PNG: int calcADLER32(byte[])
com.badlogic.gdx.graphics.Texture
com.badlogic.gdx.graphics.Texture: com.badlogic.gdx.assets.AssetManager assetManager
com.badlogic.gdx.graphics.Texture: java.util.Map managedTextures
com.badlogic.gdx.graphics.Texture: com.badlogic.gdx.graphics.TextureData data
com.badlogic.gdx.graphics.Texture: Texture(java.lang.String)
com.badlogic.gdx.graphics.Texture: Texture(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.Texture: Texture(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.Texture: Texture(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
com.badlogic.gdx.graphics.Texture: Texture(com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.Texture: Texture(com.badlogic.gdx.graphics.Pixmap,boolean)
com.badlogic.gdx.graphics.Texture: Texture(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
com.badlogic.gdx.graphics.Texture: Texture(int,int,com.badlogic.gdx.graphics.Pixmap$Format)
com.badlogic.gdx.graphics.Texture: Texture(com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.Texture: void load(com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.Texture: void reload()
com.badlogic.gdx.graphics.Texture: void draw(com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.graphics.Texture: int getWidth()
com.badlogic.gdx.graphics.Texture: int getHeight()
com.badlogic.gdx.graphics.Texture: int getDepth()
com.badlogic.gdx.graphics.Texture: com.badlogic.gdx.graphics.TextureData getTextureData()
com.badlogic.gdx.graphics.Texture: boolean isManaged()
com.badlogic.gdx.graphics.Texture: void dispose()
com.badlogic.gdx.graphics.Texture: void addManagedTexture(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.graphics.Texture: void clearAllTextures(com.badlogic.gdx.Application)
com.badlogic.gdx.graphics.Texture: void invalidateAllTextures(com.badlogic.gdx.Application)
com.badlogic.gdx.graphics.Texture: void setAssetManager(com.badlogic.gdx.assets.AssetManager)
com.badlogic.gdx.graphics.Texture: java.lang.String getManagedStatus()
com.badlogic.gdx.graphics.Texture: int getNumManagedTextures()
com.badlogic.gdx.graphics.Texture: void <clinit>()
com.badlogic.gdx.graphics.Texture$1
com.badlogic.gdx.graphics.Texture$1: int val$refCount
com.badlogic.gdx.graphics.Texture$1: Texture$1(int)
com.badlogic.gdx.graphics.Texture$1: void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class)
com.badlogic.gdx.graphics.Texture$TextureFilter
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter Nearest
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter Linear
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter MipMap
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestNearest
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearNearest
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestLinear
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearLinear
com.badlogic.gdx.graphics.Texture$TextureFilter: int glEnum
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter[] $VALUES
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter[] values()
com.badlogic.gdx.graphics.Texture$TextureFilter: com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String)
com.badlogic.gdx.graphics.Texture$TextureFilter: Texture$TextureFilter(java.lang.String,int,int)
com.badlogic.gdx.graphics.Texture$TextureFilter: boolean isMipMap()
com.badlogic.gdx.graphics.Texture$TextureFilter: int getGLEnum()
com.badlogic.gdx.graphics.Texture$TextureFilter: void <clinit>()
com.badlogic.gdx.graphics.Texture$TextureWrap
com.badlogic.gdx.graphics.Texture$TextureWrap: com.badlogic.gdx.graphics.Texture$TextureWrap MirroredRepeat
com.badlogic.gdx.graphics.Texture$TextureWrap: com.badlogic.gdx.graphics.Texture$TextureWrap ClampToEdge
com.badlogic.gdx.graphics.Texture$TextureWrap: com.badlogic.gdx.graphics.Texture$TextureWrap Repeat
com.badlogic.gdx.graphics.Texture$TextureWrap: int glEnum
com.badlogic.gdx.graphics.Texture$TextureWrap: com.badlogic.gdx.graphics.Texture$TextureWrap[] $VALUES
com.badlogic.gdx.graphics.Texture$TextureWrap: com.badlogic.gdx.graphics.Texture$TextureWrap[] values()
com.badlogic.gdx.graphics.Texture$TextureWrap: com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String)
com.badlogic.gdx.graphics.Texture$TextureWrap: Texture$TextureWrap(java.lang.String,int,int)
com.badlogic.gdx.graphics.Texture$TextureWrap: int getGLEnum()
com.badlogic.gdx.graphics.Texture$TextureWrap: void <clinit>()
com.badlogic.gdx.graphics.TextureData
com.badlogic.gdx.graphics.TextureData: com.badlogic.gdx.graphics.TextureData$TextureDataType getType()
com.badlogic.gdx.graphics.TextureData: boolean isPrepared()
com.badlogic.gdx.graphics.TextureData: void prepare()
com.badlogic.gdx.graphics.TextureData: com.badlogic.gdx.graphics.Pixmap consumePixmap()
com.badlogic.gdx.graphics.TextureData: boolean disposePixmap()
com.badlogic.gdx.graphics.TextureData: void consumeCustomData(int)
com.badlogic.gdx.graphics.TextureData: int getWidth()
com.badlogic.gdx.graphics.TextureData: int getHeight()
com.badlogic.gdx.graphics.TextureData: com.badlogic.gdx.graphics.Pixmap$Format getFormat()
com.badlogic.gdx.graphics.TextureData: boolean useMipMaps()
com.badlogic.gdx.graphics.TextureData: boolean isManaged()
com.badlogic.gdx.graphics.TextureData$TextureDataType
com.badlogic.gdx.graphics.TextureData$TextureDataType: com.badlogic.gdx.graphics.TextureData$TextureDataType Pixmap
com.badlogic.gdx.graphics.TextureData$TextureDataType: com.badlogic.gdx.graphics.TextureData$TextureDataType Custom
com.badlogic.gdx.graphics.TextureData$TextureDataType: com.badlogic.gdx.graphics.TextureData$TextureDataType[] $VALUES
com.badlogic.gdx.graphics.TextureData$TextureDataType: com.badlogic.gdx.graphics.TextureData$TextureDataType[] values()
com.badlogic.gdx.graphics.TextureData$TextureDataType: com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String)
com.badlogic.gdx.graphics.TextureData$TextureDataType: TextureData$TextureDataType(java.lang.String,int)
com.badlogic.gdx.graphics.TextureData$TextureDataType: void <clinit>()
com.badlogic.gdx.graphics.VertexAttribute
com.badlogic.gdx.graphics.VertexAttribute: int usage
com.badlogic.gdx.graphics.VertexAttribute: int numComponents
com.badlogic.gdx.graphics.VertexAttribute: int offset
com.badlogic.gdx.graphics.VertexAttribute: java.lang.String alias
com.badlogic.gdx.graphics.VertexAttribute: int unit
com.badlogic.gdx.graphics.VertexAttribute: int usageIndex
com.badlogic.gdx.graphics.VertexAttribute: VertexAttribute(int,int,java.lang.String)
com.badlogic.gdx.graphics.VertexAttribute: VertexAttribute(int,int,java.lang.String,int)
com.badlogic.gdx.graphics.VertexAttribute: com.badlogic.gdx.graphics.VertexAttribute Position()
com.badlogic.gdx.graphics.VertexAttribute: com.badlogic.gdx.graphics.VertexAttribute TexCoords(int)
com.badlogic.gdx.graphics.VertexAttribute: com.badlogic.gdx.graphics.VertexAttribute Normal()
com.badlogic.gdx.graphics.VertexAttribute: com.badlogic.gdx.graphics.VertexAttribute Color()
com.badlogic.gdx.graphics.VertexAttribute: com.badlogic.gdx.graphics.VertexAttribute ColorUnpacked()
com.badlogic.gdx.graphics.VertexAttribute: com.badlogic.gdx.graphics.VertexAttribute Tangent()
com.badlogic.gdx.graphics.VertexAttribute: com.badlogic.gdx.graphics.VertexAttribute Binormal()
com.badlogic.gdx.graphics.VertexAttribute: com.badlogic.gdx.graphics.VertexAttribute BoneWeight(int)
com.badlogic.gdx.graphics.VertexAttribute: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.VertexAttribute: boolean equals(com.badlogic.gdx.graphics.VertexAttribute)
com.badlogic.gdx.graphics.VertexAttribute: int getKey()
com.badlogic.gdx.graphics.VertexAttributes
com.badlogic.gdx.graphics.VertexAttributes: com.badlogic.gdx.graphics.VertexAttribute[] attributes
com.badlogic.gdx.graphics.VertexAttributes: int vertexSize
com.badlogic.gdx.graphics.VertexAttributes: long mask
com.badlogic.gdx.graphics.VertexAttributes: com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable iterable
com.badlogic.gdx.graphics.VertexAttributes: VertexAttributes(com.badlogic.gdx.graphics.VertexAttribute[])
com.badlogic.gdx.graphics.VertexAttributes: int getOffset(int)
com.badlogic.gdx.graphics.VertexAttributes: com.badlogic.gdx.graphics.VertexAttribute findByUsage(int)
com.badlogic.gdx.graphics.VertexAttributes: int calculateOffsets()
com.badlogic.gdx.graphics.VertexAttributes: int size()
com.badlogic.gdx.graphics.VertexAttributes: com.badlogic.gdx.graphics.VertexAttribute get(int)
com.badlogic.gdx.graphics.VertexAttributes: java.lang.String toString()
com.badlogic.gdx.graphics.VertexAttributes: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.VertexAttributes: long getMask()
com.badlogic.gdx.graphics.VertexAttributes: java.util.Iterator iterator()
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable: java.lang.Object[] array
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable: com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator iterator1
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable: com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator iterator2
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable: VertexAttributes$ReadonlyIterable(java.lang.Object[])
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable: java.util.Iterator iterator()
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: java.lang.Object[] array
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: int index
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: boolean valid
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: VertexAttributes$ReadonlyIterator(java.lang.Object[])
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: boolean hasNext()
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: java.lang.Object next()
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: void remove()
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: void reset()
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator: java.util.Iterator iterator()
com.badlogic.gdx.graphics.VertexAttributes$Usage
com.badlogic.gdx.graphics.VertexAttributes$Usage: int Position
com.badlogic.gdx.graphics.VertexAttributes$Usage: int Color
com.badlogic.gdx.graphics.VertexAttributes$Usage: int ColorPacked
com.badlogic.gdx.graphics.VertexAttributes$Usage: int Normal
com.badlogic.gdx.graphics.VertexAttributes$Usage: int TextureCoordinates
com.badlogic.gdx.graphics.VertexAttributes$Usage: int Generic
com.badlogic.gdx.graphics.VertexAttributes$Usage: int BoneWeight
com.badlogic.gdx.graphics.VertexAttributes$Usage: int Tangent
com.badlogic.gdx.graphics.VertexAttributes$Usage: int BiNormal
com.badlogic.gdx.graphics.VertexAttributes$Usage: VertexAttributes$Usage()
com.badlogic.gdx.graphics.g2d.Animation
com.badlogic.gdx.graphics.g2d.Animation: com.badlogic.gdx.graphics.g2d.TextureRegion[] keyFrames
com.badlogic.gdx.graphics.g2d.Animation: float frameDuration
com.badlogic.gdx.graphics.g2d.Animation: float animationDuration
com.badlogic.gdx.graphics.g2d.Animation: com.badlogic.gdx.graphics.g2d.Animation$PlayMode playMode
com.badlogic.gdx.graphics.g2d.Animation: Animation(float,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g2d.Animation: Animation(float,com.badlogic.gdx.utils.Array,com.badlogic.gdx.graphics.g2d.Animation$PlayMode)
com.badlogic.gdx.graphics.g2d.Animation: Animation(float,com.badlogic.gdx.graphics.g2d.TextureRegion[])
com.badlogic.gdx.graphics.g2d.Animation: com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float,boolean)
com.badlogic.gdx.graphics.g2d.Animation: com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float)
com.badlogic.gdx.graphics.g2d.Animation: int getKeyFrameIndex(float)
com.badlogic.gdx.graphics.g2d.Animation: com.badlogic.gdx.graphics.g2d.TextureRegion[] getKeyFrames()
com.badlogic.gdx.graphics.g2d.Animation: com.badlogic.gdx.graphics.g2d.Animation$PlayMode getPlayMode()
com.badlogic.gdx.graphics.g2d.Animation: void setPlayMode(com.badlogic.gdx.graphics.g2d.Animation$PlayMode)
com.badlogic.gdx.graphics.g2d.Animation: boolean isAnimationFinished(float)
com.badlogic.gdx.graphics.g2d.Animation: void setFrameDuration(float)
com.badlogic.gdx.graphics.g2d.Animation: float getFrameDuration()
com.badlogic.gdx.graphics.g2d.Animation: float getAnimationDuration()
com.badlogic.gdx.graphics.g2d.Animation$1
com.badlogic.gdx.graphics.g2d.Animation$1: int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$Animation$PlayMode
com.badlogic.gdx.graphics.g2d.Animation$1: void <clinit>()
com.badlogic.gdx.graphics.g2d.Animation$PlayMode
com.badlogic.gdx.graphics.g2d.Animation$PlayMode: com.badlogic.gdx.graphics.g2d.Animation$PlayMode NORMAL
com.badlogic.gdx.graphics.g2d.Animation$PlayMode: com.badlogic.gdx.graphics.g2d.Animation$PlayMode REVERSED
com.badlogic.gdx.graphics.g2d.Animation$PlayMode: com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP
com.badlogic.gdx.graphics.g2d.Animation$PlayMode: com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP_REVERSED
com.badlogic.gdx.graphics.g2d.Animation$PlayMode: com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP_PINGPONG
com.badlogic.gdx.graphics.g2d.Animation$PlayMode: com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP_RANDOM
com.badlogic.gdx.graphics.g2d.Animation$PlayMode: com.badlogic.gdx.graphics.g2d.Animation$PlayMode[] $VALUES
com.badlogic.gdx.graphics.g2d.Animation$PlayMode: com.badlogic.gdx.graphics.g2d.Animation$PlayMode[] values()
com.badlogic.gdx.graphics.g2d.Animation$PlayMode: com.badlogic.gdx.graphics.g2d.Animation$PlayMode valueOf(java.lang.String)
com.badlogic.gdx.graphics.g2d.Animation$PlayMode: Animation$PlayMode(java.lang.String,int)
com.badlogic.gdx.graphics.g2d.Animation$PlayMode: void <clinit>()
com.badlogic.gdx.graphics.g2d.Batch
com.badlogic.gdx.graphics.g2d.Batch: int X1
com.badlogic.gdx.graphics.g2d.Batch: int Y1
com.badlogic.gdx.graphics.g2d.Batch: int C1
com.badlogic.gdx.graphics.g2d.Batch: int U1
com.badlogic.gdx.graphics.g2d.Batch: int V1
com.badlogic.gdx.graphics.g2d.Batch: int X2
com.badlogic.gdx.graphics.g2d.Batch: int Y2
com.badlogic.gdx.graphics.g2d.Batch: int C2
com.badlogic.gdx.graphics.g2d.Batch: int U2
com.badlogic.gdx.graphics.g2d.Batch: int V2
com.badlogic.gdx.graphics.g2d.Batch: int X3
com.badlogic.gdx.graphics.g2d.Batch: int Y3
com.badlogic.gdx.graphics.g2d.Batch: int C3
com.badlogic.gdx.graphics.g2d.Batch: int U3
com.badlogic.gdx.graphics.g2d.Batch: int V3
com.badlogic.gdx.graphics.g2d.Batch: int X4
com.badlogic.gdx.graphics.g2d.Batch: int Y4
com.badlogic.gdx.graphics.g2d.Batch: int C4
com.badlogic.gdx.graphics.g2d.Batch: int U4
com.badlogic.gdx.graphics.g2d.Batch: int V4
com.badlogic.gdx.graphics.g2d.Batch: void begin()
com.badlogic.gdx.graphics.g2d.Batch: void end()
com.badlogic.gdx.graphics.g2d.Batch: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g2d.Batch: void setColor(float,float,float,float)
com.badlogic.gdx.graphics.g2d.Batch: void setColor(float)
com.badlogic.gdx.graphics.g2d.Batch: com.badlogic.gdx.graphics.Color getColor()
com.badlogic.gdx.graphics.g2d.Batch: void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
com.badlogic.gdx.graphics.g2d.Batch: void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
com.badlogic.gdx.graphics.g2d.Batch: void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Batch: void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g2d.Batch: void draw(com.badlogic.gdx.graphics.Texture,float,float)
com.badlogic.gdx.graphics.g2d.Batch: void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float)
com.badlogic.gdx.graphics.g2d.Batch: void draw(com.badlogic.gdx.graphics.Texture,float[],int,int)
com.badlogic.gdx.graphics.g2d.Batch: void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
com.badlogic.gdx.graphics.g2d.Batch: void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float)
com.badlogic.gdx.graphics.g2d.Batch: void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g2d.Batch: void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean)
com.badlogic.gdx.graphics.g2d.Batch: void flush()
com.badlogic.gdx.graphics.g2d.Batch: void disableBlending()
com.badlogic.gdx.graphics.g2d.Batch: void enableBlending()
com.badlogic.gdx.graphics.g2d.Batch: void setBlendFunction(int,int)
com.badlogic.gdx.graphics.g2d.Batch: int getBlendSrcFunc()
com.badlogic.gdx.graphics.g2d.Batch: int getBlendDstFunc()
com.badlogic.gdx.graphics.g2d.Batch: com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
com.badlogic.gdx.graphics.g2d.Batch: com.badlogic.gdx.math.Matrix4 getTransformMatrix()
com.badlogic.gdx.graphics.g2d.Batch: void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g2d.Batch: void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g2d.Batch: void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.Batch: boolean isBlendingEnabled()
com.badlogic.gdx.graphics.g2d.BitmapFont
com.badlogic.gdx.graphics.g2d.BitmapFont: int LOG2_PAGE_SIZE
com.badlogic.gdx.graphics.g2d.BitmapFont: int PAGE_SIZE
com.badlogic.gdx.graphics.g2d.BitmapFont: int PAGES
com.badlogic.gdx.graphics.g2d.BitmapFont: char[] xChars
com.badlogic.gdx.graphics.g2d.BitmapFont: char[] capChars
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.TextureRegion[] regions
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFontCache cache
com.badlogic.gdx.graphics.g2d.BitmapFont: boolean flipped
com.badlogic.gdx.graphics.g2d.BitmapFont: boolean integer
com.badlogic.gdx.graphics.g2d.BitmapFont: boolean ownsTexture
com.badlogic.gdx.graphics.g2d.BitmapFont: boolean markupEnabled
com.badlogic.gdx.graphics.g2d.BitmapFont: BitmapFont()
com.badlogic.gdx.graphics.g2d.BitmapFont: BitmapFont(boolean)
com.badlogic.gdx.graphics.g2d.BitmapFont: BitmapFont(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.graphics.g2d.BitmapFont: BitmapFont(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)
com.badlogic.gdx.graphics.g2d.BitmapFont: BitmapFont(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g2d.BitmapFont: BitmapFont(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.g2d.BitmapFont: BitmapFont(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.g2d.BitmapFont: BitmapFont(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean,boolean)
com.badlogic.gdx.graphics.g2d.BitmapFont: BitmapFont(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)
com.badlogic.gdx.graphics.g2d.BitmapFont: BitmapFont(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData,com.badlogic.gdx.graphics.g2d.TextureRegion[],boolean)
com.badlogic.gdx.graphics.g2d.BitmapFont: void load(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,int,int)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,float)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
com.badlogic.gdx.graphics.g2d.BitmapFont: void computeGlyphAdvancesAndPositions(java.lang.CharSequence,com.badlogic.gdx.utils.FloatArray,com.badlogic.gdx.utils.FloatArray)
com.badlogic.gdx.graphics.g2d.BitmapFont: int computeVisibleGlyphs(java.lang.CharSequence,int,int,float)
com.badlogic.gdx.graphics.g2d.BitmapFont: void setColor(float)
com.badlogic.gdx.graphics.g2d.BitmapFont: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g2d.BitmapFont: void setColor(float,float,float,float)
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.Color getColor()
com.badlogic.gdx.graphics.g2d.BitmapFont: void setScale(float,float)
com.badlogic.gdx.graphics.g2d.BitmapFont: void setScale(float)
com.badlogic.gdx.graphics.g2d.BitmapFont: void scale(float)
com.badlogic.gdx.graphics.g2d.BitmapFont: float getScaleX()
com.badlogic.gdx.graphics.g2d.BitmapFont: float getScaleY()
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.TextureRegion getRegion()
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.TextureRegion[] getRegions()
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(int)
com.badlogic.gdx.graphics.g2d.BitmapFont: float getLineHeight()
com.badlogic.gdx.graphics.g2d.BitmapFont: float getSpaceWidth()
com.badlogic.gdx.graphics.g2d.BitmapFont: float getXHeight()
com.badlogic.gdx.graphics.g2d.BitmapFont: float getCapHeight()
com.badlogic.gdx.graphics.g2d.BitmapFont: float getAscent()
com.badlogic.gdx.graphics.g2d.BitmapFont: float getDescent()
com.badlogic.gdx.graphics.g2d.BitmapFont: boolean isFlipped()
com.badlogic.gdx.graphics.g2d.BitmapFont: boolean isMarkupEnabled()
com.badlogic.gdx.graphics.g2d.BitmapFont: void setMarkupEnabled(boolean)
com.badlogic.gdx.graphics.g2d.BitmapFont: void dispose()
com.badlogic.gdx.graphics.g2d.BitmapFont: void setFixedWidthGlyphs(java.lang.CharSequence)
com.badlogic.gdx.graphics.g2d.BitmapFont: boolean containsCharacter(char)
com.badlogic.gdx.graphics.g2d.BitmapFont: void setUseIntegerPositions(boolean)
com.badlogic.gdx.graphics.g2d.BitmapFont: boolean usesIntegerPositions()
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFontCache getCache()
com.badlogic.gdx.graphics.g2d.BitmapFont: com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData()
com.badlogic.gdx.graphics.g2d.BitmapFont: boolean ownsTexture()
com.badlogic.gdx.graphics.g2d.BitmapFont: void setOwnsTexture(boolean)
com.badlogic.gdx.graphics.g2d.BitmapFont: int indexOf(java.lang.CharSequence,char,int)
com.badlogic.gdx.graphics.g2d.BitmapFont: boolean isWhitespace(char)
com.badlogic.gdx.graphics.g2d.BitmapFont: void <clinit>()
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: java.lang.String imagePath
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: java.lang.String[] imagePaths
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: com.badlogic.gdx.files.FileHandle fontFile
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: boolean flipped
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float lineHeight
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float capHeight
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float ascent
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float descent
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float down
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float scaleX
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float scaleY
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph[][] glyphs
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float spaceWidth
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: float xHeight
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: BitmapFont$BitmapFontData()
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: BitmapFont$BitmapFontData(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: void setGlyph(int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getFirstGlyph()
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getGlyph(char)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: java.lang.String getImagePath()
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: java.lang.String getImagePath(int)
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: java.lang.String[] getImagePaths()
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData: com.badlogic.gdx.files.FileHandle getFontFile()
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int id
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int srcX
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int srcY
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int width
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int height
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: float u
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: float v
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: float u2
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: float v2
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int xoffset
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int yoffset
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int xadvance
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: byte[][] kerning
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int page
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: BitmapFont$Glyph()
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: int getKerning(char)
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph: void setKerning(int,int)
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment: com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment LEFT
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment: com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment CENTER
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment: com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment RIGHT
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment: com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] $VALUES
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment: com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] values()
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment: com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment valueOf(java.lang.String)
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment: BitmapFont$HAlignment(java.lang.String,int)
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment: void <clinit>()
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds: float width
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds: float height
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds: BitmapFont$TextBounds()
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds: BitmapFont$TextBounds(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds: void set(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds)
com.badlogic.gdx.graphics.g2d.BitmapFontCache
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont font
com.badlogic.gdx.graphics.g2d.BitmapFontCache: float[][] vertexData
com.badlogic.gdx.graphics.g2d.BitmapFontCache: int[] idx
com.badlogic.gdx.graphics.g2d.BitmapFontCache: int[] tmpGlyphCount
com.badlogic.gdx.graphics.g2d.BitmapFontCache: float x
com.badlogic.gdx.graphics.g2d.BitmapFontCache: float y
com.badlogic.gdx.graphics.g2d.BitmapFontCache: float color
com.badlogic.gdx.graphics.g2d.BitmapFontCache: float previousColor
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.Color tempColor
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.Color hexColor
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.utils.StringBuilder colorBuffer
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds textBounds
com.badlogic.gdx.graphics.g2d.BitmapFontCache: boolean integer
com.badlogic.gdx.graphics.g2d.BitmapFontCache: int glyphCount
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.utils.IntArray[] glyphIndices
com.badlogic.gdx.graphics.g2d.BitmapFontCache: BitmapFontCache(com.badlogic.gdx.graphics.g2d.BitmapFont)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: BitmapFontCache(com.badlogic.gdx.graphics.g2d.BitmapFont,boolean)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void setPosition(float,float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void translate(float,float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void setColors(float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void setColors(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void setColors(float,float,float,float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void setColors(com.badlogic.gdx.graphics.Color,int,int)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void setColor(float,float,float,float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void setColor(float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.Color getColor()
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void draw(com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void draw(com.badlogic.gdx.graphics.g2d.Batch,int,int)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void clear()
com.badlogic.gdx.graphics.g2d.BitmapFontCache: int countGlyphs(java.lang.CharSequence,int,int)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void requireSequence(java.lang.CharSequence,int,int)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void require(int,int)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: int parseAndSetColor(java.lang.CharSequence,int,int)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: float addToCache(java.lang.CharSequence,float,float,int,int)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void addGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,float,float,float,float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float,int,int)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float,int,int)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds()
com.badlogic.gdx.graphics.g2d.BitmapFontCache: float getX()
com.badlogic.gdx.graphics.g2d.BitmapFontCache: float getY()
com.badlogic.gdx.graphics.g2d.BitmapFontCache: com.badlogic.gdx.graphics.g2d.BitmapFont getFont()
com.badlogic.gdx.graphics.g2d.BitmapFontCache: void setUseIntegerPositions(boolean)
com.badlogic.gdx.graphics.g2d.BitmapFontCache: boolean usesIntegerPositions()
com.badlogic.gdx.graphics.g2d.BitmapFontCache: float[] getVertices()
com.badlogic.gdx.graphics.g2d.BitmapFontCache: float[] getVertices(int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int GDX2D_FORMAT_ALPHA
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int GDX2D_FORMAT_LUMINANCE_ALPHA
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int GDX2D_FORMAT_RGB888
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int GDX2D_FORMAT_RGBA8888
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int GDX2D_FORMAT_RGB565
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int GDX2D_FORMAT_RGBA4444
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int GDX2D_SCALE_NEAREST
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int GDX2D_SCALE_LINEAR
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int GDX2D_BLEND_NONE
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int GDX2D_BLEND_SRC_OVER
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: long basePtr
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int width
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int height
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int format
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: java.nio.ByteBuffer pixelPtr
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: long[] nativeData
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: Gdx2DPixmap(byte[],int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: Gdx2DPixmap(java.io.InputStream,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: Gdx2DPixmap(int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: Gdx2DPixmap(java.nio.ByteBuffer,long[])
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void convert(int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void dispose()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void clear(int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void setPixel(int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int getPixel(int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void drawLine(int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void drawRect(int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void drawCircle(int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void fillRect(int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void fillCircle(int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void fillTriangle(int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: java.nio.ByteBuffer getPixels()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int getHeight()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int getWidth()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int getFormat()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int getGLInternalFormat()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int getGLFormat()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int getGLType()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: java.lang.String getFormatString()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: java.nio.ByteBuffer load(long[],byte[],int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: java.nio.ByteBuffer newPixmap(long[],int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void free(long)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void clear(long,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void setPixel(long,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: int getPixel(long,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void drawLine(long,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void drawRect(long,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void drawCircle(long,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void fillRect(long,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void fillCircle(long,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void fillTriangle(long,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void drawPixmap(long,long,int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void setBlend(int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void setScale(int)
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: java.lang.String getFailureReason()
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap: void <clinit>()
com.badlogic.gdx.graphics.g2d.NinePatch
com.badlogic.gdx.graphics.g2d.NinePatch: int TOP_LEFT
com.badlogic.gdx.graphics.g2d.NinePatch: int TOP_CENTER
com.badlogic.gdx.graphics.g2d.NinePatch: int TOP_RIGHT
com.badlogic.gdx.graphics.g2d.NinePatch: int MIDDLE_LEFT
com.badlogic.gdx.graphics.g2d.NinePatch: int MIDDLE_CENTER
com.badlogic.gdx.graphics.g2d.NinePatch: int MIDDLE_RIGHT
com.badlogic.gdx.graphics.g2d.NinePatch: int BOTTOM_LEFT
com.badlogic.gdx.graphics.g2d.NinePatch: int BOTTOM_CENTER
com.badlogic.gdx.graphics.g2d.NinePatch: int BOTTOM_RIGHT
com.badlogic.gdx.graphics.g2d.NinePatch: com.badlogic.gdx.graphics.Color tmpDrawColor
com.badlogic.gdx.graphics.g2d.NinePatch: com.badlogic.gdx.graphics.Texture texture
com.badlogic.gdx.graphics.g2d.NinePatch: int bottomLeft
com.badlogic.gdx.graphics.g2d.NinePatch: int bottomCenter
com.badlogic.gdx.graphics.g2d.NinePatch: int bottomRight
com.badlogic.gdx.graphics.g2d.NinePatch: int middleLeft
com.badlogic.gdx.graphics.g2d.NinePatch: int middleCenter
com.badlogic.gdx.graphics.g2d.NinePatch: int middleRight
com.badlogic.gdx.graphics.g2d.NinePatch: int topLeft
com.badlogic.gdx.graphics.g2d.NinePatch: int topCenter
com.badlogic.gdx.graphics.g2d.NinePatch: int topRight
com.badlogic.gdx.graphics.g2d.NinePatch: float leftWidth
com.badlogic.gdx.graphics.g2d.NinePatch: float rightWidth
com.badlogic.gdx.graphics.g2d.NinePatch: float middleWidth
com.badlogic.gdx.graphics.g2d.NinePatch: float middleHeight
com.badlogic.gdx.graphics.g2d.NinePatch: float topHeight
com.badlogic.gdx.graphics.g2d.NinePatch: float bottomHeight
com.badlogic.gdx.graphics.g2d.NinePatch: float[] vertices
com.badlogic.gdx.graphics.g2d.NinePatch: int idx
com.badlogic.gdx.graphics.g2d.NinePatch: com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.graphics.g2d.NinePatch: int padLeft
com.badlogic.gdx.graphics.g2d.NinePatch: int padRight
com.badlogic.gdx.graphics.g2d.NinePatch: int padTop
com.badlogic.gdx.graphics.g2d.NinePatch: int padBottom
com.badlogic.gdx.graphics.g2d.NinePatch: NinePatch(com.badlogic.gdx.graphics.Texture,int,int,int,int)
com.badlogic.gdx.graphics.g2d.NinePatch: NinePatch(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
com.badlogic.gdx.graphics.g2d.NinePatch: NinePatch(com.badlogic.gdx.graphics.Texture,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g2d.NinePatch: NinePatch(com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.graphics.g2d.NinePatch: NinePatch(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g2d.NinePatch: NinePatch(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.graphics.g2d.NinePatch: NinePatch(com.badlogic.gdx.graphics.g2d.TextureRegion[])
com.badlogic.gdx.graphics.g2d.NinePatch: NinePatch(com.badlogic.gdx.graphics.g2d.NinePatch)
com.badlogic.gdx.graphics.g2d.NinePatch: NinePatch(com.badlogic.gdx.graphics.g2d.NinePatch,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g2d.NinePatch: void load(com.badlogic.gdx.graphics.g2d.TextureRegion[])
com.badlogic.gdx.graphics.g2d.NinePatch: int add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,boolean,boolean)
com.badlogic.gdx.graphics.g2d.NinePatch: void set(int,float,float,float,float,float)
com.badlogic.gdx.graphics.g2d.NinePatch: void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float)
com.badlogic.gdx.graphics.g2d.NinePatch: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g2d.NinePatch: com.badlogic.gdx.graphics.Color getColor()
com.badlogic.gdx.graphics.g2d.NinePatch: float getLeftWidth()
com.badlogic.gdx.graphics.g2d.NinePatch: void setLeftWidth(float)
com.badlogic.gdx.graphics.g2d.NinePatch: float getRightWidth()
com.badlogic.gdx.graphics.g2d.NinePatch: void setRightWidth(float)
com.badlogic.gdx.graphics.g2d.NinePatch: float getTopHeight()
com.badlogic.gdx.graphics.g2d.NinePatch: void setTopHeight(float)
com.badlogic.gdx.graphics.g2d.NinePatch: float getBottomHeight()
com.badlogic.gdx.graphics.g2d.NinePatch: void setBottomHeight(float)
com.badlogic.gdx.graphics.g2d.NinePatch: float getMiddleWidth()
com.badlogic.gdx.graphics.g2d.NinePatch: void setMiddleWidth(float)
com.badlogic.gdx.graphics.g2d.NinePatch: float getMiddleHeight()
com.badlogic.gdx.graphics.g2d.NinePatch: void setMiddleHeight(float)
com.badlogic.gdx.graphics.g2d.NinePatch: float getTotalWidth()
com.badlogic.gdx.graphics.g2d.NinePatch: float getTotalHeight()
com.badlogic.gdx.graphics.g2d.NinePatch: void setPadding(int,int,int,int)
com.badlogic.gdx.graphics.g2d.NinePatch: float getPadLeft()
com.badlogic.gdx.graphics.g2d.NinePatch: void setPadLeft(int)
com.badlogic.gdx.graphics.g2d.NinePatch: float getPadRight()
com.badlogic.gdx.graphics.g2d.NinePatch: void setPadRight(int)
com.badlogic.gdx.graphics.g2d.NinePatch: float getPadTop()
com.badlogic.gdx.graphics.g2d.NinePatch: void setPadTop(int)
com.badlogic.gdx.graphics.g2d.NinePatch: float getPadBottom()
com.badlogic.gdx.graphics.g2d.NinePatch: void setPadBottom(int)
com.badlogic.gdx.graphics.g2d.NinePatch: void scale(float,float)
com.badlogic.gdx.graphics.g2d.NinePatch: com.badlogic.gdx.graphics.Texture getTexture()
com.badlogic.gdx.graphics.g2d.NinePatch: void <clinit>()
com.badlogic.gdx.graphics.g2d.ParticleEffect
com.badlogic.gdx.graphics.g2d.ParticleEffect: com.badlogic.gdx.utils.Array emitters
com.badlogic.gdx.graphics.g2d.ParticleEffect: com.badlogic.gdx.math.collision.BoundingBox bounds
com.badlogic.gdx.graphics.g2d.ParticleEffect: boolean ownsTexture
com.badlogic.gdx.graphics.g2d.ParticleEffect: ParticleEffect()
com.badlogic.gdx.graphics.g2d.ParticleEffect: ParticleEffect(com.badlogic.gdx.graphics.g2d.ParticleEffect)
com.badlogic.gdx.graphics.g2d.ParticleEffect: void start()
com.badlogic.gdx.graphics.g2d.ParticleEffect: void reset()
com.badlogic.gdx.graphics.g2d.ParticleEffect: void update(float)
com.badlogic.gdx.graphics.g2d.ParticleEffect: void draw(com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.graphics.g2d.ParticleEffect: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.graphics.g2d.ParticleEffect: void allowCompletion()
com.badlogic.gdx.graphics.g2d.ParticleEffect: boolean isComplete()
com.badlogic.gdx.graphics.g2d.ParticleEffect: void setDuration(int)
com.badlogic.gdx.graphics.g2d.ParticleEffect: void setPosition(float,float)
com.badlogic.gdx.graphics.g2d.ParticleEffect: void setFlip(boolean,boolean)
com.badlogic.gdx.graphics.g2d.ParticleEffect: void flipY()
com.badlogic.gdx.graphics.g2d.ParticleEffect: com.badlogic.gdx.utils.Array getEmitters()
com.badlogic.gdx.graphics.g2d.ParticleEffect: com.badlogic.gdx.graphics.g2d.ParticleEmitter findEmitter(java.lang.String)
com.badlogic.gdx.graphics.g2d.ParticleEffect: void save(java.io.Writer)
com.badlogic.gdx.graphics.g2d.ParticleEffect: void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g2d.ParticleEffect: void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)
com.badlogic.gdx.graphics.g2d.ParticleEffect: void loadEmitters(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g2d.ParticleEffect: void loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)
com.badlogic.gdx.graphics.g2d.ParticleEffect: void loadEmitterImages(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g2d.ParticleEffect: com.badlogic.gdx.graphics.Texture loadTexture(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g2d.ParticleEffect: void dispose()
com.badlogic.gdx.graphics.g2d.ParticleEffect: com.badlogic.gdx.math.collision.BoundingBox getBoundingBox()
com.badlogic.gdx.graphics.g2d.ParticleEffectPool
com.badlogic.gdx.graphics.g2d.ParticleEffectPool: com.badlogic.gdx.graphics.g2d.ParticleEffect effect
com.badlogic.gdx.graphics.g2d.ParticleEffectPool: ParticleEffectPool(com.badlogic.gdx.graphics.g2d.ParticleEffect,int,int)
com.badlogic.gdx.graphics.g2d.ParticleEffectPool: com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect newObject()
com.badlogic.gdx.graphics.g2d.ParticleEffectPool: com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect obtain()
com.badlogic.gdx.graphics.g2d.ParticleEffectPool: java.lang.Object obtain()
com.badlogic.gdx.graphics.g2d.ParticleEffectPool: java.lang.Object newObject()
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect: com.badlogic.gdx.graphics.g2d.ParticleEffectPool this$0
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect: ParticleEffectPool$PooledEffect(com.badlogic.gdx.graphics.g2d.ParticleEffectPool,com.badlogic.gdx.graphics.g2d.ParticleEffect)
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect: void reset()
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect: void free()
com.badlogic.gdx.graphics.g2d.ParticleEmitter
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int UPDATE_SCALE
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int UPDATE_ANGLE
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int UPDATE_ROTATION
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int UPDATE_VELOCITY
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int UPDATE_WIND
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int UPDATE_GRAVITY
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int UPDATE_TINT
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue delayValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeOffsetValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue durationValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue emissionValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue scaleValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue rotationValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue velocityValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue angleValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue windValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue gravityValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue transparencyValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue tintValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue xOffsetValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue yOffsetValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnWidthValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnHeightValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue spawnShapeValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter: float accumulator
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.Sprite sprite
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle[] particles
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int minParticleCount
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int maxParticleCount
com.badlogic.gdx.graphics.g2d.ParticleEmitter: float x
com.badlogic.gdx.graphics.g2d.ParticleEmitter: float y
com.badlogic.gdx.graphics.g2d.ParticleEmitter: java.lang.String name
com.badlogic.gdx.graphics.g2d.ParticleEmitter: java.lang.String imagePath
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int activeCount
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean[] active
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean firstUpdate
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean flipX
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean flipY
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int updateFlags
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean allowCompletion
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.math.collision.BoundingBox bounds
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int emission
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int emissionDiff
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int emissionDelta
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int lifeOffset
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int lifeOffsetDiff
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int life
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int lifeDiff
com.badlogic.gdx.graphics.g2d.ParticleEmitter: float spawnWidth
com.badlogic.gdx.graphics.g2d.ParticleEmitter: float spawnWidthDiff
com.badlogic.gdx.graphics.g2d.ParticleEmitter: float spawnHeight
com.badlogic.gdx.graphics.g2d.ParticleEmitter: float spawnHeightDiff
com.badlogic.gdx.graphics.g2d.ParticleEmitter: float duration
com.badlogic.gdx.graphics.g2d.ParticleEmitter: float durationTimer
com.badlogic.gdx.graphics.g2d.ParticleEmitter: float delay
com.badlogic.gdx.graphics.g2d.ParticleEmitter: float delayTimer
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean attached
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean continuous
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean aligned
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean behind
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean additive
com.badlogic.gdx.graphics.g2d.ParticleEmitter: ParticleEmitter()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: ParticleEmitter(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: ParticleEmitter(com.badlogic.gdx.graphics.g2d.ParticleEmitter)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void initialize()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void setMaxParticleCount(int)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void addParticle()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void addParticles(int)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void update(float)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void draw(com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void start()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void reset()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void restart()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void activateParticle(int)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean updateParticle(com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle,float,int)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void setPosition(float,float)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void setSprite(com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void allowCompletion()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.Sprite getSprite()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: java.lang.String getName()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void setName(java.lang.String)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLife()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getScale()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getRotation()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue getTint()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getVelocity()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getWind()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getGravity()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getAngle()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getEmission()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getTransparency()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDuration()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDelay()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLifeOffset()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getXOffsetValue()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getYOffsetValue()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnWidth()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnHeight()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue getSpawnShape()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean isAttached()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void setAttached(boolean)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean isContinuous()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void setContinuous(boolean)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean isAligned()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void setAligned(boolean)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean isAdditive()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void setAdditive(boolean)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean isBehind()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void setBehind(boolean)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int getMinParticleCount()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void setMinParticleCount(int)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int getMaxParticleCount()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean isComplete()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: float getPercentComplete()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: float getX()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: float getY()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int getActiveCount()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: java.lang.String getImagePath()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void setImagePath(java.lang.String)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void setFlip(boolean,boolean)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void flipY()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: com.badlogic.gdx.math.collision.BoundingBox getBoundingBox()
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void save(java.io.Writer)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: java.lang.String readString(java.io.BufferedReader,java.lang.String)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: boolean readBoolean(java.io.BufferedReader,java.lang.String)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: int readInt(java.io.BufferedReader,java.lang.String)
com.badlogic.gdx.graphics.g2d.ParticleEmitter: float readFloat(java.io.BufferedReader,java.lang.String)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1: int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1: int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1: void <clinit>()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue: float[] temp
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue: float[] colors
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue: float[] timeline
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue: ParticleEmitter$GradientColorValue()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue: float[] getTimeline()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue: void setTimeline(float[])
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue: float[] getColors()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue: void setColors(float[])
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue: float[] getColor(float)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue: void save(java.io.Writer)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue: void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue: void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue: void <clinit>()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue: float value
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue: ParticleEmitter$NumericValue()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue: float getValue()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue: void setValue(float)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue: void save(java.io.Writer)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue: void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue: void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: int life
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: int currentLife
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float scale
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float scaleDiff
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float rotation
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float rotationDiff
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float velocity
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float velocityDiff
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float angle
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float angleDiff
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float angleCos
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float angleSin
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float transparency
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float transparencyDiff
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float wind
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float windDiff
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float gravity
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float gravityDiff
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: float[] tint
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle: ParticleEmitter$Particle(com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue: boolean active
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue: boolean alwaysActive
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue: ParticleEmitter$ParticleValue()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue: void setAlwaysActive(boolean)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue: boolean isAlwaysActive()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue: boolean isActive()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue: void setActive(boolean)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue: void save(java.io.Writer)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue: void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue: void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue: float lowMin
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue: float lowMax
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue: ParticleEmitter$RangedNumericValue()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue: float newLowValue()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue: void setLow(float)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue: void setLow(float,float)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue: float getLowMin()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue: void setLowMin(float)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue: float getLowMax()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue: void setLowMax(float)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue: void save(java.io.Writer)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue: void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue: void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: float[] scaling
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: float[] timeline
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: float highMin
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: float highMax
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: boolean relative
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: ParticleEmitter$ScaledNumericValue()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: float newHighValue()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: void setHigh(float)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: void setHigh(float,float)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: float getHighMin()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: void setHighMin(float)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: float getHighMax()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: void setHighMax(float)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: float[] getScaling()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: void setScaling(float[])
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: float[] getTimeline()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: void setTimeline(float[])
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: boolean isRelative()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: void setRelative(boolean)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: float getScale(float)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: void save(java.io.Writer)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue: void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide both
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide top
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide bottom
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] $VALUES
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] values()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide valueOf(java.lang.String)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide: ParticleEmitter$SpawnEllipseSide(java.lang.String,int)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide: void <clinit>()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape point
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape line
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape square
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape ellipse
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] $VALUES
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] values()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape valueOf(java.lang.String)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape: ParticleEmitter$SpawnShape(java.lang.String,int)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape: void <clinit>()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape shape
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue: boolean edges
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide side
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue: ParticleEmitter$SpawnShapeValue()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape getShape()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue: void setShape(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue: boolean isEdges()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue: void setEdges(boolean)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue: com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide getSide()
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue: void setSide(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue: void save(java.io.Writer)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue: void load(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue: void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue)
com.badlogic.gdx.graphics.g2d.PixmapPacker
com.badlogic.gdx.graphics.g2d.PixmapPacker: int pageWidth
com.badlogic.gdx.graphics.g2d.PixmapPacker: int pageHeight
com.badlogic.gdx.graphics.g2d.PixmapPacker: com.badlogic.gdx.graphics.Pixmap$Format pageFormat
com.badlogic.gdx.graphics.g2d.PixmapPacker: int padding
com.badlogic.gdx.graphics.g2d.PixmapPacker: boolean duplicateBorder
com.badlogic.gdx.graphics.g2d.PixmapPacker: com.badlogic.gdx.utils.Array pages
com.badlogic.gdx.graphics.g2d.PixmapPacker: com.badlogic.gdx.graphics.g2d.PixmapPacker$Page currPage
com.badlogic.gdx.graphics.g2d.PixmapPacker: boolean disposed
com.badlogic.gdx.graphics.g2d.PixmapPacker: PixmapPacker(int,int,com.badlogic.gdx.graphics.Pixmap$Format,int,boolean)
com.badlogic.gdx.graphics.g2d.PixmapPacker: com.badlogic.gdx.math.Rectangle pack(java.lang.String,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.g2d.PixmapPacker: void newPage()
com.badlogic.gdx.graphics.g2d.PixmapPacker: com.badlogic.gdx.graphics.g2d.PixmapPacker$Node insert(com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.graphics.g2d.PixmapPacker: com.badlogic.gdx.utils.Array getPages()
com.badlogic.gdx.graphics.g2d.PixmapPacker: com.badlogic.gdx.math.Rectangle getRect(java.lang.String)
com.badlogic.gdx.graphics.g2d.PixmapPacker: com.badlogic.gdx.graphics.g2d.PixmapPacker$Page getPage(java.lang.String)
com.badlogic.gdx.graphics.g2d.PixmapPacker: int getPageIndex(java.lang.String)
com.badlogic.gdx.graphics.g2d.PixmapPacker: void dispose()
com.badlogic.gdx.graphics.g2d.PixmapPacker: com.badlogic.gdx.graphics.g2d.TextureAtlas generateTextureAtlas(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean)
com.badlogic.gdx.graphics.g2d.PixmapPacker: void updateTextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean)
com.badlogic.gdx.graphics.g2d.PixmapPacker: int getPageWidth()
com.badlogic.gdx.graphics.g2d.PixmapPacker: int getPageHeight()
com.badlogic.gdx.graphics.g2d.PixmapPacker: int getPadding()
com.badlogic.gdx.graphics.g2d.PixmapPacker: boolean duplicateBorder()
com.badlogic.gdx.graphics.g2d.PixmapPacker$1
com.badlogic.gdx.graphics.g2d.PixmapPacker$1: com.badlogic.gdx.graphics.g2d.PixmapPacker this$0
com.badlogic.gdx.graphics.g2d.PixmapPacker$1: PixmapPacker$1(com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.g2d.PixmapPacker$1: void dispose()
com.badlogic.gdx.graphics.g2d.PixmapPacker$2
com.badlogic.gdx.graphics.g2d.PixmapPacker$2: com.badlogic.gdx.graphics.g2d.PixmapPacker this$0
com.badlogic.gdx.graphics.g2d.PixmapPacker$2: PixmapPacker$2(com.badlogic.gdx.graphics.g2d.PixmapPacker,com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.g2d.PixmapPacker$2: void dispose()
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node: com.badlogic.gdx.graphics.g2d.PixmapPacker$Node leftChild
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node: com.badlogic.gdx.graphics.g2d.PixmapPacker$Node rightChild
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node: com.badlogic.gdx.math.Rectangle rect
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node: java.lang.String leaveName
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node: PixmapPacker$Node(int,int,int,int,com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,java.lang.String)
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node: PixmapPacker$Node()
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page: com.badlogic.gdx.graphics.g2d.PixmapPacker$Node root
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page: com.badlogic.gdx.utils.OrderedMap rects
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page: com.badlogic.gdx.graphics.Pixmap image
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page: com.badlogic.gdx.graphics.Texture texture
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page: com.badlogic.gdx.utils.Array addedRects
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page: com.badlogic.gdx.graphics.g2d.PixmapPacker this$0
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page: PixmapPacker$Page(com.badlogic.gdx.graphics.g2d.PixmapPacker)
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page: com.badlogic.gdx.graphics.Pixmap getPixmap()
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page: com.badlogic.gdx.utils.OrderedMap getRects()
com.badlogic.gdx.graphics.g2d.PolygonRegion
com.badlogic.gdx.graphics.g2d.PolygonRegion: float[] textureCoords
com.badlogic.gdx.graphics.g2d.PolygonRegion: float[] vertices
com.badlogic.gdx.graphics.g2d.PolygonRegion: short[] triangles
com.badlogic.gdx.graphics.g2d.PolygonRegion: com.badlogic.gdx.graphics.g2d.TextureRegion region
com.badlogic.gdx.graphics.g2d.PolygonRegion: PolygonRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,float[],short[])
com.badlogic.gdx.graphics.g2d.PolygonRegion: float[] getVertices()
com.badlogic.gdx.graphics.g2d.PolygonRegion: short[] getTriangles()
com.badlogic.gdx.graphics.g2d.PolygonRegion: float[] getTextureCoords()
com.badlogic.gdx.graphics.g2d.PolygonRegion: com.badlogic.gdx.graphics.g2d.TextureRegion getRegion()
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader: com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters defaultParameters
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader: com.badlogic.gdx.math.EarClippingTriangulator triangulator
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader: PolygonRegionLoader()
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader: PolygonRegionLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader: com.badlogic.gdx.graphics.g2d.PolygonRegion load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters)
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader: com.badlogic.gdx.graphics.g2d.PolygonRegion load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader: java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters: java.lang.String texturePrefix
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters: int readerBuffer
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters: java.lang.String[] textureExtensions
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters: PolygonRegionLoader$PolygonRegionParameters()
com.badlogic.gdx.graphics.g2d.PolygonSprite
com.badlogic.gdx.graphics.g2d.PolygonSprite: com.badlogic.gdx.graphics.g2d.PolygonRegion region
com.badlogic.gdx.graphics.g2d.PolygonSprite: float x
com.badlogic.gdx.graphics.g2d.PolygonSprite: float y
com.badlogic.gdx.graphics.g2d.PolygonSprite: float width
com.badlogic.gdx.graphics.g2d.PolygonSprite: float height
com.badlogic.gdx.graphics.g2d.PolygonSprite: float scaleX
com.badlogic.gdx.graphics.g2d.PolygonSprite: float scaleY
com.badlogic.gdx.graphics.g2d.PolygonSprite: float rotation
com.badlogic.gdx.graphics.g2d.PolygonSprite: float originX
com.badlogic.gdx.graphics.g2d.PolygonSprite: float originY
com.badlogic.gdx.graphics.g2d.PolygonSprite: float[] vertices
com.badlogic.gdx.graphics.g2d.PolygonSprite: boolean dirty
com.badlogic.gdx.graphics.g2d.PolygonSprite: com.badlogic.gdx.math.Rectangle bounds
com.badlogic.gdx.graphics.g2d.PolygonSprite: com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.graphics.g2d.PolygonSprite: PolygonSprite(com.badlogic.gdx.graphics.g2d.PolygonRegion)
com.badlogic.gdx.graphics.g2d.PolygonSprite: PolygonSprite(com.badlogic.gdx.graphics.g2d.PolygonSprite)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void set(com.badlogic.gdx.graphics.g2d.PolygonSprite)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void setBounds(float,float,float,float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void setSize(float,float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void setPosition(float,float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void setX(float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void setY(float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void translateX(float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void translateY(float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void translate(float,float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void setColor(float,float,float,float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void setOrigin(float,float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void setRotation(float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void rotate(float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void setScale(float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void setScale(float,float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void scale(float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: float[] getVertices()
com.badlogic.gdx.graphics.g2d.PolygonSprite: com.badlogic.gdx.math.Rectangle getBoundingRectangle()
com.badlogic.gdx.graphics.g2d.PolygonSprite: void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch)
com.badlogic.gdx.graphics.g2d.PolygonSprite: void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch,float)
com.badlogic.gdx.graphics.g2d.PolygonSprite: float getX()
com.badlogic.gdx.graphics.g2d.PolygonSprite: float getY()
com.badlogic.gdx.graphics.g2d.PolygonSprite: float getWidth()
com.badlogic.gdx.graphics.g2d.PolygonSprite: float getHeight()
com.badlogic.gdx.graphics.g2d.PolygonSprite: float getOriginX()
com.badlogic.gdx.graphics.g2d.PolygonSprite: float getOriginY()
com.badlogic.gdx.graphics.g2d.PolygonSprite: float getRotation()
com.badlogic.gdx.graphics.g2d.PolygonSprite: float getScaleX()
com.badlogic.gdx.graphics.g2d.PolygonSprite: float getScaleY()
com.badlogic.gdx.graphics.g2d.PolygonSprite: com.badlogic.gdx.graphics.Color getColor()
com.badlogic.gdx.graphics.g2d.PolygonSprite: void setRegion(com.badlogic.gdx.graphics.g2d.PolygonRegion)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: com.badlogic.gdx.graphics.Mesh mesh
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: float[] vertices
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: short[] triangles
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: int vertexIndex
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: int triangleIndex
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: com.badlogic.gdx.graphics.Texture lastTexture
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: float invTexWidth
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: float invTexHeight
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: boolean drawing
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: com.badlogic.gdx.math.Matrix4 transformMatrix
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: com.badlogic.gdx.math.Matrix4 projectionMatrix
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: com.badlogic.gdx.math.Matrix4 combinedMatrix
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: boolean blendingDisabled
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: int blendSrcFunc
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: int blendDstFunc
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: com.badlogic.gdx.graphics.glutils.ShaderProgram shader
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: com.badlogic.gdx.graphics.glutils.ShaderProgram customShader
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: boolean ownsShader
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: float color
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: com.badlogic.gdx.graphics.Color tempColor
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: int renderCalls
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: int totalRenderCalls
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: int maxTrianglesInBatch
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: PolygonSpriteBatch()
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: PolygonSpriteBatch(int)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: PolygonSpriteBatch(int,com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void begin()
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void end()
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void setColor(float,float,float,float)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void setColor(float)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: com.badlogic.gdx.graphics.Color getColor()
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float[],int,int,short[],int,int)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float,float)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float[],int,int)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void flush()
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void disableBlending()
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void enableBlending()
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void setBlendFunction(int,int)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: int getBlendSrcFunc()
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: int getBlendDstFunc()
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void dispose()
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: com.badlogic.gdx.math.Matrix4 getTransformMatrix()
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void setupMatrices()
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void switchTexture(com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch: boolean isBlendingEnabled()
com.badlogic.gdx.graphics.g2d.Sprite
com.badlogic.gdx.graphics.g2d.Sprite: int VERTEX_SIZE
com.badlogic.gdx.graphics.g2d.Sprite: int SPRITE_SIZE
com.badlogic.gdx.graphics.g2d.Sprite: float[] vertices
com.badlogic.gdx.graphics.g2d.Sprite: com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.graphics.g2d.Sprite: float x
com.badlogic.gdx.graphics.g2d.Sprite: float y
com.badlogic.gdx.graphics.g2d.Sprite: float width
com.badlogic.gdx.graphics.g2d.Sprite: float height
com.badlogic.gdx.graphics.g2d.Sprite: float originX
com.badlogic.gdx.graphics.g2d.Sprite: float originY
com.badlogic.gdx.graphics.g2d.Sprite: float rotation
com.badlogic.gdx.graphics.g2d.Sprite: float scaleX
com.badlogic.gdx.graphics.g2d.Sprite: float scaleY
com.badlogic.gdx.graphics.g2d.Sprite: boolean dirty
com.badlogic.gdx.graphics.g2d.Sprite: com.badlogic.gdx.math.Rectangle bounds
com.badlogic.gdx.graphics.g2d.Sprite: Sprite()
com.badlogic.gdx.graphics.g2d.Sprite: Sprite(com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.graphics.g2d.Sprite: Sprite(com.badlogic.gdx.graphics.Texture,int,int)
com.badlogic.gdx.graphics.g2d.Sprite: Sprite(com.badlogic.gdx.graphics.Texture,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Sprite: Sprite(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.graphics.g2d.Sprite: Sprite(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
com.badlogic.gdx.graphics.g2d.Sprite: Sprite(com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.graphics.g2d.Sprite: void set(com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.graphics.g2d.Sprite: void setBounds(float,float,float,float)
com.badlogic.gdx.graphics.g2d.Sprite: void setSize(float,float)
com.badlogic.gdx.graphics.g2d.Sprite: void setPosition(float,float)
com.badlogic.gdx.graphics.g2d.Sprite: void setX(float)
com.badlogic.gdx.graphics.g2d.Sprite: void setY(float)
com.badlogic.gdx.graphics.g2d.Sprite: void setCenterX(float)
com.badlogic.gdx.graphics.g2d.Sprite: void setCenterY(float)
com.badlogic.gdx.graphics.g2d.Sprite: void setCenter(float,float)
com.badlogic.gdx.graphics.g2d.Sprite: void translateX(float)
com.badlogic.gdx.graphics.g2d.Sprite: void translateY(float)
com.badlogic.gdx.graphics.g2d.Sprite: void translate(float,float)
com.badlogic.gdx.graphics.g2d.Sprite: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g2d.Sprite: void setAlpha(float)
com.badlogic.gdx.graphics.g2d.Sprite: void setColor(float,float,float,float)
com.badlogic.gdx.graphics.g2d.Sprite: void setColor(float)
com.badlogic.gdx.graphics.g2d.Sprite: void setOrigin(float,float)
com.badlogic.gdx.graphics.g2d.Sprite: void setOriginCenter()
com.badlogic.gdx.graphics.g2d.Sprite: void setRotation(float)
com.badlogic.gdx.graphics.g2d.Sprite: float getRotation()
com.badlogic.gdx.graphics.g2d.Sprite: void rotate(float)
com.badlogic.gdx.graphics.g2d.Sprite: void rotate90(boolean)
com.badlogic.gdx.graphics.g2d.Sprite: void setScale(float)
com.badlogic.gdx.graphics.g2d.Sprite: void setScale(float,float)
com.badlogic.gdx.graphics.g2d.Sprite: void scale(float)
com.badlogic.gdx.graphics.g2d.Sprite: float[] getVertices()
com.badlogic.gdx.graphics.g2d.Sprite: com.badlogic.gdx.math.Rectangle getBoundingRectangle()
com.badlogic.gdx.graphics.g2d.Sprite: void draw(com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.graphics.g2d.Sprite: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.graphics.g2d.Sprite: float getX()
com.badlogic.gdx.graphics.g2d.Sprite: float getY()
com.badlogic.gdx.graphics.g2d.Sprite: float getWidth()
com.badlogic.gdx.graphics.g2d.Sprite: float getHeight()
com.badlogic.gdx.graphics.g2d.Sprite: float getOriginX()
com.badlogic.gdx.graphics.g2d.Sprite: float getOriginY()
com.badlogic.gdx.graphics.g2d.Sprite: float getScaleX()
com.badlogic.gdx.graphics.g2d.Sprite: float getScaleY()
com.badlogic.gdx.graphics.g2d.Sprite: com.badlogic.gdx.graphics.Color getColor()
com.badlogic.gdx.graphics.g2d.Sprite: void setRegion(float,float,float,float)
com.badlogic.gdx.graphics.g2d.Sprite: void setU(float)
com.badlogic.gdx.graphics.g2d.Sprite: void setV(float)
com.badlogic.gdx.graphics.g2d.Sprite: void setU2(float)
com.badlogic.gdx.graphics.g2d.Sprite: void setV2(float)
com.badlogic.gdx.graphics.g2d.Sprite: void setFlip(boolean,boolean)
com.badlogic.gdx.graphics.g2d.Sprite: void flip(boolean,boolean)
com.badlogic.gdx.graphics.g2d.Sprite: void scroll(float,float)
com.badlogic.gdx.graphics.g2d.SpriteBatch
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.graphics.Mesh mesh
com.badlogic.gdx.graphics.g2d.SpriteBatch: float[] vertices
com.badlogic.gdx.graphics.g2d.SpriteBatch: int idx
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.graphics.Texture lastTexture
com.badlogic.gdx.graphics.g2d.SpriteBatch: float invTexWidth
com.badlogic.gdx.graphics.g2d.SpriteBatch: float invTexHeight
com.badlogic.gdx.graphics.g2d.SpriteBatch: boolean drawing
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.math.Matrix4 transformMatrix
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.math.Matrix4 projectionMatrix
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.math.Matrix4 combinedMatrix
com.badlogic.gdx.graphics.g2d.SpriteBatch: boolean blendingDisabled
com.badlogic.gdx.graphics.g2d.SpriteBatch: int blendSrcFunc
com.badlogic.gdx.graphics.g2d.SpriteBatch: int blendDstFunc
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.graphics.glutils.ShaderProgram shader
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.graphics.glutils.ShaderProgram customShader
com.badlogic.gdx.graphics.g2d.SpriteBatch: boolean ownsShader
com.badlogic.gdx.graphics.g2d.SpriteBatch: float color
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.graphics.Color tempColor
com.badlogic.gdx.graphics.g2d.SpriteBatch: int renderCalls
com.badlogic.gdx.graphics.g2d.SpriteBatch: int totalRenderCalls
com.badlogic.gdx.graphics.g2d.SpriteBatch: int maxSpritesInBatch
com.badlogic.gdx.graphics.g2d.SpriteBatch: SpriteBatch()
com.badlogic.gdx.graphics.g2d.SpriteBatch: SpriteBatch(int)
com.badlogic.gdx.graphics.g2d.SpriteBatch: SpriteBatch(int,com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void begin()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void end()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void setColor(float,float,float,float)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void setColor(float)
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.graphics.Color getColor()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float,float)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.Texture,float[],int,int)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void flush()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void disableBlending()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void enableBlending()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void setBlendFunction(int,int)
com.badlogic.gdx.graphics.g2d.SpriteBatch: int getBlendSrcFunc()
com.badlogic.gdx.graphics.g2d.SpriteBatch: int getBlendDstFunc()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void dispose()
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
com.badlogic.gdx.graphics.g2d.SpriteBatch: com.badlogic.gdx.math.Matrix4 getTransformMatrix()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void setupMatrices()
com.badlogic.gdx.graphics.g2d.SpriteBatch: void switchTexture(com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.graphics.g2d.SpriteBatch: void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.SpriteBatch: boolean isBlendingEnabled()
com.badlogic.gdx.graphics.g2d.SpriteBatch: boolean isDrawing()
com.badlogic.gdx.graphics.g2d.SpriteCache
com.badlogic.gdx.graphics.g2d.SpriteCache: float[] tempVertices
com.badlogic.gdx.graphics.g2d.SpriteCache: com.badlogic.gdx.graphics.Mesh mesh
com.badlogic.gdx.graphics.g2d.SpriteCache: boolean drawing
com.badlogic.gdx.graphics.g2d.SpriteCache: com.badlogic.gdx.math.Matrix4 transformMatrix
com.badlogic.gdx.graphics.g2d.SpriteCache: com.badlogic.gdx.math.Matrix4 projectionMatrix
com.badlogic.gdx.graphics.g2d.SpriteCache: com.badlogic.gdx.utils.Array caches
com.badlogic.gdx.graphics.g2d.SpriteCache: com.badlogic.gdx.math.Matrix4 combinedMatrix
com.badlogic.gdx.graphics.g2d.SpriteCache: com.badlogic.gdx.graphics.glutils.ShaderProgram shader
com.badlogic.gdx.graphics.g2d.SpriteCache: com.badlogic.gdx.graphics.g2d.SpriteCache$Cache currentCache
com.badlogic.gdx.graphics.g2d.SpriteCache: com.badlogic.gdx.utils.Array textures
com.badlogic.gdx.graphics.g2d.SpriteCache: com.badlogic.gdx.utils.IntArray counts
com.badlogic.gdx.graphics.g2d.SpriteCache: float color
com.badlogic.gdx.graphics.g2d.SpriteCache: com.badlogic.gdx.graphics.Color tempColor
com.badlogic.gdx.graphics.g2d.SpriteCache: com.badlogic.gdx.graphics.glutils.ShaderProgram customShader
com.badlogic.gdx.graphics.g2d.SpriteCache: int renderCalls
com.badlogic.gdx.graphics.g2d.SpriteCache: int totalRenderCalls
com.badlogic.gdx.graphics.g2d.SpriteCache: SpriteCache()
com.badlogic.gdx.graphics.g2d.SpriteCache: SpriteCache(int,boolean)
com.badlogic.gdx.graphics.g2d.SpriteCache: SpriteCache(int,com.badlogic.gdx.graphics.glutils.ShaderProgram,boolean)
com.badlogic.gdx.graphics.g2d.SpriteCache: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g2d.SpriteCache: void setColor(float,float,float,float)
com.badlogic.gdx.graphics.g2d.SpriteCache: void setColor(float)
com.badlogic.gdx.graphics.g2d.SpriteCache: com.badlogic.gdx.graphics.Color getColor()
com.badlogic.gdx.graphics.g2d.SpriteCache: void beginCache()
com.badlogic.gdx.graphics.g2d.SpriteCache: void beginCache(int)
com.badlogic.gdx.graphics.g2d.SpriteCache: int endCache()
com.badlogic.gdx.graphics.g2d.SpriteCache: void clear()
com.badlogic.gdx.graphics.g2d.SpriteCache: void add(com.badlogic.gdx.graphics.Texture,float[],int,int)
com.badlogic.gdx.graphics.g2d.SpriteCache: void add(com.badlogic.gdx.graphics.Texture,float,float)
com.badlogic.gdx.graphics.g2d.SpriteCache: void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,float,float,float,float,float)
com.badlogic.gdx.graphics.g2d.SpriteCache: void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int)
com.badlogic.gdx.graphics.g2d.SpriteCache: void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean)
com.badlogic.gdx.graphics.g2d.SpriteCache: void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean)
com.badlogic.gdx.graphics.g2d.SpriteCache: void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)
com.badlogic.gdx.graphics.g2d.SpriteCache: void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float)
com.badlogic.gdx.graphics.g2d.SpriteCache: void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g2d.SpriteCache: void add(com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.graphics.g2d.SpriteCache: void begin()
com.badlogic.gdx.graphics.g2d.SpriteCache: void end()
com.badlogic.gdx.graphics.g2d.SpriteCache: void draw(int)
com.badlogic.gdx.graphics.g2d.SpriteCache: void draw(int,int,int)
com.badlogic.gdx.graphics.g2d.SpriteCache: void dispose()
com.badlogic.gdx.graphics.g2d.SpriteCache: com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
com.badlogic.gdx.graphics.g2d.SpriteCache: void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g2d.SpriteCache: com.badlogic.gdx.math.Matrix4 getTransformMatrix()
com.badlogic.gdx.graphics.g2d.SpriteCache: void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g2d.SpriteCache: com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader()
com.badlogic.gdx.graphics.g2d.SpriteCache: void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g2d.SpriteCache: void <clinit>()
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache: int id
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache: int offset
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache: int maxCount
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache: int textureCount
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache: com.badlogic.gdx.graphics.Texture[] textures
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache: int[] counts
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache: SpriteCache$Cache(int,int)
com.badlogic.gdx.graphics.g2d.TextureAtlas
com.badlogic.gdx.graphics.g2d.TextureAtlas: java.lang.String[] tuple
com.badlogic.gdx.graphics.g2d.TextureAtlas: com.badlogic.gdx.utils.ObjectSet textures
com.badlogic.gdx.graphics.g2d.TextureAtlas: com.badlogic.gdx.utils.Array regions
com.badlogic.gdx.graphics.g2d.TextureAtlas: java.util.Comparator indexComparator
com.badlogic.gdx.graphics.g2d.TextureAtlas: TextureAtlas()
com.badlogic.gdx.graphics.g2d.TextureAtlas: TextureAtlas(java.lang.String)
com.badlogic.gdx.graphics.g2d.TextureAtlas: TextureAtlas(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g2d.TextureAtlas: TextureAtlas(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.g2d.TextureAtlas: TextureAtlas(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g2d.TextureAtlas: TextureAtlas(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.g2d.TextureAtlas: TextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData)
com.badlogic.gdx.graphics.g2d.TextureAtlas: void load(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData)
com.badlogic.gdx.graphics.g2d.TextureAtlas: com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int)
com.badlogic.gdx.graphics.g2d.TextureAtlas: com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.graphics.g2d.TextureAtlas: com.badlogic.gdx.utils.Array getRegions()
com.badlogic.gdx.graphics.g2d.TextureAtlas: com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String)
com.badlogic.gdx.graphics.g2d.TextureAtlas: com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int)
com.badlogic.gdx.graphics.g2d.TextureAtlas: com.badlogic.gdx.utils.Array findRegions(java.lang.String)
com.badlogic.gdx.graphics.g2d.TextureAtlas: com.badlogic.gdx.utils.Array createSprites()
com.badlogic.gdx.graphics.g2d.TextureAtlas: com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String)
com.badlogic.gdx.graphics.g2d.TextureAtlas: com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int)
com.badlogic.gdx.graphics.g2d.TextureAtlas: com.badlogic.gdx.utils.Array createSprites(java.lang.String)
com.badlogic.gdx.graphics.g2d.TextureAtlas: com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)
com.badlogic.gdx.graphics.g2d.TextureAtlas: com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String)
com.badlogic.gdx.graphics.g2d.TextureAtlas: com.badlogic.gdx.utils.ObjectSet getTextures()
com.badlogic.gdx.graphics.g2d.TextureAtlas: void dispose()
com.badlogic.gdx.graphics.g2d.TextureAtlas: java.lang.String readValue(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.TextureAtlas: int readTuple(java.io.BufferedReader)
com.badlogic.gdx.graphics.g2d.TextureAtlas: void <clinit>()
com.badlogic.gdx.graphics.g2d.TextureAtlas$1
com.badlogic.gdx.graphics.g2d.TextureAtlas$1: TextureAtlas$1()
com.badlogic.gdx.graphics.g2d.TextureAtlas$1: int compare(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region,com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region)
com.badlogic.gdx.graphics.g2d.TextureAtlas$1: int compare(java.lang.Object,java.lang.Object)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: int index
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: java.lang.String name
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: float offsetX
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: float offsetY
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: int packedWidth
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: int packedHeight
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: int originalWidth
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: int originalHeight
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: boolean rotate
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: int[] splits
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: int[] pads
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: TextureAtlas$AtlasRegion(com.badlogic.gdx.graphics.Texture,int,int,int,int)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: TextureAtlas$AtlasRegion(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: void flip(boolean,boolean)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: float getRotatedPackedWidth()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion: float getRotatedPackedHeight()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion region
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: float originalOffsetX
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: float originalOffsetY
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: TextureAtlas$AtlasSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: TextureAtlas$AtlasSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: void setPosition(float,float)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: void setX(float)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: void setY(float)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: void setBounds(float,float,float,float)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: void setSize(float,float)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: void setOrigin(float,float)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: void setOriginCenter()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: void flip(boolean,boolean)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: void rotate90(boolean)
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: float getX()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: float getY()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: float getOriginX()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: float getOriginY()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: float getWidth()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: float getHeight()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: float getWidthRatio()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: float getHeightRatio()
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite: com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion getAtlasRegion()
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData: com.badlogic.gdx.utils.Array pages
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData: com.badlogic.gdx.utils.Array regions
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData: TextureAtlas$TextureAtlasData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData: com.badlogic.gdx.utils.Array getPages()
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData: com.badlogic.gdx.utils.Array getRegions()
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page: com.badlogic.gdx.files.FileHandle textureFile
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page: com.badlogic.gdx.graphics.Texture texture
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page: float width
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page: float height
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page: boolean useMipMaps
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page: com.badlogic.gdx.graphics.Pixmap$Format format
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page: com.badlogic.gdx.graphics.Texture$TextureFilter minFilter
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page: com.badlogic.gdx.graphics.Texture$TextureFilter magFilter
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page: com.badlogic.gdx.graphics.Texture$TextureWrap uWrap
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page: com.badlogic.gdx.graphics.Texture$TextureWrap vWrap
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page: TextureAtlas$TextureAtlasData$Page(com.badlogic.gdx.files.FileHandle,float,float,boolean,com.badlogic.gdx.graphics.Pixmap$Format,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap)
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page page
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: int index
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: java.lang.String name
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: float offsetX
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: float offsetY
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: int originalWidth
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: int originalHeight
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: boolean rotate
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: int left
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: int top
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: int width
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: int height
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: boolean flip
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: int[] splits
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: int[] pads
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region: TextureAtlas$TextureAtlasData$Region()
com.badlogic.gdx.graphics.g2d.TextureRegion
com.badlogic.gdx.graphics.g2d.TextureRegion: com.badlogic.gdx.graphics.Texture texture
com.badlogic.gdx.graphics.g2d.TextureRegion: float u
com.badlogic.gdx.graphics.g2d.TextureRegion: float v
com.badlogic.gdx.graphics.g2d.TextureRegion: float u2
com.badlogic.gdx.graphics.g2d.TextureRegion: float v2
com.badlogic.gdx.graphics.g2d.TextureRegion: int regionWidth
com.badlogic.gdx.graphics.g2d.TextureRegion: int regionHeight
com.badlogic.gdx.graphics.g2d.TextureRegion: TextureRegion()
com.badlogic.gdx.graphics.g2d.TextureRegion: TextureRegion(com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.graphics.g2d.TextureRegion: TextureRegion(com.badlogic.gdx.graphics.Texture,int,int)
com.badlogic.gdx.graphics.g2d.TextureRegion: TextureRegion(com.badlogic.gdx.graphics.Texture,int,int,int,int)
com.badlogic.gdx.graphics.g2d.TextureRegion: TextureRegion(com.badlogic.gdx.graphics.Texture,float,float,float,float)
com.badlogic.gdx.graphics.g2d.TextureRegion: TextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.graphics.g2d.TextureRegion: TextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
com.badlogic.gdx.graphics.g2d.TextureRegion: void setRegion(com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.graphics.g2d.TextureRegion: void setRegion(int,int,int,int)
com.badlogic.gdx.graphics.g2d.TextureRegion: void setRegion(float,float,float,float)
com.badlogic.gdx.graphics.g2d.TextureRegion: void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.graphics.g2d.TextureRegion: void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int)
com.badlogic.gdx.graphics.g2d.TextureRegion: com.badlogic.gdx.graphics.Texture getTexture()
com.badlogic.gdx.graphics.g2d.TextureRegion: void setTexture(com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.graphics.g2d.TextureRegion: float getU()
com.badlogic.gdx.graphics.g2d.TextureRegion: void setU(float)
com.badlogic.gdx.graphics.g2d.TextureRegion: float getV()
com.badlogic.gdx.graphics.g2d.TextureRegion: void setV(float)
com.badlogic.gdx.graphics.g2d.TextureRegion: float getU2()
com.badlogic.gdx.graphics.g2d.TextureRegion: void setU2(float)
com.badlogic.gdx.graphics.g2d.TextureRegion: float getV2()
com.badlogic.gdx.graphics.g2d.TextureRegion: void setV2(float)
com.badlogic.gdx.graphics.g2d.TextureRegion: int getRegionX()
com.badlogic.gdx.graphics.g2d.TextureRegion: void setRegionX(int)
com.badlogic.gdx.graphics.g2d.TextureRegion: int getRegionY()
com.badlogic.gdx.graphics.g2d.TextureRegion: void setRegionY(int)
com.badlogic.gdx.graphics.g2d.TextureRegion: int getRegionWidth()
com.badlogic.gdx.graphics.g2d.TextureRegion: void setRegionWidth(int)
com.badlogic.gdx.graphics.g2d.TextureRegion: int getRegionHeight()
com.badlogic.gdx.graphics.g2d.TextureRegion: void setRegionHeight(int)
com.badlogic.gdx.graphics.g2d.TextureRegion: void flip(boolean,boolean)
com.badlogic.gdx.graphics.g2d.TextureRegion: boolean isFlipX()
com.badlogic.gdx.graphics.g2d.TextureRegion: boolean isFlipY()
com.badlogic.gdx.graphics.g2d.TextureRegion: void scroll(float,float)
com.badlogic.gdx.graphics.g2d.TextureRegion: com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int)
com.badlogic.gdx.graphics.g2d.TextureRegion: com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_PIXEL_MODE_NONE
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_PIXEL_MODE_MONO
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_PIXEL_MODE_GRAY
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_PIXEL_MODE_GRAY2
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_PIXEL_MODE_GRAY4
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_PIXEL_MODE_LCD
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_PIXEL_MODE_LCD_V
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_ENCODING_NONE
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_ENCODING_MS_SYMBOL
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_ENCODING_UNICODE
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_ENCODING_SJIS
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_ENCODING_GB2312
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_ENCODING_BIG5
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_ENCODING_WANSUNG
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_ENCODING_JOHAB
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_ENCODING_ADOBE_STANDARD
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_ENCODING_ADOBE_EXPERT
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_ENCODING_ADOBE_CUSTOM
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_ENCODING_ADOBE_LATIN_1
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_ENCODING_OLD_LATIN_2
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_ENCODING_APPLE_ROMAN
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_FACE_FLAG_SCALABLE
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_FACE_FLAG_FIXED_SIZES
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_FACE_FLAG_FIXED_WIDTH
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_FACE_FLAG_SFNT
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_FACE_FLAG_HORIZONTAL
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_FACE_FLAG_VERTICAL
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_FACE_FLAG_KERNING
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_FACE_FLAG_FAST_GLYPHS
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_FACE_FLAG_MULTIPLE_MASTERS
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_FACE_FLAG_GLYPH_NAMES
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_FACE_FLAG_EXTERNAL_STREAM
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_FACE_FLAG_HINTER
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_FACE_FLAG_CID_KEYED
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_FACE_FLAG_TRICKY
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_STYLE_FLAG_ITALIC
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_STYLE_FLAG_BOLD
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_LOAD_DEFAULT
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_LOAD_NO_SCALE
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_LOAD_NO_HINTING
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_LOAD_RENDER
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_LOAD_NO_BITMAP
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_LOAD_VERTICAL_LAYOUT
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_LOAD_FORCE_AUTOHINT
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_LOAD_CROP_BITMAP
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_LOAD_PEDANTIC
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_LOAD_NO_RECURSE
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_LOAD_IGNORE_TRANSFORM
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_LOAD_MONOCHROME
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_LOAD_LINEAR_DESIGN
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_LOAD_NO_AUTOHINT
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_RENDER_MODE_NORMAL
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_RENDER_MODE_LIGHT
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_RENDER_MODE_MONO
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_RENDER_MODE_LCD
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_RENDER_MODE_LCD_V
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_RENDER_MODE_MAX
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_KERNING_DEFAULT
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_KERNING_UNFITTED
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int FT_KERNING_UNSCALED
com.badlogic.gdx.graphics.g2d.freetype.FreeType: FreeType()
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int encode(char,char,char,char)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library initFreeType()
com.badlogic.gdx.graphics.g2d.freetype.FreeType: long initFreeTypeJni()
com.badlogic.gdx.graphics.g2d.freetype.FreeType: void doneFreeType(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: void doneFreeType(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face newFace(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library,com.badlogic.gdx.files.FileHandle,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face newMemoryFace(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library,byte[],int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: long newMemoryFace(long,java.nio.ByteBuffer,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: void doneFace(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: void doneFace(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: boolean selectSize(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: boolean selectSize(long,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: boolean setCharSize(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: boolean setCharSize(long,int,int,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: boolean setPixelSizes(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: boolean setPixelSizes(long,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: boolean loadGlyph(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: boolean loadGlyph(long,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: boolean loadChar(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: boolean loadChar(long,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: boolean renderGlyph(com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: boolean renderGlyph(long,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: boolean hasKerning(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: boolean hasKerning(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int getKerning(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int getKerning(long,int,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int getCharIndex(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int getCharIndex(long,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: int toInt(int)
com.badlogic.gdx.graphics.g2d.freetype.FreeType: void <clinit>()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: FreeType$Bitmap(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: int getRows()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: int getRows(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: int getWidth()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: int getWidth(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: int getPitch()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: int getPitch(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: java.nio.ByteBuffer getBuffer()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: com.badlogic.gdx.graphics.Pixmap getPixmap(com.badlogic.gdx.graphics.Pixmap$Format)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: java.nio.ByteBuffer getBuffer(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: int getNumGray()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: int getNumGray(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: int getPixelMode()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap: int getPixelMode(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library library
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: FreeType$Face(long,com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getFaceFlags()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getFaceFlags(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getStyleFlags()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getStyleFlags(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getNumGlyphs()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getNumGlyphs(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getAscender()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getAscender(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getDescender()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getDescender(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getHeight()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getHeight(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getMaxAdvanceWidth()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getMaxAdvanceWidth(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getMaxAdvanceHeight()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getMaxAdvanceHeight(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getUnderlinePosition()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getUnderlinePosition(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getUnderlineThickness()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: int getUnderlineThickness(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot getGlyph()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: long getGlyph(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size getSize()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face: long getSize(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: FreeType$GlyphMetrics(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getWidth()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getWidth(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getHeight()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getHeight(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getHoriBearingX()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getHoriBearingX(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getHoriBearingY()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getHoriBearingY(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getHoriAdvance()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getHoriAdvance(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getVertBearingX()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getVertBearingX(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getVertBearingY()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getVertBearingY(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getVertAdvance()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics: int getVertAdvance(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: FreeType$GlyphSlot(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics getMetrics()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: long getMetrics(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: int getLinearHoriAdvance()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: int getLinearHoriAdvance(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: int getLinearVertAdvance()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: int getLinearVertAdvance(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: int getAdvanceX()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: int getAdvanceX(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: int getAdvanceY()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: int getAdvanceY(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: int getFormat()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: int getFormat(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap getBitmap()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: long getBitmap(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: int getBitmapLeft()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: int getBitmapLeft(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: int getBitmapTop()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot: int getBitmapTop(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library: com.badlogic.gdx.utils.LongMap fontData
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library: FreeType$Library(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Pointer
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Pointer: long address
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Pointer: FreeType$Pointer(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size: FreeType$Size(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size: com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics getMetrics()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size: long getMetrics(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: FreeType$SizeMetrics(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getXppem()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getXppem(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getYppem()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getYppem(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getXScale()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getXscale(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getYscale()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getYscale(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getAscender()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getAscender(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getDescender()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getDescender(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getHeight()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getHeight(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getMaxAdvance()
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics: int getMaxAdvance(long)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: java.lang.String DEFAULT_CHARS
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library library
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face face
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: java.lang.String filePath
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: boolean bitmapped
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: int maxTextureSize
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: int NO_MAXIMUM
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: void setMaxTextureSize(int)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: int getMaxTextureSize()
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: FreeTypeFontGenerator(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: boolean checkForBitmapFont()
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(int,java.lang.String,boolean)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(int)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: int scaleForPixelHeight(int)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: int scaleForPixelWidth(int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: int scaleToFitSquare(int,int,int)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap generateGlyphAndBitmap(int,int,boolean)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(int)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(int,java.lang.String,boolean)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(int,java.lang.String,boolean,com.badlogic.gdx.graphics.g2d.PixmapPacker)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: void dispose()
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator: void <clinit>()
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$1
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$1: com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator this$0
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$1: FreeTypeFontGenerator$1(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator,com.badlogic.gdx.graphics.TextureData)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$1: void dispose()
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData: com.badlogic.gdx.graphics.g2d.TextureRegion[] regions
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData: FreeTypeFontGenerator$FreeTypeBitmapFontData()
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData: com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion()
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData: com.badlogic.gdx.graphics.g2d.TextureRegion[] getTextureRegions()
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter: int size
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter: java.lang.String characters
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter: com.badlogic.gdx.graphics.g2d.PixmapPacker packer
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter: boolean flip
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter: boolean genMipMaps
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter: com.badlogic.gdx.graphics.Texture$TextureFilter minFilter
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter: com.badlogic.gdx.graphics.Texture$TextureFilter magFilter
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter: FreeTypeFontGenerator$FreeTypeFontParameter()
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap: com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph glyph
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap: com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap bitmap
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap: com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator this$0
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap: FreeTypeFontGenerator$GlyphAndBitmap(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader: FreeTypeFontGeneratorLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader: com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader$FreeTypeFontGeneratorParameters)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader$FreeTypeFontGeneratorParameters)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader: java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader$FreeTypeFontGeneratorParameters
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader$FreeTypeFontGeneratorParameters: FreeTypeFontGeneratorLoader$FreeTypeFontGeneratorParameters()
com.badlogic.gdx.graphics.g2d.freetype.FreetypeBuild
com.badlogic.gdx.graphics.g2d.freetype.FreetypeBuild: FreetypeBuild()
com.badlogic.gdx.graphics.g2d.freetype.FreetypeBuild: void main(java.lang.String[])
com.badlogic.gdx.graphics.g3d.Attribute
com.badlogic.gdx.graphics.g3d.Attribute: com.badlogic.gdx.utils.Array types
com.badlogic.gdx.graphics.g3d.Attribute: long type
com.badlogic.gdx.graphics.g3d.Attribute: long getAttributeType(java.lang.String)
com.badlogic.gdx.graphics.g3d.Attribute: java.lang.String getAttributeAlias(long)
com.badlogic.gdx.graphics.g3d.Attribute: long register(java.lang.String)
com.badlogic.gdx.graphics.g3d.Attribute: Attribute(long)
com.badlogic.gdx.graphics.g3d.Attribute: com.badlogic.gdx.graphics.g3d.Attribute copy()
com.badlogic.gdx.graphics.g3d.Attribute: boolean equals(com.badlogic.gdx.graphics.g3d.Attribute)
com.badlogic.gdx.graphics.g3d.Attribute: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.g3d.Attribute: java.lang.String toString()
com.badlogic.gdx.graphics.g3d.Attribute: void <clinit>()
com.badlogic.gdx.graphics.g3d.Attributes
com.badlogic.gdx.graphics.g3d.Attributes: long mask
com.badlogic.gdx.graphics.g3d.Attributes: com.badlogic.gdx.utils.Array attributes
com.badlogic.gdx.graphics.g3d.Attributes: boolean sorted
com.badlogic.gdx.graphics.g3d.Attributes: Attributes()
com.badlogic.gdx.graphics.g3d.Attributes: void sort()
com.badlogic.gdx.graphics.g3d.Attributes: long getMask()
com.badlogic.gdx.graphics.g3d.Attributes: com.badlogic.gdx.graphics.g3d.Attribute get(long)
com.badlogic.gdx.graphics.g3d.Attributes: com.badlogic.gdx.graphics.g3d.Attribute get(java.lang.Class,long)
com.badlogic.gdx.graphics.g3d.Attributes: com.badlogic.gdx.utils.Array get(com.badlogic.gdx.utils.Array,long)
com.badlogic.gdx.graphics.g3d.Attributes: void clear()
com.badlogic.gdx.graphics.g3d.Attributes: int size()
com.badlogic.gdx.graphics.g3d.Attributes: void enable(long)
com.badlogic.gdx.graphics.g3d.Attributes: void disable(long)
com.badlogic.gdx.graphics.g3d.Attributes: void set(com.badlogic.gdx.graphics.g3d.Attribute)
com.badlogic.gdx.graphics.g3d.Attributes: void set(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute)
com.badlogic.gdx.graphics.g3d.Attributes: void set(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute)
com.badlogic.gdx.graphics.g3d.Attributes: void set(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute)
com.badlogic.gdx.graphics.g3d.Attributes: void set(com.badlogic.gdx.graphics.g3d.Attribute[])
com.badlogic.gdx.graphics.g3d.Attributes: void set(java.lang.Iterable)
com.badlogic.gdx.graphics.g3d.Attributes: void remove(long)
com.badlogic.gdx.graphics.g3d.Attributes: boolean has(long)
com.badlogic.gdx.graphics.g3d.Attributes: int indexOf(long)
com.badlogic.gdx.graphics.g3d.Attributes: boolean same(com.badlogic.gdx.graphics.g3d.Attributes,boolean)
com.badlogic.gdx.graphics.g3d.Attributes: boolean same(com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.Attributes: int compare(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute)
com.badlogic.gdx.graphics.g3d.Attributes: java.util.Iterator iterator()
com.badlogic.gdx.graphics.g3d.Attributes: int hashCode()
com.badlogic.gdx.graphics.g3d.Attributes: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.g3d.Attributes: int compare(java.lang.Object,java.lang.Object)
com.badlogic.gdx.graphics.g3d.Environment
com.badlogic.gdx.graphics.g3d.Environment: com.badlogic.gdx.graphics.g3d.environment.ShadowMap shadowMap
com.badlogic.gdx.graphics.g3d.Environment: com.badlogic.gdx.utils.Array directionalLights
com.badlogic.gdx.graphics.g3d.Environment: com.badlogic.gdx.utils.Array pointLights
com.badlogic.gdx.graphics.g3d.Environment: Environment()
com.badlogic.gdx.graphics.g3d.Environment: com.badlogic.gdx.graphics.g3d.Environment add(com.badlogic.gdx.graphics.g3d.environment.BaseLight[])
com.badlogic.gdx.graphics.g3d.Environment: com.badlogic.gdx.graphics.g3d.Environment add(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.Environment: com.badlogic.gdx.graphics.g3d.Environment add(com.badlogic.gdx.graphics.g3d.environment.BaseLight)
com.badlogic.gdx.graphics.g3d.Environment: void clear()
com.badlogic.gdx.graphics.g3d.Material
com.badlogic.gdx.graphics.g3d.Material: int counter
com.badlogic.gdx.graphics.g3d.Material: java.lang.String id
com.badlogic.gdx.graphics.g3d.Material: Material()
com.badlogic.gdx.graphics.g3d.Material: Material(java.lang.String)
com.badlogic.gdx.graphics.g3d.Material: Material(com.badlogic.gdx.graphics.g3d.Attribute[])
com.badlogic.gdx.graphics.g3d.Material: Material(java.lang.String,com.badlogic.gdx.graphics.g3d.Attribute[])
com.badlogic.gdx.graphics.g3d.Material: Material(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.Material: Material(java.lang.String,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.Material: Material(com.badlogic.gdx.graphics.g3d.Material)
com.badlogic.gdx.graphics.g3d.Material: Material(java.lang.String,com.badlogic.gdx.graphics.g3d.Material)
com.badlogic.gdx.graphics.g3d.Material: com.badlogic.gdx.graphics.g3d.Material copy()
com.badlogic.gdx.graphics.g3d.Material: int hashCode()
com.badlogic.gdx.graphics.g3d.Material: void <clinit>()
com.badlogic.gdx.graphics.g3d.Model
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.utils.Array materials
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.utils.Array nodes
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.utils.Array animations
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.utils.Array meshes
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.utils.Array meshParts
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.utils.Array disposables
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.utils.ObjectMap nodePartBones
com.badlogic.gdx.graphics.g3d.Model: Model()
com.badlogic.gdx.graphics.g3d.Model: Model(com.badlogic.gdx.graphics.g3d.model.data.ModelData)
com.badlogic.gdx.graphics.g3d.Model: Model(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.graphics.g3d.utils.TextureProvider)
com.badlogic.gdx.graphics.g3d.Model: void load(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.graphics.g3d.utils.TextureProvider)
com.badlogic.gdx.graphics.g3d.Model: void loadAnimations(java.lang.Iterable)
com.badlogic.gdx.graphics.g3d.Model: void loadNodes(java.lang.Iterable)
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.graphics.g3d.model.Node loadNode(com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.graphics.g3d.model.data.ModelNode)
com.badlogic.gdx.graphics.g3d.Model: void loadMeshes(java.lang.Iterable)
com.badlogic.gdx.graphics.g3d.Model: void convertMesh(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh)
com.badlogic.gdx.graphics.g3d.Model: void loadMaterials(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.utils.TextureProvider)
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.graphics.g3d.Material convertMaterial(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial,com.badlogic.gdx.graphics.g3d.utils.TextureProvider)
com.badlogic.gdx.graphics.g3d.Model: void manageDisposable(com.badlogic.gdx.utils.Disposable)
com.badlogic.gdx.graphics.g3d.Model: java.lang.Iterable getManagedDisposables()
com.badlogic.gdx.graphics.g3d.Model: void dispose()
com.badlogic.gdx.graphics.g3d.Model: void calculateTransforms()
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String)
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String,boolean)
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String)
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String,boolean)
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String)
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean)
com.badlogic.gdx.graphics.g3d.Model: com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean,boolean)
com.badlogic.gdx.graphics.g3d.ModelBatch
com.badlogic.gdx.graphics.g3d.ModelBatch: com.badlogic.gdx.graphics.Camera camera
com.badlogic.gdx.graphics.g3d.ModelBatch: com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool renderablesPool
com.badlogic.gdx.graphics.g3d.ModelBatch: com.badlogic.gdx.utils.Array renderables
com.badlogic.gdx.graphics.g3d.ModelBatch: com.badlogic.gdx.graphics.g3d.utils.RenderContext context
com.badlogic.gdx.graphics.g3d.ModelBatch: boolean ownContext
com.badlogic.gdx.graphics.g3d.ModelBatch: com.badlogic.gdx.graphics.g3d.utils.ShaderProvider shaderProvider
com.badlogic.gdx.graphics.g3d.ModelBatch: com.badlogic.gdx.graphics.g3d.utils.RenderableSorter sorter
com.badlogic.gdx.graphics.g3d.ModelBatch: ModelBatch(com.badlogic.gdx.graphics.g3d.utils.RenderContext,com.badlogic.gdx.graphics.g3d.utils.ShaderProvider,com.badlogic.gdx.graphics.g3d.utils.RenderableSorter)
com.badlogic.gdx.graphics.g3d.ModelBatch: ModelBatch(com.badlogic.gdx.graphics.g3d.utils.RenderContext,com.badlogic.gdx.graphics.g3d.utils.ShaderProvider)
com.badlogic.gdx.graphics.g3d.ModelBatch: ModelBatch(com.badlogic.gdx.graphics.g3d.utils.RenderContext,com.badlogic.gdx.graphics.g3d.utils.RenderableSorter)
com.badlogic.gdx.graphics.g3d.ModelBatch: ModelBatch(com.badlogic.gdx.graphics.g3d.utils.RenderContext)
com.badlogic.gdx.graphics.g3d.ModelBatch: ModelBatch(com.badlogic.gdx.graphics.g3d.utils.ShaderProvider,com.badlogic.gdx.graphics.g3d.utils.RenderableSorter)
com.badlogic.gdx.graphics.g3d.ModelBatch: ModelBatch(com.badlogic.gdx.graphics.g3d.utils.RenderableSorter)
com.badlogic.gdx.graphics.g3d.ModelBatch: ModelBatch(com.badlogic.gdx.graphics.g3d.utils.ShaderProvider)
com.badlogic.gdx.graphics.g3d.ModelBatch: ModelBatch(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g3d.ModelBatch: ModelBatch(java.lang.String,java.lang.String)
com.badlogic.gdx.graphics.g3d.ModelBatch: ModelBatch()
com.badlogic.gdx.graphics.g3d.ModelBatch: void begin(com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.graphics.g3d.ModelBatch: void setCamera(com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.graphics.g3d.ModelBatch: com.badlogic.gdx.graphics.Camera getCamera()
com.badlogic.gdx.graphics.g3d.ModelBatch: boolean ownsRenderContext()
com.badlogic.gdx.graphics.g3d.ModelBatch: com.badlogic.gdx.graphics.g3d.utils.RenderContext getRenderContext()
com.badlogic.gdx.graphics.g3d.ModelBatch: com.badlogic.gdx.graphics.g3d.utils.ShaderProvider getShaderProvider()
com.badlogic.gdx.graphics.g3d.ModelBatch: com.badlogic.gdx.graphics.g3d.utils.RenderableSorter getRenderableSorter()
com.badlogic.gdx.graphics.g3d.ModelBatch: void flush()
com.badlogic.gdx.graphics.g3d.ModelBatch: void end()
com.badlogic.gdx.graphics.g3d.ModelBatch: void render(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.ModelBatch: void render(com.badlogic.gdx.graphics.g3d.RenderableProvider)
com.badlogic.gdx.graphics.g3d.ModelBatch: void render(java.lang.Iterable)
com.badlogic.gdx.graphics.g3d.ModelBatch: void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.Environment)
com.badlogic.gdx.graphics.g3d.ModelBatch: void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.Environment)
com.badlogic.gdx.graphics.g3d.ModelBatch: void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.Shader)
com.badlogic.gdx.graphics.g3d.ModelBatch: void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.Shader)
com.badlogic.gdx.graphics.g3d.ModelBatch: void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.Environment,com.badlogic.gdx.graphics.g3d.Shader)
com.badlogic.gdx.graphics.g3d.ModelBatch: void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.Environment,com.badlogic.gdx.graphics.g3d.Shader)
com.badlogic.gdx.graphics.g3d.ModelBatch: void dispose()
com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool
com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool: com.badlogic.gdx.utils.Array obtained
com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool: ModelBatch$RenderablePool()
com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool: com.badlogic.gdx.graphics.g3d.Renderable newObject()
com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool: com.badlogic.gdx.graphics.g3d.Renderable obtain()
com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool: void flush()
com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool: java.lang.Object obtain()
com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool: java.lang.Object newObject()
com.badlogic.gdx.graphics.g3d.ModelInstance
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.utils.Array materials
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.utils.Array nodes
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.utils.Array animations
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.graphics.g3d.Model model
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.math.Matrix4 transform
com.badlogic.gdx.graphics.g3d.ModelInstance: java.lang.Object userData
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.utils.ObjectMap nodePartBones
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.Model)
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.Model,java.lang.String,boolean)
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,java.lang.String,boolean)
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.Model,java.lang.String,boolean,boolean)
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,java.lang.String,boolean,boolean)
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.Model,java.lang.String,boolean,boolean,boolean)
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,java.lang.String,boolean,boolean,boolean)
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.Model,java.lang.String[])
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,java.lang.String[])
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.Model,float,float,float)
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.ModelInstance)
com.badlogic.gdx.graphics.g3d.ModelInstance: ModelInstance(com.badlogic.gdx.graphics.g3d.ModelInstance,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.graphics.g3d.ModelInstance copy()
com.badlogic.gdx.graphics.g3d.ModelInstance: void copyNodes(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.ModelInstance: void copyNodes(com.badlogic.gdx.utils.Array,java.lang.String[])
com.badlogic.gdx.graphics.g3d.ModelInstance: void copyNodes(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.ModelInstance: void setBones()
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.graphics.g3d.model.Node copyNode(com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.graphics.g3d.model.Node)
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.graphics.g3d.model.NodePart copyNodePart(com.badlogic.gdx.graphics.g3d.model.NodePart)
com.badlogic.gdx.graphics.g3d.ModelInstance: void copyAnimations(java.lang.Iterable)
com.badlogic.gdx.graphics.g3d.ModelInstance: void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool)
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.model.Node)
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.graphics.g3d.model.NodePart)
com.badlogic.gdx.graphics.g3d.ModelInstance: void getRenderables(com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool)
com.badlogic.gdx.graphics.g3d.ModelInstance: void calculateTransforms()
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String)
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String,boolean)
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String)
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String,boolean)
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String)
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean)
com.badlogic.gdx.graphics.g3d.ModelInstance: com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean,boolean)
com.badlogic.gdx.graphics.g3d.Renderable
com.badlogic.gdx.graphics.g3d.Renderable: com.badlogic.gdx.math.Matrix4 worldTransform
com.badlogic.gdx.graphics.g3d.Renderable: com.badlogic.gdx.graphics.Mesh mesh
com.badlogic.gdx.graphics.g3d.Renderable: int meshPartOffset
com.badlogic.gdx.graphics.g3d.Renderable: int meshPartSize
com.badlogic.gdx.graphics.g3d.Renderable: int primitiveType
com.badlogic.gdx.graphics.g3d.Renderable: com.badlogic.gdx.graphics.g3d.Material material
com.badlogic.gdx.graphics.g3d.Renderable: com.badlogic.gdx.graphics.g3d.Environment environment
com.badlogic.gdx.graphics.g3d.Renderable: com.badlogic.gdx.math.Matrix4[] bones
com.badlogic.gdx.graphics.g3d.Renderable: com.badlogic.gdx.graphics.g3d.Shader shader
com.badlogic.gdx.graphics.g3d.Renderable: java.lang.Object userData
com.badlogic.gdx.graphics.g3d.Renderable: Renderable()
com.badlogic.gdx.graphics.g3d.RenderableProvider
com.badlogic.gdx.graphics.g3d.RenderableProvider: void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool)
com.badlogic.gdx.graphics.g3d.Shader
com.badlogic.gdx.graphics.g3d.Shader: void init()
com.badlogic.gdx.graphics.g3d.Shader: int compareTo(com.badlogic.gdx.graphics.g3d.Shader)
com.badlogic.gdx.graphics.g3d.Shader: boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.Shader: void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext)
com.badlogic.gdx.graphics.g3d.Shader: void render(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.Shader: void end()
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: java.lang.String Alias
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: long Type
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: boolean blended
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: int sourceFunction
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: int destFunction
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: float opacity
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: boolean is(long)
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: BlendingAttribute()
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: BlendingAttribute(boolean,int,int,float)
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: BlendingAttribute(int,int,float)
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: BlendingAttribute(int,int)
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: BlendingAttribute(boolean,float)
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: BlendingAttribute(float)
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: BlendingAttribute(com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute)
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute copy()
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: int hashCode()
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: com.badlogic.gdx.graphics.g3d.Attribute copy()
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute: void <clinit>()
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: java.lang.String DiffuseAlias
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: long Diffuse
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: java.lang.String SpecularAlias
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: long Specular
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: java.lang.String AmbientAlias
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: long Ambient
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: java.lang.String EmissiveAlias
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: long Emissive
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: java.lang.String ReflectionAlias
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: long Reflection
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: java.lang.String AmbientLightAlias
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: long AmbientLight
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: java.lang.String FogAlias
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: long Fog
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: long Mask
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: boolean is(long)
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createAmbient(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createAmbient(float,float,float,float)
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createDiffuse(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createDiffuse(float,float,float,float)
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createSpecular(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createSpecular(float,float,float,float)
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createReflection(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createReflection(float,float,float,float)
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: ColorAttribute(long)
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: ColorAttribute(long,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: ColorAttribute(long,float,float,float,float)
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: ColorAttribute(com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute)
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: com.badlogic.gdx.graphics.g3d.Attribute copy()
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: int hashCode()
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute: void <clinit>()
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute: java.lang.String EnvironmentMapAlias
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute: long EnvironmentMap
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute: long Mask
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute: com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor textureDescription
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute: boolean is(long)
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute: CubemapAttribute(long)
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute: CubemapAttribute(long,com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor)
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute: CubemapAttribute(long,com.badlogic.gdx.graphics.Cubemap)
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute: CubemapAttribute(com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute)
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute: com.badlogic.gdx.graphics.g3d.Attribute copy()
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute: int hashCode()
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute: void <clinit>()
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: java.lang.String Alias
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: long Type
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: long Mask
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: int depthFunc
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: float depthRangeNear
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: float depthRangeFar
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: boolean depthMask
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: boolean is(long)
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: DepthTestAttribute()
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: DepthTestAttribute(boolean)
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: DepthTestAttribute(int)
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: DepthTestAttribute(int,boolean)
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: DepthTestAttribute(int,float,float)
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: DepthTestAttribute(int,float,float,boolean)
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: DepthTestAttribute(long,int,float,float,boolean)
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: DepthTestAttribute(com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute)
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: com.badlogic.gdx.graphics.g3d.Attribute copy()
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: int hashCode()
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute: void <clinit>()
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute: java.lang.String ShininessAlias
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute: long Shininess
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute: java.lang.String AlphaTestAlias
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute: long AlphaTest
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute: float value
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute: com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute createShininess(float)
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute: com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute createAlphaTest(float)
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute: FloatAttribute(long)
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute: FloatAttribute(long,float)
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute: com.badlogic.gdx.graphics.g3d.Attribute copy()
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute: int hashCode()
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute: void <clinit>()
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute: java.lang.String CullFaceAlias
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute: long CullFace
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute: int value
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute: com.badlogic.gdx.graphics.g3d.attributes.IntAttribute createCullFace(int)
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute: IntAttribute(long)
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute: IntAttribute(long,int)
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute: com.badlogic.gdx.graphics.g3d.Attribute copy()
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute: int hashCode()
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute: void <clinit>()
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: java.lang.String DiffuseAlias
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: long Diffuse
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: java.lang.String SpecularAlias
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: long Specular
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: java.lang.String BumpAlias
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: long Bump
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: java.lang.String NormalAlias
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: long Normal
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: long Mask
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor textureDescription
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: boolean is(long)
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createDiffuse(com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createSpecular(com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createNormal(com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createBump(com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: TextureAttribute(long)
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: TextureAttribute(long,com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor)
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: TextureAttribute(long,com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: TextureAttribute(com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute)
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: com.badlogic.gdx.graphics.g3d.Attribute copy()
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: int hashCode()
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute: void <clinit>()
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: int GROUP_OPAQUE
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: int GROUP_BLEND
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: com.badlogic.gdx.utils.Pool arrayPool
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: com.badlogic.gdx.utils.Array usedArrays
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: com.badlogic.gdx.utils.ObjectMap materialGroups
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: com.badlogic.gdx.graphics.Camera camera
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: com.badlogic.gdx.graphics.glutils.ShaderProgram shader
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: java.util.Comparator cameraSorter
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: CameraGroupStrategy(com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: CameraGroupStrategy(com.badlogic.gdx.graphics.Camera,java.util.Comparator)
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: void setCamera(com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: com.badlogic.gdx.graphics.Camera getCamera()
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal)
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: void beforeGroup(int,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: void afterGroup(int)
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: void beforeGroups()
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: void afterGroups()
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: void createDefaultShader()
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int)
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy: void dispose()
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1: com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy this$0
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1: CameraGroupStrategy$1(com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy,int)
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1: com.badlogic.gdx.utils.Array newObject()
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1: java.lang.Object newObject()
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2: com.badlogic.gdx.graphics.Camera val$camera
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2: CameraGroupStrategy$2(com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2: int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal)
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2: int compare(java.lang.Object,java.lang.Object)
com.badlogic.gdx.graphics.g3d.decals.Decal
com.badlogic.gdx.graphics.g3d.decals.Decal: int VERTEX_SIZE
com.badlogic.gdx.graphics.g3d.decals.Decal: int SIZE
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.math.Vector3 tmp
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.math.Vector3 tmp2
com.badlogic.gdx.graphics.g3d.decals.Decal: int value
com.badlogic.gdx.graphics.g3d.decals.Decal: float[] vertices
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.math.Vector3 position
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.math.Quaternion rotation
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.math.Vector2 scale
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.math.Vector2 transformationOffset
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.math.Vector2 dimensions
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.graphics.g3d.decals.DecalMaterial material
com.badlogic.gdx.graphics.g3d.decals.Decal: boolean updated
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.math.Vector3 dir
com.badlogic.gdx.graphics.g3d.decals.Decal: int X1
com.badlogic.gdx.graphics.g3d.decals.Decal: int Y1
com.badlogic.gdx.graphics.g3d.decals.Decal: int Z1
com.badlogic.gdx.graphics.g3d.decals.Decal: int C1
com.badlogic.gdx.graphics.g3d.decals.Decal: int U1
com.badlogic.gdx.graphics.g3d.decals.Decal: int V1
com.badlogic.gdx.graphics.g3d.decals.Decal: int X2
com.badlogic.gdx.graphics.g3d.decals.Decal: int Y2
com.badlogic.gdx.graphics.g3d.decals.Decal: int Z2
com.badlogic.gdx.graphics.g3d.decals.Decal: int C2
com.badlogic.gdx.graphics.g3d.decals.Decal: int U2
com.badlogic.gdx.graphics.g3d.decals.Decal: int V2
com.badlogic.gdx.graphics.g3d.decals.Decal: int X3
com.badlogic.gdx.graphics.g3d.decals.Decal: int Y3
com.badlogic.gdx.graphics.g3d.decals.Decal: int Z3
com.badlogic.gdx.graphics.g3d.decals.Decal: int C3
com.badlogic.gdx.graphics.g3d.decals.Decal: int U3
com.badlogic.gdx.graphics.g3d.decals.Decal: int V3
com.badlogic.gdx.graphics.g3d.decals.Decal: int X4
com.badlogic.gdx.graphics.g3d.decals.Decal: int Y4
com.badlogic.gdx.graphics.g3d.decals.Decal: int Z4
com.badlogic.gdx.graphics.g3d.decals.Decal: int C4
com.badlogic.gdx.graphics.g3d.decals.Decal: int U4
com.badlogic.gdx.graphics.g3d.decals.Decal: int V4
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.math.Quaternion rotator
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.math.Vector3 X_AXIS
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.math.Vector3 Y_AXIS
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.math.Vector3 Z_AXIS
com.badlogic.gdx.graphics.g3d.decals.Decal: Decal()
com.badlogic.gdx.graphics.g3d.decals.Decal: void setColor(float,float,float,float)
com.badlogic.gdx.graphics.g3d.decals.Decal: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.decals.Decal: void setColor(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: void setRotationX(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: void setRotationY(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: void setRotationZ(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: void rotateX(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: void rotateY(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: void rotateZ(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: void setRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.math.Quaternion getRotation()
com.badlogic.gdx.graphics.g3d.decals.Decal: void translateX(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: void setX(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: float getX()
com.badlogic.gdx.graphics.g3d.decals.Decal: void translateY(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: void setY(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: float getY()
com.badlogic.gdx.graphics.g3d.decals.Decal: void translateZ(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: void setZ(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: float getZ()
com.badlogic.gdx.graphics.g3d.decals.Decal: void translate(float,float,float)
com.badlogic.gdx.graphics.g3d.decals.Decal: void setPosition(float,float,float)
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.math.Vector3 getPosition()
com.badlogic.gdx.graphics.g3d.decals.Decal: void setScaleX(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: float getScaleX()
com.badlogic.gdx.graphics.g3d.decals.Decal: void setScaleY(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: float getScaleY()
com.badlogic.gdx.graphics.g3d.decals.Decal: void setScale(float,float)
com.badlogic.gdx.graphics.g3d.decals.Decal: void setScale(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: void setWidth(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: float getWidth()
com.badlogic.gdx.graphics.g3d.decals.Decal: void setHeight(float)
com.badlogic.gdx.graphics.g3d.decals.Decal: float getHeight()
com.badlogic.gdx.graphics.g3d.decals.Decal: void setDimensions(float,float)
com.badlogic.gdx.graphics.g3d.decals.Decal: float[] getVertices()
com.badlogic.gdx.graphics.g3d.decals.Decal: void update()
com.badlogic.gdx.graphics.g3d.decals.Decal: void transformVertices()
com.badlogic.gdx.graphics.g3d.decals.Decal: void resetVertices()
com.badlogic.gdx.graphics.g3d.decals.Decal: void updateUVs()
com.badlogic.gdx.graphics.g3d.decals.Decal: void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion()
com.badlogic.gdx.graphics.g3d.decals.Decal: void setBlending(int,int)
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.graphics.g3d.decals.DecalMaterial getMaterial()
com.badlogic.gdx.graphics.g3d.decals.Decal: void lookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)
com.badlogic.gdx.graphics.g3d.decals.Decal: com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,int,int)
com.badlogic.gdx.graphics.g3d.decals.Decal: void <clinit>()
com.badlogic.gdx.graphics.g3d.decals.DecalBatch
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: int DEFAULT_SIZE
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: float[] vertices
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: com.badlogic.gdx.graphics.Mesh mesh
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: com.badlogic.gdx.utils.SortedIntList groupList
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: com.badlogic.gdx.graphics.g3d.decals.GroupStrategy groupStrategy
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: com.badlogic.gdx.utils.Pool groupPool
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: com.badlogic.gdx.utils.Array usedGroups
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: DecalBatch()
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: DecalBatch(com.badlogic.gdx.graphics.g3d.decals.GroupStrategy)
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: DecalBatch(int,com.badlogic.gdx.graphics.g3d.decals.GroupStrategy)
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: void setGroupStrategy(com.badlogic.gdx.graphics.g3d.decals.GroupStrategy)
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: void initialize(int)
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: int getSize()
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: void add(com.badlogic.gdx.graphics.g3d.decals.Decal)
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: void flush()
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: void render()
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: void flush(com.badlogic.gdx.graphics.glutils.ShaderProgram,int)
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: void clear()
com.badlogic.gdx.graphics.g3d.decals.DecalBatch: void dispose()
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1: com.badlogic.gdx.graphics.g3d.decals.DecalBatch this$0
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1: DecalBatch$1(com.badlogic.gdx.graphics.g3d.decals.DecalBatch,int)
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1: com.badlogic.gdx.utils.Array newObject()
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1: java.lang.Object newObject()
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial: int NO_BLEND
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial: com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial: int srcBlendFactor
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial: int dstBlendFactor
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial: DecalMaterial()
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial: void set()
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial: boolean isOpaque()
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial: int getSrcBlendFactor()
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial: int getDstBlendFactor()
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial: int hashCode()
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy: int GROUP_OPAQUE
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy: int GROUP_BLEND
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy: DefaultGroupStrategy()
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy: int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal)
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy: void beforeGroup(int,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy: void afterGroup(int)
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy: void beforeGroups()
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy: void afterGroups()
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy: com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int)
com.badlogic.gdx.graphics.g3d.decals.GroupPlug
com.badlogic.gdx.graphics.g3d.decals.GroupPlug: void beforeGroup(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.decals.GroupPlug: void afterGroup()
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy: com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int)
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy: int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal)
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy: void beforeGroup(int,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy: void afterGroup(int)
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy: void beforeGroups()
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy: void afterGroups()
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy: com.badlogic.gdx.utils.IntMap plugs
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy: PluggableGroupStrategy()
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy: void beforeGroup(int,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy: void afterGroup(int)
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy: void plugIn(com.badlogic.gdx.graphics.g3d.decals.GroupPlug,int)
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy: com.badlogic.gdx.graphics.g3d.decals.GroupPlug unPlug(int)
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy: com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator comparator
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy: int GROUP_OPAQUE
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy: int GROUP_BLEND
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy: SimpleOrthoGroupStrategy()
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy: int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal)
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy: void beforeGroup(int,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy: void afterGroup(int)
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy: void beforeGroups()
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy: void afterGroups()
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy: com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int)
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator: com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy this$0
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator: SimpleOrthoGroupStrategy$Comparator(com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy)
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator: int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal)
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator: int compare(java.lang.Object,java.lang.Object)
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: float[] data
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: float clamp(float)
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: AmbientCubemap()
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: AmbientCubemap(float[])
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: AmbientCubemap(com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap)
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(float[])
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap)
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(float,float,float)
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: com.badlogic.gdx.graphics.Color getColor(com.badlogic.gdx.graphics.Color,int)
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap clear()
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap clamp()
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(float,float,float)
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(float,float,float,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,float,float,float)
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap: java.lang.String toString()
com.badlogic.gdx.graphics.g3d.environment.BaseLight
com.badlogic.gdx.graphics.g3d.environment.BaseLight: com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.graphics.g3d.environment.BaseLight: BaseLight()
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight: com.badlogic.gdx.math.Vector3 direction
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight: DirectionalLight()
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight: com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(com.badlogic.gdx.graphics.g3d.environment.DirectionalLight)
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight: com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight: com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(float,float,float,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight: com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(com.badlogic.gdx.graphics.Color,float,float,float)
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight: com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight: boolean equals(com.badlogic.gdx.graphics.g3d.environment.DirectionalLight)
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: com.badlogic.gdx.graphics.glutils.FrameBuffer fbo
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: com.badlogic.gdx.graphics.Camera cam
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: float halfDepth
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: float halfHeight
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: com.badlogic.gdx.math.Vector3 tmpV
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor textureDesc
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: DirectionalShadowLight(int,int,float,float,float,float)
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: void update(com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: void update(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: void begin(com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: void begin(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: void begin()
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: void end()
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: com.badlogic.gdx.graphics.glutils.FrameBuffer getFrameBuffer()
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: com.badlogic.gdx.graphics.Camera getCamera()
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: com.badlogic.gdx.math.Matrix4 getProjViewTrans()
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor getDepthMap()
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight: void dispose()
com.badlogic.gdx.graphics.g3d.environment.PointLight
com.badlogic.gdx.graphics.g3d.environment.PointLight: com.badlogic.gdx.math.Vector3 position
com.badlogic.gdx.graphics.g3d.environment.PointLight: float intensity
com.badlogic.gdx.graphics.g3d.environment.PointLight: PointLight()
com.badlogic.gdx.graphics.g3d.environment.PointLight: com.badlogic.gdx.graphics.g3d.environment.PointLight set(com.badlogic.gdx.graphics.g3d.environment.PointLight)
com.badlogic.gdx.graphics.g3d.environment.PointLight: com.badlogic.gdx.graphics.g3d.environment.PointLight set(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.graphics.g3d.environment.PointLight: com.badlogic.gdx.graphics.g3d.environment.PointLight set(float,float,float,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.graphics.g3d.environment.PointLight: com.badlogic.gdx.graphics.g3d.environment.PointLight set(com.badlogic.gdx.graphics.Color,float,float,float,float)
com.badlogic.gdx.graphics.g3d.environment.PointLight: com.badlogic.gdx.graphics.g3d.environment.PointLight set(float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.environment.PointLight: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.g3d.environment.PointLight: boolean equals(com.badlogic.gdx.graphics.g3d.environment.PointLight)
com.badlogic.gdx.graphics.g3d.environment.ShadowMap
com.badlogic.gdx.graphics.g3d.environment.ShadowMap: com.badlogic.gdx.math.Matrix4 getProjViewTrans()
com.badlogic.gdx.graphics.g3d.environment.ShadowMap: com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor getDepthMap()
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics: float[] coeff
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics: float[] data
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics: float clamp(float)
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics: SphericalHarmonics()
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics: SphericalHarmonics(float[])
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics: com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(float[])
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics: com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap)
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics: com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics: com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(float,float,float)
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics: void <clinit>()
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: short VERSION_HI
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: short VERSION_LO
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: com.badlogic.gdx.utils.BaseJsonReader reader
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: com.badlogic.gdx.math.Quaternion tempQ
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: G3dModelLoader(com.badlogic.gdx.utils.BaseJsonReader)
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: G3dModelLoader(com.badlogic.gdx.utils.BaseJsonReader,com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters)
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: com.badlogic.gdx.graphics.g3d.model.data.ModelData parseModel(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: void parseMeshes(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: int parseType(java.lang.String)
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: com.badlogic.gdx.graphics.VertexAttribute[] parseAttributes(com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: void parseMaterials(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue,java.lang.String)
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: int parseTextureUsage(java.lang.String)
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: com.badlogic.gdx.graphics.Color parseColor(com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: com.badlogic.gdx.math.Vector2 readVector2(com.badlogic.gdx.utils.JsonValue,float,float)
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: com.badlogic.gdx.utils.Array parseNodes(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: com.badlogic.gdx.graphics.g3d.model.data.ModelNode parseNodesRecursively(com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader: void parseAnimations(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.graphics.g3d.loader.MtlLoader
com.badlogic.gdx.graphics.g3d.loader.MtlLoader: com.badlogic.gdx.utils.Array materials
com.badlogic.gdx.graphics.g3d.loader.MtlLoader: MtlLoader()
com.badlogic.gdx.graphics.g3d.loader.MtlLoader: void load(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g3d.loader.MtlLoader: com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial getMaterial(java.lang.String)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: boolean logWarning
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: com.badlogic.gdx.utils.FloatArray verts
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: com.badlogic.gdx.utils.FloatArray norms
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: com.badlogic.gdx.utils.FloatArray uvs
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: com.badlogic.gdx.utils.Array groups
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: ObjLoader()
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: ObjLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: com.badlogic.gdx.graphics.g3d.Model loadObj(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: com.badlogic.gdx.graphics.g3d.Model loadObj(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group setActiveGroup(java.lang.String)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: int getIndex(java.lang.String,int)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader: void <clinit>()
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group: java.lang.String name
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group: java.lang.String materialName
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group: com.badlogic.gdx.utils.Array faces
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group: int numFaces
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group: boolean hasNorms
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group: boolean hasUVs
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group: com.badlogic.gdx.graphics.g3d.Material mat
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group: com.badlogic.gdx.graphics.g3d.loader.ObjLoader this$0
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group: ObjLoader$Group(com.badlogic.gdx.graphics.g3d.loader.ObjLoader,java.lang.String)
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters: boolean flipV
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters: ObjLoader$ObjLoaderParameters()
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters: ObjLoader$ObjLoaderParameters(boolean)
com.badlogic.gdx.graphics.g3d.model.Animation
com.badlogic.gdx.graphics.g3d.model.Animation: java.lang.String id
com.badlogic.gdx.graphics.g3d.model.Animation: float duration
com.badlogic.gdx.graphics.g3d.model.Animation: com.badlogic.gdx.utils.Array nodeAnimations
com.badlogic.gdx.graphics.g3d.model.Animation: Animation()
com.badlogic.gdx.graphics.g3d.model.MeshPart
com.badlogic.gdx.graphics.g3d.model.MeshPart: java.lang.String id
com.badlogic.gdx.graphics.g3d.model.MeshPart: int primitiveType
com.badlogic.gdx.graphics.g3d.model.MeshPart: int indexOffset
com.badlogic.gdx.graphics.g3d.model.MeshPart: int numVertices
com.badlogic.gdx.graphics.g3d.model.MeshPart: com.badlogic.gdx.graphics.Mesh mesh
com.badlogic.gdx.graphics.g3d.model.MeshPart: MeshPart()
com.badlogic.gdx.graphics.g3d.model.MeshPart: MeshPart(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,int,int)
com.badlogic.gdx.graphics.g3d.model.MeshPart: MeshPart(com.badlogic.gdx.graphics.g3d.model.MeshPart)
com.badlogic.gdx.graphics.g3d.model.MeshPart: boolean equals(com.badlogic.gdx.graphics.g3d.model.MeshPart)
com.badlogic.gdx.graphics.g3d.model.MeshPart: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.g3d.model.Node
com.badlogic.gdx.graphics.g3d.model.Node: java.lang.String id
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.graphics.g3d.model.Node parent
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.utils.Array children
com.badlogic.gdx.graphics.g3d.model.Node: boolean isAnimated
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.math.Vector3 translation
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.math.Quaternion rotation
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.math.Vector3 scale
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.math.Matrix4 localTransform
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.math.Matrix4 globalTransform
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.utils.Array parts
com.badlogic.gdx.graphics.g3d.model.Node: Node()
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.math.Matrix4 calculateLocalTransform()
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.math.Matrix4 calculateWorldTransform()
com.badlogic.gdx.graphics.g3d.model.Node: void calculateTransforms(boolean)
com.badlogic.gdx.graphics.g3d.model.Node: void calculateBoneTransforms(boolean)
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,boolean)
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,boolean)
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.graphics.g3d.model.Node getChild(java.lang.String,boolean,boolean)
com.badlogic.gdx.graphics.g3d.model.Node: com.badlogic.gdx.graphics.g3d.model.Node getNode(com.badlogic.gdx.utils.Array,java.lang.String,boolean,boolean)
com.badlogic.gdx.graphics.g3d.model.NodeAnimation
com.badlogic.gdx.graphics.g3d.model.NodeAnimation: com.badlogic.gdx.graphics.g3d.model.Node node
com.badlogic.gdx.graphics.g3d.model.NodeAnimation: com.badlogic.gdx.utils.Array keyframes
com.badlogic.gdx.graphics.g3d.model.NodeAnimation: NodeAnimation()
com.badlogic.gdx.graphics.g3d.model.NodeKeyframe
com.badlogic.gdx.graphics.g3d.model.NodeKeyframe: float keytime
com.badlogic.gdx.graphics.g3d.model.NodeKeyframe: com.badlogic.gdx.math.Vector3 translation
com.badlogic.gdx.graphics.g3d.model.NodeKeyframe: com.badlogic.gdx.math.Vector3 scale
com.badlogic.gdx.graphics.g3d.model.NodeKeyframe: com.badlogic.gdx.math.Quaternion rotation
com.badlogic.gdx.graphics.g3d.model.NodeKeyframe: NodeKeyframe()
com.badlogic.gdx.graphics.g3d.model.NodePart
com.badlogic.gdx.graphics.g3d.model.NodePart: com.badlogic.gdx.graphics.g3d.model.MeshPart meshPart
com.badlogic.gdx.graphics.g3d.model.NodePart: com.badlogic.gdx.graphics.g3d.Material material
com.badlogic.gdx.graphics.g3d.model.NodePart: com.badlogic.gdx.utils.ArrayMap invBoneBindTransforms
com.badlogic.gdx.graphics.g3d.model.NodePart: com.badlogic.gdx.math.Matrix4[] bones
com.badlogic.gdx.graphics.g3d.model.NodePart: boolean enabled
com.badlogic.gdx.graphics.g3d.model.NodePart: NodePart()
com.badlogic.gdx.graphics.g3d.model.NodePart: NodePart(com.badlogic.gdx.graphics.g3d.model.MeshPart,com.badlogic.gdx.graphics.g3d.Material)
com.badlogic.gdx.graphics.g3d.model.NodePart: com.badlogic.gdx.graphics.g3d.Renderable setRenderable(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation
com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation: java.lang.String id
com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation: com.badlogic.gdx.utils.Array nodeAnimations
com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation: ModelAnimation()
com.badlogic.gdx.graphics.g3d.model.data.ModelData
com.badlogic.gdx.graphics.g3d.model.data.ModelData: java.lang.String id
com.badlogic.gdx.graphics.g3d.model.data.ModelData: short[] version
com.badlogic.gdx.graphics.g3d.model.data.ModelData: com.badlogic.gdx.utils.Array meshes
com.badlogic.gdx.graphics.g3d.model.data.ModelData: com.badlogic.gdx.utils.Array materials
com.badlogic.gdx.graphics.g3d.model.data.ModelData: com.badlogic.gdx.utils.Array nodes
com.badlogic.gdx.graphics.g3d.model.data.ModelData: com.badlogic.gdx.utils.Array animations
com.badlogic.gdx.graphics.g3d.model.data.ModelData: ModelData()
com.badlogic.gdx.graphics.g3d.model.data.ModelData: void addMesh(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh)
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial: java.lang.String id
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial: com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType type
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial: com.badlogic.gdx.graphics.Color ambient
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial: com.badlogic.gdx.graphics.Color diffuse
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial: com.badlogic.gdx.graphics.Color specular
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial: com.badlogic.gdx.graphics.Color emissive
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial: com.badlogic.gdx.graphics.Color reflection
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial: float shininess
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial: float opacity
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial: com.badlogic.gdx.utils.Array textures
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial: ModelMaterial()
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType: com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType Lambert
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType: com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType Phong
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType: com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType[] $VALUES
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType: com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType[] values()
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType: com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType valueOf(java.lang.String)
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType: ModelMaterial$MaterialType(java.lang.String,int)
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType: void <clinit>()
com.badlogic.gdx.graphics.g3d.model.data.ModelMesh
com.badlogic.gdx.graphics.g3d.model.data.ModelMesh: java.lang.String id
com.badlogic.gdx.graphics.g3d.model.data.ModelMesh: com.badlogic.gdx.graphics.VertexAttribute[] attributes
com.badlogic.gdx.graphics.g3d.model.data.ModelMesh: float[] vertices
com.badlogic.gdx.graphics.g3d.model.data.ModelMesh: com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[] parts
com.badlogic.gdx.graphics.g3d.model.data.ModelMesh: ModelMesh()
com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart
com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart: java.lang.String id
com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart: short[] indices
com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart: int primitiveType
com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart: ModelMeshPart()
com.badlogic.gdx.graphics.g3d.model.data.ModelNode
com.badlogic.gdx.graphics.g3d.model.data.ModelNode: java.lang.String id
com.badlogic.gdx.graphics.g3d.model.data.ModelNode: int boneId
com.badlogic.gdx.graphics.g3d.model.data.ModelNode: com.badlogic.gdx.math.Vector3 translation
com.badlogic.gdx.graphics.g3d.model.data.ModelNode: com.badlogic.gdx.math.Quaternion rotation
com.badlogic.gdx.graphics.g3d.model.data.ModelNode: com.badlogic.gdx.math.Vector3 scale
com.badlogic.gdx.graphics.g3d.model.data.ModelNode: java.lang.String meshId
com.badlogic.gdx.graphics.g3d.model.data.ModelNode: com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[] parts
com.badlogic.gdx.graphics.g3d.model.data.ModelNode: com.badlogic.gdx.graphics.g3d.model.data.ModelNode[] children
com.badlogic.gdx.graphics.g3d.model.data.ModelNode: ModelNode()
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation: java.lang.String nodeId
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation: com.badlogic.gdx.utils.Array keyframes
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation: ModelNodeAnimation()
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe: float keytime
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe: com.badlogic.gdx.math.Vector3 translation
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe: com.badlogic.gdx.math.Vector3 scale
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe: com.badlogic.gdx.math.Quaternion rotation
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe: ModelNodeKeyframe()
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart: java.lang.String materialId
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart: java.lang.String meshPartId
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart: com.badlogic.gdx.utils.ArrayMap bones
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart: int[][] uvMapping
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart: ModelNodePart()
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: int USAGE_UNKNOWN
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: int USAGE_NONE
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: int USAGE_DIFFUSE
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: int USAGE_EMISSIVE
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: int USAGE_AMBIENT
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: int USAGE_SPECULAR
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: int USAGE_SHININESS
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: int USAGE_NORMAL
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: int USAGE_BUMP
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: int USAGE_TRANSPARENCY
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: int USAGE_REFLECTION
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: java.lang.String id
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: java.lang.String fileName
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: com.badlogic.gdx.math.Vector2 uvTranslation
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: com.badlogic.gdx.math.Vector2 uvScaling
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: int usage
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture: ModelTexture()
com.badlogic.gdx.graphics.g3d.shaders.BaseShader
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: com.badlogic.gdx.utils.Array uniforms
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: com.badlogic.gdx.utils.Array validators
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: com.badlogic.gdx.utils.Array setters
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: int[] locations
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: com.badlogic.gdx.utils.IntArray globalUniforms
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: com.badlogic.gdx.utils.IntArray localUniforms
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: com.badlogic.gdx.utils.IntIntMap attributes
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: com.badlogic.gdx.graphics.glutils.ShaderProgram program
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: com.badlogic.gdx.graphics.g3d.utils.RenderContext context
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: com.badlogic.gdx.graphics.Camera camera
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: com.badlogic.gdx.graphics.Mesh currentMesh
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: com.badlogic.gdx.utils.IntArray tempArray
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: com.badlogic.gdx.graphics.g3d.Attributes combinedAttributes
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: BaseShader()
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: int register(java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: int register(java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: int register(java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: int register(java.lang.String)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: int register(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: int register(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: int getUniformID(java.lang.String)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: java.lang.String getUniformAlias(int)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: void init(com.badlogic.gdx.graphics.glutils.ShaderProgram,com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: int[] getAttributeLocations(com.badlogic.gdx.graphics.VertexAttributes)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: void render(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: void render(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: void end()
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: void dispose()
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean has(int)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: int loc(int)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean set(int,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean set(int,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean set(int,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean set(int,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean set(int,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean set(int,float)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean set(int,float,float)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean set(int,float,float,float)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean set(int,float,float,float,float)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean set(int,int)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean set(int,int,int)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean set(int,int,int,int)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean set(int,int,int,int,int)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean set(int,com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader: boolean set(int,com.badlogic.gdx.graphics.GLTexture)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform: java.lang.String alias
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform: long materialMask
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform: long environmentMask
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform: long overallMask
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform: BaseShader$Uniform(java.lang.String,long,long,long)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform: BaseShader$Uniform(java.lang.String,long,long)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform: BaseShader$Uniform(java.lang.String,long)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform: BaseShader$Uniform(java.lang.String)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform: boolean validate(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator: boolean validate(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: java.lang.String defaultVertexShader
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: java.lang.String defaultFragmentShader
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: long implementedFlags
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int defaultCullFace
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int defaultDepthFunc
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_projTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_viewTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_projViewTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_cameraPosition
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_cameraDirection
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_cameraUp
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_time
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_worldTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_viewWorldTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_projViewWorldTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_normalMatrix
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_bones
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_shininess
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_opacity
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_diffuseColor
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_diffuseTexture
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_specularColor
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_specularTexture
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_emissiveColor
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_reflectionColor
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_normalTexture
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_alphaTest
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_ambientCubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_environmentCubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_dirLights0color
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_dirLights0direction
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_dirLights1color
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_pointLights0color
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_pointLights0position
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_pointLights0intensity
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_pointLights1color
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_fogColor
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_shadowMapProjViewTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_shadowTexture
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int u_shadowPCFOffset
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int dirLightsLoc
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int dirLightsColorOffset
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int dirLightsDirectionOffset
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int dirLightsSize
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int pointLightsLoc
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int pointLightsColorOffset
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int pointLightsPositionOffset
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int pointLightsSize
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: boolean lighting
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: boolean environmentCubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: boolean shadowMap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: boolean fog
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap ambientCubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: com.badlogic.gdx.graphics.g3d.environment.DirectionalLight[] directionalLights
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: com.badlogic.gdx.graphics.g3d.environment.PointLight[] pointLights
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: com.badlogic.gdx.graphics.g3d.Renderable renderable
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: long materialMask
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: long vertexMask
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config config
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: long optionalAttributes
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: com.badlogic.gdx.math.Matrix3 normalMatrix
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: com.badlogic.gdx.graphics.Camera camera
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: float time
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: boolean lightsSet
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: com.badlogic.gdx.graphics.g3d.Material currentMaterial
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: com.badlogic.gdx.math.Vector3 tmpV1
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: java.lang.String getDefaultVertexShader()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: java.lang.String getDefaultFragmentShader()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: DefaultShader(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: DefaultShader(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: DefaultShader(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config,java.lang.String)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: DefaultShader(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config,java.lang.String,java.lang.String,java.lang.String)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: DefaultShader(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config,com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: void init()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: boolean and(long,long)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: boolean or(long,long)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: java.lang.String createPrefix(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int compareTo(com.badlogic.gdx.graphics.g3d.Shader)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: boolean equals(com.badlogic.gdx.graphics.g3d.shaders.DefaultShader)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: void render(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: void end()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: void bindMaterial(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: void bindLights(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: void dispose()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int getDefaultCullFace()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: void setDefaultCullFace(int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: int getDefaultDepthFunc()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: void setDefaultDepthFunc(int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader: void <clinit>()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config: java.lang.String vertexShader
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config: java.lang.String fragmentShader
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config: int numDirectionalLights
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config: int numPointLights
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config: int numSpotLights
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config: int numBones
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config: boolean ignoreUnimplemented
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config: int defaultCullFace
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config: int defaultDepthFunc
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config: DefaultShader$Config()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config: DefaultShader$Config(java.lang.String,java.lang.String)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform projTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform viewTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform projViewTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform cameraPosition
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform cameraDirection
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform cameraUp
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform worldTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform viewWorldTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform projViewWorldTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform normalMatrix
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform bones
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform shininess
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform opacity
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform diffuseColor
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform diffuseTexture
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform specularColor
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform specularTexture
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform emissiveColor
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform reflectionColor
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform normalTexture
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform alphaTest
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform ambientCube
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform dirLights
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform pointLights
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform environmentCubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: DefaultShader$Inputs()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs: void <clinit>()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter projTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter viewTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter projViewTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraPosition
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraDirection
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraUp
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter worldTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter viewWorldTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter projViewWorldTrans
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter normalMatrix
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter shininess
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter diffuseColor
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter diffuseTexture
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter specularColor
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter specularTexture
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter emissiveColor
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter reflectionColor
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter normalTexture
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter environmentCubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: DefaultShader$Setters()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters: void <clinit>()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$1
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$1: DefaultShader$Setters$1()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$1: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$1: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$10
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$10: com.badlogic.gdx.math.Matrix3 tmpM
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$10: DefaultShader$Setters$10()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$10: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$10: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$11
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$11: DefaultShader$Setters$11()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$11: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$11: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$12
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$12: DefaultShader$Setters$12()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$12: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$12: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$13
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$13: DefaultShader$Setters$13()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$13: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$13: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$14
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$14: DefaultShader$Setters$14()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$14: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$14: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$15
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$15: DefaultShader$Setters$15()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$15: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$15: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$16
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$16: DefaultShader$Setters$16()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$16: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$16: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$17
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$17: DefaultShader$Setters$17()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$17: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$17: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$18
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$18: DefaultShader$Setters$18()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$18: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$18: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$19
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$19: DefaultShader$Setters$19()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$19: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$19: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$2
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$2: DefaultShader$Setters$2()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$2: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$2: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$3
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$3: DefaultShader$Setters$3()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$3: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$3: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$4
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$4: DefaultShader$Setters$4()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$4: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$4: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$5
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$5: DefaultShader$Setters$5()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$5: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$5: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$6
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$6: DefaultShader$Setters$6()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$6: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$6: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$7
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$7: DefaultShader$Setters$7()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$7: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$7: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$8
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$8: com.badlogic.gdx.math.Matrix4 temp
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$8: DefaultShader$Setters$8()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$8: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$8: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$9
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$9: com.badlogic.gdx.math.Matrix4 temp
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$9: DefaultShader$Setters$9()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$9: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$9: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap: float[] ones
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap: com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap cacheAmbientCubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap: com.badlogic.gdx.math.Vector3 tmpV1
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap: int dirLightsOffset
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap: int pointLightsOffset
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap: DefaultShader$Setters$ACubemap(int,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap: void <clinit>()
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones: com.badlogic.gdx.math.Matrix4 idtMatrix
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones: float[] bones
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones: DefaultShader$Setters$Bones(int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones: boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones: void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones: void <clinit>()
com.badlogic.gdx.graphics.g3d.shaders.DepthShader
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: java.lang.String defaultVertexShader
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: java.lang.String defaultFragmentShader
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: int numBones
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: int weights
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: java.lang.String getDefaultVertexShader()
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: java.lang.String getDefaultFragmentShader()
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: java.lang.String createPrefix(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config)
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: DepthShader(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: DepthShader(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config)
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: DepthShader(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config,java.lang.String)
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: DepthShader(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config,java.lang.String,java.lang.String,java.lang.String)
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: DepthShader(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config,com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext)
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: void end()
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.shaders.DepthShader: void <clinit>()
com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config
com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config: boolean depthBufferOnly
com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config: DepthShader$Config()
com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config: DepthShader$Config(java.lang.String,java.lang.String)
com.badlogic.gdx.graphics.g3d.utils.AnimationController
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.utils.Pool animationPool
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc current
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queued
com.badlogic.gdx.graphics.g3d.utils.AnimationController: float queuedTransitionTime
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc previous
com.badlogic.gdx.graphics.g3d.utils.AnimationController: float transitionCurrentTime
com.badlogic.gdx.graphics.g3d.utils.AnimationController: float transitionTargetTime
com.badlogic.gdx.graphics.g3d.utils.AnimationController: boolean inAction
com.badlogic.gdx.graphics.g3d.utils.AnimationController: boolean paused
com.badlogic.gdx.graphics.g3d.utils.AnimationController: boolean allowSameAnimation
com.badlogic.gdx.graphics.g3d.utils.AnimationController: boolean justChangedAnimation
com.badlogic.gdx.graphics.g3d.utils.AnimationController: boolean updating
com.badlogic.gdx.graphics.g3d.utils.AnimationController: AnimationController(com.badlogic.gdx.graphics.g3d.ModelInstance)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc obtain(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc obtain(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc obtain(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: void update(float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,int)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,int,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,int,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc,float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController$1
com.badlogic.gdx.graphics.g3d.utils.AnimationController$1: com.badlogic.gdx.graphics.g3d.utils.AnimationController this$0
com.badlogic.gdx.graphics.g3d.utils.AnimationController$1: AnimationController$1(com.badlogic.gdx.graphics.g3d.utils.AnimationController)
com.badlogic.gdx.graphics.g3d.utils.AnimationController$1: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc newObject()
com.badlogic.gdx.graphics.g3d.utils.AnimationController$1: java.lang.Object newObject()
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc: com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener listener
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc: com.badlogic.gdx.graphics.g3d.model.Animation animation
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc: float speed
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc: float time
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc: float offset
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc: float duration
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc: int loopCount
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc: AnimationController$AnimationDesc()
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc: float update(float)
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener: void onEnd(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc)
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener: void onLoop(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController: com.badlogic.gdx.utils.Pool transformPool
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController: com.badlogic.gdx.utils.ObjectMap transforms
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController: boolean applying
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController: com.badlogic.gdx.graphics.g3d.ModelInstance target
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController: com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform tmpT
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController: BaseAnimationController(com.badlogic.gdx.graphics.g3d.ModelInstance)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController: void begin()
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController: void apply(com.badlogic.gdx.graphics.g3d.model.Animation,float,float)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController: void end()
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController: void applyAnimation(com.badlogic.gdx.graphics.g3d.model.Animation,float)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController: void applyAnimations(com.badlogic.gdx.graphics.g3d.model.Animation,float,com.badlogic.gdx.graphics.g3d.model.Animation,float,float)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController: void applyAnimation(com.badlogic.gdx.utils.ObjectMap,com.badlogic.gdx.utils.Pool,float,com.badlogic.gdx.graphics.g3d.model.Animation,float)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController: void removeAnimation(com.badlogic.gdx.graphics.g3d.model.Animation)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController: void <clinit>()
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1: com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController this$0
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1: BaseAnimationController$1(com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1: com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform newObject()
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1: java.lang.Object newObject()
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform: com.badlogic.gdx.math.Vector3 translation
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform: com.badlogic.gdx.math.Quaternion rotation
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform: com.badlogic.gdx.math.Vector3 scale
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform: BaseAnimationController$Transform()
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform: com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform idt()
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform: com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform: com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform set(com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform: com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform lerp(com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform,float)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform: com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform lerp(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform: com.badlogic.gdx.math.Matrix4 toMatrix4(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform: void reset()
com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider
com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider: com.badlogic.gdx.utils.Array shaders
com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider: BaseShaderProvider()
com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider: com.badlogic.gdx.graphics.g3d.Shader getShader(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider: com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider: void dispose()
com.badlogic.gdx.graphics.g3d.utils.CameraInputController
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: int rotateButton
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: float rotateAngle
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: int translateButton
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: float translateUnits
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: int forwardButton
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: int activateKey
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean activatePressed
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean alwaysScroll
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: float scrollFactor
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: float pinchZoomFactor
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean autoUpdate
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: com.badlogic.gdx.math.Vector3 target
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean translateTarget
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean forwardTarget
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean scrollTarget
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: int forwardKey
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean forwardPressed
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: int backwardKey
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean backwardPressed
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: int rotateRightKey
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean rotateRightPressed
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: int rotateLeftKey
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean rotateLeftPressed
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: com.badlogic.gdx.graphics.Camera camera
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: int button
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: float startX
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: float startY
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: com.badlogic.gdx.math.Vector3 tmpV1
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: com.badlogic.gdx.math.Vector3 tmpV2
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener gestureListener
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: int touched
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean multiTouch
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: CameraInputController(com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener,com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: CameraInputController(com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: void update()
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean touchDown(int,int,int,int)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean touchUp(int,int,int,int)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean process(float,float,int)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean touchDragged(int,int,int)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean scrolled(int)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean zoom(float)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean pinchZoom(float)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean keyDown(int)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController: boolean keyUp(int)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener: com.badlogic.gdx.graphics.g3d.utils.CameraInputController controller
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener: float previousZoom
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener: CameraInputController$CameraGestureListener()
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener: boolean touchDown(float,float,int,int)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener: boolean tap(float,float,int,int)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener: boolean longPress(float,float)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener: boolean fling(float,float,int)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener: boolean pan(float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener: boolean zoom(float,float)
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener: boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter: com.badlogic.gdx.graphics.Camera camera
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter: com.badlogic.gdx.math.Vector3 tmpV1
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter: com.badlogic.gdx.math.Vector3 tmpV2
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter: DefaultRenderableSorter()
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter: void sort(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter: int compare(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter: int compare(java.lang.Object,java.lang.Object)
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider: com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config config
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider: DefaultShaderProvider(com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config)
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider: DefaultShaderProvider(java.lang.String,java.lang.String)
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider: DefaultShaderProvider(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider: DefaultShaderProvider()
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider: com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int ROUNDROBIN
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int WEIGHTED
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int MAX_GLES_UNITS
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int offset
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int count
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int reuseWeight
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: com.badlogic.gdx.graphics.GLTexture[] textures
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int[] weights
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int method
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: boolean reused
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int reuseCount
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int bindCount
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor tempDesc
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int currentTexture
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: DefaultTextureBinder(int)
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: DefaultTextureBinder(int,int)
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: DefaultTextureBinder(int,int,int)
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: DefaultTextureBinder(int,int,int,int)
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int getMaxTextureUnits()
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: void begin()
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: void end()
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int bind(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor)
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int bind(com.badlogic.gdx.graphics.GLTexture)
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int bindTexture(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor,boolean)
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int bindTextureRoundRobin(com.badlogic.gdx.graphics.GLTexture)
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int bindTextureWeighted(com.badlogic.gdx.graphics.GLTexture)
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int getBindCount()
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: int getReuseCount()
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder: void resetCounts()
com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider
com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider: com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config config
com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider: DepthShaderProvider(com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config)
com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider: DepthShaderProvider(java.lang.String,java.lang.String)
com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider: DepthShaderProvider(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider: DepthShaderProvider()
com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider: com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: com.badlogic.gdx.graphics.Camera camera
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: com.badlogic.gdx.utils.IntIntMap keys
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: int STRAFE_LEFT
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: int STRAFE_RIGHT
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: int FORWARD
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: int BACKWARD
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: int UP
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: int DOWN
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: float velocity
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: float degreesPerPixel
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: com.badlogic.gdx.math.Vector3 tmp
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: FirstPersonCameraController(com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: boolean keyDown(int)
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: boolean keyUp(int)
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: void setVelocity(float)
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: void setDegreesPerPixel(float)
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: boolean touchDragged(int,int,int)
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: void update()
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController: void update(float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp1
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp2
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp3
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp4
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp5
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp6
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp7
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp8
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Matrix4 matTmp1
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Vector3 tempV1
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Vector3 tempV2
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Vector3 tempV3
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Vector3 tempV4
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Vector3 tempV5
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Vector3 tempV6
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Vector3 tempV7
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Vector3 tempV8
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.VertexAttributes attributes
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.utils.FloatArray vertices
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.utils.ShortArray indices
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: int stride
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: short vindex
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: int istart
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: int posOffset
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: int posSize
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: int norOffset
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: int colOffset
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: int colSize
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: int cpOffset
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: int uvOffset
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.g3d.model.MeshPart part
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.utils.Array parts
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: boolean colorSet
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: int primitiveType
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: float uMin
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: float uMax
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: float vMin
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: float vMax
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: float[] vertex
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: boolean vertexTransformationEnabled
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Matrix4 positionTransform
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Matrix4 normalTransform
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Vector3 tempVTransformed
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.utils.Pool vectorPool
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.utils.Array vectorArray
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.utils.Pool matrices4Pool
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.utils.Array matrices4Array
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: short lastIndex
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.utils.ShortArray tmpIndices
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: MeshBuilder()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.VertexAttributes createAttributes(long)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void begin(long)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void begin(com.badlogic.gdx.graphics.VertexAttributes)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void begin(long,int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void begin(com.badlogic.gdx.graphics.VertexAttributes,int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void endpart()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.Mesh end()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.VertexAttributes getAttributes()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.graphics.g3d.model.MeshPart getMeshPart()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Vector3 tmp(float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Vector3 tmp(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Matrix4 tmp()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Matrix4 tmp(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void cleanup()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void setColor(float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void setUVRange(float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void setUVRange(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ensureVertices(int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ensureIndices(int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ensureCapacity(int,int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ensureTriangleIndices(int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ensureTriangles(int,int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ensureTriangles(int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ensureRectangleIndices(int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ensureRectangles(int,int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ensureRectangles(int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: short lastIndex()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void addVertex(float[],int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: short vertex(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: short vertex(float[])
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: short vertex(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void index(short)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void index(short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void index(short,short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void index(short,short,short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void index(short,short,short,short,short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void index(short,short,short,short,short,short,short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void line(short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void line(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void line(float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void triangle(short,short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void triangle(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void rect(short,short,short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void rect(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void rect(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void rect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void patch(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,int,int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void patch(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void patch(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void box(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void box(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void box(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void box(float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void box(float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void circle(float,int,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void circle(float,int,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ellipse(float,float,int,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ellipse(float,float,int,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ellipse(float,float,float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ellipse(float,float,float,float,int,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void cylinder(float,float,float,int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void cylinder(float,float,float,int,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void cylinder(float,float,float,int,float,float,boolean)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void cone(float,float,float,int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void cone(float,float,float,int,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void sphere(float,float,float,int,int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void sphere(float,float,float,int,int,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void capsule(float,float,int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void arrow(float,float,float,float,float,float,float,float,int)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: com.badlogic.gdx.math.Matrix4 getVertexTransform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void setVertexTransform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: boolean isVertexTransformationEnabled()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void setVertexTransformationEnabled(boolean)
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder: void <clinit>()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$1
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$1: MeshBuilder$1()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$1: com.badlogic.gdx.math.Vector3 newObject()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$1: java.lang.Object newObject()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$2
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$2: MeshBuilder$2()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$2: com.badlogic.gdx.math.Matrix4 newObject()
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$2: java.lang.Object newObject()
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: com.badlogic.gdx.graphics.g3d.model.MeshPart getMeshPart()
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: com.badlogic.gdx.graphics.VertexAttributes getAttributes()
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void setColor(float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void setUVRange(float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void setUVRange(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: short vertex(float[])
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: short vertex(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: short vertex(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: short lastIndex()
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void index(short)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void index(short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void index(short,short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void index(short,short,short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void index(short,short,short,short,short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void index(short,short,short,short,short,short,short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void line(short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void line(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void line(float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void triangle(short,short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void triangle(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void rect(short,short,short,short)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void rect(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void rect(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void rect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void patch(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,int,int)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void patch(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void patch(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,int)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void box(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void box(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void box(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void box(float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void box(float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void circle(float,int,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void circle(float,int,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void ellipse(float,float,int,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void ellipse(float,float,int,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void ellipse(float,float,float,float,int,float,float,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void ellipse(float,float,float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void cylinder(float,float,float,int)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void cylinder(float,float,float,int,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void cylinder(float,float,float,int,float,float,boolean)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void cone(float,float,float,int)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void cone(float,float,float,int,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void sphere(float,float,float,int,int)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void sphere(float,float,float,int,int,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void capsule(float,float,int)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void arrow(float,float,float,float,float,float,float,float,int)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: com.badlogic.gdx.math.Matrix4 getVertexTransform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void setVertexTransform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: boolean isVertexTransformationEnabled()
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder: void setVertexTransformationEnabled(boolean)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: com.badlogic.gdx.math.Vector3 position
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: boolean hasPosition
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: com.badlogic.gdx.math.Vector3 normal
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: boolean hasNormal
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: boolean hasColor
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: com.badlogic.gdx.math.Vector2 uv
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: boolean hasUV
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: MeshPartBuilder$VertexInfo()
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: void reset()
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo set(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setPos(float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setPos(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setNor(float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setNor(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setCol(float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setCol(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setUV(float,float)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setUV(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo lerp(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,float)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model model
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.model.Node node
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.utils.Array builders
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.math.Matrix4 tmpTransform
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: ModelBuilder()
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.utils.MeshBuilder getBuilder(com.badlogic.gdx.graphics.VertexAttributes)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: void begin()
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model end()
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: void endnode()
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.model.Node node(com.badlogic.gdx.graphics.g3d.model.Node)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.model.Node node()
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.model.Node node(java.lang.String,com.badlogic.gdx.graphics.g3d.Model)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: void manage(com.badlogic.gdx.utils.Disposable)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: void part(com.badlogic.gdx.graphics.g3d.model.MeshPart,com.badlogic.gdx.graphics.g3d.Material)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,int,int,com.badlogic.gdx.graphics.g3d.Material)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,com.badlogic.gdx.graphics.g3d.Material)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder part(java.lang.String,int,com.badlogic.gdx.graphics.VertexAttributes,com.badlogic.gdx.graphics.g3d.Material)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder part(java.lang.String,int,long,com.badlogic.gdx.graphics.g3d.Material)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createBox(float,float,float,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createBox(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createRect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createRect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,int,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float,float,float)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createCapsule(float,float,int,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createCapsule(float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: void rebuildReferences(com.badlogic.gdx.graphics.g3d.Model)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: void rebuildReferences(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.graphics.g3d.model.Node)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createFromMesh(com.badlogic.gdx.graphics.Mesh,int,com.badlogic.gdx.graphics.g3d.Material)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createFromMesh(com.badlogic.gdx.graphics.Mesh,int,int,int,com.badlogic.gdx.graphics.g3d.Material)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createFromMesh(float[],com.badlogic.gdx.graphics.VertexAttribute[],short[],int,com.badlogic.gdx.graphics.g3d.Material)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createXYZCoordinates(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createXYZCoordinates(float,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createArrow(float,float,float,float,float,float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createArrow(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder: com.badlogic.gdx.graphics.g3d.Model createLineGrid(int,int,float,float,com.badlogic.gdx.graphics.g3d.Material,long)
com.badlogic.gdx.graphics.g3d.utils.RenderContext
com.badlogic.gdx.graphics.g3d.utils.RenderContext: com.badlogic.gdx.graphics.g3d.utils.TextureBinder textureBinder
com.badlogic.gdx.graphics.g3d.utils.RenderContext: boolean blending
com.badlogic.gdx.graphics.g3d.utils.RenderContext: int blendSFactor
com.badlogic.gdx.graphics.g3d.utils.RenderContext: int blendDFactor
com.badlogic.gdx.graphics.g3d.utils.RenderContext: int depthFunc
com.badlogic.gdx.graphics.g3d.utils.RenderContext: float depthRangeNear
com.badlogic.gdx.graphics.g3d.utils.RenderContext: float depthRangeFar
com.badlogic.gdx.graphics.g3d.utils.RenderContext: boolean depthMask
com.badlogic.gdx.graphics.g3d.utils.RenderContext: int cullFace
com.badlogic.gdx.graphics.g3d.utils.RenderContext: RenderContext(com.badlogic.gdx.graphics.g3d.utils.TextureBinder)
com.badlogic.gdx.graphics.g3d.utils.RenderContext: void begin()
com.badlogic.gdx.graphics.g3d.utils.RenderContext: void end()
com.badlogic.gdx.graphics.g3d.utils.RenderContext: void setDepthMask(boolean)
com.badlogic.gdx.graphics.g3d.utils.RenderContext: void setDepthTest(int)
com.badlogic.gdx.graphics.g3d.utils.RenderContext: void setDepthTest(int,float,float)
com.badlogic.gdx.graphics.g3d.utils.RenderContext: void setBlending(boolean,int,int)
com.badlogic.gdx.graphics.g3d.utils.RenderContext: void setCullFace(int)
com.badlogic.gdx.graphics.g3d.utils.RenderableSorter
com.badlogic.gdx.graphics.g3d.utils.RenderableSorter: void sort(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.graphics.g3d.utils.ShaderProvider
com.badlogic.gdx.graphics.g3d.utils.ShaderProvider: com.badlogic.gdx.graphics.g3d.Shader getShader(com.badlogic.gdx.graphics.g3d.Renderable)
com.badlogic.gdx.graphics.g3d.utils.ShaderProvider: void dispose()
com.badlogic.gdx.graphics.g3d.utils.TextureBinder
com.badlogic.gdx.graphics.g3d.utils.TextureBinder: void begin()
com.badlogic.gdx.graphics.g3d.utils.TextureBinder: void end()
com.badlogic.gdx.graphics.g3d.utils.TextureBinder: int bind(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor)
com.badlogic.gdx.graphics.g3d.utils.TextureBinder: int bind(com.badlogic.gdx.graphics.GLTexture)
com.badlogic.gdx.graphics.g3d.utils.TextureBinder: int getBindCount()
com.badlogic.gdx.graphics.g3d.utils.TextureBinder: int getReuseCount()
com.badlogic.gdx.graphics.g3d.utils.TextureBinder: void resetCounts()
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor: com.badlogic.gdx.graphics.GLTexture texture
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor: com.badlogic.gdx.graphics.Texture$TextureFilter minFilter
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor: com.badlogic.gdx.graphics.Texture$TextureFilter magFilter
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor: com.badlogic.gdx.graphics.Texture$TextureWrap uWrap
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor: com.badlogic.gdx.graphics.Texture$TextureWrap vWrap
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor: TextureDescriptor(com.badlogic.gdx.graphics.GLTexture,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap)
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor: TextureDescriptor(com.badlogic.gdx.graphics.GLTexture)
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor: TextureDescriptor()
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor: void set(com.badlogic.gdx.graphics.GLTexture,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap)
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor: void set(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor)
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor: boolean equals(java.lang.Object)
com.badlogic.gdx.graphics.g3d.utils.TextureProvider
com.badlogic.gdx.graphics.g3d.utils.TextureProvider: com.badlogic.gdx.graphics.Texture load(java.lang.String)
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$AssetTextureProvider
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$AssetTextureProvider: com.badlogic.gdx.assets.AssetManager assetManager
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$AssetTextureProvider: TextureProvider$AssetTextureProvider(com.badlogic.gdx.assets.AssetManager)
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$AssetTextureProvider: com.badlogic.gdx.graphics.Texture load(java.lang.String)
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$FileTextureProvider
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$FileTextureProvider: TextureProvider$FileTextureProvider()
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$FileTextureProvider: com.badlogic.gdx.graphics.Texture load(java.lang.String)
com.badlogic.gdx.graphics.glutils.ETC1
com.badlogic.gdx.graphics.glutils.ETC1: int PKM_HEADER_SIZE
com.badlogic.gdx.graphics.glutils.ETC1: int ETC1_RGB8_OES
com.badlogic.gdx.graphics.glutils.ETC1: ETC1()
com.badlogic.gdx.graphics.glutils.ETC1: int getPixelSize(com.badlogic.gdx.graphics.Pixmap$Format)
com.badlogic.gdx.graphics.glutils.ETC1: com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.glutils.ETC1: com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.glutils.ETC1: com.badlogic.gdx.graphics.Pixmap decodeImage(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,com.badlogic.gdx.graphics.Pixmap$Format)
com.badlogic.gdx.graphics.glutils.ETC1: int getCompressedDataSize(int,int)
com.badlogic.gdx.graphics.glutils.ETC1: void formatHeader(java.nio.ByteBuffer,int,int,int)
com.badlogic.gdx.graphics.glutils.ETC1: int getWidthPKM(java.nio.ByteBuffer,int)
com.badlogic.gdx.graphics.glutils.ETC1: int getHeightPKM(java.nio.ByteBuffer,int)
com.badlogic.gdx.graphics.glutils.ETC1: boolean isValidPKM(java.nio.ByteBuffer,int)
com.badlogic.gdx.graphics.glutils.ETC1: void decodeImage(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ETC1: java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ETC1: java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ETC1: void <clinit>()
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: int width
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: int height
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: java.nio.ByteBuffer compressedData
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: int dataOffset
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: ETC1$ETC1Data(int,int,java.nio.ByteBuffer,int)
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: ETC1$ETC1Data(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: void checkNPOT()
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: boolean hasPKMHeader()
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: void write(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: void dispose()
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data: java.lang.String toString()
com.badlogic.gdx.graphics.glutils.ETC1TextureData
com.badlogic.gdx.graphics.glutils.ETC1TextureData: com.badlogic.gdx.files.FileHandle file
com.badlogic.gdx.graphics.glutils.ETC1TextureData: com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data data
com.badlogic.gdx.graphics.glutils.ETC1TextureData: boolean useMipMaps
com.badlogic.gdx.graphics.glutils.ETC1TextureData: int width
com.badlogic.gdx.graphics.glutils.ETC1TextureData: int height
com.badlogic.gdx.graphics.glutils.ETC1TextureData: boolean isPrepared
com.badlogic.gdx.graphics.glutils.ETC1TextureData: ETC1TextureData(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.glutils.ETC1TextureData: ETC1TextureData(com.badlogic.gdx.files.FileHandle,boolean)
com.badlogic.gdx.graphics.glutils.ETC1TextureData: ETC1TextureData(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,boolean)
com.badlogic.gdx.graphics.glutils.ETC1TextureData: com.badlogic.gdx.graphics.TextureData$TextureDataType getType()
com.badlogic.gdx.graphics.glutils.ETC1TextureData: boolean isPrepared()
com.badlogic.gdx.graphics.glutils.ETC1TextureData: void prepare()
com.badlogic.gdx.graphics.glutils.ETC1TextureData: void consumeCustomData(int)
com.badlogic.gdx.graphics.glutils.ETC1TextureData: com.badlogic.gdx.graphics.Pixmap consumePixmap()
com.badlogic.gdx.graphics.glutils.ETC1TextureData: boolean disposePixmap()
com.badlogic.gdx.graphics.glutils.ETC1TextureData: int getWidth()
com.badlogic.gdx.graphics.glutils.ETC1TextureData: int getHeight()
com.badlogic.gdx.graphics.glutils.ETC1TextureData: com.badlogic.gdx.graphics.Pixmap$Format getFormat()
com.badlogic.gdx.graphics.glutils.ETC1TextureData: boolean useMipMaps()
com.badlogic.gdx.graphics.glutils.ETC1TextureData: boolean isManaged()
com.badlogic.gdx.graphics.glutils.FileTextureData
com.badlogic.gdx.graphics.glutils.FileTextureData: boolean copyToPOT
com.badlogic.gdx.graphics.glutils.FileTextureData: com.badlogic.gdx.files.FileHandle file
com.badlogic.gdx.graphics.glutils.FileTextureData: int width
com.badlogic.gdx.graphics.glutils.FileTextureData: int height
com.badlogic.gdx.graphics.glutils.FileTextureData: com.badlogic.gdx.graphics.Pixmap$Format format
com.badlogic.gdx.graphics.glutils.FileTextureData: com.badlogic.gdx.graphics.Pixmap pixmap
com.badlogic.gdx.graphics.glutils.FileTextureData: boolean useMipMaps
com.badlogic.gdx.graphics.glutils.FileTextureData: boolean isPrepared
com.badlogic.gdx.graphics.glutils.FileTextureData: FileTextureData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean)
com.badlogic.gdx.graphics.glutils.FileTextureData: boolean isPrepared()
com.badlogic.gdx.graphics.glutils.FileTextureData: void prepare()
com.badlogic.gdx.graphics.glutils.FileTextureData: com.badlogic.gdx.graphics.Pixmap ensurePot(com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.glutils.FileTextureData: com.badlogic.gdx.graphics.Pixmap consumePixmap()
com.badlogic.gdx.graphics.glutils.FileTextureData: boolean disposePixmap()
com.badlogic.gdx.graphics.glutils.FileTextureData: int getWidth()
com.badlogic.gdx.graphics.glutils.FileTextureData: int getHeight()
com.badlogic.gdx.graphics.glutils.FileTextureData: com.badlogic.gdx.graphics.Pixmap$Format getFormat()
com.badlogic.gdx.graphics.glutils.FileTextureData: boolean useMipMaps()
com.badlogic.gdx.graphics.glutils.FileTextureData: boolean isManaged()
com.badlogic.gdx.graphics.glutils.FileTextureData: com.badlogic.gdx.files.FileHandle getFileHandle()
com.badlogic.gdx.graphics.glutils.FileTextureData: com.badlogic.gdx.graphics.TextureData$TextureDataType getType()
com.badlogic.gdx.graphics.glutils.FileTextureData: void consumeCustomData(int)
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer: FloatFrameBuffer(int,int,boolean)
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer: void setupTexture()
com.badlogic.gdx.graphics.glutils.FloatTextureData
com.badlogic.gdx.graphics.glutils.FloatTextureData: int width
com.badlogic.gdx.graphics.glutils.FloatTextureData: int height
com.badlogic.gdx.graphics.glutils.FloatTextureData: boolean isPrepared
com.badlogic.gdx.graphics.glutils.FloatTextureData: java.nio.FloatBuffer buffer
com.badlogic.gdx.graphics.glutils.FloatTextureData: FloatTextureData(int,int)
com.badlogic.gdx.graphics.glutils.FloatTextureData: com.badlogic.gdx.graphics.TextureData$TextureDataType getType()
com.badlogic.gdx.graphics.glutils.FloatTextureData: boolean isPrepared()
com.badlogic.gdx.graphics.glutils.FloatTextureData: void prepare()
com.badlogic.gdx.graphics.glutils.FloatTextureData: void consumeCustomData(int)
com.badlogic.gdx.graphics.glutils.FloatTextureData: com.badlogic.gdx.graphics.Pixmap consumePixmap()
com.badlogic.gdx.graphics.glutils.FloatTextureData: boolean disposePixmap()
com.badlogic.gdx.graphics.glutils.FloatTextureData: int getWidth()
com.badlogic.gdx.graphics.glutils.FloatTextureData: int getHeight()
com.badlogic.gdx.graphics.glutils.FloatTextureData: com.badlogic.gdx.graphics.Pixmap$Format getFormat()
com.badlogic.gdx.graphics.glutils.FloatTextureData: boolean useMipMaps()
com.badlogic.gdx.graphics.glutils.FloatTextureData: boolean isManaged()
com.badlogic.gdx.graphics.glutils.FrameBuffer
com.badlogic.gdx.graphics.glutils.FrameBuffer: java.util.Map buffers
com.badlogic.gdx.graphics.glutils.FrameBuffer: com.badlogic.gdx.graphics.Texture colorTexture
com.badlogic.gdx.graphics.glutils.FrameBuffer: int defaultFramebufferHandle
com.badlogic.gdx.graphics.glutils.FrameBuffer: boolean defaultFramebufferHandleInitialized
com.badlogic.gdx.graphics.glutils.FrameBuffer: int framebufferHandle
com.badlogic.gdx.graphics.glutils.FrameBuffer: int depthbufferHandle
com.badlogic.gdx.graphics.glutils.FrameBuffer: int width
com.badlogic.gdx.graphics.glutils.FrameBuffer: int height
com.badlogic.gdx.graphics.glutils.FrameBuffer: boolean hasDepth
com.badlogic.gdx.graphics.glutils.FrameBuffer: com.badlogic.gdx.graphics.Pixmap$Format format
com.badlogic.gdx.graphics.glutils.FrameBuffer: FrameBuffer(com.badlogic.gdx.graphics.Pixmap$Format,int,int,boolean)
com.badlogic.gdx.graphics.glutils.FrameBuffer: void setupTexture()
com.badlogic.gdx.graphics.glutils.FrameBuffer: void build()
com.badlogic.gdx.graphics.glutils.FrameBuffer: void dispose()
com.badlogic.gdx.graphics.glutils.FrameBuffer: void bind()
com.badlogic.gdx.graphics.glutils.FrameBuffer: void unbind()
com.badlogic.gdx.graphics.glutils.FrameBuffer: void begin()
com.badlogic.gdx.graphics.glutils.FrameBuffer: void setFrameBufferViewport()
com.badlogic.gdx.graphics.glutils.FrameBuffer: void end()
com.badlogic.gdx.graphics.glutils.FrameBuffer: void setDefaultFrameBufferViewport()
com.badlogic.gdx.graphics.glutils.FrameBuffer: void end(int,int,int,int)
com.badlogic.gdx.graphics.glutils.FrameBuffer: com.badlogic.gdx.graphics.Texture getColorBufferTexture()
com.badlogic.gdx.graphics.glutils.FrameBuffer: int getHeight()
com.badlogic.gdx.graphics.glutils.FrameBuffer: int getWidth()
com.badlogic.gdx.graphics.glutils.FrameBuffer: void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.FrameBuffer)
com.badlogic.gdx.graphics.glutils.FrameBuffer: void invalidateAllFrameBuffers(com.badlogic.gdx.Application)
com.badlogic.gdx.graphics.glutils.FrameBuffer: void clearAllFrameBuffers(com.badlogic.gdx.Application)
com.badlogic.gdx.graphics.glutils.FrameBuffer: java.lang.StringBuilder getManagedStatus(java.lang.StringBuilder)
com.badlogic.gdx.graphics.glutils.FrameBuffer: java.lang.String getManagedStatus()
com.badlogic.gdx.graphics.glutils.FrameBuffer: void <clinit>()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer: void begin(com.badlogic.gdx.math.Matrix4,int)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer: void flush()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer: void color(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer: void color(float,float,float,float)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer: void texCoord(float,float)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer: void normal(float,float,float)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer: void vertex(float,float,float)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer: void end()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer: int getNumVertices()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer: int getMaxVertices()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer: void dispose()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: int primitiveType
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: int vertexIdx
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: int numSetTexCoords
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: int maxVertices
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: int numVertices
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: com.badlogic.gdx.graphics.Mesh mesh
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: com.badlogic.gdx.graphics.glutils.ShaderProgram shader
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: boolean ownsShader
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: int numTexCoords
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: int vertexSize
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: int normalOffset
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: int colorOffset
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: int texCoordOffset
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: com.badlogic.gdx.math.Matrix4 projModelView
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: float[] vertices
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: java.lang.String[] shaderUniformNames
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: ImmediateModeRenderer20(boolean,boolean,int)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: ImmediateModeRenderer20(int,boolean,boolean,int)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: ImmediateModeRenderer20(int,boolean,boolean,int,com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: com.badlogic.gdx.graphics.VertexAttribute[] buildVertexAttributes(boolean,boolean,int)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: void begin(com.badlogic.gdx.math.Matrix4,int)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: void color(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: void color(float,float,float,float)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: void texCoord(float,float)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: void normal(float,float,float)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: void vertex(float,float,float)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: void flush()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: void end()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: int getNumVertices()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: int getMaxVertices()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: void dispose()
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: java.lang.String createVertexShader(boolean,boolean,int)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: java.lang.String createFragmentShader(boolean,boolean,int)
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20: com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader(boolean,boolean,int)
com.badlogic.gdx.graphics.glutils.IndexArray
com.badlogic.gdx.graphics.glutils.IndexArray: java.nio.IntBuffer tmpHandle
com.badlogic.gdx.graphics.glutils.IndexArray: java.nio.ShortBuffer buffer
com.badlogic.gdx.graphics.glutils.IndexArray: java.nio.ByteBuffer byteBuffer
com.badlogic.gdx.graphics.glutils.IndexArray: IndexArray(int)
com.badlogic.gdx.graphics.glutils.IndexArray: int getNumIndices()
com.badlogic.gdx.graphics.glutils.IndexArray: int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.IndexArray: void setIndices(short[],int,int)
com.badlogic.gdx.graphics.glutils.IndexArray: java.nio.ShortBuffer getBuffer()
com.badlogic.gdx.graphics.glutils.IndexArray: void bind()
com.badlogic.gdx.graphics.glutils.IndexArray: void unbind()
com.badlogic.gdx.graphics.glutils.IndexArray: void invalidate()
com.badlogic.gdx.graphics.glutils.IndexArray: void dispose()
com.badlogic.gdx.graphics.glutils.IndexArray: void <clinit>()
com.badlogic.gdx.graphics.glutils.IndexBufferObject
com.badlogic.gdx.graphics.glutils.IndexBufferObject: java.nio.IntBuffer tmpHandle
com.badlogic.gdx.graphics.glutils.IndexBufferObject: java.nio.ShortBuffer buffer
com.badlogic.gdx.graphics.glutils.IndexBufferObject: java.nio.ByteBuffer byteBuffer
com.badlogic.gdx.graphics.glutils.IndexBufferObject: int bufferHandle
com.badlogic.gdx.graphics.glutils.IndexBufferObject: boolean isDirect
com.badlogic.gdx.graphics.glutils.IndexBufferObject: boolean isDirty
com.badlogic.gdx.graphics.glutils.IndexBufferObject: boolean isBound
com.badlogic.gdx.graphics.glutils.IndexBufferObject: int usage
com.badlogic.gdx.graphics.glutils.IndexBufferObject: IndexBufferObject(boolean,int)
com.badlogic.gdx.graphics.glutils.IndexBufferObject: IndexBufferObject(int)
com.badlogic.gdx.graphics.glutils.IndexBufferObject: int createBufferObject()
com.badlogic.gdx.graphics.glutils.IndexBufferObject: int getNumIndices()
com.badlogic.gdx.graphics.glutils.IndexBufferObject: int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.IndexBufferObject: void setIndices(short[],int,int)
com.badlogic.gdx.graphics.glutils.IndexBufferObject: java.nio.ShortBuffer getBuffer()
com.badlogic.gdx.graphics.glutils.IndexBufferObject: void bind()
com.badlogic.gdx.graphics.glutils.IndexBufferObject: void unbind()
com.badlogic.gdx.graphics.glutils.IndexBufferObject: void invalidate()
com.badlogic.gdx.graphics.glutils.IndexBufferObject: void dispose()
com.badlogic.gdx.graphics.glutils.IndexBufferObject: void <clinit>()
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: java.nio.IntBuffer tmpHandle
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: java.nio.ShortBuffer buffer
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: java.nio.ByteBuffer byteBuffer
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: int bufferHandle
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: boolean isDirect
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: boolean isDirty
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: boolean isBound
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: int usage
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: IndexBufferObjectSubData(boolean,int)
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: IndexBufferObjectSubData(int)
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: int createBufferObject()
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: int getNumIndices()
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: void setIndices(short[],int,int)
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: java.nio.ShortBuffer getBuffer()
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: void bind()
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: void unbind()
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: void invalidate()
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: void dispose()
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData: void <clinit>()
com.badlogic.gdx.graphics.glutils.IndexData
com.badlogic.gdx.graphics.glutils.IndexData: int getNumIndices()
com.badlogic.gdx.graphics.glutils.IndexData: int getNumMaxIndices()
com.badlogic.gdx.graphics.glutils.IndexData: void setIndices(short[],int,int)
com.badlogic.gdx.graphics.glutils.IndexData: java.nio.ShortBuffer getBuffer()
com.badlogic.gdx.graphics.glutils.IndexData: void bind()
com.badlogic.gdx.graphics.glutils.IndexData: void unbind()
com.badlogic.gdx.graphics.glutils.IndexData: void invalidate()
com.badlogic.gdx.graphics.glutils.IndexData: void dispose()
com.badlogic.gdx.graphics.glutils.MipMapGenerator
com.badlogic.gdx.graphics.glutils.MipMapGenerator: boolean useHWMipMap
com.badlogic.gdx.graphics.glutils.MipMapGenerator: MipMapGenerator()
com.badlogic.gdx.graphics.glutils.MipMapGenerator: void setUseHardwareMipMap(boolean)
com.badlogic.gdx.graphics.glutils.MipMapGenerator: void generateMipMap(com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.graphics.glutils.MipMapGenerator: void generateMipMap(int,com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.graphics.glutils.MipMapGenerator: void generateMipMapGLES20(int,com.badlogic.gdx.graphics.Pixmap)
com.badlogic.gdx.graphics.glutils.MipMapGenerator: void generateMipMapDesktop(int,com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.graphics.glutils.MipMapGenerator: void generateMipMapCPU(int,com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.graphics.glutils.MipMapGenerator: void <clinit>()
com.badlogic.gdx.graphics.glutils.MipMapTextureData
com.badlogic.gdx.graphics.glutils.MipMapTextureData: com.badlogic.gdx.graphics.TextureData[] mips
com.badlogic.gdx.graphics.glutils.MipMapTextureData: MipMapTextureData(com.badlogic.gdx.graphics.TextureData[])
com.badlogic.gdx.graphics.glutils.MipMapTextureData: com.badlogic.gdx.graphics.TextureData$TextureDataType getType()
com.badlogic.gdx.graphics.glutils.MipMapTextureData: boolean isPrepared()
com.badlogic.gdx.graphics.glutils.MipMapTextureData: void prepare()
com.badlogic.gdx.graphics.glutils.MipMapTextureData: com.badlogic.gdx.graphics.Pixmap consumePixmap()
com.badlogic.gdx.graphics.glutils.MipMapTextureData: boolean disposePixmap()
com.badlogic.gdx.graphics.glutils.MipMapTextureData: void consumeCustomData(int)
com.badlogic.gdx.graphics.glutils.MipMapTextureData: int getWidth()
com.badlogic.gdx.graphics.glutils.MipMapTextureData: int getHeight()
com.badlogic.gdx.graphics.glutils.MipMapTextureData: com.badlogic.gdx.graphics.Pixmap$Format getFormat()
com.badlogic.gdx.graphics.glutils.MipMapTextureData: boolean useMipMaps()
com.badlogic.gdx.graphics.glutils.MipMapTextureData: boolean isManaged()
com.badlogic.gdx.graphics.glutils.PixmapTextureData
com.badlogic.gdx.graphics.glutils.PixmapTextureData: com.badlogic.gdx.graphics.Pixmap pixmap
com.badlogic.gdx.graphics.glutils.PixmapTextureData: com.badlogic.gdx.graphics.Pixmap$Format format
com.badlogic.gdx.graphics.glutils.PixmapTextureData: boolean useMipMaps
com.badlogic.gdx.graphics.glutils.PixmapTextureData: boolean disposePixmap
com.badlogic.gdx.graphics.glutils.PixmapTextureData: boolean managed
com.badlogic.gdx.graphics.glutils.PixmapTextureData: PixmapTextureData(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean,boolean)
com.badlogic.gdx.graphics.glutils.PixmapTextureData: PixmapTextureData(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap$Format,boolean,boolean,boolean)
com.badlogic.gdx.graphics.glutils.PixmapTextureData: boolean disposePixmap()
com.badlogic.gdx.graphics.glutils.PixmapTextureData: com.badlogic.gdx.graphics.Pixmap consumePixmap()
com.badlogic.gdx.graphics.glutils.PixmapTextureData: int getWidth()
com.badlogic.gdx.graphics.glutils.PixmapTextureData: int getHeight()
com.badlogic.gdx.graphics.glutils.PixmapTextureData: com.badlogic.gdx.graphics.Pixmap$Format getFormat()
com.badlogic.gdx.graphics.glutils.PixmapTextureData: boolean useMipMaps()
com.badlogic.gdx.graphics.glutils.PixmapTextureData: boolean isManaged()
com.badlogic.gdx.graphics.glutils.PixmapTextureData: com.badlogic.gdx.graphics.TextureData$TextureDataType getType()
com.badlogic.gdx.graphics.glutils.PixmapTextureData: void consumeCustomData(int)
com.badlogic.gdx.graphics.glutils.PixmapTextureData: boolean isPrepared()
com.badlogic.gdx.graphics.glutils.PixmapTextureData: void prepare()
com.badlogic.gdx.graphics.glutils.ShaderProgram
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String POSITION_ATTRIBUTE
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String NORMAL_ATTRIBUTE
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String COLOR_ATTRIBUTE
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String TEXCOORD_ATTRIBUTE
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String TANGENT_ATTRIBUTE
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String BINORMAL_ATTRIBUTE
com.badlogic.gdx.graphics.glutils.ShaderProgram: boolean pedantic
com.badlogic.gdx.graphics.glutils.ShaderProgram: com.badlogic.gdx.utils.ObjectMap shaders
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String log
com.badlogic.gdx.graphics.glutils.ShaderProgram: boolean isCompiled
com.badlogic.gdx.graphics.glutils.ShaderProgram: com.badlogic.gdx.utils.ObjectIntMap uniforms
com.badlogic.gdx.graphics.glutils.ShaderProgram: com.badlogic.gdx.utils.ObjectIntMap uniformTypes
com.badlogic.gdx.graphics.glutils.ShaderProgram: com.badlogic.gdx.utils.ObjectIntMap uniformSizes
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String[] uniformNames
com.badlogic.gdx.graphics.glutils.ShaderProgram: com.badlogic.gdx.utils.ObjectIntMap attributes
com.badlogic.gdx.graphics.glutils.ShaderProgram: com.badlogic.gdx.utils.ObjectIntMap attributeTypes
com.badlogic.gdx.graphics.glutils.ShaderProgram: com.badlogic.gdx.utils.ObjectIntMap attributeSizes
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String[] attributeNames
com.badlogic.gdx.graphics.glutils.ShaderProgram: int program
com.badlogic.gdx.graphics.glutils.ShaderProgram: int vertexShaderHandle
com.badlogic.gdx.graphics.glutils.ShaderProgram: int fragmentShaderHandle
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.nio.FloatBuffer matrix
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String vertexShaderSource
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String fragmentShaderSource
com.badlogic.gdx.graphics.glutils.ShaderProgram: boolean invalidated
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.nio.ByteBuffer buffer
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.nio.FloatBuffer floatBuffer
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.nio.IntBuffer intBuffer
com.badlogic.gdx.graphics.glutils.ShaderProgram: int refCount
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.nio.IntBuffer intbuf
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.nio.IntBuffer params
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.nio.IntBuffer type
com.badlogic.gdx.graphics.glutils.ShaderProgram: ShaderProgram(java.lang.String,java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: ShaderProgram(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void compileShaders(java.lang.String,java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: int loadShader(int,java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: int linkProgram()
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String getLog()
com.badlogic.gdx.graphics.glutils.ShaderProgram: boolean isCompiled()
com.badlogic.gdx.graphics.glutils.ShaderProgram: int fetchAttributeLocation(java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: int fetchUniformLocation(java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: int fetchUniformLocation(java.lang.String,boolean)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformi(java.lang.String,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformi(int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformi(java.lang.String,int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformi(int,int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformi(java.lang.String,int,int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformi(int,int,int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformi(java.lang.String,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformi(int,int,int,int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformf(java.lang.String,float)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformf(int,float)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformf(java.lang.String,float,float)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformf(int,float,float)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformf(java.lang.String,float,float,float)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformf(int,float,float,float)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformf(java.lang.String,float,float,float,float)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformf(int,float,float,float,float)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniform1fv(java.lang.String,float[],int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniform1fv(int,float[],int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniform2fv(java.lang.String,float[],int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniform2fv(int,float[],int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniform3fv(java.lang.String,float[],int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniform3fv(int,float[],int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniform4fv(java.lang.String,float[],int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniform4fv(int,float[],int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3,boolean)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3,boolean)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformMatrix3fv(java.lang.String,java.nio.FloatBuffer,int,boolean)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformMatrix4fv(java.lang.String,java.nio.FloatBuffer,int,boolean)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformMatrix4fv(int,float[],int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformMatrix4fv(java.lang.String,float[],int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformf(int,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformf(int,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setUniformf(int,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setVertexAttribute(java.lang.String,int,int,boolean,int,java.nio.Buffer)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setVertexAttribute(int,int,int,boolean,int,java.nio.Buffer)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setVertexAttribute(java.lang.String,int,int,boolean,int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setVertexAttribute(int,int,int,boolean,int,int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void begin()
com.badlogic.gdx.graphics.glutils.ShaderProgram: void end()
com.badlogic.gdx.graphics.glutils.ShaderProgram: void dispose()
com.badlogic.gdx.graphics.glutils.ShaderProgram: void disableVertexAttribute(java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void disableVertexAttribute(int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void enableVertexAttribute(java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void enableVertexAttribute(int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void checkManaged()
com.badlogic.gdx.graphics.glutils.ShaderProgram: void addManagedShader(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void invalidateAllShaderPrograms(com.badlogic.gdx.Application)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void clearAllShaderPrograms(com.badlogic.gdx.Application)
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String getManagedStatus()
com.badlogic.gdx.graphics.glutils.ShaderProgram: void setAttributef(java.lang.String,float,float,float,float)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void ensureBufferCapacity(int)
com.badlogic.gdx.graphics.glutils.ShaderProgram: void fetchUniforms()
com.badlogic.gdx.graphics.glutils.ShaderProgram: void fetchAttributes()
com.badlogic.gdx.graphics.glutils.ShaderProgram: boolean hasAttribute(java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: int getAttributeType(java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: int getAttributeLocation(java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: int getAttributeSize(java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: boolean hasUniform(java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: int getUniformType(java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: int getUniformLocation(java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: int getUniformSize(java.lang.String)
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String[] getAttributes()
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String[] getUniforms()
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String getVertexShaderSource()
com.badlogic.gdx.graphics.glutils.ShaderProgram: java.lang.String getFragmentShaderSource()
com.badlogic.gdx.graphics.glutils.ShaderProgram: void <clinit>()
com.badlogic.gdx.graphics.glutils.ShapeRenderer
com.badlogic.gdx.graphics.glutils.ShapeRenderer: com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer renderer
com.badlogic.gdx.graphics.glutils.ShapeRenderer: boolean matrixDirty
com.badlogic.gdx.graphics.glutils.ShapeRenderer: com.badlogic.gdx.math.Matrix4 projView
com.badlogic.gdx.graphics.glutils.ShapeRenderer: com.badlogic.gdx.math.Matrix4 transform
com.badlogic.gdx.graphics.glutils.ShapeRenderer: com.badlogic.gdx.math.Matrix4 combined
com.badlogic.gdx.graphics.glutils.ShapeRenderer: com.badlogic.gdx.math.Vector2 tmp
com.badlogic.gdx.graphics.glutils.ShapeRenderer: com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.graphics.glutils.ShapeRenderer: com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType currType
com.badlogic.gdx.graphics.glutils.ShapeRenderer: ShapeRenderer()
com.badlogic.gdx.graphics.glutils.ShapeRenderer: ShapeRenderer(int)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void setColor(float,float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: com.badlogic.gdx.graphics.Color getColor()
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void setProjectionMatrix(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: com.badlogic.gdx.math.Matrix4 getProjectionMatrix()
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void updateMatrices()
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void setTransformMatrix(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: com.badlogic.gdx.math.Matrix4 getTransformMatrix()
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void identity()
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void translate(float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void rotate(float,float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void scale(float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void begin(com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void point(float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void line(float,float,float,float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void line(float,float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void line(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void line(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void line(float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void curve(float,float,float,float,float,float,float,float,int)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void triangle(float,float,float,float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void triangle(float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void rect(float,float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void rect(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void rect(float,float,float,float,float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void rect(float,float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void rectLine(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void rectLine(float,float,float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void box(float,float,float,float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void x(float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void x(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void arc(float,float,float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void arc(float,float,float,float,float,int)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void circle(float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void circle(float,float,float,int)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void ellipse(float,float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void ellipse(float,float,float,float,int)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void cone(float,float,float,float,float)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void cone(float,float,float,float,float,int)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void polygon(float[])
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void polygon(float[],int,int)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void polyline(float[])
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void polyline(float[],int,int)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void checkDirty()
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void checkFlush(int)
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void end()
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void flush()
com.badlogic.gdx.graphics.glutils.ShapeRenderer: com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType getCurrentType()
com.badlogic.gdx.graphics.glutils.ShapeRenderer: com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer getRenderer()
com.badlogic.gdx.graphics.glutils.ShapeRenderer: void dispose()
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType: com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Point
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType: com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Line
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType: com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Filled
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType: int glType
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType: com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] $VALUES
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType: com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] values()
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType: com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType valueOf(java.lang.String)
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType: ShapeRenderer$ShapeType(java.lang.String,int,int)
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType: int getGlType()
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType: void <clinit>()
com.badlogic.gdx.graphics.glutils.VertexArray
com.badlogic.gdx.graphics.glutils.VertexArray: com.badlogic.gdx.graphics.VertexAttributes attributes
com.badlogic.gdx.graphics.glutils.VertexArray: java.nio.FloatBuffer buffer
com.badlogic.gdx.graphics.glutils.VertexArray: java.nio.ByteBuffer byteBuffer
com.badlogic.gdx.graphics.glutils.VertexArray: boolean isBound
com.badlogic.gdx.graphics.glutils.VertexArray: VertexArray(int,com.badlogic.gdx.graphics.VertexAttribute[])
com.badlogic.gdx.graphics.glutils.VertexArray: VertexArray(int,com.badlogic.gdx.graphics.VertexAttributes)
com.badlogic.gdx.graphics.glutils.VertexArray: void dispose()
com.badlogic.gdx.graphics.glutils.VertexArray: java.nio.FloatBuffer getBuffer()
com.badlogic.gdx.graphics.glutils.VertexArray: int getNumVertices()
com.badlogic.gdx.graphics.glutils.VertexArray: int getNumMaxVertices()
com.badlogic.gdx.graphics.glutils.VertexArray: void setVertices(float[],int,int)
com.badlogic.gdx.graphics.glutils.VertexArray: void updateVertices(int,float[],int,int)
com.badlogic.gdx.graphics.glutils.VertexArray: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexArray: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.graphics.glutils.VertexArray: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexArray: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.graphics.glutils.VertexArray: com.badlogic.gdx.graphics.VertexAttributes getAttributes()
com.badlogic.gdx.graphics.glutils.VertexBufferObject
com.badlogic.gdx.graphics.glutils.VertexBufferObject: java.nio.IntBuffer tmpHandle
com.badlogic.gdx.graphics.glutils.VertexBufferObject: com.badlogic.gdx.graphics.VertexAttributes attributes
com.badlogic.gdx.graphics.glutils.VertexBufferObject: java.nio.FloatBuffer buffer
com.badlogic.gdx.graphics.glutils.VertexBufferObject: java.nio.ByteBuffer byteBuffer
com.badlogic.gdx.graphics.glutils.VertexBufferObject: int bufferHandle
com.badlogic.gdx.graphics.glutils.VertexBufferObject: boolean isStatic
com.badlogic.gdx.graphics.glutils.VertexBufferObject: int usage
com.badlogic.gdx.graphics.glutils.VertexBufferObject: boolean isDirty
com.badlogic.gdx.graphics.glutils.VertexBufferObject: boolean isBound
com.badlogic.gdx.graphics.glutils.VertexBufferObject: VertexBufferObject(boolean,int,com.badlogic.gdx.graphics.VertexAttribute[])
com.badlogic.gdx.graphics.glutils.VertexBufferObject: VertexBufferObject(boolean,int,com.badlogic.gdx.graphics.VertexAttributes)
com.badlogic.gdx.graphics.glutils.VertexBufferObject: int createBufferObject()
com.badlogic.gdx.graphics.glutils.VertexBufferObject: com.badlogic.gdx.graphics.VertexAttributes getAttributes()
com.badlogic.gdx.graphics.glutils.VertexBufferObject: int getNumVertices()
com.badlogic.gdx.graphics.glutils.VertexBufferObject: int getNumMaxVertices()
com.badlogic.gdx.graphics.glutils.VertexBufferObject: java.nio.FloatBuffer getBuffer()
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void bufferChanged()
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void setVertices(float[],int,int)
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void updateVertices(int,float[],int,int)
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void invalidate()
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void dispose()
com.badlogic.gdx.graphics.glutils.VertexBufferObject: void <clinit>()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: java.nio.IntBuffer tmpHandle
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: com.badlogic.gdx.graphics.VertexAttributes attributes
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: java.nio.FloatBuffer buffer
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: java.nio.ByteBuffer byteBuffer
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: int bufferHandle
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: boolean isDirect
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: boolean isStatic
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: int usage
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: boolean isDirty
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: boolean isBound
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: VertexBufferObjectSubData(boolean,int,com.badlogic.gdx.graphics.VertexAttribute[])
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: int createBufferObject()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: com.badlogic.gdx.graphics.VertexAttributes getAttributes()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: int getNumVertices()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: int getNumMaxVertices()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: java.nio.FloatBuffer getBuffer()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: void bufferChanged()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: void setVertices(float[],int,int)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: void updateVertices(int,float[],int,int)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: void invalidate()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: void dispose()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: int getBufferHandle()
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData: void <clinit>()
com.badlogic.gdx.graphics.glutils.VertexData
com.badlogic.gdx.graphics.glutils.VertexData: int getNumVertices()
com.badlogic.gdx.graphics.glutils.VertexData: int getNumMaxVertices()
com.badlogic.gdx.graphics.glutils.VertexData: com.badlogic.gdx.graphics.VertexAttributes getAttributes()
com.badlogic.gdx.graphics.glutils.VertexData: void setVertices(float[],int,int)
com.badlogic.gdx.graphics.glutils.VertexData: void updateVertices(int,float[],int,int)
com.badlogic.gdx.graphics.glutils.VertexData: java.nio.FloatBuffer getBuffer()
com.badlogic.gdx.graphics.glutils.VertexData: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexData: void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.graphics.glutils.VertexData: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram)
com.badlogic.gdx.graphics.glutils.VertexData: void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])
com.badlogic.gdx.graphics.glutils.VertexData: void dispose()
com.badlogic.gdx.graphics.profiling.GL20Profiler
com.badlogic.gdx.graphics.profiling.GL20Profiler: com.badlogic.gdx.graphics.GL20 gl20
com.badlogic.gdx.graphics.profiling.GL20Profiler: GL20Profiler(com.badlogic.gdx.graphics.GL20)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glActiveTexture(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glBindTexture(int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glBlendFunc(int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glClear(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glClearColor(float,float,float,float)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glClearDepthf(float)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glClearStencil(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glColorMask(boolean,boolean,boolean,boolean)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glCopyTexImage2D(int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glCullFace(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glDeleteTextures(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glDepthFunc(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glDepthMask(boolean)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glDepthRangef(float,float)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glDisable(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glDrawArrays(int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glDrawElements(int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glEnable(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glFinish()
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glFlush()
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glFrontFace(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGenTextures(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: int glGetError()
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetIntegerv(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: java.lang.String glGetString(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glHint(int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glLineWidth(float)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glPixelStorei(int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glPolygonOffset(float,float)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glScissor(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glStencilFunc(int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glStencilMask(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glStencilOp(int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glTexParameterf(int,int,float)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glViewport(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glAttachShader(int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glBindAttribLocation(int,int,java.lang.String)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glBindBuffer(int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glBindFramebuffer(int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glBindRenderbuffer(int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glBlendColor(float,float,float,float)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glBlendEquation(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glBlendEquationSeparate(int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glBlendFuncSeparate(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glBufferData(int,int,java.nio.Buffer,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glBufferSubData(int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: int glCheckFramebufferStatus(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glCompileShader(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: int glCreateProgram()
com.badlogic.gdx.graphics.profiling.GL20Profiler: int glCreateShader(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glDeleteBuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glDeleteFramebuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glDeleteProgram(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glDeleteRenderbuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glDeleteShader(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glDetachShader(int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glDisableVertexAttribArray(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glDrawElements(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glEnableVertexAttribArray(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glFramebufferRenderbuffer(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glFramebufferTexture2D(int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGenBuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGenerateMipmap(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGenFramebuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGenRenderbuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: int glGetAttribLocation(int,java.lang.String)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetBooleanv(int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetFloatv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetProgramiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: java.lang.String glGetProgramInfoLog(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetShaderiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: java.lang.String glGetShaderInfoLog(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetTexParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetUniformfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetUniformiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: int glGetUniformLocation(int,java.lang.String)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: boolean glIsBuffer(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: boolean glIsEnabled(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: boolean glIsFramebuffer(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: boolean glIsProgram(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: boolean glIsRenderbuffer(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: boolean glIsShader(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: boolean glIsTexture(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glLinkProgram(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glReleaseShaderCompiler()
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glRenderbufferStorage(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glSampleCoverage(float,boolean)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glShaderSource(int,java.lang.String)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glStencilFuncSeparate(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glStencilMaskSeparate(int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glStencilOpSeparate(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glTexParameterfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glTexParameteri(int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glTexParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform1f(int,float)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform1fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform1i(int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform1iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform2f(int,float,float)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform2fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform2i(int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform2iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform3f(int,float,float,float)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform3fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform3i(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform3iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform4f(int,float,float,float,float)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform4fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform4i(int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniform4iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glUseProgram(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glValidateProgram(int)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glVertexAttrib1f(int,float)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glVertexAttrib1fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glVertexAttrib2f(int,float,float)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glVertexAttrib2fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glVertexAttrib3f(int,float,float,float)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glVertexAttrib3fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glVertexAttrib4f(int,float,float,float,float)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glVertexAttrib4fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL20Profiler: void glVertexAttribPointer(int,int,int,boolean,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler
com.badlogic.gdx.graphics.profiling.GL30Profiler: com.badlogic.gdx.graphics.GL30 gl30
com.badlogic.gdx.graphics.profiling.GL30Profiler: GL30Profiler(com.badlogic.gdx.graphics.GL30)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glActiveTexture(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBindTexture(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBlendFunc(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glClear(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glClearColor(float,float,float,float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glClearDepthf(float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glClearStencil(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glColorMask(boolean,boolean,boolean,boolean)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glCopyTexImage2D(int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glCullFace(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDeleteTextures(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDepthFunc(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDepthMask(boolean)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDepthRangef(float,float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDisable(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDrawArrays(int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDrawElements(int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glEnable(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glFinish()
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glFlush()
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glFrontFace(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGenTextures(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: int glGetError()
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetIntegerv(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: java.lang.String glGetString(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glHint(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glLineWidth(float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glPixelStorei(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glPolygonOffset(float,float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glScissor(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glStencilFunc(int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glStencilMask(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glStencilOp(int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glTexParameterf(int,int,float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glViewport(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glAttachShader(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBindAttribLocation(int,int,java.lang.String)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBindBuffer(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBindFramebuffer(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBindRenderbuffer(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBlendColor(float,float,float,float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBlendEquation(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBlendEquationSeparate(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBlendFuncSeparate(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBufferData(int,int,java.nio.Buffer,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBufferSubData(int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: int glCheckFramebufferStatus(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glCompileShader(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: int glCreateProgram()
com.badlogic.gdx.graphics.profiling.GL30Profiler: int glCreateShader(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDeleteBuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDeleteFramebuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDeleteProgram(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDeleteRenderbuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDeleteShader(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDetachShader(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDisableVertexAttribArray(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDrawElements(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glEnableVertexAttribArray(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glFramebufferRenderbuffer(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glFramebufferTexture2D(int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGenBuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGenerateMipmap(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGenFramebuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGenRenderbuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: int glGetAttribLocation(int,java.lang.String)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetBooleanv(int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetFloatv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetProgramiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: java.lang.String glGetProgramInfoLog(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetShaderiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: java.lang.String glGetShaderInfoLog(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetTexParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetUniformfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetUniformiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: int glGetUniformLocation(int,java.lang.String)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetVertexAttribiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetVertexAttribPointerv(int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: boolean glIsBuffer(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: boolean glIsEnabled(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: boolean glIsFramebuffer(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: boolean glIsProgram(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: boolean glIsRenderbuffer(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: boolean glIsShader(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: boolean glIsTexture(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glLinkProgram(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glReleaseShaderCompiler()
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glRenderbufferStorage(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glSampleCoverage(float,boolean)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glShaderSource(int,java.lang.String)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glStencilFuncSeparate(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glStencilMaskSeparate(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glStencilOpSeparate(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glTexParameterfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glTexParameteri(int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glTexParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform1f(int,float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform1fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform1i(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform1iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform2f(int,float,float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform2fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform2i(int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform2iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform3f(int,float,float,float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform3fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform3i(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform3iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform4f(int,float,float,float,float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform4fv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform4i(int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform4iv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUseProgram(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glValidateProgram(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glVertexAttrib1f(int,float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glVertexAttrib1fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glVertexAttrib2f(int,float,float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glVertexAttrib2fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glVertexAttrib3f(int,float,float,float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glVertexAttrib3fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glVertexAttrib4f(int,float,float,float,float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glVertexAttrib4fv(int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glVertexAttribPointer(int,int,int,boolean,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glReadBuffer(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDrawRangeElements(int,int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glTexImage3D(int,int,int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGenQueries(int,int[],int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGenQueries(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDeleteQueries(int,int[],int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDeleteQueries(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: boolean glIsQuery(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBeginQuery(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glEndQuery(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetQueryiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetQueryObjectuiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: boolean glUnmapBuffer(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: java.nio.Buffer glGetBufferPointerv(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDrawBuffers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glRenderbufferStorageMultisample(int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glFramebufferTextureLayer(int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glFlushMappedBufferRange(int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBindVertexArray(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDeleteVertexArrays(int,int[],int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDeleteVertexArrays(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGenVertexArrays(int,int[],int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGenVertexArrays(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: boolean glIsVertexArray(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBeginTransformFeedback(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glEndTransformFeedback()
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBindBufferRange(int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBindBufferBase(int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glTransformFeedbackVaryings(int,java.lang.String[],int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glVertexAttribIPointer(int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetVertexAttribIiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glVertexAttribI4i(int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glVertexAttribI4ui(int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetUniformuiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: int glGetFragDataLocation(int,java.lang.String)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform1uiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform3uiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniform4uiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glClearBufferiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glClearBufferuiv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glClearBufferfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glClearBufferfi(int,int,float,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: java.lang.String glGetStringi(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glCopyBufferSubData(int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: int glGetUniformBlockIndex(int,java.lang.String)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: java.lang.String glGetActiveUniformBlockName(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glUniformBlockBinding(int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDrawArraysInstanced(int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDrawElementsInstanced(int,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetInteger64v(int,java.nio.LongBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetBufferParameteri64v(int,int,java.nio.LongBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGenSamplers(int,int[],int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGenSamplers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDeleteSamplers(int,int[],int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDeleteSamplers(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: boolean glIsSampler(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBindSampler(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glSamplerParameteri(int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glSamplerParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glSamplerParameterf(int,int,float)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glSamplerParameterfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetSamplerParameteriv(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glVertexAttribDivisor(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glBindTransformFeedback(int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDeleteTransformFeedbacks(int,int[],int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glDeleteTransformFeedbacks(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGenTransformFeedbacks(int,int[],int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glGenTransformFeedbacks(int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: boolean glIsTransformFeedback(int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glPauseTransformFeedback()
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glResumeTransformFeedback()
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glProgramParameteri(int,int,int)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glInvalidateFramebuffer(int,int,java.nio.IntBuffer)
com.badlogic.gdx.graphics.profiling.GL30Profiler: void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int)
com.badlogic.gdx.graphics.profiling.GLProfiler
com.badlogic.gdx.graphics.profiling.GLProfiler: int calls
com.badlogic.gdx.graphics.profiling.GLProfiler: int textureBindings
com.badlogic.gdx.graphics.profiling.GLProfiler: int drawCalls
com.badlogic.gdx.graphics.profiling.GLProfiler: int shaderSwitches
com.badlogic.gdx.graphics.profiling.GLProfiler: com.badlogic.gdx.math.FloatCounter vertexCount
com.badlogic.gdx.graphics.profiling.GLProfiler: GLProfiler()
com.badlogic.gdx.graphics.profiling.GLProfiler: void enable()
com.badlogic.gdx.graphics.profiling.GLProfiler: void disable()
com.badlogic.gdx.graphics.profiling.GLProfiler: void reset()
com.badlogic.gdx.graphics.profiling.GLProfiler: void <clinit>()
com.badlogic.gdx.input.GestureDetector
com.badlogic.gdx.input.GestureDetector: com.badlogic.gdx.input.GestureDetector$GestureListener listener
com.badlogic.gdx.input.GestureDetector: float tapSquareSize
com.badlogic.gdx.input.GestureDetector: long tapCountInterval
com.badlogic.gdx.input.GestureDetector: float longPressSeconds
com.badlogic.gdx.input.GestureDetector: long maxFlingDelay
com.badlogic.gdx.input.GestureDetector: boolean inTapSquare
com.badlogic.gdx.input.GestureDetector: int tapCount
com.badlogic.gdx.input.GestureDetector: long lastTapTime
com.badlogic.gdx.input.GestureDetector: float lastTapX
com.badlogic.gdx.input.GestureDetector: float lastTapY
com.badlogic.gdx.input.GestureDetector: int lastTapButton
com.badlogic.gdx.input.GestureDetector: int lastTapPointer
com.badlogic.gdx.input.GestureDetector: boolean longPressFired
com.badlogic.gdx.input.GestureDetector: boolean pinching
com.badlogic.gdx.input.GestureDetector: boolean panning
com.badlogic.gdx.input.GestureDetector: com.badlogic.gdx.input.GestureDetector$VelocityTracker tracker
com.badlogic.gdx.input.GestureDetector: float tapSquareCenterX
com.badlogic.gdx.input.GestureDetector: float tapSquareCenterY
com.badlogic.gdx.input.GestureDetector: long gestureStartTime
com.badlogic.gdx.input.GestureDetector: com.badlogic.gdx.math.Vector2 pointer1
com.badlogic.gdx.input.GestureDetector: com.badlogic.gdx.math.Vector2 pointer2
com.badlogic.gdx.input.GestureDetector: com.badlogic.gdx.math.Vector2 initialPointer1
com.badlogic.gdx.input.GestureDetector: com.badlogic.gdx.math.Vector2 initialPointer2
com.badlogic.gdx.input.GestureDetector: com.badlogic.gdx.utils.Timer$Task longPressTask
com.badlogic.gdx.input.GestureDetector: GestureDetector(com.badlogic.gdx.input.GestureDetector$GestureListener)
com.badlogic.gdx.input.GestureDetector: GestureDetector(float,float,float,float,com.badlogic.gdx.input.GestureDetector$GestureListener)
com.badlogic.gdx.input.GestureDetector: boolean touchDown(int,int,int,int)
com.badlogic.gdx.input.GestureDetector: boolean touchDown(float,float,int,int)
com.badlogic.gdx.input.GestureDetector: boolean touchDragged(int,int,int)
com.badlogic.gdx.input.GestureDetector: boolean touchDragged(float,float,int)
com.badlogic.gdx.input.GestureDetector: boolean touchUp(int,int,int,int)
com.badlogic.gdx.input.GestureDetector: boolean touchUp(float,float,int,int)
com.badlogic.gdx.input.GestureDetector: void cancel()
com.badlogic.gdx.input.GestureDetector: boolean isLongPressed()
com.badlogic.gdx.input.GestureDetector: boolean isLongPressed(float)
com.badlogic.gdx.input.GestureDetector: boolean isPanning()
com.badlogic.gdx.input.GestureDetector: void reset()
com.badlogic.gdx.input.GestureDetector: boolean isWithinTapSquare(float,float,float,float)
com.badlogic.gdx.input.GestureDetector: void invalidateTapSquare()
com.badlogic.gdx.input.GestureDetector: void setTapSquareSize(float)
com.badlogic.gdx.input.GestureDetector: void setTapCountInterval(float)
com.badlogic.gdx.input.GestureDetector: void setLongPressSeconds(float)
com.badlogic.gdx.input.GestureDetector: void setMaxFlingDelay(long)
com.badlogic.gdx.input.GestureDetector$1
com.badlogic.gdx.input.GestureDetector$1: com.badlogic.gdx.input.GestureDetector this$0
com.badlogic.gdx.input.GestureDetector$1: GestureDetector$1(com.badlogic.gdx.input.GestureDetector)
com.badlogic.gdx.input.GestureDetector$1: void run()
com.badlogic.gdx.input.GestureDetector$GestureAdapter
com.badlogic.gdx.input.GestureDetector$GestureAdapter: GestureDetector$GestureAdapter()
com.badlogic.gdx.input.GestureDetector$GestureAdapter: boolean touchDown(float,float,int,int)
com.badlogic.gdx.input.GestureDetector$GestureAdapter: boolean tap(float,float,int,int)
com.badlogic.gdx.input.GestureDetector$GestureAdapter: boolean longPress(float,float)
com.badlogic.gdx.input.GestureDetector$GestureAdapter: boolean fling(float,float,int)
com.badlogic.gdx.input.GestureDetector$GestureAdapter: boolean pan(float,float,float,float)
com.badlogic.gdx.input.GestureDetector$GestureAdapter: boolean panStop(float,float,int,int)
com.badlogic.gdx.input.GestureDetector$GestureAdapter: boolean zoom(float,float)
com.badlogic.gdx.input.GestureDetector$GestureAdapter: boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.input.GestureDetector$GestureListener
com.badlogic.gdx.input.GestureDetector$GestureListener: boolean touchDown(float,float,int,int)
com.badlogic.gdx.input.GestureDetector$GestureListener: boolean tap(float,float,int,int)
com.badlogic.gdx.input.GestureDetector$GestureListener: boolean longPress(float,float)
com.badlogic.gdx.input.GestureDetector$GestureListener: boolean fling(float,float,int)
com.badlogic.gdx.input.GestureDetector$GestureListener: boolean pan(float,float,float,float)
com.badlogic.gdx.input.GestureDetector$GestureListener: boolean panStop(float,float,int,int)
com.badlogic.gdx.input.GestureDetector$GestureListener: boolean zoom(float,float)
com.badlogic.gdx.input.GestureDetector$GestureListener: boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.input.GestureDetector$VelocityTracker
com.badlogic.gdx.input.GestureDetector$VelocityTracker: int sampleSize
com.badlogic.gdx.input.GestureDetector$VelocityTracker: float lastX
com.badlogic.gdx.input.GestureDetector$VelocityTracker: float lastY
com.badlogic.gdx.input.GestureDetector$VelocityTracker: float deltaX
com.badlogic.gdx.input.GestureDetector$VelocityTracker: float deltaY
com.badlogic.gdx.input.GestureDetector$VelocityTracker: long lastTime
com.badlogic.gdx.input.GestureDetector$VelocityTracker: int numSamples
com.badlogic.gdx.input.GestureDetector$VelocityTracker: float[] meanX
com.badlogic.gdx.input.GestureDetector$VelocityTracker: float[] meanY
com.badlogic.gdx.input.GestureDetector$VelocityTracker: long[] meanTime
com.badlogic.gdx.input.GestureDetector$VelocityTracker: GestureDetector$VelocityTracker()
com.badlogic.gdx.input.GestureDetector$VelocityTracker: void start(float,float,long)
com.badlogic.gdx.input.GestureDetector$VelocityTracker: void update(float,float,long)
com.badlogic.gdx.input.GestureDetector$VelocityTracker: float getVelocityX()
com.badlogic.gdx.input.GestureDetector$VelocityTracker: float getVelocityY()
com.badlogic.gdx.input.GestureDetector$VelocityTracker: float getAverage(float[],int)
com.badlogic.gdx.input.GestureDetector$VelocityTracker: long getAverage(long[],int)
com.badlogic.gdx.input.GestureDetector$VelocityTracker: float getSum(float[],int)
com.badlogic.gdx.input.RemoteInput
com.badlogic.gdx.input.RemoteInput: int DEFAULT_PORT
com.badlogic.gdx.input.RemoteInput: java.net.ServerSocket serverSocket
com.badlogic.gdx.input.RemoteInput: float[] accel
com.badlogic.gdx.input.RemoteInput: float[] compass
com.badlogic.gdx.input.RemoteInput: boolean multiTouch
com.badlogic.gdx.input.RemoteInput: float remoteWidth
com.badlogic.gdx.input.RemoteInput: float remoteHeight
com.badlogic.gdx.input.RemoteInput: boolean connected
com.badlogic.gdx.input.RemoteInput: com.badlogic.gdx.input.RemoteInput$RemoteInputListener listener
com.badlogic.gdx.input.RemoteInput: java.util.Set keys
com.badlogic.gdx.input.RemoteInput: int[] touchX
com.badlogic.gdx.input.RemoteInput: int[] touchY
com.badlogic.gdx.input.RemoteInput: boolean[] isTouched
com.badlogic.gdx.input.RemoteInput: boolean justTouched
com.badlogic.gdx.input.RemoteInput: com.badlogic.gdx.InputProcessor processor
com.badlogic.gdx.input.RemoteInput: int port
com.badlogic.gdx.input.RemoteInput: java.lang.String[] ips
com.badlogic.gdx.input.RemoteInput: RemoteInput()
com.badlogic.gdx.input.RemoteInput: RemoteInput(com.badlogic.gdx.input.RemoteInput$RemoteInputListener)
com.badlogic.gdx.input.RemoteInput: RemoteInput(int)
com.badlogic.gdx.input.RemoteInput: RemoteInput(int,com.badlogic.gdx.input.RemoteInput$RemoteInputListener)
com.badlogic.gdx.input.RemoteInput: void run()
com.badlogic.gdx.input.RemoteInput: boolean isConnected()
com.badlogic.gdx.input.RemoteInput: float getAccelerometerX()
com.badlogic.gdx.input.RemoteInput: float getAccelerometerY()
com.badlogic.gdx.input.RemoteInput: float getAccelerometerZ()
com.badlogic.gdx.input.RemoteInput: int getX()
com.badlogic.gdx.input.RemoteInput: int getX(int)
com.badlogic.gdx.input.RemoteInput: int getY()
com.badlogic.gdx.input.RemoteInput: int getY(int)
com.badlogic.gdx.input.RemoteInput: boolean isTouched()
com.badlogic.gdx.input.RemoteInput: boolean justTouched()
com.badlogic.gdx.input.RemoteInput: boolean isTouched(int)
com.badlogic.gdx.input.RemoteInput: boolean isButtonPressed(int)
com.badlogic.gdx.input.RemoteInput: boolean isKeyPressed(int)
com.badlogic.gdx.input.RemoteInput: void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
com.badlogic.gdx.input.RemoteInput: void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String)
com.badlogic.gdx.input.RemoteInput: void setOnscreenKeyboardVisible(boolean)
com.badlogic.gdx.input.RemoteInput: void vibrate(int)
com.badlogic.gdx.input.RemoteInput: void vibrate(long[],int)
com.badlogic.gdx.input.RemoteInput: void cancelVibrate()
com.badlogic.gdx.input.RemoteInput: float getAzimuth()
com.badlogic.gdx.input.RemoteInput: float getPitch()
com.badlogic.gdx.input.RemoteInput: float getRoll()
com.badlogic.gdx.input.RemoteInput: void setCatchBackKey(boolean)
com.badlogic.gdx.input.RemoteInput: void setInputProcessor(com.badlogic.gdx.InputProcessor)
com.badlogic.gdx.input.RemoteInput: com.badlogic.gdx.InputProcessor getInputProcessor()
com.badlogic.gdx.input.RemoteInput: java.lang.String[] getIPs()
com.badlogic.gdx.input.RemoteInput: boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral)
com.badlogic.gdx.input.RemoteInput: int getRotation()
com.badlogic.gdx.input.RemoteInput: com.badlogic.gdx.Input$Orientation getNativeOrientation()
com.badlogic.gdx.input.RemoteInput: void setCursorCatched(boolean)
com.badlogic.gdx.input.RemoteInput: boolean isCursorCatched()
com.badlogic.gdx.input.RemoteInput: int getDeltaX()
com.badlogic.gdx.input.RemoteInput: int getDeltaX(int)
com.badlogic.gdx.input.RemoteInput: int getDeltaY()
com.badlogic.gdx.input.RemoteInput: int getDeltaY(int)
com.badlogic.gdx.input.RemoteInput: void setCursorPosition(int,int)
com.badlogic.gdx.input.RemoteInput: void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int)
com.badlogic.gdx.input.RemoteInput: void setCatchMenuKey(boolean)
com.badlogic.gdx.input.RemoteInput: long getCurrentEventTime()
com.badlogic.gdx.input.RemoteInput: void getRotationMatrix(float[])
com.badlogic.gdx.input.RemoteInput: void <clinit>()
com.badlogic.gdx.input.RemoteInput$EventTrigger
com.badlogic.gdx.input.RemoteInput$EventTrigger: com.badlogic.gdx.input.RemoteInput$TouchEvent touchEvent
com.badlogic.gdx.input.RemoteInput$EventTrigger: com.badlogic.gdx.input.RemoteInput$KeyEvent keyEvent
com.badlogic.gdx.input.RemoteInput$EventTrigger: com.badlogic.gdx.input.RemoteInput this$0
com.badlogic.gdx.input.RemoteInput$EventTrigger: RemoteInput$EventTrigger(com.badlogic.gdx.input.RemoteInput,com.badlogic.gdx.input.RemoteInput$TouchEvent,com.badlogic.gdx.input.RemoteInput$KeyEvent)
com.badlogic.gdx.input.RemoteInput$EventTrigger: void run()
com.badlogic.gdx.input.RemoteInput$KeyEvent
com.badlogic.gdx.input.RemoteInput$KeyEvent: int KEY_DOWN
com.badlogic.gdx.input.RemoteInput$KeyEvent: int KEY_UP
com.badlogic.gdx.input.RemoteInput$KeyEvent: int KEY_TYPED
com.badlogic.gdx.input.RemoteInput$KeyEvent: long timeStamp
com.badlogic.gdx.input.RemoteInput$KeyEvent: int type
com.badlogic.gdx.input.RemoteInput$KeyEvent: int keyCode
com.badlogic.gdx.input.RemoteInput$KeyEvent: char keyChar
com.badlogic.gdx.input.RemoteInput$KeyEvent: com.badlogic.gdx.input.RemoteInput this$0
com.badlogic.gdx.input.RemoteInput$KeyEvent: RemoteInput$KeyEvent(com.badlogic.gdx.input.RemoteInput)
com.badlogic.gdx.input.RemoteInput$RemoteInputListener
com.badlogic.gdx.input.RemoteInput$RemoteInputListener: void onConnected()
com.badlogic.gdx.input.RemoteInput$RemoteInputListener: void onDisconnected()
com.badlogic.gdx.input.RemoteInput$TouchEvent
com.badlogic.gdx.input.RemoteInput$TouchEvent: int TOUCH_DOWN
com.badlogic.gdx.input.RemoteInput$TouchEvent: int TOUCH_UP
com.badlogic.gdx.input.RemoteInput$TouchEvent: int TOUCH_DRAGGED
com.badlogic.gdx.input.RemoteInput$TouchEvent: long timeStamp
com.badlogic.gdx.input.RemoteInput$TouchEvent: int type
com.badlogic.gdx.input.RemoteInput$TouchEvent: int x
com.badlogic.gdx.input.RemoteInput$TouchEvent: int y
com.badlogic.gdx.input.RemoteInput$TouchEvent: int pointer
com.badlogic.gdx.input.RemoteInput$TouchEvent: com.badlogic.gdx.input.RemoteInput this$0
com.badlogic.gdx.input.RemoteInput$TouchEvent: RemoteInput$TouchEvent(com.badlogic.gdx.input.RemoteInput)
com.badlogic.gdx.input.RemoteSender
com.badlogic.gdx.input.RemoteSender: java.io.DataOutputStream out
com.badlogic.gdx.input.RemoteSender: boolean connected
com.badlogic.gdx.input.RemoteSender: int KEY_DOWN
com.badlogic.gdx.input.RemoteSender: int KEY_UP
com.badlogic.gdx.input.RemoteSender: int KEY_TYPED
com.badlogic.gdx.input.RemoteSender: int TOUCH_DOWN
com.badlogic.gdx.input.RemoteSender: int TOUCH_UP
com.badlogic.gdx.input.RemoteSender: int TOUCH_DRAGGED
com.badlogic.gdx.input.RemoteSender: int ACCEL
com.badlogic.gdx.input.RemoteSender: int COMPASS
com.badlogic.gdx.input.RemoteSender: int SIZE
com.badlogic.gdx.input.RemoteSender: RemoteSender(java.lang.String,int)
com.badlogic.gdx.input.RemoteSender: void sendUpdate()
com.badlogic.gdx.input.RemoteSender: boolean keyDown(int)
com.badlogic.gdx.input.RemoteSender: boolean keyUp(int)
com.badlogic.gdx.input.RemoteSender: boolean keyTyped(char)
com.badlogic.gdx.input.RemoteSender: boolean touchDown(int,int,int,int)
com.badlogic.gdx.input.RemoteSender: boolean touchUp(int,int,int,int)
com.badlogic.gdx.input.RemoteSender: boolean touchDragged(int,int,int)
com.badlogic.gdx.input.RemoteSender: boolean mouseMoved(int,int)
com.badlogic.gdx.input.RemoteSender: boolean scrolled(int)
com.badlogic.gdx.input.RemoteSender: boolean isConnected()
com.badlogic.gdx.maps.ImageResolver
com.badlogic.gdx.maps.ImageResolver: com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String)
com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver
com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver: com.badlogic.gdx.assets.AssetManager assetManager
com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver: ImageResolver$AssetManagerImageResolver(com.badlogic.gdx.assets.AssetManager)
com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver: com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String)
com.badlogic.gdx.maps.ImageResolver$DirectImageResolver
com.badlogic.gdx.maps.ImageResolver$DirectImageResolver: com.badlogic.gdx.utils.ObjectMap images
com.badlogic.gdx.maps.ImageResolver$DirectImageResolver: ImageResolver$DirectImageResolver(com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.maps.ImageResolver$DirectImageResolver: com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String)
com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver
com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver: com.badlogic.gdx.graphics.g2d.TextureAtlas atlas
com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver: ImageResolver$TextureAtlasImageResolver(com.badlogic.gdx.graphics.g2d.TextureAtlas)
com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver: com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String)
com.badlogic.gdx.maps.Map
com.badlogic.gdx.maps.Map: com.badlogic.gdx.maps.MapLayers layers
com.badlogic.gdx.maps.Map: com.badlogic.gdx.maps.MapProperties properties
com.badlogic.gdx.maps.Map: Map()
com.badlogic.gdx.maps.Map: com.badlogic.gdx.maps.MapLayers getLayers()
com.badlogic.gdx.maps.Map: com.badlogic.gdx.maps.MapProperties getProperties()
com.badlogic.gdx.maps.Map: void dispose()
com.badlogic.gdx.maps.MapLayer
com.badlogic.gdx.maps.MapLayer: java.lang.String name
com.badlogic.gdx.maps.MapLayer: float opacity
com.badlogic.gdx.maps.MapLayer: boolean visible
com.badlogic.gdx.maps.MapLayer: com.badlogic.gdx.maps.MapObjects objects
com.badlogic.gdx.maps.MapLayer: com.badlogic.gdx.maps.MapProperties properties
com.badlogic.gdx.maps.MapLayer: MapLayer()
com.badlogic.gdx.maps.MapLayer: java.lang.String getName()
com.badlogic.gdx.maps.MapLayer: void setName(java.lang.String)
com.badlogic.gdx.maps.MapLayer: float getOpacity()
com.badlogic.gdx.maps.MapLayer: void setOpacity(float)
com.badlogic.gdx.maps.MapLayer: com.badlogic.gdx.maps.MapObjects getObjects()
com.badlogic.gdx.maps.MapLayer: boolean isVisible()
com.badlogic.gdx.maps.MapLayer: void setVisible(boolean)
com.badlogic.gdx.maps.MapLayer: com.badlogic.gdx.maps.MapProperties getProperties()
com.badlogic.gdx.maps.MapLayers
com.badlogic.gdx.maps.MapLayers: com.badlogic.gdx.utils.Array layers
com.badlogic.gdx.maps.MapLayers: MapLayers()
com.badlogic.gdx.maps.MapLayers: com.badlogic.gdx.maps.MapLayer get(int)
com.badlogic.gdx.maps.MapLayers: com.badlogic.gdx.maps.MapLayer get(java.lang.String)
com.badlogic.gdx.maps.MapLayers: int getCount()
com.badlogic.gdx.maps.MapLayers: void add(com.badlogic.gdx.maps.MapLayer)
com.badlogic.gdx.maps.MapLayers: void remove(int)
com.badlogic.gdx.maps.MapLayers: void remove(com.badlogic.gdx.maps.MapLayer)
com.badlogic.gdx.maps.MapLayers: com.badlogic.gdx.utils.Array getByType(java.lang.Class)
com.badlogic.gdx.maps.MapLayers: com.badlogic.gdx.utils.Array getByType(java.lang.Class,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.maps.MapLayers: java.util.Iterator iterator()
com.badlogic.gdx.maps.MapObject
com.badlogic.gdx.maps.MapObject: java.lang.String name
com.badlogic.gdx.maps.MapObject: float opacity
com.badlogic.gdx.maps.MapObject: boolean visible
com.badlogic.gdx.maps.MapObject: com.badlogic.gdx.maps.MapProperties properties
com.badlogic.gdx.maps.MapObject: com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.maps.MapObject: MapObject()
com.badlogic.gdx.maps.MapObject: java.lang.String getName()
com.badlogic.gdx.maps.MapObject: void setName(java.lang.String)
com.badlogic.gdx.maps.MapObject: com.badlogic.gdx.graphics.Color getColor()
com.badlogic.gdx.maps.MapObject: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.maps.MapObject: float getOpacity()
com.badlogic.gdx.maps.MapObject: void setOpacity(float)
com.badlogic.gdx.maps.MapObject: boolean isVisible()
com.badlogic.gdx.maps.MapObject: void setVisible(boolean)
com.badlogic.gdx.maps.MapObject: com.badlogic.gdx.maps.MapProperties getProperties()
com.badlogic.gdx.maps.MapObjects
com.badlogic.gdx.maps.MapObjects: com.badlogic.gdx.utils.Array objects
com.badlogic.gdx.maps.MapObjects: MapObjects()
com.badlogic.gdx.maps.MapObjects: com.badlogic.gdx.maps.MapObject get(int)
com.badlogic.gdx.maps.MapObjects: com.badlogic.gdx.maps.MapObject get(java.lang.String)
com.badlogic.gdx.maps.MapObjects: void add(com.badlogic.gdx.maps.MapObject)
com.badlogic.gdx.maps.MapObjects: void remove(int)
com.badlogic.gdx.maps.MapObjects: void remove(com.badlogic.gdx.maps.MapObject)
com.badlogic.gdx.maps.MapObjects: int getCount()
com.badlogic.gdx.maps.MapObjects: com.badlogic.gdx.utils.Array getByType(java.lang.Class)
com.badlogic.gdx.maps.MapObjects: com.badlogic.gdx.utils.Array getByType(java.lang.Class,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.maps.MapObjects: java.util.Iterator iterator()
com.badlogic.gdx.maps.MapProperties
com.badlogic.gdx.maps.MapProperties: com.badlogic.gdx.utils.ObjectMap properties
com.badlogic.gdx.maps.MapProperties: MapProperties()
com.badlogic.gdx.maps.MapProperties: boolean containsKey(java.lang.String)
com.badlogic.gdx.maps.MapProperties: java.lang.Object get(java.lang.String)
com.badlogic.gdx.maps.MapProperties: java.lang.Object get(java.lang.String,java.lang.Class)
com.badlogic.gdx.maps.MapProperties: java.lang.Object get(java.lang.String,java.lang.Object,java.lang.Class)
com.badlogic.gdx.maps.MapProperties: void put(java.lang.String,java.lang.Object)
com.badlogic.gdx.maps.MapProperties: void putAll(com.badlogic.gdx.maps.MapProperties)
com.badlogic.gdx.maps.MapProperties: void remove(java.lang.String)
com.badlogic.gdx.maps.MapProperties: void clear()
com.badlogic.gdx.maps.MapProperties: java.util.Iterator getKeys()
com.badlogic.gdx.maps.MapProperties: java.util.Iterator getValues()
com.badlogic.gdx.maps.MapRenderer
com.badlogic.gdx.maps.MapRenderer: void setView(com.badlogic.gdx.graphics.OrthographicCamera)
com.badlogic.gdx.maps.MapRenderer: void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float)
com.badlogic.gdx.maps.MapRenderer: void render()
com.badlogic.gdx.maps.MapRenderer: void render(int[])
com.badlogic.gdx.maps.objects.CircleMapObject
com.badlogic.gdx.maps.objects.CircleMapObject: com.badlogic.gdx.math.Circle circle
com.badlogic.gdx.maps.objects.CircleMapObject: com.badlogic.gdx.math.Circle getCircle()
com.badlogic.gdx.maps.objects.CircleMapObject: CircleMapObject()
com.badlogic.gdx.maps.objects.CircleMapObject: CircleMapObject(float,float,float)
com.badlogic.gdx.maps.objects.EllipseMapObject
com.badlogic.gdx.maps.objects.EllipseMapObject: com.badlogic.gdx.math.Ellipse ellipse
com.badlogic.gdx.maps.objects.EllipseMapObject: com.badlogic.gdx.math.Ellipse getEllipse()
com.badlogic.gdx.maps.objects.EllipseMapObject: EllipseMapObject()
com.badlogic.gdx.maps.objects.EllipseMapObject: EllipseMapObject(float,float,float,float)
com.badlogic.gdx.maps.objects.PolygonMapObject
com.badlogic.gdx.maps.objects.PolygonMapObject: com.badlogic.gdx.math.Polygon polygon
com.badlogic.gdx.maps.objects.PolygonMapObject: com.badlogic.gdx.math.Polygon getPolygon()
com.badlogic.gdx.maps.objects.PolygonMapObject: void setPolygon(com.badlogic.gdx.math.Polygon)
com.badlogic.gdx.maps.objects.PolygonMapObject: PolygonMapObject()
com.badlogic.gdx.maps.objects.PolygonMapObject: PolygonMapObject(float[])
com.badlogic.gdx.maps.objects.PolygonMapObject: PolygonMapObject(com.badlogic.gdx.math.Polygon)
com.badlogic.gdx.maps.objects.PolylineMapObject
com.badlogic.gdx.maps.objects.PolylineMapObject: com.badlogic.gdx.math.Polyline polyline
com.badlogic.gdx.maps.objects.PolylineMapObject: com.badlogic.gdx.math.Polyline getPolyline()
com.badlogic.gdx.maps.objects.PolylineMapObject: void setPolyline(com.badlogic.gdx.math.Polyline)
com.badlogic.gdx.maps.objects.PolylineMapObject: PolylineMapObject()
com.badlogic.gdx.maps.objects.PolylineMapObject: PolylineMapObject(float[])
com.badlogic.gdx.maps.objects.PolylineMapObject: PolylineMapObject(com.badlogic.gdx.math.Polyline)
com.badlogic.gdx.maps.objects.RectangleMapObject
com.badlogic.gdx.maps.objects.RectangleMapObject: com.badlogic.gdx.math.Rectangle rectangle
com.badlogic.gdx.maps.objects.RectangleMapObject: com.badlogic.gdx.math.Rectangle getRectangle()
com.badlogic.gdx.maps.objects.RectangleMapObject: RectangleMapObject()
com.badlogic.gdx.maps.objects.RectangleMapObject: RectangleMapObject(float,float,float,float)
com.badlogic.gdx.maps.objects.TextureMapObject
com.badlogic.gdx.maps.objects.TextureMapObject: float x
com.badlogic.gdx.maps.objects.TextureMapObject: float y
com.badlogic.gdx.maps.objects.TextureMapObject: float originX
com.badlogic.gdx.maps.objects.TextureMapObject: float originY
com.badlogic.gdx.maps.objects.TextureMapObject: float scaleX
com.badlogic.gdx.maps.objects.TextureMapObject: float scaleY
com.badlogic.gdx.maps.objects.TextureMapObject: float rotation
com.badlogic.gdx.maps.objects.TextureMapObject: com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion
com.badlogic.gdx.maps.objects.TextureMapObject: float getX()
com.badlogic.gdx.maps.objects.TextureMapObject: void setX(float)
com.badlogic.gdx.maps.objects.TextureMapObject: float getY()
com.badlogic.gdx.maps.objects.TextureMapObject: void setY(float)
com.badlogic.gdx.maps.objects.TextureMapObject: float getOriginX()
com.badlogic.gdx.maps.objects.TextureMapObject: void setOriginX(float)
com.badlogic.gdx.maps.objects.TextureMapObject: float getOriginY()
com.badlogic.gdx.maps.objects.TextureMapObject: void setOriginY(float)
com.badlogic.gdx.maps.objects.TextureMapObject: float getScaleX()
com.badlogic.gdx.maps.objects.TextureMapObject: void setScaleX(float)
com.badlogic.gdx.maps.objects.TextureMapObject: float getScaleY()
com.badlogic.gdx.maps.objects.TextureMapObject: void setScaleY(float)
com.badlogic.gdx.maps.objects.TextureMapObject: float getRotation()
com.badlogic.gdx.maps.objects.TextureMapObject: void setRotation(float)
com.badlogic.gdx.maps.objects.TextureMapObject: com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion()
com.badlogic.gdx.maps.objects.TextureMapObject: void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.maps.objects.TextureMapObject: TextureMapObject()
com.badlogic.gdx.maps.objects.TextureMapObject: TextureMapObject(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: int FLAG_FLIP_HORIZONTALLY
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: int FLAG_FLIP_VERTICALLY
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: int FLAG_FLIP_DIAGONALLY
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: int MASK_CLEAR
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: com.badlogic.gdx.utils.XmlReader xml
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: com.badlogic.gdx.utils.XmlReader$Element root
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: boolean convertObjectToTileSpace
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: int mapTileWidth
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: int mapTileHeight
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: int mapWidthInPixels
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: int mapHeightInPixels
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: com.badlogic.gdx.maps.tiled.TiledMap map
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: com.badlogic.gdx.utils.Array trackedTextures
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: AtlasTmxMapLoader()
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: AtlasTmxMapLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: com.badlogic.gdx.files.FileHandle loadAtlas(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: void setTextureFilters(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: com.badlogic.gdx.maps.tiled.TiledMap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: com.badlogic.gdx.maps.tiled.TiledMap loadMap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: void loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: void loadTileLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: void loadObjectGroup(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: void loadObject(com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: void loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell createTileLayerCell(boolean,boolean,boolean)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver: com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas(java.lang.String)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$AssetManagerAtlasResolver
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$AssetManagerAtlasResolver: com.badlogic.gdx.assets.AssetManager assetManager
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$AssetManagerAtlasResolver: AtlasTmxMapLoader$AtlasResolver$AssetManagerAtlasResolver(com.badlogic.gdx.assets.AssetManager)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$AssetManagerAtlasResolver: com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas(java.lang.String)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver: com.badlogic.gdx.utils.ObjectMap atlases
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver: AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver(com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver: com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas(java.lang.String)
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters: boolean forceTextureFilters
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters: com.badlogic.gdx.graphics.Texture$TextureFilter textureMinFilter
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters: com.badlogic.gdx.graphics.Texture$TextureFilter textureMagFilter
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters: boolean convertObjectToTileSpace
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters: AtlasTmxMapLoader$AtlasTiledMapLoaderParameters()
com.badlogic.gdx.maps.tiled.TideMapLoader
com.badlogic.gdx.maps.tiled.TideMapLoader: com.badlogic.gdx.utils.XmlReader xml
com.badlogic.gdx.maps.tiled.TideMapLoader: com.badlogic.gdx.utils.XmlReader$Element root
com.badlogic.gdx.maps.tiled.TideMapLoader: TideMapLoader()
com.badlogic.gdx.maps.tiled.TideMapLoader: TideMapLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.maps.tiled.TideMapLoader: com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String)
com.badlogic.gdx.maps.tiled.TideMapLoader: com.badlogic.gdx.maps.tiled.TiledMap load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters)
com.badlogic.gdx.maps.tiled.TideMapLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters)
com.badlogic.gdx.maps.tiled.TideMapLoader: com.badlogic.gdx.maps.tiled.TiledMap loadMap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)
com.badlogic.gdx.maps.tiled.TideMapLoader: com.badlogic.gdx.utils.Array loadTileSheets(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.maps.tiled.TideMapLoader: void loadTileSheet(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)
com.badlogic.gdx.maps.tiled.TideMapLoader: void loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)
com.badlogic.gdx.maps.tiled.TideMapLoader: void loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element)
com.badlogic.gdx.maps.tiled.TideMapLoader: com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String)
com.badlogic.gdx.maps.tiled.TideMapLoader: java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.maps.tiled.TideMapLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters
com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters: TideMapLoader$Parameters()
com.badlogic.gdx.maps.tiled.TiledMap
com.badlogic.gdx.maps.tiled.TiledMap: com.badlogic.gdx.maps.tiled.TiledMapTileSets tilesets
com.badlogic.gdx.maps.tiled.TiledMap: com.badlogic.gdx.utils.Array ownedResources
com.badlogic.gdx.maps.tiled.TiledMap: com.badlogic.gdx.maps.tiled.TiledMapTileSets getTileSets()
com.badlogic.gdx.maps.tiled.TiledMap: TiledMap()
com.badlogic.gdx.maps.tiled.TiledMap: void setOwnedResources(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.maps.tiled.TiledMap: void dispose()
com.badlogic.gdx.maps.tiled.TiledMapRenderer
com.badlogic.gdx.maps.tiled.TiledMapRenderer: void renderObject(com.badlogic.gdx.maps.MapObject)
com.badlogic.gdx.maps.tiled.TiledMapRenderer: void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)
com.badlogic.gdx.maps.tiled.TiledMapTile
com.badlogic.gdx.maps.tiled.TiledMapTile: int getId()
com.badlogic.gdx.maps.tiled.TiledMapTile: void setId(int)
com.badlogic.gdx.maps.tiled.TiledMapTile: com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode()
com.badlogic.gdx.maps.tiled.TiledMapTile: void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode)
com.badlogic.gdx.maps.tiled.TiledMapTile: com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion()
com.badlogic.gdx.maps.tiled.TiledMapTile: float getOffsetX()
com.badlogic.gdx.maps.tiled.TiledMapTile: void setOffsetX(float)
com.badlogic.gdx.maps.tiled.TiledMapTile: float getOffsetY()
com.badlogic.gdx.maps.tiled.TiledMapTile: void setOffsetY(float)
com.badlogic.gdx.maps.tiled.TiledMapTile: com.badlogic.gdx.maps.MapProperties getProperties()
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode: com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode NONE
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode: com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode ALPHA
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode: com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode[] $VALUES
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode: com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode[] values()
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode: com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode valueOf(java.lang.String)
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode: TiledMapTile$BlendMode(java.lang.String,int)
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode: void <clinit>()
com.badlogic.gdx.maps.tiled.TiledMapTileLayer
com.badlogic.gdx.maps.tiled.TiledMapTileLayer: int width
com.badlogic.gdx.maps.tiled.TiledMapTileLayer: int height
com.badlogic.gdx.maps.tiled.TiledMapTileLayer: float tileWidth
com.badlogic.gdx.maps.tiled.TiledMapTileLayer: float tileHeight
com.badlogic.gdx.maps.tiled.TiledMapTileLayer: com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell[][] cells
com.badlogic.gdx.maps.tiled.TiledMapTileLayer: int getWidth()
com.badlogic.gdx.maps.tiled.TiledMapTileLayer: int getHeight()
com.badlogic.gdx.maps.tiled.TiledMapTileLayer: float getTileWidth()
com.badlogic.gdx.maps.tiled.TiledMapTileLayer: float getTileHeight()
com.badlogic.gdx.maps.tiled.TiledMapTileLayer: TiledMapTileLayer(int,int,int,int)
com.badlogic.gdx.maps.tiled.TiledMapTileLayer: com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell getCell(int,int)
com.badlogic.gdx.maps.tiled.TiledMapTileLayer: void setCell(int,int,com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell)
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: com.badlogic.gdx.maps.tiled.TiledMapTile tile
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: boolean flipHorizontally
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: boolean flipVertically
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: int rotation
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: int ROTATE_0
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: int ROTATE_90
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: int ROTATE_180
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: int ROTATE_270
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: TiledMapTileLayer$Cell()
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: com.badlogic.gdx.maps.tiled.TiledMapTile getTile()
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: void setTile(com.badlogic.gdx.maps.tiled.TiledMapTile)
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: boolean getFlipHorizontally()
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: void setFlipHorizontally(boolean)
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: boolean getFlipVertically()
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: void setFlipVertically(boolean)
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: int getRotation()
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell: void setRotation(int)
com.badlogic.gdx.maps.tiled.TiledMapTileSet
com.badlogic.gdx.maps.tiled.TiledMapTileSet: java.lang.String name
com.badlogic.gdx.maps.tiled.TiledMapTileSet: com.badlogic.gdx.utils.IntMap tiles
com.badlogic.gdx.maps.tiled.TiledMapTileSet: com.badlogic.gdx.maps.MapProperties properties
com.badlogic.gdx.maps.tiled.TiledMapTileSet: java.lang.String getName()
com.badlogic.gdx.maps.tiled.TiledMapTileSet: void setName(java.lang.String)
com.badlogic.gdx.maps.tiled.TiledMapTileSet: com.badlogic.gdx.maps.MapProperties getProperties()
com.badlogic.gdx.maps.tiled.TiledMapTileSet: TiledMapTileSet()
com.badlogic.gdx.maps.tiled.TiledMapTileSet: com.badlogic.gdx.maps.tiled.TiledMapTile getTile(int)
com.badlogic.gdx.maps.tiled.TiledMapTileSet: java.util.Iterator iterator()
com.badlogic.gdx.maps.tiled.TiledMapTileSet: void putTile(int,com.badlogic.gdx.maps.tiled.TiledMapTile)
com.badlogic.gdx.maps.tiled.TiledMapTileSet: void removeTile(int)
com.badlogic.gdx.maps.tiled.TiledMapTileSet: int size()
com.badlogic.gdx.maps.tiled.TiledMapTileSets
com.badlogic.gdx.maps.tiled.TiledMapTileSets: com.badlogic.gdx.utils.Array tilesets
com.badlogic.gdx.maps.tiled.TiledMapTileSets: TiledMapTileSets()
com.badlogic.gdx.maps.tiled.TiledMapTileSets: com.badlogic.gdx.maps.tiled.TiledMapTileSet getTileSet(int)
com.badlogic.gdx.maps.tiled.TiledMapTileSets: com.badlogic.gdx.maps.tiled.TiledMapTileSet getTileSet(java.lang.String)
com.badlogic.gdx.maps.tiled.TiledMapTileSets: void addTileSet(com.badlogic.gdx.maps.tiled.TiledMapTileSet)
com.badlogic.gdx.maps.tiled.TiledMapTileSets: void removeTileSet(int)
com.badlogic.gdx.maps.tiled.TiledMapTileSets: void removeTileSet(com.badlogic.gdx.maps.tiled.TiledMapTileSet)
com.badlogic.gdx.maps.tiled.TiledMapTileSets: com.badlogic.gdx.maps.tiled.TiledMapTile getTile(int)
com.badlogic.gdx.maps.tiled.TiledMapTileSets: java.util.Iterator iterator()
com.badlogic.gdx.maps.tiled.TmxMapHelper
com.badlogic.gdx.maps.tiled.TmxMapHelper: int FLAG_FLIP_HORIZONTALLY
com.badlogic.gdx.maps.tiled.TmxMapHelper: int FLAG_FLIP_VERTICALLY
com.badlogic.gdx.maps.tiled.TmxMapHelper: int FLAG_FLIP_DIAGONALLY
com.badlogic.gdx.maps.tiled.TmxMapHelper: int MASK_CLEAR
com.badlogic.gdx.maps.tiled.TmxMapHelper: TmxMapHelper()
com.badlogic.gdx.maps.tiled.TmxMapHelper: int[] getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int)
com.badlogic.gdx.maps.tiled.TmxMapHelper: int unsignedByteToInt(byte)
com.badlogic.gdx.maps.tiled.TmxMapLoader
com.badlogic.gdx.maps.tiled.TmxMapLoader: int FLAG_FLIP_HORIZONTALLY
com.badlogic.gdx.maps.tiled.TmxMapLoader: int FLAG_FLIP_VERTICALLY
com.badlogic.gdx.maps.tiled.TmxMapLoader: int FLAG_FLIP_DIAGONALLY
com.badlogic.gdx.maps.tiled.TmxMapLoader: int MASK_CLEAR
com.badlogic.gdx.maps.tiled.TmxMapLoader: com.badlogic.gdx.utils.XmlReader xml
com.badlogic.gdx.maps.tiled.TmxMapLoader: com.badlogic.gdx.utils.XmlReader$Element root
com.badlogic.gdx.maps.tiled.TmxMapLoader: boolean convertObjectToTileSpace
com.badlogic.gdx.maps.tiled.TmxMapLoader: int mapTileWidth
com.badlogic.gdx.maps.tiled.TmxMapLoader: int mapTileHeight
com.badlogic.gdx.maps.tiled.TmxMapLoader: int mapWidthInPixels
com.badlogic.gdx.maps.tiled.TmxMapLoader: int mapHeightInPixels
com.badlogic.gdx.maps.tiled.TmxMapLoader: com.badlogic.gdx.maps.tiled.TiledMap map
com.badlogic.gdx.maps.tiled.TmxMapLoader: TmxMapLoader()
com.badlogic.gdx.maps.tiled.TmxMapLoader: TmxMapLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)
com.badlogic.gdx.maps.tiled.TmxMapLoader: com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String)
com.badlogic.gdx.maps.tiled.TmxMapLoader: com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters)
com.badlogic.gdx.maps.tiled.TmxMapLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters)
com.badlogic.gdx.maps.tiled.TmxMapLoader: com.badlogic.gdx.maps.tiled.TiledMap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters)
com.badlogic.gdx.maps.tiled.TmxMapLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters)
com.badlogic.gdx.maps.tiled.TmxMapLoader: com.badlogic.gdx.maps.tiled.TiledMap loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)
com.badlogic.gdx.maps.tiled.TmxMapLoader: com.badlogic.gdx.utils.Array loadTilesets(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.maps.tiled.TmxMapLoader: void loadTileSet(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver)
com.badlogic.gdx.maps.tiled.TmxMapLoader: void loadTileLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)
com.badlogic.gdx.maps.tiled.TmxMapLoader: void loadObjectGroup(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element)
com.badlogic.gdx.maps.tiled.TmxMapLoader: void loadObject(com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element)
com.badlogic.gdx.maps.tiled.TmxMapLoader: void loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element)
com.badlogic.gdx.maps.tiled.TmxMapLoader: com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell createTileLayerCell(boolean,boolean,boolean)
com.badlogic.gdx.maps.tiled.TmxMapLoader: com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String)
com.badlogic.gdx.maps.tiled.TmxMapLoader: java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.maps.tiled.TmxMapLoader: void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.maps.tiled.TmxMapLoader: com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters)
com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters
com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters: boolean generateMipMaps
com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters: com.badlogic.gdx.graphics.Texture$TextureFilter textureMinFilter
com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters: com.badlogic.gdx.graphics.Texture$TextureFilter textureMagFilter
com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters: boolean convertObjectToTileSpace
com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters: TmxMapLoader$Parameters()
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: com.badlogic.gdx.maps.tiled.TiledMap map
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: float unitScale
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: com.badlogic.gdx.graphics.g2d.Batch spriteBatch
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: com.badlogic.gdx.math.Rectangle viewBounds
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: boolean ownsSpriteBatch
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: float[] vertices
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: com.badlogic.gdx.maps.tiled.TiledMap getMap()
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: void setMap(com.badlogic.gdx.maps.tiled.TiledMap)
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: float getUnitScale()
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: com.badlogic.gdx.graphics.g2d.Batch getSpriteBatch()
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: com.badlogic.gdx.math.Rectangle getViewBounds()
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: BatchTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap)
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: BatchTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float)
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: BatchTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: BatchTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float,com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: void setView(com.badlogic.gdx.graphics.OrthographicCamera)
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float)
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: void render()
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: void render(int[])
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: void beginRender()
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: void endRender()
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer: void dispose()
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer: HexagonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap)
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer: HexagonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float)
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer: HexagonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer: HexagonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float,com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer: void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer: void renderObject(com.badlogic.gdx.maps.MapObject)
com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer: IsometricStaggeredTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap)
com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer: IsometricStaggeredTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer: IsometricStaggeredTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float)
com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer: IsometricStaggeredTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float,com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer: void renderObject(com.badlogic.gdx.maps.MapObject)
com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer: void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer: com.badlogic.gdx.math.Matrix4 isoTransform
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer: com.badlogic.gdx.math.Matrix4 invIsotransform
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer: com.badlogic.gdx.math.Vector3 screenPos
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer: com.badlogic.gdx.math.Vector2 topRight
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer: com.badlogic.gdx.math.Vector2 bottomLeft
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer: com.badlogic.gdx.math.Vector2 topLeft
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer: com.badlogic.gdx.math.Vector2 bottomRight
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer: IsometricTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap)
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer: IsometricTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer: IsometricTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float)
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer: IsometricTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float,com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer: void init()
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer: void renderObject(com.badlogic.gdx.maps.MapObject)
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer: com.badlogic.gdx.math.Vector3 translateScreenToIso(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer: void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: float tolerance
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: com.badlogic.gdx.maps.tiled.TiledMap map
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: com.badlogic.gdx.graphics.g2d.SpriteCache spriteCache
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: float[] vertices
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: boolean blending
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: float unitScale
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: com.badlogic.gdx.math.Rectangle viewBounds
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: com.badlogic.gdx.math.Rectangle cacheBounds
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: float overCache
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: float maxTileWidth
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: float maxTileHeight
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: boolean cached
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: int count
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: boolean canCacheMoreN
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: boolean canCacheMoreE
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: boolean canCacheMoreW
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: boolean canCacheMoreS
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: OrthoCachedTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap)
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: OrthoCachedTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float)
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: OrthoCachedTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float,int)
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: void setView(com.badlogic.gdx.graphics.OrthographicCamera)
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float)
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: void render()
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: void render(int[])
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: void renderObject(com.badlogic.gdx.maps.MapObject)
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: void invalidateCache()
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: boolean isCached()
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: void setOverCache(float)
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: void setMaxTileSize(float,float)
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: void setBlending(boolean)
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: com.badlogic.gdx.graphics.g2d.SpriteCache getSpriteCache()
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer: void dispose()
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer: OrthogonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap)
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer: OrthogonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer: OrthogonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float)
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer: OrthogonalTiledMapRenderer(com.badlogic.gdx.maps.tiled.TiledMap,float,com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer: void renderObject(com.badlogic.gdx.maps.MapObject)
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer: void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer)
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: long lastTiledMapRenderTime
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: int id
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode blendMode
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: com.badlogic.gdx.maps.MapProperties properties
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: com.badlogic.gdx.utils.Array frameTiles
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: float animationInterval
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: long frameCount
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: long initialTimeOffset
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: int getId()
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: void setId(int)
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode()
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode)
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion()
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: float getOffsetX()
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: void setOffsetX(float)
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: float getOffsetY()
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: void setOffsetY(float)
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: com.badlogic.gdx.maps.MapProperties getProperties()
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: void updateAnimationBaseTime()
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: AnimatedTiledMapTile(float,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile: void <clinit>()
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: int id
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode blendMode
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: com.badlogic.gdx.maps.MapProperties properties
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: float offsetX
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: float offsetY
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: int getId()
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: void setId(int)
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode()
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode)
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: com.badlogic.gdx.maps.MapProperties getProperties()
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion()
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: float getOffsetX()
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: void setOffsetX(float)
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: float getOffsetY()
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: void setOffsetY(float)
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: StaticTiledMapTile(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile: StaticTiledMapTile(com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile)
com.badlogic.gdx.math.BSpline
com.badlogic.gdx.math.BSpline: float d6
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector[] controlPoints
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.utils.Array knots
com.badlogic.gdx.math.BSpline: int degree
com.badlogic.gdx.math.BSpline: boolean continuous
com.badlogic.gdx.math.BSpline: int spanCount
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector tmp
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector tmp2
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector tmp3
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector cubic_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector cubic_derivative(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.BSpline: BSpline()
com.badlogic.gdx.math.BSpline: BSpline(com.badlogic.gdx.math.Vector[],int,boolean)
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.BSpline set(com.badlogic.gdx.math.Vector[],int,boolean)
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,int,float)
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.BSpline: com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,int,float)
com.badlogic.gdx.math.BSpline: int nearest(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.BSpline: int nearest(com.badlogic.gdx.math.Vector,int,int)
com.badlogic.gdx.math.BSpline: float approximate(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.BSpline: float approximate(com.badlogic.gdx.math.Vector,int,int)
com.badlogic.gdx.math.BSpline: float approximate(com.badlogic.gdx.math.Vector,int)
com.badlogic.gdx.math.BSpline: float locate(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.BSpline: float approxLength(int)
com.badlogic.gdx.math.BSpline: float locate(java.lang.Object)
com.badlogic.gdx.math.BSpline: float approximate(java.lang.Object)
com.badlogic.gdx.math.BSpline: java.lang.Object valueAt(java.lang.Object,float)
com.badlogic.gdx.math.BSpline: java.lang.Object derivativeAt(java.lang.Object,float)
com.badlogic.gdx.math.Bezier
com.badlogic.gdx.math.Bezier: com.badlogic.gdx.utils.Array points
com.badlogic.gdx.math.Bezier: com.badlogic.gdx.math.Vector tmp
com.badlogic.gdx.math.Bezier: com.badlogic.gdx.math.Vector tmp2
com.badlogic.gdx.math.Bezier: com.badlogic.gdx.math.Vector tmp3
com.badlogic.gdx.math.Bezier: com.badlogic.gdx.math.Vector linear(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Bezier: com.badlogic.gdx.math.Vector linear_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Bezier: com.badlogic.gdx.math.Vector quadratic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Bezier: com.badlogic.gdx.math.Vector quadratic_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Bezier: com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Bezier: com.badlogic.gdx.math.Vector cubic_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Bezier: Bezier()
com.badlogic.gdx.math.Bezier: Bezier(com.badlogic.gdx.math.Vector[])
com.badlogic.gdx.math.Bezier: Bezier(com.badlogic.gdx.math.Vector[],int,int)
com.badlogic.gdx.math.Bezier: Bezier(com.badlogic.gdx.utils.Array,int,int)
com.badlogic.gdx.math.Bezier: com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.math.Vector[])
com.badlogic.gdx.math.Bezier: com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.math.Vector[],int,int)
com.badlogic.gdx.math.Bezier: com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.utils.Array,int,int)
com.badlogic.gdx.math.Bezier: com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Bezier: com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Bezier: float approximate(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Bezier: float locate(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Bezier: float approxLength(int)
com.badlogic.gdx.math.Bezier: float locate(java.lang.Object)
com.badlogic.gdx.math.Bezier: float approximate(java.lang.Object)
com.badlogic.gdx.math.Bezier: java.lang.Object valueAt(java.lang.Object,float)
com.badlogic.gdx.math.Bezier: java.lang.Object derivativeAt(java.lang.Object,float)
com.badlogic.gdx.math.Bresenham2
com.badlogic.gdx.math.Bresenham2: com.badlogic.gdx.utils.Array points
com.badlogic.gdx.math.Bresenham2: com.badlogic.gdx.utils.Pool pool
com.badlogic.gdx.math.Bresenham2: Bresenham2()
com.badlogic.gdx.math.Bresenham2: com.badlogic.gdx.utils.Array line(com.badlogic.gdx.math.GridPoint2,com.badlogic.gdx.math.GridPoint2)
com.badlogic.gdx.math.Bresenham2: com.badlogic.gdx.utils.Array line(int,int,int,int)
com.badlogic.gdx.math.Bresenham2: com.badlogic.gdx.utils.Array line(int,int,int,int,com.badlogic.gdx.utils.Pool,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.math.Bresenham2$1
com.badlogic.gdx.math.Bresenham2$1: com.badlogic.gdx.math.Bresenham2 this$0
com.badlogic.gdx.math.Bresenham2$1: Bresenham2$1(com.badlogic.gdx.math.Bresenham2)
com.badlogic.gdx.math.Bresenham2$1: com.badlogic.gdx.math.GridPoint2 newObject()
com.badlogic.gdx.math.Bresenham2$1: java.lang.Object newObject()
com.badlogic.gdx.math.CatmullRomSpline
com.badlogic.gdx.math.CatmullRomSpline: com.badlogic.gdx.math.Vector[] controlPoints
com.badlogic.gdx.math.CatmullRomSpline: boolean continuous
com.badlogic.gdx.math.CatmullRomSpline: int spanCount
com.badlogic.gdx.math.CatmullRomSpline: com.badlogic.gdx.math.Vector tmp
com.badlogic.gdx.math.CatmullRomSpline: com.badlogic.gdx.math.Vector tmp2
com.badlogic.gdx.math.CatmullRomSpline: com.badlogic.gdx.math.Vector tmp3
com.badlogic.gdx.math.CatmullRomSpline: com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.CatmullRomSpline: com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.CatmullRomSpline: com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.CatmullRomSpline: com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.CatmullRomSpline: CatmullRomSpline()
com.badlogic.gdx.math.CatmullRomSpline: CatmullRomSpline(com.badlogic.gdx.math.Vector[],boolean)
com.badlogic.gdx.math.CatmullRomSpline: com.badlogic.gdx.math.CatmullRomSpline set(com.badlogic.gdx.math.Vector[],boolean)
com.badlogic.gdx.math.CatmullRomSpline: com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.CatmullRomSpline: com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,int,float)
com.badlogic.gdx.math.CatmullRomSpline: com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.CatmullRomSpline: com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,int,float)
com.badlogic.gdx.math.CatmullRomSpline: int nearest(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.CatmullRomSpline: int nearest(com.badlogic.gdx.math.Vector,int,int)
com.badlogic.gdx.math.CatmullRomSpline: float approximate(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.CatmullRomSpline: float approximate(com.badlogic.gdx.math.Vector,int,int)
com.badlogic.gdx.math.CatmullRomSpline: float approximate(com.badlogic.gdx.math.Vector,int)
com.badlogic.gdx.math.CatmullRomSpline: float locate(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.CatmullRomSpline: float approxLength(int)
com.badlogic.gdx.math.CatmullRomSpline: float locate(java.lang.Object)
com.badlogic.gdx.math.CatmullRomSpline: float approximate(java.lang.Object)
com.badlogic.gdx.math.CatmullRomSpline: java.lang.Object valueAt(java.lang.Object,float)
com.badlogic.gdx.math.CatmullRomSpline: java.lang.Object derivativeAt(java.lang.Object,float)
com.badlogic.gdx.math.Circle
com.badlogic.gdx.math.Circle: float x
com.badlogic.gdx.math.Circle: float y
com.badlogic.gdx.math.Circle: float radius
com.badlogic.gdx.math.Circle: Circle()
com.badlogic.gdx.math.Circle: Circle(float,float,float)
com.badlogic.gdx.math.Circle: Circle(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Circle: Circle(com.badlogic.gdx.math.Circle)
com.badlogic.gdx.math.Circle: void set(float,float,float)
com.badlogic.gdx.math.Circle: void set(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Circle: void set(com.badlogic.gdx.math.Circle)
com.badlogic.gdx.math.Circle: void setPosition(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Circle: void setPosition(float,float)
com.badlogic.gdx.math.Circle: void setX(float)
com.badlogic.gdx.math.Circle: void setY(float)
com.badlogic.gdx.math.Circle: void setRadius(float)
com.badlogic.gdx.math.Circle: boolean contains(float,float)
com.badlogic.gdx.math.Circle: boolean contains(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Circle: boolean contains(com.badlogic.gdx.math.Circle)
com.badlogic.gdx.math.Circle: boolean overlaps(com.badlogic.gdx.math.Circle)
com.badlogic.gdx.math.Circle: java.lang.String toString()
com.badlogic.gdx.math.ConvexHull
com.badlogic.gdx.math.ConvexHull: com.badlogic.gdx.utils.IntArray quicksortStack
com.badlogic.gdx.math.ConvexHull: float[] sortedPoints
com.badlogic.gdx.math.ConvexHull: com.badlogic.gdx.utils.FloatArray hull
com.badlogic.gdx.math.ConvexHull: com.badlogic.gdx.utils.IntArray indices
com.badlogic.gdx.math.ConvexHull: com.badlogic.gdx.utils.ShortArray originalIndices
com.badlogic.gdx.math.ConvexHull: ConvexHull()
com.badlogic.gdx.math.ConvexHull: com.badlogic.gdx.utils.FloatArray computePolygon(com.badlogic.gdx.utils.FloatArray,boolean)
com.badlogic.gdx.math.ConvexHull: com.badlogic.gdx.utils.FloatArray computePolygon(float[],boolean)
com.badlogic.gdx.math.ConvexHull: com.badlogic.gdx.utils.FloatArray computePolygon(float[],int,int,boolean)
com.badlogic.gdx.math.ConvexHull: com.badlogic.gdx.utils.IntArray computeIndices(com.badlogic.gdx.utils.FloatArray,boolean,boolean)
com.badlogic.gdx.math.ConvexHull: com.badlogic.gdx.utils.IntArray computeIndices(float[],boolean,boolean)
com.badlogic.gdx.math.ConvexHull: com.badlogic.gdx.utils.IntArray computeIndices(float[],int,int,boolean,boolean)
com.badlogic.gdx.math.ConvexHull: float ccw(float,float)
com.badlogic.gdx.math.ConvexHull: void sort(float[],int)
com.badlogic.gdx.math.ConvexHull: int quicksortPartition(float[],int,int)
com.badlogic.gdx.math.ConvexHull: void sortWithIndices(float[],int,boolean)
com.badlogic.gdx.math.ConvexHull: int quicksortPartitionWithIndices(float[],int,int,boolean,short[])
com.badlogic.gdx.math.CumulativeDistribution
com.badlogic.gdx.math.CumulativeDistribution: com.badlogic.gdx.utils.Array values
com.badlogic.gdx.math.CumulativeDistribution: CumulativeDistribution()
com.badlogic.gdx.math.CumulativeDistribution: void add(java.lang.Object,float)
com.badlogic.gdx.math.CumulativeDistribution: void add(java.lang.Object)
com.badlogic.gdx.math.CumulativeDistribution: void generate()
com.badlogic.gdx.math.CumulativeDistribution: void generateNormalized()
com.badlogic.gdx.math.CumulativeDistribution: void generateUniform()
com.badlogic.gdx.math.CumulativeDistribution: java.lang.Object value(float)
com.badlogic.gdx.math.CumulativeDistribution: java.lang.Object value()
com.badlogic.gdx.math.CumulativeDistribution: int size()
com.badlogic.gdx.math.CumulativeDistribution: float getInterval(int)
com.badlogic.gdx.math.CumulativeDistribution: java.lang.Object getValue(int)
com.badlogic.gdx.math.CumulativeDistribution: void setInterval(java.lang.Object,float)
com.badlogic.gdx.math.CumulativeDistribution: void setInterval(int,float)
com.badlogic.gdx.math.CumulativeDistribution: void clear()
com.badlogic.gdx.math.CumulativeDistribution$CumulativeValue
com.badlogic.gdx.math.CumulativeDistribution$CumulativeValue: java.lang.Object value
com.badlogic.gdx.math.CumulativeDistribution$CumulativeValue: float frequency
com.badlogic.gdx.math.CumulativeDistribution$CumulativeValue: float interval
com.badlogic.gdx.math.CumulativeDistribution$CumulativeValue: com.badlogic.gdx.math.CumulativeDistribution this$0
com.badlogic.gdx.math.CumulativeDistribution$CumulativeValue: CumulativeDistribution$CumulativeValue(com.badlogic.gdx.math.CumulativeDistribution,java.lang.Object,float,float)
com.badlogic.gdx.math.DelaunayTriangulator
com.badlogic.gdx.math.DelaunayTriangulator: float EPSILON
com.badlogic.gdx.math.DelaunayTriangulator: int INSIDE
com.badlogic.gdx.math.DelaunayTriangulator: int COMPLETE
com.badlogic.gdx.math.DelaunayTriangulator: int INCOMPLETE
com.badlogic.gdx.math.DelaunayTriangulator: com.badlogic.gdx.utils.IntArray quicksortStack
com.badlogic.gdx.math.DelaunayTriangulator: float[] sortedPoints
com.badlogic.gdx.math.DelaunayTriangulator: com.badlogic.gdx.utils.ShortArray triangles
com.badlogic.gdx.math.DelaunayTriangulator: com.badlogic.gdx.utils.ShortArray originalIndices
com.badlogic.gdx.math.DelaunayTriangulator: com.badlogic.gdx.utils.IntArray edges
com.badlogic.gdx.math.DelaunayTriangulator: com.badlogic.gdx.utils.BooleanArray complete
com.badlogic.gdx.math.DelaunayTriangulator: float[] superTriangle
com.badlogic.gdx.math.DelaunayTriangulator: com.badlogic.gdx.math.Vector2 centroid
com.badlogic.gdx.math.DelaunayTriangulator: DelaunayTriangulator()
com.badlogic.gdx.math.DelaunayTriangulator: com.badlogic.gdx.utils.ShortArray computeTriangles(com.badlogic.gdx.utils.FloatArray,boolean)
com.badlogic.gdx.math.DelaunayTriangulator: com.badlogic.gdx.utils.ShortArray computeTriangles(float[],boolean)
com.badlogic.gdx.math.DelaunayTriangulator: com.badlogic.gdx.utils.ShortArray computeTriangles(float[],int,int,boolean)
com.badlogic.gdx.math.DelaunayTriangulator: int circumCircle(float,float,float,float,float,float,float,float)
com.badlogic.gdx.math.DelaunayTriangulator: void sort(float[],int)
com.badlogic.gdx.math.DelaunayTriangulator: int quicksortPartition(float[],int,int,short[])
com.badlogic.gdx.math.DelaunayTriangulator: void trim(com.badlogic.gdx.utils.ShortArray,float[],float[],int,int)
com.badlogic.gdx.math.EarClippingTriangulator
com.badlogic.gdx.math.EarClippingTriangulator: int CONCAVE
com.badlogic.gdx.math.EarClippingTriangulator: int TANGENTIAL
com.badlogic.gdx.math.EarClippingTriangulator: int CONVEX
com.badlogic.gdx.math.EarClippingTriangulator: com.badlogic.gdx.utils.ShortArray indicesArray
com.badlogic.gdx.math.EarClippingTriangulator: short[] indices
com.badlogic.gdx.math.EarClippingTriangulator: float[] vertices
com.badlogic.gdx.math.EarClippingTriangulator: int vertexCount
com.badlogic.gdx.math.EarClippingTriangulator: com.badlogic.gdx.utils.IntArray vertexTypes
com.badlogic.gdx.math.EarClippingTriangulator: com.badlogic.gdx.utils.ShortArray triangles
com.badlogic.gdx.math.EarClippingTriangulator: EarClippingTriangulator()
com.badlogic.gdx.math.EarClippingTriangulator: com.badlogic.gdx.utils.ShortArray computeTriangles(com.badlogic.gdx.utils.FloatArray)
com.badlogic.gdx.math.EarClippingTriangulator: com.badlogic.gdx.utils.ShortArray computeTriangles(float[])
com.badlogic.gdx.math.EarClippingTriangulator: com.badlogic.gdx.utils.ShortArray computeTriangles(float[],int,int)
com.badlogic.gdx.math.EarClippingTriangulator: void triangulate()
com.badlogic.gdx.math.EarClippingTriangulator: int classifyVertex(int)
com.badlogic.gdx.math.EarClippingTriangulator: int findEarTip()
com.badlogic.gdx.math.EarClippingTriangulator: boolean isEarTip(int)
com.badlogic.gdx.math.EarClippingTriangulator: void cutEarTip(int)
com.badlogic.gdx.math.EarClippingTriangulator: int previousIndex(int)
com.badlogic.gdx.math.EarClippingTriangulator: int nextIndex(int)
com.badlogic.gdx.math.EarClippingTriangulator: boolean areVerticesClockwise(float[],int,int)
com.badlogic.gdx.math.EarClippingTriangulator: int computeSpannedAreaSign(float,float,float,float,float,float)
com.badlogic.gdx.math.Ellipse
com.badlogic.gdx.math.Ellipse: float x
com.badlogic.gdx.math.Ellipse: float y
com.badlogic.gdx.math.Ellipse: float width
com.badlogic.gdx.math.Ellipse: float height
com.badlogic.gdx.math.Ellipse: long serialVersionUID
com.badlogic.gdx.math.Ellipse: Ellipse()
com.badlogic.gdx.math.Ellipse: Ellipse(com.badlogic.gdx.math.Ellipse)
com.badlogic.gdx.math.Ellipse: Ellipse(float,float,float,float)
com.badlogic.gdx.math.Ellipse: Ellipse(com.badlogic.gdx.math.Vector2,float,float)
com.badlogic.gdx.math.Ellipse: boolean contains(float,float)
com.badlogic.gdx.math.Ellipse: boolean contains(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Ellipse: void set(float,float,float,float)
com.badlogic.gdx.math.Ellipse: void set(com.badlogic.gdx.math.Ellipse)
com.badlogic.gdx.math.Ellipse: com.badlogic.gdx.math.Ellipse setPosition(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Ellipse: com.badlogic.gdx.math.Ellipse setPosition(float,float)
com.badlogic.gdx.math.Ellipse: com.badlogic.gdx.math.Ellipse setSize(float,float)
com.badlogic.gdx.math.FloatCounter
com.badlogic.gdx.math.FloatCounter: int count
com.badlogic.gdx.math.FloatCounter: float total
com.badlogic.gdx.math.FloatCounter: float min
com.badlogic.gdx.math.FloatCounter: float max
com.badlogic.gdx.math.FloatCounter: float average
com.badlogic.gdx.math.FloatCounter: float latest
com.badlogic.gdx.math.FloatCounter: float value
com.badlogic.gdx.math.FloatCounter: com.badlogic.gdx.math.WindowedMean mean
com.badlogic.gdx.math.FloatCounter: FloatCounter(int)
com.badlogic.gdx.math.FloatCounter: void put(float)
com.badlogic.gdx.math.FloatCounter: void reset()
com.badlogic.gdx.math.Frustum
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3[] clipSpacePlanePoints
com.badlogic.gdx.math.Frustum: float[] clipSpacePlanePointsArray
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Plane[] planes
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3[] planePoints
com.badlogic.gdx.math.Frustum: float[] planePointsArray
com.badlogic.gdx.math.Frustum: Frustum()
com.badlogic.gdx.math.Frustum: void update(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Frustum: boolean pointInFrustum(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Frustum: boolean pointInFrustum(float,float,float)
com.badlogic.gdx.math.Frustum: boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Frustum: boolean sphereInFrustum(float,float,float,float)
com.badlogic.gdx.math.Frustum: boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Frustum: boolean sphereInFrustumWithoutNearFar(float,float,float,float)
com.badlogic.gdx.math.Frustum: boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.Frustum: boolean boundsInFrustum(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Frustum: boolean boundsInFrustum(float,float,float,float,float,float)
com.badlogic.gdx.math.Frustum: void <clinit>()
com.badlogic.gdx.math.GeometryUtils
com.badlogic.gdx.math.GeometryUtils: com.badlogic.gdx.math.Vector2 tmp1
com.badlogic.gdx.math.GeometryUtils: com.badlogic.gdx.math.Vector2 tmp2
com.badlogic.gdx.math.GeometryUtils: com.badlogic.gdx.math.Vector2 tmp3
com.badlogic.gdx.math.GeometryUtils: GeometryUtils()
com.badlogic.gdx.math.GeometryUtils: com.badlogic.gdx.math.Vector2 toBarycoord(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.GeometryUtils: boolean barycoordInsideTriangle(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.GeometryUtils: com.badlogic.gdx.math.Vector2 fromBarycoord(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.GeometryUtils: float fromBarycoord(com.badlogic.gdx.math.Vector2,float,float,float)
com.badlogic.gdx.math.GeometryUtils: float lowestPositiveRoot(float,float,float)
com.badlogic.gdx.math.GeometryUtils: com.badlogic.gdx.math.Vector2 triangleCentroid(float,float,float,float,float,float,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.GeometryUtils: float triangleArea(float,float,float,float,float,float)
com.badlogic.gdx.math.GeometryUtils: com.badlogic.gdx.math.Vector2 quadrilateralCentroid(float,float,float,float,float,float,float,float,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.GeometryUtils: com.badlogic.gdx.math.Vector2 polygonCentroid(float[],int,int,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.GeometryUtils: float polygonArea(float[],int,int)
com.badlogic.gdx.math.GeometryUtils: void <clinit>()
com.badlogic.gdx.math.GridPoint2
com.badlogic.gdx.math.GridPoint2: int x
com.badlogic.gdx.math.GridPoint2: int y
com.badlogic.gdx.math.GridPoint2: GridPoint2()
com.badlogic.gdx.math.GridPoint2: GridPoint2(int,int)
com.badlogic.gdx.math.GridPoint2: GridPoint2(com.badlogic.gdx.math.GridPoint2)
com.badlogic.gdx.math.GridPoint2: com.badlogic.gdx.math.GridPoint2 set(com.badlogic.gdx.math.GridPoint2)
com.badlogic.gdx.math.GridPoint2: com.badlogic.gdx.math.GridPoint2 set(int,int)
com.badlogic.gdx.math.GridPoint3
com.badlogic.gdx.math.GridPoint3: int x
com.badlogic.gdx.math.GridPoint3: int y
com.badlogic.gdx.math.GridPoint3: int z
com.badlogic.gdx.math.GridPoint3: GridPoint3()
com.badlogic.gdx.math.GridPoint3: GridPoint3(int,int,int)
com.badlogic.gdx.math.GridPoint3: GridPoint3(com.badlogic.gdx.math.GridPoint3)
com.badlogic.gdx.math.GridPoint3: com.badlogic.gdx.math.GridPoint3 set(com.badlogic.gdx.math.GridPoint3)
com.badlogic.gdx.math.GridPoint3: com.badlogic.gdx.math.GridPoint3 set(int,int,int)
com.badlogic.gdx.math.Interpolation
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation linear
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation fade
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation$Pow pow2
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation$PowIn pow2In
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation$PowOut pow2Out
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation$Pow pow3
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation$PowIn pow3In
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation$PowOut pow3Out
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation$Pow pow4
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation$PowIn pow4In
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation$PowOut pow4Out
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation$Pow pow5
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation$PowIn pow5In
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation$PowOut pow5Out
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation sine
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation sineIn
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation sineOut
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation exp10
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation exp10In
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation exp10Out
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation exp5
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation exp5In
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation exp5Out
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation circle
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation circleIn
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation circleOut
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation$Elastic elastic
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation$Elastic elasticIn
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation$Elastic elasticOut
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation swing
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation swingIn
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation swingOut
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation bounce
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation bounceIn
com.badlogic.gdx.math.Interpolation: com.badlogic.gdx.math.Interpolation bounceOut
com.badlogic.gdx.math.Interpolation: Interpolation()
com.badlogic.gdx.math.Interpolation: float apply(float)
com.badlogic.gdx.math.Interpolation: float apply(float,float,float)
com.badlogic.gdx.math.Interpolation: void <clinit>()
com.badlogic.gdx.math.Interpolation$1
com.badlogic.gdx.math.Interpolation$1: Interpolation$1()
com.badlogic.gdx.math.Interpolation$1: float apply(float)
com.badlogic.gdx.math.Interpolation$2
com.badlogic.gdx.math.Interpolation$2: Interpolation$2()
com.badlogic.gdx.math.Interpolation$2: float apply(float)
com.badlogic.gdx.math.Interpolation$3
com.badlogic.gdx.math.Interpolation$3: Interpolation$3()
com.badlogic.gdx.math.Interpolation$3: float apply(float)
com.badlogic.gdx.math.Interpolation$4
com.badlogic.gdx.math.Interpolation$4: Interpolation$4()
com.badlogic.gdx.math.Interpolation$4: float apply(float)
com.badlogic.gdx.math.Interpolation$5
com.badlogic.gdx.math.Interpolation$5: Interpolation$5()
com.badlogic.gdx.math.Interpolation$5: float apply(float)
com.badlogic.gdx.math.Interpolation$6
com.badlogic.gdx.math.Interpolation$6: Interpolation$6()
com.badlogic.gdx.math.Interpolation$6: float apply(float)
com.badlogic.gdx.math.Interpolation$7
com.badlogic.gdx.math.Interpolation$7: Interpolation$7()
com.badlogic.gdx.math.Interpolation$7: float apply(float)
com.badlogic.gdx.math.Interpolation$8
com.badlogic.gdx.math.Interpolation$8: Interpolation$8()
com.badlogic.gdx.math.Interpolation$8: float apply(float)
com.badlogic.gdx.math.Interpolation$Bounce
com.badlogic.gdx.math.Interpolation$Bounce: Interpolation$Bounce(float[],float[])
com.badlogic.gdx.math.Interpolation$Bounce: Interpolation$Bounce(int)
com.badlogic.gdx.math.Interpolation$Bounce: float out(float)
com.badlogic.gdx.math.Interpolation$Bounce: float apply(float)
com.badlogic.gdx.math.Interpolation$BounceIn
com.badlogic.gdx.math.Interpolation$BounceIn: Interpolation$BounceIn(float[],float[])
com.badlogic.gdx.math.Interpolation$BounceIn: Interpolation$BounceIn(int)
com.badlogic.gdx.math.Interpolation$BounceIn: float apply(float)
com.badlogic.gdx.math.Interpolation$BounceOut
com.badlogic.gdx.math.Interpolation$BounceOut: float[] widths
com.badlogic.gdx.math.Interpolation$BounceOut: float[] heights
com.badlogic.gdx.math.Interpolation$BounceOut: Interpolation$BounceOut(float[],float[])
com.badlogic.gdx.math.Interpolation$BounceOut: Interpolation$BounceOut(int)
com.badlogic.gdx.math.Interpolation$BounceOut: float apply(float)
com.badlogic.gdx.math.Interpolation$Elastic
com.badlogic.gdx.math.Interpolation$Elastic: float value
com.badlogic.gdx.math.Interpolation$Elastic: float power
com.badlogic.gdx.math.Interpolation$Elastic: Interpolation$Elastic(float,float)
com.badlogic.gdx.math.Interpolation$Elastic: float apply(float)
com.badlogic.gdx.math.Interpolation$ElasticIn
com.badlogic.gdx.math.Interpolation$ElasticIn: Interpolation$ElasticIn(float,float)
com.badlogic.gdx.math.Interpolation$ElasticIn: float apply(float)
com.badlogic.gdx.math.Interpolation$ElasticOut
com.badlogic.gdx.math.Interpolation$ElasticOut: Interpolation$ElasticOut(float,float)
com.badlogic.gdx.math.Interpolation$ElasticOut: float apply(float)
com.badlogic.gdx.math.Interpolation$Exp
com.badlogic.gdx.math.Interpolation$Exp: float value
com.badlogic.gdx.math.Interpolation$Exp: float power
com.badlogic.gdx.math.Interpolation$Exp: float min
com.badlogic.gdx.math.Interpolation$Exp: float scale
com.badlogic.gdx.math.Interpolation$Exp: Interpolation$Exp(float,float)
com.badlogic.gdx.math.Interpolation$Exp: float apply(float)
com.badlogic.gdx.math.Interpolation$ExpIn
com.badlogic.gdx.math.Interpolation$ExpIn: Interpolation$ExpIn(float,float)
com.badlogic.gdx.math.Interpolation$ExpIn: float apply(float)
com.badlogic.gdx.math.Interpolation$ExpOut
com.badlogic.gdx.math.Interpolation$ExpOut: Interpolation$ExpOut(float,float)
com.badlogic.gdx.math.Interpolation$ExpOut: float apply(float)
com.badlogic.gdx.math.Interpolation$Pow
com.badlogic.gdx.math.Interpolation$Pow: int power
com.badlogic.gdx.math.Interpolation$Pow: Interpolation$Pow(int)
com.badlogic.gdx.math.Interpolation$Pow: float apply(float)
com.badlogic.gdx.math.Interpolation$PowIn
com.badlogic.gdx.math.Interpolation$PowIn: Interpolation$PowIn(int)
com.badlogic.gdx.math.Interpolation$PowIn: float apply(float)
com.badlogic.gdx.math.Interpolation$PowOut
com.badlogic.gdx.math.Interpolation$PowOut: Interpolation$PowOut(int)
com.badlogic.gdx.math.Interpolation$PowOut: float apply(float)
com.badlogic.gdx.math.Interpolation$Swing
com.badlogic.gdx.math.Interpolation$Swing: float scale
com.badlogic.gdx.math.Interpolation$Swing: Interpolation$Swing(float)
com.badlogic.gdx.math.Interpolation$Swing: float apply(float)
com.badlogic.gdx.math.Interpolation$SwingIn
com.badlogic.gdx.math.Interpolation$SwingIn: float scale
com.badlogic.gdx.math.Interpolation$SwingIn: Interpolation$SwingIn(float)
com.badlogic.gdx.math.Interpolation$SwingIn: float apply(float)
com.badlogic.gdx.math.Interpolation$SwingOut
com.badlogic.gdx.math.Interpolation$SwingOut: float scale
com.badlogic.gdx.math.Interpolation$SwingOut: Interpolation$SwingOut(float)
com.badlogic.gdx.math.Interpolation$SwingOut: float apply(float)
com.badlogic.gdx.math.Intersector
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 v0
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 v1
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 v2
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Plane p
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 i
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 dir
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 start
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 best
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 tmp
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 tmp1
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 tmp2
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 tmp3
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector2 v2tmp
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 intersection
com.badlogic.gdx.math.Intersector: Intersector()
com.badlogic.gdx.math.Intersector: boolean isPointInTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean isPointInTriangle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: boolean isPointInTriangle(float,float,float,float,float,float,float,float)
com.badlogic.gdx.math.Intersector: boolean intersectSegmentPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: int pointLineSide(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: int pointLineSide(float,float,float,float,float,float)
com.badlogic.gdx.math.Intersector: boolean isPointInPolygon(com.badlogic.gdx.utils.Array,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: boolean isPointInPolygon(float[],int,int,float,float)
com.badlogic.gdx.math.Intersector: float distanceLinePoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: float distanceLinePoint(float,float,float,float,float,float)
com.badlogic.gdx.math.Intersector: float distanceSegmentPoint(float,float,float,float,float,float)
com.badlogic.gdx.math.Intersector: float distanceSegmentPoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector2 nearestSegmentPoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector2 nearestSegmentPoint(float,float,float,float,float,float,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: boolean intersectSegmentCircle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Intersector: float intersectSegmentCircleDisplace(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: boolean intersectRayPlane(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean intersectRayTriangle(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean intersectRaySphere(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean intersectRayBounds(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.Intersector: boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],short[],int,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,java.util.List,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean intersectLines(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: boolean intersectLines(float,float,float,float,float,float,float,float,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: boolean intersectLinePolygon(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Polygon)
com.badlogic.gdx.math.Intersector: boolean intersectRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Intersector: boolean intersectSegmentPolygon(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Polygon)
com.badlogic.gdx.math.Intersector: boolean intersectSegments(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: boolean intersectSegments(float,float,float,float,float,float,float,float,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: float det(float,float,float,float)
com.badlogic.gdx.math.Intersector: double detd(double,double,double,double)
com.badlogic.gdx.math.Intersector: boolean overlaps(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Circle)
com.badlogic.gdx.math.Intersector: boolean overlaps(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Intersector: boolean overlaps(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Intersector: boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon)
com.badlogic.gdx.math.Intersector: boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Intersector$MinimumTranslationVector)
com.badlogic.gdx.math.Intersector: boolean overlapConvexPolygons(float[],float[],com.badlogic.gdx.math.Intersector$MinimumTranslationVector)
com.badlogic.gdx.math.Intersector: boolean overlapConvexPolygons(float[],int,int,float[],int,int,com.badlogic.gdx.math.Intersector$MinimumTranslationVector)
com.badlogic.gdx.math.Intersector: void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle)
com.badlogic.gdx.math.Intersector: void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int)
com.badlogic.gdx.math.Intersector: void main(java.lang.String[])
com.badlogic.gdx.math.Intersector: void <clinit>()
com.badlogic.gdx.math.Intersector$MinimumTranslationVector
com.badlogic.gdx.math.Intersector$MinimumTranslationVector: com.badlogic.gdx.math.Vector2 normal
com.badlogic.gdx.math.Intersector$MinimumTranslationVector: float depth
com.badlogic.gdx.math.Intersector$MinimumTranslationVector: Intersector$MinimumTranslationVector()
com.badlogic.gdx.math.Intersector$SplitTriangle
com.badlogic.gdx.math.Intersector$SplitTriangle: float[] front
com.badlogic.gdx.math.Intersector$SplitTriangle: float[] back
com.badlogic.gdx.math.Intersector$SplitTriangle: float[] edgeSplit
com.badlogic.gdx.math.Intersector$SplitTriangle: int numFront
com.badlogic.gdx.math.Intersector$SplitTriangle: int numBack
com.badlogic.gdx.math.Intersector$SplitTriangle: int total
com.badlogic.gdx.math.Intersector$SplitTriangle: boolean frontCurrent
com.badlogic.gdx.math.Intersector$SplitTriangle: int frontOffset
com.badlogic.gdx.math.Intersector$SplitTriangle: int backOffset
com.badlogic.gdx.math.Intersector$SplitTriangle: Intersector$SplitTriangle(int)
com.badlogic.gdx.math.Intersector$SplitTriangle: java.lang.String toString()
com.badlogic.gdx.math.Intersector$SplitTriangle: void setSide(boolean)
com.badlogic.gdx.math.Intersector$SplitTriangle: boolean getSide()
com.badlogic.gdx.math.Intersector$SplitTriangle: void add(float[],int,int)
com.badlogic.gdx.math.Intersector$SplitTriangle: void reset()
com.badlogic.gdx.math.MathUtils
com.badlogic.gdx.math.MathUtils: float nanoToSec
com.badlogic.gdx.math.MathUtils: float FLOAT_ROUNDING_ERROR
com.badlogic.gdx.math.MathUtils: float PI
com.badlogic.gdx.math.MathUtils: float PI2
com.badlogic.gdx.math.MathUtils: float E
com.badlogic.gdx.math.MathUtils: int SIN_BITS
com.badlogic.gdx.math.MathUtils: int SIN_MASK
com.badlogic.gdx.math.MathUtils: int SIN_COUNT
com.badlogic.gdx.math.MathUtils: float radFull
com.badlogic.gdx.math.MathUtils: float degFull
com.badlogic.gdx.math.MathUtils: float radToIndex
com.badlogic.gdx.math.MathUtils: float degToIndex
com.badlogic.gdx.math.MathUtils: float radiansToDegrees
com.badlogic.gdx.math.MathUtils: float radDeg
com.badlogic.gdx.math.MathUtils: float degreesToRadians
com.badlogic.gdx.math.MathUtils: float degRad
com.badlogic.gdx.math.MathUtils: int ATAN2_BITS
com.badlogic.gdx.math.MathUtils: int ATAN2_BITS2
com.badlogic.gdx.math.MathUtils: int ATAN2_MASK
com.badlogic.gdx.math.MathUtils: int ATAN2_COUNT
com.badlogic.gdx.math.MathUtils: int ATAN2_DIM
com.badlogic.gdx.math.MathUtils: float INV_ATAN2_DIM_MINUS_1
com.badlogic.gdx.math.MathUtils: java.util.Random random
com.badlogic.gdx.math.MathUtils: int BIG_ENOUGH_INT
com.badlogic.gdx.math.MathUtils: double BIG_ENOUGH_FLOOR
com.badlogic.gdx.math.MathUtils: double CEIL
com.badlogic.gdx.math.MathUtils: double BIG_ENOUGH_CEIL
com.badlogic.gdx.math.MathUtils: double BIG_ENOUGH_ROUND
com.badlogic.gdx.math.MathUtils: MathUtils()
com.badlogic.gdx.math.MathUtils: float sin(float)
com.badlogic.gdx.math.MathUtils: float cos(float)
com.badlogic.gdx.math.MathUtils: float sinDeg(float)
com.badlogic.gdx.math.MathUtils: float cosDeg(float)
com.badlogic.gdx.math.MathUtils: float atan2(float,float)
com.badlogic.gdx.math.MathUtils: int random(int)
com.badlogic.gdx.math.MathUtils: int random(int,int)
com.badlogic.gdx.math.MathUtils: boolean randomBoolean()
com.badlogic.gdx.math.MathUtils: boolean randomBoolean(float)
com.badlogic.gdx.math.MathUtils: float random()
com.badlogic.gdx.math.MathUtils: float random(float)
com.badlogic.gdx.math.MathUtils: float random(float,float)
com.badlogic.gdx.math.MathUtils: int nextPowerOfTwo(int)
com.badlogic.gdx.math.MathUtils: boolean isPowerOfTwo(int)
com.badlogic.gdx.math.MathUtils: int clamp(int,int,int)
com.badlogic.gdx.math.MathUtils: short clamp(short,short,short)
com.badlogic.gdx.math.MathUtils: float clamp(float,float,float)
com.badlogic.gdx.math.MathUtils: float lerp(float,float,float)
com.badlogic.gdx.math.MathUtils: int floor(float)
com.badlogic.gdx.math.MathUtils: int floorPositive(float)
com.badlogic.gdx.math.MathUtils: int ceil(float)
com.badlogic.gdx.math.MathUtils: int ceilPositive(float)
com.badlogic.gdx.math.MathUtils: int round(float)
com.badlogic.gdx.math.MathUtils: int roundPositive(float)
com.badlogic.gdx.math.MathUtils: boolean isZero(float)
com.badlogic.gdx.math.MathUtils: boolean isZero(float,float)
com.badlogic.gdx.math.MathUtils: boolean isEqual(float,float)
com.badlogic.gdx.math.MathUtils: boolean isEqual(float,float,float)
com.badlogic.gdx.math.MathUtils: void <clinit>()
com.badlogic.gdx.math.MathUtils$Atan2
com.badlogic.gdx.math.MathUtils$Atan2: float[] table
com.badlogic.gdx.math.MathUtils$Atan2: MathUtils$Atan2()
com.badlogic.gdx.math.MathUtils$Atan2: void <clinit>()
com.badlogic.gdx.math.MathUtils$Sin
com.badlogic.gdx.math.MathUtils$Sin: float[] table
com.badlogic.gdx.math.MathUtils$Sin: MathUtils$Sin()
com.badlogic.gdx.math.MathUtils$Sin: void <clinit>()
com.badlogic.gdx.math.Matrix3
com.badlogic.gdx.math.Matrix3: long serialVersionUID
com.badlogic.gdx.math.Matrix3: int M00
com.badlogic.gdx.math.Matrix3: int M01
com.badlogic.gdx.math.Matrix3: int M02
com.badlogic.gdx.math.Matrix3: int M10
com.badlogic.gdx.math.Matrix3: int M11
com.badlogic.gdx.math.Matrix3: int M12
com.badlogic.gdx.math.Matrix3: int M20
com.badlogic.gdx.math.Matrix3: int M21
com.badlogic.gdx.math.Matrix3: int M22
com.badlogic.gdx.math.Matrix3: float[] val
com.badlogic.gdx.math.Matrix3: float[] tmp
com.badlogic.gdx.math.Matrix3: Matrix3()
com.badlogic.gdx.math.Matrix3: Matrix3(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.math.Matrix3: Matrix3(float[])
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 idt()
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 mul(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 mulLeft(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 setToRotation(float)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 setToRotationRad(float)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 setToRotation(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 setToRotation(com.badlogic.gdx.math.Vector3,float,float)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 setToTranslation(float,float)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 setToTranslation(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 setToScaling(float,float)
com.badlogic.gdx.math.Matrix3: java.lang.String toString()
com.badlogic.gdx.math.Matrix3: float det()
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 inv()
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 set(float[])
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 trn(float,float)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 translate(float,float)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 translate(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 rotate(float)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 rotateRad(float)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 scale(float,float)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 scale(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Matrix3: float[] getValues()
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Vector2 getTranslation(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Vector2 getScale(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Matrix3: float getRotation()
com.badlogic.gdx.math.Matrix3: float getRotationRad()
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 scl(float)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 transpose()
com.badlogic.gdx.math.Matrix3: void mul(float[],float[])
com.badlogic.gdx.math.Matrix4
com.badlogic.gdx.math.Matrix4: long serialVersionUID
com.badlogic.gdx.math.Matrix4: int M00
com.badlogic.gdx.math.Matrix4: int M01
com.badlogic.gdx.math.Matrix4: int M02
com.badlogic.gdx.math.Matrix4: int M03
com.badlogic.gdx.math.Matrix4: int M10
com.badlogic.gdx.math.Matrix4: int M11
com.badlogic.gdx.math.Matrix4: int M12
com.badlogic.gdx.math.Matrix4: int M13
com.badlogic.gdx.math.Matrix4: int M20
com.badlogic.gdx.math.Matrix4: int M21
com.badlogic.gdx.math.Matrix4: int M22
com.badlogic.gdx.math.Matrix4: int M23
com.badlogic.gdx.math.Matrix4: int M30
com.badlogic.gdx.math.Matrix4: int M31
com.badlogic.gdx.math.Matrix4: int M32
com.badlogic.gdx.math.Matrix4: int M33
com.badlogic.gdx.math.Matrix4: float[] tmp
com.badlogic.gdx.math.Matrix4: float[] val
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Quaternion quat
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Quaternion quat2
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 l_vez
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 l_vex
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 l_vey
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 tmpVec
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 tmpMat
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 right
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 tmpForward
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 tmpUp
com.badlogic.gdx.math.Matrix4: Matrix4()
com.badlogic.gdx.math.Matrix4: Matrix4(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Matrix4: Matrix4(float[])
com.badlogic.gdx.math.Matrix4: Matrix4(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Matrix4: Matrix4(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(float[])
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(float,float,float,float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 cpy()
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 trn(float,float,float)
com.badlogic.gdx.math.Matrix4: float[] getValues()
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 mulLeft(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 tra()
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 idt()
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 inv()
com.badlogic.gdx.math.Matrix4: float det()
com.badlogic.gdx.math.Matrix4: float det3x3()
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToOrtho(float,float,float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setTranslation(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setTranslation(float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToTranslation(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToRotationRad(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToRotationRad(float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: java.lang.String toString()
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 lerp(com.badlogic.gdx.math.Matrix4,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4[])
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4[],float[])
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 scl(float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 scl(float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 getTranslation(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Quaternion getRotation(com.badlogic.gdx.math.Quaternion,boolean)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Quaternion getRotation(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Matrix4: float getScaleXSquared()
com.badlogic.gdx.math.Matrix4: float getScaleYSquared()
com.badlogic.gdx.math.Matrix4: float getScaleZSquared()
com.badlogic.gdx.math.Matrix4: float getScaleX()
com.badlogic.gdx.math.Matrix4: float getScaleY()
com.badlogic.gdx.math.Matrix4: float getScaleZ()
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 getScale(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 toNormalMatrix()
com.badlogic.gdx.math.Matrix4: void mul(float[],float[])
com.badlogic.gdx.math.Matrix4: void mulVec(float[],float[])
com.badlogic.gdx.math.Matrix4: void mulVec(float[],float[],int,int,int)
com.badlogic.gdx.math.Matrix4: void prj(float[],float[])
com.badlogic.gdx.math.Matrix4: void prj(float[],float[],int,int,int)
com.badlogic.gdx.math.Matrix4: void rot(float[],float[])
com.badlogic.gdx.math.Matrix4: void rot(float[],float[],int,int,int)
com.badlogic.gdx.math.Matrix4: boolean inv(float[])
com.badlogic.gdx.math.Matrix4: float det(float[])
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 translate(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 translate(float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 rotateRad(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 rotate(float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 rotateRad(float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 scale(float,float,float)
com.badlogic.gdx.math.Matrix4: void extract4x3Matrix(float[])
com.badlogic.gdx.math.Matrix4: void <clinit>()
com.badlogic.gdx.math.Path
com.badlogic.gdx.math.Path: java.lang.Object derivativeAt(java.lang.Object,float)
com.badlogic.gdx.math.Path: java.lang.Object valueAt(java.lang.Object,float)
com.badlogic.gdx.math.Path: float approximate(java.lang.Object)
com.badlogic.gdx.math.Path: float locate(java.lang.Object)
com.badlogic.gdx.math.Path: float approxLength(int)
com.badlogic.gdx.math.Plane
com.badlogic.gdx.math.Plane: long serialVersionUID
com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Vector3 normal
com.badlogic.gdx.math.Plane: float d
com.badlogic.gdx.math.Plane: Plane(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Plane: Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Plane: Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Plane: void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Plane: void set(float,float,float,float)
com.badlogic.gdx.math.Plane: float distance(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float)
com.badlogic.gdx.math.Plane: boolean isFrontFacing(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Vector3 getNormal()
com.badlogic.gdx.math.Plane: float getD()
com.badlogic.gdx.math.Plane: void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Plane: void set(float,float,float,float,float,float)
com.badlogic.gdx.math.Plane: void set(com.badlogic.gdx.math.Plane)
com.badlogic.gdx.math.Plane: java.lang.String toString()
com.badlogic.gdx.math.Plane$PlaneSide
com.badlogic.gdx.math.Plane$PlaneSide: com.badlogic.gdx.math.Plane$PlaneSide OnPlane
com.badlogic.gdx.math.Plane$PlaneSide: com.badlogic.gdx.math.Plane$PlaneSide Back
com.badlogic.gdx.math.Plane$PlaneSide: com.badlogic.gdx.math.Plane$PlaneSide Front
com.badlogic.gdx.math.Plane$PlaneSide: com.badlogic.gdx.math.Plane$PlaneSide[] $VALUES
com.badlogic.gdx.math.Plane$PlaneSide: com.badlogic.gdx.math.Plane$PlaneSide[] values()
com.badlogic.gdx.math.Plane$PlaneSide: com.badlogic.gdx.math.Plane$PlaneSide valueOf(java.lang.String)
com.badlogic.gdx.math.Plane$PlaneSide: Plane$PlaneSide(java.lang.String,int)
com.badlogic.gdx.math.Plane$PlaneSide: void <clinit>()
com.badlogic.gdx.math.Polygon
com.badlogic.gdx.math.Polygon: float[] localVertices
com.badlogic.gdx.math.Polygon: float[] worldVertices
com.badlogic.gdx.math.Polygon: float x
com.badlogic.gdx.math.Polygon: float y
com.badlogic.gdx.math.Polygon: float originX
com.badlogic.gdx.math.Polygon: float originY
com.badlogic.gdx.math.Polygon: float rotation
com.badlogic.gdx.math.Polygon: float scaleX
com.badlogic.gdx.math.Polygon: float scaleY
com.badlogic.gdx.math.Polygon: boolean dirty
com.badlogic.gdx.math.Polygon: com.badlogic.gdx.math.Rectangle bounds
com.badlogic.gdx.math.Polygon: Polygon()
com.badlogic.gdx.math.Polygon: Polygon(float[])
com.badlogic.gdx.math.Polygon: float[] getVertices()
com.badlogic.gdx.math.Polygon: float[] getTransformedVertices()
com.badlogic.gdx.math.Polygon: void setOrigin(float,float)
com.badlogic.gdx.math.Polygon: void setPosition(float,float)
com.badlogic.gdx.math.Polygon: void setVertices(float[])
com.badlogic.gdx.math.Polygon: void translate(float,float)
com.badlogic.gdx.math.Polygon: void setRotation(float)
com.badlogic.gdx.math.Polygon: void rotate(float)
com.badlogic.gdx.math.Polygon: void setScale(float,float)
com.badlogic.gdx.math.Polygon: void scale(float)
com.badlogic.gdx.math.Polygon: void dirty()
com.badlogic.gdx.math.Polygon: float area()
com.badlogic.gdx.math.Polygon: com.badlogic.gdx.math.Rectangle getBoundingRectangle()
com.badlogic.gdx.math.Polygon: boolean contains(float,float)
com.badlogic.gdx.math.Polygon: float getX()
com.badlogic.gdx.math.Polygon: float getY()
com.badlogic.gdx.math.Polygon: float getOriginX()
com.badlogic.gdx.math.Polygon: float getOriginY()
com.badlogic.gdx.math.Polygon: float getRotation()
com.badlogic.gdx.math.Polygon: float getScaleX()
com.badlogic.gdx.math.Polygon: float getScaleY()
com.badlogic.gdx.math.Polyline
com.badlogic.gdx.math.Polyline: float[] localVertices
com.badlogic.gdx.math.Polyline: float[] worldVertices
com.badlogic.gdx.math.Polyline: float x
com.badlogic.gdx.math.Polyline: float y
com.badlogic.gdx.math.Polyline: float originX
com.badlogic.gdx.math.Polyline: float originY
com.badlogic.gdx.math.Polyline: float rotation
com.badlogic.gdx.math.Polyline: float scaleX
com.badlogic.gdx.math.Polyline: float scaleY
com.badlogic.gdx.math.Polyline: float length
com.badlogic.gdx.math.Polyline: float scaledLength
com.badlogic.gdx.math.Polyline: boolean calculateScaledLength
com.badlogic.gdx.math.Polyline: boolean calculateLength
com.badlogic.gdx.math.Polyline: boolean dirty
com.badlogic.gdx.math.Polyline: Polyline()
com.badlogic.gdx.math.Polyline: Polyline(float[])
com.badlogic.gdx.math.Polyline: float[] getVertices()
com.badlogic.gdx.math.Polyline: float[] getTransformedVertices()
com.badlogic.gdx.math.Polyline: float getLength()
com.badlogic.gdx.math.Polyline: float getScaledLength()
com.badlogic.gdx.math.Polyline: float getX()
com.badlogic.gdx.math.Polyline: float getY()
com.badlogic.gdx.math.Polyline: float getOriginX()
com.badlogic.gdx.math.Polyline: float getOriginY()
com.badlogic.gdx.math.Polyline: float getRotation()
com.badlogic.gdx.math.Polyline: float getScaleX()
com.badlogic.gdx.math.Polyline: float getScaleY()
com.badlogic.gdx.math.Polyline: void setOrigin(float,float)
com.badlogic.gdx.math.Polyline: void setPosition(float,float)
com.badlogic.gdx.math.Polyline: void setRotation(float)
com.badlogic.gdx.math.Polyline: void rotate(float)
com.badlogic.gdx.math.Polyline: void setScale(float,float)
com.badlogic.gdx.math.Polyline: void scale(float)
com.badlogic.gdx.math.Polyline: void calculateLength()
com.badlogic.gdx.math.Polyline: void calculateScaledLength()
com.badlogic.gdx.math.Polyline: void dirty()
com.badlogic.gdx.math.Polyline: void translate(float,float)
com.badlogic.gdx.math.Quaternion
com.badlogic.gdx.math.Quaternion: long serialVersionUID
com.badlogic.gdx.math.Quaternion: float NORMALIZATION_TOLERANCE
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion tmp1
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion tmp2
com.badlogic.gdx.math.Quaternion: float x
com.badlogic.gdx.math.Quaternion: float y
com.badlogic.gdx.math.Quaternion: float z
com.badlogic.gdx.math.Quaternion: float w
com.badlogic.gdx.math.Quaternion: Quaternion(float,float,float,float)
com.badlogic.gdx.math.Quaternion: Quaternion()
com.badlogic.gdx.math.Quaternion: Quaternion(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Quaternion: Quaternion(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion set(float,float,float,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion cpy()
com.badlogic.gdx.math.Quaternion: float len(float,float,float,float)
com.badlogic.gdx.math.Quaternion: float len()
com.badlogic.gdx.math.Quaternion: java.lang.String toString()
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion setEulerAnglesRad(float,float,float)
com.badlogic.gdx.math.Quaternion: int getGimbalPole()
com.badlogic.gdx.math.Quaternion: float getRollRad()
com.badlogic.gdx.math.Quaternion: float getRoll()
com.badlogic.gdx.math.Quaternion: float getPitchRad()
com.badlogic.gdx.math.Quaternion: float getPitch()
com.badlogic.gdx.math.Quaternion: float getYawRad()
com.badlogic.gdx.math.Quaternion: float getYaw()
com.badlogic.gdx.math.Quaternion: float len2(float,float,float,float)
com.badlogic.gdx.math.Quaternion: float len2()
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion nor()
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion conjugate()
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Vector3 transform(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion mul(float,float,float,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion mulLeft(float,float,float,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion add(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion add(float,float,float,float)
com.badlogic.gdx.math.Quaternion: void toMatrix(float[])
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion idt()
com.badlogic.gdx.math.Quaternion: boolean isIdentity()
com.badlogic.gdx.math.Quaternion: boolean isIdentity(float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion setFromAxisRad(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion setFromAxis(float,float,float,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion setFromAxisRad(float,float,float,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion setFromMatrix(boolean,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion setFromMatrix(boolean,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion setFromAxes(boolean,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion setFromCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion setFromCross(float,float,float,float,float,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion[])
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion[],float[])
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion exp(float)
com.badlogic.gdx.math.Quaternion: int hashCode()
com.badlogic.gdx.math.Quaternion: boolean equals(java.lang.Object)
com.badlogic.gdx.math.Quaternion: float dot(float,float,float,float,float,float,float,float)
com.badlogic.gdx.math.Quaternion: float dot(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Quaternion: float dot(float,float,float,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion mul(float)
com.badlogic.gdx.math.Quaternion: float getAxisAngle(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Quaternion: float getAxisAngleRad(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Quaternion: float getAngleRad()
com.badlogic.gdx.math.Quaternion: float getAngle()
com.badlogic.gdx.math.Quaternion: void getSwingTwist(float,float,float,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Quaternion: void getSwingTwist(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Quaternion: float getAngleAroundRad(float,float,float)
com.badlogic.gdx.math.Quaternion: float getAngleAroundRad(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Quaternion: float getAngleAround(float,float,float)
com.badlogic.gdx.math.Quaternion: float getAngleAround(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Quaternion: void <clinit>()
com.badlogic.gdx.math.RandomXS128
com.badlogic.gdx.math.RandomXS128: long seed0
com.badlogic.gdx.math.RandomXS128: long seed1
com.badlogic.gdx.math.RandomXS128: RandomXS128(long,long)
com.badlogic.gdx.math.RandomXS128: RandomXS128()
com.badlogic.gdx.math.RandomXS128: int next(int)
com.badlogic.gdx.math.Rectangle
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle tmp
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle tmp2
com.badlogic.gdx.math.Rectangle: long serialVersionUID
com.badlogic.gdx.math.Rectangle: float x
com.badlogic.gdx.math.Rectangle: float y
com.badlogic.gdx.math.Rectangle: float width
com.badlogic.gdx.math.Rectangle: float height
com.badlogic.gdx.math.Rectangle: Rectangle()
com.badlogic.gdx.math.Rectangle: Rectangle(float,float,float,float)
com.badlogic.gdx.math.Rectangle: Rectangle(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle set(float,float,float,float)
com.badlogic.gdx.math.Rectangle: float getX()
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle setX(float)
com.badlogic.gdx.math.Rectangle: float getY()
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle setY(float)
com.badlogic.gdx.math.Rectangle: float getWidth()
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle setWidth(float)
com.badlogic.gdx.math.Rectangle: float getHeight()
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle setHeight(float)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Vector2 getPosition(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle setPosition(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle setPosition(float,float)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle setSize(float,float)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle setSize(float)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Vector2 getSize(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Rectangle: boolean contains(float,float)
com.badlogic.gdx.math.Rectangle: boolean contains(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Rectangle: boolean contains(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Rectangle: boolean overlaps(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle set(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle merge(float,float)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Vector2[])
com.badlogic.gdx.math.Rectangle: float getAspectRatio()
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Vector2 getCenter(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle setCenter(float,float)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle setCenter(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle fitOutside(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Rectangle: com.badlogic.gdx.math.Rectangle fitInside(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Rectangle: java.lang.String toString()
com.badlogic.gdx.math.Rectangle: int hashCode()
com.badlogic.gdx.math.Rectangle: boolean equals(java.lang.Object)
com.badlogic.gdx.math.Rectangle: void <clinit>()
com.badlogic.gdx.math.Vector
com.badlogic.gdx.math.Vector: com.badlogic.gdx.math.Vector cpy()
com.badlogic.gdx.math.Vector: float len()
com.badlogic.gdx.math.Vector: float len2()
com.badlogic.gdx.math.Vector: com.badlogic.gdx.math.Vector limit(float)
com.badlogic.gdx.math.Vector: com.badlogic.gdx.math.Vector clamp(float,float)
com.badlogic.gdx.math.Vector: com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector: com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector: com.badlogic.gdx.math.Vector nor()
com.badlogic.gdx.math.Vector: com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector: float dot(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector: com.badlogic.gdx.math.Vector scl(float)
com.badlogic.gdx.math.Vector: com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector: float dst(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector: float dst2(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector: com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector: com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.math.Vector: boolean isUnit()
com.badlogic.gdx.math.Vector: boolean isUnit(float)
com.badlogic.gdx.math.Vector: boolean isZero()
com.badlogic.gdx.math.Vector: boolean isZero(float)
com.badlogic.gdx.math.Vector: boolean isOnLine(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector: boolean isOnLine(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector: boolean isCollinear(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector: boolean isCollinear(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector: boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector: boolean isCollinearOpposite(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector: boolean isPerpendicular(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector: boolean isPerpendicular(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector: boolean hasSameDirection(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector: boolean hasOppositeDirection(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector: boolean epsilonEquals(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector: com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector: com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector: com.badlogic.gdx.math.Vector setZero()
com.badlogic.gdx.math.Vector2
com.badlogic.gdx.math.Vector2: long serialVersionUID
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 X
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 Y
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 Zero
com.badlogic.gdx.math.Vector2: float x
com.badlogic.gdx.math.Vector2: float y
com.badlogic.gdx.math.Vector2: Vector2()
com.badlogic.gdx.math.Vector2: Vector2(float,float)
com.badlogic.gdx.math.Vector2: Vector2(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 cpy()
com.badlogic.gdx.math.Vector2: float len(float,float)
com.badlogic.gdx.math.Vector2: float len()
com.badlogic.gdx.math.Vector2: float len2(float,float)
com.badlogic.gdx.math.Vector2: float len2()
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 set(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 set(float,float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 sub(float,float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 nor()
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 add(float,float)
com.badlogic.gdx.math.Vector2: float dot(float,float,float,float)
com.badlogic.gdx.math.Vector2: float dot(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: float dot(float,float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 scl(float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 scl(float,float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 scl(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 mulAdd(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 mulAdd(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: float dst(float,float,float,float)
com.badlogic.gdx.math.Vector2: float dst(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: float dst(float,float)
com.badlogic.gdx.math.Vector2: float dst2(float,float,float,float)
com.badlogic.gdx.math.Vector2: float dst2(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: float dst2(float,float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 limit(float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 clamp(float,float)
com.badlogic.gdx.math.Vector2: java.lang.String toString()
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.math.Vector2: float crs(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: float crs(float,float)
com.badlogic.gdx.math.Vector2: float angle()
com.badlogic.gdx.math.Vector2: float angleRad()
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 setAngle(float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 setAngleRad(float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 rotate(float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 rotateRad(float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 rotate90(int)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 interpolate(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.math.Vector2: int hashCode()
com.badlogic.gdx.math.Vector2: boolean equals(java.lang.Object)
com.badlogic.gdx.math.Vector2: boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Vector2: boolean epsilonEquals(float,float,float)
com.badlogic.gdx.math.Vector2: boolean isUnit()
com.badlogic.gdx.math.Vector2: boolean isUnit(float)
com.badlogic.gdx.math.Vector2: boolean isZero()
com.badlogic.gdx.math.Vector2: boolean isZero(float)
com.badlogic.gdx.math.Vector2: boolean isOnLine(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: boolean isOnLine(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Vector2: boolean isCollinear(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Vector2: boolean isCollinear(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: boolean isCollinearOpposite(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Vector2: boolean isCollinearOpposite(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: boolean isPerpendicular(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: boolean isPerpendicular(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Vector2: boolean hasSameDirection(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: boolean hasOppositeDirection(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 setZero()
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector setZero()
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector2: boolean epsilonEquals(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector2: boolean hasOppositeDirection(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector2: boolean hasSameDirection(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector2: boolean isPerpendicular(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector2: boolean isPerpendicular(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector2: boolean isCollinearOpposite(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector2: boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector2: boolean isCollinear(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector2: boolean isCollinear(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector2: boolean isOnLine(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector2: boolean isOnLine(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector2: float dst2(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector2: float dst(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector scl(float)
com.badlogic.gdx.math.Vector2: float dot(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector nor()
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector clamp(float,float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector limit(float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector cpy()
com.badlogic.gdx.math.Vector2: void <clinit>()
com.badlogic.gdx.math.Vector3
com.badlogic.gdx.math.Vector3: long serialVersionUID
com.badlogic.gdx.math.Vector3: float x
com.badlogic.gdx.math.Vector3: float y
com.badlogic.gdx.math.Vector3: float z
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 X
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 Y
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 Z
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 Zero
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Matrix4 tmpMat
com.badlogic.gdx.math.Vector3: Vector3()
com.badlogic.gdx.math.Vector3: Vector3(float,float,float)
com.badlogic.gdx.math.Vector3: Vector3(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: Vector3(float[])
com.badlogic.gdx.math.Vector3: Vector3(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(float,float,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(float[])
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 cpy()
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 add(float,float,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 add(float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 sub(float,float,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 sub(float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 scl(float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 scl(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 scl(float,float,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 mulAdd(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 mulAdd(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: float len(float,float,float)
com.badlogic.gdx.math.Vector3: float len()
com.badlogic.gdx.math.Vector3: float len2(float,float,float)
com.badlogic.gdx.math.Vector3: float len2()
com.badlogic.gdx.math.Vector3: boolean idt(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: float dst(float,float,float,float,float,float)
com.badlogic.gdx.math.Vector3: float dst(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: float dst(float,float,float)
com.badlogic.gdx.math.Vector3: float dst2(float,float,float,float,float,float)
com.badlogic.gdx.math.Vector3: float dst2(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: float dst2(float,float,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 nor()
com.badlogic.gdx.math.Vector3: float dot(float,float,float,float,float,float)
com.badlogic.gdx.math.Vector3: float dot(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: float dot(float,float,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 crs(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 crs(float,float,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 mul4x3(float[])
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 traMul(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 traMul(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 unrotate(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 untransform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 rotate(float,float,float,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 rotateRad(float,float,float,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 rotateRad(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Vector3: boolean isUnit()
com.badlogic.gdx.math.Vector3: boolean isUnit(float)
com.badlogic.gdx.math.Vector3: boolean isZero()
com.badlogic.gdx.math.Vector3: boolean isZero(float)
com.badlogic.gdx.math.Vector3: boolean isOnLine(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Vector3: boolean isOnLine(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: boolean isCollinear(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Vector3: boolean isCollinear(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: boolean isCollinearOpposite(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Vector3: boolean isCollinearOpposite(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: boolean isPerpendicular(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: boolean isPerpendicular(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Vector3: boolean hasSameDirection(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: boolean hasOppositeDirection(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 interpolate(com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Vector3: java.lang.String toString()
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 limit(float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 clamp(float,float)
com.badlogic.gdx.math.Vector3: int hashCode()
com.badlogic.gdx.math.Vector3: boolean equals(java.lang.Object)
com.badlogic.gdx.math.Vector3: boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Vector3: boolean epsilonEquals(float,float,float,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 setZero()
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector setZero()
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector3: boolean epsilonEquals(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector3: boolean hasOppositeDirection(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector3: boolean hasSameDirection(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector3: boolean isPerpendicular(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector3: boolean isPerpendicular(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector3: boolean isCollinearOpposite(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector3: boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector3: boolean isCollinear(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector3: boolean isCollinear(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector3: boolean isOnLine(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector3: boolean isOnLine(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float)
com.badlogic.gdx.math.Vector3: float dst2(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector3: float dst(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector scl(float)
com.badlogic.gdx.math.Vector3: float dot(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector nor()
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector clamp(float,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector limit(float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector cpy()
com.badlogic.gdx.math.Vector3: void <clinit>()
com.badlogic.gdx.math.WindowedMean
com.badlogic.gdx.math.WindowedMean: float[] values
com.badlogic.gdx.math.WindowedMean: int added_values
com.badlogic.gdx.math.WindowedMean: int last_value
com.badlogic.gdx.math.WindowedMean: float mean
com.badlogic.gdx.math.WindowedMean: boolean dirty
com.badlogic.gdx.math.WindowedMean: WindowedMean(int)
com.badlogic.gdx.math.WindowedMean: boolean hasEnoughData()
com.badlogic.gdx.math.WindowedMean: void clear()
com.badlogic.gdx.math.WindowedMean: void addValue(float)
com.badlogic.gdx.math.WindowedMean: float getMean()
com.badlogic.gdx.math.WindowedMean: float getOldest()
com.badlogic.gdx.math.WindowedMean: float getLatest()
com.badlogic.gdx.math.WindowedMean: float standardDeviation()
com.badlogic.gdx.math.collision.BoundingBox
com.badlogic.gdx.math.collision.BoundingBox: long serialVersionUID
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3[] crn
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 min
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 max
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 cnt
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 dim
com.badlogic.gdx.math.collision.BoundingBox: boolean crn_dirty
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 getCenter()
com.badlogic.gdx.math.collision.BoundingBox: void updateCorners()
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3[] getCorners()
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 getDimensions()
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 getMin()
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 getMax()
com.badlogic.gdx.math.collision.BoundingBox: BoundingBox()
com.badlogic.gdx.math.collision.BoundingBox: BoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.collision.BoundingBox: BoundingBox(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3[])
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(java.util.List)
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox inf()
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox clr()
com.badlogic.gdx.math.collision.BoundingBox: boolean isValid()
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox mul(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.collision.BoundingBox: boolean contains(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.collision.BoundingBox: boolean intersects(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.collision.BoundingBox: boolean contains(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.collision.BoundingBox: java.lang.String toString()
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox ext(float,float,float)
com.badlogic.gdx.math.collision.BoundingBox: float min(float,float)
com.badlogic.gdx.math.collision.BoundingBox: float max(float,float)
com.badlogic.gdx.math.collision.Ray
com.badlogic.gdx.math.collision.Ray: long serialVersionUID
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.Vector3 origin
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.Vector3 direction
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.Vector3 tmp
com.badlogic.gdx.math.collision.Ray: Ray(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.collision.Ray cpy()
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.Vector3 getEndPoint(float)
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.Vector3 getEndPoint(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.collision.Ray: java.lang.String toString()
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float)
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray)
com.badlogic.gdx.math.collision.Ray: void <clinit>()
com.badlogic.gdx.math.collision.Segment
com.badlogic.gdx.math.collision.Segment: long serialVersionUID
com.badlogic.gdx.math.collision.Segment: com.badlogic.gdx.math.Vector3 a
com.badlogic.gdx.math.collision.Segment: com.badlogic.gdx.math.Vector3 b
com.badlogic.gdx.math.collision.Segment: Segment(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.collision.Segment: Segment(float,float,float,float,float,float)
com.badlogic.gdx.math.collision.Sphere
com.badlogic.gdx.math.collision.Sphere: long serialVersionUID
com.badlogic.gdx.math.collision.Sphere: float radius
com.badlogic.gdx.math.collision.Sphere: com.badlogic.gdx.math.Vector3 center
com.badlogic.gdx.math.collision.Sphere: Sphere(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.collision.Sphere: boolean overlaps(com.badlogic.gdx.math.collision.Sphere)
com.badlogic.gdx.net.HttpParametersUtils
com.badlogic.gdx.net.HttpParametersUtils: java.lang.String defaultEncoding
com.badlogic.gdx.net.HttpParametersUtils: java.lang.String nameValueSeparator
com.badlogic.gdx.net.HttpParametersUtils: java.lang.String parameterSeparator
com.badlogic.gdx.net.HttpParametersUtils: HttpParametersUtils()
com.badlogic.gdx.net.HttpParametersUtils: java.lang.String convertHttpParameters(java.util.Map)
com.badlogic.gdx.net.HttpParametersUtils: java.lang.String encode(java.lang.String,java.lang.String)
com.badlogic.gdx.net.HttpParametersUtils: void <clinit>()
com.badlogic.gdx.net.HttpStatus
com.badlogic.gdx.net.HttpStatus: int statusCode
com.badlogic.gdx.net.HttpStatus: int SC_CONTINUE
com.badlogic.gdx.net.HttpStatus: int SC_SWITCHING_PROTOCOLS
com.badlogic.gdx.net.HttpStatus: int SC_PROCESSING
com.badlogic.gdx.net.HttpStatus: int SC_OK
com.badlogic.gdx.net.HttpStatus: int SC_CREATED
com.badlogic.gdx.net.HttpStatus: int SC_ACCEPTED
com.badlogic.gdx.net.HttpStatus: int SC_NON_AUTHORITATIVE_INFORMATION
com.badlogic.gdx.net.HttpStatus: int SC_NO_CONTENT
com.badlogic.gdx.net.HttpStatus: int SC_RESET_CONTENT
com.badlogic.gdx.net.HttpStatus: int SC_PARTIAL_CONTENT
com.badlogic.gdx.net.HttpStatus: int SC_MULTI_STATUS
com.badlogic.gdx.net.HttpStatus: int SC_MULTIPLE_CHOICES
com.badlogic.gdx.net.HttpStatus: int SC_MOVED_PERMANENTLY
com.badlogic.gdx.net.HttpStatus: int SC_MOVED_TEMPORARILY
com.badlogic.gdx.net.HttpStatus: int SC_SEE_OTHER
com.badlogic.gdx.net.HttpStatus: int SC_NOT_MODIFIED
com.badlogic.gdx.net.HttpStatus: int SC_USE_PROXY
com.badlogic.gdx.net.HttpStatus: int SC_TEMPORARY_REDIRECT
com.badlogic.gdx.net.HttpStatus: int SC_BAD_REQUEST
com.badlogic.gdx.net.HttpStatus: int SC_UNAUTHORIZED
com.badlogic.gdx.net.HttpStatus: int SC_PAYMENT_REQUIRED
com.badlogic.gdx.net.HttpStatus: int SC_FORBIDDEN
com.badlogic.gdx.net.HttpStatus: int SC_NOT_FOUND
com.badlogic.gdx.net.HttpStatus: int SC_METHOD_NOT_ALLOWED
com.badlogic.gdx.net.HttpStatus: int SC_NOT_ACCEPTABLE
com.badlogic.gdx.net.HttpStatus: int SC_PROXY_AUTHENTICATION_REQUIRED
com.badlogic.gdx.net.HttpStatus: int SC_REQUEST_TIMEOUT
com.badlogic.gdx.net.HttpStatus: int SC_CONFLICT
com.badlogic.gdx.net.HttpStatus: int SC_GONE
com.badlogic.gdx.net.HttpStatus: int SC_LENGTH_REQUIRED
com.badlogic.gdx.net.HttpStatus: int SC_PRECONDITION_FAILED
com.badlogic.gdx.net.HttpStatus: int SC_REQUEST_TOO_LONG
com.badlogic.gdx.net.HttpStatus: int SC_REQUEST_URI_TOO_LONG
com.badlogic.gdx.net.HttpStatus: int SC_UNSUPPORTED_MEDIA_TYPE
com.badlogic.gdx.net.HttpStatus: int SC_REQUESTED_RANGE_NOT_SATISFIABLE
com.badlogic.gdx.net.HttpStatus: int SC_EXPECTATION_FAILED
com.badlogic.gdx.net.HttpStatus: int SC_INSUFFICIENT_SPACE_ON_RESOURCE
com.badlogic.gdx.net.HttpStatus: int SC_METHOD_FAILURE
com.badlogic.gdx.net.HttpStatus: int SC_UNPROCESSABLE_ENTITY
com.badlogic.gdx.net.HttpStatus: int SC_LOCKED
com.badlogic.gdx.net.HttpStatus: int SC_FAILED_DEPENDENCY
com.badlogic.gdx.net.HttpStatus: int SC_INTERNAL_SERVER_ERROR
com.badlogic.gdx.net.HttpStatus: int SC_NOT_IMPLEMENTED
com.badlogic.gdx.net.HttpStatus: int SC_BAD_GATEWAY
com.badlogic.gdx.net.HttpStatus: int SC_SERVICE_UNAVAILABLE
com.badlogic.gdx.net.HttpStatus: int SC_GATEWAY_TIMEOUT
com.badlogic.gdx.net.HttpStatus: int SC_HTTP_VERSION_NOT_SUPPORTED
com.badlogic.gdx.net.HttpStatus: int SC_INSUFFICIENT_STORAGE
com.badlogic.gdx.net.HttpStatus: int getStatusCode()
com.badlogic.gdx.net.HttpStatus: HttpStatus(int)
com.badlogic.gdx.net.NetJavaImpl
com.badlogic.gdx.net.NetJavaImpl: java.util.concurrent.ExecutorService executorService
com.badlogic.gdx.net.NetJavaImpl: com.badlogic.gdx.utils.ObjectMap connections
com.badlogic.gdx.net.NetJavaImpl: com.badlogic.gdx.utils.ObjectMap listeners
com.badlogic.gdx.net.NetJavaImpl: java.util.concurrent.locks.Lock lock
com.badlogic.gdx.net.NetJavaImpl: NetJavaImpl()
com.badlogic.gdx.net.NetJavaImpl: void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener)
com.badlogic.gdx.net.NetJavaImpl: void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest)
com.badlogic.gdx.net.NetJavaImpl$1
com.badlogic.gdx.net.NetJavaImpl$1: boolean val$doingOutPut
com.badlogic.gdx.net.NetJavaImpl$1: com.badlogic.gdx.Net$HttpRequest val$httpRequest
com.badlogic.gdx.net.NetJavaImpl$1: java.net.HttpURLConnection val$connection
com.badlogic.gdx.net.NetJavaImpl$1: com.badlogic.gdx.Net$HttpResponseListener val$httpResponseListener
com.badlogic.gdx.net.NetJavaImpl$1: com.badlogic.gdx.net.NetJavaImpl this$0
com.badlogic.gdx.net.NetJavaImpl$1: NetJavaImpl$1(com.badlogic.gdx.net.NetJavaImpl,boolean,com.badlogic.gdx.Net$HttpRequest,java.net.HttpURLConnection,com.badlogic.gdx.Net$HttpResponseListener)
com.badlogic.gdx.net.NetJavaImpl$1: void run()
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse: java.net.HttpURLConnection connection
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse: com.badlogic.gdx.net.HttpStatus status
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse: NetJavaImpl$HttpClientResponse(java.net.HttpURLConnection)
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse: byte[] getResult()
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse: java.lang.String getResultAsString()
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse: java.io.InputStream getResultAsStream()
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse: com.badlogic.gdx.net.HttpStatus getStatus()
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse: java.lang.String getHeader(java.lang.String)
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse: java.util.Map getHeaders()
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse: java.io.InputStream getInputStream()
com.badlogic.gdx.net.NetJavaServerSocketImpl
com.badlogic.gdx.net.NetJavaServerSocketImpl: com.badlogic.gdx.Net$Protocol protocol
com.badlogic.gdx.net.NetJavaServerSocketImpl: java.net.ServerSocket server
com.badlogic.gdx.net.NetJavaServerSocketImpl: NetJavaServerSocketImpl(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints)
com.badlogic.gdx.net.NetJavaServerSocketImpl: com.badlogic.gdx.Net$Protocol getProtocol()
com.badlogic.gdx.net.NetJavaServerSocketImpl: com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints)
com.badlogic.gdx.net.NetJavaServerSocketImpl: void dispose()
com.badlogic.gdx.net.NetJavaSocketImpl
com.badlogic.gdx.net.NetJavaSocketImpl: java.net.Socket socket
com.badlogic.gdx.net.NetJavaSocketImpl: NetJavaSocketImpl(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints)
com.badlogic.gdx.net.NetJavaSocketImpl: NetJavaSocketImpl(java.net.Socket,com.badlogic.gdx.net.SocketHints)
com.badlogic.gdx.net.NetJavaSocketImpl: void applyHints(com.badlogic.gdx.net.SocketHints)
com.badlogic.gdx.net.NetJavaSocketImpl: boolean isConnected()
com.badlogic.gdx.net.NetJavaSocketImpl: java.io.InputStream getInputStream()
com.badlogic.gdx.net.NetJavaSocketImpl: java.io.OutputStream getOutputStream()
com.badlogic.gdx.net.NetJavaSocketImpl: java.lang.String getRemoteAddress()
com.badlogic.gdx.net.NetJavaSocketImpl: void dispose()
com.badlogic.gdx.net.ServerSocket
com.badlogic.gdx.net.ServerSocket: com.badlogic.gdx.Net$Protocol getProtocol()
com.badlogic.gdx.net.ServerSocket: com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints)
com.badlogic.gdx.net.ServerSocketHints
com.badlogic.gdx.net.ServerSocketHints: int backlog
com.badlogic.gdx.net.ServerSocketHints: int performancePrefConnectionTime
com.badlogic.gdx.net.ServerSocketHints: int performancePrefLatency
com.badlogic.gdx.net.ServerSocketHints: int performancePrefBandwidth
com.badlogic.gdx.net.ServerSocketHints: boolean reuseAddress
com.badlogic.gdx.net.ServerSocketHints: int acceptTimeout
com.badlogic.gdx.net.ServerSocketHints: int receiveBufferSize
com.badlogic.gdx.net.ServerSocketHints: ServerSocketHints()
com.badlogic.gdx.net.Socket
com.badlogic.gdx.net.Socket: boolean isConnected()
com.badlogic.gdx.net.Socket: java.io.InputStream getInputStream()
com.badlogic.gdx.net.Socket: java.io.OutputStream getOutputStream()
com.badlogic.gdx.net.Socket: java.lang.String getRemoteAddress()
com.badlogic.gdx.net.SocketHints
com.badlogic.gdx.net.SocketHints: int connectTimeout
com.badlogic.gdx.net.SocketHints: int performancePrefConnectionTime
com.badlogic.gdx.net.SocketHints: int performancePrefLatency
com.badlogic.gdx.net.SocketHints: int performancePrefBandwidth
com.badlogic.gdx.net.SocketHints: int trafficClass
com.badlogic.gdx.net.SocketHints: boolean keepAlive
com.badlogic.gdx.net.SocketHints: boolean tcpNoDelay
com.badlogic.gdx.net.SocketHints: int sendBufferSize
com.badlogic.gdx.net.SocketHints: int receiveBufferSize
com.badlogic.gdx.net.SocketHints: boolean linger
com.badlogic.gdx.net.SocketHints: int lingerDuration
com.badlogic.gdx.net.SocketHints: int socketTimeout
com.badlogic.gdx.net.SocketHints: SocketHints()
com.badlogic.gdx.physics.box2d.Body
com.badlogic.gdx.physics.box2d.Body: long addr
com.badlogic.gdx.physics.box2d.Body: float[] tmp
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.World world
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.utils.Array fixtures
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.utils.Array joints
com.badlogic.gdx.physics.box2d.Body: java.lang.Object userData
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.Transform transform
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 position
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 worldCenter
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 localCenter
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 linearVelocity
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.MassData massData
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 localPoint
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 worldVector
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 localPoint2
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 localVector
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 linVelWorld
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 linVelLoc
com.badlogic.gdx.physics.box2d.Body: Body(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.Body: void reset(long)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.FixtureDef)
com.badlogic.gdx.physics.box2d.Body: long jniCreateFixture(long,long,float,float,float,boolean,short,short,short)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float)
com.badlogic.gdx.physics.box2d.Body: long jniCreateFixture(long,long,float)
com.badlogic.gdx.physics.box2d.Body: void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture)
com.badlogic.gdx.physics.box2d.Body: void jniDestroyFixture(long,long)
com.badlogic.gdx.physics.box2d.Body: void setTransform(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.Body: void setTransform(float,float,float)
com.badlogic.gdx.physics.box2d.Body: void jniSetTransform(long,float,float,float)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.Transform getTransform()
com.badlogic.gdx.physics.box2d.Body: void jniGetTransform(long,float[])
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getPosition()
com.badlogic.gdx.physics.box2d.Body: void jniGetPosition(long,float[])
com.badlogic.gdx.physics.box2d.Body: float getAngle()
com.badlogic.gdx.physics.box2d.Body: float jniGetAngle(long)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getWorldCenter()
com.badlogic.gdx.physics.box2d.Body: void jniGetWorldCenter(long,float[])
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getLocalCenter()
com.badlogic.gdx.physics.box2d.Body: void jniGetLocalCenter(long,float[])
com.badlogic.gdx.physics.box2d.Body: void setLinearVelocity(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void setLinearVelocity(float,float)
com.badlogic.gdx.physics.box2d.Body: void jniSetLinearVelocity(long,float,float)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getLinearVelocity()
com.badlogic.gdx.physics.box2d.Body: void jniGetLinearVelocity(long,float[])
com.badlogic.gdx.physics.box2d.Body: void setAngularVelocity(float)
com.badlogic.gdx.physics.box2d.Body: void jniSetAngularVelocity(long,float)
com.badlogic.gdx.physics.box2d.Body: float getAngularVelocity()
com.badlogic.gdx.physics.box2d.Body: float jniGetAngularVelocity(long)
com.badlogic.gdx.physics.box2d.Body: void applyForce(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean)
com.badlogic.gdx.physics.box2d.Body: void applyForce(float,float,float,float,boolean)
com.badlogic.gdx.physics.box2d.Body: void jniApplyForce(long,float,float,float,float,boolean)
com.badlogic.gdx.physics.box2d.Body: void applyForceToCenter(com.badlogic.gdx.math.Vector2,boolean)
com.badlogic.gdx.physics.box2d.Body: void applyForceToCenter(float,float,boolean)
com.badlogic.gdx.physics.box2d.Body: void jniApplyForceToCenter(long,float,float,boolean)
com.badlogic.gdx.physics.box2d.Body: void applyTorque(float,boolean)
com.badlogic.gdx.physics.box2d.Body: void jniApplyTorque(long,float,boolean)
com.badlogic.gdx.physics.box2d.Body: void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean)
com.badlogic.gdx.physics.box2d.Body: void applyLinearImpulse(float,float,float,float,boolean)
com.badlogic.gdx.physics.box2d.Body: void jniApplyLinearImpulse(long,float,float,float,float,boolean)
com.badlogic.gdx.physics.box2d.Body: void applyAngularImpulse(float,boolean)
com.badlogic.gdx.physics.box2d.Body: void jniApplyAngularImpulse(long,float,boolean)
com.badlogic.gdx.physics.box2d.Body: float getMass()
com.badlogic.gdx.physics.box2d.Body: float jniGetMass(long)
com.badlogic.gdx.physics.box2d.Body: float getInertia()
com.badlogic.gdx.physics.box2d.Body: float jniGetInertia(long)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.MassData getMassData()
com.badlogic.gdx.physics.box2d.Body: void jniGetMassData(long,float[])
com.badlogic.gdx.physics.box2d.Body: void setMassData(com.badlogic.gdx.physics.box2d.MassData)
com.badlogic.gdx.physics.box2d.Body: void jniSetMassData(long,float,float,float,float)
com.badlogic.gdx.physics.box2d.Body: void resetMassData()
com.badlogic.gdx.physics.box2d.Body: void jniResetMassData(long)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getWorldPoint(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void jniGetWorldPoint(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void jniGetWorldVector(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getLocalPoint(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void jniGetLocalPoint(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void jniGetLocalVector(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void jniGetLinearVelocityFromWorldPoint(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void jniGetLinearVelocityFromLocalPoint(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: float getLinearDamping()
com.badlogic.gdx.physics.box2d.Body: float jniGetLinearDamping(long)
com.badlogic.gdx.physics.box2d.Body: void setLinearDamping(float)
com.badlogic.gdx.physics.box2d.Body: void jniSetLinearDamping(long,float)
com.badlogic.gdx.physics.box2d.Body: float getAngularDamping()
com.badlogic.gdx.physics.box2d.Body: float jniGetAngularDamping(long)
com.badlogic.gdx.physics.box2d.Body: void setAngularDamping(float)
com.badlogic.gdx.physics.box2d.Body: void jniSetAngularDamping(long,float)
com.badlogic.gdx.physics.box2d.Body: void setType(com.badlogic.gdx.physics.box2d.BodyDef$BodyType)
com.badlogic.gdx.physics.box2d.Body: void jniSetType(long,int)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.BodyDef$BodyType getType()
com.badlogic.gdx.physics.box2d.Body: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Body: void setBullet(boolean)
com.badlogic.gdx.physics.box2d.Body: void jniSetBullet(long,boolean)
com.badlogic.gdx.physics.box2d.Body: boolean isBullet()
com.badlogic.gdx.physics.box2d.Body: boolean jniIsBullet(long)
com.badlogic.gdx.physics.box2d.Body: void setSleepingAllowed(boolean)
com.badlogic.gdx.physics.box2d.Body: void jniSetSleepingAllowed(long,boolean)
com.badlogic.gdx.physics.box2d.Body: boolean isSleepingAllowed()
com.badlogic.gdx.physics.box2d.Body: boolean jniIsSleepingAllowed(long)
com.badlogic.gdx.physics.box2d.Body: void setAwake(boolean)
com.badlogic.gdx.physics.box2d.Body: void jniSetAwake(long,boolean)
com.badlogic.gdx.physics.box2d.Body: boolean isAwake()
com.badlogic.gdx.physics.box2d.Body: boolean jniIsAwake(long)
com.badlogic.gdx.physics.box2d.Body: void setActive(boolean)
com.badlogic.gdx.physics.box2d.Body: void jniSetActive(long,boolean)
com.badlogic.gdx.physics.box2d.Body: boolean isActive()
com.badlogic.gdx.physics.box2d.Body: boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.Body: void setFixedRotation(boolean)
com.badlogic.gdx.physics.box2d.Body: void jniSetFixedRotation(long,boolean)
com.badlogic.gdx.physics.box2d.Body: boolean isFixedRotation()
com.badlogic.gdx.physics.box2d.Body: boolean jniIsFixedRotation(long)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.utils.Array getFixtureList()
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.utils.Array getJointList()
com.badlogic.gdx.physics.box2d.Body: float getGravityScale()
com.badlogic.gdx.physics.box2d.Body: float jniGetGravityScale(long)
com.badlogic.gdx.physics.box2d.Body: void setGravityScale(float)
com.badlogic.gdx.physics.box2d.Body: void jniSetGravityScale(long,float)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.World getWorld()
com.badlogic.gdx.physics.box2d.Body: java.lang.Object getUserData()
com.badlogic.gdx.physics.box2d.Body: void setUserData(java.lang.Object)
com.badlogic.gdx.physics.box2d.BodyDef
com.badlogic.gdx.physics.box2d.BodyDef: com.badlogic.gdx.physics.box2d.BodyDef$BodyType type
com.badlogic.gdx.physics.box2d.BodyDef: com.badlogic.gdx.math.Vector2 position
com.badlogic.gdx.physics.box2d.BodyDef: float angle
com.badlogic.gdx.physics.box2d.BodyDef: com.badlogic.gdx.math.Vector2 linearVelocity
com.badlogic.gdx.physics.box2d.BodyDef: float angularVelocity
com.badlogic.gdx.physics.box2d.BodyDef: float linearDamping
com.badlogic.gdx.physics.box2d.BodyDef: float angularDamping
com.badlogic.gdx.physics.box2d.BodyDef: boolean allowSleep
com.badlogic.gdx.physics.box2d.BodyDef: boolean awake
com.badlogic.gdx.physics.box2d.BodyDef: boolean fixedRotation
com.badlogic.gdx.physics.box2d.BodyDef: boolean bullet
com.badlogic.gdx.physics.box2d.BodyDef: boolean active
com.badlogic.gdx.physics.box2d.BodyDef: float gravityScale
com.badlogic.gdx.physics.box2d.BodyDef: BodyDef()
com.badlogic.gdx.physics.box2d.BodyDef$BodyType
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: com.badlogic.gdx.physics.box2d.BodyDef$BodyType StaticBody
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: com.badlogic.gdx.physics.box2d.BodyDef$BodyType KinematicBody
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: com.badlogic.gdx.physics.box2d.BodyDef$BodyType DynamicBody
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: int value
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] $VALUES
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] values()
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: com.badlogic.gdx.physics.box2d.BodyDef$BodyType valueOf(java.lang.String)
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: BodyDef$BodyType(java.lang.String,int,int)
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: int getValue()
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: void <clinit>()
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.graphics.glutils.ShapeRenderer renderer
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.math.Vector2[] vertices
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.math.Vector2 lower
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.math.Vector2 upper
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.utils.Array bodies
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.utils.Array joints
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: boolean drawBodies
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: boolean drawJoints
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: boolean drawAABBs
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: boolean drawInactiveBodies
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: boolean drawVelocities
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: boolean drawContacts
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.graphics.Color SHAPE_NOT_ACTIVE
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.graphics.Color SHAPE_STATIC
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.graphics.Color SHAPE_KINEMATIC
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.graphics.Color SHAPE_NOT_AWAKE
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.graphics.Color SHAPE_AWAKE
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.graphics.Color JOINT_COLOR
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.graphics.Color AABB_COLOR
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.graphics.Color VELOCITY_COLOR
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.math.Vector2 t
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.math.Vector2 axis
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.math.Vector2 f
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.math.Vector2 v
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.math.Vector2 lv
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: Box2DDebugRenderer()
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: Box2DDebugRenderer(boolean,boolean,boolean,boolean,boolean,boolean)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void render(com.badlogic.gdx.physics.box2d.World,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void renderBodies(com.badlogic.gdx.physics.box2d.World)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void renderBody(com.badlogic.gdx.physics.box2d.Body)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.graphics.Color getColorByBody(com.badlogic.gdx.physics.box2d.Body)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void drawAABB(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void drawShape(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void drawSolidCircle(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void drawSolidPolygon(com.badlogic.gdx.math.Vector2[],int,com.badlogic.gdx.graphics.Color,boolean)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void drawJoint(com.badlogic.gdx.physics.box2d.Joint)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void drawSegment(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void drawContact(com.badlogic.gdx.physics.box2d.Contact)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: boolean isDrawBodies()
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void setDrawBodies(boolean)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: boolean isDrawJoints()
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void setDrawJoints(boolean)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: boolean isDrawAABBs()
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void setDrawAABBs(boolean)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: boolean isDrawInactiveBodies()
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void setDrawInactiveBodies(boolean)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: boolean isDrawVelocities()
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void setDrawVelocities(boolean)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: boolean isDrawContacts()
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void setDrawContacts(boolean)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: com.badlogic.gdx.math.Vector2 getAxis()
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void setAxis(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void dispose()
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer: void <clinit>()
com.badlogic.gdx.physics.box2d.ChainShape
com.badlogic.gdx.physics.box2d.ChainShape: boolean isLooped
com.badlogic.gdx.physics.box2d.ChainShape: float[] verts
com.badlogic.gdx.physics.box2d.ChainShape: ChainShape()
com.badlogic.gdx.physics.box2d.ChainShape: long newChainShape()
com.badlogic.gdx.physics.box2d.ChainShape: ChainShape(long)
com.badlogic.gdx.physics.box2d.ChainShape: com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.ChainShape: void createLoop(float[])
com.badlogic.gdx.physics.box2d.ChainShape: void createLoop(com.badlogic.gdx.math.Vector2[])
com.badlogic.gdx.physics.box2d.ChainShape: void jniCreateLoop(long,float[],int)
com.badlogic.gdx.physics.box2d.ChainShape: void createChain(float[])
com.badlogic.gdx.physics.box2d.ChainShape: void createChain(com.badlogic.gdx.math.Vector2[])
com.badlogic.gdx.physics.box2d.ChainShape: void jniCreateChain(long,float[],int)
com.badlogic.gdx.physics.box2d.ChainShape: void setPrevVertex(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.ChainShape: void setPrevVertex(float,float)
com.badlogic.gdx.physics.box2d.ChainShape: void jniSetPrevVertex(long,float,float)
com.badlogic.gdx.physics.box2d.ChainShape: void setNextVertex(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.ChainShape: void setNextVertex(float,float)
com.badlogic.gdx.physics.box2d.ChainShape: void jniSetNextVertex(long,float,float)
com.badlogic.gdx.physics.box2d.ChainShape: int getVertexCount()
com.badlogic.gdx.physics.box2d.ChainShape: int jniGetVertexCount(long)
com.badlogic.gdx.physics.box2d.ChainShape: void getVertex(int,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.ChainShape: void jniGetVertex(long,int,float[])
com.badlogic.gdx.physics.box2d.ChainShape: boolean isLooped()
com.badlogic.gdx.physics.box2d.ChainShape: void <clinit>()
com.badlogic.gdx.physics.box2d.CircleShape
com.badlogic.gdx.physics.box2d.CircleShape: float[] tmp
com.badlogic.gdx.physics.box2d.CircleShape: com.badlogic.gdx.math.Vector2 position
com.badlogic.gdx.physics.box2d.CircleShape: CircleShape()
com.badlogic.gdx.physics.box2d.CircleShape: long newCircleShape()
com.badlogic.gdx.physics.box2d.CircleShape: CircleShape(long)
com.badlogic.gdx.physics.box2d.CircleShape: com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.CircleShape: com.badlogic.gdx.math.Vector2 getPosition()
com.badlogic.gdx.physics.box2d.CircleShape: void jniGetPosition(long,float[])
com.badlogic.gdx.physics.box2d.CircleShape: void setPosition(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.CircleShape: void jniSetPosition(long,float,float)
com.badlogic.gdx.physics.box2d.Contact
com.badlogic.gdx.physics.box2d.Contact: long addr
com.badlogic.gdx.physics.box2d.Contact: com.badlogic.gdx.physics.box2d.World world
com.badlogic.gdx.physics.box2d.Contact: com.badlogic.gdx.physics.box2d.WorldManifold worldManifold
com.badlogic.gdx.physics.box2d.Contact: float[] tmp
com.badlogic.gdx.physics.box2d.Contact: Contact(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.Contact: com.badlogic.gdx.physics.box2d.WorldManifold getWorldManifold()
com.badlogic.gdx.physics.box2d.Contact: int jniGetWorldManifold(long,float[])
com.badlogic.gdx.physics.box2d.Contact: boolean isTouching()
com.badlogic.gdx.physics.box2d.Contact: boolean jniIsTouching(long)
com.badlogic.gdx.physics.box2d.Contact: void setEnabled(boolean)
com.badlogic.gdx.physics.box2d.Contact: void jniSetEnabled(long,boolean)
com.badlogic.gdx.physics.box2d.Contact: boolean isEnabled()
com.badlogic.gdx.physics.box2d.Contact: boolean jniIsEnabled(long)
com.badlogic.gdx.physics.box2d.Contact: com.badlogic.gdx.physics.box2d.Fixture getFixtureA()
com.badlogic.gdx.physics.box2d.Contact: long jniGetFixtureA(long)
com.badlogic.gdx.physics.box2d.Contact: com.badlogic.gdx.physics.box2d.Fixture getFixtureB()
com.badlogic.gdx.physics.box2d.Contact: long jniGetFixtureB(long)
com.badlogic.gdx.physics.box2d.Contact: int getChildIndexA()
com.badlogic.gdx.physics.box2d.Contact: int jniGetChildIndexA(long)
com.badlogic.gdx.physics.box2d.Contact: int getChildIndexB()
com.badlogic.gdx.physics.box2d.Contact: int jniGetChildIndexB(long)
com.badlogic.gdx.physics.box2d.Contact: void setFriction(float)
com.badlogic.gdx.physics.box2d.Contact: void jniSetFriction(long,float)
com.badlogic.gdx.physics.box2d.Contact: float getFriction()
com.badlogic.gdx.physics.box2d.Contact: float jniGetFriction(long)
com.badlogic.gdx.physics.box2d.Contact: void resetFriction()
com.badlogic.gdx.physics.box2d.Contact: void jniResetFriction(long)
com.badlogic.gdx.physics.box2d.Contact: void setRestitution(float)
com.badlogic.gdx.physics.box2d.Contact: void jniSetRestitution(long,float)
com.badlogic.gdx.physics.box2d.Contact: float getRestitution()
com.badlogic.gdx.physics.box2d.Contact: float jniGetRestitution(long)
com.badlogic.gdx.physics.box2d.Contact: void ResetRestitution()
com.badlogic.gdx.physics.box2d.Contact: void jniResetRestitution(long)
com.badlogic.gdx.physics.box2d.Contact: float getTangentSpeed()
com.badlogic.gdx.physics.box2d.Contact: float jniGetTangentSpeed(long)
com.badlogic.gdx.physics.box2d.Contact: void setTangentSpeed(float)
com.badlogic.gdx.physics.box2d.Contact: void jniSetTangentSpeed(long,float)
com.badlogic.gdx.physics.box2d.ContactFilter
com.badlogic.gdx.physics.box2d.ContactFilter: boolean shouldCollide(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Fixture)
com.badlogic.gdx.physics.box2d.ContactImpulse
com.badlogic.gdx.physics.box2d.ContactImpulse: com.badlogic.gdx.physics.box2d.World world
com.badlogic.gdx.physics.box2d.ContactImpulse: long addr
com.badlogic.gdx.physics.box2d.ContactImpulse: float[] tmp
com.badlogic.gdx.physics.box2d.ContactImpulse: float[] normalImpulses
com.badlogic.gdx.physics.box2d.ContactImpulse: float[] tangentImpulses
com.badlogic.gdx.physics.box2d.ContactImpulse: ContactImpulse(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.ContactImpulse: float[] getNormalImpulses()
com.badlogic.gdx.physics.box2d.ContactImpulse: void jniGetNormalImpulses(long,float[])
com.badlogic.gdx.physics.box2d.ContactImpulse: float[] getTangentImpulses()
com.badlogic.gdx.physics.box2d.ContactImpulse: void jniGetTangentImpulses(long,float[])
com.badlogic.gdx.physics.box2d.ContactImpulse: int getCount()
com.badlogic.gdx.physics.box2d.ContactImpulse: int jniGetCount(long)
com.badlogic.gdx.physics.box2d.ContactListener
com.badlogic.gdx.physics.box2d.ContactListener: void beginContact(com.badlogic.gdx.physics.box2d.Contact)
com.badlogic.gdx.physics.box2d.ContactListener: void endContact(com.badlogic.gdx.physics.box2d.Contact)
com.badlogic.gdx.physics.box2d.ContactListener: void preSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.Manifold)
com.badlogic.gdx.physics.box2d.ContactListener: void postSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.ContactImpulse)
com.badlogic.gdx.physics.box2d.DestructionListener
com.badlogic.gdx.physics.box2d.EdgeShape
com.badlogic.gdx.physics.box2d.EdgeShape: float[] vertex
com.badlogic.gdx.physics.box2d.EdgeShape: EdgeShape()
com.badlogic.gdx.physics.box2d.EdgeShape: long newEdgeShape()
com.badlogic.gdx.physics.box2d.EdgeShape: EdgeShape(long)
com.badlogic.gdx.physics.box2d.EdgeShape: void set(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.EdgeShape: void set(float,float,float,float)
com.badlogic.gdx.physics.box2d.EdgeShape: void jniSet(long,float,float,float,float)
com.badlogic.gdx.physics.box2d.EdgeShape: void getVertex1(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.EdgeShape: void jniGetVertex1(long,float[])
com.badlogic.gdx.physics.box2d.EdgeShape: void getVertex2(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.EdgeShape: void jniGetVertex2(long,float[])
com.badlogic.gdx.physics.box2d.EdgeShape: void getVertex0(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.EdgeShape: void jniGetVertex0(long,float[])
com.badlogic.gdx.physics.box2d.EdgeShape: void setVertex0(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.EdgeShape: void setVertex0(float,float)
com.badlogic.gdx.physics.box2d.EdgeShape: void jniSetVertex0(long,float,float)
com.badlogic.gdx.physics.box2d.EdgeShape: void getVertex3(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.EdgeShape: void jniGetVertex3(long,float[])
com.badlogic.gdx.physics.box2d.EdgeShape: void setVertex3(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.EdgeShape: void setVertex3(float,float)
com.badlogic.gdx.physics.box2d.EdgeShape: void jniSetVertex3(long,float,float)
com.badlogic.gdx.physics.box2d.EdgeShape: boolean hasVertex0()
com.badlogic.gdx.physics.box2d.EdgeShape: boolean jniHasVertex0(long)
com.badlogic.gdx.physics.box2d.EdgeShape: void setHasVertex0(boolean)
com.badlogic.gdx.physics.box2d.EdgeShape: void jniSetHasVertex0(long,boolean)
com.badlogic.gdx.physics.box2d.EdgeShape: boolean hasVertex3()
com.badlogic.gdx.physics.box2d.EdgeShape: boolean jniHasVertex3(long)
com.badlogic.gdx.physics.box2d.EdgeShape: void setHasVertex3(boolean)
com.badlogic.gdx.physics.box2d.EdgeShape: void jniSetHasVertex3(long,boolean)
com.badlogic.gdx.physics.box2d.EdgeShape: com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.EdgeShape: void <clinit>()
com.badlogic.gdx.physics.box2d.Filter
com.badlogic.gdx.physics.box2d.Filter: short categoryBits
com.badlogic.gdx.physics.box2d.Filter: short maskBits
com.badlogic.gdx.physics.box2d.Filter: short groupIndex
com.badlogic.gdx.physics.box2d.Filter: Filter()
com.badlogic.gdx.physics.box2d.Fixture
com.badlogic.gdx.physics.box2d.Fixture: com.badlogic.gdx.physics.box2d.Body body
com.badlogic.gdx.physics.box2d.Fixture: long addr
com.badlogic.gdx.physics.box2d.Fixture: com.badlogic.gdx.physics.box2d.Shape shape
com.badlogic.gdx.physics.box2d.Fixture: java.lang.Object userData
com.badlogic.gdx.physics.box2d.Fixture: short[] tmp
com.badlogic.gdx.physics.box2d.Fixture: com.badlogic.gdx.physics.box2d.Filter filter
com.badlogic.gdx.physics.box2d.Fixture: Fixture(com.badlogic.gdx.physics.box2d.Body,long)
com.badlogic.gdx.physics.box2d.Fixture: void reset(com.badlogic.gdx.physics.box2d.Body,long)
com.badlogic.gdx.physics.box2d.Fixture: com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.Fixture: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Fixture: com.badlogic.gdx.physics.box2d.Shape getShape()
com.badlogic.gdx.physics.box2d.Fixture: long jniGetShape(long)
com.badlogic.gdx.physics.box2d.Fixture: void setSensor(boolean)
com.badlogic.gdx.physics.box2d.Fixture: void jniSetSensor(long,boolean)
com.badlogic.gdx.physics.box2d.Fixture: boolean isSensor()
com.badlogic.gdx.physics.box2d.Fixture: boolean jniIsSensor(long)
com.badlogic.gdx.physics.box2d.Fixture: void setFilterData(com.badlogic.gdx.physics.box2d.Filter)
com.badlogic.gdx.physics.box2d.Fixture: void jniSetFilterData(long,short,short,short)
com.badlogic.gdx.physics.box2d.Fixture: com.badlogic.gdx.physics.box2d.Filter getFilterData()
com.badlogic.gdx.physics.box2d.Fixture: void jniGetFilterData(long,short[])
com.badlogic.gdx.physics.box2d.Fixture: void refilter()
com.badlogic.gdx.physics.box2d.Fixture: void jniRefilter(long)
com.badlogic.gdx.physics.box2d.Fixture: com.badlogic.gdx.physics.box2d.Body getBody()
com.badlogic.gdx.physics.box2d.Fixture: boolean testPoint(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Fixture: boolean testPoint(float,float)
com.badlogic.gdx.physics.box2d.Fixture: boolean jniTestPoint(long,float,float)
com.badlogic.gdx.physics.box2d.Fixture: void setDensity(float)
com.badlogic.gdx.physics.box2d.Fixture: void jniSetDensity(long,float)
com.badlogic.gdx.physics.box2d.Fixture: float getDensity()
com.badlogic.gdx.physics.box2d.Fixture: float jniGetDensity(long)
com.badlogic.gdx.physics.box2d.Fixture: float getFriction()
com.badlogic.gdx.physics.box2d.Fixture: float jniGetFriction(long)
com.badlogic.gdx.physics.box2d.Fixture: void setFriction(float)
com.badlogic.gdx.physics.box2d.Fixture: void jniSetFriction(long,float)
com.badlogic.gdx.physics.box2d.Fixture: float getRestitution()
com.badlogic.gdx.physics.box2d.Fixture: float jniGetRestitution(long)
com.badlogic.gdx.physics.box2d.Fixture: void setRestitution(float)
com.badlogic.gdx.physics.box2d.Fixture: void jniSetRestitution(long,float)
com.badlogic.gdx.physics.box2d.Fixture: void setUserData(java.lang.Object)
com.badlogic.gdx.physics.box2d.Fixture: java.lang.Object getUserData()
com.badlogic.gdx.physics.box2d.FixtureDef
com.badlogic.gdx.physics.box2d.FixtureDef: com.badlogic.gdx.physics.box2d.Shape shape
com.badlogic.gdx.physics.box2d.FixtureDef: float friction
com.badlogic.gdx.physics.box2d.FixtureDef: float restitution
com.badlogic.gdx.physics.box2d.FixtureDef: float density
com.badlogic.gdx.physics.box2d.FixtureDef: boolean isSensor
com.badlogic.gdx.physics.box2d.FixtureDef: com.badlogic.gdx.physics.box2d.Filter filter
com.badlogic.gdx.physics.box2d.FixtureDef: FixtureDef()
com.badlogic.gdx.physics.box2d.Joint
com.badlogic.gdx.physics.box2d.Joint: long addr
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.World world
com.badlogic.gdx.physics.box2d.Joint: float[] tmp
com.badlogic.gdx.physics.box2d.Joint: java.lang.Object userData
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.JointEdge jointEdgeA
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.JointEdge jointEdgeB
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 anchorA
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 anchorB
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 reactionForce
com.badlogic.gdx.physics.box2d.Joint: Joint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.JointDef$JointType getType()
com.badlogic.gdx.physics.box2d.Joint: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.Body getBodyA()
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyA(long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.Body getBodyB()
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyB(long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 getAnchorA()
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 getAnchorB()
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.Joint: boolean getCollideConnected()
com.badlogic.gdx.physics.box2d.Joint: boolean jniGetCollideConnected(long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 getReactionForce(float)
com.badlogic.gdx.physics.box2d.Joint: void jniGetReactionForce(long,float,float[])
com.badlogic.gdx.physics.box2d.Joint: float getReactionTorque(float)
com.badlogic.gdx.physics.box2d.Joint: float jniGetReactionTorque(long,float)
com.badlogic.gdx.physics.box2d.Joint: java.lang.Object getUserData()
com.badlogic.gdx.physics.box2d.Joint: void setUserData(java.lang.Object)
com.badlogic.gdx.physics.box2d.Joint: boolean isActive()
com.badlogic.gdx.physics.box2d.Joint: boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.JointDef
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.JointDef$JointType type
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyA
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyB
com.badlogic.gdx.physics.box2d.JointDef: boolean collideConnected
com.badlogic.gdx.physics.box2d.JointDef: JointDef()
com.badlogic.gdx.physics.box2d.JointDef$JointType
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType Unknown
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType RevoluteJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType PrismaticJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType DistanceJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType PulleyJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType MouseJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType GearJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType WheelJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType WeldJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType FrictionJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType RopeJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType MotorJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType[] valueTypes
com.badlogic.gdx.physics.box2d.JointDef$JointType: int value
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType[] $VALUES
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType[] values()
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType valueOf(java.lang.String)
com.badlogic.gdx.physics.box2d.JointDef$JointType: JointDef$JointType(java.lang.String,int,int)
com.badlogic.gdx.physics.box2d.JointDef$JointType: int getValue()
com.badlogic.gdx.physics.box2d.JointDef$JointType: void <clinit>()
com.badlogic.gdx.physics.box2d.JointEdge
com.badlogic.gdx.physics.box2d.JointEdge: com.badlogic.gdx.physics.box2d.Body other
com.badlogic.gdx.physics.box2d.JointEdge: com.badlogic.gdx.physics.box2d.Joint joint
com.badlogic.gdx.physics.box2d.JointEdge: JointEdge(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Joint)
com.badlogic.gdx.physics.box2d.Manifold
com.badlogic.gdx.physics.box2d.Manifold: long addr
com.badlogic.gdx.physics.box2d.Manifold: com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] points
com.badlogic.gdx.physics.box2d.Manifold: com.badlogic.gdx.math.Vector2 localNormal
com.badlogic.gdx.physics.box2d.Manifold: com.badlogic.gdx.math.Vector2 localPoint
com.badlogic.gdx.physics.box2d.Manifold: int[] tmpInt
com.badlogic.gdx.physics.box2d.Manifold: float[] tmpFloat
com.badlogic.gdx.physics.box2d.Manifold: Manifold(long)
com.badlogic.gdx.physics.box2d.Manifold: com.badlogic.gdx.physics.box2d.Manifold$ManifoldType getType()
com.badlogic.gdx.physics.box2d.Manifold: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Manifold: int getPointCount()
com.badlogic.gdx.physics.box2d.Manifold: int jniGetPointCount(long)
com.badlogic.gdx.physics.box2d.Manifold: com.badlogic.gdx.math.Vector2 getLocalNormal()
com.badlogic.gdx.physics.box2d.Manifold: void jniGetLocalNormal(long,float[])
com.badlogic.gdx.physics.box2d.Manifold: com.badlogic.gdx.math.Vector2 getLocalPoint()
com.badlogic.gdx.physics.box2d.Manifold: void jniGetLocalPoint(long,float[])
com.badlogic.gdx.physics.box2d.Manifold: com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] getPoints()
com.badlogic.gdx.physics.box2d.Manifold: int jniGetPoint(long,float[],int)
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint: com.badlogic.gdx.math.Vector2 localPoint
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint: float normalImpulse
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint: float tangentImpulse
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint: int contactID
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint: com.badlogic.gdx.physics.box2d.Manifold this$0
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint: Manifold$ManifoldPoint(com.badlogic.gdx.physics.box2d.Manifold)
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint: java.lang.String toString()
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType: com.badlogic.gdx.physics.box2d.Manifold$ManifoldType Circle
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType: com.badlogic.gdx.physics.box2d.Manifold$ManifoldType FaceA
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType: com.badlogic.gdx.physics.box2d.Manifold$ManifoldType FaceB
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType: com.badlogic.gdx.physics.box2d.Manifold$ManifoldType[] $VALUES
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType: com.badlogic.gdx.physics.box2d.Manifold$ManifoldType[] values()
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType: com.badlogic.gdx.physics.box2d.Manifold$ManifoldType valueOf(java.lang.String)
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType: Manifold$ManifoldType(java.lang.String,int)
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType: void <clinit>()
com.badlogic.gdx.physics.box2d.MassData
com.badlogic.gdx.physics.box2d.MassData: float mass
com.badlogic.gdx.physics.box2d.MassData: com.badlogic.gdx.math.Vector2 center
com.badlogic.gdx.physics.box2d.MassData: float I
com.badlogic.gdx.physics.box2d.MassData: MassData()
com.badlogic.gdx.physics.box2d.PolygonShape
com.badlogic.gdx.physics.box2d.PolygonShape: float[] verts
com.badlogic.gdx.physics.box2d.PolygonShape: PolygonShape()
com.badlogic.gdx.physics.box2d.PolygonShape: PolygonShape(long)
com.badlogic.gdx.physics.box2d.PolygonShape: long newPolygonShape()
com.badlogic.gdx.physics.box2d.PolygonShape: com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.PolygonShape: void set(com.badlogic.gdx.math.Vector2[])
com.badlogic.gdx.physics.box2d.PolygonShape: void set(float[])
com.badlogic.gdx.physics.box2d.PolygonShape: void set(float[],int,int)
com.badlogic.gdx.physics.box2d.PolygonShape: void jniSet(long,float[],int,int)
com.badlogic.gdx.physics.box2d.PolygonShape: void setAsBox(float,float)
com.badlogic.gdx.physics.box2d.PolygonShape: void jniSetAsBox(long,float,float)
com.badlogic.gdx.physics.box2d.PolygonShape: void setAsBox(float,float,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.PolygonShape: void jniSetAsBox(long,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.PolygonShape: int getVertexCount()
com.badlogic.gdx.physics.box2d.PolygonShape: int jniGetVertexCount(long)
com.badlogic.gdx.physics.box2d.PolygonShape: void getVertex(int,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.PolygonShape: void jniGetVertex(long,int,float[])
com.badlogic.gdx.physics.box2d.PolygonShape: void <clinit>()
com.badlogic.gdx.physics.box2d.QueryCallback
com.badlogic.gdx.physics.box2d.QueryCallback: boolean reportFixture(com.badlogic.gdx.physics.box2d.Fixture)
com.badlogic.gdx.physics.box2d.RayCastCallback
com.badlogic.gdx.physics.box2d.RayCastCallback: float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.Shape
com.badlogic.gdx.physics.box2d.Shape: long addr
com.badlogic.gdx.physics.box2d.Shape: Shape()
com.badlogic.gdx.physics.box2d.Shape: com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.Shape: float getRadius()
com.badlogic.gdx.physics.box2d.Shape: float jniGetRadius(long)
com.badlogic.gdx.physics.box2d.Shape: void setRadius(float)
com.badlogic.gdx.physics.box2d.Shape: void jniSetRadius(long,float)
com.badlogic.gdx.physics.box2d.Shape: void dispose()
com.badlogic.gdx.physics.box2d.Shape: void jniDispose(long)
com.badlogic.gdx.physics.box2d.Shape: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Shape: int getChildCount()
com.badlogic.gdx.physics.box2d.Shape: int jniGetChildCount(long)
com.badlogic.gdx.physics.box2d.Shape$Type
com.badlogic.gdx.physics.box2d.Shape$Type: com.badlogic.gdx.physics.box2d.Shape$Type Circle
com.badlogic.gdx.physics.box2d.Shape$Type: com.badlogic.gdx.physics.box2d.Shape$Type Edge
com.badlogic.gdx.physics.box2d.Shape$Type: com.badlogic.gdx.physics.box2d.Shape$Type Polygon
com.badlogic.gdx.physics.box2d.Shape$Type: com.badlogic.gdx.physics.box2d.Shape$Type Chain
com.badlogic.gdx.physics.box2d.Shape$Type: com.badlogic.gdx.physics.box2d.Shape$Type[] $VALUES
com.badlogic.gdx.physics.box2d.Shape$Type: com.badlogic.gdx.physics.box2d.Shape$Type[] values()
com.badlogic.gdx.physics.box2d.Shape$Type: com.badlogic.gdx.physics.box2d.Shape$Type valueOf(java.lang.String)
com.badlogic.gdx.physics.box2d.Shape$Type: Shape$Type(java.lang.String,int)
com.badlogic.gdx.physics.box2d.Shape$Type: void <clinit>()
com.badlogic.gdx.physics.box2d.Transform
com.badlogic.gdx.physics.box2d.Transform: int POS_X
com.badlogic.gdx.physics.box2d.Transform: int POS_Y
com.badlogic.gdx.physics.box2d.Transform: int COS
com.badlogic.gdx.physics.box2d.Transform: int SIN
com.badlogic.gdx.physics.box2d.Transform: float[] vals
com.badlogic.gdx.physics.box2d.Transform: com.badlogic.gdx.math.Vector2 position
com.badlogic.gdx.physics.box2d.Transform: Transform()
com.badlogic.gdx.physics.box2d.Transform: Transform(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.Transform: com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Transform: com.badlogic.gdx.math.Vector2 getPosition()
com.badlogic.gdx.physics.box2d.Transform: void setRotation(float)
com.badlogic.gdx.physics.box2d.Transform: float getRotation()
com.badlogic.gdx.physics.box2d.Transform: void setPosition(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.World
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.utils.Pool freeBodies
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.utils.Pool freeFixtures
com.badlogic.gdx.physics.box2d.World: long addr
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.utils.LongMap bodies
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.utils.LongMap fixtures
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.utils.LongMap joints
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.physics.box2d.ContactFilter contactFilter
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.physics.box2d.ContactListener contactListener
com.badlogic.gdx.physics.box2d.World: float[] tmpGravity
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.math.Vector2 gravity
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.physics.box2d.QueryCallback queryCallback
com.badlogic.gdx.physics.box2d.World: long[] contactAddrs
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.utils.Array contacts
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.utils.Array freeContacts
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.physics.box2d.Contact contact
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.physics.box2d.Manifold manifold
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.physics.box2d.ContactImpulse impulse
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.physics.box2d.RayCastCallback rayCastCallback
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.math.Vector2 rayPoint
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.math.Vector2 rayNormal
com.badlogic.gdx.physics.box2d.World: World(com.badlogic.gdx.math.Vector2,boolean)
com.badlogic.gdx.physics.box2d.World: long newWorld(float,float,boolean)
com.badlogic.gdx.physics.box2d.World: void setDestructionListener(com.badlogic.gdx.physics.box2d.DestructionListener)
com.badlogic.gdx.physics.box2d.World: void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter)
com.badlogic.gdx.physics.box2d.World: void setUseDefaultContactFilter(boolean)
com.badlogic.gdx.physics.box2d.World: void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener)
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.physics.box2d.Body createBody(com.badlogic.gdx.physics.box2d.BodyDef)
com.badlogic.gdx.physics.box2d.World: long jniCreateBody(long,int,float,float,float,float,float,float,float,float,boolean,boolean,boolean,boolean,boolean,float)
com.badlogic.gdx.physics.box2d.World: void destroyBody(com.badlogic.gdx.physics.box2d.Body)
com.badlogic.gdx.physics.box2d.World: void jniDestroyBody(long,long)
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.physics.box2d.Joint createJoint(com.badlogic.gdx.physics.box2d.JointDef)
com.badlogic.gdx.physics.box2d.World: long createProperJoint(com.badlogic.gdx.physics.box2d.JointDef)
com.badlogic.gdx.physics.box2d.World: long jniCreateWheelJoint(long,long,long,boolean,float,float,float,float,float,float,boolean,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateRopeJoint(long,long,long,boolean,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateDistanceJoint(long,long,long,boolean,float,float,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateFrictionJoint(long,long,long,boolean,float,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateGearJoint(long,long,long,boolean,long,long,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateMotorJoint(long,long,long,boolean,float,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateMouseJoint(long,long,long,boolean,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreatePrismaticJoint(long,long,long,boolean,float,float,float,float,float,float,float,boolean,float,float,boolean,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreatePulleyJoint(long,long,long,boolean,float,float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateRevoluteJoint(long,long,long,boolean,float,float,float,float,float,boolean,float,float,boolean,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateWeldJoint(long,long,long,boolean,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: void destroyJoint(com.badlogic.gdx.physics.box2d.Joint)
com.badlogic.gdx.physics.box2d.World: void jniDestroyJoint(long,long)
com.badlogic.gdx.physics.box2d.World: void step(float,int,int)
com.badlogic.gdx.physics.box2d.World: void jniStep(long,float,int,int)
com.badlogic.gdx.physics.box2d.World: void clearForces()
com.badlogic.gdx.physics.box2d.World: void jniClearForces(long)
com.badlogic.gdx.physics.box2d.World: void setWarmStarting(boolean)
com.badlogic.gdx.physics.box2d.World: void jniSetWarmStarting(long,boolean)
com.badlogic.gdx.physics.box2d.World: void setContinuousPhysics(boolean)
com.badlogic.gdx.physics.box2d.World: void jniSetContiousPhysics(long,boolean)
com.badlogic.gdx.physics.box2d.World: int getProxyCount()
com.badlogic.gdx.physics.box2d.World: int jniGetProxyCount(long)
com.badlogic.gdx.physics.box2d.World: int getBodyCount()
com.badlogic.gdx.physics.box2d.World: int jniGetBodyCount(long)
com.badlogic.gdx.physics.box2d.World: int getJointCount()
com.badlogic.gdx.physics.box2d.World: int jniGetJointcount(long)
com.badlogic.gdx.physics.box2d.World: int getContactCount()
com.badlogic.gdx.physics.box2d.World: int jniGetContactCount(long)
com.badlogic.gdx.physics.box2d.World: void setGravity(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.World: void jniSetGravity(long,float,float)
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.math.Vector2 getGravity()
com.badlogic.gdx.physics.box2d.World: void jniGetGravity(long,float[])
com.badlogic.gdx.physics.box2d.World: boolean isLocked()
com.badlogic.gdx.physics.box2d.World: boolean jniIsLocked(long)
com.badlogic.gdx.physics.box2d.World: void setAutoClearForces(boolean)
com.badlogic.gdx.physics.box2d.World: void jniSetAutoClearForces(long,boolean)
com.badlogic.gdx.physics.box2d.World: boolean getAutoClearForces()
com.badlogic.gdx.physics.box2d.World: boolean jniGetAutoClearForces(long)
com.badlogic.gdx.physics.box2d.World: void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: void jniQueryAABB(long,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.utils.Array getContactList()
com.badlogic.gdx.physics.box2d.World: void getBodies(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.physics.box2d.World: void getJoints(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.physics.box2d.World: void jniGetContactList(long,long[])
com.badlogic.gdx.physics.box2d.World: void dispose()
com.badlogic.gdx.physics.box2d.World: void jniDispose(long)
com.badlogic.gdx.physics.box2d.World: boolean contactFilter(long,long)
com.badlogic.gdx.physics.box2d.World: void beginContact(long)
com.badlogic.gdx.physics.box2d.World: void endContact(long)
com.badlogic.gdx.physics.box2d.World: void preSolve(long,long)
com.badlogic.gdx.physics.box2d.World: void postSolve(long,long)
com.badlogic.gdx.physics.box2d.World: boolean reportFixture(long)
com.badlogic.gdx.physics.box2d.World: void setVelocityThreshold(float)
com.badlogic.gdx.physics.box2d.World: float getVelocityThreshold()
com.badlogic.gdx.physics.box2d.World: void rayCast(com.badlogic.gdx.physics.box2d.RayCastCallback,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.World: void jniRayCast(long,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: float reportRayFixture(long,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: void <clinit>()
com.badlogic.gdx.physics.box2d.World$1
com.badlogic.gdx.physics.box2d.World$1: com.badlogic.gdx.physics.box2d.World this$0
com.badlogic.gdx.physics.box2d.World$1: World$1(com.badlogic.gdx.physics.box2d.World,int,int)
com.badlogic.gdx.physics.box2d.World$1: com.badlogic.gdx.physics.box2d.Body newObject()
com.badlogic.gdx.physics.box2d.World$1: java.lang.Object newObject()
com.badlogic.gdx.physics.box2d.World$2
com.badlogic.gdx.physics.box2d.World$2: com.badlogic.gdx.physics.box2d.World this$0
com.badlogic.gdx.physics.box2d.World$2: World$2(com.badlogic.gdx.physics.box2d.World,int,int)
com.badlogic.gdx.physics.box2d.World$2: com.badlogic.gdx.physics.box2d.Fixture newObject()
com.badlogic.gdx.physics.box2d.World$2: java.lang.Object newObject()
com.badlogic.gdx.physics.box2d.WorldManifold
com.badlogic.gdx.physics.box2d.WorldManifold: com.badlogic.gdx.math.Vector2 normal
com.badlogic.gdx.physics.box2d.WorldManifold: com.badlogic.gdx.math.Vector2[] points
com.badlogic.gdx.physics.box2d.WorldManifold: float[] separations
com.badlogic.gdx.physics.box2d.WorldManifold: int numContactPoints
com.badlogic.gdx.physics.box2d.WorldManifold: WorldManifold()
com.badlogic.gdx.physics.box2d.WorldManifold: com.badlogic.gdx.math.Vector2 getNormal()
com.badlogic.gdx.physics.box2d.WorldManifold: com.badlogic.gdx.math.Vector2[] getPoints()
com.badlogic.gdx.physics.box2d.WorldManifold: float[] getSeparations()
com.badlogic.gdx.physics.box2d.WorldManifold: int getNumberOfContactPoints()
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D: com.badlogic.gdx.physics.box2d.World world
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D: com.badlogic.gdx.math.Vector2 startPoint
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D: com.badlogic.gdx.math.Vector2 endPoint
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D: boolean particleCollided
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D: float normalAngle
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D: float EPSILON
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D: com.badlogic.gdx.physics.box2d.RayCastCallback rayCallBack
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D: ParticleEmitterBox2D(com.badlogic.gdx.physics.box2d.World)
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D: ParticleEmitterBox2D(com.badlogic.gdx.physics.box2d.World,java.io.BufferedReader)
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D: ParticleEmitterBox2D(com.badlogic.gdx.physics.box2d.World,com.badlogic.gdx.graphics.g2d.ParticleEmitter)
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D: com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D$1
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D$1: com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D this$0
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D$1: ParticleEmitterBox2D$1(com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D)
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D$1: float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D$ParticleBox2D
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D$ParticleBox2D: com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D this$0
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D$ParticleBox2D: ParticleEmitterBox2D$ParticleBox2D(com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D,com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D$ParticleBox2D: void translate(float,float)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: float[] tmp
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: DistanceJoint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: com.badlogic.gdx.math.Vector2 getLocalAnchorA()
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: void jniGetLocalAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: com.badlogic.gdx.math.Vector2 getLocalAnchorB()
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: void jniGetLocalAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: void setLength(float)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: void jniSetLength(long,float)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: float getLength()
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: float jniGetLength(long)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: void setFrequency(float)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: void jniSetFrequency(long,float)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: float getFrequency()
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: float jniGetFrequency(long)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: void setDampingRatio(float)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: void jniSetDampingRatio(long,float)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: float getDampingRatio()
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: float jniGetDampingRatio(long)
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef: float length
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef: float frequencyHz
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef: float dampingRatio
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef: DistanceJointDef()
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef: void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.FrictionJoint
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: float[] tmp
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: FrictionJoint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: com.badlogic.gdx.math.Vector2 getLocalAnchorA()
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: void jniGetLocalAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: com.badlogic.gdx.math.Vector2 getLocalAnchorB()
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: void jniGetLocalAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: void setMaxForce(float)
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: void jniSetMaxForce(long,float)
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: float getMaxForce()
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: float jniGetMaxForce(long)
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: void setMaxTorque(float)
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: void jniSetMaxTorque(long,float)
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: float getMaxTorque()
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: float jniGetMaxTorque(long)
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef: float maxForce
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef: float maxTorque
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef: FrictionJointDef()
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef: void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.GearJoint
com.badlogic.gdx.physics.box2d.joints.GearJoint: com.badlogic.gdx.physics.box2d.Joint joint1
com.badlogic.gdx.physics.box2d.joints.GearJoint: com.badlogic.gdx.physics.box2d.Joint joint2
com.badlogic.gdx.physics.box2d.joints.GearJoint: GearJoint(com.badlogic.gdx.physics.box2d.World,long,com.badlogic.gdx.physics.box2d.Joint,com.badlogic.gdx.physics.box2d.Joint)
com.badlogic.gdx.physics.box2d.joints.GearJoint: com.badlogic.gdx.physics.box2d.Joint getJoint1()
com.badlogic.gdx.physics.box2d.joints.GearJoint: long jniGetJoint1(long)
com.badlogic.gdx.physics.box2d.joints.GearJoint: com.badlogic.gdx.physics.box2d.Joint getJoint2()
com.badlogic.gdx.physics.box2d.joints.GearJoint: long jniGetJoint2(long)
com.badlogic.gdx.physics.box2d.joints.GearJoint: void setRatio(float)
com.badlogic.gdx.physics.box2d.joints.GearJoint: void jniSetRatio(long,float)
com.badlogic.gdx.physics.box2d.joints.GearJoint: float getRatio()
com.badlogic.gdx.physics.box2d.joints.GearJoint: float jniGetRatio(long)
com.badlogic.gdx.physics.box2d.joints.GearJointDef
com.badlogic.gdx.physics.box2d.joints.GearJointDef: com.badlogic.gdx.physics.box2d.Joint joint1
com.badlogic.gdx.physics.box2d.joints.GearJointDef: com.badlogic.gdx.physics.box2d.Joint joint2
com.badlogic.gdx.physics.box2d.joints.GearJointDef: float ratio
com.badlogic.gdx.physics.box2d.joints.GearJointDef: GearJointDef()
com.badlogic.gdx.physics.box2d.joints.MotorJoint
com.badlogic.gdx.physics.box2d.joints.MotorJoint: float[] tmp
com.badlogic.gdx.physics.box2d.joints.MotorJoint: com.badlogic.gdx.math.Vector2 linearOffset
com.badlogic.gdx.physics.box2d.joints.MotorJoint: MotorJoint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.joints.MotorJoint: com.badlogic.gdx.math.Vector2 getLinearOffset()
com.badlogic.gdx.physics.box2d.joints.MotorJoint: void jniGetLinearOffset(long,float[])
com.badlogic.gdx.physics.box2d.joints.MotorJoint: void setLinearOffset(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.MotorJoint: void jniSetLinearOffset(long,float,float)
com.badlogic.gdx.physics.box2d.joints.MotorJoint: float getAngularOffset()
com.badlogic.gdx.physics.box2d.joints.MotorJoint: float jniGetAngularOffset(long)
com.badlogic.gdx.physics.box2d.joints.MotorJoint: void setAngularOffset(float)
com.badlogic.gdx.physics.box2d.joints.MotorJoint: void jniSetAngularOffset(long,float)
com.badlogic.gdx.physics.box2d.joints.MotorJoint: float getMaxForce()
com.badlogic.gdx.physics.box2d.joints.MotorJoint: float jniGetMaxForce(long)
com.badlogic.gdx.physics.box2d.joints.MotorJoint: void setMaxForce(float)
com.badlogic.gdx.physics.box2d.joints.MotorJoint: void jniSetMaxForce(long,float)
com.badlogic.gdx.physics.box2d.joints.MotorJoint: float getMaxTorque()
com.badlogic.gdx.physics.box2d.joints.MotorJoint: float jniGetMaxTorque(long)
com.badlogic.gdx.physics.box2d.joints.MotorJoint: void setMaxTorque(float)
com.badlogic.gdx.physics.box2d.joints.MotorJoint: void jniSetMaxTorque(long,float)
com.badlogic.gdx.physics.box2d.joints.MotorJoint: float getCorrectionFactor()
com.badlogic.gdx.physics.box2d.joints.MotorJoint: float jniGetCorrectionFactor(long)
com.badlogic.gdx.physics.box2d.joints.MotorJoint: void setCorrectionFactor(float)
com.badlogic.gdx.physics.box2d.joints.MotorJoint: void jniSetCorrectionFactor(long,float)
com.badlogic.gdx.physics.box2d.joints.MotorJointDef
com.badlogic.gdx.physics.box2d.joints.MotorJointDef: com.badlogic.gdx.math.Vector2 linearOffset
com.badlogic.gdx.physics.box2d.joints.MotorJointDef: float angularOffset
com.badlogic.gdx.physics.box2d.joints.MotorJointDef: float maxForce
com.badlogic.gdx.physics.box2d.joints.MotorJointDef: float maxTorque
com.badlogic.gdx.physics.box2d.joints.MotorJointDef: float correctionFactor
com.badlogic.gdx.physics.box2d.joints.MotorJointDef: MotorJointDef()
com.badlogic.gdx.physics.box2d.joints.MotorJointDef: void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body)
com.badlogic.gdx.physics.box2d.joints.MouseJoint
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float[] tmp
com.badlogic.gdx.physics.box2d.joints.MouseJoint: com.badlogic.gdx.math.Vector2 target
com.badlogic.gdx.physics.box2d.joints.MouseJoint: MouseJoint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void setTarget(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void jniSetTarget(long,float,float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: com.badlogic.gdx.math.Vector2 getTarget()
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void jniGetTarget(long,float[])
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void setMaxForce(float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void jniSetMaxForce(long,float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float getMaxForce()
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float jniGetMaxForce(long)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void setFrequency(float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void jniSetFrequency(long,float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float getFrequency()
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float jniGetFrequency(long)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void setDampingRatio(float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void jniSetDampingRatio(long,float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float getDampingRatio()
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float jniGetDampingRatio(long)
com.badlogic.gdx.physics.box2d.joints.MouseJointDef
com.badlogic.gdx.physics.box2d.joints.MouseJointDef: com.badlogic.gdx.math.Vector2 target
com.badlogic.gdx.physics.box2d.joints.MouseJointDef: float maxForce
com.badlogic.gdx.physics.box2d.joints.MouseJointDef: float frequencyHz
com.badlogic.gdx.physics.box2d.joints.MouseJointDef: float dampingRatio
com.badlogic.gdx.physics.box2d.joints.MouseJointDef: MouseJointDef()
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float[] tmp
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: com.badlogic.gdx.math.Vector2 localAxisA
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: PrismaticJoint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: com.badlogic.gdx.math.Vector2 getLocalAnchorA()
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void jniGetLocalAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: com.badlogic.gdx.math.Vector2 getLocalAnchorB()
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void jniGetLocalAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: com.badlogic.gdx.math.Vector2 getLocalAxisA()
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void jniGetLocalAxisA(long,float[])
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float getJointTranslation()
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float jniGetJointTranslation(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float getJointSpeed()
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float jniGetJointSpeed(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: boolean isLimitEnabled()
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: boolean jniIsLimitEnabled(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void enableLimit(boolean)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void jniEnableLimit(long,boolean)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float getLowerLimit()
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float jniGetLowerLimit(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float getUpperLimit()
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float jniGetUpperLimit(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void setLimits(float,float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void jniSetLimits(long,float,float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: boolean isMotorEnabled()
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: boolean jniIsMotorEnabled(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void enableMotor(boolean)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void jniEnableMotor(long,boolean)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void setMotorSpeed(float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void jniSetMotorSpeed(long,float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float getMotorSpeed()
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float jniGetMotorSpeed(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void setMaxMotorForce(float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void jniSetMaxMotorForce(long,float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float getMotorForce(float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float jniGetMotorForce(long,float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float getMaxMotorForce()
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float jniGetMaxMotorForce(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float getReferenceAngle()
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float jniGetReferenceAngle(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: com.badlogic.gdx.math.Vector2 localAxisA
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: float referenceAngle
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: boolean enableLimit
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: float lowerTranslation
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: float upperTranslation
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: boolean enableMotor
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: float maxMotorForce
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: float motorSpeed
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: PrismaticJointDef()
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.PulleyJoint
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float[] tmp
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: com.badlogic.gdx.math.Vector2 groundAnchorA
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: com.badlogic.gdx.math.Vector2 groundAnchorB
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: PulleyJoint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: com.badlogic.gdx.math.Vector2 getGroundAnchorA()
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: void jniGetGroundAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: com.badlogic.gdx.math.Vector2 getGroundAnchorB()
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: void jniGetGroundAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float getLength1()
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float jniGetLength1(long)
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float getLength2()
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float jniGetLength2(long)
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float getRatio()
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float jniGetRatio(long)
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: float minPulleyLength
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: com.badlogic.gdx.math.Vector2 groundAnchorA
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: com.badlogic.gdx.math.Vector2 groundAnchorB
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: float lengthA
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: float lengthB
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: float ratio
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: PulleyJointDef()
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float[] tmp
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: RevoluteJoint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float getJointAngle()
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float jniGetJointAngle(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float getJointSpeed()
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float jniGetJointSpeed(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: boolean isLimitEnabled()
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: boolean jniIsLimitEnabled(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void enableLimit(boolean)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void jniEnableLimit(long,boolean)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float getLowerLimit()
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float jniGetLowerLimit(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float getUpperLimit()
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float jniGetUpperLimit(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void setLimits(float,float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void jniSetLimits(long,float,float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: boolean isMotorEnabled()
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: boolean jniIsMotorEnabled(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void enableMotor(boolean)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void jniEnableMotor(long,boolean)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void setMotorSpeed(float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void jniSetMotorSpeed(long,float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float getMotorSpeed()
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float jniGetMotorSpeed(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void setMaxMotorTorque(float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void jniSetMaxMotorTorque(long,float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float getMotorTorque(float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float jniGetMotorTorque(long,float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: com.badlogic.gdx.math.Vector2 getLocalAnchorA()
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void jniGetLocalAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: com.badlogic.gdx.math.Vector2 getLocalAnchorB()
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void jniGetLocalAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float getReferenceAngle()
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float jniGetReferenceAngle(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float getMaxMotorTorque()
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float jniGetMaxMotorTorque(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: float referenceAngle
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: boolean enableLimit
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: float lowerAngle
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: float upperAngle
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: boolean enableMotor
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: float motorSpeed
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: float maxMotorTorque
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: RevoluteJointDef()
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.RopeJoint
com.badlogic.gdx.physics.box2d.joints.RopeJoint: float[] tmp
com.badlogic.gdx.physics.box2d.joints.RopeJoint: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.RopeJoint: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.RopeJoint: RopeJoint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.joints.RopeJoint: com.badlogic.gdx.math.Vector2 getLocalAnchorA()
com.badlogic.gdx.physics.box2d.joints.RopeJoint: void jniGetLocalAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.joints.RopeJoint: com.badlogic.gdx.math.Vector2 getLocalAnchorB()
com.badlogic.gdx.physics.box2d.joints.RopeJoint: void jniGetLocalAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.joints.RopeJoint: float getMaxLength()
com.badlogic.gdx.physics.box2d.joints.RopeJoint: float jniGetMaxLength(long)
com.badlogic.gdx.physics.box2d.joints.RopeJoint: void setMaxLength(float)
com.badlogic.gdx.physics.box2d.joints.RopeJoint: float jniSetMaxLength(long,float)
com.badlogic.gdx.physics.box2d.joints.RopeJointDef
com.badlogic.gdx.physics.box2d.joints.RopeJointDef: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.RopeJointDef: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.RopeJointDef: float maxLength
com.badlogic.gdx.physics.box2d.joints.RopeJointDef: RopeJointDef()
com.badlogic.gdx.physics.box2d.joints.WeldJoint
com.badlogic.gdx.physics.box2d.joints.WeldJoint: float[] tmp
com.badlogic.gdx.physics.box2d.joints.WeldJoint: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.WeldJoint: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.WeldJoint: WeldJoint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.joints.WeldJoint: com.badlogic.gdx.math.Vector2 getLocalAnchorA()
com.badlogic.gdx.physics.box2d.joints.WeldJoint: void jniGetLocalAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.joints.WeldJoint: com.badlogic.gdx.math.Vector2 getLocalAnchorB()
com.badlogic.gdx.physics.box2d.joints.WeldJoint: void jniGetLocalAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.joints.WeldJoint: float getReferenceAngle()
com.badlogic.gdx.physics.box2d.joints.WeldJoint: float jniGetReferenceAngle(long)
com.badlogic.gdx.physics.box2d.joints.WeldJointDef
com.badlogic.gdx.physics.box2d.joints.WeldJointDef: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.WeldJointDef: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.WeldJointDef: float referenceAngle
com.badlogic.gdx.physics.box2d.joints.WeldJointDef: WeldJointDef()
com.badlogic.gdx.physics.box2d.joints.WeldJointDef: void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.WheelJoint
com.badlogic.gdx.physics.box2d.joints.WheelJoint: float[] tmp
com.badlogic.gdx.physics.box2d.joints.WheelJoint: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.WheelJoint: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.WheelJoint: com.badlogic.gdx.math.Vector2 localAxisA
com.badlogic.gdx.physics.box2d.joints.WheelJoint: WheelJoint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: com.badlogic.gdx.math.Vector2 getLocalAnchorA()
com.badlogic.gdx.physics.box2d.joints.WheelJoint: void jniGetLocalAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.joints.WheelJoint: com.badlogic.gdx.math.Vector2 getLocalAnchorB()
com.badlogic.gdx.physics.box2d.joints.WheelJoint: void jniGetLocalAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.joints.WheelJoint: com.badlogic.gdx.math.Vector2 getLocalAxisA()
com.badlogic.gdx.physics.box2d.joints.WheelJoint: void jniGetLocalAxisA(long,float[])
com.badlogic.gdx.physics.box2d.joints.WheelJoint: float getJointTranslation()
com.badlogic.gdx.physics.box2d.joints.WheelJoint: float jniGetJointTranslation(long)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: float getJointSpeed()
com.badlogic.gdx.physics.box2d.joints.WheelJoint: float jniGetJointSpeed(long)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: boolean isMotorEnabled()
com.badlogic.gdx.physics.box2d.joints.WheelJoint: boolean jniIsMotorEnabled(long)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: void enableMotor(boolean)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: void jniEnableMotor(long,boolean)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: void setMotorSpeed(float)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: void jniSetMotorSpeed(long,float)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: float getMotorSpeed()
com.badlogic.gdx.physics.box2d.joints.WheelJoint: float jniGetMotorSpeed(long)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: void setMaxMotorTorque(float)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: void jniSetMaxMotorTorque(long,float)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: float getMaxMotorTorque()
com.badlogic.gdx.physics.box2d.joints.WheelJoint: float jniGetMaxMotorTorque(long)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: float getMotorTorque(float)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: float jniGetMotorTorque(long,float)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: void setSpringFrequencyHz(float)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: void jniSetSpringFrequencyHz(long,float)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: float getSpringFrequencyHz()
com.badlogic.gdx.physics.box2d.joints.WheelJoint: float jniGetSpringFrequencyHz(long)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: void setSpringDampingRatio(float)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: void jniSetSpringDampingRatio(long,float)
com.badlogic.gdx.physics.box2d.joints.WheelJoint: float getSpringDampingRatio()
com.badlogic.gdx.physics.box2d.joints.WheelJoint: float jniGetSpringDampingRatio(long)
com.badlogic.gdx.physics.box2d.joints.WheelJointDef
com.badlogic.gdx.physics.box2d.joints.WheelJointDef: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.WheelJointDef: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.WheelJointDef: com.badlogic.gdx.math.Vector2 localAxisA
com.badlogic.gdx.physics.box2d.joints.WheelJointDef: boolean enableMotor
com.badlogic.gdx.physics.box2d.joints.WheelJointDef: float maxMotorTorque
com.badlogic.gdx.physics.box2d.joints.WheelJointDef: float motorSpeed
com.badlogic.gdx.physics.box2d.joints.WheelJointDef: float frequencyHz
com.badlogic.gdx.physics.box2d.joints.WheelJointDef: float dampingRatio
com.badlogic.gdx.physics.box2d.joints.WheelJointDef: WheelJointDef()
com.badlogic.gdx.physics.box2d.joints.WheelJointDef: void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.utils.Box2DBuild
com.badlogic.gdx.physics.box2d.utils.Box2DBuild: Box2DBuild()
com.badlogic.gdx.physics.box2d.utils.Box2DBuild: void main(java.lang.String[])
com.badlogic.gdx.physics.bullet.Bullet
com.badlogic.gdx.physics.bullet.Bullet: boolean useRefCounting
com.badlogic.gdx.physics.bullet.Bullet: boolean enableLogging
com.badlogic.gdx.physics.bullet.Bullet: com.badlogic.gdx.utils.Pool shapePartPool
com.badlogic.gdx.physics.bullet.Bullet: com.badlogic.gdx.utils.Array shapePartArray
com.badlogic.gdx.physics.bullet.Bullet: com.badlogic.gdx.math.Matrix4 idt
com.badlogic.gdx.physics.bullet.Bullet: com.badlogic.gdx.math.Matrix4 tmpM
com.badlogic.gdx.physics.bullet.Bullet: Bullet()
com.badlogic.gdx.physics.bullet.Bullet: void init()
com.badlogic.gdx.physics.bullet.Bullet: void init(boolean)
com.badlogic.gdx.physics.bullet.Bullet: void init(boolean,boolean)
com.badlogic.gdx.physics.bullet.Bullet: void getShapeParts(com.badlogic.gdx.graphics.g3d.model.Node,boolean,com.badlogic.gdx.utils.Array,int,com.badlogic.gdx.utils.Pool)
com.badlogic.gdx.physics.bullet.Bullet: void getShapeParts(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array,int,com.badlogic.gdx.utils.Pool)
com.badlogic.gdx.physics.bullet.Bullet: com.badlogic.gdx.physics.bullet.collision.btCollisionShape obtainStaticNodeShape(com.badlogic.gdx.graphics.g3d.model.Node,boolean)
com.badlogic.gdx.physics.bullet.Bullet: com.badlogic.gdx.physics.bullet.collision.btCollisionShape obtainStaticNodeShape(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.physics.bullet.Bullet: com.badlogic.gdx.physics.bullet.collision.btCollisionShape obtainStaticShape(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.physics.bullet.Bullet: void <clinit>()
com.badlogic.gdx.physics.bullet.Bullet$1
com.badlogic.gdx.physics.bullet.Bullet$1: Bullet$1()
com.badlogic.gdx.physics.bullet.Bullet$1: com.badlogic.gdx.physics.bullet.Bullet$ShapePart newObject()
com.badlogic.gdx.physics.bullet.Bullet$1: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.Bullet$ShapePart
com.badlogic.gdx.physics.bullet.Bullet$ShapePart: com.badlogic.gdx.utils.Array parts
com.badlogic.gdx.physics.bullet.Bullet$ShapePart: com.badlogic.gdx.math.Matrix4 transform
com.badlogic.gdx.physics.bullet.Bullet$ShapePart: Bullet$ShapePart()
com.badlogic.gdx.physics.bullet.BulletBase
com.badlogic.gdx.physics.bullet.BulletBase: long cPointer
com.badlogic.gdx.physics.bullet.BulletBase: boolean swigCMemOwn
com.badlogic.gdx.physics.bullet.BulletBase: boolean disposed
com.badlogic.gdx.physics.bullet.BulletBase: boolean destroyed
com.badlogic.gdx.physics.bullet.BulletBase: java.lang.String className
com.badlogic.gdx.physics.bullet.BulletBase: int refCount
com.badlogic.gdx.physics.bullet.BulletBase: BulletBase(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.BulletBase: void obtain()
com.badlogic.gdx.physics.bullet.BulletBase: void release()
com.badlogic.gdx.physics.bullet.BulletBase: boolean isObtained()
com.badlogic.gdx.physics.bullet.BulletBase: void construct()
com.badlogic.gdx.physics.bullet.BulletBase: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.BulletBase: boolean equals(java.lang.Object)
com.badlogic.gdx.physics.bullet.BulletBase: int hashCode()
com.badlogic.gdx.physics.bullet.BulletBase: long getCPointer()
com.badlogic.gdx.physics.bullet.BulletBase: void takeOwnership()
com.badlogic.gdx.physics.bullet.BulletBase: void releaseOwnership()
com.badlogic.gdx.physics.bullet.BulletBase: boolean hasOwnership()
com.badlogic.gdx.physics.bullet.BulletBase: void delete()
com.badlogic.gdx.physics.bullet.BulletBase: void dispose()
com.badlogic.gdx.physics.bullet.BulletBase: boolean isDisposed()
com.badlogic.gdx.physics.bullet.BulletBase: java.lang.String toString()
com.badlogic.gdx.physics.bullet.BulletBase: void destroy()
com.badlogic.gdx.physics.bullet.BulletBase: void finalize()
com.badlogic.gdx.physics.bullet.BulletBuild
com.badlogic.gdx.physics.bullet.BulletBuild: BulletBuild()
com.badlogic.gdx.physics.bullet.BulletBuild: void main(java.lang.String[])
com.badlogic.gdx.physics.bullet.DebugDrawer
com.badlogic.gdx.physics.bullet.DebugDrawer: int debugMode
com.badlogic.gdx.physics.bullet.DebugDrawer: com.badlogic.gdx.graphics.glutils.ShapeRenderer shapeRenderer
com.badlogic.gdx.physics.bullet.DebugDrawer: DebugDrawer()
com.badlogic.gdx.physics.bullet.DebugDrawer: void drawLine(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.DebugDrawer: void drawContactPoint(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,int,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.DebugDrawer: void reportErrorWarning(java.lang.String)
com.badlogic.gdx.physics.bullet.DebugDrawer: void draw3dText(com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.lang.String)
com.badlogic.gdx.physics.bullet.DebugDrawer: void setDebugMode(int)
com.badlogic.gdx.physics.bullet.DebugDrawer: int getDebugMode()
com.badlogic.gdx.physics.bullet.DebugDrawer: void begin(com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.physics.bullet.DebugDrawer: void end()
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: AllHitsRayResultCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: AllHitsRayResultCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback)
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: AllHitsRayResultCallback(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: void setCollisionObjects(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray)
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray getCollisionObjects()
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: void setRayFromWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayFromWorld()
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: void setRayToWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayToWorld()
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: void setHitNormalWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getHitNormalWorld()
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: void setHitPointWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getHitPointWorld()
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: void setHitFractions(com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: com.badlogic.gdx.physics.bullet.linearmath.btScalarArray getHitFractions()
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback: float addSingleResult(com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean)
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int BOX_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int TRIANGLE_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int TETRAHEDRAL_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int CONVEX_TRIANGLEMESH_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int CONVEX_HULL_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int CONVEX_POINT_CLOUD_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int CUSTOM_POLYHEDRAL_SHAPE_TYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int IMPLICIT_CONVEX_SHAPES_START_HERE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int SPHERE_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int MULTI_SPHERE_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int CAPSULE_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int CONE_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int CONVEX_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int CYLINDER_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int UNIFORM_SCALING_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int MINKOWSKI_SUM_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int MINKOWSKI_DIFFERENCE_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int BOX_2D_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int CONVEX_2D_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int CUSTOM_CONVEX_SHAPE_TYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int CONCAVE_SHAPES_START_HERE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int TRIANGLE_MESH_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int SCALED_TRIANGLE_MESH_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int FAST_CONCAVE_MESH_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int TERRAIN_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int GIMPACT_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int MULTIMATERIAL_TRIANGLE_MESH_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int EMPTY_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int STATIC_PLANE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int CUSTOM_CONCAVE_SHAPE_TYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int CONCAVE_SHAPES_END_HERE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int COMPOUND_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int SOFTBODY_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int HFFLUID_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int HFFLUID_BUOYANT_CONVEX_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int INVALID_SHAPE_PROXYTYPE
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: int MAX_BROADPHASE_COLLISION_TYPES
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes: BroadphaseNativeTypes()
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: ClosestConvexResultCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: ClosestConvexResultCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: ClosestConvexResultCallback(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: void setConvexFromWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getConvexFromWorld()
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: void setConvexToWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getConvexToWorld()
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: void setHitNormalWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitNormalWorld()
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: void setHitPointWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitPointWorld()
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: void setHitCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getHitCollisionObject()
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback: float addSingleResult(com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,boolean)
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback: ClosestNotMeConvexResultCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback: ClosestNotMeConvexResultCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback: void setMe(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getMe()
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback: void setAllowedPenetration(float)
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback: float getAllowedPenetration()
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback: ClosestNotMeConvexResultCallback(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback: boolean needsCollision(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeRayResultCallback
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeRayResultCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeRayResultCallback: ClosestNotMeRayResultCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeRayResultCallback: ClosestNotMeRayResultCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeRayResultCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeRayResultCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.ClosestNotMeRayResultCallback)
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeRayResultCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeRayResultCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeRayResultCallback: ClosestNotMeRayResultCallback(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: ClosestRayResultCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: ClosestRayResultCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback)
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: ClosestRayResultCallback(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: void setRayFromWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayFromWorld()
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: void setRayToWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayToWorld()
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: void setHitNormalWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitNormalWorld()
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: void setHitPointWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitPointWorld()
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback: float addSingleResult(com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean)
com.badlogic.gdx.physics.bullet.collision.Collision
com.badlogic.gdx.physics.bullet.collision.Collision: com.badlogic.gdx.math.Vector3 staticVector3
com.badlogic.gdx.physics.bullet.collision.Collision: com.badlogic.gdx.utils.Pool poolVector3
com.badlogic.gdx.physics.bullet.collision.Collision: com.badlogic.gdx.math.Quaternion staticQuaternion
com.badlogic.gdx.physics.bullet.collision.Collision: com.badlogic.gdx.utils.Pool poolQuaternion
com.badlogic.gdx.physics.bullet.collision.Collision: com.badlogic.gdx.math.Matrix3 staticMatrix3
com.badlogic.gdx.physics.bullet.collision.Collision: com.badlogic.gdx.utils.Pool poolMatrix3
com.badlogic.gdx.physics.bullet.collision.Collision: com.badlogic.gdx.math.Matrix4 staticMatrix4
com.badlogic.gdx.physics.bullet.collision.Collision: com.badlogic.gdx.utils.Pool poolMatrix4
com.badlogic.gdx.physics.bullet.collision.Collision: Collision()
com.badlogic.gdx.physics.bullet.collision.Collision: boolean Intersect(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.Collision: boolean Intersect(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.Collision: float Proximity(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.Collision: int Select(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.Collision: void Merge(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.Collision: boolean NotEqual(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.Collision: void setGOverlappingPairs(int)
com.badlogic.gdx.physics.bullet.collision.Collision: int getGOverlappingPairs()
com.badlogic.gdx.physics.bullet.collision.Collision: void setGRemovePairs(int)
com.badlogic.gdx.physics.bullet.collision.Collision: int getGRemovePairs()
com.badlogic.gdx.physics.bullet.collision.Collision: void setGAddedPairs(int)
com.badlogic.gdx.physics.bullet.collision.Collision: int getGAddedPairs()
com.badlogic.gdx.physics.bullet.collision.Collision: void setGFindPairs(int)
com.badlogic.gdx.physics.bullet.collision.Collision: int getGFindPairs()
com.badlogic.gdx.physics.bullet.collision.Collision: int getBT_NULL_PAIR()
com.badlogic.gdx.physics.bullet.collision.Collision: boolean gdxCheckFilter(int,int)
com.badlogic.gdx.physics.bullet.collision.Collision: boolean gdxCheckFilter(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.Collision: void setGCompoundCompoundChildShapePairCallback(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool)
com.badlogic.gdx.physics.bullet.collision.Collision: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool getGCompoundCompoundChildShapePairCallback()
com.badlogic.gdx.physics.bullet.collision.Collision: void setGContactAddedCallback(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool)
com.badlogic.gdx.physics.bullet.collision.Collision: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool getGContactAddedCallback()
com.badlogic.gdx.physics.bullet.collision.Collision: int getBT_SIMPLE_NULL_PAIR()
com.badlogic.gdx.physics.bullet.collision.Collision: void setGOverlappingSimplePairs(int)
com.badlogic.gdx.physics.bullet.collision.Collision: int getGOverlappingSimplePairs()
com.badlogic.gdx.physics.bullet.collision.Collision: void setGRemoveSimplePairs(int)
com.badlogic.gdx.physics.bullet.collision.Collision: int getGRemoveSimplePairs()
com.badlogic.gdx.physics.bullet.collision.Collision: void setGAddedSimplePairs(int)
com.badlogic.gdx.physics.bullet.collision.Collision: int getGAddedSimplePairs()
com.badlogic.gdx.physics.bullet.collision.Collision: void setGFindSimplePairs(int)
com.badlogic.gdx.physics.bullet.collision.Collision: int getGFindSimplePairs()
com.badlogic.gdx.physics.bullet.collision.Collision: void btGenerateInternalEdgeInfo(com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap)
com.badlogic.gdx.physics.bullet.collision.Collision: void btAdjustInternalEdgeContacts(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,int)
com.badlogic.gdx.physics.bullet.collision.Collision: void btAdjustInternalEdgeContacts(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int)
com.badlogic.gdx.physics.bullet.collision.Collision: void setGCompoundChildShapePairCallback(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool)
com.badlogic.gdx.physics.bullet.collision.Collision: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool getGCompoundChildShapePairCallback()
com.badlogic.gdx.physics.bullet.collision.Collision: void setGContactBreakingThreshold(float)
com.badlogic.gdx.physics.bullet.collision.Collision: float getGContactBreakingThreshold()
com.badlogic.gdx.physics.bullet.collision.Collision: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.Collision$1
com.badlogic.gdx.physics.bullet.collision.Collision$1: Collision$1()
com.badlogic.gdx.physics.bullet.collision.Collision$1: com.badlogic.gdx.math.Vector3 newObject()
com.badlogic.gdx.physics.bullet.collision.Collision$1: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.collision.Collision$2
com.badlogic.gdx.physics.bullet.collision.Collision$2: Collision$2()
com.badlogic.gdx.physics.bullet.collision.Collision$2: com.badlogic.gdx.math.Quaternion newObject()
com.badlogic.gdx.physics.bullet.collision.Collision$2: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.collision.Collision$3
com.badlogic.gdx.physics.bullet.collision.Collision$3: Collision$3()
com.badlogic.gdx.physics.bullet.collision.Collision$3: com.badlogic.gdx.math.Matrix3 newObject()
com.badlogic.gdx.physics.bullet.collision.Collision$3: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.collision.Collision$4
com.badlogic.gdx.physics.bullet.collision.Collision$4: Collision$4()
com.badlogic.gdx.physics.bullet.collision.Collision$4: com.badlogic.gdx.math.Matrix4 newObject()
com.badlogic.gdx.physics.bullet.collision.Collision$4: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.collision.CollisionConstants
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int DBVT_IMPL_GENERIC
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int DBVT_IMPL_SSE
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int DBVT_USE_TEMPLATE
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int DBVT_USE_INTRINSIC_SSE
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int DBVT_USE_MEMMOVE
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int DBVT_ENABLE_BENCHMARK
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int DBVT_SELECT_IMPL
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int DBVT_MERGE_IMPL
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int DBVT_INT0_IMPL
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: java.lang.String btQuantizedBvhDataName
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int MAX_SUBTREE_SIZE_IN_BYTES
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int MAX_NUM_PARTS_IN_BITS
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int DBVT_BP_PROFILE
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int DBVT_BP_PREVENTFALSEUPDATE
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int DBVT_BP_ACCURATESLEEPING
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int DBVT_BP_ENABLE_BENCHMARK
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int USE_OVERLAP_TEST_ON_REMOVES
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int MAX_PREFERRED_PENETRATION_DIRECTIONS
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int TRI_INFO_V0V1_CONVEX
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int TRI_INFO_V1V2_CONVEX
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int TRI_INFO_V2V0_CONVEX
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int TRI_INFO_V0V1_SWAP_NORMALB
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int TRI_INFO_V1V2_SWAP_NORMALB
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int TRI_INFO_V2V0_SWAP_NORMALB
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int TEST_INTERNAL_OBJECTS
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int ACTIVE_TAG
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int ISLAND_SLEEPING
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int WANTS_DEACTIVATION
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int DISABLE_DEACTIVATION
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int DISABLE_SIMULATION
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: java.lang.String btCollisionObjectDataName
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int USE_PATH_COMPRESSION
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int STATIC_SIMULATION_ISLAND_OPTIMIZATION
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int USE_DISPATCH_REGISTRY_ARRAY
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int MANIFOLD_CACHE_SIZE
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int NO_VIRTUAL_INTERFACE
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: int VORONOI_SIMPLEX_MAX_VERTS
com.badlogic.gdx.physics.bullet.collision.CollisionConstants: double VORONOI_DEFAULT_EQUAL_VERTEX_THRESHOLD
com.badlogic.gdx.physics.bullet.collision.CollisionJNI
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: CollisionJNI()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDiscreteCollisionDetectorInterface_Result(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDiscreteCollisionDetectorInterface_Result_setShapeIdentifiersA(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDiscreteCollisionDetectorInterface_Result_setShapeIdentifiersB(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDiscreteCollisionDetectorInterface_Result_addContactPoint(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDiscreteCollisionDetectorInterface_ClosestPointInput()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDiscreteCollisionDetectorInterface_ClosestPointInput_transformA_set(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDiscreteCollisionDetectorInterface_ClosestPointInput_transformA_get(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDiscreteCollisionDetectorInterface_ClosestPointInput_transformB_set(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDiscreteCollisionDetectorInterface_ClosestPointInput_transformB_get(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDiscreteCollisionDetectorInterface_ClosestPointInput_maximumDistanceSquared_set(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btDiscreteCollisionDetectorInterface_ClosestPointInput_maximumDistanceSquared_get(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDiscreteCollisionDetectorInterface_ClosestPointInput(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDiscreteCollisionDetectorInterface(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDiscreteCollisionDetectorInterface_getClosestPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDiscreteCollisionDetectorInterface_getClosestPoints__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStorageResult_normalOnSurfaceB_set(long,com.badlogic.gdx.physics.bullet.collision.btStorageResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btStorageResult_normalOnSurfaceB_get(long,com.badlogic.gdx.physics.bullet.collision.btStorageResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStorageResult_closestPointInB_set(long,com.badlogic.gdx.physics.bullet.collision.btStorageResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btStorageResult_closestPointInB_get(long,com.badlogic.gdx.physics.bullet.collision.btStorageResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStorageResult_distance_set(long,com.badlogic.gdx.physics.bullet.collision.btStorageResult,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btStorageResult_distance_get(long,com.badlogic.gdx.physics.bullet.collision.btStorageResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btStorageResult(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseProxy_clientObject_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBroadphaseProxy_clientObject_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseProxy_collisionFilterGroup_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,short)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: short btBroadphaseProxy_collisionFilterGroup_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseProxy_collisionFilterMask_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,short)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: short btBroadphaseProxy_collisionFilterMask_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseProxy_multiSapParentProxy_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBroadphaseProxy_multiSapParentProxy_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseProxy_uniqueId_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btBroadphaseProxy_uniqueId_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseProxy_aabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBroadphaseProxy_aabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseProxy_aabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBroadphaseProxy_aabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btBroadphaseProxy_getUid(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBroadphaseProxy__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBroadphaseProxy__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBroadphaseProxy__SWIG_2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btBroadphaseProxy_isPolyhedral(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btBroadphaseProxy_isConvex(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btBroadphaseProxy_isNonMoving(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btBroadphaseProxy_isConcave(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btBroadphaseProxy_isCompound(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btBroadphaseProxy_isSoftBody(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btBroadphaseProxy_isInfinite(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btBroadphaseProxy_isConvex2d(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBroadphaseProxy(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBroadphasePair__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBroadphasePair__SWIG_1(com.badlogic.gdx.physics.bullet.collision.btBroadphasePair)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBroadphasePair__SWIG_2(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphasePair_pProxy0_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBroadphasePair_pProxy0_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphasePair_pProxy1_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBroadphasePair_pProxy1_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphasePair_algorithm_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBroadphasePair_algorithm_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphasePair_internalInfo1_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBroadphasePair_internalInfo1_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphasePair_internalTmpValue_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btBroadphasePair_internalTmpValue_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBroadphasePair(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBroadphasePairSortPredicate()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBroadphasePairSortPredicate(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBroadphaseAabbCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btBroadphaseAabbCallback_process(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBroadphaseAabbCallback()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseAabbCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseAabbCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseRayCallback_rayDirectionInverse_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBroadphaseRayCallback_rayDirectionInverse_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseRayCallback_signs_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,long[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long[] btBroadphaseRayCallback_signs_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseRayCallback_lambda_max_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btBroadphaseRayCallback_lambda_max_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBroadphaseRayCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBroadphaseRayCallback()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseRayCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseRayCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBroadphaseInterface(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBroadphaseInterface_createProxy(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,long,short,short,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseInterface_destroyProxy(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseInterface_setAabb(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseInterface_getAabb(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseInterface_rayTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseInterface_rayTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseInterface_rayTest__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseInterface_aabbTest(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseInterface_calculateOverlappingPairs(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBroadphaseInterface_getOverlappingPairCache__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseInterface_getBroadphaseAabb(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseInterface_resetPool(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBroadphaseInterface_printStats(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btDbvtAabbMm_Center(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btDbvtAabbMm_Lengths(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btDbvtAabbMm_Extents(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btDbvtAabbMm_Mins(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btDbvtAabbMm_Maxs(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtAabbMm_FromCE(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtAabbMm_FromCR(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtAabbMm_FromMM(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtAabbMm_FromPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtAabbMm_FromPoints__SWIG_1(long,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtAabbMm_Expand(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtAabbMm_SignedExpand(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDbvtAabbMm_Contain(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvtAabbMm_Classify(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3,float,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btDbvtAabbMm_ProjectMinimum(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean Intersect__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean Intersect__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float Proximity(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int Select(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void Merge(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean NotEqual(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btDbvtAabbMm_tMins(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btDbvtAabbMm_tMaxs(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDbvtAabbMm()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDbvtAabbMm(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtNode_volume_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtNode_volume_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtNode_parent_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtNode_parent_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDbvtNode_isleaf(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDbvtNode_isinternal(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtNode_childs_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtNode_childs_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtNode_data_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtNode_data_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtNode_dataAsInt_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvtNode_dataAsInt_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDbvtNode()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDbvtNode(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_sStkNN_a_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvt_sStkNN_a_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_sStkNN_b_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvt_sStkNN_b_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDbvt_sStkNN__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDbvt_sStkNN__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDbvt_sStkNN(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_sStkNP_node_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvt_sStkNP_node_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_sStkNP_mask_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvt_sStkNP_mask_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDbvt_sStkNP(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDbvt_sStkNP(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_sStkNPS_node_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvt_sStkNPS_node_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_sStkNPS_mask_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvt_sStkNPS_mask_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_sStkNPS_value_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btDbvt_sStkNPS_value_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDbvt_sStkNPS__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDbvt_sStkNPS__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDbvt_sStkNPS(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_sStkCLN_node_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvt_sStkCLN_node_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_sStkCLN_parent_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvt_sStkCLN_parent_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDbvt_sStkCLN(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDbvt_sStkCLN(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDbvt_ICollide(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_ICollide_Process__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_ICollide_Process__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_ICollide_Process__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDbvt_ICollide_Descent(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDbvt_ICollide_AllLeaves(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDbvt_ICollide()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDbvt_IWriter(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_IWriter_Prepare(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_IWriter_WriteNode(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int,int,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_IWriter_WriteLeaf(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDbvt_IClone(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_IClone_CloneLeaf(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDbvt_IClone()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_root_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvt_root_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_free_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvt_free_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_lkhd_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvt_lkhd_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_leaves_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvt_leaves_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_opath_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvt_opath_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_stkStack_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvt_stkStack_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_rayTestStack_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvt_rayTestStack_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDbvt()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDbvt(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_clear(long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDbvt_empty(long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_optimizeBottomUp(long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_optimizeTopDown__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_optimizeTopDown__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_optimizeIncremental(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvt_insert(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_update__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_update__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_update__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDbvt_update__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDbvt_update__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDbvt_update__SWIG_5(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_remove(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_write(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_clone__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_clone__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvt_maxdepth(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvt_countLeaves(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_extractLeaves(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_benchmark()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_enumNodes(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_enumLeaves(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_collideTT(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_collideTTpersistentStack(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_collideTV(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_rayTest(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_rayTestInternal(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long[],float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_collideKDOP(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,int,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_collideOCL__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,com.badlogic.gdx.math.Vector3,int,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_collideOCL__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,com.badlogic.gdx.math.Vector3,int,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvt_collideTU(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvt_nearest(java.nio.IntBuffer,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS,float,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvt_allocate(long,long,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhNode_quantizedAabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode,int[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int[] btQuantizedBvhNode_quantizedAabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhNode_quantizedAabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode,int[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int[] btQuantizedBvhNode_quantizedAabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhNode_escapeIndexOrTriangleIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhNode_escapeIndexOrTriangleIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btQuantizedBvhNode_isLeafNode(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhNode_getEscapeIndex(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhNode_getTriangleIndex(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhNode_getPartId(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btQuantizedBvhNode()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btQuantizedBvhNode(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNode_aabbMinOrg_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btOptimizedBvhNode_aabbMinOrg_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNode_aabbMaxOrg_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btOptimizedBvhNode_aabbMaxOrg_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNode_escapeIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btOptimizedBvhNode_escapeIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNode_subPart_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btOptimizedBvhNode_subPart_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNode_triangleIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btOptimizedBvhNode_triangleIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNode_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btOptimizedBvhNode_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btOptimizedBvhNode()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btOptimizedBvhNode(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhSubtreeInfo_quantizedAabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo,int[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int[] btBvhSubtreeInfo_quantizedAabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhSubtreeInfo_quantizedAabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo,int[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int[] btBvhSubtreeInfo_quantizedAabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhSubtreeInfo_rootNodeIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btBvhSubtreeInfo_rootNodeIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhSubtreeInfo_subtreeSize_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btBvhSubtreeInfo_subtreeSize_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhSubtreeInfo_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo,int[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int[] btBvhSubtreeInfo_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBvhSubtreeInfo()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhSubtreeInfo_setAabbFromQuantizeNode(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo,long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBvhSubtreeInfo(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btNodeOverlapCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btNodeOverlapCallback_processNode(long,com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btNodeOverlapCallback()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btNodeOverlapCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btNodeOverlapCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btQuantizedBvh()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btQuantizedBvh(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvh_setQuantizationValues__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvh_setQuantizationValues__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvh_getLeafNodeArray(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvh_buildInternal(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvh_reportAabbOverlappingNodex(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvh_reportRayOverlappingNodex(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvh_reportBoxCastOverlappingNodex(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvh_quantize(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,java.nio.IntBuffer,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvh_quantizeWithClamp(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,java.nio.IntBuffer,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btQuantizedBvh_unQuantize(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,java.nio.IntBuffer)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvh_setTraversalMode(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvh_getQuantizedNodeArray(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvh_getSubtreeInfoArray(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvh_calculateSerializeBufferSize(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btQuantizedBvh_serialize__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,long,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvh_deSerializeInPlace(long,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvh_getAlignmentSerializationPadding()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvh_calculateSerializeBufferSizeNew(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btQuantizedBvh_serialize__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvh_deSerializeFloat(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvh_deSerializeDouble(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btQuantizedBvh_isQuantized(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhSubtreeInfoData_rootNodeIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btBvhSubtreeInfoData_rootNodeIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhSubtreeInfoData_subtreeSize_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btBvhSubtreeInfoData_subtreeSize_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhSubtreeInfoData_quantizedAabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData,int[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int[] btBvhSubtreeInfoData_quantizedAabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhSubtreeInfoData_quantizedAabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData,int[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int[] btBvhSubtreeInfoData_quantizedAabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBvhSubtreeInfoData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBvhSubtreeInfoData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNodeFloatData_aabbMinOrg_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btOptimizedBvhNodeFloatData_aabbMinOrg_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNodeFloatData_aabbMaxOrg_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btOptimizedBvhNodeFloatData_aabbMaxOrg_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNodeFloatData_escapeIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btOptimizedBvhNodeFloatData_escapeIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNodeFloatData_subPart_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btOptimizedBvhNodeFloatData_subPart_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNodeFloatData_triangleIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btOptimizedBvhNodeFloatData_triangleIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNodeFloatData_pad_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btOptimizedBvhNodeFloatData_pad_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btOptimizedBvhNodeFloatData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btOptimizedBvhNodeFloatData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNodeDoubleData_aabbMinOrg_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btOptimizedBvhNodeDoubleData_aabbMinOrg_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNodeDoubleData_aabbMaxOrg_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btOptimizedBvhNodeDoubleData_aabbMaxOrg_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNodeDoubleData_escapeIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btOptimizedBvhNodeDoubleData_escapeIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNodeDoubleData_subPart_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btOptimizedBvhNodeDoubleData_subPart_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNodeDoubleData_triangleIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btOptimizedBvhNodeDoubleData_triangleIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvhNodeDoubleData_pad_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btOptimizedBvhNodeDoubleData_pad_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btOptimizedBvhNodeDoubleData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btOptimizedBvhNodeDoubleData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhNodeData_quantizedAabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData,int[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int[] btQuantizedBvhNodeData_quantizedAabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhNodeData_quantizedAabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData,int[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int[] btQuantizedBvhNodeData_quantizedAabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhNodeData_escapeIndexOrTriangleIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhNodeData_escapeIndexOrTriangleIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btQuantizedBvhNodeData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btQuantizedBvhNodeData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhFloatData_bvhAabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvhFloatData_bvhAabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhFloatData_bvhAabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvhFloatData_bvhAabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhFloatData_bvhQuantization_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvhFloatData_bvhQuantization_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhFloatData_curNodeIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhFloatData_curNodeIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhFloatData_useQuantization_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhFloatData_useQuantization_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhFloatData_numContiguousLeafNodes_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhFloatData_numContiguousLeafNodes_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhFloatData_numQuantizedContiguousNodes_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhFloatData_numQuantizedContiguousNodes_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhFloatData_contiguousNodesPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvhFloatData_contiguousNodesPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhFloatData_quantizedContiguousNodesPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvhFloatData_quantizedContiguousNodesPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhFloatData_subTreeInfoPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvhFloatData_subTreeInfoPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhFloatData_traversalMode_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhFloatData_traversalMode_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhFloatData_numSubtreeHeaders_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhFloatData_numSubtreeHeaders_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btQuantizedBvhFloatData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btQuantizedBvhFloatData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhDoubleData_bvhAabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvhDoubleData_bvhAabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhDoubleData_bvhAabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvhDoubleData_bvhAabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhDoubleData_bvhQuantization_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvhDoubleData_bvhQuantization_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhDoubleData_curNodeIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhDoubleData_curNodeIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhDoubleData_useQuantization_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhDoubleData_useQuantization_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhDoubleData_numContiguousLeafNodes_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhDoubleData_numContiguousLeafNodes_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhDoubleData_numQuantizedContiguousNodes_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhDoubleData_numQuantizedContiguousNodes_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhDoubleData_contiguousNodesPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvhDoubleData_contiguousNodesPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhDoubleData_quantizedContiguousNodesPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvhDoubleData_quantizedContiguousNodesPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhDoubleData_traversalMode_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhDoubleData_traversalMode_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhDoubleData_numSubtreeHeaders_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btQuantizedBvhDoubleData_numSubtreeHeaders_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btQuantizedBvhDoubleData_subTreeInfoPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btQuantizedBvhDoubleData_subTreeInfoPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btQuantizedBvhDoubleData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btQuantizedBvhDoubleData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtProxy_leaf_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtProxy,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtProxy_leaf_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtProxy_links_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtProxy,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtProxy_links_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtProxy_stage_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtProxy,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvtProxy_stage_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDbvtProxy(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDbvtProxy(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_sets_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtBroadphase_sets_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_stageRoots_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtBroadphase_stageRoots_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_paircache_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtBroadphase_paircache_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_prediction_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btDbvtBroadphase_prediction_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_stageCurrent_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvtBroadphase_stageCurrent_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_fupdates_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvtBroadphase_fupdates_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_dupdates_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvtBroadphase_dupdates_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_cupdates_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvtBroadphase_cupdates_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_newpairs_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvtBroadphase_newpairs_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_fixedleft_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvtBroadphase_fixedleft_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_updates_call_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtBroadphase_updates_call_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_updates_done_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtBroadphase_updates_done_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_updates_ratio_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btDbvtBroadphase_updates_ratio_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_pid_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvtBroadphase_pid_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_cid_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvtBroadphase_cid_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_gid_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDbvtBroadphase_gid_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_releasepaircache_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDbvtBroadphase_releasepaircache_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_deferedcollide_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDbvtBroadphase_deferedcollide_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_needcleanup_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDbvtBroadphase_needcleanup_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDbvtBroadphase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDbvtBroadphase__SWIG_1()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDbvtBroadphase(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_collide(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_optimize(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_rayTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_rayTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_rayTest__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtBroadphase_getOverlappingPairCache__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_performDeferredRemoval(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_setVelocityPrediction(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btDbvtBroadphase_getVelocityPrediction(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_setAabbForceUpdate(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDbvtBroadphase_benchmark(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimpleBroadphaseProxy_nextFree_set(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btSimpleBroadphaseProxy_nextFree_get(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSimpleBroadphaseProxy__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSimpleBroadphaseProxy__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,long,short,short,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimpleBroadphaseProxy_SetNextFree(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btSimpleBroadphaseProxy_GetNextFree(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btSimpleBroadphaseProxy(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSimpleBroadphase__SWIG_0(int,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSimpleBroadphase__SWIG_1(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSimpleBroadphase__SWIG_2()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btSimpleBroadphase(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btSimpleBroadphase_aabbOverlap(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimpleBroadphase_rayTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimpleBroadphase_rayTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimpleBroadphase_rayTest__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSimpleBroadphase_getOverlappingPairCache__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btSimpleBroadphase_testAabbOverlap(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMultiSapBroadphase_btMultiSapProxy_aabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMultiSapBroadphase_btMultiSapProxy_aabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMultiSapBroadphase_btMultiSapProxy_aabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMultiSapBroadphase_btMultiSapProxy_aabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMultiSapBroadphase_btMultiSapProxy_shapeType_set(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btMultiSapBroadphase_btMultiSapProxy_shapeType_get(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btMultiSapBroadphase_btMultiSapProxy(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,long,short,short)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btMultiSapBroadphase_btMultiSapProxy(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMultiSapBroadphase_getBroadphaseArray__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btMultiSapBroadphase(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMultiSapBroadphase_rayTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMultiSapBroadphase_rayTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMultiSapBroadphase_rayTest__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMultiSapBroadphase_addToChildBroadphase(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btMultiSapBroadphase_testAabbOverlap(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMultiSapBroadphase_getOverlappingPairCache__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMultiSapBroadphase_buildTree(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMultiSapBroadphase_quicksort(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCollisionAlgorithmConstructionInfo__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCollisionAlgorithmConstructionInfo__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionAlgorithmConstructionInfo_dispatcher1_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionAlgorithmConstructionInfo_dispatcher1_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionAlgorithmConstructionInfo_manifold_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionAlgorithmConstructionInfo_manifold_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCollisionAlgorithmConstructionInfo(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCollisionAlgorithm(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionAlgorithm_processCollision(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionAlgorithm_calculateTimeOfImpact(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionAlgorithm_getAllContactManifolds(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btOverlappingPairCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btOverlappingPairCallback_addOverlappingPair(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btOverlappingPairCallback_removeOverlappingPair(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOverlappingPairCallback_removeOverlappingPairsContainingProxy(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btOverlappingPairCallback()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOverlappingPairCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOverlappingPairCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void gOverlappingPairs_set(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int gOverlappingPairs_get()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalShort_Edge_pos_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btAxisSweep3InternalShort_Edge_pos_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalShort_Edge_handle_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btAxisSweep3InternalShort_Edge_handle_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btAxisSweep3InternalShort_Edge_IsMax(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3InternalShort_Edge()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btAxisSweep3InternalShort_Edge(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalShort_Handle_minEdges_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle,int[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int[] btAxisSweep3InternalShort_Handle_minEdges_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalShort_Handle_maxEdges_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle,int[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int[] btAxisSweep3InternalShort_Handle_maxEdges_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalShort_Handle_dbvtProxy_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalShort_Handle_dbvtProxy_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalShort_Handle_SetNextFree(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btAxisSweep3InternalShort_Handle_GetNextFree(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3InternalShort_Handle()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btAxisSweep3InternalShort_Handle(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3InternalShort__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3InternalShort__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3InternalShort__SWIG_2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3InternalShort__SWIG_3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btAxisSweep3InternalShort(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btAxisSweep3InternalShort_getNumHandles(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btAxisSweep3InternalShort_addHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalShort_removeHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,int,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalShort_updateHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalShort_getHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalShort_rayTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalShort_rayTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalShort_rayTest__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalShort_quantize(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,java.nio.IntBuffer,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalShort_unQuantize(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btAxisSweep3InternalShort_testAabbOverlap(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalShort_getOverlappingPairCache__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalShort_setOverlappingPairUserCallback(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalShort_getOverlappingPairUserCallback(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalInt_Edge_pos_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalInt_Edge_pos_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalInt_Edge_handle_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalInt_Edge_handle_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalInt_Edge_IsMax(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3InternalInt_Edge()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btAxisSweep3InternalInt_Edge(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalInt_Handle_minEdges_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle,long[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long[] btAxisSweep3InternalInt_Handle_minEdges_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalInt_Handle_maxEdges_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle,long[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long[] btAxisSweep3InternalInt_Handle_maxEdges_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalInt_Handle_dbvtProxy_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalInt_Handle_dbvtProxy_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalInt_Handle_SetNextFree(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalInt_Handle_GetNextFree(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3InternalInt_Handle()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btAxisSweep3InternalInt_Handle(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3InternalInt__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,long,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3InternalInt__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,long,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3InternalInt__SWIG_2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3InternalInt__SWIG_3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btAxisSweep3InternalInt(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalInt_getNumHandles(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalInt_addHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalInt_removeHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,long,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalInt_updateHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,long,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalInt_getHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalInt_rayTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalInt_rayTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalInt_rayTest__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalInt_quantize(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,java.nio.LongBuffer,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalInt_unQuantize(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btAxisSweep3InternalInt_testAabbOverlap(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalInt_getOverlappingPairCache__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAxisSweep3InternalInt_setOverlappingPairUserCallback(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalInt_getOverlappingPairUserCallback(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3__SWIG_2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btAxisSweep3__SWIG_3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btAxisSweep3(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_bt32BitAxisSweep3__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_bt32BitAxisSweep3__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_bt32BitAxisSweep3__SWIG_2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_bt32BitAxisSweep3__SWIG_3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_bt32BitAxisSweep3(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDispatcherInfo()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcherInfo_timeStep_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btDispatcherInfo_timeStep_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcherInfo_stepCount_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDispatcherInfo_stepCount_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcherInfo_dispatchFunc_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDispatcherInfo_dispatchFunc_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcherInfo_timeOfImpact_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btDispatcherInfo_timeOfImpact_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcherInfo_useContinuous_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDispatcherInfo_useContinuous_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcherInfo_debugDraw_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDispatcherInfo_debugDraw_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcherInfo_enableSatConvex_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDispatcherInfo_enableSatConvex_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcherInfo_enableSPU_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDispatcherInfo_enableSPU_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcherInfo_useEpa_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDispatcherInfo_useEpa_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcherInfo_allowedCcdPenetration_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btDispatcherInfo_allowedCcdPenetration_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcherInfo_useConvexConservativeDistanceUtil_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDispatcherInfo_useConvexConservativeDistanceUtil_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcherInfo_convexConservativeDistanceThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btDispatcherInfo_convexConservativeDistanceThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDispatcherInfo(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDispatcher(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDispatcher_findAlgorithm__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDispatcher_findAlgorithm__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDispatcher_getNewManifold(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcher_releaseManifold(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcher_clearManifold(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDispatcher_needsCollision(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btDispatcher_needsResponse(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcher_dispatchAllCollisionPairs(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDispatcher_getNumManifolds(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDispatcher_getManifoldByIndexInternal(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDispatcher_getInternalManifoldPointer(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDispatcher_getInternalManifoldPool__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDispatcher_allocateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDispatcher_freeCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btOverlapCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btOverlapCallback_processOverlap(long,com.badlogic.gdx.physics.bullet.collision.btOverlapCallback,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btOverlapCallback()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOverlapCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btOverlapCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOverlapCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btOverlapCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btOverlapFilterCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btOverlapFilterCallback_needBroadphaseCollision(long,com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btOverlapFilterCallback()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOverlapFilterCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOverlapFilterCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void gRemovePairs_set(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int gRemovePairs_get()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void gAddedPairs_set(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int gAddedPairs_get()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void gFindPairs_set(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int gFindPairs_get()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int BT_NULL_PAIR_get()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btOverlappingPairCache(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btOverlappingPairCache_getOverlappingPairArray(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOverlappingPairCache_cleanOverlappingPair(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btOverlappingPairCache_getNumOverlappingPairs(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOverlappingPairCache_cleanProxyFromPairs(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOverlappingPairCache_setOverlapFilterCallback(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOverlappingPairCache_processAllOverlappingPairs(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btOverlapCallback,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btOverlappingPairCache_findPair(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btOverlappingPairCache_hasDeferredRemoval(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOverlappingPairCache_setInternalGhostPairCallback(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOverlappingPairCache_sortOverlappingPairs(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btHashedOverlappingPairCache()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btHashedOverlappingPairCache(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btHashedOverlappingPairCache_needsBroadphaseCollision(long,com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btHashedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btHashedOverlappingPairCache_getOverlappingPairArray__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btHashedOverlappingPairCache_GetCount(long,com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btHashedOverlappingPairCache_getOverlapFilterCallback(long,com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSortedOverlappingPairCache()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btSortedOverlappingPairCache(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btSortedOverlappingPairCache_needsBroadphaseCollision(long,com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSortedOverlappingPairCache_getOverlappingPairArray__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSortedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSortedOverlappingPairCache_getOverlapFilterCallback(long,com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btNullPairCache_getOverlappingPairArrayPtr__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btNullPairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btNullPairCache()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btNullPairCache(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCollisionShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionShape_getAabb(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionShape_getBoundingSphere(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionShape_getAngularMotionDisc(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionShape_getContactBreakingThreshold(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionShape_calculateTemporalAabb(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionShape_isPolyhedral(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionShape_isConvex2d(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionShape_isConvex(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionShape_isNonMoving(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionShape_isConcave(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionShape_isCompound(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionShape_isSoftBody(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionShape_isInfinite(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionShape_setLocalScaling(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btCollisionShape_getLocalScaling(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionShape_calculateLocalInertia(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,float,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btCollisionShape_getName(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionShape_getShapeType(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btCollisionShape_getAnisotropicRollingFrictionDirection(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionShape_setMargin(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionShape_getMargin(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionShape_setUserPointer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionShape_getUserPointer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionShape_calculateSerializeBufferSize(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btCollisionShape_serialize(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionShape_serializeSingleShape(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionShapeData_name_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btCollisionShapeData_name_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionShapeData_shapeType_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionShapeData_shapeType_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionShapeData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btCollisionShapeData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCollisionShapeData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCollisionShapeData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btConvexShape_localGetSupportingVertex(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btConvexShape_localGetSupportingVertexWithoutMargin(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btConvexShape_localGetSupportVertexWithoutMarginNonVirtual(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btConvexShape_localGetSupportVertexNonVirtual(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btConvexShape_getMarginNonVirtual(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexShape_getAabbNonVirtual(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexShape_project(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexShape_batchedUnitVectorGetSupportingVertexWithoutMargin(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexShape_getAabbSlow(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btConvexShape_getNumPreferredPenetrationDirections(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexShape_getPreferredPenetrationDirection(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,int,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexInternalShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btConvexInternalShape_getImplicitShapeDimensions(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexInternalShape_setImplicitShapeDimensions(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexInternalShape_setSafeMargin__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape,float,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexInternalShape_setSafeMargin__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexInternalShape_setSafeMargin__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexInternalShape_setSafeMargin__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btConvexInternalShape_getLocalScalingNV(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btConvexInternalShape_getMarginNV(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexInternalShapeData_collisionShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexInternalShapeData_collisionShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexInternalShapeData_localScaling_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexInternalShapeData_localScaling_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexInternalShapeData_implicitShapeDimensions_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexInternalShapeData_implicitShapeDimensions_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexInternalShapeData_collisionMargin_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btConvexInternalShapeData_collisionMargin_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexInternalShapeData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btConvexInternalShapeData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexInternalShapeData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexInternalShapeData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexInternalAabbCachingShape_recalcLocalAabb(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalAabbCachingShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexInternalAabbCachingShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btPolyhedralConvexShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPolyhedralConvexShape_getConvexPolyhedron(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btPolyhedralConvexShape_getNumVertices(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btPolyhedralConvexShape_getNumEdges(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPolyhedralConvexShape_getEdge(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPolyhedralConvexShape_getVertex(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape,int,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btPolyhedralConvexShape_getNumPlanes(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPolyhedralConvexShape_getPlane(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btPolyhedralConvexShape_isInside(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPolyhedralConvexAabbCachingShape_getNonvirtualAabb(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPolyhedralConvexAabbCachingShape_recalcLocalAabb(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btPolyhedralConvexAabbCachingShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConcaveShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConcaveShape_processAllTriangles(long,com.badlogic.gdx.physics.bullet.collision.btConcaveShape,long,com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btTriangleCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleCallback_processTriangle(long,com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleCallback()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btInternalTriangleIndexCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btInternalTriangleIndexCallback_internalProcessTriangleIndex(long,com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btInternalTriangleIndexCallback()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btInternalTriangleIndexCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btInternalTriangleIndexCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleInfo()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfo_flags_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btTriangleInfo_flags_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfo_edgeV0V1Angle_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfo_edgeV0V1Angle_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfo_edgeV1V2Angle_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfo_edgeV1V2Angle_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfo_edgeV2V0Angle_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfo_edgeV2V0Angle_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btTriangleInfo(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMap_convexEpsilon_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfoMap_convexEpsilon_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMap_planarEpsilon_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfoMap_planarEpsilon_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMap_equalVertexThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfoMap_equalVertexThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMap_edgeDistanceThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfoMap_edgeDistanceThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMap_maxEdgeAngleThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfoMap_maxEdgeAngleThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMap_zeroAreaThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfoMap_zeroAreaThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleInfoMap()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btTriangleInfoMap(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btTriangleInfoMap_calculateSerializeBufferSize(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btTriangleInfoMap_serialize(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMap_deSerialize(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoData_flags_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btTriangleInfoData_flags_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoData_edgeV0V1Angle_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfoData_edgeV0V1Angle_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoData_edgeV1V2Angle_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfoData_edgeV1V2Angle_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoData_edgeV2V0Angle_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfoData_edgeV2V0Angle_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleInfoData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btTriangleInfoData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMapData_hashTablePtr_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,java.nio.IntBuffer)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.nio.IntBuffer btTriangleInfoMapData_hashTablePtr_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMapData_nextPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,java.nio.IntBuffer)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.nio.IntBuffer btTriangleInfoMapData_nextPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMapData_valueArrayPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleInfoMapData_valueArrayPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMapData_keyArrayPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,java.nio.IntBuffer)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.nio.IntBuffer btTriangleInfoMapData_keyArrayPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMapData_convexEpsilon_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfoMapData_convexEpsilon_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMapData_planarEpsilon_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfoMapData_planarEpsilon_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMapData_equalVertexThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfoMapData_equalVertexThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMapData_edgeDistanceThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfoMapData_edgeDistanceThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMapData_zeroAreaThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleInfoMapData_zeroAreaThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMapData_nextSize_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btTriangleInfoMapData_nextSize_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMapData_hashTableSize_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btTriangleInfoMapData_hashTableSize_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMapData_numValues_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btTriangleInfoMapData_numValues_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMapData_numKeys_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btTriangleInfoMapData_numKeys_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleInfoMapData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btTriangleInfoMapData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleInfoMapData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btTriangleInfoMapData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btStaticPlaneShape(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btStaticPlaneShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btStaticPlaneShape_getPlaneNormal(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btStaticPlaneShape_getPlaneConstant(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStaticPlaneShapeData_collisionShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btStaticPlaneShapeData_collisionShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStaticPlaneShapeData_localScaling_set(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btStaticPlaneShapeData_localScaling_get(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStaticPlaneShapeData_planeNormal_set(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btStaticPlaneShapeData_planeNormal_get(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStaticPlaneShapeData_planeConstant_set(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btStaticPlaneShapeData_planeConstant_get(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStaticPlaneShapeData_pad_set(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btStaticPlaneShapeData_pad_get(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btStaticPlaneShapeData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btStaticPlaneShapeData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btHeightfieldTerrainShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btHeightfieldTerrainShape_setUseDiamondSubdivision__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btHeightfieldTerrainShape_setUseDiamondSubdivision__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btHeightfieldTerrainShape_setUseZigzagSubdivision__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btHeightfieldTerrainShape_setUseZigzagSubdivision__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btHeightfieldTerrainShape__SWIG_0(int,int,java.nio.FloatBuffer,float,float,float,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btHeightfieldTerrainShape__SWIG_1(int,int,java.nio.ShortBuffer,float,float,float,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btTriangleMeshShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btTriangleMeshShape_localGetSupportingVertex(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btTriangleMeshShape_localGetSupportingVertexWithoutMargin(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleMeshShape_recalcLocalAabb(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleMeshShape_getMeshInterface__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btTriangleMeshShape_getLocalAabbMin(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btTriangleMeshShape_getLocalAabbMax(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBvhTriangleMeshShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btBvhTriangleMeshShape_getOwnsBvh(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhTriangleMeshShape_performRaycast(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long,com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhTriangleMeshShape_performConvexcast(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long,com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhTriangleMeshShape_refitTree(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhTriangleMeshShape_partialRefitTree(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBvhTriangleMeshShape_getOptimizedBvh(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhTriangleMeshShape_setOptimizedBvh__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhTriangleMeshShape_setOptimizedBvh__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhTriangleMeshShape_buildOptimizedBvh(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btBvhTriangleMeshShape_usesQuantizedAabbCompression(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhTriangleMeshShape_setTriangleInfoMap(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBvhTriangleMeshShape_getTriangleInfoMap__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhTriangleMeshShape_serializeSingleBvh(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBvhTriangleMeshShape_serializeSingleTriangleInfoMap(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBvhTriangleMeshShape__SWIG_0(boolean,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBvhTriangleMeshShape__SWIG_1(boolean,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBvhTriangleMeshShape__SWIG_2(boolean,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBvhTriangleMeshShape__SWIG_3(boolean,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleMeshShapeData_collisionShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleMeshShapeData_collisionShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleMeshShapeData_meshInterface_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleMeshShapeData_meshInterface_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleMeshShapeData_quantizedFloatBvh_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData,long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleMeshShapeData_quantizedFloatBvh_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleMeshShapeData_quantizedDoubleBvh_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData,long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleMeshShapeData_quantizedDoubleBvh_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleMeshShapeData_triangleInfoMap_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData,long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleMeshShapeData_triangleInfoMap_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleMeshShapeData_collisionMargin_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleMeshShapeData_collisionMargin_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleMeshShapeData_pad3_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btTriangleMeshShapeData_pad3_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleMeshShapeData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btTriangleMeshShapeData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btBoxShape_getHalfExtentsWithMargin(long,com.badlogic.gdx.physics.bullet.collision.btBoxShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btBoxShape_getHalfExtentsWithoutMargin(long,com.badlogic.gdx.physics.bullet.collision.btBoxShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBoxShape(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBoxShape_getPlaneEquation(long,com.badlogic.gdx.physics.bullet.collision.btBoxShape,long,com.badlogic.gdx.physics.bullet.linearmath.btVector4,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBoxShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCapsuleShape__SWIG_1(float,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCapsuleShape_getUpAxis(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCapsuleShape_getRadius(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCapsuleShape_getHalfHeight(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCapsuleShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCapsuleShapeX(float,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCapsuleShapeX(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCapsuleShapeZ(float,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCapsuleShapeZ(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCapsuleShapeData_convexInternalShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData,long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCapsuleShapeData_convexInternalShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCapsuleShapeData_upAxis_set(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCapsuleShapeData_upAxis_get(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCapsuleShapeData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btCapsuleShapeData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCapsuleShapeData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCapsuleShapeData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btBox2dShape_getHalfExtentsWithMargin(long,com.badlogic.gdx.physics.bullet.collision.btBox2dShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btBox2dShape_getHalfExtentsWithoutMargin(long,com.badlogic.gdx.physics.bullet.collision.btBox2dShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBox2dShape(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btBox2dShape_getVertexCount(long,com.badlogic.gdx.physics.bullet.collision.btBox2dShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBox2dShape_getVertices(long,com.badlogic.gdx.physics.bullet.collision.btBox2dShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBox2dShape_getNormals(long,com.badlogic.gdx.physics.bullet.collision.btBox2dShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btBox2dShape_getCentroid(long,com.badlogic.gdx.physics.bullet.collision.btBox2dShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBox2dShape_getPlaneEquation(long,com.badlogic.gdx.physics.bullet.collision.btBox2dShape,long,com.badlogic.gdx.physics.bullet.linearmath.btVector4,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBox2dShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleShape_vertices1_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleShape,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleShape_vertices1_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btTriangleShape_getVertexPtr__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleShape,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleShape__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleShape__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleShape_calcNormal(long,com.badlogic.gdx.physics.bullet.collision.btTriangleShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleShape_getPlaneEquation(long,com.badlogic.gdx.physics.bullet.collision.btTriangleShape,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btTriangleShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSphereShape(float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btSphereShape_getRadius(long,com.badlogic.gdx.physics.bullet.collision.btSphereShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSphereShape_setUnscaledRadius(long,com.badlogic.gdx.physics.bullet.collision.btSphereShape,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btSphereShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btStridingMeshInterface(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterface_InternalProcessAllTriangles(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterface_calculateAabbBruteForce(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterface_getLockedVertexIndexBase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,long,long,long,long,long,long,long,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterface_getLockedVertexIndexBase__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,long,long,long,long,long,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterface_getLockedReadOnlyVertexIndexBase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,long,long,long,long,long,long,long,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterface_getLockedReadOnlyVertexIndexBase__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,long,long,long,long,long,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterface_unLockVertexBase(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterface_unLockReadOnlyVertexBase(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btStridingMeshInterface_getNumSubParts(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterface_preallocateVertices(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterface_preallocateIndices(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btStridingMeshInterface_hasPremadeAabb(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterface_setPremadeAabb(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterface_getPremadeAabb(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btStridingMeshInterface_getScaling(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterface_setScaling(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btStridingMeshInterface_calculateSerializeBufferSize(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btStridingMeshInterface_serialize(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btIntIndexData_value_set(long,com.badlogic.gdx.physics.bullet.collision.btIntIndexData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btIntIndexData_value_get(long,com.badlogic.gdx.physics.bullet.collision.btIntIndexData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btIntIndexData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btIntIndexData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btShortIntIndexData_value_set(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData,short)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: short btShortIntIndexData_value_get(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btShortIntIndexData_pad_set(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btShortIntIndexData_pad_get(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btShortIntIndexData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btShortIntIndexData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btShortIntIndexTripletData_values_set(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData,short[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: short[] btShortIntIndexTripletData_values_get(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btShortIntIndexTripletData_pad_set(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btShortIntIndexTripletData_pad_get(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btShortIntIndexTripletData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btShortIntIndexTripletData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCharIndexTripletData_values_set(long,com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData,short[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: short[] btCharIndexTripletData_values_get(long,com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCharIndexTripletData_pad_set(long,com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData,char)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: char btCharIndexTripletData_pad_get(long,com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCharIndexTripletData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCharIndexTripletData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMeshPartData_vertices3f_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMeshPartData_vertices3f_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMeshPartData_vertices3d_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMeshPartData_vertices3d_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMeshPartData_indices32_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,long,com.badlogic.gdx.physics.bullet.collision.btIntIndexData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMeshPartData_indices32_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMeshPartData_3indices16_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMeshPartData_3indices16_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMeshPartData_3indices8_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,long,com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMeshPartData_3indices8_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMeshPartData_indices16_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMeshPartData_indices16_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMeshPartData_numTriangles_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btMeshPartData_numTriangles_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMeshPartData_numVertices_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btMeshPartData_numVertices_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btMeshPartData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btMeshPartData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterfaceData_meshPartsPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData,long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btStridingMeshInterfaceData_meshPartsPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterfaceData_scaling_set(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btStridingMeshInterfaceData_scaling_get(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterfaceData_numMeshParts_set(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btStridingMeshInterfaceData_numMeshParts_get(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btStridingMeshInterfaceData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btStridingMeshInterfaceData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btStridingMeshInterfaceData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btStridingMeshInterfaceData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btMinkowskiSumShape(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMinkowskiSumShape_setTransformA(long,com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMinkowskiSumShape_setTransformB(long,com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Matrix4 btMinkowskiSumShape_getTransformA(long,com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Matrix4 btMinkowskiSumShape_GetTransformB(long,com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMinkowskiSumShape_getShapeA(long,com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMinkowskiSumShape_getShapeB(long,com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btMinkowskiSumShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btFace_indices_set(long,com.badlogic.gdx.physics.bullet.collision.btFace,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btFace_indices_get(long,com.badlogic.gdx.physics.bullet.collision.btFace)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btFace_plane_set(long,com.badlogic.gdx.physics.bullet.collision.btFace,float[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float[] btFace_plane_get(long,com.badlogic.gdx.physics.bullet.collision.btFace)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btFace()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btFace(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexPolyhedron()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexPolyhedron(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPolyhedron_vertices_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexPolyhedron_vertices_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPolyhedron_faces_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexPolyhedron_faces_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPolyhedron_uniqueEdges_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexPolyhedron_uniqueEdges_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPolyhedron_localCenter_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexPolyhedron_localCenter_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPolyhedron_extents_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexPolyhedron_extents_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPolyhedron_radius_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btConvexPolyhedron_radius_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPolyhedron_mC_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexPolyhedron_mC_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPolyhedron_mE_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexPolyhedron_mE_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPolyhedron_initialize(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btConvexPolyhedron_testContainment(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPolyhedron_project(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,long,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btOptimizedBvh()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btOptimizedBvh(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvh_build(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvh_refit(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvh_refitPartial(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btOptimizedBvh_updateBvhNodes(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,int,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btOptimizedBvh_serializeInPlace(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh,long,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btOptimizedBvh_deSerializeInPlace(long,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangle_vertex0_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangle,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangle_vertex0_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangle)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangle_vertex1_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangle,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangle_vertex1_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangle)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangle_vertex2_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangle,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangle_vertex2_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangle)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangle_partId_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangle,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btTriangle_partId_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangle)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangle_triangleIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangle,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btTriangle_triangleIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangle)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangle()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btTriangle(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btTriangleBuffer_getNumTriangles(long,com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleBuffer_getTriangle(long,com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleBuffer_clearBuffer(long,com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleBuffer()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btTriangleBuffer(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btIndexedMesh_numTriangles_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btIndexedMesh_numTriangles_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btIndexedMesh_triangleIndexBase_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,java.nio.ByteBuffer)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.nio.ByteBuffer btIndexedMesh_triangleIndexBase_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btIndexedMesh_triangleIndexStride_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btIndexedMesh_triangleIndexStride_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btIndexedMesh_numVertices_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btIndexedMesh_numVertices_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btIndexedMesh_vertexBase_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,java.nio.ByteBuffer)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.nio.ByteBuffer btIndexedMesh_vertexBase_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btIndexedMesh_vertexStride_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btIndexedMesh_vertexStride_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btIndexedMesh_indexType_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btIndexedMesh_indexType_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btIndexedMesh_vertexType_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btIndexedMesh_vertexType_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btIndexedMesh()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btIndexedMesh_setTriangleIndexBase(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,java.nio.ShortBuffer)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btIndexedMesh_setVertexBase(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,java.nio.FloatBuffer)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btIndexedMesh_setVertices(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,java.nio.FloatBuffer,int,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btIndexedMesh_setIndices(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,java.nio.ShortBuffer,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btIndexedMesh(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleIndexVertexArray()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btTriangleIndexVertexArray(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleIndexVertexArray_internalAddIndexedMesh__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray,long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleIndexVertexArray_internalAddIndexedMesh__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray,long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleIndexVertexArray_getLockedVertexIndexBase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray,long,long,long,long,long,long,long,long,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleIndexVertexArray_getLockedVertexIndexBase__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray,long,long,long,long,long,long,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleIndexVertexArray_getLockedReadOnlyVertexIndexBase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray,long,long,long,long,long,long,long,long,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleIndexVertexArray_getLockedReadOnlyVertexIndexBase__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray,long,long,long,long,long,long,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleIndexVertexArray_getIndexedMeshArray(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMaterial_friction_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterial,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btMaterial_friction_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterial)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMaterial_restitution_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterial,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btMaterial_restitution_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterial)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMaterial_pad_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterial,int[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int[] btMaterial_pad_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterial)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btMaterial__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btMaterial__SWIG_1(float,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btMaterial(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btScaledBvhTriangleMeshShape(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btScaledBvhTriangleMeshShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btScaledBvhTriangleMeshShape_getChildShape__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btScaledTriangleMeshShapeData_trimeshShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData,long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btScaledTriangleMeshShapeData_trimeshShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btScaledTriangleMeshShapeData_localScaling_set(long,com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btScaledTriangleMeshShapeData_localScaling_get(long,com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btScaledTriangleMeshShapeData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btScaledTriangleMeshShapeData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btShapeHull(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btShapeHull(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btShapeHull_buildHull(long,com.badlogic.gdx.physics.bullet.collision.btShapeHull,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btShapeHull_numTriangles(long,com.badlogic.gdx.physics.bullet.collision.btShapeHull)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btShapeHull_numVertices(long,com.badlogic.gdx.physics.bullet.collision.btShapeHull)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btShapeHull_numIndices(long,com.badlogic.gdx.physics.bullet.collision.btShapeHull)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btShapeHull_getVertexPointer(long,com.badlogic.gdx.physics.bullet.collision.btShapeHull)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.nio.LongBuffer btShapeHull_getIndexPointer(long,com.badlogic.gdx.physics.bullet.collision.btShapeHull)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexHullShape__SWIG_0(java.nio.FloatBuffer,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexHullShape__SWIG_1(java.nio.FloatBuffer,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexHullShape__SWIG_2(java.nio.FloatBuffer)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexHullShape__SWIG_3()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexHullShape_addPoint__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShape,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexHullShape_addPoint__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexHullShape_getUnscaledPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexHullShape_getPoints(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btConvexHullShape_getScaledPoint(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShape,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btConvexHullShape_getNumPoints(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexHullShape_project(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,long,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexHullShape__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.btShapeHull)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexHullShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexHullShapeData_convexInternalShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData,long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexHullShapeData_convexInternalShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexHullShapeData_unscaledPointsFloatPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexHullShapeData_unscaledPointsFloatPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexHullShapeData_unscaledPointsDoublePtr_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexHullShapeData_unscaledPointsDoublePtr_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexHullShapeData_numUnscaledPoints_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btConvexHullShapeData_numUnscaledPoints_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexHullShapeData_padding3_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btConvexHullShapeData_padding3_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexHullShapeData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexHullShapeData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMaterialProperties_numMaterials_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btMaterialProperties_numMaterials_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMaterialProperties_materialBase_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,java.nio.ByteBuffer)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.nio.ByteBuffer btMaterialProperties_materialBase_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMaterialProperties_materialStride_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btMaterialProperties_materialStride_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMaterialProperties_materialType_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btMaterialProperties_materialType_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMaterialProperties_numTriangles_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btMaterialProperties_numTriangles_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMaterialProperties_triangleMaterialsBase_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,java.nio.ByteBuffer)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.nio.ByteBuffer btMaterialProperties_triangleMaterialsBase_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMaterialProperties_triangleMaterialStride_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btMaterialProperties_triangleMaterialStride_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMaterialProperties_triangleType_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btMaterialProperties_triangleType_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btMaterialProperties()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btMaterialProperties(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleIndexVertexMaterialArray__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleIndexVertexMaterialArray__SWIG_1(int,java.nio.IntBuffer,int,int,java.nio.FloatBuffer,int,int,java.nio.ByteBuffer,int,java.nio.IntBuffer,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btTriangleIndexVertexMaterialArray(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleIndexVertexMaterialArray_addMaterialProperties__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray,long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleIndexVertexMaterialArray_addMaterialProperties__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray,long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleIndexVertexMaterialArray_getLockedMaterialBase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray,long,long,long,long,long,long,long,long,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleIndexVertexMaterialArray_getLockedMaterialBase__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray,long,long,long,long,long,long,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleIndexVertexMaterialArray_getLockedReadOnlyMaterialBase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray,long,long,long,long,long,long,long,long,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleIndexVertexMaterialArray_getLockedReadOnlyMaterialBase__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray,long,long,long,long,long,long,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btCylinderShape_getHalfExtentsWithMargin(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btCylinderShape_getHalfExtentsWithoutMargin(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCylinderShape(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCylinderShape_getUpAxis(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCylinderShape_getRadius(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCylinderShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCylinderShapeX(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCylinderShapeX(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCylinderShapeZ(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCylinderShapeZ(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCylinderShapeData_convexInternalShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData,long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCylinderShapeData_convexInternalShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCylinderShapeData_upAxis_set(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCylinderShapeData_upAxis_get(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCylinderShapeData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btCylinderShapeData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCylinderShapeData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCylinderShapeData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleMesh_weldingThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleMesh_weldingThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleMesh__SWIG_0(boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleMesh__SWIG_1(boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleMesh__SWIG_2()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btTriangleMesh_getUse32bitIndices(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btTriangleMesh_getUse4componentVertices(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleMesh_addTriangle__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleMesh_addTriangle__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btTriangleMesh_getNumTriangles(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btTriangleMesh_findOrAddVertex(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleMesh_addIndex(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btTriangleMesh(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConeShape(float,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btConeShape_getRadius(long,com.badlogic.gdx.physics.bullet.collision.btConeShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btConeShape_getHeight(long,com.badlogic.gdx.physics.bullet.collision.btConeShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConeShape_setConeUpIndex(long,com.badlogic.gdx.physics.bullet.collision.btConeShape,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btConeShape_getConeUpIndex(long,com.badlogic.gdx.physics.bullet.collision.btConeShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConeShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConeShapeX(float,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConeShapeX(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConeShapeZ(float,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConeShapeZ(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConeShapeData_convexInternalShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btConeShapeData,long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConeShapeData_convexInternalShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btConeShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConeShapeData_upIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btConeShapeData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btConeShapeData_upIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btConeShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConeShapeData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btConeShapeData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btConeShapeData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btConeShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConeShapeData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConeShapeData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexTriangleMeshShape__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexTriangleMeshShape__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexTriangleMeshShape_getMeshInterface__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexTriangleMeshShape_calculatePrincipalAxisTransform(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexTriangleMeshShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btEmptyShape()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btEmptyShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btMultimaterialTriangleMeshShape__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btMultimaterialTriangleMeshShape__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btMultimaterialTriangleMeshShape__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btMultimaterialTriangleMeshShape__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btMultimaterialTriangleMeshShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMultimaterialTriangleMeshShape_getMaterialProperties(long,com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBU_Simplex1to4__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBU_Simplex1to4__SWIG_1(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBU_Simplex1to4__SWIG_2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBU_Simplex1to4__SWIG_3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBU_Simplex1to4__SWIG_4(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBU_Simplex1to4_reset(long,com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBU_Simplex1to4_addVertex(long,com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btBU_Simplex1to4_getIndex(long,com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBU_Simplex1to4(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btUniformScalingShape(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btUniformScalingShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btUniformScalingShape_getUniformScalingFactor(long,com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btUniformScalingShape_getChildShape__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShapeChild_transform_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundShapeChild_transform_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShapeChild_childShape_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundShapeChild_childShape_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShapeChild_childShapeType_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCompoundShapeChild_childShapeType_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShapeChild_childMargin_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCompoundShapeChild_childMargin_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShapeChild_node_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundShapeChild_node_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCompoundShapeChild()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCompoundShapeChild(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCompoundShape__SWIG_0(boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCompoundShape__SWIG_1()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCompoundShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShape_internalAddChildShape(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShape_internalRemoveChildShape(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShape_internalRemoveChildShapeByIndex(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCompoundShape_getNumChildShapes(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Matrix4 btCompoundShape_getChildTransform__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShape_updateChildTransform__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape,int,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShape_updateChildTransform__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape,int,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundShape_getChildList(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShape_recalculateLocalAabb(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundShape_getDynamicAabbTree__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShape_createAabbTreeFromChildren(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShape_calculatePrincipalAxisTransform(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape,java.nio.FloatBuffer,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCompoundShape_getUpdateRevision(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShapeChildData_transform_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundShapeChildData_transform_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShapeChildData_childShape_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundShapeChildData_childShape_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShapeChildData_childShapeType_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCompoundShapeChildData_childShapeType_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShapeChildData_childMargin_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCompoundShapeChildData_childMargin_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCompoundShapeChildData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCompoundShapeChildData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShapeData_collisionShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundShapeData_collisionShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShapeData_childShapePtr_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData,long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundShapeData_childShapePtr_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShapeData_numChildShapes_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCompoundShapeData_numChildShapes_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCompoundShapeData_collisionMargin_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCompoundShapeData_collisionMargin_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCompoundShapeData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCompoundShapeData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexPointCloudShape__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexPointCloudShape__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexPointCloudShape__SWIG_2(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPointCloudShape_setPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,boolean,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPointCloudShape_setPoints__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPointCloudShape_setPoints__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexPointCloudShape_getUnscaledPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btConvexPointCloudShape_getNumPoints(long,com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btConvexPointCloudShape_getScaledPoint(long,com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexPointCloudShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvex2dShape(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvex2dShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvex2dShape_getChildShape__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionObject_mergesSimulationIslands(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btCollisionObject_getAnisotropicFriction__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setAnisotropicFriction__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setAnisotropicFriction__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionObject_hasAnisotropicFriction__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionObject_hasAnisotropicFriction__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setContactProcessingThreshold(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObject_getContactProcessingThreshold(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionObject_isStaticObject(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionObject_isKinematicObject(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionObject_isStaticOrKinematicObject(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionObject_hasContactResponse(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCollisionObject()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCollisionObject(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_internalSetCollisionShape(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObject_internalGetCollisionShape__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObject_internalGetExtensionPointer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_internalSetExtensionPointer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObject_getActivationState(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setActivationState(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setDeactivationTime(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObject_getDeactivationTime(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_forceActivationState(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_activate__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_activate__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionObject_isActive(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setRestitution(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObject_getRestitution(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setFriction(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObject_getFriction(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setRollingFriction(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObject_getRollingFriction(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObject_getInternalType(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Matrix4 btCollisionObject_getWorldTransform__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setWorldTransform(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObject_getBroadphaseHandle__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setBroadphaseHandle(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Matrix4 btCollisionObject_getInterpolationWorldTransform__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setInterpolationWorldTransform(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setInterpolationLinearVelocity(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setInterpolationAngularVelocity(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btCollisionObject_getInterpolationLinearVelocity__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btCollisionObject_getInterpolationAngularVelocity__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObject_getIslandTag(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setIslandTag(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObject_getCompanionId(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setCompanionId(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObject_getHitFraction(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setHitFraction(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObject_getCollisionFlags(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setCollisionFlags(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObject_getCcdSweptSphereRadius(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setCcdSweptSphereRadius(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObject_getCcdMotionThreshold(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObject_getCcdSquareMotionThreshold(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setCcdMotionThreshold(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObject_getUserPointer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObject_getUserIndex(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setUserPointer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_setUserIndex(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObject_getUpdateRevisionInternal(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionObject_checkCollideWith(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObject_calculateSerializeBufferSize(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btCollisionObject_serialize(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_serializeSingleObject(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_internalSetGdxBridge(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObject_internalGetGdxBridge(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_getAnisotropicFriction__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_getWorldTransform__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_getInterpolationWorldTransform__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_getInterpolationLinearVelocity__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObject_getInterpolationAngularVelocity__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_broadphaseHandle_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectDoubleData_broadphaseHandle_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_collisionShape_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectDoubleData_collisionShape_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_rootCollisionShape_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectDoubleData_rootCollisionShape_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_name_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btCollisionObjectDoubleData_name_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_worldTransform_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectDoubleData_worldTransform_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_interpolationWorldTransform_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectDoubleData_interpolationWorldTransform_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_interpolationLinearVelocity_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectDoubleData_interpolationLinearVelocity_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_interpolationAngularVelocity_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectDoubleData_interpolationAngularVelocity_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_anisotropicFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectDoubleData_anisotropicFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_contactProcessingThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: double btCollisionObjectDoubleData_contactProcessingThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_deactivationTime_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: double btCollisionObjectDoubleData_deactivationTime_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_friction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: double btCollisionObjectDoubleData_friction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_rollingFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: double btCollisionObjectDoubleData_rollingFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_restitution_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: double btCollisionObjectDoubleData_restitution_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_hitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: double btCollisionObjectDoubleData_hitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_ccdSweptSphereRadius_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: double btCollisionObjectDoubleData_ccdSweptSphereRadius_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_ccdMotionThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: double btCollisionObjectDoubleData_ccdMotionThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_hasAnisotropicFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectDoubleData_hasAnisotropicFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_collisionFlags_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectDoubleData_collisionFlags_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_islandTag1_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectDoubleData_islandTag1_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_companionId_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectDoubleData_companionId_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_activationState1_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectDoubleData_activationState1_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_internalType_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectDoubleData_internalType_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_checkCollideWith_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectDoubleData_checkCollideWith_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectDoubleData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btCollisionObjectDoubleData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCollisionObjectDoubleData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCollisionObjectDoubleData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_broadphaseHandle_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectFloatData_broadphaseHandle_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_collisionShape_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectFloatData_collisionShape_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_rootCollisionShape_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectFloatData_rootCollisionShape_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_name_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btCollisionObjectFloatData_name_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_worldTransform_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectFloatData_worldTransform_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_interpolationWorldTransform_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectFloatData_interpolationWorldTransform_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_interpolationLinearVelocity_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectFloatData_interpolationLinearVelocity_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_interpolationAngularVelocity_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectFloatData_interpolationAngularVelocity_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_anisotropicFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectFloatData_anisotropicFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_contactProcessingThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObjectFloatData_contactProcessingThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_deactivationTime_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObjectFloatData_deactivationTime_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_friction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObjectFloatData_friction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_rollingFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObjectFloatData_rollingFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_restitution_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObjectFloatData_restitution_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_hitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObjectFloatData_hitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_ccdSweptSphereRadius_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObjectFloatData_ccdSweptSphereRadius_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_ccdMotionThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btCollisionObjectFloatData_ccdMotionThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_hasAnisotropicFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectFloatData_hasAnisotropicFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_collisionFlags_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectFloatData_collisionFlags_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_islandTag1_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectFloatData_islandTag1_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_companionId_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectFloatData_companionId_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_activationState1_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectFloatData_activationState1_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_internalType_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectFloatData_internalType_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_checkCollideWith_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectFloatData_checkCollideWith_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectFloatData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btCollisionObjectFloatData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCollisionObjectFloatData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCollisionObjectFloatData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void GdxCollisionObjectBridge_userValue_set(long,com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int GdxCollisionObjectBridge_userValue_get(long,com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void GdxCollisionObjectBridge_contactCallbackFlag_set(long,com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int GdxCollisionObjectBridge_contactCallbackFlag_get(long,com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void GdxCollisionObjectBridge_contactCallbackFilter_set(long,com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int GdxCollisionObjectBridge_contactCallbackFilter_get(long,com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_GdxCollisionObjectBridge()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_GdxCollisionObjectBridge(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean gdxCheckFilter__SWIG_0(int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean gdxCheckFilter__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCollisionObjectArray__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCollisionObjectArray(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCollisionObjectArray__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectArray_size(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectArray_at__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectArray_clear(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectArray_pop_back(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectArray_resizeNoInitialize(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectArray_resize__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectArray_resize__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectArray_expandNonInitializing(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectArray_expand__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectArray_expand__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectArray_push_back(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectArray_capacity(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectArray_reserve(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCollisionObjectArray_less()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCollisionObjectArray_less(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectArray_swap(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectArray_findBinarySearch(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectArray_findLinearSearch(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectArray_remove(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectArray_initializeFromBuffer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,long,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectArray_copyFromArray(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCollisionObjectConstArray__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCollisionObjectConstArray(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCollisionObjectConstArray__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectConstArray_size(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectConstArray_at__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectConstArray_clear(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectConstArray_pop_back(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectConstArray_resizeNoInitialize(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectConstArray_resize__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectConstArray_resize__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectConstArray_expandNonInitializing(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectConstArray_expand__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectConstArray_expand__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectConstArray_push_back(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectConstArray_capacity(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectConstArray_reserve(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCollisionObjectConstArray_less()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCollisionObjectConstArray_less(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectConstArray_swap(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectConstArray_findBinarySearch(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectConstArray_findLinearSearch(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectConstArray_remove(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectConstArray_initializeFromBuffer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,long,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectConstArray_copyFromArray(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectWrapper_parent_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectWrapper_parent_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectWrapper_shape_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectWrapper_shape_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectWrapper_collisionObject_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectWrapper_collisionObject_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Matrix4 btCollisionObjectWrapper_worldTransform_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectWrapper_partId_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectWrapper_partId_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionObjectWrapper_index_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionObjectWrapper_index_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionObjectWrapper_getCollisionShape(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_CollisionObjectWrapper__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_CollisionObjectWrapper__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_CollisionObjectWrapper__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_CollisionObjectWrapper__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_CollisionObjectWrapper__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_CollisionObjectWrapper__SWIG_5(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_CollisionObjectWrapper__SWIG_6(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_CollisionObjectWrapper__SWIG_7(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_CollisionObjectWrapper__SWIG_8(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_CollisionObjectWrapper__SWIG_9(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_CollisionObjectWrapper__SWIG_10(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_CollisionObjectWrapper__SWIG_11(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long CollisionObjectWrapper_getWrapper(long,com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_CollisionObjectWrapper(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btEmptyAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btEmptyAlgorithm_CreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btEmptyAlgorithm_CreateFunc()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btEmptyAlgorithm_CreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btEmptyAlgorithm(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btActivatingCollisionAlgorithm(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexTriangleCallback_triangleCount_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btConvexTriangleCallback_triangleCount_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexTriangleCallback_manifoldPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexTriangleCallback_manifoldPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexTriangleCallback(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexTriangleCallback_setTimeStepAndCounters(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,float,long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexTriangleCallback_clearWrapperData(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexTriangleCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexTriangleCallback_processTriangle(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexTriangleCallback_processTriangleSwigExplicitbtConvexTriangleCallback(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexTriangleCallback_clearCache(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btConvexTriangleCallback_getAabbMin(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btConvexTriangleCallback_getAabbMax(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexTriangleCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexTriangleCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexConcaveCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexConcaveCollisionAlgorithm(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexConcaveCollisionAlgorithm_clearCache(long,com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexConcaveCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexConcaveCollisionAlgorithm_CreateFunc()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexConcaveCollisionAlgorithm_CreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexConcaveCollisionAlgorithm_SwappedCreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexConcaveCollisionAlgorithm_SwappedCreateFunc()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexConcaveCollisionAlgorithm_SwappedCreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexPlaneCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexPlaneCollisionAlgorithm(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPlaneCollisionAlgorithm_collideSingleContact(long,com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm,com.badlogic.gdx.math.Quaternion,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPlaneCollisionAlgorithm_CreateFunc_numPerturbationIterations_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btConvexPlaneCollisionAlgorithm_CreateFunc_numPerturbationIterations_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexPlaneCollisionAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btConvexPlaneCollisionAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexPlaneCollisionAlgorithm_CreateFunc()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexPlaneCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexPlaneCollisionAlgorithm_CreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void gCompoundCompoundChildShapePairCallback_set(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long gCompoundCompoundChildShapePairCallback_get()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCompoundCompoundCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCompoundCompoundCollisionAlgorithm(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundCompoundCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCompoundCompoundCollisionAlgorithm_CreateFunc()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCompoundCompoundCollisionAlgorithm_CreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundCompoundCollisionAlgorithm_SwappedCreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCompoundCompoundCollisionAlgorithm_SwappedCreateFunc()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCompoundCompoundCollisionAlgorithm_SwappedCreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCollisionConfiguration(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionConfiguration_getPersistentManifoldPool(long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionConfiguration_getCollisionAlgorithmPool(long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionConfiguration_getCollisionAlgorithmCreateFunc(long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDefaultCollisionConstructionInfo_persistentManifoldPool_set(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDefaultCollisionConstructionInfo_persistentManifoldPool_get(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDefaultCollisionConstructionInfo_collisionAlgorithmPool_set(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDefaultCollisionConstructionInfo_collisionAlgorithmPool_get(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDefaultCollisionConstructionInfo_defaultMaxPersistentManifoldPoolSize_set(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDefaultCollisionConstructionInfo_defaultMaxPersistentManifoldPoolSize_get(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDefaultCollisionConstructionInfo_defaultMaxCollisionAlgorithmPoolSize_set(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDefaultCollisionConstructionInfo_defaultMaxCollisionAlgorithmPoolSize_get(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDefaultCollisionConstructionInfo_customCollisionAlgorithmMaxElementSize_set(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDefaultCollisionConstructionInfo_customCollisionAlgorithmMaxElementSize_get(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDefaultCollisionConstructionInfo_useEpaPenetrationAlgorithm_set(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btDefaultCollisionConstructionInfo_useEpaPenetrationAlgorithm_get(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDefaultCollisionConstructionInfo()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDefaultCollisionConstructionInfo(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDefaultCollisionConfiguration__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btDefaultCollisionConfiguration__SWIG_1()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btDefaultCollisionConfiguration(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDefaultCollisionConfiguration_getSimplexSolver(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void gContactAddedCallback_set(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long gContactAddedCallback_get()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btManifoldResult__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btManifoldResult__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btManifoldResult(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldResult_setPersistentManifold(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btManifoldResult_getPersistentManifold__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldResult_refreshContactPoints(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btManifoldResult_getBody0Wrap(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btManifoldResult_getBody1Wrap(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldResult_setBody0Wrap(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldResult_setBody1Wrap(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btManifoldResult_getBody0Internal(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btManifoldResult_getBody1Internal(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btManifoldResult_calculateCombinedRestitution(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btManifoldResult_calculateCombinedFriction(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int BT_SIMPLE_NULL_PAIR_get()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSimplePair(int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimplePair_indexA_set(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btSimplePair_indexA_get(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimplePair_indexB_set(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btSimplePair_indexB_get(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimplePair_userPointer_set(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSimplePair_userPointer_get(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimplePair_userValue_set(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btSimplePair_userValue_get(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btSimplePair(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void gOverlappingSimplePairs_set(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int gOverlappingSimplePairs_get()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void gRemoveSimplePairs_set(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int gRemoveSimplePairs_get()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void gAddedSimplePairs_set(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int gAddedSimplePairs_get()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void gFindSimplePairs_set(int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int gFindSimplePairs_get()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btHashedSimplePairCache()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btHashedSimplePairCache(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btHashedSimplePairCache_removeAllPairs(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btHashedSimplePairCache_removeOverlappingPair(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btHashedSimplePairCache_addOverlappingPair(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btHashedSimplePairCache_getOverlappingPairArrayPtr__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btHashedSimplePairCache_getOverlappingPairArray__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btHashedSimplePairCache_findPair(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btHashedSimplePairCache_GetCount(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btHashedSimplePairCache_getNumOverlappingPairs(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSphereSphereCollisionAlgorithm__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSphereSphereCollisionAlgorithm__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btSphereSphereCollisionAlgorithm(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSphereSphereCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSphereSphereCollisionAlgorithm_CreateFunc()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btSphereSphereCollisionAlgorithm_CreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBoxBoxCollisionAlgorithm__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBoxBoxCollisionAlgorithm__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBoxBoxCollisionAlgorithm(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBoxBoxCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBoxBoxCollisionAlgorithm_CreateFunc()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBoxBoxCollisionAlgorithm_CreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionAlgorithmCreateFunc_swapped_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionAlgorithmCreateFunc_swapped_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCollisionAlgorithmCreateFunc()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCollisionAlgorithmCreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBox2dBox2dCollisionAlgorithm__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBox2dBox2dCollisionAlgorithm__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBox2dBox2dCollisionAlgorithm(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBox2dBox2dCollisionAlgorithm_CreateFunc()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBox2dBox2dCollisionAlgorithm_CreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btElement_id_set(long,com.badlogic.gdx.physics.bullet.collision.btElement,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btElement_id_get(long,com.badlogic.gdx.physics.bullet.collision.btElement)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btElement_sz_set(long,com.badlogic.gdx.physics.bullet.collision.btElement,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btElement_sz_get(long,com.badlogic.gdx.physics.bullet.collision.btElement)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btElement()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btElement(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btUnionFind()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btUnionFind(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btUnionFind_sortIslands(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btUnionFind_reset(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btUnionFind_getNumElements(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btUnionFind_isRoot(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btUnionFind_getElement__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btUnionFind_allocate(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btUnionFind_Free(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btUnionFind_find__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btUnionFind_unite(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btUnionFind_find__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSphereTriangleCollisionAlgorithm__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSphereTriangleCollisionAlgorithm__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btSphereTriangleCollisionAlgorithm(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSphereTriangleCollisionAlgorithm_CreateFunc()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btSphereTriangleCollisionAlgorithm_CreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSimulationIslandManager()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btSimulationIslandManager(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimulationIslandManager_initUnionFind(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSimulationIslandManager_getUnionFind(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimulationIslandManager_updateActivationState(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimulationIslandManager_storeIslandActivationState(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimulationIslandManager_findUnions(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btSimulationIslandManager_IslandCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimulationIslandManager_IslandCallback_processIsland(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback,long,int,long,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimulationIslandManager_buildAndProcessIslands(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimulationIslandManager_buildIslands(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btSimulationIslandManager_getSplitIslands(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSimulationIslandManager_setSplitIslands(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btGhostObject()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btGhostObject(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGhostObject_convexSweepTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGhostObject_convexSweepTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGhostObject_rayTest(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGhostObject_addOverlappingObjectInternal__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGhostObject_addOverlappingObjectInternal__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGhostObject_removeOverlappingObjectInternal__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGhostObject_removeOverlappingObjectInternal__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btGhostObject_getNumOverlappingObjects(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btGhostObject_getOverlappingObject__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btGhostObject_getOverlappingPairs__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btGhostObject_upcast__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btPairCachingGhostObject()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btPairCachingGhostObject(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPairCachingGhostObject_addOverlappingObjectInternal__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPairCachingGhostObject_addOverlappingObjectInternal__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPairCachingGhostObject_removeOverlappingObjectInternal__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPairCachingGhostObject_removeOverlappingObjectInternal__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPairCachingGhostObject_getOverlappingPairCache(long,com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btGhostPairCallback()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btGhostPairCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btGhostPairCallback_addOverlappingPair(long,com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btGhostPairCallback_addOverlappingPairSwigExplicitbtGhostPairCallback(long,com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btGhostPairCallback_removeOverlappingPair(long,com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btGhostPairCallback_removeOverlappingPairSwigExplicitbtGhostPairCallback(long,com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGhostPairCallback_removeOverlappingPairsContainingProxy(long,com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGhostPairCallback_removeOverlappingPairsContainingProxySwigExplicitbtGhostPairCallback(long,com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGhostPairCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGhostPairCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCollisionWorld(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCollisionWorld(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_setBroadphase(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionWorld_getBroadphase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionWorld_getPairCache(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionWorld_getDispatcher__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_updateSingleAabb(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_updateAabbs(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_computeOverlappingPairs(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_setDebugDrawer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionWorld_getDebugDrawer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_debugDrawWorld(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_debugDrawObject(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionWorld_getNumCollisionObjects(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_rayTest(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_convexSweepTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_convexSweepTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_contactTest(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_contactPairTest(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_rayTestSingle(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_rayTestSingleInternal(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_objectQuerySingle(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_objectQuerySingleInternal(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_addCollisionObject__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short,short)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_addCollisionObject__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_addCollisionObject__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionWorld_getCollisionObjectArray__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_removeCollisionObject(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_performDiscreteCollisionDetection(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionWorld_getDispatchInfo__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btCollisionWorld_getForceUpdateAllAabbs(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_setForceUpdateAllAabbs(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionWorld_serialize(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void LocalShapeInfo_shapePart_set(long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int LocalShapeInfo_shapePart_get(long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void LocalShapeInfo_triangleIndex_set(long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int LocalShapeInfo_triangleIndex_get(long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_LocalShapeInfo()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_LocalShapeInfo(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_LocalRayResult(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void LocalRayResult_collisionObject_set(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long LocalRayResult_collisionObject_get(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void LocalRayResult_localShapeInfo_set(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long LocalRayResult_localShapeInfo_get(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void LocalRayResult_hitNormalLocal_set(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long LocalRayResult_hitNormalLocal_get(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void LocalRayResult_hitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float LocalRayResult_hitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_LocalRayResult(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void RayResultCallback_closestHitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float RayResultCallback_closestHitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void RayResultCallback_collisionObject_set(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long RayResultCallback_collisionObject_get(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void RayResultCallback_collisionFilterGroup_set(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,short)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: short RayResultCallback_collisionFilterGroup_get(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void RayResultCallback_collisionFilterMask_set(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,short)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: short RayResultCallback_collisionFilterMask_get(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void RayResultCallback_flags_set(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long RayResultCallback_flags_get(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_RayResultCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean RayResultCallback_hasHit(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_RayResultCallback()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean RayResultCallback_needsCollision(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean RayResultCallback_needsCollisionSwigExplicitRayResultCallback(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float RayResultCallback_addSingleResult(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void RayResultCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void RayResultCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_ClosestRayResultCallback(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ClosestRayResultCallback_rayFromWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long ClosestRayResultCallback_rayFromWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ClosestRayResultCallback_rayToWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long ClosestRayResultCallback_rayToWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ClosestRayResultCallback_hitNormalWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long ClosestRayResultCallback_hitNormalWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ClosestRayResultCallback_hitPointWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long ClosestRayResultCallback_hitPointWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float ClosestRayResultCallback_addSingleResult(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float ClosestRayResultCallback_addSingleResultSwigExplicitClosestRayResultCallback(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_ClosestRayResultCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ClosestRayResultCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ClosestRayResultCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_AllHitsRayResultCallback(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void AllHitsRayResultCallback_collisionObjects_set(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long AllHitsRayResultCallback_collisionObjects_get(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void AllHitsRayResultCallback_rayFromWorld_set(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long AllHitsRayResultCallback_rayFromWorld_get(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void AllHitsRayResultCallback_rayToWorld_set(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long AllHitsRayResultCallback_rayToWorld_get(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void AllHitsRayResultCallback_hitNormalWorld_set(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long AllHitsRayResultCallback_hitNormalWorld_get(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void AllHitsRayResultCallback_hitPointWorld_set(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long AllHitsRayResultCallback_hitPointWorld_get(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void AllHitsRayResultCallback_hitFractions_set(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long AllHitsRayResultCallback_hitFractions_get(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float AllHitsRayResultCallback_addSingleResult(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float AllHitsRayResultCallback_addSingleResultSwigExplicitAllHitsRayResultCallback(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_AllHitsRayResultCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void AllHitsRayResultCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void AllHitsRayResultCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_LocalConvexResult(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void LocalConvexResult_hitCollisionObject_set(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long LocalConvexResult_hitCollisionObject_get(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void LocalConvexResult_localShapeInfo_set(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long LocalConvexResult_localShapeInfo_get(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void LocalConvexResult_hitNormalLocal_set(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long LocalConvexResult_hitNormalLocal_get(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void LocalConvexResult_hitPointLocal_set(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long LocalConvexResult_hitPointLocal_get(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void LocalConvexResult_hitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float LocalConvexResult_hitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_LocalConvexResult(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ConvexResultCallback_closestHitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float ConvexResultCallback_closestHitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ConvexResultCallback_collisionFilterGroup_set(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,short)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: short ConvexResultCallback_collisionFilterGroup_get(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ConvexResultCallback_collisionFilterMask_set(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,short)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: short ConvexResultCallback_collisionFilterMask_get(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_ConvexResultCallback()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_ConvexResultCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ConvexResultCallback_hasHit(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ConvexResultCallback_needsCollision(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ConvexResultCallback_needsCollisionSwigExplicitConvexResultCallback(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float ConvexResultCallback_addSingleResult(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ConvexResultCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ConvexResultCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_ClosestConvexResultCallback(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ClosestConvexResultCallback_convexFromWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long ClosestConvexResultCallback_convexFromWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ClosestConvexResultCallback_convexToWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long ClosestConvexResultCallback_convexToWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ClosestConvexResultCallback_hitNormalWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long ClosestConvexResultCallback_hitNormalWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ClosestConvexResultCallback_hitPointWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long ClosestConvexResultCallback_hitPointWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ClosestConvexResultCallback_hitCollisionObject_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long ClosestConvexResultCallback_hitCollisionObject_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float ClosestConvexResultCallback_addSingleResult(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float ClosestConvexResultCallback_addSingleResultSwigExplicitClosestConvexResultCallback(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_ClosestConvexResultCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ClosestConvexResultCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ClosestConvexResultCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactResultCallback_collisionFilterGroup_set(long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,short)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: short ContactResultCallback_collisionFilterGroup_get(long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactResultCallback_collisionFilterMask_set(long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,short)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: short ContactResultCallback_collisionFilterMask_get(long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_ContactResultCallback()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_ContactResultCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactResultCallback_needsCollision(long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactResultCallback_needsCollisionSwigExplicitContactResultCallback(long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float ContactResultCallback_addSingleResult(long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactResultCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactResultCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ClosestNotMeConvexResultCallback_me_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long ClosestNotMeConvexResultCallback_me_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ClosestNotMeConvexResultCallback_allowedPenetration_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float ClosestNotMeConvexResultCallback_allowedPenetration_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_ClosestNotMeConvexResultCallback(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ClosestNotMeConvexResultCallback_needsCollision(long,com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_ClosestNotMeConvexResultCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_ClosestNotMeRayResultCallback(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_ClosestNotMeRayResultCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvex2dConvex2dAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvex2dConvex2dAlgorithm(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvex2dConvex2dAlgorithm_setLowLevelOfDetail(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvex2dConvex2dAlgorithm_getManifold(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvex2dConvex2dAlgorithm_CreateFunc_pdSolver_set(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvex2dConvex2dAlgorithm_CreateFunc_pdSolver_get(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvex2dConvex2dAlgorithm_CreateFunc_simplexSolver_set(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvex2dConvex2dAlgorithm_CreateFunc_simplexSolver_get(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvex2dConvex2dAlgorithm_CreateFunc_numPerturbationIterations_set(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btConvex2dConvex2dAlgorithm_CreateFunc_numPerturbationIterations_get(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvex2dConvex2dAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btConvex2dConvex2dAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvex2dConvex2dAlgorithm_CreateFunc(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvex2dConvex2dAlgorithm_CreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBoxBoxDetector_box1_set(long,com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector,long,com.badlogic.gdx.physics.bullet.collision.btBoxShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBoxBoxDetector_box1_get(long,com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBoxBoxDetector_box2_set(long,com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector,long,com.badlogic.gdx.physics.bullet.collision.btBoxShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBoxBoxDetector_box2_get(long,com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBoxBoxDetector(long,com.badlogic.gdx.physics.bullet.collision.btBoxShape,long,com.badlogic.gdx.physics.bullet.collision.btBoxShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBoxBoxDetector(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBoxBoxDetector_getClosestPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btBoxBoxDetector_getClosestPoints__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSphereBoxCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btSphereBoxCollisionAlgorithm(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btSphereBoxCollisionAlgorithm_getSphereDistance(long,com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.math.Vector3,float,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btSphereBoxCollisionAlgorithm_getSpherePenetration(long,com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSphereBoxCollisionAlgorithm_CreateFunc()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btSphereBoxCollisionAlgorithm_CreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btCollisionDispatcher_getDispatcherFlags(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionDispatcher_setDispatcherFlags(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionDispatcher_registerCollisionCreateFunc(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,int,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionDispatcher_getManifoldByIndexInternal__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCollisionDispatcher(long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCollisionDispatcher(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionDispatcher_findAlgorithm__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionDispatcher_findAlgorithm__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionDispatcher_setNearCallback(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionDispatcher_getNearCallback(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionDispatcher_defaultNearCallback(com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionDispatcher_getCollisionConfiguration__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btCollisionDispatcher_setCollisionConfiguration(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionDispatcher_getInternalManifoldPool__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexConvexAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexConvexAlgorithm(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexConvexAlgorithm_setLowLevelOfDetail(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexConvexAlgorithm_getManifold(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexConvexAlgorithm_CreateFunc_pdSolver_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexConvexAlgorithm_CreateFunc_pdSolver_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexConvexAlgorithm_CreateFunc_simplexSolver_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexConvexAlgorithm_CreateFunc_simplexSolver_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexConvexAlgorithm_CreateFunc_numPerturbationIterations_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btConvexConvexAlgorithm_CreateFunc_numPerturbationIterations_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexConvexAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btConvexConvexAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexConvexAlgorithm_CreateFunc(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexConvexAlgorithm_CreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SphereTriangleDetector_getClosestPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SphereTriangleDetector_getClosestPoints__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_SphereTriangleDetector(long,com.badlogic.gdx.physics.bullet.collision.btSphereShape,long,com.badlogic.gdx.physics.bullet.collision.btTriangleShape,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_SphereTriangleDetector(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SphereTriangleDetector_collide(long,com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGenerateInternalEdgeInfo(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAdjustInternalEdgeContacts__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btAdjustInternalEdgeContacts__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void gCompoundChildShapePairCallback_set(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long gCompoundChildShapePairCallback_get()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCompoundCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCompoundCollisionAlgorithm(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundCollisionAlgorithm_getChildAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCompoundCollisionAlgorithm_CreateFunc()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCompoundCollisionAlgorithm_CreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btCompoundCollisionAlgorithm_SwappedCreateFunc()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btCompoundCollisionAlgorithm_SwappedCreateFunc(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexCast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexCast_CastResult_DebugDraw(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexCast_CastResult_drawCoordSystem(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexCast_CastResult_reportFailure(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConvexCast_CastResult()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexCast_CastResult(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexCast_CastResult_hitTransformA_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexCast_CastResult_hitTransformA_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexCast_CastResult_hitTransformB_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexCast_CastResult_hitTransformB_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexCast_CastResult_normal_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexCast_CastResult_normal_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexCast_CastResult_hitPoint_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexCast_CastResult_hitPoint_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexCast_CastResult_fraction_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btConvexCast_CastResult_fraction_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexCast_CastResult_debugDrawer_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexCast_CastResult_debugDrawer_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConvexCast_CastResult_allowedPenetration_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btConvexCast_CastResult_allowedPenetration_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btConvexCast_calcTimeOfImpact(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSubsimplexConvexCast(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btSubsimplexConvexCast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPolyhedralContactClipping_clipHullAgainstHull(com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,float,float,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPolyhedralContactClipping_clipFaceAgainstHull(com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,float,float,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btPolyhedralContactClipping_findSeparatingAxis(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPolyhedralContactClipping_clipFace(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btPolyhedralContactClipping()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btPolyhedralContactClipping(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void gContactBreakingThreshold_set(float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float gContactBreakingThreshold_get()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifold_companionIdA_set(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btPersistentManifold_companionIdA_get(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifold_companionIdB_set(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btPersistentManifold_companionIdB_get(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifold_index1a_set(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btPersistentManifold_index1a_get(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btPersistentManifold__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btPersistentManifold__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,float,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPersistentManifold_getBody0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPersistentManifold_getBody1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifold_setBodies(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifold_clearUserCache(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btPersistentManifold_getNumContacts(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifold_setNumContacts(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPersistentManifold_getContactPoint__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btPersistentManifold_getContactBreakingThreshold(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btPersistentManifold_getContactProcessingThreshold(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifold_setContactBreakingThreshold(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifold_setContactProcessingThreshold(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btPersistentManifold_getCacheEntry(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btPersistentManifold_addManifoldPoint__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btPersistentManifold_addManifoldPoint__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifold_removeContactPoint(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifold_replaceContactPoint(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btPersistentManifold_validContactDistance(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifold_refreshContactPoints(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifold_clearManifold(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btPersistentManifold(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btPersistentManifoldArray__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btPersistentManifoldArray(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btPersistentManifoldArray__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btPersistentManifoldArray_size(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPersistentManifoldArray_at__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifoldArray_clear(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifoldArray_pop_back(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifoldArray_resizeNoInitialize(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifoldArray_resize__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,int,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifoldArray_resize__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPersistentManifoldArray_expandNonInitializing(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPersistentManifoldArray_expand__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPersistentManifoldArray_expand__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifoldArray_push_back(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btPersistentManifoldArray_capacity(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifoldArray_reserve(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btPersistentManifoldArray_less()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btPersistentManifoldArray_less(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifoldArray_swap(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btPersistentManifoldArray_findBinarySearch(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btPersistentManifoldArray_findLinearSearch(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifoldArray_remove(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifoldArray_initializeFromBuffer(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,long,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPersistentManifoldArray_copyFromArray(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkPairDetector_lastUsedMethod_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btGjkPairDetector_lastUsedMethod_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkPairDetector_curIter_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btGjkPairDetector_curIter_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkPairDetector_degenerateSimplex_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btGjkPairDetector_degenerateSimplex_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkPairDetector_catchDegeneracies_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btGjkPairDetector_catchDegeneracies_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkPairDetector_fixContactNormalDirection_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btGjkPairDetector_fixContactNormalDirection_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btGjkPairDetector__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btGjkPairDetector__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,int,int,float,float,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btGjkPairDetector(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkPairDetector_getClosestPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkPairDetector_getClosestPoints__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkPairDetector_getClosestPointsNonVirtual(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkPairDetector_setMinkowskiA(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkPairDetector_setMinkowskiB(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkPairDetector_setCachedSeperatingAxis(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btGjkPairDetector_getCachedSeparatingAxis(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btGjkPairDetector_getCachedSeparatingDistance(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkPairDetector_setPenetrationDepthSolver(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkPairDetector_setIgnoreMargin(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConvexPenetrationDepthSolver(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btConvexPenetrationDepthSolver_calcPenDepth(long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btMinkowskiPenetrationDepthSolver()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btMinkowskiPenetrationDepthSolver(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btGjkConvexCast(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btGjkConvexCast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConstraintRow_normal_set(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow,float[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float[] btConstraintRow_normal_get(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConstraintRow_rhs_set(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btConstraintRow_rhs_get(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConstraintRow_jacDiagInv_set(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btConstraintRow_jacDiagInv_get(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConstraintRow_lowerLimit_set(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btConstraintRow_lowerLimit_get(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConstraintRow_upperLimit_set(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btConstraintRow_upperLimit_get(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btConstraintRow_accumImpulse_set(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btConstraintRow_accumImpulse_get(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btConstraintRow()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btConstraintRow(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btManifoldPoint__SWIG_0()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btManifoldPoint__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_localPointA_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btManifoldPoint_localPointA_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_localPointB_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btManifoldPoint_localPointB_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_positionWorldOnB_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btManifoldPoint_positionWorldOnB_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_positionWorldOnA_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btManifoldPoint_positionWorldOnA_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_normalWorldOnB_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btManifoldPoint_normalWorldOnB_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_distance1_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btManifoldPoint_distance1_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_combinedFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btManifoldPoint_combinedFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_combinedRollingFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btManifoldPoint_combinedRollingFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_combinedRestitution_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btManifoldPoint_combinedRestitution_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_partId0_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btManifoldPoint_partId0_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_partId1_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btManifoldPoint_partId1_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_index0_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btManifoldPoint_index0_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_index1_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btManifoldPoint_index1_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_userPersistentData_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btManifoldPoint_userPersistentData_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_lateralFrictionInitialized_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btManifoldPoint_lateralFrictionInitialized_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_appliedImpulse_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btManifoldPoint_appliedImpulse_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_appliedImpulseLateral1_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btManifoldPoint_appliedImpulseLateral1_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_appliedImpulseLateral2_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btManifoldPoint_appliedImpulseLateral2_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_contactMotion1_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btManifoldPoint_contactMotion1_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_contactMotion2_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btManifoldPoint_contactMotion2_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_contactCFM1_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btManifoldPoint_contactCFM1_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_contactCFM2_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btManifoldPoint_contactCFM2_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_lifeTime_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btManifoldPoint_lifeTime_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_lateralFrictionDir1_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btManifoldPoint_lateralFrictionDir1_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_lateralFrictionDir2_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btManifoldPoint_lateralFrictionDir2_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btManifoldPoint_getDistance(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_setDistance(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btManifoldPoint_getUserValue(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btManifoldPoint_setUserValue(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btManifoldPoint(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btContinuousConvexCollision__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btContinuousConvexCollision__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btContinuousConvexCollision(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleRaycastCallback_from_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleRaycastCallback_from_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleRaycastCallback_to_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleRaycastCallback_to_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleRaycastCallback_flags_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleRaycastCallback_flags_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleRaycastCallback_hitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleRaycastCallback_hitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleRaycastCallback__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleRaycastCallback__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleRaycastCallback_processTriangle(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleRaycastCallback_processTriangleSwigExplicitbtTriangleRaycastCallback(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleRaycastCallback_reportHit(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,com.badlogic.gdx.math.Vector3,float,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btTriangleRaycastCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleRaycastCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleRaycastCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleConvexcastCallback_convexShape_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleConvexcastCallback_convexShape_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleConvexcastCallback_convexShapeFrom_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleConvexcastCallback_convexShapeFrom_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleConvexcastCallback_convexShapeTo_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleConvexcastCallback_convexShapeTo_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleConvexcastCallback_triangleToWorld_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleConvexcastCallback_triangleToWorld_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleConvexcastCallback_hitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleConvexcastCallback_hitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleConvexcastCallback_triangleCollisionMargin_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleConvexcastCallback_triangleCollisionMargin_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleConvexcastCallback_allowedPenetration_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleConvexcastCallback_allowedPenetration_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btTriangleConvexcastCallback(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleConvexcastCallback_processTriangle(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleConvexcastCallback_processTriangleSwigExplicitbtTriangleConvexcastCallback(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btTriangleConvexcastCallback_reportHit(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btTriangleConvexcastCallback(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleConvexcastCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btTriangleConvexcastCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkEpaSolver2_sResults_status_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btGjkEpaSolver2_sResults_status_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkEpaSolver2_sResults_witnesses_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btGjkEpaSolver2_sResults_witnesses_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkEpaSolver2_sResults_normal_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btGjkEpaSolver2_sResults_normal_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btGjkEpaSolver2_sResults_distance_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btGjkEpaSolver2_sResults_distance_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btGjkEpaSolver2_sResults()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btGjkEpaSolver2_sResults(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btGjkEpaSolver2_StackSizeRequirement()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btGjkEpaSolver2_Distance(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btGjkEpaSolver2_Penetration__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btGjkEpaSolver2_Penetration__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btGjkEpaSolver2_SignedDistance__SWIG_0(com.badlogic.gdx.math.Vector3,float,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btGjkEpaSolver2_SignedDistance__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btGjkEpaSolver2()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btGjkEpaSolver2(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btGjkEpaPenetrationDepthSolver()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btGjkEpaPenetrationDepthSolver(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPointCollector_normalOnBInWorld_set(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPointCollector_normalOnBInWorld_get(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPointCollector_pointInWorld_set(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPointCollector_pointInWorld_get(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPointCollector_distance_set(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btPointCollector_distance_get(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPointCollector_hasResult_set(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btPointCollector_hasResult_get(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btPointCollector()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btPointCollector(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btUsageBitfield()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btUsageBitfield_reset(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btUsageBitfield_usedVertexA_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btUsageBitfield_usedVertexA_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btUsageBitfield_usedVertexB_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btUsageBitfield_usedVertexB_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btUsageBitfield_usedVertexC_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btUsageBitfield_usedVertexC_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btUsageBitfield_usedVertexD_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btUsageBitfield_usedVertexD_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btUsageBitfield_unused1_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btUsageBitfield_unused1_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btUsageBitfield_unused2_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btUsageBitfield_unused2_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btUsageBitfield_unused3_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btUsageBitfield_unused3_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btUsageBitfield_unused4_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btUsageBitfield_unused4_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btUsageBitfield(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSubSimplexClosestResult_closestPointOnSimplex_set(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSubSimplexClosestResult_closestPointOnSimplex_get(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSubSimplexClosestResult_usedVertices_set(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSubSimplexClosestResult_usedVertices_get(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSubSimplexClosestResult_barycentricCoords_set(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,float[])
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float[] btSubSimplexClosestResult_barycentricCoords_get(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSubSimplexClosestResult_degenerate_set(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btSubSimplexClosestResult_degenerate_get(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSubSimplexClosestResult_reset(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btSubSimplexClosestResult_isValid(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,float,float,float,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,float,float,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,float,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btSubSimplexClosestResult()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btSubSimplexClosestResult(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_numVertices_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btVoronoiSimplexSolver_numVertices_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_simplexVectorW_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btVoronoiSimplexSolver_simplexVectorW_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_simplexPointsP_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btVoronoiSimplexSolver_simplexPointsP_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_simplexPointsQ_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btVoronoiSimplexSolver_simplexPointsQ_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_cachedP1_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btVoronoiSimplexSolver_cachedP1_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_cachedP2_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btVoronoiSimplexSolver_cachedP2_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_cachedV_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btVoronoiSimplexSolver_cachedV_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_lastW_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btVoronoiSimplexSolver_lastW_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_equalVertexThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btVoronoiSimplexSolver_equalVertexThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_cachedValidClosest_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btVoronoiSimplexSolver_cachedValidClosest_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_cachedBC_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btVoronoiSimplexSolver_cachedBC_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_needsUpdate_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btVoronoiSimplexSolver_needsUpdate_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_removeVertex(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_reduceVertices(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btVoronoiSimplexSolver_updateClosestVectorAndPoints(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btVoronoiSimplexSolver_closestPtPointTetrahedron(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btVoronoiSimplexSolver_pointOutsideOfPlane(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btVoronoiSimplexSolver_closestPtPointTriangle(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btVoronoiSimplexSolver()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_reset(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_addVertex(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btVoronoiSimplexSolver_closest(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btVoronoiSimplexSolver_maxVertex(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btVoronoiSimplexSolver_fullSimplex(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btVoronoiSimplexSolver_getSimplex(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btVoronoiSimplexSolver_inSimplex(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_backup_closest(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean btVoronoiSimplexSolver_emptySimplex(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btVoronoiSimplexSolver_compute_points(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btVoronoiSimplexSolver(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btMultiSphereShape(com.badlogic.gdx.math.Vector3[],float[],int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btMultiSphereShape_getSphereCount(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.math.Vector3 btMultiSphereShape_getSpherePosition(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btMultiSphereShape_getSphereRadius(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btMultiSphereShape(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPositionAndRadius_pos_set(long,com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPositionAndRadius_pos_get(long,com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btPositionAndRadius_radius_set(long,com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float btPositionAndRadius_radius_get(long,com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btPositionAndRadius()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btPositionAndRadius(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMultiSphereShapeData_convexInternalShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData,long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMultiSphereShapeData_convexInternalShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMultiSphereShapeData_localPositionArrayPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData,long,com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMultiSphereShapeData_localPositionArrayPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMultiSphereShapeData_localPositionArraySize_set(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btMultiSphereShapeData_localPositionArraySize_get(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void btMultiSphereShapeData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData,java.lang.String)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: java.lang.String btMultiSphereShapeData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btMultiSphereShapeData()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btMultiSphereShapeData(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_CustomCollisionDispatcher(long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean CustomCollisionDispatcher_needsCollision(long,com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean CustomCollisionDispatcher_needsCollisionSwigExplicitCustomCollisionDispatcher(long,com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean CustomCollisionDispatcher_needsResponse(long,com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean CustomCollisionDispatcher_needsResponseSwigExplicitCustomCollisionDispatcher(long,com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_CustomCollisionDispatcher(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void CustomCollisionDispatcher_director_connect(com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void CustomCollisionDispatcher_change_ownership(com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_ContactListener(boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_ContactListener(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_enable(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_disable(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_enableOnAdded(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_disableOnAdded(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_isOnAddedEnabled(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_onContactAdded__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_onContactAdded__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_onContactAdded__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int,int,int,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_onContactAdded__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_onContactAdded__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_onContactAdded__SWIG_5(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int,int,boolean,int,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_onContactAdded__SWIG_6(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_onContactAdded__SWIG_7(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_onContactAdded__SWIG_8(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int,int,int,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_onContactAdded__SWIG_9(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_onContactAdded__SWIG_10(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_onContactAdded__SWIG_11(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int,int,boolean,int,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_enableOnProcessed(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_disableOnProcessed(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_isOnProcessedEnabled(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactProcessed__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactProcessed__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactProcessed__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactProcessed__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,boolean,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactProcessed__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactProcessed__SWIG_5(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactProcessed__SWIG_6(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactProcessed__SWIG_7(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,boolean,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_enableOnDestroyed(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_disableOnDestroyed(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_isOnDestroyedEnabled(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactDestroyed(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_enableOnStarted(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_disableOnStarted(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_isOnStartedEnabled(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactStarted__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactStarted__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactStarted__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactStarted__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactStarted__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactStarted__SWIG_5(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,boolean,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_enableOnEnded(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_disableOnEnded(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_isOnEndedEnabled(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactEnded__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactEnded__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactEnded__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactEnded__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactEnded__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_onContactEnded__SWIG_5(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,boolean,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactListener_setEvents(long,com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_director_connect(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactListener_change_ownership(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactCache_cacheTime_set(long,com.badlogic.gdx.physics.bullet.collision.ContactCache,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float ContactCache_cacheTime_get(long,com.badlogic.gdx.physics.bullet.collision.ContactCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_ContactCache(boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_ContactCache(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactCache_enable(long,com.badlogic.gdx.physics.bullet.collision.ContactCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactCache_disable(long,com.badlogic.gdx.physics.bullet.collision.ContactCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean ContactCache_isEnabled(long,com.badlogic.gdx.physics.bullet.collision.ContactCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactCache_onContactStarted(long,com.badlogic.gdx.physics.bullet.collision.ContactCache,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactCache_onContactEnded(long,com.badlogic.gdx.physics.bullet.collision.ContactCache,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactCache_clear(long,com.badlogic.gdx.physics.bullet.collision.ContactCache)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactCache_update(long,com.badlogic.gdx.physics.bullet.collision.ContactCache,float)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactCache_director_connect(com.badlogic.gdx.physics.bullet.collision.ContactCache,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void ContactCache_change_ownership(com.badlogic.gdx.physics.bullet.collision.ContactCache,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btBroadphasePairArray_size(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: com.badlogic.gdx.physics.bullet.collision.btBroadphasePair btBroadphasePairArray_at(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btBroadphasePairArray_getCollisionObjects(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray,int[],int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: int btBroadphasePairArray_getCollisionObjectsValue(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray,int[],int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long new_btBroadphasePairArray()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void delete_btBroadphasePairArray(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btStorageResult_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBroadphaseRayCallback_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtProxy_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDbvtBroadphase_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSimpleBroadphaseProxy_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSimpleBroadphase_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMultiSapBroadphase_btMultiSapProxy_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMultiSapBroadphase_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalShort_Handle_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalShort_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalInt_Handle_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3InternalInt_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btAxisSweep3_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long bt32BitAxisSweep3_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btOverlappingPairCache_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btHashedOverlappingPairCache_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSortedOverlappingPairCache_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btNullPairCache_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexInternalShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexInternalAabbCachingShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPolyhedralConvexShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPolyhedralConvexAabbCachingShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConcaveShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btStaticPlaneShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btHeightfieldTerrainShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleMeshShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBvhTriangleMeshShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBoxShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCapsuleShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCapsuleShapeX_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCapsuleShapeZ_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBox2dShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSphereShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMinkowskiSumShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btOptimizedBvh_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleBuffer_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleIndexVertexArray_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btScaledBvhTriangleMeshShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexHullShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleIndexVertexMaterialArray_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCylinderShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCylinderShapeX_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCylinderShapeZ_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleMesh_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConeShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConeShapeX_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConeShapeZ_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexTriangleMeshShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btEmptyShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMultimaterialTriangleMeshShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBU_Simplex1to4_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btUniformScalingShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexPointCloudShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvex2dShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btEmptyAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btActivatingCollisionAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexTriangleCallback_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexConcaveCollisionAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexPlaneCollisionAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundCompoundCollisionAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btDefaultCollisionConfiguration_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btManifoldResult_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSphereSphereCollisionAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBoxBoxCollisionAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBox2dBox2dCollisionAlgorithm_CreateFunc_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBox2dBox2dCollisionAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSphereTriangleCollisionAlgorithm_CreateFunc_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSphereTriangleCollisionAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btGhostObject_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPairCachingGhostObject_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btGhostPairCallback_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long ClosestRayResultCallback_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long AllHitsRayResultCallback_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long ClosestConvexResultCallback_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long ClosestNotMeConvexResultCallback_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long ClosestNotMeRayResultCallback_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvex2dConvex2dAlgorithm_CreateFunc_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvex2dConvex2dAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btBoxBoxDetector_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSphereBoxCollisionAlgorithm_CreateFunc_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSphereBoxCollisionAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCollisionDispatcher_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexConvexAlgorithm_CreateFunc_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btConvexConvexAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long SphereTriangleDetector_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundCollisionAlgorithm_CreateFunc_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundCollisionAlgorithm_SwappedCreateFunc_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btCompoundCollisionAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btSubsimplexConvexCast_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPersistentManifold_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btGjkPairDetector_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMinkowskiPenetrationDepthSolver_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btGjkConvexCast_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btContinuousConvexCollision_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleRaycastCallback_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btTriangleConvexcastCallback_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btGjkEpaPenetrationDepthSolver_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btPointCollector_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long btMultiSphereShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long CustomCollisionDispatcher_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_btBroadphaseAabbCallback_process(com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_btBroadphaseRayCallback_process(com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_btNodeOverlapCallback_processNode(com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long SwigDirector_btOverlappingPairCallback_addOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long SwigDirector_btOverlappingPairCallback_removeOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_btOverlappingPairCallback_removeOverlappingPairsContainingProxy(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_btOverlapCallback_processOverlap(com.badlogic.gdx.physics.bullet.collision.btOverlapCallback,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_btOverlapFilterCallback_needBroadphaseCollision(com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_btTriangleCallback_processTriangle(com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,long,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_btInternalTriangleIndexCallback_internalProcessTriangleIndex(com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback,long,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_btConvexTriangleCallback_processTriangle(com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,long,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long SwigDirector_btGhostPairCallback_addOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: long SwigDirector_btGhostPairCallback_removeOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_btGhostPairCallback_removeOverlappingPairsContainingProxy(com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_RayResultCallback_needsCollision(com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float SwigDirector_RayResultCallback_addSingleResult(com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ClosestRayResultCallback_needsCollision(com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float SwigDirector_ClosestRayResultCallback_addSingleResult(com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_AllHitsRayResultCallback_needsCollision(com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float SwigDirector_AllHitsRayResultCallback_addSingleResult(com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ConvexResultCallback_needsCollision(com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float SwigDirector_ConvexResultCallback_addSingleResult(com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ClosestConvexResultCallback_needsCollision(com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float SwigDirector_ClosestConvexResultCallback_addSingleResult(com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ContactResultCallback_needsCollision(com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float SwigDirector_ContactResultCallback_addSingleResult(com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,long,long,int,int,long,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_btTriangleRaycastCallback_processTriangle(com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float SwigDirector_btTriangleRaycastCallback_reportHit(com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,com.badlogic.gdx.math.Vector3,float,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_btTriangleConvexcastCallback_processTriangle(com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: float SwigDirector_btTriangleConvexcastCallback_reportHit(com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_CustomCollisionDispatcher_needsCollision(com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_CustomCollisionDispatcher_needsResponse(com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ContactListener_onContactAdded__SWIG_0(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ContactListener_onContactAdded__SWIG_1(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,int,int,long,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ContactListener_onContactAdded__SWIG_2(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int,int,int,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ContactListener_onContactAdded__SWIG_3(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ContactListener_onContactAdded__SWIG_4(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,int,int,boolean,long,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ContactListener_onContactAdded__SWIG_5(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int,int,boolean,int,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ContactListener_onContactAdded__SWIG_6(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ContactListener_onContactAdded__SWIG_7(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,int,int,long,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ContactListener_onContactAdded__SWIG_8(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int,int,int,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ContactListener_onContactAdded__SWIG_9(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ContactListener_onContactAdded__SWIG_10(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,int,int,boolean,long,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: boolean SwigDirector_ContactListener_onContactAdded__SWIG_11(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int,int,boolean,int,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactProcessed__SWIG_0(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactProcessed__SWIG_1(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactProcessed__SWIG_2(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,boolean,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactProcessed__SWIG_3(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,boolean,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactProcessed__SWIG_4(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactProcessed__SWIG_5(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactProcessed__SWIG_6(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,boolean,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactProcessed__SWIG_7(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,boolean,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactDestroyed(com.badlogic.gdx.physics.bullet.collision.ContactListener,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactStarted__SWIG_0(com.badlogic.gdx.physics.bullet.collision.ContactListener,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactStarted__SWIG_1(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactStarted__SWIG_2(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactStarted__SWIG_3(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactStarted__SWIG_4(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,boolean,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactStarted__SWIG_5(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,boolean,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactEnded__SWIG_0(com.badlogic.gdx.physics.bullet.collision.ContactListener,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactEnded__SWIG_1(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,long)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactEnded__SWIG_2(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactEnded__SWIG_3(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactEnded__SWIG_4(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,boolean,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactListener_onContactEnded__SWIG_5(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,boolean,int,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactCache_onContactStarted(com.badlogic.gdx.physics.bullet.collision.ContactCache,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void SwigDirector_ContactCache_onContactEnded(com.badlogic.gdx.physics.bullet.collision.ContactCache,long,boolean,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void swig_module_init()
com.badlogic.gdx.physics.bullet.collision.CollisionJNI: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper wrapper
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: CollisionObjectWrapper(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: CollisionObjectWrapper(long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: long getCPtr(com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: void finalize()
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: void delete()
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: void construct()
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: void dispose()
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: CollisionObjectWrapper(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: CollisionObjectWrapper(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4,int)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: CollisionObjectWrapper(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: CollisionObjectWrapper(com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: CollisionObjectWrapper(com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4,int)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: CollisionObjectWrapper(com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: CollisionObjectWrapper(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: CollisionObjectWrapper(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: CollisionObjectWrapper(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: CollisionObjectWrapper(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: CollisionObjectWrapper(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: CollisionObjectWrapper(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper getWrapper()
com.badlogic.gdx.physics.bullet.collision.ContactCache
com.badlogic.gdx.physics.bullet.collision.ContactCache: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.ContactCache: ContactCache(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactCache: ContactCache(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactCache: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactCache: long getCPtr(com.badlogic.gdx.physics.bullet.collision.ContactCache)
com.badlogic.gdx.physics.bullet.collision.ContactCache: void finalize()
com.badlogic.gdx.physics.bullet.collision.ContactCache: void delete()
com.badlogic.gdx.physics.bullet.collision.ContactCache: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.ContactCache: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.ContactCache: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.ContactCache: ContactCache()
com.badlogic.gdx.physics.bullet.collision.ContactCache: void setCacheTime(float)
com.badlogic.gdx.physics.bullet.collision.ContactCache: float getCacheTime()
com.badlogic.gdx.physics.bullet.collision.ContactCache: ContactCache(boolean)
com.badlogic.gdx.physics.bullet.collision.ContactCache: void enable()
com.badlogic.gdx.physics.bullet.collision.ContactCache: void disable()
com.badlogic.gdx.physics.bullet.collision.ContactCache: boolean isEnabled()
com.badlogic.gdx.physics.bullet.collision.ContactCache: void onContactStarted(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactCache: void onContactEnded(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactCache: void clear()
com.badlogic.gdx.physics.bullet.collision.ContactCache: void update(float)
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int TYPE_MASK
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int BY_MASK
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int FILTERED
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int INCLUDE_POINT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int BY_WRAPPER
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int BY_MANIFOLD
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int BY_OBJECT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int BY_VALUE
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int SHIFT_ON_ADDED
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int SHIFT_ON_PROCESSED
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int SHIFT_ON_DESTROYED
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int SHIFT_ON_STARTED
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int SHIFT_ON_ENDED
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ADDED_UNFILTERED_WRAPPER
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ADDED_UNFILTERED_OBJECT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ADDED_UNFILTERED_VALUE
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ADDED_UNFILTERED_WRAPPER_INCLUDEPOINT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ADDED_UNFILTERED_OBJECT_INCLUDEPOINT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ADDED_UNFILTERED_VALUE_INCLUDEPOINT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ADDED_FILTERED_WRAPPER
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ADDED_FILTERED_OBJECT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ADDED_FILTERED_VALUE
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ADDED_FILTERED_WRAPPER_INCLUDEPOINT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ADDED_FILTERED_OBJECT_INCLUDEPOINT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ADDED_FILTERED_VALUE_INCLUDEPOINT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_PROCESSED_UNFILTERED_OBJECT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_PROCESSED_UNFILTERED_VALUE
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_PROCESSED_UNFILTERED_OBJECT_INCLUDEPOINT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_PROCESSED_UNFILTERED_VALUE_INCLUDEPOINT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_PROCESSED_FILTERED_OBJECT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_PROCESSED_FILTERED_VALUE
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_PROCESSED_FILTERED_OBJECT_INCLUDEPOINT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_PROCESSED_FILTERED_VALUE_INCLUDEPOINT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_DESTROYED
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_STARTED_UNFILTERED_MANIFOLD
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_STARTED_UNFILTERED_OBJECT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_STARTED_UNFILTERED_VALUE
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_STARTED_FILTERED_MANIFOLD
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_STARTED_FILTERED_OBJECT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_STARTED_FILTERED_VALUE
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ENDED_UNFILTERED_MANIFOLD
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ENDED_UNFILTERED_OBJECT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ENDED_UNFILTERED_VALUE
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ENDED_FILTERED_MANIFOLD
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ENDED_FILTERED_OBJECT
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: int ON_ENDED_FILTERED_VALUE
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent: ContactCallbackEvent()
com.badlogic.gdx.physics.bullet.collision.ContactListener
com.badlogic.gdx.physics.bullet.collision.ContactListener: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.ContactListener: ContactListener(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: ContactListener(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: long getCPtr(com.badlogic.gdx.physics.bullet.collision.ContactListener)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void finalize()
com.badlogic.gdx.physics.bullet.collision.ContactListener: void delete()
com.badlogic.gdx.physics.bullet.collision.ContactListener: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.ContactListener: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.ContactListener: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.ContactListener: ContactListener()
com.badlogic.gdx.physics.bullet.collision.ContactListener: ContactListener(boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void enable()
com.badlogic.gdx.physics.bullet.collision.ContactListener: void disable()
com.badlogic.gdx.physics.bullet.collision.ContactListener: void enableOnAdded()
com.badlogic.gdx.physics.bullet.collision.ContactListener: void disableOnAdded()
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean isOnAddedEnabled()
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int)
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int)
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int,int,int,int,int)
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int,int,boolean,int,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int)
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int)
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean onContactAdded(int,int,int,int,int,int)
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean onContactAdded(int,int,int,boolean,int,int,int,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void enableOnProcessed()
com.badlogic.gdx.physics.bullet.collision.ContactListener: void disableOnProcessed()
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean isOnProcessedEnabled()
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactProcessed(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactProcessed(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactProcessed(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactProcessed(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,boolean,int,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactProcessed(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactProcessed(int,int)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactProcessed(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactProcessed(int,boolean,int,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void enableOnDestroyed()
com.badlogic.gdx.physics.bullet.collision.ContactListener: void disableOnDestroyed()
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean isOnDestroyedEnabled()
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactDestroyed(int)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void enableOnStarted()
com.badlogic.gdx.physics.bullet.collision.ContactListener: void disableOnStarted()
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean isOnStartedEnabled()
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactStarted(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactStarted(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactStarted(int,int)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactStarted(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactStarted(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactStarted(int,boolean,int,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void enableOnEnded()
com.badlogic.gdx.physics.bullet.collision.ContactListener: void disableOnEnded()
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean isOnEndedEnabled()
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactEnded(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactEnded(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactEnded(int,int)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactEnded(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactEnded(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: void onContactEnded(int,boolean,int,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactListener: boolean setEvents()
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: ContactResultCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: ContactResultCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.ContactResultCallback)
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: void setCollisionFilterGroup(short)
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: short getCollisionFilterGroup()
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: void setCollisionFilterMask(short)
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: short getCollisionFilterMask()
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: ContactResultCallback()
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: boolean needsCollision(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback: float addSingleResult(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int)
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: ConvexResultCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: ConvexResultCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: void setClosestHitFraction(float)
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: float getClosestHitFraction()
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: void setCollisionFilterGroup(short)
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: short getCollisionFilterGroup()
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: void setCollisionFilterMask(short)
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: short getCollisionFilterMask()
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: ConvexResultCallback()
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: boolean hasHit()
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: boolean needsCollision(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback: float addSingleResult(com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,boolean)
com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher
com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher: CustomCollisionDispatcher(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher: CustomCollisionDispatcher(long,boolean)
com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher: long getCPtr(com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher)
com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher: void finalize()
com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher: void delete()
com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher: CustomCollisionDispatcher(com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher: boolean needsCollision(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher: boolean needsResponse(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge: GdxCollisionObjectBridge(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge: GdxCollisionObjectBridge(long,boolean)
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge: long getCPtr(com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge)
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge: void finalize()
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge: void delete()
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge: void setUserValue(int)
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge: int getUserValue()
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge: void setContactCallbackFlag(int)
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge: int getContactCallbackFlag()
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge: void setContactCallbackFilter(int)
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge: int getContactCallbackFilter()
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge: GdxCollisionObjectBridge()
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: LocalConvexResult(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: LocalConvexResult(long,boolean)
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: long getCPtr(com.badlogic.gdx.physics.bullet.collision.LocalConvexResult)
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: void finalize()
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: void delete()
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: LocalConvexResult(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: void setHitCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getHitCollisionObject()
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: void setLocalShapeInfo(com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo)
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo getLocalShapeInfo()
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: void setHitNormalLocal(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitNormalLocal()
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: void setHitPointLocal(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitPointLocal()
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: void setHitFraction(float)
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult: float getHitFraction()
com.badlogic.gdx.physics.bullet.collision.LocalRayResult
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: LocalRayResult(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: LocalRayResult(long,boolean)
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: long getCPtr(com.badlogic.gdx.physics.bullet.collision.LocalRayResult)
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: void finalize()
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: void delete()
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: LocalRayResult(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: void setCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getCollisionObject()
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: void setLocalShapeInfo(com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo)
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo getLocalShapeInfo()
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: void setHitNormalLocal(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitNormalLocal()
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: void setHitFraction(float)
com.badlogic.gdx.physics.bullet.collision.LocalRayResult: float getHitFraction()
com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo
com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo: LocalShapeInfo(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo: LocalShapeInfo(long,boolean)
com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo: long getCPtr(com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo)
com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo: void finalize()
com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo: void delete()
com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo: void setShapePart(int)
com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo: int getShapePart()
com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo: void setTriangleIndex(int)
com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo: int getTriangleIndex()
com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo: LocalShapeInfo()
com.badlogic.gdx.physics.bullet.collision.PHY_ScalarType
com.badlogic.gdx.physics.bullet.collision.PHY_ScalarType: int PHY_FLOAT
com.badlogic.gdx.physics.bullet.collision.PHY_ScalarType: int PHY_DOUBLE
com.badlogic.gdx.physics.bullet.collision.PHY_ScalarType: int PHY_INTEGER
com.badlogic.gdx.physics.bullet.collision.PHY_ScalarType: int PHY_SHORT
com.badlogic.gdx.physics.bullet.collision.PHY_ScalarType: int PHY_FIXEDPOINT88
com.badlogic.gdx.physics.bullet.collision.PHY_ScalarType: int PHY_UCHAR
com.badlogic.gdx.physics.bullet.collision.PHY_ScalarType: PHY_ScalarType()
com.badlogic.gdx.physics.bullet.collision.RayResultCallback
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: RayResultCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: RayResultCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: void setClosestHitFraction(float)
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: float getClosestHitFraction()
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: void setCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getCollisionObject()
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: void setCollisionFilterGroup(short)
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: short getCollisionFilterGroup()
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: void setCollisionFilterMask(short)
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: short getCollisionFilterMask()
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: void setFlags(long)
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: long getFlags()
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: boolean hasHit()
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: RayResultCallback()
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: boolean needsCollision(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.RayResultCallback: float addSingleResult(com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType: SWIGTYPE_p_PHY_ScalarType(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType: SWIGTYPE_p_PHY_ScalarType()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t: SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t: SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t: SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t: SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t: SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t: SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btFace_t
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btFace_t: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btFace_t: SWIGTYPE_p_btAlignedObjectArrayT_btFace_t(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btFace_t: SWIGTYPE_p_btAlignedObjectArrayT_btFace_t()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btFace_t: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btFace_t)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t: SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t: SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t: SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t: SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t: SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t: SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_int_t
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_int_t: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_int_t: SWIGTYPE_p_btAlignedObjectArrayT_int_t(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_int_t: SWIGTYPE_p_btAlignedObjectArrayT_int_t()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_int_t: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_int_t)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer: SWIGTYPE_p_btSerializer(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer: SWIGTYPE_p_btSerializer()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool: SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool: SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void: SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void: SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool: SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool: SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float: SWIGTYPE_p_float(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float: SWIGTYPE_p_float()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int: SWIGTYPE_p_int(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int: SWIGTYPE_p_int()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject: SWIGTYPE_p_p_btCollisionObject(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject: SWIGTYPE_p_p_btCollisionObject()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtNode
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtNode: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtNode: SWIGTYPE_p_p_btDbvtNode(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtNode: SWIGTYPE_p_p_btDbvtNode()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtNode: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy: SWIGTYPE_p_p_btDbvtProxy(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy: SWIGTYPE_p_p_btDbvtProxy()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold: SWIGTYPE_p_p_btPersistentManifold(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold: SWIGTYPE_p_p_btPersistentManifold()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btVector3
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btVector3: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btVector3: SWIGTYPE_p_p_btVector3(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btVector3: SWIGTYPE_p_p_btVector3()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btVector3: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btVector3)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char: SWIGTYPE_p_p_unsigned_char(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char: SWIGTYPE_p_p_unsigned_char()
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char)
com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector
com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector: SphereTriangleDetector(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector: SphereTriangleDetector(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector: long getCPtr(com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector)
com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector: void finalize()
com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector: void delete()
com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector: void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean)
com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector: void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector: SphereTriangleDetector(com.badlogic.gdx.physics.bullet.collision.btSphereShape,com.badlogic.gdx.physics.bullet.collision.btTriangleShape,float)
com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector: boolean collide(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,float)
com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3
com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3: bt32BitAxisSweep3(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3: bt32BitAxisSweep3(long,boolean)
com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3: long getCPtr(com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3)
com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3: void finalize()
com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3: void delete()
com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3: bt32BitAxisSweep3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,boolean)
com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3: bt32BitAxisSweep3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3: bt32BitAxisSweep3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long)
com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3: bt32BitAxisSweep3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btActivatingCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btActivatingCollisionAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btActivatingCollisionAlgorithm: btActivatingCollisionAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btActivatingCollisionAlgorithm: btActivatingCollisionAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btActivatingCollisionAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btActivatingCollisionAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btActivatingCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.collision.btActivatingCollisionAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.collision.btActivatingCollisionAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3: btAxisSweep3(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3: btAxisSweep3(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btAxisSweep3)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3: void finalize()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3: void delete()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3: btAxisSweep3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3: btAxisSweep3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3: btAxisSweep3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3: btAxisSweep3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: btAxisSweep3InternalInt(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: btAxisSweep3InternalInt(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: void finalize()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: void delete()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: btAxisSweep3InternalInt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: btAxisSweep3InternalInt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: btAxisSweep3InternalInt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,long)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: btAxisSweep3InternalInt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: long getNumHandles()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: long addHandle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: void removeHandle(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: void updateHandle(long,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle getHandle(long)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: void quantize(java.nio.LongBuffer,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: void unQuantize(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: boolean testAabbOverlap(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getOverlappingPairCache()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: void setOverlappingPairUserCallback(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback getOverlappingPairUserCallback()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge: btAxisSweep3InternalInt$Edge(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge: btAxisSweep3InternalInt$Edge(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge: void finalize()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge: void delete()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge: void setPos(long)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge: long getPos()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge: void setHandle(long)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge: long getHandle()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge: long IsMax()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge: btAxisSweep3InternalInt$Edge()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: btAxisSweep3InternalInt$Handle(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: btAxisSweep3InternalInt$Handle(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: void finalize()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: void delete()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: void setMinEdges(long[])
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: long[] getMinEdges()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: void setMaxEdges(long[])
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: long[] getMaxEdges()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: void setDbvtProxy(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy getDbvtProxy()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: void SetNextFree(long)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: long GetNextFree()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle: btAxisSweep3InternalInt$Handle()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: btAxisSweep3InternalShort(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: btAxisSweep3InternalShort(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: void finalize()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: void delete()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: btAxisSweep3InternalShort(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: btAxisSweep3InternalShort(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: btAxisSweep3InternalShort(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: btAxisSweep3InternalShort(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: int getNumHandles()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: int addHandle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: void removeHandle(int,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: void updateHandle(int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle getHandle(int)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: void quantize(java.nio.IntBuffer,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: void unQuantize(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: boolean testAabbOverlap(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getOverlappingPairCache()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: void setOverlappingPairUserCallback(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback getOverlappingPairUserCallback()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge: btAxisSweep3InternalShort$Edge(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge: btAxisSweep3InternalShort$Edge(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge: void finalize()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge: void delete()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge: void setPos(int)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge: int getPos()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge: void setHandle(int)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge: int getHandle()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge: int IsMax()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge: btAxisSweep3InternalShort$Edge()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: btAxisSweep3InternalShort$Handle(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: btAxisSweep3InternalShort$Handle(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: void finalize()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: void delete()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: void setMinEdges(int[])
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: int[] getMinEdges()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: void setMaxEdges(int[])
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: int[] getMaxEdges()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: void setDbvtProxy(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy getDbvtProxy()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: void SetNextFree(int)
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: int GetNextFree()
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle: btAxisSweep3InternalShort$Handle()
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4: btBU_Simplex1to4(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4: btBU_Simplex1to4(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4)
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4: void delete()
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4: btBU_Simplex1to4()
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4: btBU_Simplex1to4(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4: btBU_Simplex1to4(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4: btBU_Simplex1to4(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4: btBU_Simplex1to4(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4: void reset()
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4: void addVertex(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4: int getIndex(int)
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm: btBox2dBox2dCollisionAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm: btBox2dBox2dCollisionAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm: btBox2dBox2dCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm: btBox2dBox2dCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm$CreateFunc
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm$CreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm$CreateFunc: btBox2dBox2dCollisionAlgorithm$CreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm$CreateFunc: btBox2dBox2dCollisionAlgorithm$CreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm$CreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm$CreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm$CreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm$CreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm$CreateFunc: btBox2dBox2dCollisionAlgorithm$CreateFunc()
com.badlogic.gdx.physics.bullet.collision.btBox2dShape
com.badlogic.gdx.physics.bullet.collision.btBox2dShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBox2dShape: btBox2dShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBox2dShape: btBox2dShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBox2dShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBox2dShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBox2dShape)
com.badlogic.gdx.physics.bullet.collision.btBox2dShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBox2dShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btBox2dShape: com.badlogic.gdx.math.Vector3 getHalfExtentsWithMargin()
com.badlogic.gdx.physics.bullet.collision.btBox2dShape: com.badlogic.gdx.math.Vector3 getHalfExtentsWithoutMargin()
com.badlogic.gdx.physics.bullet.collision.btBox2dShape: btBox2dShape(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBox2dShape: int getVertexCount()
com.badlogic.gdx.physics.bullet.collision.btBox2dShape: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVertices()
com.badlogic.gdx.physics.bullet.collision.btBox2dShape: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormals()
com.badlogic.gdx.physics.bullet.collision.btBox2dShape: com.badlogic.gdx.math.Vector3 getCentroid()
com.badlogic.gdx.physics.bullet.collision.btBox2dShape: void getPlaneEquation(com.badlogic.gdx.physics.bullet.linearmath.btVector4,int)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm: btBoxBoxCollisionAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm: btBoxBoxCollisionAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm: btBoxBoxCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm: btBoxBoxCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc: btBoxBoxCollisionAlgorithm$CreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc: btBoxBoxCollisionAlgorithm$CreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc: btBoxBoxCollisionAlgorithm$CreateFunc()
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector: btBoxBoxDetector(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector: btBoxBoxDetector(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector: void delete()
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector: void setBox1(com.badlogic.gdx.physics.bullet.collision.btBoxShape)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector: com.badlogic.gdx.physics.bullet.collision.btBoxShape getBox1()
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector: void setBox2(com.badlogic.gdx.physics.bullet.collision.btBoxShape)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector: com.badlogic.gdx.physics.bullet.collision.btBoxShape getBox2()
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector: btBoxBoxDetector(com.badlogic.gdx.physics.bullet.collision.btBoxShape,com.badlogic.gdx.physics.bullet.collision.btBoxShape)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector: void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean)
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector: void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.btBoxShape
com.badlogic.gdx.physics.bullet.collision.btBoxShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBoxShape: btBoxShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBoxShape: btBoxShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBoxShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBoxShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBoxShape)
com.badlogic.gdx.physics.bullet.collision.btBoxShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBoxShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btBoxShape: com.badlogic.gdx.math.Vector3 getHalfExtentsWithMargin()
com.badlogic.gdx.physics.bullet.collision.btBoxShape: com.badlogic.gdx.math.Vector3 getHalfExtentsWithoutMargin()
com.badlogic.gdx.physics.bullet.collision.btBoxShape: btBoxShape(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBoxShape: void getPlaneEquation(com.badlogic.gdx.physics.bullet.linearmath.btVector4,int)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback
com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback: btBroadphaseAabbCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback: btBroadphaseAabbCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback: boolean process(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback: btBroadphaseAabbCallback()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: btBroadphaseInterface(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: btBroadphaseInterface(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: void delete()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy createProxy(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,long,short,short,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: void destroyProxy(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: void setAabb(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: void getAabb(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: void aabbTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: void calculateOverlappingPairs(com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getOverlappingPairCache()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: void getBroadphaseAabb(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: void resetPool(com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface: void printStats()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: com.badlogic.gdx.physics.bullet.collision.btBroadphasePair temp
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: com.badlogic.gdx.utils.Pool pool
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: btBroadphasePair(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: btBroadphasePair(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBroadphasePair)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: void delete()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: com.badlogic.gdx.physics.bullet.collision.btBroadphasePair internalTemp(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: com.badlogic.gdx.physics.bullet.collision.btBroadphasePair obtain(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: void free(com.badlogic.gdx.physics.bullet.collision.btBroadphasePair)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: btBroadphasePair()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: btBroadphasePair(com.badlogic.gdx.physics.bullet.collision.btBroadphasePair)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: btBroadphasePair(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: void setPProxy0(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy getPProxy0()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: void setPProxy1(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy getPProxy1()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: void setAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm getAlgorithm()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: void setInternalInfo1(long)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: long getInternalInfo1()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: void setInternalTmpValue(int)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: int getInternalTmpValue()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair$1
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair$1: btBroadphasePair$1()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair$1: com.badlogic.gdx.physics.bullet.collision.btBroadphasePair newObject()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair$1: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray: btBroadphasePairArray(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray: btBroadphasePairArray(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray: void delete()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray: com.badlogic.gdx.utils.Array getCollisionObjects(com.badlogic.gdx.utils.Array,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int[])
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray: int getCollisionObjectsValue(int[],com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray: int size()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray: com.badlogic.gdx.physics.bullet.collision.btBroadphasePair at(int)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray: int getCollisionObjects(int[],int,int)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray: int getCollisionObjectsValue(int[],int,int)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray: btBroadphasePairArray()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairSortPredicate
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairSortPredicate: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairSortPredicate: btBroadphasePairSortPredicate(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairSortPredicate: btBroadphasePairSortPredicate(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairSortPredicate: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairSortPredicate: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBroadphasePairSortPredicate)
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairSortPredicate: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairSortPredicate: void delete()
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairSortPredicate: btBroadphasePairSortPredicate()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy temp
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: com.badlogic.gdx.utils.Pool pool
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: btBroadphaseProxy(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: btBroadphaseProxy(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: void delete()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy internalTemp(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy obtain(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: void free(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: void setClientObject(long)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: long getClientObject()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: void setCollisionFilterGroup(short)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: short getCollisionFilterGroup()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: void setCollisionFilterMask(short)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: short getCollisionFilterMask()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: void setMultiSapParentProxy(long)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: long getMultiSapParentProxy()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: void setUniqueId(int)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: int getUniqueId()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: void setAabbMin(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAabbMin()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: void setAabbMax(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAabbMax()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: int getUid()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: btBroadphaseProxy()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: btBroadphaseProxy(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short,long)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: btBroadphaseProxy(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: boolean isPolyhedral(int)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: boolean isConvex(int)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: boolean isNonMoving(int)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: boolean isConcave(int)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: boolean isCompound(int)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: boolean isSoftBody(int)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: boolean isInfinite(int)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: boolean isConvex2d(int)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$1
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$1: btBroadphaseProxy$1()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$1: com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy newObject()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$1: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$CollisionFilterGroups
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$CollisionFilterGroups: int DefaultFilter
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$CollisionFilterGroups: int StaticFilter
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$CollisionFilterGroups: int KinematicFilter
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$CollisionFilterGroups: int DebrisFilter
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$CollisionFilterGroups: int SensorTrigger
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$CollisionFilterGroups: int CharacterFilter
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$CollisionFilterGroups: int AllFilter
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$CollisionFilterGroups: btBroadphaseProxy$CollisionFilterGroups()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: btBroadphaseRayCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: btBroadphaseRayCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: void setRayDirectionInverse(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayDirectionInverse()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: void setSigns(long[])
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: long[] getSigns()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: void setLambda_max(float)
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: float getLambda_max()
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback: btBroadphaseRayCallback()
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: btBvhSubtreeInfo(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: btBvhSubtreeInfo(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo)
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: void delete()
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: void setQuantizedAabbMin(int[])
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: int[] getQuantizedAabbMin()
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: void setQuantizedAabbMax(int[])
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: int[] getQuantizedAabbMax()
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: void setRootNodeIndex(int)
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: int getRootNodeIndex()
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: void setSubtreeSize(int)
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: int getSubtreeSize()
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: void setPadding(int[])
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: int[] getPadding()
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: btBvhSubtreeInfo()
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo: void setAabbFromQuantizeNode(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: btBvhSubtreeInfoData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: btBvhSubtreeInfoData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData)
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: void delete()
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: void setRootNodeIndex(int)
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: int getRootNodeIndex()
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: void setSubtreeSize(int)
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: int getSubtreeSize()
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: void setQuantizedAabbMin(int[])
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: int[] getQuantizedAabbMin()
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: void setQuantizedAabbMax(int[])
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: int[] getQuantizedAabbMax()
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData: btBvhSubtreeInfoData()
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: com.badlogic.gdx.utils.Array instances
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface meshInterface
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape getInstance(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape obtain(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface getMeshInterface()
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(com.badlogic.gdx.utils.Array,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(com.badlogic.gdx.utils.Array,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(com.badlogic.gdx.utils.Array,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(com.badlogic.gdx.utils.Array,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(int,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(int,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(int,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(int,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: void dispose()
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: boolean getOwnsBvh()
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: void performRaycast(com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: void performConvexcast(com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: void refitTree(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: void partialRefitTree(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh getOptimizedBvh()
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: void setOptimizedBvh(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: void setOptimizedBvh(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: void buildOptimizedBvh()
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: boolean usesQuantizedAabbCompression()
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: void setTriangleInfoMap(com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap getTriangleInfoMap()
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: void serializeSingleBvh(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: void serializeSingleTriangleInfoMap(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(boolean,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(boolean,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(boolean,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: btBvhTriangleMeshShape(boolean,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShape
com.badlogic.gdx.physics.bullet.collision.btCapsuleShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCapsuleShape: btCapsuleShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShape: btCapsuleShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCapsuleShape)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShape: btCapsuleShape(float,float)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShape: int getUpAxis()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShape: float getRadius()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShape: float getHalfHeight()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData: btCapsuleShapeData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData: btCapsuleShapeData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData: void delete()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData: void setConvexInternalShapeData(com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData: com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData getConvexInternalShapeData()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData: void setUpAxis(int)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData: int getUpAxis()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData: void setPadding(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData: java.lang.String getPadding()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData: btCapsuleShapeData()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeX
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeX: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeX: btCapsuleShapeX(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeX: btCapsuleShapeX(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeX: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeX: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeX)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeX: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeX: void delete()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeX: btCapsuleShapeX(float,float)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeZ
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeZ: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeZ: btCapsuleShapeZ(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeZ: btCapsuleShapeZ(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeZ: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeZ: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeZ)
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeZ: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeZ: void delete()
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeZ: btCapsuleShapeZ(float,float)
com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData
com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData: btCharIndexTripletData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData: btCharIndexTripletData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData)
com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData: void delete()
com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData: void setValues(short[])
com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData: short[] getValues()
com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData: void setPad(char)
com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData: char getPad()
com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData: btCharIndexTripletData()
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm: btCollisionAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm: btCollisionAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm: void processCollision(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm: float calculateTimeOfImpact(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm: void getAllContactManifolds(com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo: btCollisionAlgorithmConstructionInfo(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo: btCollisionAlgorithmConstructionInfo(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo: btCollisionAlgorithmConstructionInfo()
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo: btCollisionAlgorithmConstructionInfo(com.badlogic.gdx.physics.bullet.collision.btDispatcher,int)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo: void setDispatcher1(com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo: com.badlogic.gdx.physics.bullet.collision.btDispatcher getDispatcher1()
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo: void setManifold(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo: com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getManifold()
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc: btCollisionAlgorithmCreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc: btCollisionAlgorithmCreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc: void setSwapped(boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc: boolean getSwapped()
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc: btCollisionAlgorithmCreateFunc()
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration
com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration: btCollisionConfiguration(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration: btCollisionConfiguration(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration: com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator getPersistentManifoldPool()
com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration: com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator getCollisionAlgorithmPool()
com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc getCollisionAlgorithmCreateFunc(int,int)
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: btCollisionDispatcher(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: btCollisionDispatcher(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher)
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: int getDispatcherFlags()
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: void setDispatcherFlags(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: void registerCollisionCreateFunc(int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc)
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getManifoldByIndexInternal(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: btCollisionDispatcher(com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm findAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm findAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: void setNearCallback(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void)
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void getNearCallback()
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: void defaultNearCallback(com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo)
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration getCollisionConfiguration()
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: void setCollisionConfiguration(com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher: com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator getInternalManifoldPool()
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher$DispatcherFlags
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher$DispatcherFlags: int CD_STATIC_STATIC_REPORTED
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher$DispatcherFlags: int CD_USE_RELATIVE_CONTACT_BREAKING_THRESHOLD
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher$DispatcherFlags: int CD_DISABLE_CONTACTPOOL_DYNAMIC_ALLOCATION
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher$DispatcherFlags: btCollisionDispatcher$DispatcherFlags()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: com.badlogic.gdx.utils.LongMap instances
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge gdxBridge
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: int userValue
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: int contactCallbackFlag
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: int contactCallbackFilter
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: com.badlogic.gdx.physics.bullet.collision.btCollisionShape collisionShape
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: java.lang.Object userData
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: btCollisionObject(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: btCollisionObject(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getInstance(long)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getInstance(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void addInstance(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void removeInstance(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void construct()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void dispose()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: int getUserValue()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setUserValue(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: int getContactCallbackFlag()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setContactCallbackFlag(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: int getContactCallbackFilter()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setContactCallbackFilter(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setCollisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void refCollisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: com.badlogic.gdx.physics.bullet.collision.btCollisionShape getCollisionShape()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: boolean mergesSimulationIslands()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: com.badlogic.gdx.math.Vector3 getAnisotropicFriction()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setAnisotropicFriction(com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setAnisotropicFriction(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: boolean hasAnisotropicFriction(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: boolean hasAnisotropicFriction()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setContactProcessingThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: float getContactProcessingThreshold()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: boolean isStaticObject()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: boolean isKinematicObject()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: boolean isStaticOrKinematicObject()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: boolean hasContactResponse()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: btCollisionObject()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void internalSetCollisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: com.badlogic.gdx.physics.bullet.collision.btCollisionShape internalGetCollisionShape()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: long internalGetExtensionPointer()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void internalSetExtensionPointer(long)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: int getActivationState()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setActivationState(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setDeactivationTime(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: float getDeactivationTime()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void forceActivationState(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void activate(boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void activate()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: boolean isActive()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setRestitution(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: float getRestitution()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setFriction(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: float getFriction()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setRollingFriction(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: float getRollingFriction()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: int getInternalType()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: com.badlogic.gdx.math.Matrix4 getWorldTransform()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setWorldTransform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy getBroadphaseHandle()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setBroadphaseHandle(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: com.badlogic.gdx.math.Matrix4 getInterpolationWorldTransform()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setInterpolationWorldTransform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setInterpolationLinearVelocity(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setInterpolationAngularVelocity(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: com.badlogic.gdx.math.Vector3 getInterpolationLinearVelocity()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: com.badlogic.gdx.math.Vector3 getInterpolationAngularVelocity()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: int getIslandTag()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setIslandTag(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: int getCompanionId()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setCompanionId(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: float getHitFraction()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setHitFraction(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: int getCollisionFlags()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setCollisionFlags(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: float getCcdSweptSphereRadius()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setCcdSweptSphereRadius(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: float getCcdMotionThreshold()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: float getCcdSquareMotionThreshold()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setCcdMotionThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: long getUserPointer()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: int getUserIndex()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setUserPointer(long)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void setUserIndex(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: int getUpdateRevisionInternal()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: boolean checkCollideWith(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: int calculateSerializeBufferSize()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: java.lang.String serialize(long,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void serializeSingleObject(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void internalSetGdxBridge(com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge internalGetGdxBridge()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void getAnisotropicFriction(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void getWorldTransform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void getInterpolationWorldTransform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void getInterpolationLinearVelocity(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void getInterpolationAngularVelocity(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btCollisionObject: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$AnisotropicFrictionFlags
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$AnisotropicFrictionFlags: int CF_ANISOTROPIC_FRICTION_DISABLED
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$AnisotropicFrictionFlags: int CF_ANISOTROPIC_FRICTION
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$AnisotropicFrictionFlags: int CF_ANISOTROPIC_ROLLING_FRICTION
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$AnisotropicFrictionFlags: btCollisionObject$AnisotropicFrictionFlags()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionFlags
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionFlags: int CF_STATIC_OBJECT
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionFlags: int CF_KINEMATIC_OBJECT
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionFlags: int CF_NO_CONTACT_RESPONSE
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionFlags: int CF_CUSTOM_MATERIAL_CALLBACK
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionFlags: int CF_CHARACTER_OBJECT
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionFlags: int CF_DISABLE_VISUALIZE_OBJECT
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionFlags: int CF_DISABLE_SPU_COLLISION_PROCESSING
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionFlags: btCollisionObject$CollisionFlags()
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionObjectTypes
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionObjectTypes: int CO_COLLISION_OBJECT
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionObjectTypes: int CO_RIGID_BODY
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionObjectTypes: int CO_GHOST_OBJECT
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionObjectTypes: int CO_SOFT_BODY
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionObjectTypes: int CO_HF_FLUID
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionObjectTypes: int CO_USER_TYPE
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionObjectTypes: int CO_FEATHERSTONE_LINK
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionObjectTypes: btCollisionObject$CollisionObjectTypes()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: btCollisionObjectArray(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: btCollisionObjectArray(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: btCollisionObjectArray()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: btCollisionObjectArray(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: int size()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: com.badlogic.gdx.physics.bullet.collision.btCollisionObject at(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: void clear()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: void pop_back()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: void resizeNoInitialize(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: void resize(int,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: void resize(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject expandNonInitializing()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject expand(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject expand()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: void push_back(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: int capacity()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: void reserve(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: void swap(int,int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: int findBinarySearch(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: int findLinearSearch(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: void remove(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: void initializeFromBuffer(long,int,int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray: void copyFromArray(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray$less
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray$less: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray$less: btCollisionObjectArray$less(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray$less: btCollisionObjectArray$less(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray$less: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray$less: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray$less)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray$less: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray$less: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray$less: btCollisionObjectArray$less()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: btCollisionObjectConstArray(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: btCollisionObjectConstArray(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: btCollisionObjectConstArray()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: btCollisionObjectConstArray(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: int size()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: com.badlogic.gdx.physics.bullet.collision.btCollisionObject at(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: void clear()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: void pop_back()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: void resizeNoInitialize(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: void resize(int,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: void resize(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject expandNonInitializing()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject expand(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject expand()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: void push_back(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: int capacity()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: void reserve(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: void swap(int,int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: int findBinarySearch(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: int findLinearSearch(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: void remove(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: void initializeFromBuffer(long,int,int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray: void copyFromArray(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray$less
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray$less: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray$less: btCollisionObjectConstArray$less(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray$less: btCollisionObjectConstArray$less(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray$less: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray$less: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray$less)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray$less: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray$less: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray$less: btCollisionObjectConstArray$less()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: btCollisionObjectDoubleData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: btCollisionObjectDoubleData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setBroadphaseHandle(long)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: long getBroadphaseHandle()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setCollisionShape(long)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: long getCollisionShape()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setRootCollisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData getRootCollisionShape()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setName(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: java.lang.String getName()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getWorldTransform()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setInterpolationWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getInterpolationWorldTransform()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setInterpolationLinearVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getInterpolationLinearVelocity()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setInterpolationAngularVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getInterpolationAngularVelocity()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setAnisotropicFriction(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getAnisotropicFriction()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setContactProcessingThreshold(double)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: double getContactProcessingThreshold()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setDeactivationTime(double)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: double getDeactivationTime()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setFriction(double)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: double getFriction()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setRollingFriction(double)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: double getRollingFriction()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setRestitution(double)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: double getRestitution()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setHitFraction(double)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: double getHitFraction()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setCcdSweptSphereRadius(double)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: double getCcdSweptSphereRadius()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setCcdMotionThreshold(double)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: double getCcdMotionThreshold()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setHasAnisotropicFriction(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: int getHasAnisotropicFriction()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setCollisionFlags(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: int getCollisionFlags()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setIslandTag1(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: int getIslandTag1()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setCompanionId(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: int getCompanionId()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setActivationState1(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: int getActivationState1()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setInternalType(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: int getInternalType()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setCheckCollideWith(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: int getCheckCollideWith()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: void setPadding(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: java.lang.String getPadding()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData: btCollisionObjectDoubleData()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: btCollisionObjectFloatData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: btCollisionObjectFloatData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setBroadphaseHandle(long)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: long getBroadphaseHandle()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setCollisionShape(long)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: long getCollisionShape()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setRootCollisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData getRootCollisionShape()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setName(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: java.lang.String getName()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getWorldTransform()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setInterpolationWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getInterpolationWorldTransform()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setInterpolationLinearVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getInterpolationLinearVelocity()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setInterpolationAngularVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getInterpolationAngularVelocity()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setAnisotropicFriction(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAnisotropicFriction()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setContactProcessingThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: float getContactProcessingThreshold()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setDeactivationTime(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: float getDeactivationTime()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setFriction(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: float getFriction()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setRollingFriction(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: float getRollingFriction()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setRestitution(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: float getRestitution()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setHitFraction(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: float getHitFraction()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setCcdSweptSphereRadius(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: float getCcdSweptSphereRadius()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setCcdMotionThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: float getCcdMotionThreshold()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setHasAnisotropicFriction(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: int getHasAnisotropicFriction()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setCollisionFlags(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: int getCollisionFlags()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setIslandTag1(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: int getIslandTag1()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setCompanionId(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: int getCompanionId()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setActivationState1(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: int getActivationState1()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setInternalType(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: int getInternalType()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setCheckCollideWith(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: int getCheckCollideWith()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: void setPadding(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: java.lang.String getPadding()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData: btCollisionObjectFloatData()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper temp
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: com.badlogic.gdx.utils.Pool pool
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: btCollisionObjectWrapper(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: btCollisionObjectWrapper(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper internalTemp(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper obtain(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: void free(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: void setParent(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper getParent()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: void setShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: com.badlogic.gdx.physics.bullet.collision.btCollisionShape getShape()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: void setCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getCollisionObject()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: com.badlogic.gdx.math.Matrix4 getWorldTransform()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: void setPartId(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: int getPartId()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: void setIndex(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: int getIndex()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: com.badlogic.gdx.physics.bullet.collision.btCollisionShape getCollisionShape()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper$1
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper$1: btCollisionObjectWrapper$1()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper$1: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper newObject()
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper$1: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: btCollisionShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: btCollisionShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: com.badlogic.gdx.physics.bullet.collision.btCollisionShape newDerivedObject(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: void getAabb(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: void getBoundingSphere(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: float getAngularMotionDisc()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: float getContactBreakingThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: void calculateTemporalAabb(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: boolean isPolyhedral()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: boolean isConvex2d()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: boolean isConvex()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: boolean isNonMoving()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: boolean isConcave()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: boolean isCompound()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: boolean isSoftBody()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: boolean isInfinite()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: void setLocalScaling(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: com.badlogic.gdx.math.Vector3 getLocalScaling()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: void calculateLocalInertia(float,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: java.lang.String getName()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: int getShapeType()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: com.badlogic.gdx.math.Vector3 getAnisotropicRollingFrictionDirection()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: void setMargin(float)
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: float getMargin()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: void setUserPointer(long)
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: long getUserPointer()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: int calculateSerializeBufferSize()
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: java.lang.String serialize(long,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer)
com.badlogic.gdx.physics.bullet.collision.btCollisionShape: void serializeSingleShape(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer)
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData: btCollisionShapeData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData: btCollisionShapeData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData: void setName(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData: java.lang.String getName()
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData: void setShapeType(int)
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData: int getShapeType()
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData: void setPadding(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData: java.lang.String getPadding()
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData: btCollisionShapeData()
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: btCollisionWorld(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: btCollisionWorld(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void delete()
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: btCollisionWorld(com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void setBroadphase(com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface getBroadphase()
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getPairCache()
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: com.badlogic.gdx.physics.bullet.collision.btDispatcher getDispatcher()
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void updateSingleAabb(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void updateAabbs()
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void computeOverlappingPairs()
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void setDebugDrawer(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw getDebugDrawer()
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void debugDrawWorld()
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void debugDrawObject(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: int getNumCollisionObjects()
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void convexSweepTest(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void convexSweepTest(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void contactTest(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void contactPairTest(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void rayTestSingle(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void rayTestSingleInternal(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void objectQuerySingle(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void objectQuerySingleInternal(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void addCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short,short)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void addCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void addCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray getCollisionObjectArray()
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void removeCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void performDiscreteCollisionDetection()
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo getDispatchInfo()
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: boolean getForceUpdateAllAabbs()
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void setForceUpdateAllAabbs(boolean)
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld: void serialize(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer)
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm: btCompoundCollisionAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm: btCompoundCollisionAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm: btCompoundCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm getChildAlgorithm(int)
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$CreateFunc
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$CreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$CreateFunc: btCompoundCollisionAlgorithm$CreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$CreateFunc: btCompoundCollisionAlgorithm$CreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$CreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$CreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$CreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$CreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$CreateFunc: btCompoundCollisionAlgorithm$CreateFunc()
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$SwappedCreateFunc
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$SwappedCreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$SwappedCreateFunc: btCompoundCollisionAlgorithm$SwappedCreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$SwappedCreateFunc: btCompoundCollisionAlgorithm$SwappedCreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$SwappedCreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$SwappedCreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$SwappedCreateFunc)
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$SwappedCreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$SwappedCreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$SwappedCreateFunc: btCompoundCollisionAlgorithm$SwappedCreateFunc()
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm: btCompoundCompoundCollisionAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm: btCompoundCompoundCollisionAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm: btCompoundCompoundCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc: btCompoundCompoundCollisionAlgorithm$CreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc: btCompoundCompoundCollisionAlgorithm$CreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc: btCompoundCompoundCollisionAlgorithm$CreateFunc()
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc: btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc: btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc)
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc: btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc()
com.badlogic.gdx.physics.bullet.collision.btCompoundShape
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: com.badlogic.gdx.utils.Array children
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: btCompoundShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: btCompoundShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundShape)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void addChildShape(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void removeChildShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void removeChildShapeByIndex(int)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: com.badlogic.gdx.physics.bullet.collision.btCollisionShape getChildShape(int)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void dispose()
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: btCompoundShape(boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: btCompoundShape()
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void internalAddChildShape(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void internalRemoveChildShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void internalRemoveChildShapeByIndex(int)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: int getNumChildShapes()
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: com.badlogic.gdx.math.Matrix4 getChildTransform(int)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void updateChildTransform(int,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void updateChildTransform(int,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild getChildList()
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void recalculateLocalAabb()
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: com.badlogic.gdx.physics.bullet.collision.btDbvt getDynamicAabbTree()
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void createAabbTreeFromChildren()
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void calculatePrincipalAxisTransform(java.nio.FloatBuffer,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: int getUpdateRevision()
com.badlogic.gdx.physics.bullet.collision.btCompoundShape: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: btCompoundShapeChild(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: btCompoundShapeChild(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: void delete()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: void setTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: com.badlogic.gdx.physics.bullet.linearmath.btTransform getTransform()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: void setChildShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: com.badlogic.gdx.physics.bullet.collision.btCollisionShape getChildShape()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: void setChildShapeType(int)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: int getChildShapeType()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: void setChildMargin(float)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: float getChildMargin()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: void setNode(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: com.badlogic.gdx.physics.bullet.collision.btDbvtNode getNode()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild: btCompoundShapeChild()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: btCompoundShapeChildData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: btCompoundShapeChildData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: void delete()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: void setTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getTransform()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: void setChildShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData getChildShape()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: void setChildShapeType(int)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: int getChildShapeType()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: void setChildMargin(float)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: float getChildMargin()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData: btCompoundShapeChildData()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: btCompoundShapeData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: btCompoundShapeData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: void delete()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: void setCollisionShapeData(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData getCollisionShapeData()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: void setChildShapePtr(com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData getChildShapePtr()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: void setNumChildShapes(int)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: int getNumChildShapes()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: void setCollisionMargin(float)
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: float getCollisionMargin()
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData: btCompoundShapeData()
com.badlogic.gdx.physics.bullet.collision.btConcaveShape
com.badlogic.gdx.physics.bullet.collision.btConcaveShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConcaveShape: btConcaveShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConcaveShape: btConcaveShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConcaveShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConcaveShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConcaveShape)
com.badlogic.gdx.physics.bullet.collision.btConcaveShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConcaveShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btConcaveShape: void processAllTriangles(com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btConeShape
com.badlogic.gdx.physics.bullet.collision.btConeShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConeShape: btConeShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConeShape: btConeShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConeShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConeShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConeShape)
com.badlogic.gdx.physics.bullet.collision.btConeShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConeShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btConeShape: btConeShape(float,float)
com.badlogic.gdx.physics.bullet.collision.btConeShape: float getRadius()
com.badlogic.gdx.physics.bullet.collision.btConeShape: float getHeight()
com.badlogic.gdx.physics.bullet.collision.btConeShape: void setConeUpIndex(int)
com.badlogic.gdx.physics.bullet.collision.btConeShape: int getConeUpIndex()
com.badlogic.gdx.physics.bullet.collision.btConeShapeData
com.badlogic.gdx.physics.bullet.collision.btConeShapeData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConeShapeData: btConeShapeData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConeShapeData: btConeShapeData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConeShapeData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConeShapeData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConeShapeData)
com.badlogic.gdx.physics.bullet.collision.btConeShapeData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConeShapeData: void delete()
com.badlogic.gdx.physics.bullet.collision.btConeShapeData: void setConvexInternalShapeData(com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.btConeShapeData: com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData getConvexInternalShapeData()
com.badlogic.gdx.physics.bullet.collision.btConeShapeData: void setUpIndex(int)
com.badlogic.gdx.physics.bullet.collision.btConeShapeData: int getUpIndex()
com.badlogic.gdx.physics.bullet.collision.btConeShapeData: void setPadding(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btConeShapeData: java.lang.String getPadding()
com.badlogic.gdx.physics.bullet.collision.btConeShapeData: btConeShapeData()
com.badlogic.gdx.physics.bullet.collision.btConeShapeX
com.badlogic.gdx.physics.bullet.collision.btConeShapeX: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConeShapeX: btConeShapeX(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConeShapeX: btConeShapeX(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConeShapeX: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConeShapeX: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConeShapeX)
com.badlogic.gdx.physics.bullet.collision.btConeShapeX: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConeShapeX: void delete()
com.badlogic.gdx.physics.bullet.collision.btConeShapeX: btConeShapeX(float,float)
com.badlogic.gdx.physics.bullet.collision.btConeShapeZ
com.badlogic.gdx.physics.bullet.collision.btConeShapeZ: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConeShapeZ: btConeShapeZ(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConeShapeZ: btConeShapeZ(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConeShapeZ: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConeShapeZ: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConeShapeZ)
com.badlogic.gdx.physics.bullet.collision.btConeShapeZ: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConeShapeZ: void delete()
com.badlogic.gdx.physics.bullet.collision.btConeShapeZ: btConeShapeZ(float,float)
com.badlogic.gdx.physics.bullet.collision.btConstraintRow
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: btConstraintRow(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: btConstraintRow(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConstraintRow)
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: void delete()
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: void setNormal(float[])
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: float[] getNormal()
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: void setRhs(float)
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: float getRhs()
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: void setJacDiagInv(float)
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: float getJacDiagInv()
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: void setLowerLimit(float)
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: float getLowerLimit()
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: void setUpperLimit(float)
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: float getUpperLimit()
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: void setAccumImpulse(float)
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: float getAccumImpulse()
com.badlogic.gdx.physics.bullet.collision.btConstraintRow: btConstraintRow()
com.badlogic.gdx.physics.bullet.collision.btContactManifoldTypes
com.badlogic.gdx.physics.bullet.collision.btContactManifoldTypes: int MIN_CONTACT_MANIFOLD_TYPE
com.badlogic.gdx.physics.bullet.collision.btContactManifoldTypes: int BT_PERSISTENT_MANIFOLD_TYPE
com.badlogic.gdx.physics.bullet.collision.btContactManifoldTypes: btContactManifoldTypes()
com.badlogic.gdx.physics.bullet.collision.btContinuousConvexCollision
com.badlogic.gdx.physics.bullet.collision.btContinuousConvexCollision: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btContinuousConvexCollision: btContinuousConvexCollision(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btContinuousConvexCollision: btContinuousConvexCollision(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btContinuousConvexCollision: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btContinuousConvexCollision: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btContinuousConvexCollision)
com.badlogic.gdx.physics.bullet.collision.btContinuousConvexCollision: void finalize()
com.badlogic.gdx.physics.bullet.collision.btContinuousConvexCollision: void delete()
com.badlogic.gdx.physics.bullet.collision.btContinuousConvexCollision: btContinuousConvexCollision(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.btContinuousConvexCollision: btContinuousConvexCollision(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape)
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm: btConvex2dConvex2dAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm: btConvex2dConvex2dAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm)
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm: btConvex2dConvex2dAlgorithm(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver,int,int)
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm: void setLowLevelOfDetail(boolean)
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm: com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getManifold()
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: btConvex2dConvex2dAlgorithm$CreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: btConvex2dConvex2dAlgorithm$CreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: void setPdSolver(com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver getPdSolver()
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: void setSimplexSolver(com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver getSimplexSolver()
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: void setNumPerturbationIterations(int)
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: int getNumPerturbationIterations()
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: void setMinimumPointsPerturbationThreshold(int)
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: int getMinimumPointsPerturbationThreshold()
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc: btConvex2dConvex2dAlgorithm$CreateFunc(com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.btConvex2dShape
com.badlogic.gdx.physics.bullet.collision.btConvex2dShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvex2dShape: btConvex2dShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvex2dShape: btConvex2dShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvex2dShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvex2dShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvex2dShape)
com.badlogic.gdx.physics.bullet.collision.btConvex2dShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvex2dShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvex2dShape: btConvex2dShape(com.badlogic.gdx.physics.bullet.collision.btConvexShape)
com.badlogic.gdx.physics.bullet.collision.btConvex2dShape: com.badlogic.gdx.physics.bullet.collision.btConvexShape getChildShape()
com.badlogic.gdx.physics.bullet.collision.btConvexCast
com.badlogic.gdx.physics.bullet.collision.btConvexCast: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexCast: btConvexCast(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexCast: btConvexCast(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexCast: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexCast: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexCast)
com.badlogic.gdx.physics.bullet.collision.btConvexCast: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexCast: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexCast: boolean calcTimeOfImpact(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult)
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: btConvexCast$CastResult(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: btConvexCast$CastResult(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult)
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: void DebugDraw(float)
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: void drawCoordSystem(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: void reportFailure(int,int)
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: btConvexCast$CastResult()
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: void setHitTransformA(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: com.badlogic.gdx.physics.bullet.linearmath.btTransform getHitTransformA()
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: void setHitTransformB(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: com.badlogic.gdx.physics.bullet.linearmath.btTransform getHitTransformB()
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormal()
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: void setHitPoint(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitPoint()
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: void setFraction(float)
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: float getFraction()
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: void setDebugDrawer(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw getDebugDrawer()
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: void setAllowedPenetration(float)
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult: float getAllowedPenetration()
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm: btConvexConcaveCollisionAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm: btConvexConcaveCollisionAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm: btConvexConcaveCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm: void clearCache()
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc: btConvexConcaveCollisionAlgorithm$CreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc: btConvexConcaveCollisionAlgorithm$CreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc: btConvexConcaveCollisionAlgorithm$CreateFunc()
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc: btConvexConcaveCollisionAlgorithm$SwappedCreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc: btConvexConcaveCollisionAlgorithm$SwappedCreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc)
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc: btConvexConcaveCollisionAlgorithm$SwappedCreateFunc()
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm: btConvexConvexAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm: btConvexConvexAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm)
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm: btConvexConvexAlgorithm(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver,int,int)
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm: void setLowLevelOfDetail(boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm: com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getManifold()
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: btConvexConvexAlgorithm$CreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: btConvexConvexAlgorithm$CreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: void setPdSolver(com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver getPdSolver()
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: void setSimplexSolver(com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver getSimplexSolver()
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: void setNumPerturbationIterations(int)
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: int getNumPerturbationIterations()
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: void setMinimumPointsPerturbationThreshold(int)
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: int getMinimumPointsPerturbationThreshold()
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc: btConvexConvexAlgorithm$CreateFunc(com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: btConvexHullShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: btConvexHullShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexHullShape)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: long SwigConstructbtConvexHullShape(java.nio.FloatBuffer,int,int)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: btConvexHullShape(java.nio.FloatBuffer,int,int)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: long SwigConstructbtConvexHullShape(java.nio.FloatBuffer,int)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: btConvexHullShape(java.nio.FloatBuffer,int)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: long SwigConstructbtConvexHullShape(java.nio.FloatBuffer)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: btConvexHullShape(java.nio.FloatBuffer)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: btConvexHullShape()
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: void addPoint(com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: void addPoint(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getUnscaledPoints()
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getPoints()
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: com.badlogic.gdx.math.Vector3 getScaledPoint(int)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: int getNumPoints()
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: void project(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: btConvexHullShape(com.badlogic.gdx.physics.bullet.collision.btShapeHull)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: btConvexHullShapeData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: btConvexHullShapeData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: void setConvexInternalShapeData(com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData getConvexInternalShapeData()
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: void setUnscaledPointsFloatPtr(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getUnscaledPointsFloatPtr()
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: void setUnscaledPointsDoublePtr(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getUnscaledPointsDoublePtr()
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: void setNumUnscaledPoints(int)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: int getNumUnscaledPoints()
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: void setPadding3(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: java.lang.String getPadding3()
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData: btConvexHullShapeData()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalAabbCachingShape
com.badlogic.gdx.physics.bullet.collision.btConvexInternalAabbCachingShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexInternalAabbCachingShape: btConvexInternalAabbCachingShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalAabbCachingShape: btConvexInternalAabbCachingShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalAabbCachingShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalAabbCachingShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexInternalAabbCachingShape)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalAabbCachingShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalAabbCachingShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalAabbCachingShape: void recalcLocalAabb()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape: btConvexInternalShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape: btConvexInternalShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape: com.badlogic.gdx.math.Vector3 getImplicitShapeDimensions()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape: void setImplicitShapeDimensions(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape: void setSafeMargin(float,float)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape: void setSafeMargin(float)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape: void setSafeMargin(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape: void setSafeMargin(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape: com.badlogic.gdx.math.Vector3 getLocalScalingNV()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape: float getMarginNV()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: btConvexInternalShapeData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: btConvexInternalShapeData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: void setCollisionShapeData(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData getCollisionShapeData()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: void setLocalScaling(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLocalScaling()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: void setImplicitShapeDimensions(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getImplicitShapeDimensions()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: void setCollisionMargin(float)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: float getCollisionMargin()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: void setPadding(int)
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: int getPadding()
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData: btConvexInternalShapeData()
com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver
com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver: btConvexPenetrationDepthSolver(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver: btConvexPenetrationDepthSolver(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver: boolean calcPenDepth(com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm: btConvexPlaneCollisionAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm: btConvexPlaneCollisionAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm: btConvexPlaneCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean,int,int)
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm: void collideSingleContact(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc: btConvexPlaneCollisionAlgorithm$CreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc: btConvexPlaneCollisionAlgorithm$CreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc: void setNumPerturbationIterations(int)
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc: int getNumPerturbationIterations()
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc: void setMinimumPointsPerturbationThreshold(int)
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc: int getMinimumPointsPerturbationThreshold()
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc: btConvexPlaneCollisionAlgorithm$CreateFunc()
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: btConvexPointCloudShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: btConvexPointCloudShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape)
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: btConvexPointCloudShape()
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: btConvexPointCloudShape(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: btConvexPointCloudShape(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: void setPoints(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,boolean,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: void setPoints(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: void setPoints(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int)
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getUnscaledPoints()
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: int getNumPoints()
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape: com.badlogic.gdx.math.Vector3 getScaledPoint(int)
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: btConvexPolyhedron(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: btConvexPolyhedron(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron)
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: btConvexPolyhedron()
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: void setVertices(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getVertices()
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: void setFaces(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btFace_t)
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btFace_t getFaces()
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: void setUniqueEdges(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getUniqueEdges()
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: void setLocalCenter(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLocalCenter()
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: void setExtents(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getExtents()
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: void setRadius(float)
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: float getRadius()
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: void setMC(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getMC()
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: void setME(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getME()
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: void initialize()
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: boolean testContainment()
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron: void project(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btConvexShape
com.badlogic.gdx.physics.bullet.collision.btConvexShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexShape: btConvexShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexShape: btConvexShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexShape)
com.badlogic.gdx.physics.bullet.collision.btConvexShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexShape: com.badlogic.gdx.math.Vector3 localGetSupportingVertex(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btConvexShape: com.badlogic.gdx.math.Vector3 localGetSupportingVertexWithoutMargin(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btConvexShape: com.badlogic.gdx.math.Vector3 localGetSupportVertexWithoutMarginNonVirtual(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btConvexShape: com.badlogic.gdx.math.Vector3 localGetSupportVertexNonVirtual(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btConvexShape: float getMarginNonVirtual()
com.badlogic.gdx.physics.bullet.collision.btConvexShape: void getAabbNonVirtual(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btConvexShape: void project(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.collision.btConvexShape: void batchedUnitVectorGetSupportingVertexWithoutMargin(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int)
com.badlogic.gdx.physics.bullet.collision.btConvexShape: void getAabbSlow(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btConvexShape: int getNumPreferredPenetrationDirections()
com.badlogic.gdx.physics.bullet.collision.btConvexShape: void getPreferredPenetrationDirection(int,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: btConvexTriangleCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: btConvexTriangleCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: void setTriangleCount(int)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: int getTriangleCount()
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: void setManifoldPtr(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getManifoldPtr()
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: btConvexTriangleCallback(com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: void setTimeStepAndCounters(float,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: void clearWrapperData()
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: void processTriangle(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: void clearCache()
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: com.badlogic.gdx.math.Vector3 getAabbMin()
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback: com.badlogic.gdx.math.Vector3 getAabbMax()
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape: btConvexTriangleMeshShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape: btConvexTriangleMeshShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape: btConvexTriangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape: btConvexTriangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface)
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape: com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface getMeshInterface()
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape: void calculatePrincipalAxisTransform(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.collision.btCylinderShape
com.badlogic.gdx.physics.bullet.collision.btCylinderShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCylinderShape: btCylinderShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCylinderShape: btCylinderShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCylinderShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCylinderShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCylinderShape)
com.badlogic.gdx.physics.bullet.collision.btCylinderShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCylinderShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btCylinderShape: com.badlogic.gdx.math.Vector3 getHalfExtentsWithMargin()
com.badlogic.gdx.physics.bullet.collision.btCylinderShape: com.badlogic.gdx.math.Vector3 getHalfExtentsWithoutMargin()
com.badlogic.gdx.physics.bullet.collision.btCylinderShape: btCylinderShape(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btCylinderShape: int getUpAxis()
com.badlogic.gdx.physics.bullet.collision.btCylinderShape: float getRadius()
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData: btCylinderShapeData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData: btCylinderShapeData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData: void delete()
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData: void setConvexInternalShapeData(com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData: com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData getConvexInternalShapeData()
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData: void setUpAxis(int)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData: int getUpAxis()
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData: void setPadding(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData: java.lang.String getPadding()
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData: btCylinderShapeData()
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeX
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeX: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeX: btCylinderShapeX(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeX: btCylinderShapeX(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeX: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeX: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCylinderShapeX)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeX: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeX: void delete()
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeX: btCylinderShapeX(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeZ
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeZ: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeZ: btCylinderShapeZ(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeZ: btCylinderShapeZ(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeZ: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeZ: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCylinderShapeZ)
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeZ: void finalize()
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeZ: void delete()
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeZ: btCylinderShapeZ(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btDbvt
com.badlogic.gdx.physics.bullet.collision.btDbvt: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDbvt: int SIMPLE_STACKSIZE
com.badlogic.gdx.physics.bullet.collision.btDbvt: int DOUBLE_STACKSIZE
com.badlogic.gdx.physics.bullet.collision.btDbvt: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.collision.btDbvt: btDbvt(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt: btDbvt(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDbvt: void delete()
com.badlogic.gdx.physics.bullet.collision.btDbvt: void setRoot(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt: com.badlogic.gdx.physics.bullet.collision.btDbvtNode getRoot()
com.badlogic.gdx.physics.bullet.collision.btDbvt: void setFree(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt: com.badlogic.gdx.physics.bullet.collision.btDbvtNode getFree()
com.badlogic.gdx.physics.bullet.collision.btDbvt: void setLkhd(int)
com.badlogic.gdx.physics.bullet.collision.btDbvt: int getLkhd()
com.badlogic.gdx.physics.bullet.collision.btDbvt: void setLeaves(int)
com.badlogic.gdx.physics.bullet.collision.btDbvt: int getLeaves()
com.badlogic.gdx.physics.bullet.collision.btDbvt: void setOpath(long)
com.badlogic.gdx.physics.bullet.collision.btDbvt: long getOpath()
com.badlogic.gdx.physics.bullet.collision.btDbvt: void setStkStack(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t)
com.badlogic.gdx.physics.bullet.collision.btDbvt: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t getStkStack()
com.badlogic.gdx.physics.bullet.collision.btDbvt: void setRayTestStack(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t)
com.badlogic.gdx.physics.bullet.collision.btDbvt: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t getRayTestStack()
com.badlogic.gdx.physics.bullet.collision.btDbvt: btDbvt()
com.badlogic.gdx.physics.bullet.collision.btDbvt: void clear()
com.badlogic.gdx.physics.bullet.collision.btDbvt: boolean empty()
com.badlogic.gdx.physics.bullet.collision.btDbvt: void optimizeBottomUp()
com.badlogic.gdx.physics.bullet.collision.btDbvt: void optimizeTopDown(int)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void optimizeTopDown()
com.badlogic.gdx.physics.bullet.collision.btDbvt: void optimizeIncremental(int)
com.badlogic.gdx.physics.bullet.collision.btDbvt: com.badlogic.gdx.physics.bullet.collision.btDbvtNode insert(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void update(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void update(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void update(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.btDbvt: boolean update(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.btDbvt: boolean update(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btDbvt: boolean update(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,float)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void remove(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void write(com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void clone(com.badlogic.gdx.physics.bullet.collision.btDbvt,com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void clone(com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.btDbvt: int maxdepth(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt: int countLeaves(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void extractLeaves(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void benchmark()
com.badlogic.gdx.physics.bullet.collision.btDbvt: void enumNodes(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void enumLeaves(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void collideTT(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void collideTTpersistentStack(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void collideTV(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void rayTest(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void rayTestInternal(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long[],float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void collideKDOP(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,int,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void collideOCL(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,com.badlogic.gdx.math.Vector3,int,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void collideOCL(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,com.badlogic.gdx.math.Vector3,int,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void collideTU(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.btDbvt: int nearest(java.nio.IntBuffer,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS,float,int,int)
com.badlogic.gdx.physics.bullet.collision.btDbvt: int allocate(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_int_t,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS)
com.badlogic.gdx.physics.bullet.collision.btDbvt: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone
com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone: btDbvt$IClone(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone: btDbvt$IClone(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone)
com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone: void delete()
com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone: void CloneLeaf(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone: btDbvt$IClone()
com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide
com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide: btDbvt$ICollide(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide: btDbvt$ICollide(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide)
com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide: void delete()
com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide: void Process(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide: void Process(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide: void Process(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,float)
com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide: boolean Descent(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide: boolean AllLeaves(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide: btDbvt$ICollide()
com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter
com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter: btDbvt$IWriter(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter: btDbvt$IWriter(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter)
com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter: void delete()
com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter: void Prepare(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int)
com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter: void WriteNode(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int,int,int,int)
com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter: void WriteLeaf(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int,int)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN: btDbvt$sStkCLN(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN: btDbvt$sStkCLN(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN: void delete()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN: void setNode(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN: com.badlogic.gdx.physics.bullet.collision.btDbvtNode getNode()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN: void setParent(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN: com.badlogic.gdx.physics.bullet.collision.btDbvtNode getParent()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN: btDbvt$sStkCLN(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN: btDbvt$sStkNN(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN: btDbvt$sStkNN(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN: void delete()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN: void setA(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN: com.badlogic.gdx.physics.bullet.collision.btDbvtNode getA()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN: void setB(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN: com.badlogic.gdx.physics.bullet.collision.btDbvtNode getB()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN: btDbvt$sStkNN()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN: btDbvt$sStkNN(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP: btDbvt$sStkNP(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP: btDbvt$sStkNP(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP: void delete()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP: void setNode(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP: com.badlogic.gdx.physics.bullet.collision.btDbvtNode getNode()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP: void setMask(int)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP: int getMask()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP: btDbvt$sStkNP(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS: btDbvt$sStkNPS(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS: btDbvt$sStkNPS(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS: void delete()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS: void setNode(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS: com.badlogic.gdx.physics.bullet.collision.btDbvtNode getNode()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS: void setMask(int)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS: int getMask()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS: void setValue(float)
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS: float getValue()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS: btDbvt$sStkNPS()
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS: btDbvt$sStkNPS(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,float)
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: btDbvtAabbMm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: btDbvtAabbMm(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: void delete()
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: com.badlogic.gdx.math.Vector3 Center()
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: com.badlogic.gdx.math.Vector3 Lengths()
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: com.badlogic.gdx.math.Vector3 Extents()
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: com.badlogic.gdx.math.Vector3 Mins()
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: com.badlogic.gdx.math.Vector3 Maxs()
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm FromCE(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm FromCR(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm FromMM(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm FromPoints(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int)
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm FromPoints(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btVector3,int)
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: void Expand(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: void SignedExpand(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: boolean Contain(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: int Classify(com.badlogic.gdx.math.Vector3,float,int)
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: float ProjectMinimum(com.badlogic.gdx.math.Vector3,long)
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: com.badlogic.gdx.math.Vector3 tMins()
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: com.badlogic.gdx.math.Vector3 tMaxs()
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm: btDbvtAabbMm()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: int DYNAMIC_SET
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: int FIXED_SET
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: int STAGECOUNT
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: btDbvtBroadphase(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: btDbvtBroadphase(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void delete()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setSets(com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: com.badlogic.gdx.physics.bullet.collision.btDbvt getSets()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setStageRoots(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy getStageRoots()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setPaircache(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getPaircache()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setPrediction(float)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: float getPrediction()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setStageCurrent(int)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: int getStageCurrent()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setFupdates(int)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: int getFupdates()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setDupdates(int)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: int getDupdates()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setCupdates(int)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: int getCupdates()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setNewpairs(int)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: int getNewpairs()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setFixedleft(int)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: int getFixedleft()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setUpdates_call(long)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: long getUpdates_call()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setUpdates_done(long)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: long getUpdates_done()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setUpdates_ratio(float)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: float getUpdates_ratio()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setPid(int)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: int getPid()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setCid(int)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: int getCid()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setGid(int)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: int getGid()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setReleasepaircache(boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: boolean getReleasepaircache()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setDeferedcollide(boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: boolean getDeferedcollide()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setNeedcleanup(boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: boolean getNeedcleanup()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: btDbvtBroadphase(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: btDbvtBroadphase()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void collide(com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void optimize()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getOverlappingPairCache()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void performDeferredRemoval(com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setVelocityPrediction(float)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: float getVelocityPrediction()
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void setAabbForceUpdate(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase: void benchmark(com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface)
com.badlogic.gdx.physics.bullet.collision.btDbvtNode
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: btDbvtNode(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: btDbvtNode(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: void delete()
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: void setVolume(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm)
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm getVolume()
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: void setParent(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: com.badlogic.gdx.physics.bullet.collision.btDbvtNode getParent()
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: boolean isleaf()
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: boolean isinternal()
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: void setChilds(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtNode getChilds()
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: void setData(long)
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: long getData()
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: void setDataAsInt(int)
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: int getDataAsInt()
com.badlogic.gdx.physics.bullet.collision.btDbvtNode: btDbvtNode()
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy: btDbvtProxy(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy: btDbvtProxy(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvtProxy)
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy: void delete()
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy: void setLeaf(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy: com.badlogic.gdx.physics.bullet.collision.btDbvtNode getLeaf()
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy: void setLinks(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy)
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy getLinks()
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy: void setStage(int)
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy: int getStage()
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy: btDbvtProxy(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: btDefaultCollisionConfiguration(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: btDefaultCollisionConfiguration(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: void delete()
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: btDefaultCollisionConfiguration(com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: btDefaultCollisionConfiguration()
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver getSimplexSolver()
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: void setConvexConvexMultipointIterations(int,int)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: void setConvexConvexMultipointIterations(int)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: void setConvexConvexMultipointIterations()
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: void setPlaneConvexMultipointIterations(int,int)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: void setPlaneConvexMultipointIterations(int)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration: void setPlaneConvexMultipointIterations()
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: btDefaultCollisionConstructionInfo(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: btDefaultCollisionConstructionInfo(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: void delete()
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: void setPersistentManifoldPool(com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator getPersistentManifoldPool()
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: void setCollisionAlgorithmPool(com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator getCollisionAlgorithmPool()
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: void setDefaultMaxPersistentManifoldPoolSize(int)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: int getDefaultMaxPersistentManifoldPoolSize()
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: void setDefaultMaxCollisionAlgorithmPoolSize(int)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: int getDefaultMaxCollisionAlgorithmPoolSize()
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: void setCustomCollisionAlgorithmMaxElementSize(int)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: int getCustomCollisionAlgorithmMaxElementSize()
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: void setUseEpaPenetrationAlgorithm(int)
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: int getUseEpaPenetrationAlgorithm()
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo: btDefaultCollisionConstructionInfo()
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface: btDiscreteCollisionDetectorInterface(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface: btDiscreteCollisionDetectorInterface(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface: void delete()
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface: void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface: void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput: btDiscreteCollisionDetectorInterface$ClosestPointInput(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput: btDiscreteCollisionDetectorInterface$ClosestPointInput(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput: void delete()
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput: btDiscreteCollisionDetectorInterface$ClosestPointInput()
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput: void setTransformA(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput: com.badlogic.gdx.physics.bullet.linearmath.btTransform getTransformA()
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput: void setTransformB(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput: com.badlogic.gdx.physics.bullet.linearmath.btTransform getTransformB()
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput: void setMaximumDistanceSquared(float)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput: float getMaximumDistanceSquared()
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result: btDiscreteCollisionDetectorInterface$Result(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result: btDiscreteCollisionDetectorInterface$Result(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result: void delete()
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result: void setShapeIdentifiersA(int,int)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result: void setShapeIdentifiersB(int,int)
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result: void addContactPoint(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.btDispatcher
com.badlogic.gdx.physics.bullet.collision.btDispatcher: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDispatcher: btDispatcher(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDispatcher: btDispatcher(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDispatcher: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDispatcher: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btDispatcher: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDispatcher: void delete()
com.badlogic.gdx.physics.bullet.collision.btDispatcher: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm findAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.btDispatcher: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm findAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btDispatcher: com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getNewManifold(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btDispatcher: void releaseManifold(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.btDispatcher: void clearManifold(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.btDispatcher: boolean needsCollision(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btDispatcher: boolean needsResponse(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btDispatcher: void dispatchAllCollisionPairs(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btDispatcher: int getNumManifolds()
com.badlogic.gdx.physics.bullet.collision.btDispatcher: com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getManifoldByIndexInternal(int)
com.badlogic.gdx.physics.bullet.collision.btDispatcher: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold getInternalManifoldPointer()
com.badlogic.gdx.physics.bullet.collision.btDispatcher: com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator getInternalManifoldPool()
com.badlogic.gdx.physics.bullet.collision.btDispatcher: long allocateCollisionAlgorithm(int)
com.badlogic.gdx.physics.bullet.collision.btDispatcher: void freeCollisionAlgorithm(long)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: btDispatcherInfo(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: btDispatcherInfo(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: void finalize()
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: void delete()
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: btDispatcherInfo()
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: void setTimeStep(float)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: float getTimeStep()
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: void setStepCount(int)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: int getStepCount()
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: void setDispatchFunc(int)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: int getDispatchFunc()
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: void setTimeOfImpact(float)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: float getTimeOfImpact()
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: void setUseContinuous(boolean)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: boolean getUseContinuous()
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: void setDebugDraw(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw getDebugDraw()
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: void setEnableSatConvex(boolean)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: boolean getEnableSatConvex()
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: void setEnableSPU(boolean)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: boolean getEnableSPU()
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: void setUseEpa(boolean)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: boolean getUseEpa()
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: void setAllowedCcdPenetration(float)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: float getAllowedCcdPenetration()
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: void setUseConvexConservativeDistanceUtil(boolean)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: boolean getUseConvexConservativeDistanceUtil()
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: void setConvexConservativeDistanceThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo: float getConvexConservativeDistanceThreshold()
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo$DispatchFunc
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo$DispatchFunc: int DISPATCH_DISCRETE
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo$DispatchFunc: int DISPATCH_CONTINUOUS
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo$DispatchFunc: btDispatcherInfo$DispatchFunc()
com.badlogic.gdx.physics.bullet.collision.btElement
com.badlogic.gdx.physics.bullet.collision.btElement: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btElement: btElement(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btElement: btElement(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btElement: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btElement: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btElement)
com.badlogic.gdx.physics.bullet.collision.btElement: void finalize()
com.badlogic.gdx.physics.bullet.collision.btElement: void delete()
com.badlogic.gdx.physics.bullet.collision.btElement: void setId(int)
com.badlogic.gdx.physics.bullet.collision.btElement: int getId()
com.badlogic.gdx.physics.bullet.collision.btElement: void setSz(int)
com.badlogic.gdx.physics.bullet.collision.btElement: int getSz()
com.badlogic.gdx.physics.bullet.collision.btElement: btElement()
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm: btEmptyAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm: btEmptyAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm)
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm: btEmptyAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc: btEmptyAlgorithm$CreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc: btEmptyAlgorithm$CreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc: btEmptyAlgorithm$CreateFunc()
com.badlogic.gdx.physics.bullet.collision.btEmptyShape
com.badlogic.gdx.physics.bullet.collision.btEmptyShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btEmptyShape: btEmptyShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btEmptyShape: btEmptyShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btEmptyShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btEmptyShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btEmptyShape)
com.badlogic.gdx.physics.bullet.collision.btEmptyShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btEmptyShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btEmptyShape: btEmptyShape()
com.badlogic.gdx.physics.bullet.collision.btFace
com.badlogic.gdx.physics.bullet.collision.btFace: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btFace: btFace(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btFace: btFace(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btFace: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btFace: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btFace)
com.badlogic.gdx.physics.bullet.collision.btFace: void finalize()
com.badlogic.gdx.physics.bullet.collision.btFace: void delete()
com.badlogic.gdx.physics.bullet.collision.btFace: void setIndices(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_int_t)
com.badlogic.gdx.physics.bullet.collision.btFace: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_int_t getIndices()
com.badlogic.gdx.physics.bullet.collision.btFace: void setPlane(float[])
com.badlogic.gdx.physics.bullet.collision.btFace: float[] getPlane()
com.badlogic.gdx.physics.bullet.collision.btFace: btFace()
com.badlogic.gdx.physics.bullet.collision.btGhostObject
com.badlogic.gdx.physics.bullet.collision.btGhostObject: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btGhostObject: btGhostObject(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGhostObject: btGhostObject(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGhostObject: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGhostObject: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btGhostObject)
com.badlogic.gdx.physics.bullet.collision.btGhostObject: void finalize()
com.badlogic.gdx.physics.bullet.collision.btGhostObject: void delete()
com.badlogic.gdx.physics.bullet.collision.btGhostObject: btGhostObject()
com.badlogic.gdx.physics.bullet.collision.btGhostObject: void convexSweepTest(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float)
com.badlogic.gdx.physics.bullet.collision.btGhostObject: void convexSweepTest(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback)
com.badlogic.gdx.physics.bullet.collision.btGhostObject: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.collision.btGhostObject: void addOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btGhostObject: void addOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btGhostObject: void removeOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btGhostObject: void removeOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btGhostObject: int getNumOverlappingObjects()
com.badlogic.gdx.physics.bullet.collision.btGhostObject: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getOverlappingObject(int)
com.badlogic.gdx.physics.bullet.collision.btGhostObject: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray getOverlappingPairs()
com.badlogic.gdx.physics.bullet.collision.btGhostObject: com.badlogic.gdx.physics.bullet.collision.btGhostObject upcast(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback: btGhostPairCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback: btGhostPairCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback)
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback: btGhostPairCallback()
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback: com.badlogic.gdx.physics.bullet.collision.btBroadphasePair addOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback: long removeOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback: void removeOverlappingPairsContainingProxy(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btGjkConvexCast
com.badlogic.gdx.physics.bullet.collision.btGjkConvexCast: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btGjkConvexCast: btGjkConvexCast(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkConvexCast: btGjkConvexCast(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkConvexCast: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkConvexCast: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btGjkConvexCast)
com.badlogic.gdx.physics.bullet.collision.btGjkConvexCast: void finalize()
com.badlogic.gdx.physics.bullet.collision.btGjkConvexCast: void delete()
com.badlogic.gdx.physics.bullet.collision.btGjkConvexCast: btGjkConvexCast(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaPenetrationDepthSolver
com.badlogic.gdx.physics.bullet.collision.btGjkEpaPenetrationDepthSolver: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btGjkEpaPenetrationDepthSolver: btGjkEpaPenetrationDepthSolver(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaPenetrationDepthSolver: btGjkEpaPenetrationDepthSolver(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaPenetrationDepthSolver: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaPenetrationDepthSolver: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btGjkEpaPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaPenetrationDepthSolver: void finalize()
com.badlogic.gdx.physics.bullet.collision.btGjkEpaPenetrationDepthSolver: void delete()
com.badlogic.gdx.physics.bullet.collision.btGjkEpaPenetrationDepthSolver: btGjkEpaPenetrationDepthSolver()
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2: btGjkEpaSolver2(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2: btGjkEpaSolver2(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2: void finalize()
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2: void delete()
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2: int StackSizeRequirement()
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2: boolean Distance(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2: boolean Penetration(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2: boolean Penetration(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2: float SignedDistance(com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2: boolean SignedDistance(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2: btGjkEpaSolver2()
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: btGjkEpaSolver2$sResults(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: btGjkEpaSolver2$sResults(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: void finalize()
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: void delete()
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: void setStatus(int)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: int getStatus()
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: void setWitnesses(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWitnesses()
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormal()
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: void setDistance(float)
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: float getDistance()
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults: btGjkEpaSolver2$sResults()
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults$eStatus
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults$eStatus: int Separated
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults$eStatus: int Penetrating
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults$eStatus: int GJK_Failed
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults$eStatus: int EPA_Failed
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults$eStatus: btGjkEpaSolver2$sResults$eStatus()
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: btGjkPairDetector(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: btGjkPairDetector(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void finalize()
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void delete()
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void setLastUsedMethod(int)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: int getLastUsedMethod()
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void setCurIter(int)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: int getCurIter()
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void setDegenerateSimplex(int)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: int getDegenerateSimplex()
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void setCatchDegeneracies(int)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: int getCatchDegeneracies()
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void setFixContactNormalDirection(int)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: int getFixContactNormalDirection()
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: btGjkPairDetector(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: btGjkPairDetector(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.physics.bullet.collision.btConvexShape,int,int,float,float,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void getClosestPointsNonVirtual(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void setMinkowskiA(com.badlogic.gdx.physics.bullet.collision.btConvexShape)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void setMinkowskiB(com.badlogic.gdx.physics.bullet.collision.btConvexShape)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void setCachedSeperatingAxis(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: com.badlogic.gdx.math.Vector3 getCachedSeparatingAxis()
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: float getCachedSeparatingDistance()
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void setPenetrationDepthSolver(com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector: void setIgnoreMargin(boolean)
com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache
com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache: btHashedOverlappingPairCache(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache: btHashedOverlappingPairCache(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache: void finalize()
com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache: void delete()
com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache: btHashedOverlappingPairCache()
com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache: boolean needsBroadphaseCollision(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache: com.badlogic.gdx.physics.bullet.collision.btBroadphasePair getOverlappingPairArrayPtr()
com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache: com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray getOverlappingPairArray()
com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache: int GetCount()
com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache: com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback getOverlapFilterCallback()
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: btHashedSimplePairCache(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: btHashedSimplePairCache(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache)
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: void finalize()
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: void delete()
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: btHashedSimplePairCache()
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: void removeAllPairs()
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: long removeOverlappingPair(int,int)
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: com.badlogic.gdx.physics.bullet.collision.btSimplePair addOverlappingPair(int,int)
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: com.badlogic.gdx.physics.bullet.collision.btSimplePair getOverlappingPairArrayPtr()
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t getOverlappingPairArray()
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: com.badlogic.gdx.physics.bullet.collision.btSimplePair findPair(int,int)
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: int GetCount()
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache: int getNumOverlappingPairs()
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: btHeightfieldTerrainShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: btHeightfieldTerrainShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape)
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: void setUseDiamondSubdivision(boolean)
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: void setUseDiamondSubdivision()
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: void setUseZigzagSubdivision(boolean)
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: void setUseZigzagSubdivision()
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: long SwigConstructbtHeightfieldTerrainShape(int,int,java.nio.FloatBuffer,float,float,float,int,boolean)
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: btHeightfieldTerrainShape(int,int,java.nio.FloatBuffer,float,float,float,int,boolean)
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: long SwigConstructbtHeightfieldTerrainShape(int,int,java.nio.ShortBuffer,float,float,float,int,boolean)
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: btHeightfieldTerrainShape(int,int,java.nio.ShortBuffer,float,float,float,int,boolean)
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: com.badlogic.gdx.utils.Array instances
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: com.badlogic.gdx.graphics.g3d.model.MeshPart meshPart
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: btIndexedMesh(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: btIndexedMesh(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btIndexedMesh)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void finalize()
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void delete()
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: com.badlogic.gdx.physics.bullet.collision.btIndexedMesh getInstance(com.badlogic.gdx.graphics.g3d.model.MeshPart)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: com.badlogic.gdx.physics.bullet.collision.btIndexedMesh obtain(com.badlogic.gdx.graphics.g3d.model.MeshPart)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: btIndexedMesh(com.badlogic.gdx.graphics.Mesh)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: btIndexedMesh(com.badlogic.gdx.graphics.g3d.model.MeshPart)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: btIndexedMesh(com.badlogic.gdx.graphics.Mesh,int,int)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: com.badlogic.gdx.graphics.g3d.model.MeshPart getMeshPart()
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void set(com.badlogic.gdx.graphics.Mesh)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void set(com.badlogic.gdx.graphics.g3d.model.MeshPart)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void set(com.badlogic.gdx.graphics.Mesh,int,int)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void setNumTriangles(int)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: int getNumTriangles()
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void setTriangleIndexBase(java.nio.ByteBuffer)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: java.nio.ByteBuffer getTriangleIndexBase()
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void setTriangleIndexStride(int)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: int getTriangleIndexStride()
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void setNumVertices(int)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: int getNumVertices()
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void setVertexBase(java.nio.ByteBuffer)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: java.nio.ByteBuffer getVertexBase()
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void setVertexStride(int)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: int getVertexStride()
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void setIndexType(int)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: int getIndexType()
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void setVertexType(int)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: int getVertexType()
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: btIndexedMesh()
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void setTriangleIndexBase(java.nio.ShortBuffer)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void setVertexBase(java.nio.FloatBuffer)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void setVertices(java.nio.FloatBuffer,int,int,int)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void setIndices(java.nio.ShortBuffer,int,int)
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btIntIndexData
com.badlogic.gdx.physics.bullet.collision.btIntIndexData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btIntIndexData: btIntIndexData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btIntIndexData: btIntIndexData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btIntIndexData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btIntIndexData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btIntIndexData)
com.badlogic.gdx.physics.bullet.collision.btIntIndexData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btIntIndexData: void delete()
com.badlogic.gdx.physics.bullet.collision.btIntIndexData: void setValue(int)
com.badlogic.gdx.physics.bullet.collision.btIntIndexData: int getValue()
com.badlogic.gdx.physics.bullet.collision.btIntIndexData: btIntIndexData()
com.badlogic.gdx.physics.bullet.collision.btInternalEdgeAdjustFlags
com.badlogic.gdx.physics.bullet.collision.btInternalEdgeAdjustFlags: int BT_TRIANGLE_CONVEX_BACKFACE_MODE
com.badlogic.gdx.physics.bullet.collision.btInternalEdgeAdjustFlags: int BT_TRIANGLE_CONCAVE_DOUBLE_SIDED
com.badlogic.gdx.physics.bullet.collision.btInternalEdgeAdjustFlags: int BT_TRIANGLE_CONVEX_DOUBLE_SIDED
com.badlogic.gdx.physics.bullet.collision.btInternalEdgeAdjustFlags: btInternalEdgeAdjustFlags()
com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback
com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback: btInternalTriangleIndexCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback: btInternalTriangleIndexCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback)
com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback: void internalProcessTriangleIndex(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int)
com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback: btInternalTriangleIndexCallback()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: com.badlogic.gdx.physics.bullet.collision.btManifoldPoint temp
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: com.badlogic.gdx.utils.Pool pool
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: btManifoldPoint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: btManifoldPoint(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void finalize()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void delete()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: com.badlogic.gdx.physics.bullet.collision.btManifoldPoint internalTemp(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: com.badlogic.gdx.physics.bullet.collision.btManifoldPoint obtain(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void free(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: btManifoldPoint()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: btManifoldPoint(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setLocalPointA(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLocalPointA()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setLocalPointB(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLocalPointB()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setPositionWorldOnB(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getPositionWorldOnB()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setPositionWorldOnA(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getPositionWorldOnA()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setNormalWorldOnB(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormalWorldOnB()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setDistance1(float)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: float getDistance1()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setCombinedFriction(float)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: float getCombinedFriction()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setCombinedRollingFriction(float)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: float getCombinedRollingFriction()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setCombinedRestitution(float)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: float getCombinedRestitution()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setPartId0(int)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: int getPartId0()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setPartId1(int)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: int getPartId1()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setIndex0(int)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: int getIndex0()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setIndex1(int)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: int getIndex1()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setUserPersistentData(long)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: long getUserPersistentData()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setLateralFrictionInitialized(boolean)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: boolean getLateralFrictionInitialized()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setAppliedImpulse(float)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: float getAppliedImpulse()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setAppliedImpulseLateral1(float)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: float getAppliedImpulseLateral1()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setAppliedImpulseLateral2(float)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: float getAppliedImpulseLateral2()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setContactMotion1(float)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: float getContactMotion1()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setContactMotion2(float)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: float getContactMotion2()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setContactCFM1(float)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: float getContactCFM1()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setContactCFM2(float)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: float getContactCFM2()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setLifeTime(int)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: int getLifeTime()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setLateralFrictionDir1(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLateralFrictionDir1()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setLateralFrictionDir2(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLateralFrictionDir2()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: float getDistance()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setDistance(float)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: int getUserValue()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void setUserValue(int)
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint$1
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint$1: btManifoldPoint$1()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint$1: com.badlogic.gdx.physics.bullet.collision.btManifoldPoint newObject()
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint$1: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.collision.btManifoldResult
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: btManifoldResult(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: btManifoldResult(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: void finalize()
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: void delete()
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: btManifoldResult()
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: btManifoldResult(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: void setPersistentManifold(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getPersistentManifold()
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: void refreshContactPoints()
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper getBody0Wrap()
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper getBody1Wrap()
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: void setBody0Wrap(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: void setBody1Wrap(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getBody0Internal()
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getBody1Internal()
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: float calculateCombinedRestitution(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btManifoldResult: float calculateCombinedFriction(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btMaterial
com.badlogic.gdx.physics.bullet.collision.btMaterial: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btMaterial: btMaterial(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMaterial: btMaterial(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMaterial: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMaterial: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMaterial)
com.badlogic.gdx.physics.bullet.collision.btMaterial: void finalize()
com.badlogic.gdx.physics.bullet.collision.btMaterial: void delete()
com.badlogic.gdx.physics.bullet.collision.btMaterial: void setFriction(float)
com.badlogic.gdx.physics.bullet.collision.btMaterial: float getFriction()
com.badlogic.gdx.physics.bullet.collision.btMaterial: void setRestitution(float)
com.badlogic.gdx.physics.bullet.collision.btMaterial: float getRestitution()
com.badlogic.gdx.physics.bullet.collision.btMaterial: void setPad(int[])
com.badlogic.gdx.physics.bullet.collision.btMaterial: int[] getPad()
com.badlogic.gdx.physics.bullet.collision.btMaterial: btMaterial()
com.badlogic.gdx.physics.bullet.collision.btMaterial: btMaterial(float,float)
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: btMaterialProperties(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: btMaterialProperties(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMaterialProperties)
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: void finalize()
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: void delete()
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: void setNumMaterials(int)
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: int getNumMaterials()
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: void setMaterialBase(java.nio.ByteBuffer)
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: java.nio.ByteBuffer getMaterialBase()
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: void setMaterialStride(int)
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: int getMaterialStride()
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: void setMaterialType(int)
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: int getMaterialType()
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: void setNumTriangles(int)
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: int getNumTriangles()
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: void setTriangleMaterialsBase(java.nio.ByteBuffer)
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: java.nio.ByteBuffer getTriangleMaterialsBase()
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: void setTriangleMaterialStride(int)
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: int getTriangleMaterialStride()
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: void setTriangleType(int)
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: int getTriangleType()
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: btMaterialProperties()
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btMeshPartData
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: btMeshPartData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: btMeshPartData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMeshPartData)
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: void delete()
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: void setVertices3f(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getVertices3f()
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: void setVertices3d(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getVertices3d()
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: void setIndices32(com.badlogic.gdx.physics.bullet.collision.btIntIndexData)
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: com.badlogic.gdx.physics.bullet.collision.btIntIndexData getIndices32()
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: void set3indices16(com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData)
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData get3indices16()
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: void set3indices8(com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData)
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData get3indices8()
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: void setIndices16(com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData)
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData getIndices16()
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: void setNumTriangles(int)
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: int getNumTriangles()
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: void setNumVertices(int)
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: int getNumVertices()
com.badlogic.gdx.physics.bullet.collision.btMeshPartData: btMeshPartData()
com.badlogic.gdx.physics.bullet.collision.btMinkowskiPenetrationDepthSolver
com.badlogic.gdx.physics.bullet.collision.btMinkowskiPenetrationDepthSolver: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btMinkowskiPenetrationDepthSolver: btMinkowskiPenetrationDepthSolver(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMinkowskiPenetrationDepthSolver: btMinkowskiPenetrationDepthSolver(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMinkowskiPenetrationDepthSolver: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMinkowskiPenetrationDepthSolver: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMinkowskiPenetrationDepthSolver)
com.badlogic.gdx.physics.bullet.collision.btMinkowskiPenetrationDepthSolver: void finalize()
com.badlogic.gdx.physics.bullet.collision.btMinkowskiPenetrationDepthSolver: void delete()
com.badlogic.gdx.physics.bullet.collision.btMinkowskiPenetrationDepthSolver: btMinkowskiPenetrationDepthSolver()
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape: btMinkowskiSumShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape: btMinkowskiSumShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape)
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape: btMinkowskiSumShape(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.physics.bullet.collision.btConvexShape)
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape: void setTransformA(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape: void setTransformB(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape: com.badlogic.gdx.math.Matrix4 getTransformA()
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape: com.badlogic.gdx.math.Matrix4 GetTransformB()
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape: com.badlogic.gdx.physics.bullet.collision.btConvexShape getShapeA()
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape: com.badlogic.gdx.physics.bullet.collision.btConvexShape getShapeB()
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: btMultiSapBroadphase(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: btMultiSapBroadphase(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: void finalize()
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: void delete()
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t getBroadphaseArray()
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: void addToChildBroadphase(com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: boolean testAabbOverlap(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getOverlappingPairCache()
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: void buildTree(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase: void quicksort(com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray,int,int)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy: btMultiSapBroadphase$btMultiSapProxy(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy: btMultiSapBroadphase$btMultiSapProxy(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy: void finalize()
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy: void delete()
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy: void setAabbMin(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAabbMin()
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy: void setAabbMax(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAabbMax()
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy: void setShapeType(int)
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy: int getShapeType()
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy: btMultiSapBroadphase$btMultiSapProxy(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,long,short,short)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape: btMultiSphereShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape: btMultiSphereShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape: btMultiSphereShape(com.badlogic.gdx.math.Vector3[],float[],int)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape: int getSphereCount()
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape: com.badlogic.gdx.math.Vector3 getSpherePosition(int)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape: float getSphereRadius(int)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: btMultiSphereShapeData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: btMultiSphereShapeData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: void delete()
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: void setConvexInternalShapeData(com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData getConvexInternalShapeData()
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: void setLocalPositionArrayPtr(com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius getLocalPositionArrayPtr()
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: void setLocalPositionArraySize(int)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: int getLocalPositionArraySize()
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: void setPadding(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: java.lang.String getPadding()
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData: btMultiSphereShapeData()
com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape
com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape: btMultimaterialTriangleMeshShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape: btMultimaterialTriangleMeshShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape: btMultimaterialTriangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape: btMultimaterialTriangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape: btMultimaterialTriangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape: btMultimaterialTriangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape: com.badlogic.gdx.physics.bullet.collision.btMaterial getMaterialProperties(int,int)
com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback
com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback: btNodeOverlapCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback: btNodeOverlapCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback)
com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback: void processNode(int,int)
com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback: btNodeOverlapCallback()
com.badlogic.gdx.physics.bullet.collision.btNullPairCache
com.badlogic.gdx.physics.bullet.collision.btNullPairCache: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btNullPairCache: btNullPairCache(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btNullPairCache: btNullPairCache(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btNullPairCache: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btNullPairCache: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btNullPairCache)
com.badlogic.gdx.physics.bullet.collision.btNullPairCache: void finalize()
com.badlogic.gdx.physics.bullet.collision.btNullPairCache: void delete()
com.badlogic.gdx.physics.bullet.collision.btNullPairCache: com.badlogic.gdx.physics.bullet.collision.btBroadphasePair getOverlappingPairArrayPtr()
com.badlogic.gdx.physics.bullet.collision.btNullPairCache: btNullPairCache()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh: btOptimizedBvh(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh: btOptimizedBvh(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh: void finalize()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh: void delete()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh: btOptimizedBvh()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh: void build(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh: void refit(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh: void refitPartial(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh: void updateBvhNodes(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,int,int,int)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh: boolean serializeInPlace(long,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh: com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh deSerializeInPlace(long,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: btOptimizedBvhNode(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: btOptimizedBvhNode(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: void finalize()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: void delete()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: void setAabbMinOrg(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAabbMinOrg()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: void setAabbMaxOrg(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAabbMaxOrg()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: void setEscapeIndex(int)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: int getEscapeIndex()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: void setSubPart(int)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: int getSubPart()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: void setTriangleIndex(int)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: int getTriangleIndex()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: void setPadding(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: java.lang.String getPadding()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode: btOptimizedBvhNode()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: btOptimizedBvhNodeDoubleData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: btOptimizedBvhNodeDoubleData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: void delete()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: void setAabbMinOrg(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getAabbMinOrg()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: void setAabbMaxOrg(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getAabbMaxOrg()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: void setEscapeIndex(int)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: int getEscapeIndex()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: void setSubPart(int)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: int getSubPart()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: void setTriangleIndex(int)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: int getTriangleIndex()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: void setPad(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: java.lang.String getPad()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData: btOptimizedBvhNodeDoubleData()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: btOptimizedBvhNodeFloatData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: btOptimizedBvhNodeFloatData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: void delete()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: void setAabbMinOrg(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAabbMinOrg()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: void setAabbMaxOrg(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAabbMaxOrg()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: void setEscapeIndex(int)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: int getEscapeIndex()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: void setSubPart(int)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: int getSubPart()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: void setTriangleIndex(int)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: int getTriangleIndex()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: void setPad(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: java.lang.String getPad()
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData: btOptimizedBvhNodeFloatData()
com.badlogic.gdx.physics.bullet.collision.btOverlapCallback
com.badlogic.gdx.physics.bullet.collision.btOverlapCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btOverlapCallback: btOverlapCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOverlapCallback: btOverlapCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOverlapCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOverlapCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOverlapCallback)
com.badlogic.gdx.physics.bullet.collision.btOverlapCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.btOverlapCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.btOverlapCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.btOverlapCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.btOverlapCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.btOverlapCallback: boolean processOverlap(com.badlogic.gdx.physics.bullet.collision.btBroadphasePair)
com.badlogic.gdx.physics.bullet.collision.btOverlapCallback: btOverlapCallback()
com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback
com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback: btOverlapFilterCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback: btOverlapFilterCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback)
com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback: boolean needBroadphaseCollision(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback: btOverlapFilterCallback()
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: btOverlappingPairCache(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: btOverlappingPairCache(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: void finalize()
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: void delete()
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: com.badlogic.gdx.physics.bullet.collision.btBroadphasePair getOverlappingPairArrayPtr()
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray getOverlappingPairArray()
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: void cleanOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: int getNumOverlappingPairs()
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: void cleanProxyFromPairs(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: void setOverlapFilterCallback(com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: void processAllOverlappingPairs(com.badlogic.gdx.physics.bullet.collision.btOverlapCallback,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: com.badlogic.gdx.physics.bullet.collision.btBroadphasePair findPair(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: boolean hasDeferredRemoval()
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: void setInternalGhostPairCallback(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache: void sortOverlappingPairs(com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback: btOverlappingPairCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback: btOverlappingPairCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback: com.badlogic.gdx.physics.bullet.collision.btBroadphasePair addOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback: long removeOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback: void removeOverlappingPairsContainingProxy(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback: btOverlappingPairCallback()
com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject
com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject: btPairCachingGhostObject(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject: btPairCachingGhostObject(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject)
com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject: void finalize()
com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject: void delete()
com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject: btPairCachingGhostObject()
com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject: void addOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject: void addOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject: void removeOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject: void removeOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject: com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache getOverlappingPairCache()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: btPersistentManifold(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: btPersistentManifold(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: void finalize()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: void delete()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: void setCompanionIdA(int)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: int getCompanionIdA()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: void setCompanionIdB(int)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: int getCompanionIdB()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: void setIndex1a(int)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: int getIndex1a()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: btPersistentManifold()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: btPersistentManifold(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,float,float)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getBody0()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getBody1()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: void setBodies(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: void clearUserCache(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: int getNumContacts()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: void setNumContacts(int)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: com.badlogic.gdx.physics.bullet.collision.btManifoldPoint getContactPoint(int)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: float getContactBreakingThreshold()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: float getContactProcessingThreshold()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: void setContactBreakingThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: void setContactProcessingThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: int getCacheEntry(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: int addManifoldPoint(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,boolean)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: int addManifoldPoint(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: void removeContactPoint(int)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: void replaceContactPoint(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: boolean validContactDistance(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: void refreshContactPoints(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold: void clearManifold()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: btPersistentManifoldArray(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: btPersistentManifoldArray(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: void finalize()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: void delete()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: btPersistentManifoldArray()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: btPersistentManifoldArray(com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: int size()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: com.badlogic.gdx.physics.bullet.collision.btPersistentManifold at(int)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: void clear()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: void pop_back()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: void resizeNoInitialize(int)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: void resize(int,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: void resize(int)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold expandNonInitializing()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold expand(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold expand()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: void push_back(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: int capacity()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: void reserve(int)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: void swap(int,int)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: int findBinarySearch(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: int findLinearSearch(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: void remove(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: void initializeFromBuffer(long,int,int)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray: void copyFromArray(com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray$less
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray$less: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray$less: btPersistentManifoldArray$less(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray$less: btPersistentManifoldArray$less(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray$less: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray$less: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray$less)
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray$less: void finalize()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray$less: void delete()
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray$less: btPersistentManifoldArray$less()
com.badlogic.gdx.physics.bullet.collision.btPointCollector
com.badlogic.gdx.physics.bullet.collision.btPointCollector: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btPointCollector: btPointCollector(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPointCollector: btPointCollector(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPointCollector: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPointCollector: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPointCollector)
com.badlogic.gdx.physics.bullet.collision.btPointCollector: void finalize()
com.badlogic.gdx.physics.bullet.collision.btPointCollector: void delete()
com.badlogic.gdx.physics.bullet.collision.btPointCollector: void setNormalOnBInWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btPointCollector: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormalOnBInWorld()
com.badlogic.gdx.physics.bullet.collision.btPointCollector: void setPointInWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btPointCollector: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getPointInWorld()
com.badlogic.gdx.physics.bullet.collision.btPointCollector: void setDistance(float)
com.badlogic.gdx.physics.bullet.collision.btPointCollector: float getDistance()
com.badlogic.gdx.physics.bullet.collision.btPointCollector: void setHasResult(boolean)
com.badlogic.gdx.physics.bullet.collision.btPointCollector: boolean getHasResult()
com.badlogic.gdx.physics.bullet.collision.btPointCollector: btPointCollector()
com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping
com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping: btPolyhedralContactClipping(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping: btPolyhedralContactClipping(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping: void finalize()
com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping: void delete()
com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping: void clipHullAgainstHull(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,float,float,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping: void clipFaceAgainstHull(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,float,float,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping: boolean findSeparatingAxis(com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping: void clipFace(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping: btPolyhedralContactClipping()
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape: btPolyhedralConvexAabbCachingShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape: btPolyhedralConvexAabbCachingShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape: void getNonvirtualAabb(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape: void recalcLocalAabb()
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: btPolyhedralConvexShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: btPolyhedralConvexShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: boolean initializePolyhedralFeatures(int)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: boolean initializePolyhedralFeatures()
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron getConvexPolyhedron()
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: int getNumVertices()
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: int getNumEdges()
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: void getEdge(int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: void getVertex(int,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: int getNumPlanes()
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: void getPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape: boolean isInside(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius
com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius: btPositionAndRadius(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius: btPositionAndRadius(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius)
com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius: void finalize()
com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius: void delete()
com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius: void setPos(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getPos()
com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius: void setRadius(float)
com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius: float getRadius()
com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius: btPositionAndRadius()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: btQuantizedBvh(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: btQuantizedBvh(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: void finalize()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: void delete()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: btQuantizedBvh()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: void setQuantizationValues(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: void setQuantizationValues(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t getLeafNodeArray()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: void buildInternal()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: void reportAabbOverlappingNodex(com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: void reportRayOverlappingNodex(com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: void reportBoxCastOverlappingNodex(com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: void quantize(java.nio.IntBuffer,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: void quantizeWithClamp(java.nio.IntBuffer,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: com.badlogic.gdx.math.Vector3 unQuantize(java.nio.IntBuffer)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: void setTraversalMode(int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t getQuantizedNodeArray()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t getSubtreeInfoArray()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: long calculateSerializeBufferSize()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: boolean serialize(long,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh deSerializeInPlace(long,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: long getAlignmentSerializationPadding()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: int calculateSerializeBufferSizeNew()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: java.lang.String serialize(long,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: void deSerializeFloat(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: void deSerializeDouble(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: boolean isQuantized()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh$btTraversalMode
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh$btTraversalMode: int TRAVERSAL_STACKLESS
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh$btTraversalMode: int TRAVERSAL_STACKLESS_CACHE_FRIENDLY
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh$btTraversalMode: int TRAVERSAL_RECURSIVE
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh$btTraversalMode: btQuantizedBvh$btTraversalMode()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: btQuantizedBvhDoubleData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: btQuantizedBvhDoubleData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: void delete()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: void setBvhAabbMin(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getBvhAabbMin()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: void setBvhAabbMax(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getBvhAabbMax()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: void setBvhQuantization(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getBvhQuantization()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: void setCurNodeIndex(int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: int getCurNodeIndex()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: void setUseQuantization(int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: int getUseQuantization()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: void setNumContiguousLeafNodes(int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: int getNumContiguousLeafNodes()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: void setNumQuantizedContiguousNodes(int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: int getNumQuantizedContiguousNodes()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: void setContiguousNodesPtr(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData getContiguousNodesPtr()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: void setQuantizedContiguousNodesPtr(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData getQuantizedContiguousNodesPtr()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: void setTraversalMode(int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: int getTraversalMode()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: void setNumSubtreeHeaders(int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: int getNumSubtreeHeaders()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: void setSubTreeInfoPtr(com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData getSubTreeInfoPtr()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData: btQuantizedBvhDoubleData()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: btQuantizedBvhFloatData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: btQuantizedBvhFloatData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: void delete()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: void setBvhAabbMin(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getBvhAabbMin()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: void setBvhAabbMax(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getBvhAabbMax()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: void setBvhQuantization(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getBvhQuantization()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: void setCurNodeIndex(int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: int getCurNodeIndex()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: void setUseQuantization(int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: int getUseQuantization()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: void setNumContiguousLeafNodes(int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: int getNumContiguousLeafNodes()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: void setNumQuantizedContiguousNodes(int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: int getNumQuantizedContiguousNodes()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: void setContiguousNodesPtr(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData getContiguousNodesPtr()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: void setQuantizedContiguousNodesPtr(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData getQuantizedContiguousNodesPtr()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: void setSubTreeInfoPtr(com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData getSubTreeInfoPtr()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: void setTraversalMode(int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: int getTraversalMode()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: void setNumSubtreeHeaders(int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: int getNumSubtreeHeaders()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData: btQuantizedBvhFloatData()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: btQuantizedBvhNode(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: btQuantizedBvhNode(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: void finalize()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: void delete()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: void setQuantizedAabbMin(int[])
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: int[] getQuantizedAabbMin()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: void setQuantizedAabbMax(int[])
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: int[] getQuantizedAabbMax()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: void setEscapeIndexOrTriangleIndex(int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: int getEscapeIndexOrTriangleIndex()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: boolean isLeafNode()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: int getEscapeIndex()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: int getTriangleIndex()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: int getPartId()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode: btQuantizedBvhNode()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData: btQuantizedBvhNodeData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData: btQuantizedBvhNodeData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData: void delete()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData: void setQuantizedAabbMin(int[])
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData: int[] getQuantizedAabbMin()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData: void setQuantizedAabbMax(int[])
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData: int[] getQuantizedAabbMax()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData: void setEscapeIndexOrTriangleIndex(int)
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData: int getEscapeIndexOrTriangleIndex()
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData: btQuantizedBvhNodeData()
com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape
com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape: btScaledBvhTriangleMeshShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape: btScaledBvhTriangleMeshShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape: btScaledBvhTriangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape: com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape getChildShape()
com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData
com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData: btScaledTriangleMeshShapeData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData: btScaledTriangleMeshShapeData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData)
com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData: void delete()
com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData: void setTrimeshShapeData(com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData)
com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData: com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData getTrimeshShapeData()
com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData: void setLocalScaling(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLocalScaling()
com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData: btScaledTriangleMeshShapeData()
com.badlogic.gdx.physics.bullet.collision.btShapeHull
com.badlogic.gdx.physics.bullet.collision.btShapeHull: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btShapeHull: btShapeHull(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btShapeHull: btShapeHull(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btShapeHull: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btShapeHull: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btShapeHull)
com.badlogic.gdx.physics.bullet.collision.btShapeHull: void finalize()
com.badlogic.gdx.physics.bullet.collision.btShapeHull: void delete()
com.badlogic.gdx.physics.bullet.collision.btShapeHull: btShapeHull(com.badlogic.gdx.physics.bullet.collision.btConvexShape)
com.badlogic.gdx.physics.bullet.collision.btShapeHull: boolean buildHull(float)
com.badlogic.gdx.physics.bullet.collision.btShapeHull: int numTriangles()
com.badlogic.gdx.physics.bullet.collision.btShapeHull: int numVertices()
com.badlogic.gdx.physics.bullet.collision.btShapeHull: int numIndices()
com.badlogic.gdx.physics.bullet.collision.btShapeHull: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVertexPointer()
com.badlogic.gdx.physics.bullet.collision.btShapeHull: java.nio.LongBuffer getIndexPointer()
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData: btShortIntIndexData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData: btShortIntIndexData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData)
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData: void delete()
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData: void setValue(short)
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData: short getValue()
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData: void setPad(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData: java.lang.String getPad()
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData: btShortIntIndexData()
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData: btShortIntIndexTripletData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData: btShortIntIndexTripletData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData)
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData: void delete()
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData: void setValues(short[])
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData: short[] getValues()
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData: void setPad(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData: java.lang.String getPad()
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData: btShortIntIndexTripletData()
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: btSimpleBroadphase(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: btSimpleBroadphase(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: void finalize()
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: void delete()
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: btSimpleBroadphase(int,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: btSimpleBroadphase(int)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: btSimpleBroadphase()
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: boolean aabbOverlap(com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getOverlappingPairCache()
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase: boolean testAabbOverlap(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy: btSimpleBroadphaseProxy(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy: btSimpleBroadphaseProxy(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy: void finalize()
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy: void delete()
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy: void setNextFree(int)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy: int getNextFree()
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy: btSimpleBroadphaseProxy()
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy: btSimpleBroadphaseProxy(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,long,short,short,long)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy: void SetNextFree(int)
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy: int GetNextFree()
com.badlogic.gdx.physics.bullet.collision.btSimplePair
com.badlogic.gdx.physics.bullet.collision.btSimplePair: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btSimplePair: btSimplePair(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSimplePair: btSimplePair(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSimplePair: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSimplePair: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSimplePair)
com.badlogic.gdx.physics.bullet.collision.btSimplePair: void finalize()
com.badlogic.gdx.physics.bullet.collision.btSimplePair: void delete()
com.badlogic.gdx.physics.bullet.collision.btSimplePair: btSimplePair(int,int)
com.badlogic.gdx.physics.bullet.collision.btSimplePair: void setIndexA(int)
com.badlogic.gdx.physics.bullet.collision.btSimplePair: int getIndexA()
com.badlogic.gdx.physics.bullet.collision.btSimplePair: void setIndexB(int)
com.badlogic.gdx.physics.bullet.collision.btSimplePair: int getIndexB()
com.badlogic.gdx.physics.bullet.collision.btSimplePair: void setUserPointer(long)
com.badlogic.gdx.physics.bullet.collision.btSimplePair: long getUserPointer()
com.badlogic.gdx.physics.bullet.collision.btSimplePair: void setUserValue(int)
com.badlogic.gdx.physics.bullet.collision.btSimplePair: int getUserValue()
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: btSimulationIslandManager(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: btSimulationIslandManager(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager)
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: void finalize()
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: void delete()
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: btSimulationIslandManager()
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: void initUnionFind(int)
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: com.badlogic.gdx.physics.bullet.collision.btUnionFind getUnionFind()
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: void updateActivationState(com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: void storeIslandActivationState(com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: void findUnions(com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: void buildAndProcessIslands(com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback)
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: void buildIslands(com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: boolean getSplitIslands()
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager: void setSplitIslands(boolean)
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback: btSimulationIslandManager$IslandCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback: btSimulationIslandManager$IslandCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback)
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback: void processIsland(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject,int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold,int,int)
com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache
com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache: btSortedOverlappingPairCache(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache: btSortedOverlappingPairCache(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache)
com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache: void finalize()
com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache: void delete()
com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache: btSortedOverlappingPairCache()
com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache: boolean needsBroadphaseCollision(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache: com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray getOverlappingPairArray()
com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache: com.badlogic.gdx.physics.bullet.collision.btBroadphasePair getOverlappingPairArrayPtr()
com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache: com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback getOverlapFilterCallback()
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm: btSphereBoxCollisionAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm: btSphereBoxCollisionAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm: btSphereBoxCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm: boolean getSphereDistance(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,com.badlogic.gdx.math.Vector3,float,float)
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm: float getSpherePenetration(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm$CreateFunc
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm$CreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm$CreateFunc: btSphereBoxCollisionAlgorithm$CreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm$CreateFunc: btSphereBoxCollisionAlgorithm$CreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm$CreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm$CreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm$CreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm$CreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm$CreateFunc: btSphereBoxCollisionAlgorithm$CreateFunc()
com.badlogic.gdx.physics.bullet.collision.btSphereShape
com.badlogic.gdx.physics.bullet.collision.btSphereShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btSphereShape: btSphereShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereShape: btSphereShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSphereShape)
com.badlogic.gdx.physics.bullet.collision.btSphereShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btSphereShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btSphereShape: btSphereShape(float)
com.badlogic.gdx.physics.bullet.collision.btSphereShape: float getRadius()
com.badlogic.gdx.physics.bullet.collision.btSphereShape: void setUnscaledRadius(float)
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm: btSphereSphereCollisionAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm: btSphereSphereCollisionAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm: btSphereSphereCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm: btSphereSphereCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc: btSphereSphereCollisionAlgorithm$CreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc: btSphereSphereCollisionAlgorithm$CreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc: com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc: btSphereSphereCollisionAlgorithm$CreateFunc()
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm: btSphereTriangleCollisionAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm: btSphereTriangleCollisionAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm: btSphereTriangleCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm: btSphereTriangleCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo)
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm$CreateFunc
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm$CreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm$CreateFunc: btSphereTriangleCollisionAlgorithm$CreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm$CreateFunc: btSphereTriangleCollisionAlgorithm$CreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm$CreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm$CreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm$CreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm$CreateFunc: void delete()
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm$CreateFunc: btSphereTriangleCollisionAlgorithm$CreateFunc()
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape: btStaticPlaneShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape: btStaticPlaneShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape)
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape: btStaticPlaneShape(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape: com.badlogic.gdx.math.Vector3 getPlaneNormal()
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape: float getPlaneConstant()
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: btStaticPlaneShapeData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: btStaticPlaneShapeData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData)
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: void delete()
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: void setCollisionShapeData(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData getCollisionShapeData()
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: void setLocalScaling(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLocalScaling()
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: void setPlaneNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getPlaneNormal()
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: void setPlaneConstant(float)
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: float getPlaneConstant()
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: void setPad(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: java.lang.String getPad()
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData: btStaticPlaneShapeData()
com.badlogic.gdx.physics.bullet.collision.btStorageResult
com.badlogic.gdx.physics.bullet.collision.btStorageResult: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btStorageResult: btStorageResult(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btStorageResult: btStorageResult(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btStorageResult: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btStorageResult: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btStorageResult)
com.badlogic.gdx.physics.bullet.collision.btStorageResult: void finalize()
com.badlogic.gdx.physics.bullet.collision.btStorageResult: void delete()
com.badlogic.gdx.physics.bullet.collision.btStorageResult: void setNormalOnSurfaceB(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btStorageResult: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormalOnSurfaceB()
com.badlogic.gdx.physics.bullet.collision.btStorageResult: void setClosestPointInB(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btStorageResult: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getClosestPointInB()
com.badlogic.gdx.physics.bullet.collision.btStorageResult: void setDistance(float)
com.badlogic.gdx.physics.bullet.collision.btStorageResult: float getDistance()
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: btStridingMeshInterface(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: btStridingMeshInterface(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void finalize()
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void delete()
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void InternalProcessAllTriangles(com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void calculateAabbBruteForce(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void getLockedVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,int)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void getLockedVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void getLockedReadOnlyVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,int)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void getLockedReadOnlyVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void unLockVertexBase(int)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void unLockReadOnlyVertexBase(int)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: int getNumSubParts()
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void preallocateVertices(int)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void preallocateIndices(int)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: boolean hasPremadeAabb()
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void setPremadeAabb(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void getPremadeAabb(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: com.badlogic.gdx.math.Vector3 getScaling()
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: void setScaling(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: int calculateSerializeBufferSize()
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface: java.lang.String serialize(long,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: btStridingMeshInterfaceData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: btStridingMeshInterfaceData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: void delete()
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: void setMeshPartsPtr(com.badlogic.gdx.physics.bullet.collision.btMeshPartData)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: com.badlogic.gdx.physics.bullet.collision.btMeshPartData getMeshPartsPtr()
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: void setScaling(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getScaling()
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: void setNumMeshParts(int)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: int getNumMeshParts()
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: void setPadding(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: java.lang.String getPadding()
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData: btStridingMeshInterfaceData()
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: btSubSimplexClosestResult(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: btSubSimplexClosestResult(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult)
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: void finalize()
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: void delete()
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: void setClosestPointOnSimplex(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getClosestPointOnSimplex()
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: void setUsedVertices(com.badlogic.gdx.physics.bullet.collision.btUsageBitfield)
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: com.badlogic.gdx.physics.bullet.collision.btUsageBitfield getUsedVertices()
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: void setBarycentricCoords(float[])
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: float[] getBarycentricCoords()
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: void setDegenerate(boolean)
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: boolean getDegenerate()
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: void reset()
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: boolean isValid()
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: void setBarycentricCoordinates(float,float,float,float)
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: void setBarycentricCoordinates(float,float,float)
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: void setBarycentricCoordinates(float,float)
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: void setBarycentricCoordinates(float)
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: void setBarycentricCoordinates()
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult: btSubSimplexClosestResult()
com.badlogic.gdx.physics.bullet.collision.btSubsimplexConvexCast
com.badlogic.gdx.physics.bullet.collision.btSubsimplexConvexCast: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btSubsimplexConvexCast: btSubsimplexConvexCast(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSubsimplexConvexCast: btSubsimplexConvexCast(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSubsimplexConvexCast: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btSubsimplexConvexCast: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSubsimplexConvexCast)
com.badlogic.gdx.physics.bullet.collision.btSubsimplexConvexCast: void finalize()
com.badlogic.gdx.physics.bullet.collision.btSubsimplexConvexCast: void delete()
com.badlogic.gdx.physics.bullet.collision.btSubsimplexConvexCast: btSubsimplexConvexCast(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.btTriangle
com.badlogic.gdx.physics.bullet.collision.btTriangle: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btTriangle: btTriangle(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangle: btTriangle(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangle: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangle: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangle)
com.badlogic.gdx.physics.bullet.collision.btTriangle: void finalize()
com.badlogic.gdx.physics.bullet.collision.btTriangle: void delete()
com.badlogic.gdx.physics.bullet.collision.btTriangle: void setVertex0(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btTriangle: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVertex0()
com.badlogic.gdx.physics.bullet.collision.btTriangle: void setVertex1(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btTriangle: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVertex1()
com.badlogic.gdx.physics.bullet.collision.btTriangle: void setVertex2(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btTriangle: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVertex2()
com.badlogic.gdx.physics.bullet.collision.btTriangle: void setPartId(int)
com.badlogic.gdx.physics.bullet.collision.btTriangle: int getPartId()
com.badlogic.gdx.physics.bullet.collision.btTriangle: void setTriangleIndex(int)
com.badlogic.gdx.physics.bullet.collision.btTriangle: int getTriangleIndex()
com.badlogic.gdx.physics.bullet.collision.btTriangle: btTriangle()
com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer
com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer: btTriangleBuffer(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer: btTriangleBuffer(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer)
com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer: void finalize()
com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer: void delete()
com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer: int getNumTriangles()
com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer: com.badlogic.gdx.physics.bullet.collision.btTriangle getTriangle(int)
com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer: void clearBuffer()
com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer: btTriangleBuffer()
com.badlogic.gdx.physics.bullet.collision.btTriangleCallback
com.badlogic.gdx.physics.bullet.collision.btTriangleCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btTriangleCallback: btTriangleCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleCallback: btTriangleCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleCallback)
com.badlogic.gdx.physics.bullet.collision.btTriangleCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.btTriangleCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.btTriangleCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.btTriangleCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.btTriangleCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.btTriangleCallback: void processTriangle(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int)
com.badlogic.gdx.physics.bullet.collision.btTriangleCallback: btTriangleCallback()
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: btTriangleConvexcastCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: btTriangleConvexcastCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback)
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: void setConvexShape(com.badlogic.gdx.physics.bullet.collision.btConvexShape)
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: com.badlogic.gdx.physics.bullet.collision.btConvexShape getConvexShape()
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: void setConvexShapeFrom(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: com.badlogic.gdx.physics.bullet.linearmath.btTransform getConvexShapeFrom()
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: void setConvexShapeTo(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: com.badlogic.gdx.physics.bullet.linearmath.btTransform getConvexShapeTo()
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: void setTriangleToWorld(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: com.badlogic.gdx.physics.bullet.linearmath.btTransform getTriangleToWorld()
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: void setHitFraction(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: float getHitFraction()
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: void setTriangleCollisionMargin(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: float getTriangleCollisionMargin()
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: void setAllowedPenetration(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: float getAllowedPenetration()
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: btTriangleConvexcastCallback(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,float)
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: void processTriangle(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int)
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback: float reportHit(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,int,int)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: com.badlogic.gdx.utils.Array instances
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: com.badlogic.gdx.utils.Array meshes
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: btTriangleIndexVertexArray(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: btTriangleIndexVertexArray(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: void finalize()
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: void delete()
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: boolean compare(com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray getInstance(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray obtain(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: btTriangleIndexVertexArray(com.badlogic.gdx.graphics.g3d.model.MeshPart)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: btTriangleIndexVertexArray(java.lang.Iterable)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: int getIndexedMeshCount()
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: com.badlogic.gdx.physics.bullet.collision.btIndexedMesh getIndexedMesh(int)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray addMeshPart(com.badlogic.gdx.graphics.g3d.model.MeshPart)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray addMeshParts(com.badlogic.gdx.graphics.g3d.model.MeshPart[])
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray addMeshParts(java.lang.Iterable)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray addNodeParts(java.lang.Iterable)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray addIndexedMesh(com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray addIndexedMesh(com.badlogic.gdx.physics.bullet.collision.btIndexedMesh)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: void dispose()
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: btTriangleIndexVertexArray()
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: void internalAddIndexedMesh(com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: void internalAddIndexedMesh(com.badlogic.gdx.physics.bullet.collision.btIndexedMesh)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: void getLockedVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,int)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: void getLockedVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: void getLockedReadOnlyVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,int)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: void getLockedReadOnlyVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t getIndexedMeshArray()
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: btTriangleIndexVertexMaterialArray(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: btTriangleIndexVertexMaterialArray(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: void finalize()
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: void delete()
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: btTriangleIndexVertexMaterialArray()
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: long SwigConstructbtTriangleIndexVertexMaterialArray(int,java.nio.IntBuffer,int,int,java.nio.FloatBuffer,int,int,java.nio.ByteBuffer,int,java.nio.IntBuffer,int)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: btTriangleIndexVertexMaterialArray(int,java.nio.IntBuffer,int,int,java.nio.FloatBuffer,int,int,java.nio.ByteBuffer,int,java.nio.IntBuffer,int)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: void addMaterialProperties(com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: void addMaterialProperties(com.badlogic.gdx.physics.bullet.collision.btMaterialProperties)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: void getLockedMaterialBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,int)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: void getLockedMaterialBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: void getLockedReadOnlyMaterialBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,int)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: void getLockedReadOnlyMaterialBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType)
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: btTriangleInfo(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: btTriangleInfo(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleInfo)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: void finalize()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: void delete()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: btTriangleInfo()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: void setFlags(int)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: int getFlags()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: void setEdgeV0V1Angle(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: float getEdgeV0V1Angle()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: void setEdgeV1V2Angle(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: float getEdgeV1V2Angle()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: void setEdgeV2V0Angle(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo: float getEdgeV2V0Angle()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: btTriangleInfoData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: btTriangleInfoData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: void delete()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: void setFlags(int)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: int getFlags()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: void setEdgeV0V1Angle(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: float getEdgeV0V1Angle()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: void setEdgeV1V2Angle(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: float getEdgeV1V2Angle()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: void setEdgeV2V0Angle(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: float getEdgeV2V0Angle()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData: btTriangleInfoData()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: btTriangleInfoMap(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: btTriangleInfoMap(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: void finalize()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: void delete()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: void setConvexEpsilon(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: float getConvexEpsilon()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: void setPlanarEpsilon(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: float getPlanarEpsilon()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: void setEqualVertexThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: float getEqualVertexThreshold()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: void setEdgeDistanceThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: float getEdgeDistanceThreshold()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: void setMaxEdgeAngleThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: float getMaxEdgeAngleThreshold()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: void setZeroAreaThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: float getZeroAreaThreshold()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: btTriangleInfoMap()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: int calculateSerializeBufferSize()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: java.lang.String serialize(long,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap: void deSerialize(com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: btTriangleInfoMapData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: btTriangleInfoMapData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void delete()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void setHashTablePtr(java.nio.IntBuffer)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: java.nio.IntBuffer getHashTablePtr()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void setNextPtr(java.nio.IntBuffer)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: java.nio.IntBuffer getNextPtr()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void setValueArrayPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData getValueArrayPtr()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void setKeyArrayPtr(java.nio.IntBuffer)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: java.nio.IntBuffer getKeyArrayPtr()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void setConvexEpsilon(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: float getConvexEpsilon()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void setPlanarEpsilon(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: float getPlanarEpsilon()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void setEqualVertexThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: float getEqualVertexThreshold()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void setEdgeDistanceThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: float getEdgeDistanceThreshold()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void setZeroAreaThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: float getZeroAreaThreshold()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void setNextSize(int)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: int getNextSize()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void setHashTableSize(int)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: int getHashTableSize()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void setNumValues(int)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: int getNumValues()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void setNumKeys(int)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: int getNumKeys()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void setPadding(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: java.lang.String getPadding()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: btTriangleInfoMapData()
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData: void <clinit>()
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: btTriangleMesh(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: btTriangleMesh(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleMesh)
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: void finalize()
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: void delete()
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: void setWeldingThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: float getWeldingThreshold()
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: btTriangleMesh(boolean,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: btTriangleMesh(boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: btTriangleMesh()
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: boolean getUse32bitIndices()
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: boolean getUse4componentVertices()
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: void addTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: void addTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: int getNumTriangles()
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: int findOrAddVertex(com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh: void addIndex(int)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape: btTriangleMeshShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape: btTriangleMeshShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape: com.badlogic.gdx.math.Vector3 localGetSupportingVertex(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape: com.badlogic.gdx.math.Vector3 localGetSupportingVertexWithoutMargin(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape: void recalcLocalAabb()
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape: com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface getMeshInterface()
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape: com.badlogic.gdx.math.Vector3 getLocalAabbMin()
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape: com.badlogic.gdx.math.Vector3 getLocalAabbMax()
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: btTriangleMeshShapeData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: btTriangleMeshShapeData(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: void finalize()
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: void delete()
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: void setCollisionShapeData(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData getCollisionShapeData()
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: void setMeshInterface(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData getMeshInterface()
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: void setQuantizedFloatBvh(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData getQuantizedFloatBvh()
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: void setQuantizedDoubleBvh(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData getQuantizedDoubleBvh()
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: void setTriangleInfoMap(com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData getTriangleInfoMap()
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: void setCollisionMargin(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: float getCollisionMargin()
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: void setPad3(java.lang.String)
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: java.lang.String getPad3()
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData: btTriangleMeshShapeData()
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: btTriangleRaycastCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: btTriangleRaycastCallback(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback)
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: void finalize()
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: void delete()
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: void setFrom(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getFrom()
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: void setTo(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getTo()
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: void setFlags(long)
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: long getFlags()
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: void setHitFraction(float)
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: float getHitFraction()
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: btTriangleRaycastCallback(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long)
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: btTriangleRaycastCallback(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: void processTriangle(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int)
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback: float reportHit(com.badlogic.gdx.math.Vector3,float,int,int)
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback$EFlags
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback$EFlags: int kF_None
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback$EFlags: int kF_FilterBackfaces
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback$EFlags: int kF_KeepUnflippedNormal
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback$EFlags: int kF_UseSubSimplexConvexCastRaytest
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback$EFlags: int kF_Terminator
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback$EFlags: btTriangleRaycastCallback$EFlags()
com.badlogic.gdx.physics.bullet.collision.btTriangleShape
com.badlogic.gdx.physics.bullet.collision.btTriangleShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btTriangleShape: btTriangleShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleShape: btTriangleShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btTriangleShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleShape)
com.badlogic.gdx.physics.bullet.collision.btTriangleShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btTriangleShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btTriangleShape: void setVertices1(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btTriangleShape: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVertices1()
com.badlogic.gdx.physics.bullet.collision.btTriangleShape: com.badlogic.gdx.math.Vector3 getVertexPtr(int)
com.badlogic.gdx.physics.bullet.collision.btTriangleShape: btTriangleShape()
com.badlogic.gdx.physics.bullet.collision.btTriangleShape: btTriangleShape(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btTriangleShape: void calcNormal(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btTriangleShape: void getPlaneEquation(int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape
com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape: btUniformScalingShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape: btUniformScalingShape(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape)
com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape: void finalize()
com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape: void delete()
com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape: btUniformScalingShape(com.badlogic.gdx.physics.bullet.collision.btConvexShape,float)
com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape: float getUniformScalingFactor()
com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape: com.badlogic.gdx.physics.bullet.collision.btConvexShape getChildShape()
com.badlogic.gdx.physics.bullet.collision.btUnionFind
com.badlogic.gdx.physics.bullet.collision.btUnionFind: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btUnionFind: btUnionFind(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btUnionFind: btUnionFind(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btUnionFind: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btUnionFind: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btUnionFind)
com.badlogic.gdx.physics.bullet.collision.btUnionFind: void finalize()
com.badlogic.gdx.physics.bullet.collision.btUnionFind: void delete()
com.badlogic.gdx.physics.bullet.collision.btUnionFind: btUnionFind()
com.badlogic.gdx.physics.bullet.collision.btUnionFind: void sortIslands()
com.badlogic.gdx.physics.bullet.collision.btUnionFind: void reset(int)
com.badlogic.gdx.physics.bullet.collision.btUnionFind: int getNumElements()
com.badlogic.gdx.physics.bullet.collision.btUnionFind: boolean isRoot(int)
com.badlogic.gdx.physics.bullet.collision.btUnionFind: com.badlogic.gdx.physics.bullet.collision.btElement getElement(int)
com.badlogic.gdx.physics.bullet.collision.btUnionFind: void allocate(int)
com.badlogic.gdx.physics.bullet.collision.btUnionFind: void Free()
com.badlogic.gdx.physics.bullet.collision.btUnionFind: int find(int,int)
com.badlogic.gdx.physics.bullet.collision.btUnionFind: void unite(int,int)
com.badlogic.gdx.physics.bullet.collision.btUnionFind: int find(int)
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: btUsageBitfield(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: btUsageBitfield(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btUsageBitfield)
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: void finalize()
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: void delete()
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: btUsageBitfield()
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: void reset()
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: void setUsedVertexA(int)
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: int getUsedVertexA()
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: void setUsedVertexB(int)
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: int getUsedVertexB()
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: void setUsedVertexC(int)
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: int getUsedVertexC()
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: void setUsedVertexD(int)
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: int getUsedVertexD()
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: void setUnused1(int)
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: int getUnused1()
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: void setUnused2(int)
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: int getUnused2()
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: void setUnused3(int)
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: int getUnused3()
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: void setUnused4(int)
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield: int getUnused4()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: long swigCPtr
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: btVoronoiSimplexSolver(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: btVoronoiSimplexSolver(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: long getCPtr(com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void finalize()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void delete()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void setNumVertices(int)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: int getNumVertices()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void setSimplexVectorW(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getSimplexVectorW()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void setSimplexPointsP(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getSimplexPointsP()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void setSimplexPointsQ(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getSimplexPointsQ()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void setCachedP1(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getCachedP1()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void setCachedP2(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getCachedP2()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void setCachedV(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getCachedV()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void setLastW(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLastW()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void setEqualVertexThreshold(float)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: float getEqualVertexThreshold()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void setCachedValidClosest(boolean)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: boolean getCachedValidClosest()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void setCachedBC(com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult getCachedBC()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void setNeedsUpdate(boolean)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: boolean getNeedsUpdate()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void removeVertex(int)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void reduceVertices(com.badlogic.gdx.physics.bullet.collision.btUsageBitfield)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: boolean updateClosestVectorAndPoints()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: boolean closestPtPointTetrahedron(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: int pointOutsideOfPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: boolean closestPtPointTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: btVoronoiSimplexSolver()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void reset()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void addVertex(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: boolean closest(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: float maxVertex()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: boolean fullSimplex()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: int getSimplex(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: boolean inSimplex(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void backup_closest(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: boolean emptySimplex()
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver: void compute_points(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.Dynamics
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: com.badlogic.gdx.math.Vector3 staticVector3
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: com.badlogic.gdx.utils.Pool poolVector3
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: com.badlogic.gdx.math.Quaternion staticQuaternion
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: com.badlogic.gdx.utils.Pool poolQuaternion
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: com.badlogic.gdx.math.Matrix3 staticMatrix3
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: com.badlogic.gdx.utils.Pool poolMatrix3
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: com.badlogic.gdx.math.Matrix4 staticMatrix4
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: com.badlogic.gdx.utils.Pool poolMatrix4
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: Dynamics()
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: void setGDeactivationTime(float)
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: float getGDeactivationTime()
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: void setGDisableDeactivation(boolean)
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: boolean getGDisableDeactivation()
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: float btAdjustAngleToLimits(float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: void InternalTickCallback_CB(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float)
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: float resolveSingleCollision(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: void resolveSingleBilateral(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float,float)
com.badlogic.gdx.physics.bullet.dynamics.Dynamics: void <clinit>()
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$1
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$1: Dynamics$1()
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$1: com.badlogic.gdx.math.Vector3 newObject()
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$1: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$2
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$2: Dynamics$2()
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$2: com.badlogic.gdx.math.Quaternion newObject()
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$2: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$3
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$3: Dynamics$3()
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$3: com.badlogic.gdx.math.Matrix3 newObject()
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$3: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$4
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$4: Dynamics$4()
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$4: com.badlogic.gdx.math.Matrix4 newObject()
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$4: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsConstants
com.badlogic.gdx.physics.bullet.dynamics.DynamicsConstants: java.lang.String btRigidBodyDataName
com.badlogic.gdx.physics.bullet.dynamics.DynamicsConstants: java.lang.String btTypedConstraintDataName
com.badlogic.gdx.physics.bullet.dynamics.DynamicsConstants: java.lang.String btSliderConstraintDataName
com.badlogic.gdx.physics.bullet.dynamics.DynamicsConstants: java.lang.String btPoint2PointConstraintDataName
com.badlogic.gdx.physics.bullet.dynamics.DynamicsConstants: java.lang.String btGeneric6DofConstraintDataName
com.badlogic.gdx.physics.bullet.dynamics.DynamicsConstants: int BT_6DOF_FLAGS_AXIS_SHIFT
com.badlogic.gdx.physics.bullet.dynamics.DynamicsConstants: java.lang.String btConeTwistConstraintDataName
com.badlogic.gdx.physics.bullet.dynamics.DynamicsConstants: java.lang.String btGeneric6DofSpringConstraintDataName
com.badlogic.gdx.physics.bullet.dynamics.DynamicsConstants: int _BT_USE_CENTER_LIMIT_
com.badlogic.gdx.physics.bullet.dynamics.DynamicsConstants: java.lang.String btHingeConstraintDataName
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: DynamicsJNI()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void gDeactivationTime_set(float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float gDeactivationTime_get()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void gDisableDeactivation_set(boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean gDisableDeactivation_get()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_mass_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_btRigidBodyConstructionInfo_mass_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_i_motionState_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBody_btRigidBodyConstructionInfo_i_motionState_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_startWorldTransform_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBody_btRigidBodyConstructionInfo_startWorldTransform_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_i_collisionShape_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBody_btRigidBodyConstructionInfo_i_collisionShape_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_localInertia_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBody_btRigidBodyConstructionInfo_localInertia_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_linearDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_btRigidBodyConstructionInfo_linearDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_angularDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_btRigidBodyConstructionInfo_angularDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_friction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_btRigidBodyConstructionInfo_friction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_rollingFriction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_btRigidBodyConstructionInfo_rollingFriction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_restitution_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_btRigidBodyConstructionInfo_restitution_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_linearSleepingThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_btRigidBodyConstructionInfo_linearSleepingThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_angularSleepingThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_btRigidBodyConstructionInfo_angularSleepingThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_additionalDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btRigidBody_btRigidBodyConstructionInfo_additionalDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_additionalDampingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_btRigidBodyConstructionInfo_additionalDampingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_additionalLinearDampingThresholdSqr_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_btRigidBodyConstructionInfo_additionalLinearDampingThresholdSqr_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_additionalAngularDampingThresholdSqr_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_btRigidBodyConstructionInfo_additionalAngularDampingThresholdSqr_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_btRigidBodyConstructionInfo_additionalAngularDampingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_btRigidBodyConstructionInfo_additionalAngularDampingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btRigidBody_btRigidBodyConstructionInfo__SWIG_0(boolean,float,long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btRigidBody_btRigidBodyConstructionInfo__SWIG_1(boolean,float,long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btRigidBody_btRigidBodyConstructionInfo(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btRigidBody(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_proceedToTransform(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_predictIntegratedTransform(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_saveKinematicState(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_applyGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_setGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btRigidBody_getGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_setDamping(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_getLinearDamping(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_getAngularDamping(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_getLinearSleepingThreshold(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_getAngularSleepingThreshold(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_applyDamping(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_setMassProps(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btRigidBody_getLinearFactor(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_setLinearFactor(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_getInvMass(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix3 btRigidBody_getInvInertiaTensorWorld(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_integrateVelocities(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_setCenterOfMassTransform(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_applyCentralForce(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btRigidBody_getTotalForce(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btRigidBody_getTotalTorque(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btRigidBody_getInvInertiaDiagLocal(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_setInvInertiaDiagLocal(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_setSleepingThresholds(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_applyTorque(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_applyForce(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_applyCentralImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_applyTorqueImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_applyImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_clearForces(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_updateInertiaTensor(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btRigidBody_getCenterOfMassPosition(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Quaternion btRigidBody_getOrientation(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btRigidBody_getCenterOfMassTransform(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btRigidBody_getLinearVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btRigidBody_getAngularVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_setLinearVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_setAngularVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btRigidBody_getVelocityInLocalPoint(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_translate(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_getAabb(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_computeImpulseDenominator(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBody_computeAngularImpulseDenominator(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_updateDeactivation(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btRigidBody_wantsSleeping(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBody_getBroadphaseProxy__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_setNewBroadphaseProxy(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBody_internalGetMotionState__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_internalSetMotionState(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_contactSolverType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btRigidBody_contactSolverType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_frictionSolverType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btRigidBody_frictionSolverType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_setAngularFactor__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_setAngularFactor__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btRigidBody_getAngularFactor(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btRigidBody_isInWorld(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btRigidBody_checkCollideWithOverride(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_addConstraintRef(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_removeConstraintRef(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBody_getConstraintRef(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btRigidBody_getNumConstraintRefs(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBody_setFlags(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btRigidBody_getFlags(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btRigidBody_computeGyroscopicForce(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btRigidBody__SWIG_0(boolean,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btRigidBody__SWIG_1(boolean,float,long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btRigidBody__SWIG_2(boolean,float,long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_collisionObjectData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyFloatData_collisionObjectData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_invInertiaTensorWorld_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyFloatData_invInertiaTensorWorld_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_linearVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyFloatData_linearVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_angularVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyFloatData_angularVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_angularFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyFloatData_angularFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_linearFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyFloatData_linearFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_gravity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyFloatData_gravity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_gravity_acceleration_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyFloatData_gravity_acceleration_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_invInertiaLocal_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyFloatData_invInertiaLocal_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_totalForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyFloatData_totalForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_totalTorque_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyFloatData_totalTorque_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_inverseMass_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBodyFloatData_inverseMass_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_linearDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBodyFloatData_linearDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_angularDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBodyFloatData_angularDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_additionalDampingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBodyFloatData_additionalDampingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_additionalLinearDampingThresholdSqr_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBodyFloatData_additionalLinearDampingThresholdSqr_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_additionalAngularDampingThresholdSqr_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBodyFloatData_additionalAngularDampingThresholdSqr_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_additionalAngularDampingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBodyFloatData_additionalAngularDampingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_linearSleepingThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBodyFloatData_linearSleepingThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_angularSleepingThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRigidBodyFloatData_angularSleepingThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyFloatData_additionalDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btRigidBodyFloatData_additionalDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btRigidBodyFloatData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btRigidBodyFloatData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_collisionObjectData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyDoubleData_collisionObjectData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_invInertiaTensorWorld_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyDoubleData_invInertiaTensorWorld_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_linearVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyDoubleData_linearVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_angularVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyDoubleData_angularVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_angularFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyDoubleData_angularFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_linearFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyDoubleData_linearFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_gravity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyDoubleData_gravity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_gravity_acceleration_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyDoubleData_gravity_acceleration_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_invInertiaLocal_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyDoubleData_invInertiaLocal_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_totalForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyDoubleData_totalForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_totalTorque_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBodyDoubleData_totalTorque_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_inverseMass_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btRigidBodyDoubleData_inverseMass_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_linearDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btRigidBodyDoubleData_linearDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_angularDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btRigidBodyDoubleData_angularDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_additionalDampingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btRigidBodyDoubleData_additionalDampingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_additionalLinearDampingThresholdSqr_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btRigidBodyDoubleData_additionalLinearDampingThresholdSqr_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_additionalAngularDampingThresholdSqr_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btRigidBodyDoubleData_additionalAngularDampingThresholdSqr_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_additionalAngularDampingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btRigidBodyDoubleData_additionalAngularDampingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_linearSleepingThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btRigidBodyDoubleData_linearSleepingThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_angularSleepingThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btRigidBodyDoubleData_angularSleepingThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_additionalDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btRigidBodyDoubleData_additionalDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRigidBodyDoubleData_padding_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: java.lang.String btRigidBodyDoubleData_padding_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btRigidBodyDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btRigidBodyDoubleData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btJointFeedback_appliedForceBodyA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btJointFeedback_appliedForceBodyA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btJointFeedback_appliedTorqueBodyA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btJointFeedback_appliedTorqueBodyA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btJointFeedback_appliedForceBodyB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btJointFeedback_appliedForceBodyB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btJointFeedback_appliedTorqueBodyB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btJointFeedback_appliedTorqueBodyB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btJointFeedback()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btJointFeedback(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btTypedConstraint(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo1_numConstraintRows_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraint_btConstraintInfo1_numConstraintRows_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo1_nub_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraint_btConstraintInfo1_nub_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btTypedConstraint_btConstraintInfo1()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btTypedConstraint_btConstraintInfo1(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraint_getFixedBody()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo2_fps_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTypedConstraint_btConstraintInfo2_fps_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo2_erp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTypedConstraint_btConstraintInfo2_erp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo2_J1linearAxis_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraint_btConstraintInfo2_J1linearAxis_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo2_J1angularAxis_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraint_btConstraintInfo2_J1angularAxis_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo2_J2linearAxis_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraint_btConstraintInfo2_J2linearAxis_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo2_J2angularAxis_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraint_btConstraintInfo2_J2angularAxis_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo2_rowskip_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraint_btConstraintInfo2_rowskip_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo2_constraintError_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraint_btConstraintInfo2_constraintError_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo2_cfm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraint_btConstraintInfo2_cfm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo2_lowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraint_btConstraintInfo2_lowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo2_upperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraint_btConstraintInfo2_upperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo2_findex_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraint_btConstraintInfo2_findex_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo2_numIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraint_btConstraintInfo2_numIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_btConstraintInfo2_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTypedConstraint_btConstraintInfo2_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btTypedConstraint_btConstraintInfo2()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btTypedConstraint_btConstraintInfo2(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraint_getOverrideNumSolverIterations(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_setOverrideNumSolverIterations(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_buildJacobian(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_setupSolverConstraint(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,long,int,int,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_getInfo1(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_getInfo2(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_internalSetAppliedImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTypedConstraint_internalGetAppliedImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTypedConstraint_getBreakingImpulseThreshold(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_setBreakingImpulseThreshold(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btTypedConstraint_isEnabled(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_setEnabled(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_solveConstraintObsolete(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraint_getRigidBodyA__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraint_getRigidBodyB__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraint_getUserConstraintType(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_setUserConstraintType(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_setUserConstraintId(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraint_getUserConstraintId(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_setUserConstraintPtr(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraint_getUserConstraintPtr(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_setJointFeedback(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraint_getJointFeedback__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraint_getUid(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btTypedConstraint_needsFeedback(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_enableFeedback(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTypedConstraint_getAppliedImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraint_getConstraintType(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_setDbgDrawSize(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTypedConstraint_getDbgDrawSize(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_setParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,int,float,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraint_setParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,int,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTypedConstraint_getParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,int,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTypedConstraint_getParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraint_calculateSerializeBufferSize(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: java.lang.String btTypedConstraint_serialize(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,long,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btAdjustAngleToLimits(float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintFloatData_rbA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraintFloatData_rbA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintFloatData_rbB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraintFloatData_rbB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintFloatData_name_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: java.lang.String btTypedConstraintFloatData_name_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintFloatData_objectType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintFloatData_objectType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintFloatData_userConstraintType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintFloatData_userConstraintType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintFloatData_userConstraintId_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintFloatData_userConstraintId_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintFloatData_needsFeedback_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintFloatData_needsFeedback_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintFloatData_appliedImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTypedConstraintFloatData_appliedImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintFloatData_dbgDrawSize_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTypedConstraintFloatData_dbgDrawSize_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintFloatData_disableCollisionsBetweenLinkedBodies_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintFloatData_disableCollisionsBetweenLinkedBodies_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintFloatData_overrideNumSolverIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintFloatData_overrideNumSolverIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintFloatData_breakingImpulseThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTypedConstraintFloatData_breakingImpulseThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintFloatData_isEnabled_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintFloatData_isEnabled_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btTypedConstraintFloatData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btTypedConstraintFloatData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintData_rbA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraintData_rbA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintData_rbB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraintData_rbB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintData_name_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: java.lang.String btTypedConstraintData_name_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintData_objectType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintData_objectType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintData_userConstraintType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintData_userConstraintType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintData_userConstraintId_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintData_userConstraintId_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintData_needsFeedback_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintData_needsFeedback_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintData_appliedImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTypedConstraintData_appliedImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintData_dbgDrawSize_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTypedConstraintData_dbgDrawSize_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintData_disableCollisionsBetweenLinkedBodies_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintData_disableCollisionsBetweenLinkedBodies_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintData_overrideNumSolverIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintData_overrideNumSolverIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintData_breakingImpulseThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTypedConstraintData_breakingImpulseThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintData_isEnabled_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintData_isEnabled_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btTypedConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btTypedConstraintData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintDoubleData_rbA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraintDoubleData_rbA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintDoubleData_rbB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraintDoubleData_rbB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintDoubleData_name_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: java.lang.String btTypedConstraintDoubleData_name_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintDoubleData_objectType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintDoubleData_objectType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintDoubleData_userConstraintType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintDoubleData_userConstraintType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintDoubleData_userConstraintId_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintDoubleData_userConstraintId_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintDoubleData_needsFeedback_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintDoubleData_needsFeedback_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintDoubleData_appliedImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btTypedConstraintDoubleData_appliedImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintDoubleData_dbgDrawSize_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btTypedConstraintDoubleData_dbgDrawSize_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintDoubleData_disableCollisionsBetweenLinkedBodies_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintDoubleData_disableCollisionsBetweenLinkedBodies_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintDoubleData_overrideNumSolverIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintDoubleData_overrideNumSolverIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintDoubleData_breakingImpulseThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btTypedConstraintDoubleData_breakingImpulseThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintDoubleData_isEnabled_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTypedConstraintDoubleData_isEnabled_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTypedConstraintDoubleData_padding_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: java.lang.String btTypedConstraintDoubleData_padding_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btTypedConstraintDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btTypedConstraintDoubleData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btAngularLimit()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btAngularLimit_set__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit,float,float,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btAngularLimit_set__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit,float,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btAngularLimit_set__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btAngularLimit_set__SWIG_3(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btAngularLimit_test(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btAngularLimit_getSoftness(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btAngularLimit_getBiasFactor(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btAngularLimit_getRelaxationFactor(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btAngularLimit_getCorrection(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btAngularLimit_getSign(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btAngularLimit_getHalfRange(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btAngularLimit_isLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btAngularLimit_fit(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btAngularLimit_getError(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btAngularLimit_getLow(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btAngularLimit_getHigh(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btAngularLimit(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btDynamicsWorld(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btDynamicsWorld_stepSimulation__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float,int,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btDynamicsWorld_stepSimulation__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btDynamicsWorld_stepSimulation__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_addConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_addConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_removeConstraint(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_addAction(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_removeAction(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_setGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btDynamicsWorld_getGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_synchronizeMotionStates(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_addRigidBody__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_addRigidBody__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,short,short)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_removeRigidBody(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_setConstraintSolver(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btDynamicsWorld_getConstraintSolver(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btDynamicsWorld_getNumConstraints(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btDynamicsWorld_getConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btDynamicsWorld_getWorldType(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_clearForces(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_setInternalTickCallback__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_setInternalTickCallback__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_setInternalTickCallback__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_setWorldUserInfo(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btDynamicsWorld_getWorldUserInfo(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btDynamicsWorld_getSolverInfo(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_addVehicle(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_removeVehicle(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_addCharacter(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorld_removeCharacter(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorldDoubleData_solverInfo_set(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData,long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btDynamicsWorldDoubleData_solverInfo_get(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorldDoubleData_gravity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btDynamicsWorldDoubleData_gravity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btDynamicsWorldDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btDynamicsWorldDoubleData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorldFloatData_solverInfo_set(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData,long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btDynamicsWorldFloatData_solverInfo_get(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDynamicsWorldFloatData_gravity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btDynamicsWorldFloatData_gravity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btDynamicsWorldFloatData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btDynamicsWorldFloatData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void InternalTickCallback_CB(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_InternalTickCallback__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_InternalTickCallback__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_InternalTickCallback__SWIG_2()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void InternalTickCallback_onInternalTick(long,com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback,long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void InternalTickCallback_onInternalTickSwigExplicitInternalTickCallback(long,com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback,long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void InternalTickCallback_detach__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void InternalTickCallback_attach__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback,long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void InternalTickCallback_attach__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void InternalTickCallback_detach__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_InternalTickCallback(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void InternalTickCallback_director_connect(com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void InternalTickCallback_change_ownership(com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btSimpleDynamicsWorld(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btSimpleDynamicsWorld(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btSimpleDynamicsWorld_stepSimulation__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld,float,int,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btSimpleDynamicsWorld_stepSimulation__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld,float,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btSimpleDynamicsWorld_stepSimulation__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSimpleDynamicsWorld_addRigidBody__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSimpleDynamicsWorld_addRigidBody__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,short,short)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btActionInterface(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btActionInterface_updateAction(long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btActionInterface_debugDraw(long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btDiscreteDynamicsWorld(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btDiscreteDynamicsWorld(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btDiscreteDynamicsWorld_stepSimulation__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,float,int,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btDiscreteDynamicsWorld_stepSimulation__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,float,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btDiscreteDynamicsWorld_stepSimulation__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDiscreteDynamicsWorld_synchronizeSingleMotionState(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDiscreteDynamicsWorld_addConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDiscreteDynamicsWorld_addConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btDiscreteDynamicsWorld_getSimulationIslandManager__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btDiscreteDynamicsWorld_getCollisionWorld(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDiscreteDynamicsWorld_addCollisionObject__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short,short)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDiscreteDynamicsWorld_addCollisionObject__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDiscreteDynamicsWorld_addCollisionObject__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDiscreteDynamicsWorld_addRigidBody__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDiscreteDynamicsWorld_addRigidBody__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,short,short)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDiscreteDynamicsWorld_debugDrawConstraint(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btDiscreteDynamicsWorld_getConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDiscreteDynamicsWorld_applyGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDiscreteDynamicsWorld_setNumTasks(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDiscreteDynamicsWorld_updateVehicles(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDiscreteDynamicsWorld_setSynchronizeAllMotionStates(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btDiscreteDynamicsWorld_getSynchronizeAllMotionStates(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDiscreteDynamicsWorld_setApplySpeculativeContactRestitution(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btDiscreteDynamicsWorld_getApplySpeculativeContactRestitution(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btDiscreteDynamicsWorld_setLatencyMotionStateInterpolation(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btDiscreteDynamicsWorld_getLatencyMotionStateInterpolation(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btCharacterControllerInterface(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btCharacterControllerInterface_setWalkDirection(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btCharacterControllerInterface_setVelocityForTimeInterval(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btCharacterControllerInterface_reset(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btCharacterControllerInterface_warp(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btCharacterControllerInterface_preStep(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btCharacterControllerInterface_playerStep(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btCharacterControllerInterface_canJump(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btCharacterControllerInterface_jump(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btCharacterControllerInterface_onGround(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btCharacterControllerInterface_setUpInterpolate(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btKinematicCharacterController__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,float,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btKinematicCharacterController__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btKinematicCharacterController(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btKinematicCharacterController_setUpAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btKinematicCharacterController_setFallSpeed(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btKinematicCharacterController_setJumpSpeed(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btKinematicCharacterController_setMaxJumpHeight(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btKinematicCharacterController_setGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btKinematicCharacterController_getGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btKinematicCharacterController_setMaxSlope(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btKinematicCharacterController_getMaxSlope(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btKinematicCharacterController_getGhostObject(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btKinematicCharacterController_setUseGhostSweepTest(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_tau_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_tau_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_friction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_friction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_timeStep_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_timeStep_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_restitution_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_restitution_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_numIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btContactSolverInfoData_numIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_maxErrorReduction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_maxErrorReduction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_sor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_sor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_erp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_erp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_erp2_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_erp2_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_globalCfm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_globalCfm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_splitImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btContactSolverInfoData_splitImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_splitImpulsePenetrationThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_splitImpulsePenetrationThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_splitImpulseTurnErp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_splitImpulseTurnErp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_linearSlop_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_linearSlop_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_warmstartingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_warmstartingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_solverMode_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btContactSolverInfoData_solverMode_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_restingContactRestitutionThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btContactSolverInfoData_restingContactRestitutionThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_minimumSolverBatchSize_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btContactSolverInfoData_minimumSolverBatchSize_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_maxGyroscopicForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_maxGyroscopicForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoData_singleAxisRollingFrictionThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoData_singleAxisRollingFrictionThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btContactSolverInfoData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btContactSolverInfoData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btContactSolverInfo()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btContactSolverInfo(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_tau_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_tau_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_friction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_friction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_timeStep_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_timeStep_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_restitution_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_restitution_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_maxErrorReduction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_maxErrorReduction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_sor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_sor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_erp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_erp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_erp2_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_erp2_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_globalCfm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_globalCfm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_splitImpulsePenetrationThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_splitImpulsePenetrationThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_splitImpulseTurnErp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_splitImpulseTurnErp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_linearSlop_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_linearSlop_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_warmstartingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_warmstartingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_maxGyroscopicForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_maxGyroscopicForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_singleAxisRollingFrictionThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btContactSolverInfoDoubleData_singleAxisRollingFrictionThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_numIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btContactSolverInfoDoubleData_numIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_solverMode_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btContactSolverInfoDoubleData_solverMode_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_restingContactRestitutionThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btContactSolverInfoDoubleData_restingContactRestitutionThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_minimumSolverBatchSize_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btContactSolverInfoDoubleData_minimumSolverBatchSize_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_splitImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btContactSolverInfoDoubleData_splitImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoDoubleData_padding_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: java.lang.String btContactSolverInfoDoubleData_padding_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btContactSolverInfoDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btContactSolverInfoDoubleData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_tau_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_tau_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_friction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_friction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_timeStep_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_timeStep_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_restitution_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_restitution_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_maxErrorReduction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_maxErrorReduction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_sor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_sor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_erp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_erp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_erp2_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_erp2_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_globalCfm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_globalCfm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_splitImpulsePenetrationThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_splitImpulsePenetrationThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_splitImpulseTurnErp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_splitImpulseTurnErp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_linearSlop_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_linearSlop_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_warmstartingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_warmstartingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_maxGyroscopicForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_maxGyroscopicForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_singleAxisRollingFrictionThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btContactSolverInfoFloatData_singleAxisRollingFrictionThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_numIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btContactSolverInfoFloatData_numIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_solverMode_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btContactSolverInfoFloatData_solverMode_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_restingContactRestitutionThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btContactSolverInfoFloatData_restingContactRestitutionThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_minimumSolverBatchSize_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btContactSolverInfoFloatData_minimumSolverBatchSize_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_splitImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btContactSolverInfoFloatData_splitImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactSolverInfoFloatData_padding_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: java.lang.String btContactSolverInfoFloatData_padding_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btContactSolverInfoFloatData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btContactSolverInfoFloatData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btConstraintSolver(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConstraintSolver_prepareSolve(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,int,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConstraintSolver_solveGroup(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,long,int,long,int,long,int,long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConstraintSolver_allSolved(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConstraintSolver_reset(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btConstraintSolver_getSolverType(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btSequentialImpulseConstraintSolver()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btSequentialImpulseConstraintSolver(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSequentialImpulseConstraintSolver_btRand2(long,com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btSequentialImpulseConstraintSolver_btRandInt2(long,com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSequentialImpulseConstraintSolver_setRandSeed(long,com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSequentialImpulseConstraintSolver_getRandSeed(long,com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_worldTransform_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverBody_worldTransform_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_deltaLinearVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverBody_deltaLinearVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_deltaAngularVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverBody_deltaAngularVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_angularFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverBody_angularFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_linearFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverBody_linearFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_invMass_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverBody_invMass_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_pushVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverBody_pushVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_turnVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverBody_turnVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_linearVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverBody_linearVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_angularVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverBody_angularVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_externalForceImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverBody_externalForceImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_externalTorqueImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverBody_externalTorqueImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_originalBody_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverBody_originalBody_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_getVelocityInLocalPointNoDelta(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_getVelocityInLocalPointObsolete(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_getAngularVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_applyImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_internalApplyPushImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btSolverBody_internalGetDeltaLinearVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btSolverBody_internalGetDeltaAngularVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btSolverBody_internalGetAngularFactor(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btSolverBody_internalGetInvMass(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_internalSetInvMass(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btSolverBody_internalGetPushVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btSolverBody_internalGetTurnVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_internalGetVelocityInLocalPointObsolete(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_internalGetAngularVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_internalApplyImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_writebackVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverBody_writebackVelocityAndTransform(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btSolverBody()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btSolverBody(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btSliderConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btSliderConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_getInfo1NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_getInfo2NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSliderConstraint_getRigidBodyA(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSliderConstraint_getRigidBodyB(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btSliderConstraint_getCalculatedTransformA(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btSliderConstraint_getCalculatedTransformB(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btSliderConstraint_getFrameOffsetA__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btSliderConstraint_getFrameOffsetB__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getLowerLinLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setLowerLinLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getUpperLinLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setUpperLinLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getLowerAngLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setLowerAngLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getUpperAngLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setUpperAngLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btSliderConstraint_getUseLinearReferenceFrameA(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getSoftnessDirLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getRestitutionDirLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getDampingDirLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getSoftnessDirAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getRestitutionDirAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getDampingDirAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getSoftnessLimLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getRestitutionLimLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getDampingLimLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getSoftnessLimAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getRestitutionLimAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getDampingLimAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getSoftnessOrthoLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getRestitutionOrthoLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getDampingOrthoLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getSoftnessOrthoAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getRestitutionOrthoAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getDampingOrthoAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setSoftnessDirLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setRestitutionDirLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setDampingDirLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setSoftnessDirAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setRestitutionDirAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setDampingDirAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setSoftnessLimLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setRestitutionLimLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setDampingLimLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setSoftnessLimAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setRestitutionLimAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setDampingLimAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setSoftnessOrthoLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setRestitutionOrthoLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setDampingOrthoLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setSoftnessOrthoAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setRestitutionOrthoAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setDampingOrthoAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setPoweredLinMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btSliderConstraint_getPoweredLinMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setTargetLinMotorVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getTargetLinMotorVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setMaxLinMotorForce(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getMaxLinMotorForce(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setPoweredAngMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btSliderConstraint_getPoweredAngMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setTargetAngMotorVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getTargetAngMotorVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setMaxAngMotorForce(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getMaxAngMotorForce(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getLinearPos(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getAngularPos(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btSliderConstraint_getSolveLinLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getLinDepth(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btSliderConstraint_getSolveAngLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getAngDepth(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_calculateTransforms(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_testLinLimits(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_testAngLimits(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btSliderConstraint_getAncorInA(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btSliderConstraint_getAncorInB(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btSliderConstraint_getUseFrameOffset(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setUseFrameOffset(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setFrames(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,int,float,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraint_setParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,int,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,int,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraint_getParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btSliderConstraint(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSliderConstraintData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintData_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSliderConstraintData_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintData_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSliderConstraintData_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintData_linearUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraintData_linearUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintData_linearLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraintData_linearLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintData_angularUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraintData_angularUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintData_angularLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSliderConstraintData_angularLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintData_useLinearReferenceFrameA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btSliderConstraintData_useLinearReferenceFrameA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintData_useOffsetForConstraintFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btSliderConstraintData_useOffsetForConstraintFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btSliderConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btSliderConstraintData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintDoubleData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSliderConstraintDoubleData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintDoubleData_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSliderConstraintDoubleData_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintDoubleData_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSliderConstraintDoubleData_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintDoubleData_linearUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btSliderConstraintDoubleData_linearUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintDoubleData_linearLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btSliderConstraintDoubleData_linearLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintDoubleData_angularUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btSliderConstraintDoubleData_angularUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintDoubleData_angularLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btSliderConstraintDoubleData_angularLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintDoubleData_useLinearReferenceFrameA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btSliderConstraintDoubleData_useLinearReferenceFrameA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSliderConstraintDoubleData_useOffsetForConstraintFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btSliderConstraintDoubleData_useOffsetForConstraintFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btSliderConstraintDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btSliderConstraintDoubleData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btConstraintSetting()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConstraintSetting_tau_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConstraintSetting_tau_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConstraintSetting_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConstraintSetting_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConstraintSetting_impulseClamp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConstraintSetting_impulseClamp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btConstraintSetting(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraint_useSolveConstraintObsolete_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btPoint2PointConstraint_useSolveConstraintObsolete_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraint_setting_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btPoint2PointConstraint_setting_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btPoint2PointConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btPoint2PointConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraint_getInfo1NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraint_getInfo2NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraint_updateRHS(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraint_setPivotA(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraint_setPivotB(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btPoint2PointConstraint_getPivotInA(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btPoint2PointConstraint_getPivotInB(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraint_setParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,int,float,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraint_setParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,int,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btPoint2PointConstraint_getParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,int,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btPoint2PointConstraint_getParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btPoint2PointConstraint(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraintFloatData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btPoint2PointConstraintFloatData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraintFloatData_pivotInA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btPoint2PointConstraintFloatData_pivotInA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraintFloatData_pivotInB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btPoint2PointConstraintFloatData_pivotInB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btPoint2PointConstraintFloatData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btPoint2PointConstraintFloatData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraintDoubleData2_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btPoint2PointConstraintDoubleData2_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraintDoubleData2_pivotInA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btPoint2PointConstraintDoubleData2_pivotInA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraintDoubleData2_pivotInB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btPoint2PointConstraintDoubleData2_pivotInB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btPoint2PointConstraintDoubleData2()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btPoint2PointConstraintDoubleData2(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraintDoubleData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btPoint2PointConstraintDoubleData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraintDoubleData_pivotInA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btPoint2PointConstraintDoubleData_pivotInA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btPoint2PointConstraintDoubleData_pivotInB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btPoint2PointConstraintDoubleData_pivotInB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btPoint2PointConstraintDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btPoint2PointConstraintDoubleData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btJacobianEntry__SWIG_0()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btJacobianEntry__SWIG_1(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btJacobianEntry__SWIG_2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btJacobianEntry__SWIG_3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btJacobianEntry__SWIG_4(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btJacobianEntry_getDiagonal(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btJacobianEntry_getNonDiagonal__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btJacobianEntry_getNonDiagonal__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btJacobianEntry_getRelativeVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btJacobianEntry_linearJointAxis_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btJacobianEntry_linearJointAxis_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btJacobianEntry_aJ_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btJacobianEntry_aJ_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btJacobianEntry_bJ_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btJacobianEntry_bJ_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btJacobianEntry_0MinvJt_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btJacobianEntry_0MinvJt_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btJacobianEntry_1MinvJt_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btJacobianEntry_1MinvJt_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btJacobianEntry_Adiag_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btJacobianEntry_Adiag_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btJacobianEntry(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btSolve2LinearConstraint(float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolve2LinearConstraint_resolveUnilateralPairConstraint(long,com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,long,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolve2LinearConstraint_resolveBilateralPairConstraint(long,com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,long,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btSolve2LinearConstraint(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_loLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRotationalLimitMotor_loLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_hiLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRotationalLimitMotor_hiLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_targetVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRotationalLimitMotor_targetVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_maxMotorForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRotationalLimitMotor_maxMotorForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_maxLimitForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRotationalLimitMotor_maxLimitForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRotationalLimitMotor_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_limitSoftness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRotationalLimitMotor_limitSoftness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_normalCFM_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRotationalLimitMotor_normalCFM_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_stopERP_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRotationalLimitMotor_stopERP_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_stopCFM_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRotationalLimitMotor_stopCFM_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_bounce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRotationalLimitMotor_bounce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_enableMotor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btRotationalLimitMotor_enableMotor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_currentLimitError_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRotationalLimitMotor_currentLimitError_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_currentPosition_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRotationalLimitMotor_currentPosition_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_currentLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btRotationalLimitMotor_currentLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRotationalLimitMotor_accumulatedImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRotationalLimitMotor_accumulatedImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btRotationalLimitMotor__SWIG_0()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btRotationalLimitMotor__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btRotationalLimitMotor_isLimited(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btRotationalLimitMotor_needApplyTorques(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btRotationalLimitMotor_testLimitValue(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRotationalLimitMotor_solveAngularLimits(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float,com.badlogic.gdx.math.Vector3,float,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btRotationalLimitMotor(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTranslationalLimitMotor_lowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTranslationalLimitMotor_lowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTranslationalLimitMotor_upperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTranslationalLimitMotor_upperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTranslationalLimitMotor_accumulatedImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTranslationalLimitMotor_accumulatedImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTranslationalLimitMotor_limitSoftness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTranslationalLimitMotor_limitSoftness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTranslationalLimitMotor_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTranslationalLimitMotor_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTranslationalLimitMotor_restitution_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTranslationalLimitMotor_restitution_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTranslationalLimitMotor_normalCFM_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTranslationalLimitMotor_normalCFM_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTranslationalLimitMotor_stopERP_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTranslationalLimitMotor_stopERP_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTranslationalLimitMotor_stopCFM_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTranslationalLimitMotor_stopCFM_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTranslationalLimitMotor_enableMotor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,boolean[])
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean[] btTranslationalLimitMotor_enableMotor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTranslationalLimitMotor_targetVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTranslationalLimitMotor_targetVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTranslationalLimitMotor_maxMotorForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTranslationalLimitMotor_maxMotorForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTranslationalLimitMotor_currentLimitError_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTranslationalLimitMotor_currentLimitError_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTranslationalLimitMotor_currentLinearDiff_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTranslationalLimitMotor_currentLinearDiff_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btTranslationalLimitMotor_currentLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,int[])
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int[] btTranslationalLimitMotor_currentLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btTranslationalLimitMotor__SWIG_0()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btTranslationalLimitMotor__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btTranslationalLimitMotor_isLimited(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btTranslationalLimitMotor_needApplyForce(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btTranslationalLimitMotor_testLimitValue(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,int,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btTranslationalLimitMotor_solveLinearAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,float,float,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btTranslationalLimitMotor(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_useSolveConstraintObsolete_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btGeneric6DofConstraint_useSolveConstraintObsolete_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btGeneric6DofConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btGeneric6DofConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_calculateTransforms__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_calculateTransforms__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btGeneric6DofConstraint_getCalculatedTransformA(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btGeneric6DofConstraint_getCalculatedTransformB(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btGeneric6DofConstraint_getFrameOffsetA__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btGeneric6DofConstraint_getFrameOffsetB__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_getInfo1NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_getInfo2NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_updateRHS(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btGeneric6DofConstraint_getAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btGeneric6DofConstraint_getAngle(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btGeneric6DofConstraint_getRelativePivotPosition(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_setFrames(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btGeneric6DofConstraint_testAngularLimitMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_setLinearLowerLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_getLinearLowerLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_setLinearUpperLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_getLinearUpperLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_setAngularLowerLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_getAngularLowerLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_setAngularUpperLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_getAngularUpperLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraint_getRotationalLimitMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraint_getTranslationalLimitMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_setLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btGeneric6DofConstraint_isLimited(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_calcAnchorPos(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btGeneric6DofConstraint_get_limit_motor_info2__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,int,com.badlogic.gdx.math.Vector3,int,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btGeneric6DofConstraint_get_limit_motor_info2__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,int,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btGeneric6DofConstraint_getUseFrameOffset(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_setUseFrameOffset(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_setParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int,float,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_setParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btGeneric6DofConstraint_getParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btGeneric6DofConstraint_getParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraint_setAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btGeneric6DofConstraint(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraintData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintData_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraintData_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintData_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraintData_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintData_linearUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraintData_linearUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintData_linearLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraintData_linearLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintData_angularUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraintData_angularUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintData_angularLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraintData_angularLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintData_useLinearReferenceFrameA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btGeneric6DofConstraintData_useLinearReferenceFrameA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintData_useOffsetForConstraintFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btGeneric6DofConstraintData_useOffsetForConstraintFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btGeneric6DofConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btGeneric6DofConstraintData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintDoubleData2_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraintDoubleData2_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintDoubleData2_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraintDoubleData2_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintDoubleData2_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraintDoubleData2_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintDoubleData2_linearUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraintDoubleData2_linearUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintDoubleData2_linearLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraintDoubleData2_linearLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintDoubleData2_angularUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraintDoubleData2_angularUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintDoubleData2_angularLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraintDoubleData2_angularLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintDoubleData2_useLinearReferenceFrameA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btGeneric6DofConstraintDoubleData2_useLinearReferenceFrameA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofConstraintDoubleData2_useOffsetForConstraintFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btGeneric6DofConstraintDoubleData2_useOffsetForConstraintFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btGeneric6DofConstraintDoubleData2()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btGeneric6DofConstraintDoubleData2(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btUniversalConstraint(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btUniversalConstraint_getAnchor(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btUniversalConstraint_getAnchor2(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btUniversalConstraint_getAxis1(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btUniversalConstraint_getAxis2(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btUniversalConstraint_getAngle1(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btUniversalConstraint_getAngle2(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btUniversalConstraint_setUpperLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btUniversalConstraint_setLowerLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btUniversalConstraint_setAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btUniversalConstraint(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btContactConstraint_setContactManifold(long,com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btContactConstraint_getContactManifold__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btContactConstraint(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float resolveSingleCollision(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void resolveSingleBilateral(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,long,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btConeTwistConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btConeTwistConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_getInfo1NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_getInfo2NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_updateRHS(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btConeTwistConstraint_getRigidBodyA(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btConeTwistConstraint_getRigidBodyB(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_setAngularOnly(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_setLimit__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,int,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_setLimit__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float,float,float,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_setLimit__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float,float,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_setLimit__SWIG_3(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_setLimit__SWIG_4(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btConeTwistConstraint_getAFrame(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btConeTwistConstraint_getBFrame(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btConeTwistConstraint_getSolveTwistLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btConeTwistConstraint_getSolveSwingLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConeTwistConstraint_getTwistLimitSign(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_calcAngleInfo(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_calcAngleInfo2(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConeTwistConstraint_getSwingSpan1(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConeTwistConstraint_getSwingSpan2(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConeTwistConstraint_getTwistSpan(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConeTwistConstraint_getTwistAngle(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btConeTwistConstraint_isPastSwingLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_setDamping(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_enableMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_setMaxMotorImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_setMaxMotorImpulseNormalized(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConeTwistConstraint_getFixThresh(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_setFixThresh(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_setMotorTarget(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_setMotorTargetInConstraintSpace(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btConeTwistConstraint_GetPointForAngle(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_setParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,int,float,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_setParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,int,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraint_setFrames(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btConeTwistConstraint_getFrameOffsetA(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btConeTwistConstraint_getFrameOffsetB(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConeTwistConstraint_getParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,int,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConeTwistConstraint_getParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btConeTwistConstraint(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintDoubleData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btConeTwistConstraintDoubleData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintDoubleData_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btConeTwistConstraintDoubleData_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintDoubleData_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btConeTwistConstraintDoubleData_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintDoubleData_swingSpan1_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btConeTwistConstraintDoubleData_swingSpan1_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintDoubleData_swingSpan2_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btConeTwistConstraintDoubleData_swingSpan2_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintDoubleData_twistSpan_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btConeTwistConstraintDoubleData_twistSpan_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintDoubleData_limitSoftness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btConeTwistConstraintDoubleData_limitSoftness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintDoubleData_biasFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btConeTwistConstraintDoubleData_biasFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintDoubleData_relaxationFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btConeTwistConstraintDoubleData_relaxationFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintDoubleData_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btConeTwistConstraintDoubleData_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btConeTwistConstraintDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btConeTwistConstraintDoubleData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btConeTwistConstraintData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintData_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btConeTwistConstraintData_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintData_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btConeTwistConstraintData_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintData_swingSpan1_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConeTwistConstraintData_swingSpan1_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintData_swingSpan2_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConeTwistConstraintData_swingSpan2_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintData_twistSpan_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConeTwistConstraintData_twistSpan_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintData_limitSoftness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConeTwistConstraintData_limitSoftness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintData_biasFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConeTwistConstraintData_biasFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintData_relaxationFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConeTwistConstraintData_relaxationFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintData_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btConeTwistConstraintData_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btConeTwistConstraintData_pad_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: java.lang.String btConeTwistConstraintData_pad_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btConeTwistConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btConeTwistConstraintData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btGeneric6DofSpringConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btGeneric6DofSpringConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraint_enableSpring(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint,int,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraint_setStiffness(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint,int,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraint_setDamping(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint,int,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint,int,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraint_setAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btGeneric6DofSpringConstraint(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraintData_6dofData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData,long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofSpringConstraintData_6dofData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraintData_springEnabled_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData,int[])
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int[] btGeneric6DofSpringConstraintData_springEnabled_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraintData_equilibriumPoint_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData,float[])
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float[] btGeneric6DofSpringConstraintData_equilibriumPoint_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraintData_springStiffness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData,float[])
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float[] btGeneric6DofSpringConstraintData_springStiffness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraintData_springDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData,float[])
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float[] btGeneric6DofSpringConstraintData_springDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btGeneric6DofSpringConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btGeneric6DofSpringConstraintData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraintDoubleData2_6dofData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofSpringConstraintDoubleData2_6dofData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraintDoubleData2_springEnabled_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2,int[])
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int[] btGeneric6DofSpringConstraintDoubleData2_springEnabled_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraintDoubleData2_equilibriumPoint_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2,double[])
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double[] btGeneric6DofSpringConstraintDoubleData2_equilibriumPoint_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraintDoubleData2_springStiffness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2,double[])
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double[] btGeneric6DofSpringConstraintDoubleData2_springStiffness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btGeneric6DofSpringConstraintDoubleData2_springDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2,double[])
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double[] btGeneric6DofSpringConstraintDoubleData2_springDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btGeneric6DofSpringConstraintDoubleData2()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btGeneric6DofSpringConstraintDoubleData2(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btHingeConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btHingeConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btHingeConstraint__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btHingeConstraint__SWIG_3(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btHingeConstraint__SWIG_4(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btHingeConstraint__SWIG_5(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btHingeConstraint__SWIG_6(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btHingeConstraint__SWIG_7(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_getInfo1NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_getInfo2NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_getInfo2Internal(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_getInfo2InternalUsingFrameOffset(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_updateRHS(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btHingeConstraint_getRigidBodyA__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btHingeConstraint_getRigidBodyB__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btHingeConstraint_getFrameOffsetA(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btHingeConstraint_getFrameOffsetB(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_setFrames(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_setAngularOnly(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_enableAngularMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,boolean,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_enableMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_setMaxMotorImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_setMotorTarget__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,com.badlogic.gdx.math.Quaternion,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_setMotorTarget__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_setLimit__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,float,float,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_setLimit__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,float,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_setLimit__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_setLimit__SWIG_3(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,float,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_setAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraint_getLowerLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraint_getUpperLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraint_getHingeAngle__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraint_getHingeAngle__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_testLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btHingeConstraint_getAFrame__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btHingeConstraint_getBFrame__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btHingeConstraint_getSolveLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraint_getLimitSign(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btHingeConstraint_getAngularOnly(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btHingeConstraint_getEnableAngularMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraint_getMotorTargetVelosity(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraint_getMaxMotorImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btHingeConstraint_getUseFrameOffset(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_setUseFrameOffset(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_setParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,int,float,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraint_setParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,int,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraint_getParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,int,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraint_getParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btHingeConstraint(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btHingeConstraintDoubleData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btHingeConstraintDoubleData_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btHingeConstraintDoubleData_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData_useReferenceFrameA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btHingeConstraintDoubleData_useReferenceFrameA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData_angularOnly_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btHingeConstraintDoubleData_angularOnly_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData_enableAngularMotor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btHingeConstraintDoubleData_enableAngularMotor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData_motorTargetVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraintDoubleData_motorTargetVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData_maxMotorImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraintDoubleData_maxMotorImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData_lowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraintDoubleData_lowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData_upperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraintDoubleData_upperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData_limitSoftness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraintDoubleData_limitSoftness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData_biasFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraintDoubleData_biasFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData_relaxationFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraintDoubleData_relaxationFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btHingeConstraintDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btHingeConstraintDoubleData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintFloatData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btHingeConstraintFloatData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintFloatData_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btHingeConstraintFloatData_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintFloatData_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btHingeConstraintFloatData_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintFloatData_useReferenceFrameA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btHingeConstraintFloatData_useReferenceFrameA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintFloatData_angularOnly_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btHingeConstraintFloatData_angularOnly_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintFloatData_enableAngularMotor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btHingeConstraintFloatData_enableAngularMotor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintFloatData_motorTargetVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraintFloatData_motorTargetVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintFloatData_maxMotorImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraintFloatData_maxMotorImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintFloatData_lowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraintFloatData_lowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintFloatData_upperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraintFloatData_upperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintFloatData_limitSoftness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraintFloatData_limitSoftness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintFloatData_biasFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraintFloatData_biasFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintFloatData_relaxationFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHingeConstraintFloatData_relaxationFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btHingeConstraintFloatData()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btHingeConstraintFloatData(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData2_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btHingeConstraintDoubleData2_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData2_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btHingeConstraintDoubleData2_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData2_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btHingeConstraintDoubleData2_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData2_useReferenceFrameA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btHingeConstraintDoubleData2_useReferenceFrameA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData2_angularOnly_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btHingeConstraintDoubleData2_angularOnly_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData2_enableAngularMotor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btHingeConstraintDoubleData2_enableAngularMotor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData2_motorTargetVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btHingeConstraintDoubleData2_motorTargetVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData2_maxMotorImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btHingeConstraintDoubleData2_maxMotorImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData2_lowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btHingeConstraintDoubleData2_lowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData2_upperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btHingeConstraintDoubleData2_upperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData2_limitSoftness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btHingeConstraintDoubleData2_limitSoftness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData2_biasFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btHingeConstraintDoubleData2_biasFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData2_relaxationFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,double)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: double btHingeConstraintDoubleData2_relaxationFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHingeConstraintDoubleData2_padding1_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: java.lang.String btHingeConstraintDoubleData2_padding1_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btHingeConstraintDoubleData2()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btHingeConstraintDoubleData2(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_relpos1CrossNormal_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverConstraint_relpos1CrossNormal_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_contactNormal1_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverConstraint_contactNormal1_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_relpos2CrossNormal_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverConstraint_relpos2CrossNormal_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_contactNormal2_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverConstraint_contactNormal2_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_angularComponentA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverConstraint_angularComponentA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_angularComponentB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverConstraint_angularComponentB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_appliedPushImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSolverConstraint_appliedPushImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_appliedImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSolverConstraint_appliedImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_friction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSolverConstraint_friction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_jacDiagABInv_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSolverConstraint_jacDiagABInv_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_rhs_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSolverConstraint_rhs_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_cfm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSolverConstraint_cfm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_lowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSolverConstraint_lowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_upperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSolverConstraint_upperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_rhsPenetration_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSolverConstraint_rhsPenetration_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_originalContactPoint_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSolverConstraint_originalContactPoint_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_unusedPadding4_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btSolverConstraint_unusedPadding4_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_numRowsForNonContactConstraint_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btSolverConstraint_numRowsForNonContactConstraint_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_overrideNumSolverIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btSolverConstraint_overrideNumSolverIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_frictionIndex_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btSolverConstraint_frictionIndex_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_solverBodyIdA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btSolverConstraint_solverBodyIdA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btSolverConstraint_solverBodyIdB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btSolverConstraint_solverBodyIdB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btSolverConstraint()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btSolverConstraint(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btHinge2Constraint(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btHinge2Constraint_getAnchor(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btHinge2Constraint_getAnchor2(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btHinge2Constraint_getAxis1(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btHinge2Constraint_getAxis2(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHinge2Constraint_getAngle1(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btHinge2Constraint_getAngle2(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHinge2Constraint_setUpperLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btHinge2Constraint_setLowerLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btHinge2Constraint(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btVehicleRaycaster(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btVehicleRaycaster_btVehicleRaycasterResult()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btVehicleRaycaster_btVehicleRaycasterResult_hitPointInWorld_set(long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btVehicleRaycaster_btVehicleRaycasterResult_hitPointInWorld_get(long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btVehicleRaycaster_btVehicleRaycasterResult_hitNormalInWorld_set(long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btVehicleRaycaster_btVehicleRaycasterResult_hitNormalInWorld_get(long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btVehicleRaycaster_btVehicleRaycasterResult_distFraction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btVehicleRaycaster_btVehicleRaycasterResult_distFraction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btVehicleRaycaster_btVehicleRaycasterResult(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btVehicleRaycaster_castRay(long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfoConstructionInfo_chassisConnectionCS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btWheelInfoConstructionInfo_chassisConnectionCS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfoConstructionInfo_wheelDirectionCS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btWheelInfoConstructionInfo_wheelDirectionCS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfoConstructionInfo_wheelAxleCS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btWheelInfoConstructionInfo_wheelAxleCS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfoConstructionInfo_suspensionRestLength_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfoConstructionInfo_suspensionRestLength_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfoConstructionInfo_maxSuspensionTravelCm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfoConstructionInfo_maxSuspensionTravelCm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfoConstructionInfo_wheelRadius_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfoConstructionInfo_wheelRadius_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfoConstructionInfo_suspensionStiffness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfoConstructionInfo_suspensionStiffness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfoConstructionInfo_wheelsDampingCompression_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfoConstructionInfo_wheelsDampingCompression_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfoConstructionInfo_wheelsDampingRelaxation_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfoConstructionInfo_wheelsDampingRelaxation_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfoConstructionInfo_frictionSlip_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfoConstructionInfo_frictionSlip_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfoConstructionInfo_maxSuspensionForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfoConstructionInfo_maxSuspensionForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfoConstructionInfo_bIsFrontWheel_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btWheelInfoConstructionInfo_bIsFrontWheel_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btWheelInfoConstructionInfo()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btWheelInfoConstructionInfo(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_RaycastInfo_contactNormalWS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btWheelInfo_RaycastInfo_contactNormalWS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_RaycastInfo_contactPointWS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btWheelInfo_RaycastInfo_contactPointWS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_RaycastInfo_suspensionLength_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_RaycastInfo_suspensionLength_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_RaycastInfo_hardPointWS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btWheelInfo_RaycastInfo_hardPointWS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_RaycastInfo_wheelDirectionWS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btWheelInfo_RaycastInfo_wheelDirectionWS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_RaycastInfo_wheelAxleWS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btWheelInfo_RaycastInfo_wheelAxleWS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_RaycastInfo_isInContact_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btWheelInfo_RaycastInfo_isInContact_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_RaycastInfo_groundObject_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btWheelInfo_RaycastInfo_groundObject_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btWheelInfo_RaycastInfo()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btWheelInfo_RaycastInfo(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_raycastInfo_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btWheelInfo_raycastInfo_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_worldTransform_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btWheelInfo_worldTransform_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_chassisConnectionPointCS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btWheelInfo_chassisConnectionPointCS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_wheelDirectionCS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btWheelInfo_wheelDirectionCS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_wheelAxleCS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btWheelInfo_wheelAxleCS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_suspensionRestLength1_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_suspensionRestLength1_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_maxSuspensionTravelCm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_maxSuspensionTravelCm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_getSuspensionRestLength(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_wheelsRadius_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_wheelsRadius_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_suspensionStiffness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_suspensionStiffness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_wheelsDampingCompression_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_wheelsDampingCompression_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_wheelsDampingRelaxation_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_wheelsDampingRelaxation_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_frictionSlip_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_frictionSlip_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_steering_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_steering_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_rotation_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_rotation_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_deltaRotation_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_deltaRotation_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_rollInfluence_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_rollInfluence_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_maxSuspensionForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_maxSuspensionForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_engineForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_engineForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_brake_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_brake_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_bIsFrontWheel_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: boolean btWheelInfo_bIsFrontWheel_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_clientInfo_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btWheelInfo_clientInfo_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btWheelInfo__SWIG_0()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btWheelInfo__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_updateWheel(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_clippedInvContactDotSuspension_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_clippedInvContactDotSuspension_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_suspensionRelativeVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_suspensionRelativeVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_wheelsSuspensionForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_wheelsSuspensionForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btWheelInfo_skidInfo_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btWheelInfo_skidInfo_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btWheelInfo(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btRaycastVehicle_btVehicleTuning()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_btVehicleTuning_suspensionStiffness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRaycastVehicle_btVehicleTuning_suspensionStiffness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_btVehicleTuning_suspensionCompression_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRaycastVehicle_btVehicleTuning_suspensionCompression_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_btVehicleTuning_suspensionDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRaycastVehicle_btVehicleTuning_suspensionDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_btVehicleTuning_maxSuspensionTravelCm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRaycastVehicle_btVehicleTuning_maxSuspensionTravelCm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_btVehicleTuning_frictionSlip_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRaycastVehicle_btVehicleTuning_frictionSlip_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_btVehicleTuning_maxSuspensionForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRaycastVehicle_btVehicleTuning_maxSuspensionForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btRaycastVehicle_btVehicleTuning(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btRaycastVehicle(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btRaycastVehicle(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btRaycastVehicle_getChassisWorldTransform(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRaycastVehicle_rayCast(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_updateVehicle(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_resetSuspension(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRaycastVehicle_getSteeringValue(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_setSteeringValue(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,float,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_applyEngineForce(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,float,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Matrix4 btRaycastVehicle_getWheelTransformWS(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_updateWheelTransform__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_updateWheelTransform__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRaycastVehicle_addWheel(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float,long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btRaycastVehicle_getNumWheels(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_wheelInfo_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRaycastVehicle_wheelInfo_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRaycastVehicle_getWheelInfo__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_updateWheelTransformsWS__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,boolean)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_updateWheelTransformsWS__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_setBrake(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,float,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_setPitchControl(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_updateSuspension(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_updateFriction(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRaycastVehicle_getRigidBody__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btRaycastVehicle_getRightAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btRaycastVehicle_getUpAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btRaycastVehicle_getForwardAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: com.badlogic.gdx.math.Vector3 btRaycastVehicle_getForwardVector(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: float btRaycastVehicle_getCurrentSpeedKmHour(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_setCoordinateSystem(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int,int,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btRaycastVehicle_getUserConstraintType(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_setUserConstraintType(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void btRaycastVehicle_setUserConstraintId(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: int btRaycastVehicle_getUserConstraintId(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long new_btDefaultVehicleRaycaster(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void delete_btDefaultVehicleRaycaster(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRigidBody_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btTypedConstraint_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btDynamicsWorld_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSimpleDynamicsWorld_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btDiscreteDynamicsWorld_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btCharacterControllerInterface_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btKinematicCharacterController_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btContactSolverInfo_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSequentialImpulseConstraintSolver_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btSliderConstraint_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btPoint2PointConstraint_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofConstraint_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btUniversalConstraint_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btContactConstraint_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btConeTwistConstraint_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btGeneric6DofSpringConstraint_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btHingeConstraint_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btHinge2Constraint_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btRaycastVehicle_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: long btDefaultVehicleRaycaster_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void SwigDirector_InternalTickCallback_onInternalTick(com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback,long,float)
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void swig_module_init()
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI: void <clinit>()
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: InternalTickCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: InternalTickCallback(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback)
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: void delete()
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: InternalTickCallback(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,boolean)
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: InternalTickCallback(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: InternalTickCallback()
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: void onInternalTick(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float)
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: void detach()
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: void attach(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,boolean)
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: void attach()
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback: void detach(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,boolean)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t: SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t: SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t()
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t: SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t: SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t()
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3DoubleData
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3DoubleData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3DoubleData: SWIGTYPE_p_btMatrix3x3DoubleData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3DoubleData: SWIGTYPE_p_btMatrix3x3DoubleData()
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3DoubleData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3FloatData
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3FloatData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3FloatData: SWIGTYPE_p_btMatrix3x3FloatData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3FloatData: SWIGTYPE_p_btMatrix3x3FloatData()
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3FloatData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btSerializer
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btSerializer: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btSerializer: SWIGTYPE_p_btSerializer(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btSerializer: SWIGTYPE_p_btSerializer()
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btSerializer: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btSerializer)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_f_p_btDynamicsWorld_float__void
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_f_p_btDynamicsWorld_float__void: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_f_p_btDynamicsWorld_float__void: SWIGTYPE_p_f_p_btDynamicsWorld_float__void(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_f_p_btDynamicsWorld_float__void: SWIGTYPE_p_f_p_btDynamicsWorld_float__void()
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_f_p_btDynamicsWorld_float__void: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_f_p_btDynamicsWorld_float__void)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float: SWIGTYPE_p_float(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float: SWIGTYPE_p_float()
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_int
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_int: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_int: SWIGTYPE_p_int(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_int: SWIGTYPE_p_int()
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_int: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_int)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btCollisionObject
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btCollisionObject: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btCollisionObject: SWIGTYPE_p_p_btCollisionObject(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btCollisionObject: SWIGTYPE_p_p_btCollisionObject()
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btCollisionObject: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btCollisionObject)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btPersistentManifold
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btPersistentManifold: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btPersistentManifold: SWIGTYPE_p_p_btPersistentManifold(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btPersistentManifold: SWIGTYPE_p_p_btPersistentManifold()
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btPersistentManifold: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btPersistentManifold)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btTypedConstraint
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btTypedConstraint: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btTypedConstraint: SWIGTYPE_p_p_btTypedConstraint(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btTypedConstraint: SWIGTYPE_p_p_btTypedConstraint()
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btTypedConstraint: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.bt6DofFlags
com.badlogic.gdx.physics.bullet.dynamics.bt6DofFlags: int BT_6DOF_FLAGS_CFM_NORM
com.badlogic.gdx.physics.bullet.dynamics.bt6DofFlags: int BT_6DOF_FLAGS_CFM_STOP
com.badlogic.gdx.physics.bullet.dynamics.bt6DofFlags: int BT_6DOF_FLAGS_ERP_STOP
com.badlogic.gdx.physics.bullet.dynamics.bt6DofFlags: bt6DofFlags()
com.badlogic.gdx.physics.bullet.dynamics.btActionInterface
com.badlogic.gdx.physics.bullet.dynamics.btActionInterface: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btActionInterface: btActionInterface(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btActionInterface: btActionInterface(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btActionInterface: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btActionInterface: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btActionInterface)
com.badlogic.gdx.physics.bullet.dynamics.btActionInterface: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btActionInterface: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btActionInterface: void updateAction(com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,float)
com.badlogic.gdx.physics.bullet.dynamics.btActionInterface: void debugDraw(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: btAngularLimit(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: btAngularLimit(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit)
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: btAngularLimit()
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: void set(float,float,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: void set(float,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: void set(float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: void set(float,float)
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: void test(float)
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: float getSoftness()
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: float getBiasFactor()
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: float getRelaxationFactor()
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: float getCorrection()
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: float getSign()
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: float getHalfRange()
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: boolean isLimit()
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: void fit(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: float getError()
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: float getLow()
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit: float getHigh()
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: btCharacterControllerInterface(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: btCharacterControllerInterface(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface)
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: void setWalkDirection(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: void setVelocityForTimeInterval(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: void reset(com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: void warp(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: void preStep(com.badlogic.gdx.physics.bullet.collision.btCollisionWorld)
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: void playerStep(com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,float)
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: boolean canJump()
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: void jump()
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: boolean onGround()
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface: void setUpInterpolate(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: btConeTwistConstraint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: btConeTwistConstraint(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: btConeTwistConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: btConeTwistConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void getInfo1NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void getInfo2NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void updateRHS(float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyA()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyB()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void setAngularOnly(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void setLimit(int,float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void setLimit(float,float,float,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void setLimit(float,float,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void setLimit(float,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void setLimit(float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: com.badlogic.gdx.math.Matrix4 getAFrame()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: com.badlogic.gdx.math.Matrix4 getBFrame()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: int getSolveTwistLimit()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: int getSolveSwingLimit()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: float getTwistLimitSign()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void calcAngleInfo()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void calcAngleInfo2(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: float getSwingSpan1()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: float getSwingSpan2()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: float getTwistSpan()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: float getTwistAngle()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: boolean isPastSwingLimit()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void setDamping(float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void enableMotor(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void setMaxMotorImpulse(float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void setMaxMotorImpulseNormalized(float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: float getFixThresh()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void setFixThresh(float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void setMotorTarget(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void setMotorTargetInConstraintSpace(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: com.badlogic.gdx.math.Vector3 GetPointForAngle(float,float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void setParam(int,float,int)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void setParam(int,float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: void setFrames(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: com.badlogic.gdx.math.Matrix4 getFrameOffsetA()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: com.badlogic.gdx.math.Matrix4 getFrameOffsetB()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: float getParam(int,int)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint: float getParam(int)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: btConeTwistConstraintData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: btConeTwistConstraintData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData getTypeConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbAFrame()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbBFrame()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: void setSwingSpan1(float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: float getSwingSpan1()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: void setSwingSpan2(float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: float getSwingSpan2()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: void setTwistSpan(float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: float getTwistSpan()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: void setLimitSoftness(float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: float getLimitSoftness()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: void setBiasFactor(float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: float getBiasFactor()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: void setRelaxationFactor(float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: float getRelaxationFactor()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: void setDamping(float)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: float getDamping()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: void setPad(java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: java.lang.String getPad()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData: btConeTwistConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: btConeTwistConstraintDoubleData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: btConeTwistConstraintDoubleData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData getTypeConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbAFrame()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbBFrame()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: void setSwingSpan1(double)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: double getSwingSpan1()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: void setSwingSpan2(double)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: double getSwingSpan2()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: void setTwistSpan(double)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: double getTwistSpan()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: void setLimitSoftness(double)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: double getLimitSoftness()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: void setBiasFactor(double)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: double getBiasFactor()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: void setRelaxationFactor(double)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: double getRelaxationFactor()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: void setDamping(double)
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: double getDamping()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData: btConeTwistConstraintDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistFlags
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistFlags: int BT_CONETWIST_FLAGS_LIN_CFM
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistFlags: int BT_CONETWIST_FLAGS_LIN_ERP
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistFlags: int BT_CONETWIST_FLAGS_ANG_CFM
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistFlags: btConeTwistFlags()
com.badlogic.gdx.physics.bullet.dynamics.btConstraintParams
com.badlogic.gdx.physics.bullet.dynamics.btConstraintParams: int BT_CONSTRAINT_ERP
com.badlogic.gdx.physics.bullet.dynamics.btConstraintParams: int BT_CONSTRAINT_STOP_ERP
com.badlogic.gdx.physics.bullet.dynamics.btConstraintParams: int BT_CONSTRAINT_CFM
com.badlogic.gdx.physics.bullet.dynamics.btConstraintParams: int BT_CONSTRAINT_STOP_CFM
com.badlogic.gdx.physics.bullet.dynamics.btConstraintParams: btConstraintParams()
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting: btConstraintSetting(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting: btConstraintSetting(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting)
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting: btConstraintSetting()
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting: void setTau(float)
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting: float getTau()
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting: void setDamping(float)
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting: float getDamping()
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting: void setImpulseClamp(float)
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting: float getImpulseClamp()
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver: btConstraintSolver(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver: btConstraintSolver(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver)
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver: void prepareSolve(int,int)
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver: float solveGroup(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btCollisionObject,int,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btPersistentManifold,int,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btTypedConstraint,int,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver: void allSolved(com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver: void reset()
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver: int getSolverType()
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolverType
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolverType: int BT_SEQUENTIAL_IMPULSE_SOLVER
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolverType: int BT_MLCP_SOLVER
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolverType: btConstraintSolverType()
com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint
com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint: btContactConstraint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint: btContactConstraint(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint: void setContactManifold(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold)
com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint: com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getContactManifold()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo: btContactSolverInfo(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo: btContactSolverInfo(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo: btContactSolverInfo()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: btContactSolverInfoData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: btContactSolverInfoData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setTau(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getTau()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setDamping(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getDamping()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setFriction(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getFriction()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setTimeStep(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getTimeStep()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setRestitution(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getRestitution()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setNumIterations(int)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: int getNumIterations()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setMaxErrorReduction(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getMaxErrorReduction()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setSor(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getSor()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setErp(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getErp()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setErp2(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getErp2()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setGlobalCfm(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getGlobalCfm()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setSplitImpulse(int)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: int getSplitImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setSplitImpulsePenetrationThreshold(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getSplitImpulsePenetrationThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setSplitImpulseTurnErp(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getSplitImpulseTurnErp()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setLinearSlop(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getLinearSlop()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setWarmstartingFactor(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getWarmstartingFactor()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setSolverMode(int)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: int getSolverMode()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setRestingContactRestitutionThreshold(int)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: int getRestingContactRestitutionThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setMinimumSolverBatchSize(int)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: int getMinimumSolverBatchSize()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setMaxGyroscopicForce(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getMaxGyroscopicForce()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: void setSingleAxisRollingFrictionThreshold(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: float getSingleAxisRollingFrictionThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData: btContactSolverInfoData()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: btContactSolverInfoDoubleData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: btContactSolverInfoDoubleData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setTau(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getTau()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setDamping(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getDamping()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setFriction(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getFriction()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setTimeStep(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getTimeStep()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setRestitution(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getRestitution()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setMaxErrorReduction(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getMaxErrorReduction()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setSor(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getSor()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setErp(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getErp()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setErp2(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getErp2()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setGlobalCfm(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getGlobalCfm()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setSplitImpulsePenetrationThreshold(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getSplitImpulsePenetrationThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setSplitImpulseTurnErp(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getSplitImpulseTurnErp()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setLinearSlop(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getLinearSlop()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setWarmstartingFactor(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getWarmstartingFactor()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setMaxGyroscopicForce(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getMaxGyroscopicForce()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setSingleAxisRollingFrictionThreshold(double)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: double getSingleAxisRollingFrictionThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setNumIterations(int)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: int getNumIterations()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setSolverMode(int)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: int getSolverMode()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setRestingContactRestitutionThreshold(int)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: int getRestingContactRestitutionThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setMinimumSolverBatchSize(int)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: int getMinimumSolverBatchSize()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setSplitImpulse(int)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: int getSplitImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: void setPadding(java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: java.lang.String getPadding()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData: btContactSolverInfoDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: btContactSolverInfoFloatData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: btContactSolverInfoFloatData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setTau(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getTau()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setDamping(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getDamping()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setFriction(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getFriction()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setTimeStep(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getTimeStep()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setRestitution(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getRestitution()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setMaxErrorReduction(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getMaxErrorReduction()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setSor(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getSor()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setErp(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getErp()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setErp2(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getErp2()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setGlobalCfm(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getGlobalCfm()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setSplitImpulsePenetrationThreshold(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getSplitImpulsePenetrationThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setSplitImpulseTurnErp(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getSplitImpulseTurnErp()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setLinearSlop(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getLinearSlop()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setWarmstartingFactor(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getWarmstartingFactor()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setMaxGyroscopicForce(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getMaxGyroscopicForce()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setSingleAxisRollingFrictionThreshold(float)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: float getSingleAxisRollingFrictionThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setNumIterations(int)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: int getNumIterations()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setSolverMode(int)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: int getSolverMode()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setRestingContactRestitutionThreshold(int)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: int getRestingContactRestitutionThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setMinimumSolverBatchSize(int)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: int getMinimumSolverBatchSize()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setSplitImpulse(int)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: int getSplitImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: void setPadding(java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: java.lang.String getPadding()
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData: btContactSolverInfoFloatData()
com.badlogic.gdx.physics.bullet.dynamics.btDefaultVehicleRaycaster
com.badlogic.gdx.physics.bullet.dynamics.btDefaultVehicleRaycaster: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btDefaultVehicleRaycaster: btDefaultVehicleRaycaster(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDefaultVehicleRaycaster: btDefaultVehicleRaycaster(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDefaultVehicleRaycaster: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDefaultVehicleRaycaster: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btDefaultVehicleRaycaster)
com.badlogic.gdx.physics.bullet.dynamics.btDefaultVehicleRaycaster: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btDefaultVehicleRaycaster: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btDefaultVehicleRaycaster: btDefaultVehicleRaycaster(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: btDiscreteDynamicsWorld(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: btDiscreteDynamicsWorld(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: btDiscreteDynamicsWorld(com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: int stepSimulation(float,int,float)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: int stepSimulation(float,int)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: int stepSimulation(float)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void synchronizeSingleMotionState(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void addConstraint(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void addConstraint(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager getSimulationIslandManager()
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: com.badlogic.gdx.physics.bullet.collision.btCollisionWorld getCollisionWorld()
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void addCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short,short)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void addCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void addCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void addRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void addRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,short,short)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void debugDrawConstraint(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint getConstraint(int)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void applyGravity()
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void setNumTasks(int)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void updateVehicles(float)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void setSynchronizeAllMotionStates(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: boolean getSynchronizeAllMotionStates()
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void setApplySpeculativeContactRestitution(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: boolean getApplySpeculativeContactRestitution()
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: void setLatencyMotionStateInterpolation(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld: boolean getLatencyMotionStateInterpolation()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: btDynamicsWorld(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: btDynamicsWorld(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: int stepSimulation(float,int,float)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: int stepSimulation(float,int)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: int stepSimulation(float)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void addConstraint(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void addConstraint(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void removeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void addAction(com.badlogic.gdx.physics.bullet.dynamics.btActionInterface)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void removeAction(com.badlogic.gdx.physics.bullet.dynamics.btActionInterface)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void setGravity(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: com.badlogic.gdx.math.Vector3 getGravity()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void synchronizeMotionStates()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void addRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void addRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,short,short)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void removeRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void setConstraintSolver(com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver getConstraintSolver()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: int getNumConstraints()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint getConstraint(int)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: int getWorldType()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void clearForces()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void setInternalTickCallback(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_f_p_btDynamicsWorld_float__void,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void setInternalTickCallback(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_f_p_btDynamicsWorld_float__void,long)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void setInternalTickCallback(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_f_p_btDynamicsWorld_float__void)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void setWorldUserInfo(long)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: long getWorldUserInfo()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo getSolverInfo()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void addVehicle(com.badlogic.gdx.physics.bullet.dynamics.btActionInterface)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void removeVehicle(com.badlogic.gdx.physics.bullet.dynamics.btActionInterface)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void addCharacter(com.badlogic.gdx.physics.bullet.dynamics.btActionInterface)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld: void removeCharacter(com.badlogic.gdx.physics.bullet.dynamics.btActionInterface)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData: btDynamicsWorldDoubleData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData: btDynamicsWorldDoubleData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData: void setSolverInfo(com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData: com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData getSolverInfo()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData: void setGravity(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getGravity()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData: btDynamicsWorldDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData: btDynamicsWorldFloatData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData: btDynamicsWorldFloatData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData: void setSolverInfo(com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData: com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData getSolverInfo()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData: void setGravity(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getGravity()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData: btDynamicsWorldFloatData()
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldType
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldType: int BT_SIMPLE_DYNAMICS_WORLD
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldType: int BT_DISCRETE_DYNAMICS_WORLD
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldType: int BT_CONTINUOUS_DYNAMICS_WORLD
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldType: int BT_SOFT_RIGID_DYNAMICS_WORLD
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldType: int BT_GPU_DYNAMICS_WORLD
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldType: btDynamicsWorldType()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: btGeneric6DofConstraint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: btGeneric6DofConstraint(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void setUseSolveConstraintObsolete(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: boolean getUseSolveConstraintObsolete()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: btGeneric6DofConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: btGeneric6DofConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void calculateTransforms(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void calculateTransforms()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: com.badlogic.gdx.math.Matrix4 getCalculatedTransformA()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: com.badlogic.gdx.math.Matrix4 getCalculatedTransformB()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: com.badlogic.gdx.math.Matrix4 getFrameOffsetA()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: com.badlogic.gdx.math.Matrix4 getFrameOffsetB()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void getInfo1NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void getInfo2NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void updateRHS(float)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: com.badlogic.gdx.math.Vector3 getAxis(int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: float getAngle(int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: float getRelativePivotPosition(int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void setFrames(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: boolean testAngularLimitMotor(int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void setLinearLowerLimit(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void getLinearLowerLimit(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void setLinearUpperLimit(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void getLinearUpperLimit(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void setAngularLowerLimit(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void getAngularLowerLimit(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void setAngularUpperLimit(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void getAngularUpperLimit(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor getRotationalLimitMotor(int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor getTranslationalLimitMotor()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void setLimit(int,float,float)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: boolean isLimited(int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void calcAnchorPos()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: int get_limit_motor_info2(com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,int,com.badlogic.gdx.math.Vector3,int,int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: int get_limit_motor_info2(com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,int,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: boolean getUseFrameOffset()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void setUseFrameOffset(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void setParam(int,float,int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void setParam(int,float)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: float getParam(int,int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: float getParam(int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint: void setAxis(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: btGeneric6DofConstraintData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: btGeneric6DofConstraintData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData getTypeConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbAFrame()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbBFrame()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: void setLinearUpperLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLinearUpperLimit()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: void setLinearLowerLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLinearLowerLimit()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: void setAngularUpperLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAngularUpperLimit()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: void setAngularLowerLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAngularLowerLimit()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: void setUseLinearReferenceFrameA(int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: int getUseLinearReferenceFrameA()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: void setUseOffsetForConstraintFrame(int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: int getUseOffsetForConstraintFrame()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData: btGeneric6DofConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: btGeneric6DofConstraintDoubleData2(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: btGeneric6DofConstraintDoubleData2(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData getTypeConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbAFrame()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbBFrame()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: void setLinearUpperLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getLinearUpperLimit()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: void setLinearLowerLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getLinearLowerLimit()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: void setAngularUpperLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getAngularUpperLimit()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: void setAngularLowerLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getAngularLowerLimit()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: void setUseLinearReferenceFrameA(int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: int getUseLinearReferenceFrameA()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: void setUseOffsetForConstraintFrame(int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: int getUseOffsetForConstraintFrame()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2: btGeneric6DofConstraintDoubleData2()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: btGeneric6DofSpringConstraint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: btGeneric6DofSpringConstraint(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: btGeneric6DofSpringConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: btGeneric6DofSpringConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: void enableSpring(int,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: void setStiffness(int,float)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: void setDamping(int,float)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: void setEquilibriumPoint()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: void setEquilibriumPoint(int)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: void setEquilibriumPoint(int,float)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint: void setAxis(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: btGeneric6DofSpringConstraintData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: btGeneric6DofSpringConstraintData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: void set6dofData(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData get6dofData()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: void setSpringEnabled(int[])
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: int[] getSpringEnabled()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: void setEquilibriumPoint(float[])
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: float[] getEquilibriumPoint()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: void setSpringStiffness(float[])
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: float[] getSpringStiffness()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: void setSpringDamping(float[])
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: float[] getSpringDamping()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData: btGeneric6DofSpringConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: btGeneric6DofSpringConstraintDoubleData2(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: btGeneric6DofSpringConstraintDoubleData2(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: void set6dofData(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2 get6dofData()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: void setSpringEnabled(int[])
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: int[] getSpringEnabled()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: void setEquilibriumPoint(double[])
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: double[] getEquilibriumPoint()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: void setSpringStiffness(double[])
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: double[] getSpringStiffness()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: void setSpringDamping(double[])
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: double[] getSpringDamping()
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2: btGeneric6DofSpringConstraintDoubleData2()
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: btHinge2Constraint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: btHinge2Constraint(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint)
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: btHinge2Constraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: com.badlogic.gdx.math.Vector3 getAnchor()
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: com.badlogic.gdx.math.Vector3 getAnchor2()
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: com.badlogic.gdx.math.Vector3 getAxis1()
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: com.badlogic.gdx.math.Vector3 getAxis2()
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: float getAngle1()
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: float getAngle2()
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: void setUpperLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint: void setLowerLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: btHingeConstraint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: btHingeConstraint(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: btHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: btHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: btHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: btHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: btHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: btHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: btHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: btHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void getInfo1NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void getInfo2NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void getInfo2Internal(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void getInfo2InternalUsingFrameOffset(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void updateRHS(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyA()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyB()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: com.badlogic.gdx.math.Matrix4 getFrameOffsetA()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: com.badlogic.gdx.math.Matrix4 getFrameOffsetB()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void setFrames(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void setAngularOnly(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void enableAngularMotor(boolean,float,float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void enableMotor(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void setMaxMotorImpulse(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void setMotorTarget(com.badlogic.gdx.math.Quaternion,float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void setMotorTarget(float,float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void setLimit(float,float,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void setLimit(float,float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void setLimit(float,float,float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void setLimit(float,float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void setAxis(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: float getLowerLimit()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: float getUpperLimit()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: float getHingeAngle()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: float getHingeAngle(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void testLimit(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: com.badlogic.gdx.math.Matrix4 getAFrame()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: com.badlogic.gdx.math.Matrix4 getBFrame()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: int getSolveLimit()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: float getLimitSign()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: boolean getAngularOnly()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: boolean getEnableAngularMotor()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: float getMotorTargetVelosity()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: float getMaxMotorImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: boolean getUseFrameOffset()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void setUseFrameOffset(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void setParam(int,float,int)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: void setParam(int,float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: float getParam(int,int)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint: float getParam(int)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: btHingeConstraintDoubleData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: btHingeConstraintDoubleData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData getTypeConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbAFrame()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbBFrame()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void setUseReferenceFrameA(int)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: int getUseReferenceFrameA()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void setAngularOnly(int)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: int getAngularOnly()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void setEnableAngularMotor(int)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: int getEnableAngularMotor()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void setMotorTargetVelocity(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: float getMotorTargetVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void setMaxMotorImpulse(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: float getMaxMotorImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void setLowerLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: float getLowerLimit()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void setUpperLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: float getUpperLimit()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void setLimitSoftness(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: float getLimitSoftness()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void setBiasFactor(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: float getBiasFactor()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: void setRelaxationFactor(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: float getRelaxationFactor()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData: btHingeConstraintDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: btHingeConstraintDoubleData2(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: btHingeConstraintDoubleData2(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData getTypeConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbAFrame()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbBFrame()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void setUseReferenceFrameA(int)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: int getUseReferenceFrameA()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void setAngularOnly(int)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: int getAngularOnly()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void setEnableAngularMotor(int)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: int getEnableAngularMotor()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void setMotorTargetVelocity(double)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: double getMotorTargetVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void setMaxMotorImpulse(double)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: double getMaxMotorImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void setLowerLimit(double)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: double getLowerLimit()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void setUpperLimit(double)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: double getUpperLimit()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void setLimitSoftness(double)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: double getLimitSoftness()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void setBiasFactor(double)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: double getBiasFactor()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void setRelaxationFactor(double)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: double getRelaxationFactor()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: void setPadding1(java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: java.lang.String getPadding1()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2: btHingeConstraintDoubleData2()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: btHingeConstraintFloatData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: btHingeConstraintFloatData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData getTypeConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbAFrame()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbBFrame()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void setUseReferenceFrameA(int)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: int getUseReferenceFrameA()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void setAngularOnly(int)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: int getAngularOnly()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void setEnableAngularMotor(int)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: int getEnableAngularMotor()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void setMotorTargetVelocity(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: float getMotorTargetVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void setMaxMotorImpulse(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: float getMaxMotorImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void setLowerLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: float getLowerLimit()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void setUpperLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: float getUpperLimit()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void setLimitSoftness(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: float getLimitSoftness()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void setBiasFactor(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: float getBiasFactor()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: void setRelaxationFactor(float)
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: float getRelaxationFactor()
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData: btHingeConstraintFloatData()
com.badlogic.gdx.physics.bullet.dynamics.btHingeFlags
com.badlogic.gdx.physics.bullet.dynamics.btHingeFlags: int BT_HINGE_FLAGS_CFM_STOP
com.badlogic.gdx.physics.bullet.dynamics.btHingeFlags: int BT_HINGE_FLAGS_ERP_STOP
com.badlogic.gdx.physics.bullet.dynamics.btHingeFlags: int BT_HINGE_FLAGS_CFM_NORM
com.badlogic.gdx.physics.bullet.dynamics.btHingeFlags: btHingeFlags()
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: btJacobianEntry(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: btJacobianEntry(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: btJacobianEntry()
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: btJacobianEntry(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: btJacobianEntry(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: btJacobianEntry(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: btJacobianEntry(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: float getDiagonal()
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: float getNonDiagonal(com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,float)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: float getNonDiagonal(com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,float,float)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: float getRelativeVelocity(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: void setLinearJointAxis(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLinearJointAxis()
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: void setAJ(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAJ()
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: void setBJ(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getBJ()
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: void set0MinvJt(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: com.badlogic.gdx.physics.bullet.linearmath.btVector3 get0MinvJt()
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: void set1MinvJt(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: com.badlogic.gdx.physics.bullet.linearmath.btVector3 get1MinvJt()
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: void setAdiag(float)
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry: float getAdiag()
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: btJointFeedback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: btJointFeedback(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback)
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: void setAppliedForceBodyA(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAppliedForceBodyA()
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: void setAppliedTorqueBodyA(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAppliedTorqueBodyA()
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: void setAppliedForceBodyB(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAppliedForceBodyB()
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: void setAppliedTorqueBodyB(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAppliedTorqueBodyB()
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback: btJointFeedback()
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: btKinematicCharacterController(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: btKinematicCharacterController(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController)
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: btKinematicCharacterController(com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject,com.badlogic.gdx.physics.bullet.collision.btConvexShape,float,int)
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: btKinematicCharacterController(com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject,com.badlogic.gdx.physics.bullet.collision.btConvexShape,float)
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: void setUpAxis(int)
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: void setFallSpeed(float)
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: void setJumpSpeed(float)
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: void setMaxJumpHeight(float)
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: void setGravity(float)
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: float getGravity()
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: void setMaxSlope(float)
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: float getMaxSlope()
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject getGhostObject()
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController: void setUseGhostSweepTest(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: btPoint2PointConstraint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: btPoint2PointConstraint(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: void setUseSolveConstraintObsolete(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: boolean getUseSolveConstraintObsolete()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: void setSetting(com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting getSetting()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: btPoint2PointConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: btPoint2PointConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: void getInfo1NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: void getInfo2NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: void updateRHS(float)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: void setPivotA(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: void setPivotB(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: com.badlogic.gdx.math.Vector3 getPivotInA()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: com.badlogic.gdx.math.Vector3 getPivotInB()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: void setParam(int,float,int)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: void setParam(int,float)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: float getParam(int,int)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint: float getParam(int)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData: btPoint2PointConstraintDoubleData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData: btPoint2PointConstraintDoubleData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData: void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData getTypeConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData: void setPivotInA(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getPivotInA()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData: void setPivotInB(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getPivotInB()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData: btPoint2PointConstraintDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2: btPoint2PointConstraintDoubleData2(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2: btPoint2PointConstraintDoubleData2(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2: void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData getTypeConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2: void setPivotInA(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getPivotInA()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2: void setPivotInB(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getPivotInB()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2: btPoint2PointConstraintDoubleData2()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData: btPoint2PointConstraintFloatData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData: btPoint2PointConstraintFloatData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData: void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData getTypeConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData: void setPivotInA(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getPivotInA()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData: void setPivotInB(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getPivotInB()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData: btPoint2PointConstraintFloatData()
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointFlags
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointFlags: int BT_P2P_FLAGS_ERP
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointFlags: int BT_P2P_FLAGS_CFM
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointFlags: btPoint2PointFlags()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: btRaycastVehicle(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: btRaycastVehicle(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: btRaycastVehicle(com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: com.badlogic.gdx.math.Matrix4 getChassisWorldTransform()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: float rayCast(com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void updateVehicle(float)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void resetSuspension()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: float getSteeringValue(int)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void setSteeringValue(float,int)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void applyEngineForce(float,int)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: com.badlogic.gdx.math.Matrix4 getWheelTransformWS(int)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void updateWheelTransform(int,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void updateWheelTransform(int)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo addWheel(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: int getNumWheels()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void setWheelInfo(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t getWheelInfo()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo getWheelInfo(int)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void updateWheelTransformsWS(com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void updateWheelTransformsWS(com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void setBrake(float,int)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void setPitchControl(float)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void updateSuspension(float)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void updateFriction(float)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBody()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: int getRightAxis()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: int getUpAxis()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: int getForwardAxis()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: com.badlogic.gdx.math.Vector3 getForwardVector()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: float getCurrentSpeedKmHour()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void setCoordinateSystem(int,int,int)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: int getUserConstraintType()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void setUserConstraintType(int)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: void setUserConstraintId(int)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle: int getUserConstraintId()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: btRaycastVehicle$btVehicleTuning(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: btRaycastVehicle$btVehicleTuning(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: btRaycastVehicle$btVehicleTuning()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: void setSuspensionStiffness(float)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: float getSuspensionStiffness()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: void setSuspensionCompression(float)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: float getSuspensionCompression()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: void setSuspensionDamping(float)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: float getSuspensionDamping()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: void setMaxSuspensionTravelCm(float)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: float getMaxSuspensionTravelCm()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: void setFrictionSlip(float)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: float getFrictionSlip()
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: void setMaxSuspensionForce(float)
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning: float getMaxSuspensionForce()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.physics.bullet.linearmath.btMotionState motionState
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: btRigidBody(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: btRigidBody(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: btRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: btRigidBody(float,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: btRigidBody(float,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setMotionState(com.badlogic.gdx.physics.bullet.linearmath.btMotionState)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void refMotionState(com.badlogic.gdx.physics.bullet.linearmath.btMotionState)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.physics.bullet.linearmath.btMotionState getMotionState()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void dispose()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void proceedToTransform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void predictIntegratedTransform(float,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void saveKinematicState(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void applyGravity()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setGravity(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.math.Vector3 getGravity()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setDamping(float,float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: float getLinearDamping()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: float getAngularDamping()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: float getLinearSleepingThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: float getAngularSleepingThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void applyDamping(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setMassProps(float,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.math.Vector3 getLinearFactor()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setLinearFactor(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: float getInvMass()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.math.Matrix3 getInvInertiaTensorWorld()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void integrateVelocities(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setCenterOfMassTransform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void applyCentralForce(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.math.Vector3 getTotalForce()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.math.Vector3 getTotalTorque()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.math.Vector3 getInvInertiaDiagLocal()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setInvInertiaDiagLocal(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setSleepingThresholds(float,float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void applyTorque(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void applyForce(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void applyCentralImpulse(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void applyTorqueImpulse(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void applyImpulse(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void clearForces()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void updateInertiaTensor()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.math.Vector3 getCenterOfMassPosition()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.math.Quaternion getOrientation()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.math.Matrix4 getCenterOfMassTransform()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.math.Vector3 getLinearVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.math.Vector3 getAngularVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setLinearVelocity(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setAngularVelocity(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.math.Vector3 getVelocityInLocalPoint(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void translate(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void getAabb(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: float computeImpulseDenominator(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: float computeAngularImpulseDenominator(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void updateDeactivation(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: boolean wantsSleeping()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy getBroadphaseProxy()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setNewBroadphaseProxy(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.physics.bullet.linearmath.btMotionState internalGetMotionState()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void internalSetMotionState(com.badlogic.gdx.physics.bullet.linearmath.btMotionState)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setContactSolverType(int)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: int getContactSolverType()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setFrictionSolverType(int)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: int getFrictionSolverType()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setAngularFactor(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setAngularFactor(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.math.Vector3 getAngularFactor()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: boolean isInWorld()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: boolean checkCollideWithOverride(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void addConstraintRef(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void removeConstraintRef(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint getConstraintRef(int)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: int getNumConstraintRefs()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: void setFlags(int)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: int getFlags()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: com.badlogic.gdx.math.Vector3 computeGyroscopicForce(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: btRigidBody(boolean,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: btRigidBody(boolean,float,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody: btRigidBody(boolean,float,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: com.badlogic.gdx.physics.bullet.linearmath.btMotionState motionState
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: com.badlogic.gdx.physics.bullet.collision.btCollisionShape collisionShape
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: btRigidBody$btRigidBodyConstructionInfo(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: btRigidBody$btRigidBodyConstructionInfo(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setMotionState(com.badlogic.gdx.physics.bullet.linearmath.btMotionState)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void refMotionState(com.badlogic.gdx.physics.bullet.linearmath.btMotionState)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: com.badlogic.gdx.physics.bullet.linearmath.btMotionState getMotionState()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setCollisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void refCollisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: com.badlogic.gdx.physics.bullet.collision.btCollisionShape getCollisionShape()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: btRigidBody$btRigidBodyConstructionInfo(float,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: btRigidBody$btRigidBodyConstructionInfo(float,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void dispose()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setMass(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: float getMass()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setI_motionState(com.badlogic.gdx.physics.bullet.linearmath.btMotionState)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: com.badlogic.gdx.physics.bullet.linearmath.btMotionState getI_motionState()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setStartWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: com.badlogic.gdx.physics.bullet.linearmath.btTransform getStartWorldTransform()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setI_collisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: com.badlogic.gdx.physics.bullet.collision.btCollisionShape getI_collisionShape()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setLocalInertia(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLocalInertia()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setLinearDamping(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: float getLinearDamping()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setAngularDamping(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: float getAngularDamping()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setFriction(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: float getFriction()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setRollingFriction(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: float getRollingFriction()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setRestitution(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: float getRestitution()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setLinearSleepingThreshold(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: float getLinearSleepingThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setAngularSleepingThreshold(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: float getAngularSleepingThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setAdditionalDamping(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: boolean getAdditionalDamping()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setAdditionalDampingFactor(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: float getAdditionalDampingFactor()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setAdditionalLinearDampingThresholdSqr(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: float getAdditionalLinearDampingThresholdSqr()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setAdditionalAngularDampingThresholdSqr(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: float getAdditionalAngularDampingThresholdSqr()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: void setAdditionalAngularDampingFactor(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: float getAdditionalAngularDampingFactor()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: btRigidBody$btRigidBodyConstructionInfo(boolean,float,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo: btRigidBody$btRigidBodyConstructionInfo(boolean,float,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: btRigidBodyDoubleData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: btRigidBodyDoubleData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setCollisionObjectData(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData getCollisionObjectData()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setInvInertiaTensorWorld(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3DoubleData getInvInertiaTensorWorld()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setLinearVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getLinearVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setAngularVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getAngularVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setAngularFactor(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getAngularFactor()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setLinearFactor(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getLinearFactor()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setGravity(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getGravity()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setGravity_acceleration(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getGravity_acceleration()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setInvInertiaLocal(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getInvInertiaLocal()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setTotalForce(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getTotalForce()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setTotalTorque(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getTotalTorque()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setInverseMass(double)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: double getInverseMass()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setLinearDamping(double)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: double getLinearDamping()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setAngularDamping(double)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: double getAngularDamping()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setAdditionalDampingFactor(double)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: double getAdditionalDampingFactor()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setAdditionalLinearDampingThresholdSqr(double)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: double getAdditionalLinearDampingThresholdSqr()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setAdditionalAngularDampingThresholdSqr(double)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: double getAdditionalAngularDampingThresholdSqr()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setAdditionalAngularDampingFactor(double)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: double getAdditionalAngularDampingFactor()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setLinearSleepingThreshold(double)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: double getLinearSleepingThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setAngularSleepingThreshold(double)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: double getAngularSleepingThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setAdditionalDamping(int)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: int getAdditionalDamping()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: void setPadding(java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: java.lang.String getPadding()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData: btRigidBodyDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFlags
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFlags: int BT_DISABLE_WORLD_GRAVITY
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFlags: int BT_ENABLE_GYROPSCOPIC_FORCE
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFlags: btRigidBodyFlags()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: btRigidBodyFloatData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: btRigidBodyFloatData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setCollisionObjectData(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData getCollisionObjectData()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setInvInertiaTensorWorld(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3FloatData getInvInertiaTensorWorld()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setLinearVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLinearVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setAngularVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAngularVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setAngularFactor(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAngularFactor()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setLinearFactor(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLinearFactor()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setGravity(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getGravity()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setGravity_acceleration(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getGravity_acceleration()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setInvInertiaLocal(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getInvInertiaLocal()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setTotalForce(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getTotalForce()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setTotalTorque(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getTotalTorque()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setInverseMass(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: float getInverseMass()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setLinearDamping(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: float getLinearDamping()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setAngularDamping(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: float getAngularDamping()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setAdditionalDampingFactor(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: float getAdditionalDampingFactor()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setAdditionalLinearDampingThresholdSqr(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: float getAdditionalLinearDampingThresholdSqr()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setAdditionalAngularDampingThresholdSqr(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: float getAdditionalAngularDampingThresholdSqr()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setAdditionalAngularDampingFactor(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: float getAdditionalAngularDampingFactor()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setLinearSleepingThreshold(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: float getLinearSleepingThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setAngularSleepingThreshold(float)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: float getAngularSleepingThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: void setAdditionalDamping(int)
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: int getAdditionalDamping()
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData: btRigidBodyFloatData()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: btRotationalLimitMotor(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: btRotationalLimitMotor(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setLoLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: float getLoLimit()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setHiLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: float getHiLimit()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setTargetVelocity(float)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: float getTargetVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setMaxMotorForce(float)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: float getMaxMotorForce()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setMaxLimitForce(float)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: float getMaxLimitForce()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setDamping(float)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: float getDamping()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setLimitSoftness(float)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: float getLimitSoftness()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setNormalCFM(float)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: float getNormalCFM()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setStopERP(float)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: float getStopERP()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setStopCFM(float)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: float getStopCFM()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setBounce(float)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: float getBounce()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setEnableMotor(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: boolean getEnableMotor()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setCurrentLimitError(float)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: float getCurrentLimitError()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setCurrentPosition(float)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: float getCurrentPosition()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setCurrentLimit(int)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: int getCurrentLimit()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: void setAccumulatedImpulse(float)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: float getAccumulatedImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: btRotationalLimitMotor()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: btRotationalLimitMotor(com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: boolean isLimited()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: boolean needApplyTorques()
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: int testLimitValue(float)
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor: float solveAngularLimits(float,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver
com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver: btSequentialImpulseConstraintSolver(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver: btSequentialImpulseConstraintSolver(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver)
com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver: btSequentialImpulseConstraintSolver()
com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver: long btRand2()
com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver: int btRandInt2(int)
com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver: void setRandSeed(long)
com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver: long getRandSeed()
com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld
com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld: btSimpleDynamicsWorld(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld: btSimpleDynamicsWorld(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld)
com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld: btSimpleDynamicsWorld(com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld: int stepSimulation(float,int,float)
com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld: int stepSimulation(float,int)
com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld: int stepSimulation(float)
com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld: void addRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld: void addRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,short,short)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: btSliderConstraint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: btSliderConstraint(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: btSliderConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: btSliderConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void getInfo1NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void getInfo2NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyA()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyB()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: com.badlogic.gdx.math.Matrix4 getCalculatedTransformA()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: com.badlogic.gdx.math.Matrix4 getCalculatedTransformB()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: com.badlogic.gdx.math.Matrix4 getFrameOffsetA()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: com.badlogic.gdx.math.Matrix4 getFrameOffsetB()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getLowerLinLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setLowerLinLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getUpperLinLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setUpperLinLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getLowerAngLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setLowerAngLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getUpperAngLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setUpperAngLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: boolean getUseLinearReferenceFrameA()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getSoftnessDirLin()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getRestitutionDirLin()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getDampingDirLin()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getSoftnessDirAng()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getRestitutionDirAng()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getDampingDirAng()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getSoftnessLimLin()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getRestitutionLimLin()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getDampingLimLin()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getSoftnessLimAng()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getRestitutionLimAng()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getDampingLimAng()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getSoftnessOrthoLin()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getRestitutionOrthoLin()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getDampingOrthoLin()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getSoftnessOrthoAng()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getRestitutionOrthoAng()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getDampingOrthoAng()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setSoftnessDirLin(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setRestitutionDirLin(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setDampingDirLin(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setSoftnessDirAng(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setRestitutionDirAng(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setDampingDirAng(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setSoftnessLimLin(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setRestitutionLimLin(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setDampingLimLin(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setSoftnessLimAng(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setRestitutionLimAng(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setDampingLimAng(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setSoftnessOrthoLin(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setRestitutionOrthoLin(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setDampingOrthoLin(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setSoftnessOrthoAng(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setRestitutionOrthoAng(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setDampingOrthoAng(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setPoweredLinMotor(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: boolean getPoweredLinMotor()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setTargetLinMotorVelocity(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getTargetLinMotorVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setMaxLinMotorForce(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getMaxLinMotorForce()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setPoweredAngMotor(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: boolean getPoweredAngMotor()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setTargetAngMotorVelocity(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getTargetAngMotorVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setMaxAngMotorForce(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getMaxAngMotorForce()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getLinearPos()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getAngularPos()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: boolean getSolveLinLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getLinDepth()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: boolean getSolveAngLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getAngDepth()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void calculateTransforms(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void testLinLimits()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void testAngLimits()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: com.badlogic.gdx.math.Vector3 getAncorInA()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: com.badlogic.gdx.math.Vector3 getAncorInB()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: boolean getUseFrameOffset()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setUseFrameOffset(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setFrames(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setParam(int,float,int)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: void setParam(int,float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getParam(int,int)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint: float getParam(int)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: btSliderConstraintData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: btSliderConstraintData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData getTypeConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbAFrame()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbBFrame()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: void setLinearUpperLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: float getLinearUpperLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: void setLinearLowerLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: float getLinearLowerLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: void setAngularUpperLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: float getAngularUpperLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: void setAngularLowerLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: float getAngularLowerLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: void setUseLinearReferenceFrameA(int)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: int getUseLinearReferenceFrameA()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: void setUseOffsetForConstraintFrame(int)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: int getUseOffsetForConstraintFrame()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData: btSliderConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: btSliderConstraintDoubleData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: btSliderConstraintDoubleData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData getTypeConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbAFrame()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbBFrame()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: void setLinearUpperLimit(double)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: double getLinearUpperLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: void setLinearLowerLimit(double)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: double getLinearLowerLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: void setAngularUpperLimit(double)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: double getAngularUpperLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: void setAngularLowerLimit(double)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: double getAngularLowerLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: void setUseLinearReferenceFrameA(int)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: int getUseLinearReferenceFrameA()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: void setUseOffsetForConstraintFrame(int)
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: int getUseOffsetForConstraintFrame()
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData: btSliderConstraintDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags
com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags: int BT_SLIDER_FLAGS_CFM_DIRLIN
com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags: int BT_SLIDER_FLAGS_ERP_DIRLIN
com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags: int BT_SLIDER_FLAGS_CFM_DIRANG
com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags: int BT_SLIDER_FLAGS_ERP_DIRANG
com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags: int BT_SLIDER_FLAGS_CFM_ORTLIN
com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags: int BT_SLIDER_FLAGS_ERP_ORTLIN
com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags: int BT_SLIDER_FLAGS_CFM_ORTANG
com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags: int BT_SLIDER_FLAGS_ERP_ORTANG
com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags: int BT_SLIDER_FLAGS_CFM_LIMLIN
com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags: int BT_SLIDER_FLAGS_ERP_LIMLIN
com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags: int BT_SLIDER_FLAGS_CFM_LIMANG
com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags: int BT_SLIDER_FLAGS_ERP_LIMANG
com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags: btSliderFlags()
com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint
com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint: btSolve2LinearConstraint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint: btSolve2LinearConstraint(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint: btSolve2LinearConstraint(float,float)
com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint: void resolveUnilateralPairConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint: void resolveBilateralPairConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: btSolverBody(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: btSolverBody(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSolverBody)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void setWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.physics.bullet.linearmath.btTransform getWorldTransform()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void setDeltaLinearVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getDeltaLinearVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void setDeltaAngularVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getDeltaAngularVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void setAngularFactor(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAngularFactor()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void setLinearFactor(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLinearFactor()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void setInvMass(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getInvMass()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void setPushVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getPushVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void setTurnVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getTurnVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void setLinearVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLinearVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void setAngularVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAngularVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void setExternalForceImpulse(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getExternalForceImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void setExternalTorqueImpulse(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getExternalTorqueImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void setOriginalBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getOriginalBody()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void getVelocityInLocalPointNoDelta(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void getVelocityInLocalPointObsolete(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void getAngularVelocity(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void applyImpulse(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void internalApplyPushImpulse(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.math.Vector3 internalGetDeltaLinearVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.math.Vector3 internalGetDeltaAngularVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.math.Vector3 internalGetAngularFactor()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.math.Vector3 internalGetInvMass()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void internalSetInvMass(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.math.Vector3 internalGetPushVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: com.badlogic.gdx.math.Vector3 internalGetTurnVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void internalGetVelocityInLocalPointObsolete(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void internalGetAngularVelocity(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void internalApplyImpulse(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void writebackVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: void writebackVelocityAndTransform(float,float)
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody: btSolverBody()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: btSolverConstraint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: btSolverConstraint(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setRelpos1CrossNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRelpos1CrossNormal()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setContactNormal1(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getContactNormal1()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setRelpos2CrossNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRelpos2CrossNormal()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setContactNormal2(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getContactNormal2()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setAngularComponentA(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAngularComponentA()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setAngularComponentB(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAngularComponentB()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setAppliedPushImpulse(float)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: float getAppliedPushImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setAppliedImpulse(float)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: float getAppliedImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setFriction(float)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: float getFriction()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setJacDiagABInv(float)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: float getJacDiagABInv()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setRhs(float)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: float getRhs()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setCfm(float)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: float getCfm()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setLowerLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: float getLowerLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setUpperLimit(float)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: float getUpperLimit()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setRhsPenetration(float)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: float getRhsPenetration()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setOriginalContactPoint(long)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: long getOriginalContactPoint()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setUnusedPadding4(float)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: float getUnusedPadding4()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setNumRowsForNonContactConstraint(int)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: int getNumRowsForNonContactConstraint()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setOverrideNumSolverIterations(int)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: int getOverrideNumSolverIterations()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setFrictionIndex(int)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: int getFrictionIndex()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setSolverBodyIdA(int)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: int getSolverBodyIdA()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: void setSolverBodyIdB(int)
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: int getSolverBodyIdB()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint: btSolverConstraint()
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint$btSolverConstraintType
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint$btSolverConstraintType: int BT_SOLVER_CONTACT_1D
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint$btSolverConstraintType: int BT_SOLVER_FRICTION_1D
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint$btSolverConstraintType: btSolverConstraint$btSolverConstraintType()
com.badlogic.gdx.physics.bullet.dynamics.btSolverMode
com.badlogic.gdx.physics.bullet.dynamics.btSolverMode: int SOLVER_RANDMIZE_ORDER
com.badlogic.gdx.physics.bullet.dynamics.btSolverMode: int SOLVER_FRICTION_SEPARATE
com.badlogic.gdx.physics.bullet.dynamics.btSolverMode: int SOLVER_USE_WARMSTARTING
com.badlogic.gdx.physics.bullet.dynamics.btSolverMode: int SOLVER_USE_2_FRICTION_DIRECTIONS
com.badlogic.gdx.physics.bullet.dynamics.btSolverMode: int SOLVER_ENABLE_FRICTION_DIRECTION_CACHING
com.badlogic.gdx.physics.bullet.dynamics.btSolverMode: int SOLVER_DISABLE_VELOCITY_DEPENDENT_FRICTION_DIRECTION
com.badlogic.gdx.physics.bullet.dynamics.btSolverMode: int SOLVER_CACHE_FRIENDLY
com.badlogic.gdx.physics.bullet.dynamics.btSolverMode: int SOLVER_SIMD
com.badlogic.gdx.physics.bullet.dynamics.btSolverMode: int SOLVER_INTERLEAVE_CONTACT_AND_FRICTION_CONSTRAINTS
com.badlogic.gdx.physics.bullet.dynamics.btSolverMode: int SOLVER_ALLOW_ZERO_LENGTH_FRICTION_DIRECTIONS
com.badlogic.gdx.physics.bullet.dynamics.btSolverMode: btSolverMode()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: btTranslationalLimitMotor(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: btTranslationalLimitMotor(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void setLowerLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLowerLimit()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void setUpperLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getUpperLimit()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void setAccumulatedImpulse(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAccumulatedImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void setLimitSoftness(float)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: float getLimitSoftness()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void setDamping(float)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: float getDamping()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void setRestitution(float)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: float getRestitution()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void setNormalCFM(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormalCFM()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void setStopERP(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getStopERP()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void setStopCFM(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getStopCFM()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void setEnableMotor(boolean[])
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: boolean[] getEnableMotor()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void setTargetVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getTargetVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void setMaxMotorForce(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getMaxMotorForce()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void setCurrentLimitError(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getCurrentLimitError()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void setCurrentLinearDiff(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getCurrentLinearDiff()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: void setCurrentLimit(int[])
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: int[] getCurrentLimit()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: btTranslationalLimitMotor()
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: btTranslationalLimitMotor(com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: boolean isLimited(int)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: boolean needApplyForce(int)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: int testLimitValue(int,float)
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor: float solveLinearAxis(float,float,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: btTypedConstraint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: btTypedConstraint(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getFixedBody()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: int getOverrideNumSolverIterations()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void setOverrideNumSolverIterations(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void buildJacobian()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void setupSolverConstraint(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t,int,int,float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void getInfo1(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void getInfo2(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void internalSetAppliedImpulse(float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: float internalGetAppliedImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: float getBreakingImpulseThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void setBreakingImpulseThreshold(float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: boolean isEnabled()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void setEnabled(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void solveConstraintObsolete(com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyA()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyB()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: int getUserConstraintType()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void setUserConstraintType(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void setUserConstraintId(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: int getUserConstraintId()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void setUserConstraintPtr(long)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: long getUserConstraintPtr()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void setJointFeedback(com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback getJointFeedback()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: int getUid()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: boolean needsFeedback()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void enableFeedback(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: float getAppliedImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: int getConstraintType()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void setDbgDrawSize(float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: float getDbgDrawSize()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void setParam(int,float,int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: void setParam(int,float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: float getParam(int,int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: float getParam(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: int calculateSerializeBufferSize()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint: java.lang.String serialize(long,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btSerializer)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1: btTypedConstraint$btConstraintInfo1(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1: btTypedConstraint$btConstraintInfo1(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1: void setNumConstraintRows(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1: int getNumConstraintRows()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1: void setNub(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1: int getNub()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1: btTypedConstraint$btConstraintInfo1()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: btTypedConstraint$btConstraintInfo2(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: btTypedConstraint$btConstraintInfo2(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void setFps(float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: float getFps()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void setErp(float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: float getErp()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void setJ1linearAxis(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getJ1linearAxis()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void setJ1angularAxis(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getJ1angularAxis()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void setJ2linearAxis(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getJ2linearAxis()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void setJ2angularAxis(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getJ2angularAxis()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void setRowskip(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: int getRowskip()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void setConstraintError(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getConstraintError()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void setCfm(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getCfm()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void setLowerLimit(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getLowerLimit()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void setUpperLimit(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getUpperLimit()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void setFindex(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_int getFindex()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void setNumIterations(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: int getNumIterations()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: void setDamping(float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: float getDamping()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2: btTypedConstraint$btConstraintInfo2()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: btTypedConstraintData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: btTypedConstraintData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void setRbA(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData getRbA()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void setRbB(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData getRbB()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void setName(java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: java.lang.String getName()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void setObjectType(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: int getObjectType()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void setUserConstraintType(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: int getUserConstraintType()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void setUserConstraintId(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: int getUserConstraintId()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void setNeedsFeedback(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: int getNeedsFeedback()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void setAppliedImpulse(float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: float getAppliedImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void setDbgDrawSize(float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: float getDbgDrawSize()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void setDisableCollisionsBetweenLinkedBodies(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: int getDisableCollisionsBetweenLinkedBodies()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void setOverrideNumSolverIterations(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: int getOverrideNumSolverIterations()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void setBreakingImpulseThreshold(float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: float getBreakingImpulseThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: void setIsEnabled(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: int getIsEnabled()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData: btTypedConstraintData()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: btTypedConstraintDoubleData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: btTypedConstraintDoubleData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void setRbA(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData getRbA()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void setRbB(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData getRbB()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void setName(java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: java.lang.String getName()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void setObjectType(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: int getObjectType()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void setUserConstraintType(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: int getUserConstraintType()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void setUserConstraintId(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: int getUserConstraintId()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void setNeedsFeedback(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: int getNeedsFeedback()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void setAppliedImpulse(double)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: double getAppliedImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void setDbgDrawSize(double)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: double getDbgDrawSize()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void setDisableCollisionsBetweenLinkedBodies(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: int getDisableCollisionsBetweenLinkedBodies()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void setOverrideNumSolverIterations(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: int getOverrideNumSolverIterations()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void setBreakingImpulseThreshold(double)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: double getBreakingImpulseThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void setIsEnabled(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: int getIsEnabled()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: void setPadding(java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: java.lang.String getPadding()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData: btTypedConstraintDoubleData()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: btTypedConstraintFloatData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: btTypedConstraintFloatData(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void setRbA(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData getRbA()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void setRbB(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData getRbB()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void setName(java.lang.String)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: java.lang.String getName()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void setObjectType(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: int getObjectType()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void setUserConstraintType(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: int getUserConstraintType()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void setUserConstraintId(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: int getUserConstraintId()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void setNeedsFeedback(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: int getNeedsFeedback()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void setAppliedImpulse(float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: float getAppliedImpulse()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void setDbgDrawSize(float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: float getDbgDrawSize()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void setDisableCollisionsBetweenLinkedBodies(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: int getDisableCollisionsBetweenLinkedBodies()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void setOverrideNumSolverIterations(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: int getOverrideNumSolverIterations()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void setBreakingImpulseThreshold(float)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: float getBreakingImpulseThreshold()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: void setIsEnabled(int)
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: int getIsEnabled()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData: btTypedConstraintFloatData()
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintType
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintType: int POINT2POINT_CONSTRAINT_TYPE
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintType: int HINGE_CONSTRAINT_TYPE
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintType: int CONETWIST_CONSTRAINT_TYPE
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintType: int D6_CONSTRAINT_TYPE
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintType: int SLIDER_CONSTRAINT_TYPE
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintType: int CONTACT_CONSTRAINT_TYPE
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintType: int D6_SPRING_CONSTRAINT_TYPE
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintType: int GEAR_CONSTRAINT_TYPE
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintType: int FIXED_CONSTRAINT_TYPE
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintType: int MAX_CONSTRAINT_TYPE
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintType: btTypedConstraintType()
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: btUniversalConstraint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: btUniversalConstraint(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint)
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: btUniversalConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: com.badlogic.gdx.math.Vector3 getAnchor()
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: com.badlogic.gdx.math.Vector3 getAnchor2()
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: com.badlogic.gdx.math.Vector3 getAxis1()
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: com.badlogic.gdx.math.Vector3 getAxis2()
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: float getAngle1()
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: float getAngle2()
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: void setUpperLimit(float,float)
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: void setLowerLimit(float,float)
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint: void setAxis(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster: btVehicleRaycaster(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster: btVehicleRaycaster(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster)
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster: long castRay(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult)
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult: btVehicleRaycaster$btVehicleRaycasterResult(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult: btVehicleRaycaster$btVehicleRaycasterResult(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult)
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult: btVehicleRaycaster$btVehicleRaycasterResult()
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult: void setHitPointInWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitPointInWorld()
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult: void setHitNormalInWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitNormalInWorld()
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult: void setDistFraction(float)
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult: float getDistFraction()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: btWheelInfo(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: btWheelInfo(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setRaycastInfo(com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo getRaycastInfo()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: com.badlogic.gdx.physics.bullet.linearmath.btTransform getWorldTransform()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setChassisConnectionPointCS(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getChassisConnectionPointCS()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setWheelDirectionCS(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWheelDirectionCS()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setWheelAxleCS(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWheelAxleCS()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setSuspensionRestLength1(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getSuspensionRestLength1()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setMaxSuspensionTravelCm(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getMaxSuspensionTravelCm()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getSuspensionRestLength()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setWheelsRadius(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getWheelsRadius()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setSuspensionStiffness(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getSuspensionStiffness()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setWheelsDampingCompression(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getWheelsDampingCompression()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setWheelsDampingRelaxation(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getWheelsDampingRelaxation()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setFrictionSlip(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getFrictionSlip()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setSteering(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getSteering()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setRotation(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getRotation()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setDeltaRotation(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getDeltaRotation()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setRollInfluence(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getRollInfluence()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setMaxSuspensionForce(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getMaxSuspensionForce()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setEngineForce(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getEngineForce()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setBrake(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getBrake()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setBIsFrontWheel(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: boolean getBIsFrontWheel()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setClientInfo(long)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: long getClientInfo()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: btWheelInfo()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: btWheelInfo(com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void updateWheel(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setClippedInvContactDotSuspension(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getClippedInvContactDotSuspension()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setSuspensionRelativeVelocity(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getSuspensionRelativeVelocity()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setWheelsSuspensionForce(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getWheelsSuspensionForce()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: void setSkidInfo(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo: float getSkidInfo()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: btWheelInfo$RaycastInfo(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: btWheelInfo$RaycastInfo(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: void setContactNormalWS(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getContactNormalWS()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: void setContactPointWS(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getContactPointWS()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: void setSuspensionLength(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: float getSuspensionLength()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: void setHardPointWS(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHardPointWS()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: void setWheelDirectionWS(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWheelDirectionWS()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: void setWheelAxleWS(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWheelAxleWS()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: void setIsInContact(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: boolean getIsInContact()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: void setGroundObject(long)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: long getGroundObject()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo: btWheelInfo$RaycastInfo()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: long swigCPtr
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: btWheelInfoConstructionInfo(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: btWheelInfoConstructionInfo(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: void finalize()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: void delete()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: void setChassisConnectionCS(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getChassisConnectionCS()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: void setWheelDirectionCS(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWheelDirectionCS()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: void setWheelAxleCS(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWheelAxleCS()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: void setSuspensionRestLength(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: float getSuspensionRestLength()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: void setMaxSuspensionTravelCm(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: float getMaxSuspensionTravelCm()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: void setWheelRadius(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: float getWheelRadius()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: void setSuspensionStiffness(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: float getSuspensionStiffness()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: void setWheelsDampingCompression(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: float getWheelsDampingCompression()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: void setWheelsDampingRelaxation(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: float getWheelsDampingRelaxation()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: void setFrictionSlip(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: float getFrictionSlip()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: void setMaxSuspensionForce(float)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: float getMaxSuspensionForce()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: void setBIsFrontWheel(boolean)
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: boolean getBIsFrontWheel()
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo: btWheelInfoConstructionInfo()
com.badlogic.gdx.physics.bullet.extras.Extras
com.badlogic.gdx.physics.bullet.extras.Extras: com.badlogic.gdx.math.Vector3 staticVector3
com.badlogic.gdx.physics.bullet.extras.Extras: com.badlogic.gdx.utils.Pool poolVector3
com.badlogic.gdx.physics.bullet.extras.Extras: com.badlogic.gdx.math.Quaternion staticQuaternion
com.badlogic.gdx.physics.bullet.extras.Extras: com.badlogic.gdx.utils.Pool poolQuaternion
com.badlogic.gdx.physics.bullet.extras.Extras: com.badlogic.gdx.math.Matrix3 staticMatrix3
com.badlogic.gdx.physics.bullet.extras.Extras: com.badlogic.gdx.utils.Pool poolMatrix3
com.badlogic.gdx.physics.bullet.extras.Extras: com.badlogic.gdx.math.Matrix4 staticMatrix4
com.badlogic.gdx.physics.bullet.extras.Extras: com.badlogic.gdx.utils.Pool poolMatrix4
com.badlogic.gdx.physics.bullet.extras.Extras: Extras()
com.badlogic.gdx.physics.bullet.extras.Extras: void <clinit>()
com.badlogic.gdx.physics.bullet.extras.Extras$1
com.badlogic.gdx.physics.bullet.extras.Extras$1: Extras$1()
com.badlogic.gdx.physics.bullet.extras.Extras$1: com.badlogic.gdx.math.Vector3 newObject()
com.badlogic.gdx.physics.bullet.extras.Extras$1: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.extras.Extras$2
com.badlogic.gdx.physics.bullet.extras.Extras$2: Extras$2()
com.badlogic.gdx.physics.bullet.extras.Extras$2: com.badlogic.gdx.math.Quaternion newObject()
com.badlogic.gdx.physics.bullet.extras.Extras$2: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.extras.Extras$3
com.badlogic.gdx.physics.bullet.extras.Extras$3: Extras$3()
com.badlogic.gdx.physics.bullet.extras.Extras$3: com.badlogic.gdx.math.Matrix3 newObject()
com.badlogic.gdx.physics.bullet.extras.Extras$3: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.extras.Extras$4
com.badlogic.gdx.physics.bullet.extras.Extras$4: Extras$4()
com.badlogic.gdx.physics.bullet.extras.Extras$4: com.badlogic.gdx.math.Matrix4 newObject()
com.badlogic.gdx.physics.bullet.extras.Extras$4: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: ExtrasJNI()
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long new_btStringArray__SWIG_0()
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void delete_btStringArray(long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long new_btStringArray__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btStringArray)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: int btStringArray_size(long,com.badlogic.gdx.physics.bullet.extras.btStringArray)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: java.lang.String btStringArray_at__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,int)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btStringArray_clear(long,com.badlogic.gdx.physics.bullet.extras.btStringArray)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btStringArray_pop_back(long,com.badlogic.gdx.physics.bullet.extras.btStringArray)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btStringArray_resizeNoInitialize(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,int)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btStringArray_resize__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,int,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btStringArray_resize__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,int)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: java.lang.String btStringArray_expandNonInitializing(long,com.badlogic.gdx.physics.bullet.extras.btStringArray)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: java.lang.String btStringArray_expand__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: java.lang.String btStringArray_expand__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btStringArray)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btStringArray_push_back(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: int btStringArray_capacity(long,com.badlogic.gdx.physics.bullet.extras.btStringArray)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btStringArray_reserve(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,int)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long new_btStringArray_less()
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void delete_btStringArray_less(long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btStringArray_swap(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,int,int)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: int btStringArray_findBinarySearch(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: int btStringArray_findLinearSearch(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btStringArray_remove(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btStringArray_initializeFromBuffer(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,long,int,int)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btStringArray_copyFromArray(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,long,com.badlogic.gdx.physics.bullet.extras.btStringArray)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long new_btWorldImporter(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void delete_btWorldImporter(long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btWorldImporter_deleteAllData(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btWorldImporter_setVerboseMode(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,int)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: int btWorldImporter_getVerboseMode(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: int btWorldImporter_getNumCollisionShapes(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_getCollisionShapeByIndex(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,int)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: int btWorldImporter_getNumRigidBodies(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_getRigidBodyByIndex(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,int)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: int btWorldImporter_getNumConstraints(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_getConstraintByIndex(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,int)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: int btWorldImporter_getNumBvhs(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_getBvhByIndex(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,int)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: int btWorldImporter_getNumTriangleInfoMaps(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_getTriangleInfoMapByIndex(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,int)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_getCollisionShapeByName(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_getRigidBodyByName(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_getConstraintByName(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: java.lang.String btWorldImporter_getNameForPointer__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btWorldImporter_setDynamicsWorldInfo(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createRigidBody(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,boolean,float,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createCollisionObject(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createPlaneShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createBoxShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createSphereShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createCapsuleShapeX(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,float,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createCapsuleShapeY(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,float,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createCapsuleShapeZ(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,float,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createCylinderShapeX(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,float,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createCylinderShapeY(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,float,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createCylinderShapeZ(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,float,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createTriangleMeshContainer(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createBvhTriangleMeshShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createConvexTriangleMeshShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createGimpactShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createStridingMeshInterfaceData(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createConvexHullShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createCompoundShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createScaledTrangleMeshShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createMultiSphereShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,int)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createMeshInterface(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createOptimizedBvh(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createTriangleInfoMap(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createPoint2PointConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createPoint2PointConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createHingeConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createHingeConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createHingeConstraint__SWIG_2(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createHingeConstraint__SWIG_3(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createConeTwistConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createConeTwistConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createGeneric6DofConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createGeneric6DofConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createGeneric6DofSpringConstraint(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createSliderConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btWorldImporter_createSliderConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long new_btBulletWorldImporter__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long new_btBulletWorldImporter__SWIG_1()
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void delete_btBulletWorldImporter(long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: boolean btBulletWorldImporter_loadFile(long,com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: boolean btBulletWorldImporter_loadFileFromMemory__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: boolean btBulletWorldImporter_convertAllObjects(long,com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: boolean btBulletWorldImporter_convertAllObjectsSwigExplicitbtBulletWorldImporter(long,com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: boolean btBulletWorldImporter_loadFileFromMemory__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,java.nio.ByteBuffer,int)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btBulletWorldImporter_director_connect(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void btBulletWorldImporter_change_ownership(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long btBulletWorldImporter_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void SwigDirector_btBulletWorldImporter_deleteAllData(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void SwigDirector_btBulletWorldImporter_setDynamicsWorldInfo(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,com.badlogic.gdx.math.Vector3,long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createRigidBody(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,boolean,float,com.badlogic.gdx.math.Matrix4,long,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createCollisionObject(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,com.badlogic.gdx.math.Matrix4,long,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createPlaneShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createBoxShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createSphereShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createCapsuleShapeX(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,float,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createCapsuleShapeY(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,float,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createCapsuleShapeZ(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,float,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createCylinderShapeX(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,float,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createCylinderShapeY(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,float,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createCylinderShapeZ(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,float,float)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createTriangleMeshContainer(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createBvhTriangleMeshShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createConvexTriangleMeshShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createGimpactShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createStridingMeshInterfaceData(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createConvexHullShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createCompoundShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createScaledTrangleMeshShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createMeshInterface(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createOptimizedBvh(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createTriangleInfoMap(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createPoint2PointConstraint__SWIG_0(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createPoint2PointConstraint__SWIG_1(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createHingeConstraint__SWIG_0(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createHingeConstraint__SWIG_1(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createHingeConstraint__SWIG_2(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createHingeConstraint__SWIG_3(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createConeTwistConstraint__SWIG_0(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createConeTwistConstraint__SWIG_1(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createGeneric6DofConstraint__SWIG_0(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createGeneric6DofConstraint__SWIG_1(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createGeneric6DofSpringConstraint(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createSliderConstraint__SWIG_0(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: long SwigDirector_btBulletWorldImporter_createSliderConstraint__SWIG_1(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: boolean SwigDirector_btBulletWorldImporter_convertAllObjects(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long)
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void swig_module_init()
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI: void <clinit>()
com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_bParse__btBulletFile
com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_bParse__btBulletFile: long swigCPtr
com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_bParse__btBulletFile: SWIGTYPE_p_bParse__btBulletFile(long,boolean)
com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_bParse__btBulletFile: SWIGTYPE_p_bParse__btBulletFile()
com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_bParse__btBulletFile: long getCPtr(com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_bParse__btBulletFile)
com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_btGImpactMeshShape
com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_btGImpactMeshShape: long swigCPtr
com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_btGImpactMeshShape: SWIGTYPE_p_btGImpactMeshShape(long,boolean)
com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_btGImpactMeshShape: SWIGTYPE_p_btGImpactMeshShape()
com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_btGImpactMeshShape: long getCPtr(com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_btGImpactMeshShape)
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: long swigCPtr
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: btBulletWorldImporter(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: btBulletWorldImporter(long,boolean)
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: long getCPtr(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter)
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: void finalize()
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: void delete()
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: boolean loadFile(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: btBulletWorldImporter(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: btBulletWorldImporter()
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: boolean loadFile(java.lang.String)
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: boolean loadFileFromMemory(com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_bParse__btBulletFile)
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: boolean convertAllObjects(com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_bParse__btBulletFile)
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: boolean loadFileFromMemory(java.nio.ByteBuffer,int)
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter: void <clinit>()
com.badlogic.gdx.physics.bullet.extras.btStringArray
com.badlogic.gdx.physics.bullet.extras.btStringArray: long swigCPtr
com.badlogic.gdx.physics.bullet.extras.btStringArray: btStringArray(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.extras.btStringArray: btStringArray(long,boolean)
com.badlogic.gdx.physics.bullet.extras.btStringArray: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.extras.btStringArray: long getCPtr(com.badlogic.gdx.physics.bullet.extras.btStringArray)
com.badlogic.gdx.physics.bullet.extras.btStringArray: void finalize()
com.badlogic.gdx.physics.bullet.extras.btStringArray: void delete()
com.badlogic.gdx.physics.bullet.extras.btStringArray: btStringArray()
com.badlogic.gdx.physics.bullet.extras.btStringArray: btStringArray(com.badlogic.gdx.physics.bullet.extras.btStringArray)
com.badlogic.gdx.physics.bullet.extras.btStringArray: int size()
com.badlogic.gdx.physics.bullet.extras.btStringArray: java.lang.String at(int)
com.badlogic.gdx.physics.bullet.extras.btStringArray: void clear()
com.badlogic.gdx.physics.bullet.extras.btStringArray: void pop_back()
com.badlogic.gdx.physics.bullet.extras.btStringArray: void resizeNoInitialize(int)
com.badlogic.gdx.physics.bullet.extras.btStringArray: void resize(int,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.btStringArray: void resize(int)
com.badlogic.gdx.physics.bullet.extras.btStringArray: java.lang.String expandNonInitializing()
com.badlogic.gdx.physics.bullet.extras.btStringArray: java.lang.String expand(java.lang.String)
com.badlogic.gdx.physics.bullet.extras.btStringArray: java.lang.String expand()
com.badlogic.gdx.physics.bullet.extras.btStringArray: void push_back(java.lang.String)
com.badlogic.gdx.physics.bullet.extras.btStringArray: int capacity()
com.badlogic.gdx.physics.bullet.extras.btStringArray: void reserve(int)
com.badlogic.gdx.physics.bullet.extras.btStringArray: void swap(int,int)
com.badlogic.gdx.physics.bullet.extras.btStringArray: int findBinarySearch(java.lang.String)
com.badlogic.gdx.physics.bullet.extras.btStringArray: int findLinearSearch(java.lang.String)
com.badlogic.gdx.physics.bullet.extras.btStringArray: void remove(java.lang.String)
com.badlogic.gdx.physics.bullet.extras.btStringArray: void initializeFromBuffer(long,int,int)
com.badlogic.gdx.physics.bullet.extras.btStringArray: void copyFromArray(com.badlogic.gdx.physics.bullet.extras.btStringArray)
com.badlogic.gdx.physics.bullet.extras.btStringArray$less
com.badlogic.gdx.physics.bullet.extras.btStringArray$less: long swigCPtr
com.badlogic.gdx.physics.bullet.extras.btStringArray$less: btStringArray$less(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.extras.btStringArray$less: btStringArray$less(long,boolean)
com.badlogic.gdx.physics.bullet.extras.btStringArray$less: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.extras.btStringArray$less: long getCPtr(com.badlogic.gdx.physics.bullet.extras.btStringArray$less)
com.badlogic.gdx.physics.bullet.extras.btStringArray$less: void finalize()
com.badlogic.gdx.physics.bullet.extras.btStringArray$less: void delete()
com.badlogic.gdx.physics.bullet.extras.btStringArray$less: btStringArray$less()
com.badlogic.gdx.physics.bullet.extras.btWorldImporter
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: long swigCPtr
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: btWorldImporter(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: btWorldImporter(long,boolean)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: long getCPtr(com.badlogic.gdx.physics.bullet.extras.btWorldImporter)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: void finalize()
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: void delete()
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: btWorldImporter(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: void deleteAllData()
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: void setVerboseMode(int)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: int getVerboseMode()
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: int getNumCollisionShapes()
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btCollisionShape getCollisionShapeByIndex(int)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: int getNumRigidBodies()
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getRigidBodyByIndex(int)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: int getNumConstraints()
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint getConstraintByIndex(int)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: int getNumBvhs()
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh getBvhByIndex(int)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: int getNumTriangleInfoMaps()
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap getTriangleInfoMapByIndex(int)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btCollisionShape getCollisionShapeByName(java.lang.String)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyByName(java.lang.String)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint getConstraintByName(java.lang.String)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: java.lang.String getNameForPointer(long)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: void setDynamicsWorldInfo(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody createRigidBody(boolean,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btCollisionObject createCollisionObject(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,java.lang.String)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btCollisionShape createPlaneShape(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btCollisionShape createBoxShape(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btCollisionShape createSphereShape(float)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btCollisionShape createCapsuleShapeX(float,float)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btCollisionShape createCapsuleShapeY(float,float)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btCollisionShape createCapsuleShapeZ(float,float)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btCollisionShape createCylinderShapeX(float,float)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btCollisionShape createCylinderShapeY(float,float)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btCollisionShape createCylinderShapeZ(float,float)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray createTriangleMeshContainer()
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape createBvhTriangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btCollisionShape createConvexTriangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_btGImpactMeshShape createGimpactShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData createStridingMeshInterfaceData(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btConvexHullShape createConvexHullShape()
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btCompoundShape createCompoundShape()
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape createScaledTrangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape createMultiSphereShape(com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,int)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray createMeshInterface(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh createOptimizedBvh()
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap createTriangleInfoMap()
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint createPoint2PointConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint createPoint2PointConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint createHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint createHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint createHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint createHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint createConeTwistConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint createConeTwistConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint createGeneric6DofConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint createGeneric6DofConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint createGeneric6DofSpringConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint createSliderConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint createSliderConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean)
com.badlogic.gdx.physics.bullet.extras.btWorldImporter: void <clinit>()
com.badlogic.gdx.physics.bullet.linearmath.ConvexH
com.badlogic.gdx.physics.bullet.linearmath.ConvexH: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.ConvexH: ConvexH(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.ConvexH: ConvexH(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.ConvexH: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.ConvexH: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.ConvexH)
com.badlogic.gdx.physics.bullet.linearmath.ConvexH: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.ConvexH: void delete()
com.badlogic.gdx.physics.bullet.linearmath.ConvexH: ConvexH()
com.badlogic.gdx.physics.bullet.linearmath.ConvexH: void setVertices(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.ConvexH: com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getVertices()
com.badlogic.gdx.physics.bullet.linearmath.ConvexH: void setEdges(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t)
com.badlogic.gdx.physics.bullet.linearmath.ConvexH: com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t getEdges()
com.badlogic.gdx.physics.bullet.linearmath.ConvexH: void setFacets(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t)
com.badlogic.gdx.physics.bullet.linearmath.ConvexH: com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t getFacets()
com.badlogic.gdx.physics.bullet.linearmath.ConvexH: ConvexH(int,int,int)
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge: ConvexH$HalfEdge(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge: ConvexH$HalfEdge(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge)
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge: void delete()
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge: void setEa(short)
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge: short getEa()
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge: void setV(short)
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge: short getV()
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge: void setP(short)
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge: short getP()
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge: ConvexH$HalfEdge()
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge: ConvexH$HalfEdge(short,short,short)
com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3
com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3: GrahamVector3(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3: GrahamVector3(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3)
com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3: void delete()
com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3: GrahamVector3(com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3: void setAngle(float)
com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3: float getAngle()
com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3: void setOrgIndex(int)
com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3: int getOrgIndex()
com.badlogic.gdx.physics.bullet.linearmath.HullDesc
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: HullDesc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: HullDesc(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.HullDesc)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: void delete()
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: HullDesc()
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: HullDesc(int,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: HullDesc(int,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: boolean HasHullFlag(int)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: void SetHullFlag(int)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: void ClearHullFlag(int)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: void setMFlags(long)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: long getMFlags()
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: void setMVcount(long)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: long getMVcount()
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: void setMVertices(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getMVertices()
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: void setMVertexStride(long)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: long getMVertexStride()
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: void setMNormalEpsilon(float)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: float getMNormalEpsilon()
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: void setMMaxVertices(long)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: long getMMaxVertices()
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: void setMMaxFaces(long)
com.badlogic.gdx.physics.bullet.linearmath.HullDesc: long getMMaxFaces()
com.badlogic.gdx.physics.bullet.linearmath.HullError
com.badlogic.gdx.physics.bullet.linearmath.HullError: int QE_OK
com.badlogic.gdx.physics.bullet.linearmath.HullError: int QE_FAIL
com.badlogic.gdx.physics.bullet.linearmath.HullError: HullError()
com.badlogic.gdx.physics.bullet.linearmath.HullFlag
com.badlogic.gdx.physics.bullet.linearmath.HullFlag: int QF_TRIANGLES
com.badlogic.gdx.physics.bullet.linearmath.HullFlag: int QF_REVERSE_ORDER
com.badlogic.gdx.physics.bullet.linearmath.HullFlag: int QF_DEFAULT
com.badlogic.gdx.physics.bullet.linearmath.HullFlag: HullFlag()
com.badlogic.gdx.physics.bullet.linearmath.HullLibrary
com.badlogic.gdx.physics.bullet.linearmath.HullLibrary: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.HullLibrary: HullLibrary(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.HullLibrary: HullLibrary(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.HullLibrary: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.HullLibrary: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.HullLibrary)
com.badlogic.gdx.physics.bullet.linearmath.HullLibrary: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.HullLibrary: void delete()
com.badlogic.gdx.physics.bullet.linearmath.HullLibrary: void setVertexIndexMapping(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t)
com.badlogic.gdx.physics.bullet.linearmath.HullLibrary: com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t getVertexIndexMapping()
com.badlogic.gdx.physics.bullet.linearmath.HullLibrary: int CreateConvexHull(com.badlogic.gdx.physics.bullet.linearmath.HullDesc,com.badlogic.gdx.physics.bullet.linearmath.HullResult)
com.badlogic.gdx.physics.bullet.linearmath.HullLibrary: int ReleaseResult(com.badlogic.gdx.physics.bullet.linearmath.HullResult)
com.badlogic.gdx.physics.bullet.linearmath.HullLibrary: HullLibrary()
com.badlogic.gdx.physics.bullet.linearmath.HullResult
com.badlogic.gdx.physics.bullet.linearmath.HullResult: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.HullResult: HullResult(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.HullResult: HullResult(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.HullResult: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.HullResult: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.HullResult)
com.badlogic.gdx.physics.bullet.linearmath.HullResult: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.HullResult: void delete()
com.badlogic.gdx.physics.bullet.linearmath.HullResult: HullResult()
com.badlogic.gdx.physics.bullet.linearmath.HullResult: void setMPolygons(boolean)
com.badlogic.gdx.physics.bullet.linearmath.HullResult: boolean getMPolygons()
com.badlogic.gdx.physics.bullet.linearmath.HullResult: void setMNumOutputVertices(long)
com.badlogic.gdx.physics.bullet.linearmath.HullResult: long getMNumOutputVertices()
com.badlogic.gdx.physics.bullet.linearmath.HullResult: void setOutputVertices(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.HullResult: com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getOutputVertices()
com.badlogic.gdx.physics.bullet.linearmath.HullResult: void setMNumFaces(long)
com.badlogic.gdx.physics.bullet.linearmath.HullResult: long getMNumFaces()
com.badlogic.gdx.physics.bullet.linearmath.HullResult: void setMNumIndices(long)
com.badlogic.gdx.physics.bullet.linearmath.HullResult: long getMNumIndices()
com.badlogic.gdx.physics.bullet.linearmath.HullResult: void setIndices(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t)
com.badlogic.gdx.physics.bullet.linearmath.HullResult: com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t getIndices()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.math.Vector3 staticVector3
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.utils.Pool poolVector3
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.math.Quaternion staticQuaternion
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.utils.Pool poolQuaternion
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.math.Matrix3 staticMatrix3
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.utils.Pool poolMatrix3
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.math.Matrix4 staticMatrix4
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.utils.Pool poolMatrix4
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: LinearMath()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: int btGetVersion()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: void setBtInfinityMask(int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: int getBtInfinityMask()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btSqrt(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btFabs(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btCos(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btSin(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btTan(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btAcos(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btAsin(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btAtan(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btAtan2(float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btExp(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btLog(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btPow(float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btFmod(float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btAtan2Fast(float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: boolean btFuzzyZero(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: boolean btEqual(float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: boolean btGreaterEqual(float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: int btIsNegative(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btRadians(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btDegrees(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btFsel(float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: boolean btMachineIsLittleEndian()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: long btSelect(long,long,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: int btSelect(long,int,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btSelect(long,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: long btSwapEndian(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: int btSwapEndian(int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: int btSwapEndian(short)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: long btSwapEndianFloat(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btUnswapEndianFloat(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: void btSwapEndianDouble(double,java.nio.ByteBuffer)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: double btUnswapEndianDouble(java.nio.ByteBuffer)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btLargeDot(java.nio.FloatBuffer,java.nio.FloatBuffer,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btNormalizeAngle(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btDot(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btDistance2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btDistance(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btAngle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.math.Vector3 btCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btTriple(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: void btSwapScalarEndian(float,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: void btSwapVector3Endian(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: void btUnSwapVector3Endian(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float dot(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float length(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: float btAngle(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.math.Quaternion inverse(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.math.Vector3 quatRotate(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.math.Quaternion shortestArcQuat(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.math.Quaternion shortestArcQuatNormalize2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: void AabbExpand(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: boolean TestPointAgainstAabb2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: boolean TestAabbAgainstAabb2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: boolean TestTriangleAgainstAabb2(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: int btOutcode(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: boolean btRayAabb2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long[],com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: boolean btRayAabb(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: void btTransformAabb(com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: void btTransformAabb(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: long testQuantizedAabbAgainstQuantizedAabb(java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: void GEN_srand(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: long GEN_rand()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: com.badlogic.gdx.math.Vector3 btAabbSupport(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: void GrahamScanConvexHull2D(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: long btAlignedAllocInternal(long,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: void btAlignedFreeInternal(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: void btAlignedAllocSetCustom(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t__p_void,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_p_void__void)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: void btAlignedAllocSetCustomAligned(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t_int__p_void,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_p_void__void)
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: int getBT_HASH_NULL()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath: void <clinit>()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$1
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$1: LinearMath$1()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$1: com.badlogic.gdx.math.Vector3 newObject()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$1: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$2
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$2: LinearMath$2()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$2: com.badlogic.gdx.math.Quaternion newObject()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$2: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$3
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$3: LinearMath$3()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$3: com.badlogic.gdx.math.Matrix3 newObject()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$3: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$4
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$4: LinearMath$4()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$4: com.badlogic.gdx.math.Matrix4 newObject()
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$4: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathConstants
com.badlogic.gdx.physics.bullet.linearmath.LinearMathConstants: int BT_BULLET_VERSION
com.badlogic.gdx.physics.bullet.linearmath.LinearMathConstants: double BT_LARGE_FLOAT
com.badlogic.gdx.physics.bullet.linearmath.LinearMathConstants: java.lang.String btVector3DataName
com.badlogic.gdx.physics.bullet.linearmath.LinearMathConstants: int USE_BANCHLESS
com.badlogic.gdx.physics.bullet.linearmath.LinearMathConstants: int BT_USE_PLACEMENT_NEW
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: LinearMathJNI()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btGetVersion()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btInfinityMask_set(int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btInfinityMask_get()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btSqrt(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btFabs(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btCos(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btSin(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btTan(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btAcos(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btAsin(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btAtan(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btAtan2(float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btExp(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btLog(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btPow(float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btFmod(float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btAtan2Fast(float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btFuzzyZero(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btEqual(float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btGreaterEqual(float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btIsNegative(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btRadians(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btDegrees(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btFsel(float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btMachineIsLittleEndian()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btSelect__SWIG_0(long,long,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btSelect__SWIG_1(long,int,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btSelect__SWIG_2(long,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btSwapEndian__SWIG_0(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btSwapEndian__SWIG_1(int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btSwapEndian__SWIG_3(short)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btSwapEndianFloat(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btUnswapEndianFloat(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btSwapEndianDouble(double,java.nio.ByteBuffer)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: double btUnswapEndianDouble(java.nio.ByteBuffer)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btLargeDot(java.nio.FloatBuffer,java.nio.FloatBuffer,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btNormalizeAngle(float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btTypedObject(int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTypedObject_objectType_set(long,com.badlogic.gdx.physics.bullet.linearmath.btTypedObject,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btTypedObject_objectType_get(long,com.badlogic.gdx.physics.bullet.linearmath.btTypedObject)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btTypedObject(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btTransform__SWIG_0()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btTransform__SWIG_1(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btTransform__SWIG_2(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btTransform__SWIG_3(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btTransform__SWIG_4(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btTransform__SWIG_5(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransform_mult(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Matrix3 btTransform_getBasis__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btTransform_getOrigin__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Quaternion btTransform_getRotation(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransform_setFromOpenGLMatrix(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,float[])
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransform_getOpenGLMatrix(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,float[])
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransform_setOrigin(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btTransform_invXform(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransform_setBasis(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransform_setRotation(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransform_setIdentity(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Matrix4 btTransform_inverse(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Matrix4 btTransform_inverseTimes(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Matrix4 btTransform_getIdentity()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransform_serialize(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransform_serializeFloat(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransform_deSerialize(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransform_deSerializeDouble(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransform_deSerializeFloat(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btTransform(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransformFloatData_basis_set(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btTransformFloatData_basis_get(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransformFloatData_origin_set(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btTransformFloatData_origin_get(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btTransformFloatData()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btTransformFloatData(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransformDoubleData_basis_set(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btTransformDoubleData_basis_get(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransformDoubleData_origin_set(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btTransformDoubleData_origin_get(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btTransformDoubleData()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btTransformDoubleData(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_floats_set(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float[])
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float[] btVector3_floats_get(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btVector3__SWIG_0()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btVector3__SWIG_1(float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector3_dot(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector3_length2(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector3_length(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector3_norm(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector3_distance2(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector3_distance(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btVector3_safeNormalize(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btVector3_normalize(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btVector3_normalized(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btVector3_rotate(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector3_angle(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btVector3_absolute(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btVector3_cross(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector3_triple(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btVector3_minAxis(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btVector3_maxAxis(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btVector3_furthestAxis(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btVector3_closestAxis(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_setInterpolate3(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btVector3_lerp(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector3_getX(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector3_getY(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector3_getZ(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_setX(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_setY(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_setZ(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_setW(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector3_x(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector3_y(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector3_z(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector3_w(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_setMax(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_setMin(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_setValue(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_getSkewSymmetricMatrix(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_setZero(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btVector3_isZero(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btVector3_fuzzyZero(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_serialize(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_deSerialize(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_serializeFloat(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_deSerializeFloat(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_serializeDouble(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3_deSerializeDouble(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btVector3_maxDot(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btVector3_minDot(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btVector3_dot3(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btVector3(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btDot(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btDistance2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btDistance(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btAngle__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btTriple(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btVector4__SWIG_0()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btVector4__SWIG_1(float,float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btVector4_absolute4(long,com.badlogic.gdx.physics.bullet.linearmath.btVector4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btVector4_getW(long,com.badlogic.gdx.physics.bullet.linearmath.btVector4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btVector4_maxAxis4(long,com.badlogic.gdx.physics.bullet.linearmath.btVector4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btVector4_minAxis4(long,com.badlogic.gdx.physics.bullet.linearmath.btVector4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btVector4_closestAxis4(long,com.badlogic.gdx.physics.bullet.linearmath.btVector4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector4_setValue(long,com.badlogic.gdx.physics.bullet.linearmath.btVector4,float,float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btVector4(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btSwapScalarEndian(float,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btSwapVector3Endian(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btUnSwapVector3Endian(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3FloatData_floats_set(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData,float[])
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float[] btVector3FloatData_floats_get(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btVector3FloatData()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btVector3FloatData(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3DoubleData_floats_set(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData,double[])
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: double[] btVector3DoubleData_floats_get(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btVector3DoubleData()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btVector3DoubleData(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btQuaternion__SWIG_0()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btQuaternion__SWIG_1(float,float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btQuaternion__SWIG_2(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btQuaternion__SWIG_3(float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btQuaternion_setRotation(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btQuaternion_setEuler(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btQuaternion_setEulerZYX(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btQuaternion_dot(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btQuaternion_length2(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btQuaternion_length(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Quaternion btQuaternion_normalize(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Quaternion btQuaternion_normalized(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btQuaternion_angle(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btQuaternion_angleShortestPath(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btQuaternion_getAngle(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btQuaternion_getAngleShortestPath(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btQuaternion_getAxis(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Quaternion btQuaternion_inverse(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Quaternion btQuaternion_farthest(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Quaternion btQuaternion_nearest(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Quaternion btQuaternion_slerp(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,com.badlogic.gdx.math.Quaternion,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Quaternion btQuaternion_getIdentity()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btQuaternion_getW(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btQuaternion(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float dot(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float length(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btAngle__SWIG_1(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Quaternion inverse(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 quatRotate(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Quaternion shortestArcQuat(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Quaternion shortestArcQuatNormalize2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void AabbExpand(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean TestPointAgainstAabb2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean TestAabbAgainstAabb2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean TestTriangleAgainstAabb2(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btOutcode(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btRayAabb2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long[],long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btRayAabb(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransformAabb__SWIG_0(com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransformAabb__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long testQuantizedAabbAgainstQuantizedAabb(java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btIDebugDraw(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawLine__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawLine__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawLineSwigExplicitbtIDebugDraw__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawSphere__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawSphereSwigExplicitbtIDebugDraw__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawSphere__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawSphereSwigExplicitbtIDebugDraw__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawTriangle__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawTriangleSwigExplicitbtIDebugDraw__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawTriangle__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawTriangleSwigExplicitbtIDebugDraw__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawContactPoint(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,int,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_reportErrorWarning(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,java.lang.String)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_draw3dText(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.lang.String)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_setDebugMode(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btIDebugDraw_getDebugMode(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawAabb(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawAabbSwigExplicitbtIDebugDraw(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawTransform(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawTransformSwigExplicitbtIDebugDraw(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawArc__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,boolean,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawArcSwigExplicitbtIDebugDraw__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,boolean,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawArc__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,boolean)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawArcSwigExplicitbtIDebugDraw__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,boolean)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawSpherePatch__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,boolean)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawSpherePatchSwigExplicitbtIDebugDraw__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,boolean)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawSpherePatch__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawSpherePatchSwigExplicitbtIDebugDraw__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawSpherePatch__SWIG_2(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawSpherePatchSwigExplicitbtIDebugDraw__SWIG_2(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawBox__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawBoxSwigExplicitbtIDebugDraw__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawBox__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawBoxSwigExplicitbtIDebugDraw__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawCapsule(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawCapsuleSwigExplicitbtIDebugDraw(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawCylinder(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawCylinderSwigExplicitbtIDebugDraw(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawCone(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawConeSwigExplicitbtIDebugDraw(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawPlane(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_drawPlaneSwigExplicitbtIDebugDraw(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btIDebugDraw()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_director_connect(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btIDebugDraw_change_ownership(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btGeometryUtil_getPlaneEquationsFromVertices(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btGeometryUtil_getVerticesFromPlaneEquations(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btGeometryUtil_isInside(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btGeometryUtil_isPointInsidePlanes(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btGeometryUtil_areVerticesBehindPlane(com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btGeometryUtil()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btGeometryUtil(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void GEN_srand(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long GEN_rand()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btAabbSupport(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransformUtil_integrateTransform(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransformUtil_calculateVelocityQuaternion(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransformUtil_calculateDiffAxisAngleQuaternion(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransformUtil_calculateVelocity(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btTransformUtil_calculateDiffAxisAngle(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btTransformUtil()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btTransformUtil(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btConvexSeparatingDistanceUtil(float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btConvexSeparatingDistanceUtil_getConservativeSeparatingDistance(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btConvexSeparatingDistanceUtil_updateSeparatingDistance(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btConvexSeparatingDistanceUtil_initSeparatingDistance(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btConvexSeparatingDistanceUtil(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_HullResult()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullResult_mPolygons_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult,boolean)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean HullResult_mPolygons_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullResult_mNumOutputVertices_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long HullResult_mNumOutputVertices_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullResult_OutputVertices_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long HullResult_OutputVertices_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullResult_mNumFaces_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long HullResult_mNumFaces_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullResult_mNumIndices_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long HullResult_mNumIndices_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullResult_Indices_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long HullResult_Indices_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_HullResult(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_HullDesc__SWIG_0()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_HullDesc__SWIG_1(int,long,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_HullDesc__SWIG_2(int,long,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean HullDesc_HasHullFlag(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullDesc_SetHullFlag(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullDesc_ClearHullFlag(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullDesc_mFlags_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long HullDesc_mFlags_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullDesc_mVcount_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long HullDesc_mVcount_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullDesc_mVertices_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long HullDesc_mVertices_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullDesc_mVertexStride_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long HullDesc_mVertexStride_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullDesc_mNormalEpsilon_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float HullDesc_mNormalEpsilon_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullDesc_mMaxVertices_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long HullDesc_mMaxVertices_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullDesc_mMaxFaces_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long HullDesc_mMaxFaces_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_HullDesc(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btPlane_normal_set(long,com.badlogic.gdx.physics.bullet.linearmath.btPlane,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btPlane_normal_get(long,com.badlogic.gdx.physics.bullet.linearmath.btPlane)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btPlane_dist_set(long,com.badlogic.gdx.physics.bullet.linearmath.btPlane,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btPlane_dist_get(long,com.badlogic.gdx.physics.bullet.linearmath.btPlane)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btPlane__SWIG_0(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btPlane__SWIG_1()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btPlane(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void ConvexH_HalfEdge_ea_set(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge,short)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: short ConvexH_HalfEdge_ea_get(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void ConvexH_HalfEdge_v_set(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge,short)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: short ConvexH_HalfEdge_v_get(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void ConvexH_HalfEdge_p_set(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge,short)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: short ConvexH_HalfEdge_p_get(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_ConvexH_HalfEdge__SWIG_0()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_ConvexH_HalfEdge__SWIG_1(short,short,short)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_ConvexH_HalfEdge(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_ConvexH__SWIG_0()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_ConvexH(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void ConvexH_vertices_set(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long ConvexH_vertices_get(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void ConvexH_edges_set(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long ConvexH_edges_get(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void ConvexH_facets_set(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long ConvexH_facets_get(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_ConvexH__SWIG_1(int,int,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void int4_x_set(long,com.badlogic.gdx.physics.bullet.linearmath.int4,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int int4_x_get(long,com.badlogic.gdx.physics.bullet.linearmath.int4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void int4_y_set(long,com.badlogic.gdx.physics.bullet.linearmath.int4,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int int4_y_get(long,com.badlogic.gdx.physics.bullet.linearmath.int4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void int4_z_set(long,com.badlogic.gdx.physics.bullet.linearmath.int4,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int int4_z_get(long,com.badlogic.gdx.physics.bullet.linearmath.int4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void int4_w_set(long,com.badlogic.gdx.physics.bullet.linearmath.int4,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int int4_w_get(long,com.badlogic.gdx.physics.bullet.linearmath.int4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_int4__SWIG_0()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_int4__SWIG_1(int,int,int,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_int4(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_PHullResult()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void PHullResult_mVcount_set(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long PHullResult_mVcount_get(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void PHullResult_mIndexCount_set(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long PHullResult_mIndexCount_get(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void PHullResult_mFaceCount_set(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long PHullResult_mFaceCount_get(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void PHullResult_mVertices_set(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long PHullResult_mVertices_get(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void PHullResult_Indices_set(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long PHullResult_Indices_get(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_PHullResult(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void HullLibrary_vertexIndexMapping_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullLibrary,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long HullLibrary_vertexIndexMapping_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullLibrary)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int HullLibrary_CreateConvexHull(long,com.badlogic.gdx.physics.bullet.linearmath.HullLibrary,long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,long,com.badlogic.gdx.physics.bullet.linearmath.HullResult)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int HullLibrary_ReleaseResult(long,com.badlogic.gdx.physics.bullet.linearmath.HullLibrary,long,com.badlogic.gdx.physics.bullet.linearmath.HullResult)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_HullLibrary()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_HullLibrary(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_GrahamVector3(com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void GrahamVector3_angle_set(long,com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float GrahamVector3_angle_get(long,com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void GrahamVector3_orgIndex_set(long,com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int GrahamVector3_orgIndex_get(long,com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_GrahamVector3(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btAngleCompareFunc_anchor_set(long,com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btAngleCompareFunc_anchor_get(long,com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btAngleCompareFunc(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btAngleCompareFunc(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void GrahamScanConvexHull2D(long,long,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btPoolAllocator(int,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btPoolAllocator(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btPoolAllocator_getFreeCount(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btPoolAllocator_getUsedCount(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btPoolAllocator_getMaxCount(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btPoolAllocator_allocate(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btPoolAllocator_validPtr(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btPoolAllocator_freeMemory(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btPoolAllocator_getElementSize(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: java.nio.ByteBuffer btPoolAllocator_getPoolAddress__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btConvexHullComputer_Edge_getSourceVertex(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btConvexHullComputer_Edge_getTargetVertex(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btConvexHullComputer_Edge_getNextEdgeOfVertex(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btConvexHullComputer_Edge_getNextEdgeOfFace(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btConvexHullComputer_Edge_getReverseEdge(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btConvexHullComputer_Edge()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btConvexHullComputer_Edge(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btConvexHullComputer_vertices_set(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btConvexHullComputer_vertices_get(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btConvexHullComputer_edges_set(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btConvexHullComputer_edges_get(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btConvexHullComputer_faces_set(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btConvexHullComputer_faces_get(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btConvexHullComputer_compute__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer,java.nio.FloatBuffer,int,int,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btConvexHullComputer_compute__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer,java.nio.DoubleBuffer,int,int,float,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btConvexHullComputer()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btConvexHullComputer(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btGEN_Link__SWIG_0()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btGEN_Link__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link,long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btGEN_Link_getNext(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btGEN_Link_getPrev(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btGEN_Link_isHead(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btGEN_Link_isTail(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btGEN_Link_insertBefore(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link,long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btGEN_Link_insertAfter(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link,long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btGEN_Link_remove(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btGEN_Link(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btGEN_List()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btGEN_List_getHead(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_List)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btGEN_List_getTail(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_List)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btGEN_List_addHead(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_List,long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btGEN_List_addTail(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_List,long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btGEN_List(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btAlignedAllocInternal(long,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btAlignedFreeInternal(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btAlignedAllocSetCustom(long,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btAlignedAllocSetCustomAligned(long,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btHashString_string_set(long,com.badlogic.gdx.physics.bullet.linearmath.btHashString,java.lang.String)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: java.lang.String btHashString_string_get(long,com.badlogic.gdx.physics.bullet.linearmath.btHashString)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btHashString_hash_set(long,com.badlogic.gdx.physics.bullet.linearmath.btHashString,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btHashString_hash_get(long,com.badlogic.gdx.physics.bullet.linearmath.btHashString)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btHashString(java.lang.String)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btHashString_portableStringCompare(long,com.badlogic.gdx.physics.bullet.linearmath.btHashString,java.lang.String,java.lang.String)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btHashString_equals(long,com.badlogic.gdx.physics.bullet.linearmath.btHashString,long,com.badlogic.gdx.physics.bullet.linearmath.btHashString)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btHashString(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int BT_HASH_NULL_get()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btHashInt(int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btHashInt_getUid1(long,com.badlogic.gdx.physics.bullet.linearmath.btHashInt)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btHashInt_setUid1(long,com.badlogic.gdx.physics.bullet.linearmath.btHashInt,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btHashInt_equals(long,com.badlogic.gdx.physics.bullet.linearmath.btHashInt,long,com.badlogic.gdx.physics.bullet.linearmath.btHashInt)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btHashInt_getHash(long,com.badlogic.gdx.physics.bullet.linearmath.btHashInt)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btHashInt(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btHashPtr(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btHashPtr_getPointer(long,com.badlogic.gdx.physics.bullet.linearmath.btHashPtr)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: boolean btHashPtr_equals(long,com.badlogic.gdx.physics.bullet.linearmath.btHashPtr,long,com.badlogic.gdx.physics.bullet.linearmath.btHashPtr)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btHashPtr_getHash(long,com.badlogic.gdx.physics.bullet.linearmath.btHashPtr)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btHashPtr(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btBlock_previous_set(long,com.badlogic.gdx.physics.bullet.linearmath.btBlock,long,com.badlogic.gdx.physics.bullet.linearmath.btBlock)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btBlock_previous_get(long,com.badlogic.gdx.physics.bullet.linearmath.btBlock)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btBlock_address_set(long,com.badlogic.gdx.physics.bullet.linearmath.btBlock,java.nio.ByteBuffer)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: java.nio.ByteBuffer btBlock_address_get(long,com.badlogic.gdx.physics.bullet.linearmath.btBlock)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btBlock()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btBlock(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btStackAlloc(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btStackAlloc(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btStackAlloc_create(long,com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btStackAlloc_destroy(long,com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btStackAlloc_getAvailableMemory(long,com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: java.nio.ByteBuffer btStackAlloc_allocate(long,com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btStackAlloc_beginBlock(long,com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btStackAlloc_endBlock(long,com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc,long,com.badlogic.gdx.physics.bullet.linearmath.btBlock)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btMotionState(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btMotionState_getWorldTransform(long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btMotionState_setWorldTransform(long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btMotionState()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btMotionState_director_connect(com.badlogic.gdx.physics.bullet.linearmath.btMotionState,long,boolean,boolean)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btMotionState_change_ownership(com.badlogic.gdx.physics.bullet.linearmath.btMotionState,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btDefaultMotionState_graphicsWorldTrans_set(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btDefaultMotionState_graphicsWorldTrans_get(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btDefaultMotionState_centerOfMassOffset_set(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btDefaultMotionState_centerOfMassOffset_get(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btDefaultMotionState_startWorldTrans_set(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btDefaultMotionState_startWorldTrans_get(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btDefaultMotionState_userPointer_set(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btDefaultMotionState_userPointer_get(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btDefaultMotionState__SWIG_0(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btDefaultMotionState__SWIG_1(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btDefaultMotionState__SWIG_2()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btDefaultMotionState_getGraphicsWorldTrans(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btDefaultMotionState_getCenterOfMassOffset(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btDefaultMotionState_getStartWorldTrans(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btDefaultMotionState(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btVector3Array__SWIG_0()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btVector3Array(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btVector3Array__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btVector3Array_size(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btVector3Array_at__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3Array_clear(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3Array_pop_back(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3Array_resizeNoInitialize(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3Array_resize__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,int,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3Array_resize__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btVector3Array_expandNonInitializing(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btVector3Array_expand__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: com.badlogic.gdx.math.Vector3 btVector3Array_expand__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3Array_push_back(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btVector3Array_capacity(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3Array_reserve(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btVector3Array_less()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btVector3Array_less(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3Array_swap(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,int,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btVector3Array_findBinarySearch(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btVector3Array_findLinearSearch(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3Array_remove(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3Array_initializeFromBuffer(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,long,int,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btVector3Array_copyFromArray(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btScalarArray__SWIG_0()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btScalarArray(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btScalarArray__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btScalarArray_size(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: float btScalarArray_at__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btScalarArray_clear(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btScalarArray_pop_back(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btScalarArray_resizeNoInitialize(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btScalarArray_resize__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,int,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btScalarArray_resize__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btScalarArray_expandNonInitializing(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btScalarArray_expand__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btScalarArray_expand__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btScalarArray_push_back(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btScalarArray_capacity(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btScalarArray_reserve(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long new_btScalarArray_less()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void delete_btScalarArray_less(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btScalarArray_swap(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,int,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btScalarArray_findBinarySearch(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int btScalarArray_findLinearSearch(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btScalarArray_remove(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btScalarArray_initializeFromBuffer(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,long,int,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void btScalarArray_copyFromArray(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btVector4_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long GrahamVector3_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: long btDefaultMotionState_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawLine__SWIG_0(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawLine__SWIG_1(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawSphere__SWIG_0(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,long,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawSphere__SWIG_1(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,float,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawTriangle__SWIG_0(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,long,long,long,long,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawTriangle__SWIG_1(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,long,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawContactPoint(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,float,int,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_reportErrorWarning(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,java.lang.String)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_draw3dText(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,java.lang.String)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_setDebugMode(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: int SwigDirector_btIDebugDraw_getDebugMode(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawAabb(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawTransform(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawArc__SWIG_0(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,float,float,float,float,long,boolean,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawArc__SWIG_1(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,float,float,float,float,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawSpherePatch__SWIG_0(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,float,float,float,float,float,long,float,boolean)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawSpherePatch__SWIG_1(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,float,float,float,float,float,long,float)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawSpherePatch__SWIG_2(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,float,float,float,float,float,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawBox__SWIG_0(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawBox__SWIG_1(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawCapsule(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawCylinder(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawCone(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btIDebugDraw_drawPlane(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,float,long,long)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btMotionState_getWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void SwigDirector_btMotionState_setWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void swig_module_init()
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI: void <clinit>()
com.badlogic.gdx.physics.bullet.linearmath.PHullResult
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: PHullResult(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: PHullResult(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.PHullResult)
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: void delete()
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: PHullResult()
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: void setMVcount(long)
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: long getMVcount()
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: void setMIndexCount(long)
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: long getMIndexCount()
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: void setMFaceCount(long)
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: long getMFaceCount()
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: void setMVertices(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getMVertices()
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: void setIndices(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t)
com.badlogic.gdx.physics.bullet.linearmath.PHullResult: com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t getIndices()
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t: SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t: SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t()
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t: SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t: SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t()
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t: SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t: SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t()
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t: SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t: SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t()
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t: SWIGTYPE_p_btAlignedObjectArrayT_int_t(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t: SWIGTYPE_p_btAlignedObjectArrayT_int_t()
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t: SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t: SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t()
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3DoubleData
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3DoubleData: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3DoubleData: SWIGTYPE_p_btMatrix3x3DoubleData(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3DoubleData: SWIGTYPE_p_btMatrix3x3DoubleData()
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3DoubleData: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3DoubleData)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3FloatData
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3FloatData: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3FloatData: SWIGTYPE_p_btMatrix3x3FloatData(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3FloatData: SWIGTYPE_p_btMatrix3x3FloatData()
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3FloatData: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3FloatData)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_p_void__void
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_p_void__void: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_p_void__void: SWIGTYPE_p_f_p_void__void(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_p_void__void: SWIGTYPE_p_f_p_void__void()
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_p_void__void: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_p_void__void)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t__p_void
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t__p_void: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t__p_void: SWIGTYPE_p_f_size_t__p_void(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t__p_void: SWIGTYPE_p_f_size_t__p_void()
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t__p_void: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t__p_void)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t_int__p_void
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t_int__p_void: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t_int__p_void: SWIGTYPE_p_f_size_t_int__p_void(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t_int__p_void: SWIGTYPE_p_f_size_t_int__p_void()
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t_int__p_void: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t_int__p_void)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float: SWIGTYPE_p_float(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float: SWIGTYPE_p_float()
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc
com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc: btAngleCompareFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc: btAngleCompareFunc(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc)
com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc: void setAnchor(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAnchor()
com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc: btAngleCompareFunc(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btBlock
com.badlogic.gdx.physics.bullet.linearmath.btBlock: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btBlock: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.linearmath.btBlock: btBlock(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btBlock: btBlock(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btBlock: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btBlock: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btBlock)
com.badlogic.gdx.physics.bullet.linearmath.btBlock: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btBlock: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btBlock: void setPrevious(com.badlogic.gdx.physics.bullet.linearmath.btBlock)
com.badlogic.gdx.physics.bullet.linearmath.btBlock: com.badlogic.gdx.physics.bullet.linearmath.btBlock getPrevious()
com.badlogic.gdx.physics.bullet.linearmath.btBlock: void setAddress(java.nio.ByteBuffer)
com.badlogic.gdx.physics.bullet.linearmath.btBlock: java.nio.ByteBuffer getAddress()
com.badlogic.gdx.physics.bullet.linearmath.btBlock: btBlock()
com.badlogic.gdx.physics.bullet.linearmath.btBlock: void <clinit>()
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: btConvexHullComputer(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: btConvexHullComputer(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer)
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: void setVertices(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getVertices()
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: void setEdges(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t)
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t getEdges()
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: void setFaces(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t)
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t getFaces()
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: float compute(java.nio.FloatBuffer,int,int,float,float)
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: float compute(java.nio.DoubleBuffer,int,int,float,float)
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: btConvexHullComputer()
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer: void <clinit>()
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge: btConvexHullComputer$Edge(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge: btConvexHullComputer$Edge(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge)
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge: int getSourceVertex()
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge: int getTargetVertex()
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge: com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge getNextEdgeOfVertex()
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge: com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge getNextEdgeOfFace()
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge: com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge getReverseEdge()
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge: btConvexHullComputer$Edge()
com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil
com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil: btConvexSeparatingDistanceUtil(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil: btConvexSeparatingDistanceUtil(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil)
com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil: btConvexSeparatingDistanceUtil(float,float)
com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil: float getConservativeSeparatingDistance()
com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil: void updateSeparatingDistance(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil: void initSeparatingDistance(com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: btDefaultMotionState(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: btDefaultMotionState(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState)
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: void setGraphicsWorldTrans(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: com.badlogic.gdx.physics.bullet.linearmath.btTransform getGraphicsWorldTrans()
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: void setCenterOfMassOffset(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: com.badlogic.gdx.physics.bullet.linearmath.btTransform getCenterOfMassOffset()
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: void setStartWorldTrans(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: com.badlogic.gdx.physics.bullet.linearmath.btTransform getStartWorldTrans()
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: void setUserPointer(long)
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: long getUserPointer()
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: btDefaultMotionState(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: btDefaultMotionState(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: btDefaultMotionState()
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: void getGraphicsWorldTrans(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: void getCenterOfMassOffset(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState: void getStartWorldTrans(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: btGEN_Link(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: btGEN_Link(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: btGEN_Link()
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: btGEN_Link(com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link getNext()
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link getPrev()
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: boolean isHead()
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: boolean isTail()
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: void insertBefore(com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: void insertAfter(com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link: void remove()
com.badlogic.gdx.physics.bullet.linearmath.btGEN_List
com.badlogic.gdx.physics.bullet.linearmath.btGEN_List: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btGEN_List: btGEN_List(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btGEN_List: btGEN_List(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btGEN_List: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btGEN_List: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btGEN_List)
com.badlogic.gdx.physics.bullet.linearmath.btGEN_List: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btGEN_List: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btGEN_List: btGEN_List()
com.badlogic.gdx.physics.bullet.linearmath.btGEN_List: com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link getHead()
com.badlogic.gdx.physics.bullet.linearmath.btGEN_List: com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link getTail()
com.badlogic.gdx.physics.bullet.linearmath.btGEN_List: void addHead(com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.btGEN_List: void addTail(com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link)
com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil
com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil: btGeometryUtil(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil: btGeometryUtil(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil)
com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil: void getPlaneEquationsFromVertices(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil: void getVerticesFromPlaneEquations(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil: boolean isInside(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil: boolean isPointInsidePlanes(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil: boolean areVerticesBehindPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,float)
com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil: btGeometryUtil()
com.badlogic.gdx.physics.bullet.linearmath.btHashInt
com.badlogic.gdx.physics.bullet.linearmath.btHashInt: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btHashInt: btHashInt(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btHashInt: btHashInt(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btHashInt: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btHashInt: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btHashInt)
com.badlogic.gdx.physics.bullet.linearmath.btHashInt: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btHashInt: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btHashInt: btHashInt(int)
com.badlogic.gdx.physics.bullet.linearmath.btHashInt: int getUid1()
com.badlogic.gdx.physics.bullet.linearmath.btHashInt: void setUid1(int)
com.badlogic.gdx.physics.bullet.linearmath.btHashInt: boolean equals(com.badlogic.gdx.physics.bullet.linearmath.btHashInt)
com.badlogic.gdx.physics.bullet.linearmath.btHashInt: long getHash()
com.badlogic.gdx.physics.bullet.linearmath.btHashPtr
com.badlogic.gdx.physics.bullet.linearmath.btHashPtr: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btHashPtr: btHashPtr(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btHashPtr: btHashPtr(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btHashPtr: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btHashPtr: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btHashPtr)
com.badlogic.gdx.physics.bullet.linearmath.btHashPtr: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btHashPtr: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btHashPtr: btHashPtr(long)
com.badlogic.gdx.physics.bullet.linearmath.btHashPtr: long getPointer()
com.badlogic.gdx.physics.bullet.linearmath.btHashPtr: boolean equals(com.badlogic.gdx.physics.bullet.linearmath.btHashPtr)
com.badlogic.gdx.physics.bullet.linearmath.btHashPtr: long getHash()
com.badlogic.gdx.physics.bullet.linearmath.btHashString
com.badlogic.gdx.physics.bullet.linearmath.btHashString: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btHashString: btHashString(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btHashString: btHashString(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btHashString: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btHashString: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btHashString)
com.badlogic.gdx.physics.bullet.linearmath.btHashString: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btHashString: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btHashString: void setString(java.lang.String)
com.badlogic.gdx.physics.bullet.linearmath.btHashString: java.lang.String getString()
com.badlogic.gdx.physics.bullet.linearmath.btHashString: void setHash(long)
com.badlogic.gdx.physics.bullet.linearmath.btHashString: long getHash()
com.badlogic.gdx.physics.bullet.linearmath.btHashString: btHashString(java.lang.String)
com.badlogic.gdx.physics.bullet.linearmath.btHashString: int portableStringCompare(java.lang.String,java.lang.String)
com.badlogic.gdx.physics.bullet.linearmath.btHashString: boolean equals(com.badlogic.gdx.physics.bullet.linearmath.btHashString)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: btIDebugDraw(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: btIDebugDraw(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawLine(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawLine(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawSphere(float,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawSphere(com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawTriangle(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawTriangle(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawContactPoint(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,int,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void reportErrorWarning(java.lang.String)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void draw3dText(com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.lang.String)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void setDebugMode(int)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: int getDebugMode()
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawAabb(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransform,float)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawArc(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,com.badlogic.gdx.physics.bullet.linearmath.btVector3,boolean,float)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawArc(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,com.badlogic.gdx.physics.bullet.linearmath.btVector3,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawSpherePatch(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawSpherePatch(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawSpherePatch(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawBox(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawBox(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawCapsule(float,float,int,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawCylinder(float,float,int,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawCone(float,float,int,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: void drawPlane(com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw: btIDebugDraw()
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_NoDebug
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_DrawWireframe
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_DrawAabb
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_DrawFeaturesText
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_DrawContactPoints
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_NoDeactivation
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_NoHelpText
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_DrawText
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_ProfileTimings
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_EnableSatComparison
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_DisableBulletLCP
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_EnableCCD
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_DrawConstraints
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_DrawConstraintLimits
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_FastWireframe
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_DrawNormals
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: int DBG_MAX_DEBUG_DRAW_MODE
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes: btIDebugDraw$DebugDrawModes()
com.badlogic.gdx.physics.bullet.linearmath.btMotionState
com.badlogic.gdx.physics.bullet.linearmath.btMotionState: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btMotionState: btMotionState(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btMotionState: btMotionState(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btMotionState: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btMotionState: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btMotionState)
com.badlogic.gdx.physics.bullet.linearmath.btMotionState: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btMotionState: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btMotionState: void swigDirectorDisconnect()
com.badlogic.gdx.physics.bullet.linearmath.btMotionState: void swigReleaseOwnership()
com.badlogic.gdx.physics.bullet.linearmath.btMotionState: void swigTakeOwnership()
com.badlogic.gdx.physics.bullet.linearmath.btMotionState: void getWorldTransform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.btMotionState: void setWorldTransform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.btMotionState: btMotionState()
com.badlogic.gdx.physics.bullet.linearmath.btPlane
com.badlogic.gdx.physics.bullet.linearmath.btPlane: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btPlane: btPlane(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btPlane: btPlane(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btPlane: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btPlane: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btPlane)
com.badlogic.gdx.physics.bullet.linearmath.btPlane: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btPlane: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btPlane: void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btPlane: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormal()
com.badlogic.gdx.physics.bullet.linearmath.btPlane: void setDist(float)
com.badlogic.gdx.physics.bullet.linearmath.btPlane: float getDist()
com.badlogic.gdx.physics.bullet.linearmath.btPlane: btPlane(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.btPlane: btPlane()
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: btPoolAllocator(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: btPoolAllocator(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator)
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: btPoolAllocator(int,int)
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: int getFreeCount()
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: int getUsedCount()
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: int getMaxCount()
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: long allocate(int)
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: boolean validPtr(long)
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: void freeMemory(long)
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: int getElementSize()
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator: java.nio.ByteBuffer getPoolAddress()
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: btQuaternion(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: btQuaternion(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btQuaternion)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: btQuaternion()
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: btQuaternion(float,float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: btQuaternion(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: btQuaternion(float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: void setRotation(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: void setEuler(float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: void setEulerZYX(float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: float dot(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: float length2()
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: float length()
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: com.badlogic.gdx.math.Quaternion normalize()
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: com.badlogic.gdx.math.Quaternion normalized()
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: float angle(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: float angleShortestPath(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: float getAngle()
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: float getAngleShortestPath()
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: com.badlogic.gdx.math.Vector3 getAxis()
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: com.badlogic.gdx.math.Quaternion inverse()
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: com.badlogic.gdx.math.Quaternion farthest(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: com.badlogic.gdx.math.Quaternion nearest(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float)
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: com.badlogic.gdx.math.Quaternion getIdentity()
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion: float getW()
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: btScalarArray(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: btScalarArray(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: btScalarArray()
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: btScalarArray(com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: int size()
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: float at(int)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: void clear()
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: void pop_back()
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: void resizeNoInitialize(int)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: void resize(int,float)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: void resize(int)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float expandNonInitializing()
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float expand(float)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float expand()
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: void push_back(float)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: int capacity()
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: void reserve(int)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: void swap(int,int)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: int findBinarySearch(float)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: int findLinearSearch(float)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: void remove(float)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: void initializeFromBuffer(long,int,int)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray: void copyFromArray(com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray$less
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray$less: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray$less: btScalarArray$less(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray$less: btScalarArray$less(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray$less: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray$less: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btScalarArray$less)
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray$less: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray$less: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray$less: btScalarArray$less()
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc: btStackAlloc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc: btStackAlloc(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc)
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc: btStackAlloc(long)
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc: void create(long)
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc: void destroy()
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc: int getAvailableMemory()
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc: java.nio.ByteBuffer allocate(long)
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc: com.badlogic.gdx.physics.bullet.linearmath.btBlock beginBlock()
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc: void endBlock(com.badlogic.gdx.physics.bullet.linearmath.btBlock)
com.badlogic.gdx.physics.bullet.linearmath.btTransform
com.badlogic.gdx.physics.bullet.linearmath.btTransform: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btTransform: btTransform(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: btTransform(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btTransform: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btTransform: btTransform()
com.badlogic.gdx.physics.bullet.linearmath.btTransform: btTransform(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: btTransform(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: btTransform(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: btTransform(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: btTransform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: void mult(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: com.badlogic.gdx.math.Matrix3 getBasis()
com.badlogic.gdx.physics.bullet.linearmath.btTransform: com.badlogic.gdx.math.Vector3 getOrigin()
com.badlogic.gdx.physics.bullet.linearmath.btTransform: com.badlogic.gdx.math.Quaternion getRotation()
com.badlogic.gdx.physics.bullet.linearmath.btTransform: void setFromOpenGLMatrix(float[])
com.badlogic.gdx.physics.bullet.linearmath.btTransform: void getOpenGLMatrix(float[])
com.badlogic.gdx.physics.bullet.linearmath.btTransform: void setOrigin(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: com.badlogic.gdx.math.Vector3 invXform(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: void setBasis(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: void setRotation(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: void setIdentity()
com.badlogic.gdx.physics.bullet.linearmath.btTransform: com.badlogic.gdx.math.Matrix4 inverse()
com.badlogic.gdx.physics.bullet.linearmath.btTransform: com.badlogic.gdx.math.Matrix4 inverseTimes(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: com.badlogic.gdx.math.Matrix4 getIdentity()
com.badlogic.gdx.physics.bullet.linearmath.btTransform: void serialize(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: void serializeFloat(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: void deSerialize(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: void deSerializeDouble(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.linearmath.btTransform: void deSerializeFloat(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData
com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData: btTransformDoubleData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData: btTransformDoubleData(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData)
com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData: void setBasis(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3DoubleData)
com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData: com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3DoubleData getBasis()
com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData: void setOrigin(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData: com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getOrigin()
com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData: btTransformDoubleData()
com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData
com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData: btTransformFloatData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData: btTransformFloatData(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData: void setBasis(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3FloatData)
com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData: com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3FloatData getBasis()
com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData: void setOrigin(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getOrigin()
com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData: btTransformFloatData()
com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil
com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil: btTransformUtil(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil: btTransformUtil(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil)
com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil: void integrateTransform(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil: void calculateVelocityQuaternion(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil: void calculateDiffAxisAngleQuaternion(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil: void calculateVelocity(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil: void calculateDiffAxisAngle(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil: btTransformUtil()
com.badlogic.gdx.physics.bullet.linearmath.btTypedObject
com.badlogic.gdx.physics.bullet.linearmath.btTypedObject: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btTypedObject: btTypedObject(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btTypedObject: btTypedObject(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btTypedObject: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btTypedObject: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btTypedObject)
com.badlogic.gdx.physics.bullet.linearmath.btTypedObject: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btTypedObject: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btTypedObject: btTypedObject(int)
com.badlogic.gdx.physics.bullet.linearmath.btTypedObject: void setObjectType(int)
com.badlogic.gdx.physics.bullet.linearmath.btTypedObject: int getObjectType()
com.badlogic.gdx.physics.bullet.linearmath.btVector3
com.badlogic.gdx.physics.bullet.linearmath.btVector3: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btVector3: btVector3(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: btVector3(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void setFloats(float[])
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float[] getFloats()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: btVector3()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: btVector3(float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float dot(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float length2()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float length()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float norm()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float distance2(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float distance(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: com.badlogic.gdx.math.Vector3 safeNormalize()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: com.badlogic.gdx.math.Vector3 normalize()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: com.badlogic.gdx.math.Vector3 normalized()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float angle(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: com.badlogic.gdx.math.Vector3 absolute()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: com.badlogic.gdx.math.Vector3 cross(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float triple(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: int minAxis()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: int maxAxis()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: int furthestAxis()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: int closestAxis()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void setInterpolate3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float getX()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float getY()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float getZ()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void setX(float)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void setY(float)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void setZ(float)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void setW(float)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float x()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float y()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float z()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: float w()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void setMax(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void setMin(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void setValue(float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void getSkewSymmetricMatrix(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void setZero()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: boolean isZero()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: boolean fuzzyZero()
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void serialize(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void deSerialize(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void serializeFloat(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void deSerializeFloat(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void serializeDouble(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: void deSerializeDouble(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: int maxDot(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: int minDot(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.linearmath.btVector3: com.badlogic.gdx.math.Vector3 dot3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: btVector3Array(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: btVector3Array(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: btVector3Array()
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: btVector3Array(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: int size()
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: com.badlogic.gdx.math.Vector3 at(int)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: void clear()
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: void pop_back()
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: void resizeNoInitialize(int)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: void resize(int,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: void resize(int)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: com.badlogic.gdx.math.Vector3 expandNonInitializing()
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: com.badlogic.gdx.math.Vector3 expand(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: com.badlogic.gdx.math.Vector3 expand()
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: void push_back(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: int capacity()
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: void reserve(int)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: void swap(int,int)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: int findBinarySearch(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: int findLinearSearch(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: void remove(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: void initializeFromBuffer(long,int,int)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array: void copyFromArray(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array$less
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array$less: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array$less: btVector3Array$less(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array$less: btVector3Array$less(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array$less: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array$less: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array$less)
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array$less: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array$less: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array$less: btVector3Array$less()
com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData
com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData: btVector3DoubleData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData: btVector3DoubleData(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData)
com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData: void setFloats(double[])
com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData: double[] getFloats()
com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData: btVector3DoubleData()
com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData
com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData: btVector3FloatData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData: btVector3FloatData(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData: void setFloats(float[])
com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData: float[] getFloats()
com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData: btVector3FloatData()
com.badlogic.gdx.physics.bullet.linearmath.btVector4
com.badlogic.gdx.physics.bullet.linearmath.btVector4: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.btVector4: btVector4(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector4: btVector4(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector4: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.btVector4: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btVector4)
com.badlogic.gdx.physics.bullet.linearmath.btVector4: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.btVector4: void delete()
com.badlogic.gdx.physics.bullet.linearmath.btVector4: btVector4()
com.badlogic.gdx.physics.bullet.linearmath.btVector4: btVector4(float,float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.btVector4: com.badlogic.gdx.physics.bullet.linearmath.btVector4 absolute4()
com.badlogic.gdx.physics.bullet.linearmath.btVector4: float getW()
com.badlogic.gdx.physics.bullet.linearmath.btVector4: int maxAxis4()
com.badlogic.gdx.physics.bullet.linearmath.btVector4: int minAxis4()
com.badlogic.gdx.physics.bullet.linearmath.btVector4: int closestAxis4()
com.badlogic.gdx.physics.bullet.linearmath.btVector4: void setValue(float,float,float,float)
com.badlogic.gdx.physics.bullet.linearmath.int4
com.badlogic.gdx.physics.bullet.linearmath.int4: long swigCPtr
com.badlogic.gdx.physics.bullet.linearmath.int4: int4(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.int4: int4(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.int4: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.linearmath.int4: long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.int4)
com.badlogic.gdx.physics.bullet.linearmath.int4: void finalize()
com.badlogic.gdx.physics.bullet.linearmath.int4: void delete()
com.badlogic.gdx.physics.bullet.linearmath.int4: void setX(int)
com.badlogic.gdx.physics.bullet.linearmath.int4: int getX()
com.badlogic.gdx.physics.bullet.linearmath.int4: void setY(int)
com.badlogic.gdx.physics.bullet.linearmath.int4: int getY()
com.badlogic.gdx.physics.bullet.linearmath.int4: void setZ(int)
com.badlogic.gdx.physics.bullet.linearmath.int4: int getZ()
com.badlogic.gdx.physics.bullet.linearmath.int4: void setW(int)
com.badlogic.gdx.physics.bullet.linearmath.int4: int getW()
com.badlogic.gdx.physics.bullet.linearmath.int4: int4()
com.badlogic.gdx.physics.bullet.linearmath.int4: int4(int,int,int,int)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_a_3_1__a_3_1__float
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_a_3_1__a_3_1__float: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_a_3_1__a_3_1__float: SWIGTYPE_p_a_3_1__a_3_1__float(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_a_3_1__a_3_1__float: SWIGTYPE_p_a_3_1__a_3_1__float()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_a_3_1__a_3_1__float: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_a_3_1__a_3_1__float)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_bool_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_bool_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_bool_t: SWIGTYPE_p_btAlignedObjectArrayT_bool_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_bool_t: SWIGTYPE_p_btAlignedObjectArrayT_bool_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_bool_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_bool_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t: SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_int_t
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_int_t: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_int_t: SWIGTYPE_p_btAlignedObjectArrayT_int_t(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_int_t: SWIGTYPE_p_btAlignedObjectArrayT_int_t()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_int_t: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_int_t)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3: SWIGTYPE_p_btMatrix3x3(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3: SWIGTYPE_p_btMatrix3x3()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData: SWIGTYPE_p_btMatrix3x3FloatData(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData: SWIGTYPE_p_btMatrix3x3FloatData()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btSoftBody__eFeature___
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btSoftBody__eFeature___: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btSoftBody__eFeature___: SWIGTYPE_p_btSoftBody__eFeature___(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btSoftBody__eFeature___: SWIGTYPE_p_btSoftBody__eFeature___()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btSoftBody__eFeature___: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btSoftBody__eFeature___)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_f_p_btSoftBody_float_float__void
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_f_p_btSoftBody_float_float__void: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_f_p_btSoftBody_float_float__void: SWIGTYPE_p_f_p_btSoftBody_float_float__void(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_f_p_btSoftBody_float_float__void: SWIGTYPE_p_f_p_btSoftBody_float_float__void()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_f_p_btSoftBody_float_float__void: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_f_p_btSoftBody_float_float__void)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_float
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_float: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_float: SWIGTYPE_p_float(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_float: SWIGTYPE_p_float()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_float: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_int
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_int: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_int: SWIGTYPE_p_int(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_int: SWIGTYPE_p_int()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_int: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_int)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_SoftBodyMaterialData
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_SoftBodyMaterialData: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_SoftBodyMaterialData: SWIGTYPE_p_p_SoftBodyMaterialData(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_SoftBodyMaterialData: SWIGTYPE_p_p_SoftBodyMaterialData()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_SoftBodyMaterialData: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_SoftBodyMaterialData)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody: SWIGTYPE_p_p_btSoftBody(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody: SWIGTYPE_p_p_btSoftBody()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node: SWIGTYPE_p_p_btSoftBody__Node(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node: SWIGTYPE_p_p_btSoftBody__Node()
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: SoftBodyClusterData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: SoftBodyClusterData(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void finalize()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void delete()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setFramexform(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getFramexform()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setLocii(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData getLocii()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setInvwi(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData getInvwi()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setCom(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getCom()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setVimpulses(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getVimpulses()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setDimpulses(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getDimpulses()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setLv(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLv()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setAv(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAv()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setFramerefs(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getFramerefs()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setNodeIndices(java.nio.IntBuffer)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: java.nio.IntBuffer getNodeIndices()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setMasses(java.nio.FloatBuffer)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: java.nio.FloatBuffer getMasses()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setNumFrameRefs(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: int getNumFrameRefs()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setNumNodes(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: int getNumNodes()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setNumMasses(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: int getNumMasses()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setIdmass(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: float getIdmass()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setImass(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: float getImass()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setNvimpulses(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: int getNvimpulses()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setNdimpulses(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: int getNdimpulses()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setNdamping(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: float getNdamping()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setLdamping(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: float getLdamping()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setAdamping(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: float getAdamping()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setMatching(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: float getMatching()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setMaxSelfCollisionImpulse(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: float getMaxSelfCollisionImpulse()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setSelfCollisionImpulseFactor(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: float getSelfCollisionImpulseFactor()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setContainsAnchor(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: int getContainsAnchor()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setCollide(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: int getCollide()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void setClusterIndex(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: int getClusterIndex()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: SoftBodyClusterData()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData: void <clinit>()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: SoftBodyConfigData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: SoftBodyConfigData(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void finalize()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void delete()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setAeroModel(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: int getAeroModel()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setBaumgarte(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getBaumgarte()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setDamping(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getDamping()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setDrag(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getDrag()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setLift(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getLift()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setPressure(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getPressure()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setVolume(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getVolume()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setDynamicFriction(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getDynamicFriction()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setPoseMatch(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getPoseMatch()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setRigidContactHardness(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getRigidContactHardness()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setKineticContactHardness(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getKineticContactHardness()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setSoftContactHardness(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getSoftContactHardness()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setAnchorHardness(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getAnchorHardness()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setSoftRigidClusterHardness(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getSoftRigidClusterHardness()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setSoftKineticClusterHardness(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getSoftKineticClusterHardness()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setSoftSoftClusterHardness(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getSoftSoftClusterHardness()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setSoftRigidClusterImpulseSplit(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getSoftRigidClusterImpulseSplit()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setSoftKineticClusterImpulseSplit(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getSoftKineticClusterImpulseSplit()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setSoftSoftClusterImpulseSplit(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getSoftSoftClusterImpulseSplit()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setMaxVolume(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getMaxVolume()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setTimeScale(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: float getTimeScale()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setVelocityIterations(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: int getVelocityIterations()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setPositionIterations(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: int getPositionIterations()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setDriftIterations(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: int getDriftIterations()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setClusterIterations(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: int getClusterIterations()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: void setCollisionFlags(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: int getCollisionFlags()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData: SoftBodyConfigData()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: SoftBodyFaceData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: SoftBodyFaceData(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: void finalize()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: void delete()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getNormal()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: void setMaterial(com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData getMaterial()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: void setNodeIndices(int[])
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: int[] getNodeIndices()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: void setRestArea(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: float getRestArea()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData: SoftBodyFaceData()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: SoftBodyLinkData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: SoftBodyLinkData(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: void finalize()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: void delete()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: void setMaterial(com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData getMaterial()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: void setNodeIndices(int[])
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: int[] getNodeIndices()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: void setRestLength(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: float getRestLength()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: void setBbending(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: int getBbending()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData: SoftBodyLinkData()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: SoftBodyMaterialData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: SoftBodyMaterialData(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: void finalize()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: void delete()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: void setLinearStiffness(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: float getLinearStiffness()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: void setAngularStiffness(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: float getAngularStiffness()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: void setVolumeStiffness(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: float getVolumeStiffness()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: void setFlags(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: int getFlags()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData: SoftBodyMaterialData()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: SoftBodyNodeData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: SoftBodyNodeData(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: void finalize()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: void delete()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: void setMaterial(com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData getMaterial()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: void setPosition(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getPosition()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: void setPreviousPosition(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getPreviousPosition()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: void setVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getVelocity()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: void setAccumulatedForce(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAccumulatedForce()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getNormal()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: void setInverseMass(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: float getInverseMass()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: void setArea(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: float getArea()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: void setAttach(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: int getAttach()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: void setPad(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: int getPad()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData: SoftBodyNodeData()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: SoftBodyPoseData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: SoftBodyPoseData(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void finalize()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void delete()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void setRot(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData getRot()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void setScale(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData getScale()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void setAqq(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData getAqq()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void setCom(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getCom()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void setPositions(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getPositions()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void setWeights(java.nio.FloatBuffer)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: java.nio.FloatBuffer getWeights()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void setNumPositions(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: int getNumPositions()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void setNumWeigts(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: int getNumWeigts()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void setBvolume(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: int getBvolume()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void setBframe(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: int getBframe()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void setRestVolume(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: float getRestVolume()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void setPad(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: int getPad()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: SoftBodyPoseData()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData: void <clinit>()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: SoftBodyTetraData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: SoftBodyTetraData(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: void finalize()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: void delete()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: void setC0(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getC0()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: void setMaterial(com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData getMaterial()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: void setNodeIndices(int[])
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: int[] getNodeIndices()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: void setRestVolume(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: float getRestVolume()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: void setC1(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: float getC1()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: void setC2(float)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: float getC2()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: void setPad(int)
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: int getPad()
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData: SoftBodyTetraData()
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: SoftRigidAnchorData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: SoftRigidAnchorData(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData)
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: void finalize()
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: void delete()
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: void setC0(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData getC0()
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: void setC1(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getC1()
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: void setLocalFrame(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLocalFrame()
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: void setRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData getRigidBody()
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: void setNodeIndex(int)
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: int getNodeIndex()
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: void setC2(float)
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: float getC2()
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData: SoftRigidAnchorData()
com.badlogic.gdx.physics.bullet.softbody.Softbody
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Vector3 staticVector3
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.utils.Pool poolVector3
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Quaternion staticQuaternion
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.utils.Pool poolQuaternion
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Matrix3 staticMatrix3
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.utils.Pool poolMatrix3
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Matrix4 staticMatrix4
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.utils.Pool poolMatrix4
com.badlogic.gdx.physics.bullet.softbody.Softbody: Softbody()
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Matrix3 Lerp(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,float)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Vector3 Clamp(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.Softbody: float ClusterMetric(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Matrix3 ScaleAlongAxis(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Matrix3 Cross(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Matrix3 Diagonal(float)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Matrix3 Add(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Matrix3 Sub(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Matrix3 Mul(com.badlogic.gdx.math.Matrix3,float)
com.badlogic.gdx.physics.bullet.softbody.Softbody: void Orthogonalize(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Matrix3 MassMatrix(float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Matrix3 ImpulseMatrix(float,float,float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Matrix3 ImpulseMatrix(float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Matrix3 AngularImpulseMatrix(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Vector3 ProjectOnAxis(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Vector3 ProjectOnPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: void ProjectOrigin(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.softbody.Softbody: void ProjectOrigin(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_float)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Vector3 BaryCoord(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: float ImplicitSolve(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,int)
com.badlogic.gdx.physics.bullet.softbody.Softbody: float ImplicitSolve(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Vector3 NormalizeAny(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm VolumeOf(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face,float)
com.badlogic.gdx.physics.bullet.softbody.Softbody: com.badlogic.gdx.math.Vector3 CenterOf(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face)
com.badlogic.gdx.physics.bullet.softbody.Softbody: float AreaOf(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: float VolumeOf(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: void EvaluateMedium(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium)
com.badlogic.gdx.physics.bullet.softbody.Softbody: void ApplyClampedForce(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.Softbody: int MatchEdge(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.Softbody: int PolarDecompose(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.Softbody: void <clinit>()
com.badlogic.gdx.physics.bullet.softbody.Softbody$1
com.badlogic.gdx.physics.bullet.softbody.Softbody$1: Softbody$1()
com.badlogic.gdx.physics.bullet.softbody.Softbody$1: com.badlogic.gdx.math.Vector3 newObject()
com.badlogic.gdx.physics.bullet.softbody.Softbody$1: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.softbody.Softbody$2
com.badlogic.gdx.physics.bullet.softbody.Softbody$2: Softbody$2()
com.badlogic.gdx.physics.bullet.softbody.Softbody$2: com.badlogic.gdx.math.Quaternion newObject()
com.badlogic.gdx.physics.bullet.softbody.Softbody$2: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.softbody.Softbody$3
com.badlogic.gdx.physics.bullet.softbody.Softbody$3: Softbody$3()
com.badlogic.gdx.physics.bullet.softbody.Softbody$3: com.badlogic.gdx.math.Matrix3 newObject()
com.badlogic.gdx.physics.bullet.softbody.Softbody$3: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.softbody.Softbody$4
com.badlogic.gdx.physics.bullet.softbody.Softbody$4: Softbody$4()
com.badlogic.gdx.physics.bullet.softbody.Softbody$4: com.badlogic.gdx.math.Matrix4 newObject()
com.badlogic.gdx.physics.bullet.softbody.Softbody$4: java.lang.Object newObject()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyConstants
com.badlogic.gdx.physics.bullet.softbody.SoftbodyConstants: java.lang.String btSoftBodyDataName
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: SoftbodyJNI()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBodySolver(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodySolver_getSolverType(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btSoftBodySolver_checkInitialized(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodySolver_optimize__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodySolver_optimize__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodySolver_copyBackToSoftBodies__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodySolver_copyBackToSoftBodies__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodySolver_predictMotion(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodySolver_solveConstraints(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodySolver_updateSoftBodies(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodySolver_processCollision__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodySolver_processCollision__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodySolver_setNumberOfPositionIterations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodySolver_getNumberOfPositionIterations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodySolver_setNumberOfVelocityIterations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodySolver_getNumberOfVelocityIterations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBodySolver_getTimeScale(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBodySolverOutput(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodySolverOutput_copySoftBodyToVertexBuffer(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolverOutput,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btDefaultSoftBodySolver()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btDefaultSoftBodySolver(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btDefaultSoftBodySolver_optimize__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btDefaultSoftBodySolver_optimize__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btDefaultSoftBodySolver_copyBackToSoftBodies__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btDefaultSoftBodySolver_copyBackToSoftBodies__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btDefaultSoftBodySolver_copySoftBodyToVertexBuffer(long,com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btDefaultSoftBodySolver_processCollision__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btDefaultSoftBodySolver_processCollision__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_IntFrac_b_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSparseSdf3_IntFrac_b_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_IntFrac_i_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSparseSdf3_IntFrac_i_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_IntFrac_f_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSparseSdf3_IntFrac_f_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSparseSdf3_IntFrac()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSparseSdf3_IntFrac(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_Cell_d_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSparseSdf3_Cell_d_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_Cell_c_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell,int[])
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int[] btSparseSdf3_Cell_c_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_Cell_puid_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSparseSdf3_Cell_puid_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_Cell_hash_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSparseSdf3_Cell_hash_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_Cell_pclient_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSparseSdf3_Cell_pclient_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_Cell_next_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell,long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSparseSdf3_Cell_next_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSparseSdf3_Cell()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSparseSdf3_Cell(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_cells_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSparseSdf3_cells_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_voxelsz_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSparseSdf3_voxelsz_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_puid_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSparseSdf3_puid_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_ncells_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSparseSdf3_ncells_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_clampCells_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSparseSdf3_clampCells_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_nprobes_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSparseSdf3_nprobes_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_nqueries_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSparseSdf3_nqueries_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_Initialize__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_Initialize__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_Initialize__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_Reset(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_GarbageCollect__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_GarbageCollect__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSparseSdf3_RemoveReferences(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSparseSdf3_Evaluate(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSparseSdf3_BuildCell(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSparseSdf3_DistanceToShape(com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSparseSdf3_Decompose(float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSparseSdf3_Lerp(float,float,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSparseSdf3_Hash(int,int,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSparseSdf3()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSparseSdf3(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyWorldInfo_air_density_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBodyWorldInfo_air_density_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyWorldInfo_water_density_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBodyWorldInfo_water_density_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyWorldInfo_water_offset_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBodyWorldInfo_water_offset_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyWorldInfo_maxDisplacement_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBodyWorldInfo_maxDisplacement_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyWorldInfo_water_normal_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyWorldInfo_water_normal_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyWorldInfo_broadphase_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyWorldInfo_broadphase_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyWorldInfo_dispatcher_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyWorldInfo_dispatcher_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyWorldInfo_gravity_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyWorldInfo_gravity_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyWorldInfo_sparsesdf_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyWorldInfo_sparsesdf_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBodyWorldInfo()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBodyWorldInfo(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_collisionDisabledObjects_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_collisionDisabledObjects_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_softBodySolver_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_softBodySolver_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_eAeroModel()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_eAeroModel(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_eVSolver()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_eVSolver(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_ePSolver()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_ePSolver(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_eSolverPresets()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_eSolverPresets(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_eFeature()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_eFeature(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_fCollision()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_fCollision(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_fMaterial()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_fMaterial(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_sRayCast_body_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_sRayCast_body_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_sRayCast_feature_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_sRayCast_feature_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_sRayCast_index_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_sRayCast_index_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_sRayCast_fraction_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_sRayCast_fraction_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_sRayCast()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_sRayCast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_ImplicitFn_Eval(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_ImplicitFn(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_sCti_colObj_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_sCti_colObj_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_sCti_normal_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_sCti_normal_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_sCti_offset_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_sCti_offset_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_sCti()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_sCti(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_sMedium_velocity_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_sMedium_velocity_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_sMedium_pressure_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_sMedium_pressure_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_sMedium_density_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_sMedium_density_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_sMedium()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_sMedium(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Element_tag_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Element_tag_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Element()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Element(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Material_kLST_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Material_kLST_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Material_kAST_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Material_kAST_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Material_kVST_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Material_kVST_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Material_flags_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Material_flags_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Material()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Material(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Feature_material_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Feature_material_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Feature()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Feature(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Node_x_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Node_x_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Node_q_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Node_q_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Node_v_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Node_v_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Node_f_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Node_f_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Node_n_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Node_n_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Node_im_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Node_im_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Node_area_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Node_area_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Node_leaf_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Node_leaf_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Node_battach_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Node_battach_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Node()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Node(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Link_n_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Link_n_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Link_rl_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Link_rl_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Link_bbending_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Link_bbending_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Link_c0_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Link_c0_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Link_c1_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Link_c1_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Link_c2_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Link_c2_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Link_c3_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Link_c3_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Link()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Link(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Face_n_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Face_n_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Face_normal_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Face_normal_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Face_ra_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Face_ra_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Face_leaf_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Face_leaf_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Face()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Face(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Tetra_n_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Tetra_n_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Tetra_rv_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Tetra_rv_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Tetra_leaf_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Tetra_leaf_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Tetra_c0_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Tetra_c0_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Tetra_c1_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Tetra_c1_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Tetra_c2_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Tetra_c2_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Tetra()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Tetra(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_RContact_cti_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_RContact_cti_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_RContact_node_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_RContact_node_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_RContact_c0_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 btSoftBody_RContact_c0_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_RContact_c1_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_RContact_c1_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_RContact_c2_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_RContact_c2_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_RContact_c3_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_RContact_c3_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_RContact_c4_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_RContact_c4_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_RContact()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_RContact(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_SContact_node_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_SContact_node_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_SContact_face_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_SContact_face_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_SContact_weights_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_SContact_weights_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_SContact_normal_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_SContact_normal_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_SContact_margin_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_SContact_margin_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_SContact_friction_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_SContact_friction_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_SContact_cfm_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact,float[])
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float[] btSoftBody_SContact_cfm_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_SContact()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_SContact(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Anchor_node_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Anchor_node_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Anchor_local_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Anchor_local_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Anchor_body_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Anchor_body_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Anchor_influence_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Anchor_influence_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Anchor_c0_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 btSoftBody_Anchor_c0_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Anchor_c1_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Anchor_c1_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Anchor_c2_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Anchor_c2_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Anchor()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Anchor(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Note_text_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note,java.lang.String)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: java.lang.String btSoftBody_Note_text_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Note_offset_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Note_offset_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Note_rank_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Note_rank_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Note_nodes_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Note_nodes_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Note_coords_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note,float[])
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float[] btSoftBody_Note_coords_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Note()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Note(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Pose_bvolume_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btSoftBody_Pose_bvolume_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Pose_bframe_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btSoftBody_Pose_bframe_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Pose_volume_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Pose_volume_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Pose_pos_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Pose_pos_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Pose_wgh_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Pose_wgh_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Pose_com_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Pose_com_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Pose_rot_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 btSoftBody_Pose_rot_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Pose_scl_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 btSoftBody_Pose_scl_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Pose_aqq_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 btSoftBody_Pose_aqq_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Pose()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Pose(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_masses_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Cluster_masses_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_nodes_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Cluster_nodes_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_framerefs_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Cluster_framerefs_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_framexform_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Cluster_framexform_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_idmass_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Cluster_idmass_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_imass_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Cluster_imass_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_locii_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 btSoftBody_Cluster_locii_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_invwi_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 btSoftBody_Cluster_invwi_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_com_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Cluster_com_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_vimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Cluster_vimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_dimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Cluster_dimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_nvimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Cluster_nvimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_ndimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Cluster_ndimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_lv_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Cluster_lv_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_av_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Cluster_av_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_leaf_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Cluster_leaf_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_ndamping_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Cluster_ndamping_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_ldamping_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Cluster_ldamping_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_adamping_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Cluster_adamping_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_matching_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Cluster_matching_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_maxSelfCollisionImpulse_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Cluster_maxSelfCollisionImpulse_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_selfCollisionImpulseFactor_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Cluster_selfCollisionImpulseFactor_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_containsAnchor_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btSoftBody_Cluster_containsAnchor_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_collide_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btSoftBody_Cluster_collide_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Cluster_clusterIndex_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Cluster_clusterIndex_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Cluster()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Cluster(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Impulse_velocity_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Impulse_velocity_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Impulse_drift_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Impulse_drift_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Impulse_asVelocity_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Impulse_asVelocity_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Impulse_asDrift_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Impulse_asDrift_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Impulse()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Impulse(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Body_soft_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Body_soft_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Body_rigid_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Body_rigid_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Body_collisionObject_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Body_collisionObject_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Body__SWIG_0()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Body__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Body__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Body_activate(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 btSoftBody_Body_invWorldInertia(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Body_invMass(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix4 btSoftBody_Body_xform(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 btSoftBody_Body_linearVelocity(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 btSoftBody_Body_angularVelocity__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 btSoftBody_Body_angularVelocity__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 btSoftBody_Body_velocity(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Body_applyVImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Body_applyDImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Body_applyImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Body_applyVAImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Body_applyDAImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Body_applyAImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Body_applyDCImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Body(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Joint_eType()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Joint_eType(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Joint_Specs()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Joint_Specs_erp_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Joint_Specs_erp_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Joint_Specs_cfm_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Joint_Specs_cfm_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Joint_Specs_split_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Joint_Specs_split_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Joint_Specs(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Joint_bodies_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Joint_bodies_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Joint_refs_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Joint_refs_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Joint_cfm_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Joint_cfm_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Joint_erp_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Joint_erp_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Joint_split_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Joint_split_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Joint_drift_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Joint_drift_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Joint_sdrift_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Joint_sdrift_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Joint_massmatrix_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 btSoftBody_Joint_massmatrix_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Joint_delete_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btSoftBody_Joint_delete_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Joint(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Joint_Prepare(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,float,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Joint_Solve(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,float,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Joint_Terminate(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Joint_Type(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_LJoint_Specs_position_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_LJoint_Specs_position_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_LJoint_Specs()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_LJoint_Specs(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_LJoint_rpos_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_LJoint_rpos_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_LJoint()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_LJoint(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_AJoint_IControl_Prepare(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_AJoint_IControl_Speed(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_AJoint_IControl_Default()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_AJoint_IControl()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_AJoint_IControl(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_AJoint_Specs()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_AJoint_Specs_axis_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_AJoint_Specs_axis_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_AJoint_Specs_icontrol_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_AJoint_Specs_icontrol_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_AJoint_Specs(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_AJoint_axis_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_AJoint_axis_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_AJoint_icontrol_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_AJoint_icontrol_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_AJoint()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_AJoint(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_CJoint_life_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_CJoint_life_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_CJoint_maxlife_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_CJoint_maxlife_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_CJoint_rpos_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_CJoint_rpos_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_CJoint_normal_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_CJoint_normal_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_CJoint_friction_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_CJoint_friction_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_CJoint()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_CJoint(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_aeromodel_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Config_aeromodel_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kVCF_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kVCF_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kDP_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kDP_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kDG_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kDG_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kLF_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kLF_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kPR_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kPR_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kVC_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kVC_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kDF_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kDF_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kMT_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kMT_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kCHR_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kCHR_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kKHR_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kKHR_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kSHR_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kSHR_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kAHR_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kAHR_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kSRHR_CL_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kSRHR_CL_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kSKHR_CL_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kSKHR_CL_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kSSHR_CL_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kSSHR_CL_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kSR_SPLT_CL_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kSR_SPLT_CL_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kSK_SPLT_CL_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kSK_SPLT_CL_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_kSS_SPLT_CL_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_kSS_SPLT_CL_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_maxvolume_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_maxvolume_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_timescale_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_Config_timescale_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_viterations_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Config_viterations_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_piterations_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Config_piterations_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_diterations_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Config_diterations_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_citerations_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Config_citerations_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_collisions_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_Config_collisions_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_vsequence_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Config_vsequence_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_psequence_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Config_psequence_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_Config_dsequence_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Config_dsequence_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_Config()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_Config(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_SolverState_sdt_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_SolverState_sdt_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_SolverState_isdt_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_SolverState_isdt_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_SolverState_velmrg_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_SolverState_velmrg_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_SolverState_radmrg_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_SolverState_radmrg_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_SolverState_updmrg_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_SolverState_updmrg_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_SolverState()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_SolverState(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_RayFromToCaster_rayFrom_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_RayFromToCaster_rayFrom_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_RayFromToCaster_rayTo_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_RayFromToCaster_rayTo_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_RayFromToCaster_rayNormalizedDirection_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_RayFromToCaster_rayNormalizedDirection_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_RayFromToCaster_mint_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_RayFromToCaster_mint_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_RayFromToCaster_face_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_RayFromToCaster_face_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_RayFromToCaster_tests_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_RayFromToCaster_tests_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody_RayFromToCaster(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_RayFromToCaster_rayFromToTriangle__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_RayFromToCaster_rayFromToTriangle__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody_RayFromToCaster(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_cfg_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_cfg_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_sst_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_sst_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_pose_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_pose_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_tag_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_tag_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_worldInfo_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_worldInfo_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_notes_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_notes_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_nodes_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_nodes_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_links_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_links_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_faces_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_faces_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_tetras_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_tetras_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_anchors_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_anchors_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_rcontacts_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_rcontacts_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_scontacts_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_scontacts_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_joints_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_joints_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_materials_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_materials_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_timeacc_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_timeacc_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_bounds_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_bounds_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_bUpdateRtCst_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btSoftBody_bUpdateRtCst_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_ndbvt_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_ndbvt_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_fdbvt_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_fdbvt_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_cdbvt_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_cdbvt_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_clusters_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_clusters_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_clusterConnectivity_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_clusterConnectivity_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_initialWorldTransform_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_initialWorldTransform_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_windVelocity_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_windVelocity_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_restLengthScale_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_restLengthScale_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,int,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_initDefaults(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBody(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_userIndexMapping_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_userIndexMapping_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btSoftBody_checkLink__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btSoftBody_checkLink__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btSoftBody_checkFace(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_appendMaterial(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendNote__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector4,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendNote__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector4,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendNote__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector4,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendNote__SWIG_3(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector4,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendNote__SWIG_4(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector4)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendNote__SWIG_5(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendNote__SWIG_6(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendNote__SWIG_7(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendNote__SWIG_8(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendNode(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendLink__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendLink__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendLink__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendLink__SWIG_3(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendLink__SWIG_4(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendLink__SWIG_5(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendLink__SWIG_6(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendLink__SWIG_7(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendLink__SWIG_8(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendFace__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendFace__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendFace__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendFace__SWIG_3(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendFace__SWIG_4(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendTetra__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendTetra__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,int,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendTetra__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendAnchor__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,boolean,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendAnchor__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendAnchor__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendAnchor__SWIG_3(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,boolean,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendAnchor__SWIG_4(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendAnchor__SWIG_5(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendLinearJoint__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendLinearJoint__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendLinearJoint__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendLinearJoint__SWIG_3(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendAngularJoint__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendAngularJoint__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendAngularJoint__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_appendAngularJoint__SWIG_3(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_addForce__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_addForce__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_addAeroForceToNode(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_addAeroForceToFace(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_addVelocity__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setVelocity(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_addVelocity__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setMass(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_getMass(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_getTotalMass(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setTotalMass__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setTotalMass__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setTotalDensity(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setVolumeMass(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setVolumeDensity(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_transform(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_translate(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_rotate(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_scale(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setPose(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,boolean,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_resetLinkRestLengths(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBody_getVolume(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_clusterCount(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 btSoftBody_clusterCom__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 btSoftBody_clusterCom__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 btSoftBody_clusterVelocity(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_clusterVImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_clusterDImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_clusterImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_clusterVAImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_clusterDAImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_clusterAImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_clusterDCImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_generateBendingConstraints__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_generateBendingConstraints__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_randomizeConstraints(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_releaseCluster(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_releaseClusters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_generateClusters__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_generateClusters__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_refine(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn,float,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btSoftBody_cutLink__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btSoftBody_cutLink__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btSoftBody_rayTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setSolver(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_predictMotion(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_solveConstraints(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_staticSolve(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_solveCommonConstraints(long,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_solveClusters__SWIG_0(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_integrateMotion(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_defaultCollisionHandler__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_defaultCollisionHandler__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setWindVelocity(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_upcast__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_getAabb(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_pointersToIndices(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_indicesToPointers__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.nio.IntBuffer)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_indicesToPointers__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_rayTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_initializeFaceTree(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 btSoftBody_evaluateCom(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btSoftBody_checkContact(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.math.Vector3,float,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_updateNormals(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_updateBounds(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_updatePose(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_updateConstants(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_updateLinkConstants(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_updateArea__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_updateArea__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_initializeClusters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_updateClusters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_cleanupClusters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_prepareClusters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_solveClusters__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_applyClusters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_dampClusters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_applyForces(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_PSolve_Anchors(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_PSolve_RContacts(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_PSolve_SContacts(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_PSolve_Links(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_VSolve_Links(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_getSolver__SWIG_0(int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBody__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.nio.FloatBuffer,int,int,int,java.nio.ShortBuffer,int,int,java.nio.ShortBuffer,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_getNodeCount(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_getNode(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_getVertices__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.nio.FloatBuffer,int,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_getVertices__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.nio.FloatBuffer,int,int,java.nio.ShortBuffer,int,int,java.nio.ShortBuffer,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_getVertices__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.nio.FloatBuffer,int,int,int,java.nio.ShortBuffer,int,int,java.nio.ShortBuffer,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBody_getFaceCount(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_getFace(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_getIndices(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.nio.ShortBuffer,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kVCF(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kDP(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kDG(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kLF(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kPR(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kVC(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kDF(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kMT(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kCHR(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kKHR(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kSHR(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kAHR(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kSRHR_CL(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kSKHR_CL(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kSSHR_CL(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kSR_SPLT_CL(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kSK_SPLT_CL(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_kSS_SPLT_CL(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_maxvolume(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_timescale(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_viterations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_piterations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_diterations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_citerations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBody_setConfig_collisions(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btTriIndex_PartIdTriangleIndex_set(long,com.badlogic.gdx.physics.bullet.softbody.btTriIndex,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btTriIndex_PartIdTriangleIndex_get(long,com.badlogic.gdx.physics.bullet.softbody.btTriIndex)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btTriIndex_childShape_set(long,com.badlogic.gdx.physics.bullet.softbody.btTriIndex,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btTriIndex_childShape_get(long,com.badlogic.gdx.physics.bullet.softbody.btTriIndex)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btTriIndex(int,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btTriIndex_getTriangleIndex(long,com.badlogic.gdx.physics.bullet.softbody.btTriIndex)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btTriIndex_getPartId(long,com.badlogic.gdx.physics.bullet.softbody.btTriIndex)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btTriIndex_getUid(long,com.badlogic.gdx.physics.bullet.softbody.btTriIndex)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btTriIndex(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyTriangleCallback_triangleCount_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodyTriangleCallback_triangleCount_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBodyTriangleCallback(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyTriangleCallback_setTimeStepAndCounters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback,float,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBodyTriangleCallback(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyTriangleCallback_clearCache(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 btSoftBodyTriangleCallback_getAabbMin(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 btSoftBodyTriangleCallback_getAabbMax(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBodyConcaveCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBodyConcaveCollisionAlgorithm(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyConcaveCollisionAlgorithm_clearCache(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBodyConcaveCollisionAlgorithm_CreateFunc()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBodyConcaveCollisionAlgorithm_CreateFunc(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBodyConcaveCollisionAlgorithm_SwappedCreateFunc()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBodyConcaveCollisionAlgorithm_SwappedCreateFunc(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyMaterialData_linearStiffness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyMaterialData_linearStiffness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyMaterialData_angularStiffness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyMaterialData_angularStiffness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyMaterialData_volumeStiffness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyMaterialData_volumeStiffness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyMaterialData_flags_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyMaterialData_flags_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_SoftBodyMaterialData()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_SoftBodyMaterialData(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyNodeData_material_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyNodeData_material_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyNodeData_position_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyNodeData_position_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyNodeData_previousPosition_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyNodeData_previousPosition_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyNodeData_velocity_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyNodeData_velocity_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyNodeData_accumulatedForce_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyNodeData_accumulatedForce_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyNodeData_normal_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyNodeData_normal_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyNodeData_inverseMass_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyNodeData_inverseMass_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyNodeData_area_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyNodeData_area_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyNodeData_attach_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyNodeData_attach_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyNodeData_pad_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyNodeData_pad_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_SoftBodyNodeData()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_SoftBodyNodeData(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyLinkData_material_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyLinkData_material_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyLinkData_nodeIndices_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData,int[])
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int[] SoftBodyLinkData_nodeIndices_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyLinkData_restLength_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyLinkData_restLength_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyLinkData_bbending_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyLinkData_bbending_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_SoftBodyLinkData()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_SoftBodyLinkData(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyFaceData_normal_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyFaceData_normal_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyFaceData_material_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyFaceData_material_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyFaceData_nodeIndices_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData,int[])
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int[] SoftBodyFaceData_nodeIndices_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyFaceData_restArea_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyFaceData_restArea_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_SoftBodyFaceData()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_SoftBodyFaceData(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyTetraData_c0_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyTetraData_c0_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyTetraData_material_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyTetraData_material_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyTetraData_nodeIndices_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData,int[])
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int[] SoftBodyTetraData_nodeIndices_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyTetraData_restVolume_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyTetraData_restVolume_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyTetraData_c1_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyTetraData_c1_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyTetraData_c2_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyTetraData_c2_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyTetraData_pad_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyTetraData_pad_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_SoftBodyTetraData()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_SoftBodyTetraData(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftRigidAnchorData_c0_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftRigidAnchorData_c0_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftRigidAnchorData_c1_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftRigidAnchorData_c1_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftRigidAnchorData_localFrame_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftRigidAnchorData_localFrame_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftRigidAnchorData_rigidBody_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftRigidAnchorData_rigidBody_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftRigidAnchorData_nodeIndex_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftRigidAnchorData_nodeIndex_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftRigidAnchorData_c2_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftRigidAnchorData_c2_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_SoftRigidAnchorData()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_SoftRigidAnchorData(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_aeroModel_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyConfigData_aeroModel_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_baumgarte_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_baumgarte_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_damping_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_damping_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_drag_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_drag_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_lift_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_lift_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_pressure_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_pressure_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_volume_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_volume_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_dynamicFriction_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_dynamicFriction_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_poseMatch_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_poseMatch_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_rigidContactHardness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_rigidContactHardness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_kineticContactHardness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_kineticContactHardness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_softContactHardness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_softContactHardness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_anchorHardness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_anchorHardness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_softRigidClusterHardness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_softRigidClusterHardness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_softKineticClusterHardness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_softKineticClusterHardness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_softSoftClusterHardness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_softSoftClusterHardness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_softRigidClusterImpulseSplit_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_softRigidClusterImpulseSplit_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_softKineticClusterImpulseSplit_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_softKineticClusterImpulseSplit_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_softSoftClusterImpulseSplit_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_softSoftClusterImpulseSplit_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_maxVolume_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_maxVolume_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_timeScale_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyConfigData_timeScale_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_velocityIterations_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyConfigData_velocityIterations_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_positionIterations_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyConfigData_positionIterations_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_driftIterations_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyConfigData_driftIterations_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_clusterIterations_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyConfigData_clusterIterations_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyConfigData_collisionFlags_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyConfigData_collisionFlags_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_SoftBodyConfigData()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_SoftBodyConfigData(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyPoseData_rot_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyPoseData_rot_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyPoseData_scale_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyPoseData_scale_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyPoseData_aqq_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyPoseData_aqq_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyPoseData_com_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyPoseData_com_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyPoseData_positions_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyPoseData_positions_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyPoseData_weights_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,java.nio.FloatBuffer)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: java.nio.FloatBuffer SoftBodyPoseData_weights_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyPoseData_numPositions_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyPoseData_numPositions_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyPoseData_numWeigts_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyPoseData_numWeigts_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyPoseData_bvolume_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyPoseData_bvolume_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyPoseData_bframe_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyPoseData_bframe_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyPoseData_restVolume_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyPoseData_restVolume_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyPoseData_pad_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyPoseData_pad_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_SoftBodyPoseData()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_SoftBodyPoseData(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_framexform_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyClusterData_framexform_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_locii_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyClusterData_locii_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_invwi_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyClusterData_invwi_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_com_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyClusterData_com_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_vimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyClusterData_vimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_dimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyClusterData_dimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_lv_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyClusterData_lv_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_av_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyClusterData_av_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_framerefs_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long SoftBodyClusterData_framerefs_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_nodeIndices_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,java.nio.IntBuffer)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: java.nio.IntBuffer SoftBodyClusterData_nodeIndices_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_masses_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,java.nio.FloatBuffer)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: java.nio.FloatBuffer SoftBodyClusterData_masses_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_numFrameRefs_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyClusterData_numFrameRefs_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_numNodes_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyClusterData_numNodes_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_numMasses_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyClusterData_numMasses_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_idmass_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyClusterData_idmass_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_imass_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyClusterData_imass_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_nvimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyClusterData_nvimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_ndimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyClusterData_ndimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_ndamping_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyClusterData_ndamping_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_ldamping_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyClusterData_ldamping_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_adamping_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyClusterData_adamping_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_matching_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyClusterData_matching_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_maxSelfCollisionImpulse_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyClusterData_maxSelfCollisionImpulse_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_selfCollisionImpulseFactor_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float SoftBodyClusterData_selfCollisionImpulseFactor_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_containsAnchor_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyClusterData_containsAnchor_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_collide_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyClusterData_collide_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void SoftBodyClusterData_clusterIndex_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int SoftBodyClusterData_clusterIndex_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_SoftBodyClusterData()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_SoftBodyClusterData(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyJointData_bodyA_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyJointData_bodyA_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyJointData_bodyB_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyJointData_bodyB_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyJointData_refs_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyJointData_refs_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyJointData_cfm_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBodyJointData_cfm_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyJointData_erp_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBodyJointData_erp_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyJointData_split_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBodyJointData_split_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyJointData_delete_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodyJointData_delete_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyJointData_relPosition_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyJointData_relPosition_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyJointData_bodyAtype_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodyJointData_bodyAtype_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyJointData_bodyBtype_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodyJointData_bodyBtype_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyJointData_jointType_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodyJointData_jointType_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyJointData_pad_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodyJointData_pad_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBodyJointData()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBodyJointData(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_collisionObjectData_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyFloatData_collisionObjectData_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_pose_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyFloatData_pose_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_materials_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyFloatData_materials_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_nodes_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyFloatData_nodes_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_links_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyFloatData_links_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_faces_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyFloatData_faces_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_tetrahedra_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyFloatData_tetrahedra_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_anchors_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyFloatData_anchors_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_clusters_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyFloatData_clusters_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_joints_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyFloatData_joints_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_numMaterials_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodyFloatData_numMaterials_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_numNodes_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodyFloatData_numNodes_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_numLinks_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodyFloatData_numLinks_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_numFaces_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodyFloatData_numFaces_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_numTetrahedra_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodyFloatData_numTetrahedra_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_numAnchors_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodyFloatData_numAnchors_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_numClusters_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodyFloatData_numClusters_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_numJoints_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftBodyFloatData_numJoints_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyFloatData_config_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyFloatData_config_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBodyFloatData()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBodyFloatData(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_fDrawFlags()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_fDrawFlags(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyHelpers_Draw__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyHelpers_Draw__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyHelpers_DrawInfos(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean,boolean,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyHelpers_DrawNodeTree__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyHelpers_DrawNodeTree__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyHelpers_DrawNodeTree__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyHelpers_DrawFaceTree__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyHelpers_DrawFaceTree__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyHelpers_DrawFaceTree__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyHelpers_DrawClusterTree__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyHelpers_DrawClusterTree__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyHelpers_DrawClusterTree__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyHelpers_DrawFrame(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyHelpers_CreateRope(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyHelpers_CreatePatch(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyHelpers_CreatePatchUV__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyHelpers_CreatePatchUV__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftBodyHelpers_CalculateUV(int,int,int,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyHelpers_CreateEllipsoid(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyHelpers_CreateFromTriMesh__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.nio.FloatBuffer,java.nio.IntBuffer,int,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyHelpers_CreateFromTriMesh__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.nio.FloatBuffer,java.nio.IntBuffer,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyHelpers_CreateFromConvexHull__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyHelpers_CreateFromConvexHull__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyHelpers_CreateFromTetGenData(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBodyHelpers()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBodyHelpers(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftBodyCollisionShape_body_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyCollisionShape_body_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBodyCollisionShape(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBodyCollisionShape(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftClusterCollisionShape_cluster_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftClusterCollisionShape_cluster_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftClusterCollisionShape(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftClusterCollisionShape_getShapeType(long,com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftClusterCollisionShape(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 Lerp(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 Clamp(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float ClusterMetric(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 ScaleAlongAxis(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 Cross(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 Diagonal(float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 Add(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 Sub(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 Mul(com.badlogic.gdx.math.Matrix3,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void Orthogonalize(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 MassMatrix(float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 ImpulseMatrix__SWIG_0(float,float,float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 ImpulseMatrix__SWIG_1(float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Matrix3 AngularImpulseMatrix(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 ProjectOnAxis(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 ProjectOnPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void ProjectOrigin__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void ProjectOrigin__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 BaryCoord(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float ImplicitSolve__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float ImplicitSolve__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 NormalizeAny(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long VolumeOf__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: com.badlogic.gdx.math.Vector3 CenterOf(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float AreaOf(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float VolumeOf__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void EvaluateMedium(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void ApplyClampedForce(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int MatchEdge(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btEigen_system__SWIG_0(com.badlogic.gdx.math.Matrix3,long,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btEigen_system__SWIG_1(com.badlogic.gdx.math.Matrix3,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btEigen()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btEigen(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int PolarDecompose(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_ClusterBase_erp_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftColliders_ClusterBase_erp_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_ClusterBase_idt_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftColliders_ClusterBase_idt_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_ClusterBase_margin_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftColliders_ClusterBase_margin_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_ClusterBase_friction_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftColliders_ClusterBase_friction_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_ClusterBase_threshold_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftColliders_ClusterBase_threshold_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftColliders_ClusterBase()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btSoftColliders_ClusterBase_SolveContact(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase,long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftColliders_ClusterBase(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_CollideCL_RS_psb_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftColliders_CollideCL_RS_psb_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_CollideCL_RS_colObjWrap_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftColliders_CollideCL_RS_colObjWrap_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_CollideCL_RS_ProcessColObj(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftColliders_CollideCL_RS()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftColliders_CollideCL_RS(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_CollideCL_SS_bodies_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftColliders_CollideCL_SS_bodies_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_CollideCL_SS_ProcessSoftSoft(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftColliders_CollideCL_SS()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftColliders_CollideCL_SS(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_CollideSDF_RS_DoNode(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_CollideSDF_RS_psb_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftColliders_CollideSDF_RS_psb_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_CollideSDF_RS_colObj1Wrap_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftColliders_CollideSDF_RS_colObj1Wrap_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_CollideSDF_RS_rigidBody_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftColliders_CollideSDF_RS_rigidBody_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_CollideSDF_RS_dynmargin_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftColliders_CollideSDF_RS_dynmargin_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_CollideSDF_RS_stamargin_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftColliders_CollideSDF_RS_stamargin_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftColliders_CollideSDF_RS()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftColliders_CollideSDF_RS(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_CollideVF_SS_psb_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS,long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftColliders_CollideVF_SS_psb_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftColliders_CollideVF_SS_mrg_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS,float)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: float btSoftColliders_CollideVF_SS_mrg_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftColliders_CollideVF_SS()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftColliders_CollideVF_SS(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftColliders()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftColliders(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBodyRigidBodyCollisionConfiguration__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftBodyRigidBodyCollisionConfiguration__SWIG_1()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftBodyRigidBodyCollisionConfiguration(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btVertexBufferDescriptor(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btVertexBufferDescriptor_hasVertexPositions(long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: boolean btVertexBufferDescriptor_hasNormals(long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btVertexBufferDescriptor_getBufferType(long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btVertexBufferDescriptor_getVertexOffset(long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btVertexBufferDescriptor_getVertexStride(long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btVertexBufferDescriptor_getNormalOffset(long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btVertexBufferDescriptor_getNormalStride(long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btCPUVertexBufferDescriptor__SWIG_0(java.nio.FloatBuffer,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btCPUVertexBufferDescriptor__SWIG_1(java.nio.FloatBuffer,int,int,int,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btCPUVertexBufferDescriptor(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: java.nio.FloatBuffer btCPUVertexBufferDescriptor_getBasePointer(long,com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftRigidCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftRigidCollisionAlgorithm(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftRigidCollisionAlgorithm_CreateFunc()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftRigidCollisionAlgorithm_CreateFunc(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftRigidDynamicsWorld__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftRigidDynamicsWorld__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftRigidDynamicsWorld(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftRigidDynamicsWorld_addSoftBody__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,short,short)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftRigidDynamicsWorld_addSoftBody__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,short)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftRigidDynamicsWorld_addSoftBody__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftRigidDynamicsWorld_removeSoftBody(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: int btSoftRigidDynamicsWorld_getDrawFlags(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftRigidDynamicsWorld_setDrawFlags(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld,int)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftRigidDynamicsWorld_getWorldInfo__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftRigidDynamicsWorld_getSoftBodyArray__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void btSoftRigidDynamicsWorld_rayTestSingle(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftSoftCollisionAlgorithm__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftSoftCollisionAlgorithm__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftSoftCollisionAlgorithm(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long new_btSoftSoftCollisionAlgorithm_CreateFunc()
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: void delete_btSoftSoftCollisionAlgorithm_CreateFunc(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btDefaultSoftBodySolver_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Material_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Feature_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Node_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Link_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Face_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Tetra_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_Note_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_LJoint_Specs_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_LJoint_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_AJoint_Specs_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_AJoint_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_CJoint_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_RayFromToCaster_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBody_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyTriangleCallback_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyConcaveCollisionAlgorithm_CreateFunc_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyConcaveCollisionAlgorithm_SwappedCreateFunc_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyConcaveCollisionAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyCollisionShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftClusterCollisionShape_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftColliders_ClusterBase_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftColliders_CollideCL_RS_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftColliders_CollideCL_SS_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftColliders_CollideSDF_RS_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftColliders_CollideVF_SS_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftBodyRigidBodyCollisionConfiguration_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btCPUVertexBufferDescriptor_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftRigidCollisionAlgorithm_CreateFunc_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftRigidCollisionAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftRigidDynamicsWorld_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftSoftCollisionAlgorithm_CreateFunc_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI: long btSoftSoftCollisionAlgorithm_SWIGUpcast(long)
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor: btCPUVertexBufferDescriptor(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor: btCPUVertexBufferDescriptor(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor)
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor: void delete()
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor: long SwigConstructbtCPUVertexBufferDescriptor(java.nio.FloatBuffer,int,int)
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor: btCPUVertexBufferDescriptor(java.nio.FloatBuffer,int,int)
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor: long SwigConstructbtCPUVertexBufferDescriptor(java.nio.FloatBuffer,int,int,int,int)
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor: btCPUVertexBufferDescriptor(java.nio.FloatBuffer,int,int,int,int)
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor: java.nio.FloatBuffer getBasePointer()
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor: void <clinit>()
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver: btDefaultSoftBodySolver(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver: btDefaultSoftBodySolver(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver)
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver: void delete()
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver: btDefaultSoftBodySolver()
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver: void optimize(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t,boolean)
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver: void optimize(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t)
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver: void copyBackToSoftBodies(boolean)
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver: void copyBackToSoftBodies()
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver: void copySoftBodyToVertexBuffer(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor)
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver: void processCollision(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver: void processCollision(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btEigen
com.badlogic.gdx.physics.bullet.softbody.btEigen: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btEigen: btEigen(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btEigen: btEigen(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btEigen: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btEigen: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btEigen)
com.badlogic.gdx.physics.bullet.softbody.btEigen: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btEigen: void delete()
com.badlogic.gdx.physics.bullet.softbody.btEigen: int system(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3,com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btEigen: int system(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3)
com.badlogic.gdx.physics.bullet.softbody.btEigen: btEigen()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: btSoftBody(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: btSoftBody(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setCollisionDisabledObjects(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray getCollisionDisabledObjects()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setSoftBodySolver(com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver getSoftBodySolver()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setCfg(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config getCfg()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setSst(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState getSst()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setPose(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose getPose()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setTag(long)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: long getTag()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setWorldInfo(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo getWorldInfo()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setNotes(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t getNotes()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setNodes(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t getNodes()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setLinks(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t getLinks()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setFaces(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t getFaces()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setTetras(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t getTetras()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setAnchors(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t getAnchors()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setRcontacts(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t getRcontacts()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setScontacts(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t getScontacts()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setJoints(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t getJoints()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setMaterials(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t getMaterials()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setTimeacc(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: float getTimeacc()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setBounds(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getBounds()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setBUpdateRtCst(boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: boolean getBUpdateRtCst()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setNdbvt(com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.collision.btDbvt getNdbvt()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setFdbvt(com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.collision.btDbvt getFdbvt()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setCdbvt(com.badlogic.gdx.physics.bullet.collision.btDbvt)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.collision.btDbvt getCdbvt()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setClusters(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t getClusters()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setClusterConnectivity(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_bool_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_bool_t getClusterConnectivity()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setInitialWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.linearmath.btTransform getInitialWorldTransform()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setWindVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWindVelocity()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setRestLengthScale(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: float getRestLengthScale()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: long SwigConstructbtSoftBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,int,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: btSoftBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,int,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: btSoftBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void initDefaults()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setUserIndexMapping(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_int_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_int_t getUserIndexMapping()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: boolean checkLink(int,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: boolean checkLink(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: boolean checkFace(int,int,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material appendMaterial()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.btVector4,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.btVector4,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.btVector4,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.btVector4,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.btVector4)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendNode(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendLink(int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendLink(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendLink()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendLink(int,int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendLink(int,int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendLink(int,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendLink(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendLink(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendLink(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendFace(int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendFace(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendFace()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendFace(int,int,int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendFace(int,int,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendTetra(int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendTetra(int,int,int,int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendTetra(int,int,int,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendAnchor(int,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,boolean,float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendAnchor(int,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendAnchor(int,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendAnchor(int,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,boolean,float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendAnchor(int,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendAnchor(int,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendLinearJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendLinearJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendLinearJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendLinearJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendAngularJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendAngularJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendAngularJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void appendAngularJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void addForce(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void addForce(com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void addAeroForceToNode(com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void addAeroForceToFace(com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void addVelocity(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setVelocity(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void addVelocity(com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setMass(int,float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: float getMass(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: float getTotalMass()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setTotalMass(float,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setTotalMass(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setTotalDensity(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setVolumeMass(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setVolumeDensity(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void transform(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void translate(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void rotate(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void scale(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setPose(boolean,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void resetLinkRestLengths()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: float getVolume()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: int clusterCount()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.math.Vector3 clusterCom(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.math.Vector3 clusterCom(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.math.Vector3 clusterVelocity(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void clusterVImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void clusterDImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void clusterImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void clusterVAImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void clusterDAImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void clusterAImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void clusterDCImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: int generateBendingConstraints(int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: int generateBendingConstraints(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void randomizeConstraints()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void releaseCluster(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void releaseClusters()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: int generateClusters(int,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: int generateClusters(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void refine(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn,float,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: boolean cutLink(int,int,float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: boolean cutLink(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: boolean rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setSolver(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void predictMotion(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void solveConstraints()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void staticSolve(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void solveCommonConstraints(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody,int,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void solveClusters(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void integrateMotion()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void defaultCollisionHandler(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void defaultCollisionHandler(com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setWindVelocity(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.btSoftBody upcast(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void getAabb(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void pointersToIndices()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void indicesToPointers(java.nio.IntBuffer)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void indicesToPointers()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: int rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_float,com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btSoftBody__eFeature___,com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_int,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void initializeFaceTree()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.math.Vector3 evaluateCom()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: boolean checkContact(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void updateNormals()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void updateBounds()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void updatePose()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void updateConstants()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void updateLinkConstants()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void updateArea(boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void updateArea()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void initializeClusters()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void updateClusters()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void cleanupClusters()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void prepareClusters(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void solveClusters(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void applyClusters(boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void dampClusters()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void applyForces()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void PSolve_Anchors(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void PSolve_RContacts(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void PSolve_SContacts(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void PSolve_Links(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void VSolve_Links(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_f_p_btSoftBody_float_float__void getSolver(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: long SwigConstructbtSoftBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.nio.FloatBuffer,int,int,int,java.nio.ShortBuffer,int,int,java.nio.ShortBuffer,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: btSoftBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.nio.FloatBuffer,int,int,int,java.nio.ShortBuffer,int,int,java.nio.ShortBuffer,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: int getNodeCount()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node getNode(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void getVertices(java.nio.FloatBuffer,int,int,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void getVertices(java.nio.FloatBuffer,int,int,java.nio.ShortBuffer,int,int,java.nio.ShortBuffer,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void getVertices(java.nio.FloatBuffer,int,int,int,java.nio.ShortBuffer,int,int,java.nio.ShortBuffer,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: int getFaceCount()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face getFace(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void getIndices(java.nio.ShortBuffer,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kVCF(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kDP(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kDG(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kLF(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kPR(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kVC(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kDF(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kMT(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kCHR(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kKHR(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kSHR(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kAHR(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kSRHR_CL(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kSKHR_CL(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kSSHR_CL(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kSR_SPLT_CL(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kSK_SPLT_CL(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_kSS_SPLT_CL(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_maxvolume(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_timescale(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_viterations(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_piterations(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_diterations(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_citerations(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void setConfig_collisions(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody: void <clinit>()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint: btSoftBody$AJoint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint: btSoftBody$AJoint(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint: void setAxis(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAxis()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint: void setIcontrol(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl getIcontrol()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint: btSoftBody$AJoint()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl: btSoftBody$AJoint$IControl(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl: btSoftBody$AJoint$IControl(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl: void Prepare(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl: float Speed(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint,float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl Default()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl: btSoftBody$AJoint$IControl()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs: btSoftBody$AJoint$Specs(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs: btSoftBody$AJoint$Specs(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs: btSoftBody$AJoint$Specs()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs: void setAxis(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAxis()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs: void setIcontrol(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl getIcontrol()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: btSoftBody$Anchor(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: btSoftBody$Anchor(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: void setNode(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node getNode()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: void setLocal(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLocal()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: void setBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getBody()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: void setInfluence(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: float getInfluence()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: void setC0(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: com.badlogic.gdx.math.Matrix3 getC0()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: void setC1(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getC1()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: void setC2(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: float getC2()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor: btSoftBody$Anchor()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: btSoftBody$Body(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: btSoftBody$Body(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: void setSoft(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster getSoft()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: void setRigid(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigid()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: void setCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getCollisionObject()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: btSoftBody$Body()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: btSoftBody$Body(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: btSoftBody$Body(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: void activate()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: com.badlogic.gdx.math.Matrix3 invWorldInertia()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: float invMass()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: com.badlogic.gdx.math.Matrix4 xform()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: com.badlogic.gdx.math.Vector3 linearVelocity()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: com.badlogic.gdx.math.Vector3 angularVelocity(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: com.badlogic.gdx.math.Vector3 angularVelocity()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: com.badlogic.gdx.math.Vector3 velocity(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: void applyVImpulse(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: void applyDImpulse(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: void applyImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: void applyVAImpulse(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: void applyDAImpulse(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: void applyAImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body: void applyDCImpulse(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: btSoftBody$CJoint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: btSoftBody$CJoint(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: void setLife(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: int getLife()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: void setMaxlife(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: int getMaxlife()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: void setRpos(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRpos()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormal()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: void setFriction(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: float getFriction()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint: btSoftBody$CJoint()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: btSoftBody$Cluster(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: btSoftBody$Cluster(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setMasses(com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: com.badlogic.gdx.physics.bullet.linearmath.btScalarArray getMasses()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setNodes(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t getNodes()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setFramerefs(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getFramerefs()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setFramexform(com.badlogic.gdx.physics.bullet.linearmath.btTransform)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: com.badlogic.gdx.physics.bullet.linearmath.btTransform getFramexform()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setIdmass(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: float getIdmass()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setImass(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: float getImass()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setLocii(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: com.badlogic.gdx.math.Matrix3 getLocii()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setInvwi(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: com.badlogic.gdx.math.Matrix3 getInvwi()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setCom(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getCom()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setVimpulses(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVimpulses()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setDimpulses(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getDimpulses()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setNvimpulses(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: int getNvimpulses()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setNdimpulses(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: int getNdimpulses()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setLv(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLv()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setAv(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAv()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setLeaf(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: com.badlogic.gdx.physics.bullet.collision.btDbvtNode getLeaf()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setNdamping(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: float getNdamping()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setLdamping(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: float getLdamping()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setAdamping(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: float getAdamping()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setMatching(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: float getMatching()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setMaxSelfCollisionImpulse(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: float getMaxSelfCollisionImpulse()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setSelfCollisionImpulseFactor(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: float getSelfCollisionImpulseFactor()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setContainsAnchor(boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: boolean getContainsAnchor()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setCollide(boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: boolean getCollide()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: void setClusterIndex(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: int getClusterIndex()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster: btSoftBody$Cluster()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: btSoftBody$Config(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: btSoftBody$Config(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setAeromodel(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: int getAeromodel()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKVCF(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKVCF()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKDP(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKDP()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKDG(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKDG()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKLF(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKLF()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKPR(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKPR()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKVC(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKVC()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKDF(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKDF()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKMT(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKMT()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKCHR(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKCHR()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKKHR(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKKHR()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKSHR(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKSHR()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKAHR(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKAHR()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKSRHR_CL(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKSRHR_CL()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKSKHR_CL(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKSKHR_CL()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKSSHR_CL(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKSSHR_CL()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKSR_SPLT_CL(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKSR_SPLT_CL()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKSK_SPLT_CL(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKSK_SPLT_CL()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setKSS_SPLT_CL(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getKSS_SPLT_CL()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setMaxvolume(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getMaxvolume()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setTimescale(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: float getTimescale()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setViterations(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: int getViterations()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setPiterations(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: int getPiterations()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setDiterations(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: int getDiterations()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setCiterations(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: int getCiterations()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setCollisions(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: int getCollisions()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setVsequence(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t getVsequence()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setPsequence(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t getPsequence()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: void setDsequence(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t getDsequence()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config: btSoftBody$Config()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element: btSoftBody$Element(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element: btSoftBody$Element(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element: void setTag(long)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element: long getTag()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element: btSoftBody$Element()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: btSoftBody$Face(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: btSoftBody$Face(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: void setN(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node getN()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormal()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: void setRa(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: float getRa()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: void setLeaf(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: com.badlogic.gdx.physics.bullet.collision.btDbvtNode getLeaf()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face: btSoftBody$Face()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature: btSoftBody$Feature(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature: btSoftBody$Feature(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature: void setMaterial(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material getMaterial()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature: btSoftBody$Feature()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn: btSoftBody$ImplicitFn(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn: btSoftBody$ImplicitFn(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn: float Eval(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: btSoftBody$Impulse(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: btSoftBody$Impulse(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: void setVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVelocity()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: void setDrift(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getDrift()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: void setAsVelocity(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: int getAsVelocity()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: void setAsDrift(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: int getAsDrift()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse: btSoftBody$Impulse()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: btSoftBody$Joint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: btSoftBody$Joint(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: void setBodies(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body getBodies()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: void setRefs(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRefs()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: void setCfm(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: float getCfm()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: void setErp(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: float getErp()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: void setSplit(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: float getSplit()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: void setDrift(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getDrift()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: void setSdrift(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getSdrift()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: void setMassmatrix(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: com.badlogic.gdx.math.Matrix3 getMassmatrix()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: void setDelete(boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: boolean getDelete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: void Prepare(float,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: void Solve(float,float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: void Terminate(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint: int Type()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs: btSoftBody$Joint$Specs(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs: btSoftBody$Joint$Specs(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs: btSoftBody$Joint$Specs()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs: void setErp(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs: float getErp()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs: void setCfm(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs: float getCfm()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs: void setSplit(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs: float getSplit()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType: btSoftBody$Joint$eType(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType: btSoftBody$Joint$eType(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType: btSoftBody$Joint$eType()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType$_
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType$_: int Linear
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType$_: int Angular
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType$_: int Contact
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType$_: btSoftBody$Joint$eType$_()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint: btSoftBody$LJoint(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint: btSoftBody$LJoint(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint: void setRpos(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRpos()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint: btSoftBody$LJoint()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs: btSoftBody$LJoint$Specs(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs: btSoftBody$LJoint$Specs(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs: void setPosition(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getPosition()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs: btSoftBody$LJoint$Specs()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: btSoftBody$Link(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: btSoftBody$Link(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: void setN(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node getN()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: void setRl(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: float getRl()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: void setBbending(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: int getBbending()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: void setC0(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: float getC0()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: void setC1(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: float getC1()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: void setC2(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: float getC2()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: void setC3(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getC3()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link: btSoftBody$Link()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: btSoftBody$Material(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: btSoftBody$Material(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: void setKLST(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: float getKLST()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: void setKAST(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: float getKAST()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: void setKVST(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: float getKVST()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: void setFlags(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: int getFlags()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material: btSoftBody$Material()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: btSoftBody$Node(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: btSoftBody$Node(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: void setX(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getX()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: void setQ(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getQ()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: void setV(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getV()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: void setF(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getF()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: void setN(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getN()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: void setIm(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: float getIm()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: void setArea(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: float getArea()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: void setLeaf(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: com.badlogic.gdx.physics.bullet.collision.btDbvtNode getLeaf()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: void setBattach(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: int getBattach()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node: btSoftBody$Node()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: btSoftBody$Note(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: btSoftBody$Note(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: void setText(java.lang.String)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: java.lang.String getText()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: void setOffset(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getOffset()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: void setRank(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: int getRank()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: void setNodes(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node getNodes()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: void setCoords(float[])
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: float[] getCoords()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note: btSoftBody$Note()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: btSoftBody$Pose(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: btSoftBody$Pose(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: void setBvolume(boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: boolean getBvolume()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: void setBframe(boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: boolean getBframe()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: void setVolume(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: float getVolume()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: void setPos(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getPos()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: void setWgh(com.badlogic.gdx.physics.bullet.linearmath.btScalarArray)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: com.badlogic.gdx.physics.bullet.linearmath.btScalarArray getWgh()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: void setCom(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getCom()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: void setRot(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: com.badlogic.gdx.math.Matrix3 getRot()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: void setScl(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: com.badlogic.gdx.math.Matrix3 getScl()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: void setAqq(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: com.badlogic.gdx.math.Matrix3 getAqq()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose: btSoftBody$Pose()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: btSoftBody$RContact(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: btSoftBody$RContact(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: void setCti(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti getCti()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: void setNode(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node getNode()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: void setC0(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: com.badlogic.gdx.math.Matrix3 getC0()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: void setC1(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getC1()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: void setC2(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: float getC2()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: void setC3(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: float getC3()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: void setC4(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: float getC4()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact: btSoftBody$RContact()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: btSoftBody$RayFromToCaster(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: btSoftBody$RayFromToCaster(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: void setRayFrom(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayFrom()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: void setRayTo(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayTo()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: void setRayNormalizedDirection(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayNormalizedDirection()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: void setMint(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: float getMint()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: void setFace(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face getFace()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: void setTests(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: int getTests()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: btSoftBody$RayFromToCaster(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: float rayFromToTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster: float rayFromToTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: btSoftBody$SContact(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: btSoftBody$SContact(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: void setNode(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node getNode()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: void setFace(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face getFace()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: void setWeights(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWeights()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormal()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: void setMargin(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: float getMargin()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: void setFriction(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: float getFriction()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: void setCfm(float[])
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: float[] getCfm()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact: btSoftBody$SContact()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: btSoftBody$SolverState(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: btSoftBody$SolverState(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: void setSdt(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: float getSdt()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: void setIsdt(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: float getIsdt()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: void setVelmrg(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: float getVelmrg()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: void setRadmrg(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: float getRadmrg()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: void setUpdmrg(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: float getUpdmrg()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState: btSoftBody$SolverState()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: btSoftBody$Tetra(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: btSoftBody$Tetra(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: void setN(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node getN()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: void setRv(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: float getRv()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: void setLeaf(com.badlogic.gdx.physics.bullet.collision.btDbvtNode)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: com.badlogic.gdx.physics.bullet.collision.btDbvtNode getLeaf()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: void setC0(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getC0()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: void setC1(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: float getC1()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: void setC2(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: float getC2()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra: btSoftBody$Tetra()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel: btSoftBody$eAeroModel(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel: btSoftBody$eAeroModel(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel: btSoftBody$eAeroModel()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel$_
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel$_: int V_Point
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel$_: int V_TwoSided
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel$_: int V_TwoSidedLiftDrag
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel$_: int V_OneSided
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel$_: int F_TwoSided
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel$_: int F_TwoSidedLiftDrag
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel$_: int F_OneSided
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel$_: int END
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel$_: btSoftBody$eAeroModel$_()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature: btSoftBody$eFeature(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature: btSoftBody$eFeature(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature: btSoftBody$eFeature()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature$_
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature$_: int None
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature$_: int Node
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature$_: int Link
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature$_: int Face
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature$_: int Tetra
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature$_: int END
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature$_: btSoftBody$eFeature$_()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver: btSoftBody$ePSolver(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver: btSoftBody$ePSolver(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver: btSoftBody$ePSolver()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver$_
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver$_: int Linear
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver$_: int Anchors
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver$_: int RContacts
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver$_: int SContacts
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver$_: int END
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver$_: btSoftBody$ePSolver$_()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets: btSoftBody$eSolverPresets(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets: btSoftBody$eSolverPresets(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets: btSoftBody$eSolverPresets()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets$_
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets$_: int Positions
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets$_: int Velocities
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets$_: int Default
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets$_: int END
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets$_: btSoftBody$eSolverPresets$_()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver: btSoftBody$eVSolver(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver: btSoftBody$eVSolver(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver: btSoftBody$eVSolver()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver$_
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver$_: int Linear
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver$_: int END
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver$_: btSoftBody$eVSolver$_()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision: btSoftBody$fCollision(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision: btSoftBody$fCollision(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision: btSoftBody$fCollision()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision$_
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision$_: int RVSmask
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision$_: int SDF_RS
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision$_: int CL_RS
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision$_: int SVSmask
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision$_: int VF_SS
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision$_: int CL_SS
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision$_: int CL_SELF
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision$_: int Default
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision$_: int END
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision$_: btSoftBody$fCollision$_()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial: btSoftBody$fMaterial(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial: btSoftBody$fMaterial(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial: btSoftBody$fMaterial()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial$_
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial$_: int DebugDraw
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial$_: int Default
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial$_: int END
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial$_: btSoftBody$fMaterial$_()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti: btSoftBody$sCti(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti: btSoftBody$sCti(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti: void setColObj(com.badlogic.gdx.physics.bullet.collision.btCollisionObject)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti: com.badlogic.gdx.physics.bullet.collision.btCollisionObject getColObj()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti: void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormal()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti: void setOffset(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti: float getOffset()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti: btSoftBody$sCti()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium: btSoftBody$sMedium(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium: btSoftBody$sMedium(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium: void setVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVelocity()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium: void setPressure(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium: float getPressure()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium: void setDensity(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium: float getDensity()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium: btSoftBody$sMedium()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: btSoftBody$sRayCast(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: btSoftBody$sRayCast(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: void setBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: com.badlogic.gdx.physics.bullet.softbody.btSoftBody getBody()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: void setFeature(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: int getFeature()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: void setIndex(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: int getIndex()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: void setFraction(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: float getFraction()
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast: btSoftBody$sRayCast()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape: btSoftBodyCollisionShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape: btSoftBodyCollisionShape(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape: void setBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape: com.badlogic.gdx.physics.bullet.softbody.btSoftBody getBody()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape: btSoftBodyCollisionShape(com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm: btSoftBodyConcaveCollisionAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm: btSoftBodyConcaveCollisionAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm: btSoftBodyConcaveCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm: void clearCache()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$CreateFunc
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$CreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$CreateFunc: btSoftBodyConcaveCollisionAlgorithm$CreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$CreateFunc: btSoftBodyConcaveCollisionAlgorithm$CreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$CreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$CreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$CreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$CreateFunc: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$CreateFunc: btSoftBodyConcaveCollisionAlgorithm$CreateFunc()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc: btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc: btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc: btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: btSoftBodyFloatData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: btSoftBodyFloatData(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setCollisionObjectData(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData getCollisionObjectData()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setPose(com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData getPose()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setMaterials(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_SoftBodyMaterialData)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_SoftBodyMaterialData getMaterials()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setNodes(com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData getNodes()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setLinks(com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData getLinks()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setFaces(com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData getFaces()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setTetrahedra(com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData getTetrahedra()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setAnchors(com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData getAnchors()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setClusters(com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData getClusters()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setJoints(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData getJoints()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setNumMaterials(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: int getNumMaterials()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setNumNodes(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: int getNumNodes()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setNumLinks(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: int getNumLinks()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setNumFaces(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: int getNumFaces()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setNumTetrahedra(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: int getNumTetrahedra()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setNumAnchors(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: int getNumAnchors()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setNumClusters(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: int getNumClusters()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setNumJoints(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: int getNumJoints()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: void setConfig(com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData getConfig()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData: btSoftBodyFloatData()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: boolean $assertionsDisabled
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: btSoftBodyHelpers(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: btSoftBodyHelpers(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void Draw(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void Draw(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void DrawInfos(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean,boolean,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void DrawNodeTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void DrawNodeTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void DrawNodeTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void DrawFaceTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void DrawFaceTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void DrawFaceTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void DrawClusterTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void DrawClusterTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void DrawClusterTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void DrawFrame(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreateRope(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreatePatch(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreatePatchUV(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,boolean,java.nio.FloatBuffer)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreatePatchUV(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: float CalculateUV(int,int,int,int,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreateEllipsoid(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreateFromTriMesh(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.nio.FloatBuffer,java.nio.IntBuffer,int,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreateFromTriMesh(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.nio.FloatBuffer,java.nio.IntBuffer,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreateFromConvexHull(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreateFromConvexHull(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreateFromTetGenData(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: btSoftBodyHelpers()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers: void <clinit>()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: btSoftBodyJointData(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: btSoftBodyJointData(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: void setBodyA(long)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: long getBodyA()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: void setBodyB(long)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: long getBodyB()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: void setRefs(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getRefs()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: void setCfm(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: float getCfm()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: void setErp(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: float getErp()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: void setSplit(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: float getSplit()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: void setDelete(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: int getDelete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: void setRelPosition(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getRelPosition()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: void setBodyAtype(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: int getBodyAtype()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: void setBodyBtype(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: int getBodyBtype()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: void setJointType(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: int getJointType()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: void setPad(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: int getPad()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData: btSoftBodyJointData()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyRigidBodyCollisionConfiguration
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyRigidBodyCollisionConfiguration: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyRigidBodyCollisionConfiguration: btSoftBodyRigidBodyCollisionConfiguration(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyRigidBodyCollisionConfiguration: btSoftBodyRigidBodyCollisionConfiguration(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyRigidBodyCollisionConfiguration: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyRigidBodyCollisionConfiguration: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyRigidBodyCollisionConfiguration)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyRigidBodyCollisionConfiguration: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyRigidBodyCollisionConfiguration: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyRigidBodyCollisionConfiguration: btSoftBodyRigidBodyCollisionConfiguration(com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyRigidBodyCollisionConfiguration: btSoftBodyRigidBodyCollisionConfiguration()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: btSoftBodySolver(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: btSoftBodySolver(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: int getSolverType()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: boolean checkInitialized()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: void optimize(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: void optimize(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: void copyBackToSoftBodies(boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: void copyBackToSoftBodies()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: void predictMotion(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: void solveConstraints(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: void updateSoftBodies()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: void processCollision(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: void processCollision(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: void setNumberOfPositionIterations(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: int getNumberOfPositionIterations()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: void setNumberOfVelocityIterations(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: int getNumberOfVelocityIterations()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver: float getTimeScale()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver$SolverTypes
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver$SolverTypes: int DEFAULT_SOLVER
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver$SolverTypes: int CPU_SOLVER
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver$SolverTypes: int CL_SOLVER
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver$SolverTypes: int CL_SIMD_SOLVER
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver$SolverTypes: int DX_SOLVER
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver$SolverTypes: int DX_SIMD_SOLVER
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver$SolverTypes: btSoftBodySolver$SolverTypes()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolverOutput
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolverOutput: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolverOutput: btSoftBodySolverOutput(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolverOutput: btSoftBodySolverOutput(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolverOutput: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolverOutput: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolverOutput)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolverOutput: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolverOutput: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolverOutput: void copySoftBodyToVertexBuffer(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback: btSoftBodyTriangleCallback(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback: btSoftBodyTriangleCallback(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback: void setTriangleCount(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback: int getTriangleCount()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback: btSoftBodyTriangleCallback(com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback: void setTimeStepAndCounters(float,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,com.badlogic.gdx.physics.bullet.collision.btManifoldResult)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback: void clearCache()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback: com.badlogic.gdx.math.Vector3 getAabbMin()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback: com.badlogic.gdx.math.Vector3 getAabbMax()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: btSoftBodyWorldInfo(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: btSoftBodyWorldInfo(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: void setAir_density(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: float getAir_density()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: void setWater_density(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: float getWater_density()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: void setWater_offset(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: float getWater_offset()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: void setMaxDisplacement(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: float getMaxDisplacement()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: void setWater_normal(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWater_normal()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: void setBroadphase(com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface getBroadphase()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: void setDispatcher(com.badlogic.gdx.physics.bullet.collision.btDispatcher)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: com.badlogic.gdx.physics.bullet.collision.btDispatcher getDispatcher()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: void setGravity(com.badlogic.gdx.physics.bullet.linearmath.btVector3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: com.badlogic.gdx.physics.bullet.linearmath.btVector3 getGravity()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: void setSparsesdf(com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3)
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3 getSparsesdf()
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo: btSoftBodyWorldInfo()
com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape
com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape: btSoftClusterCollisionShape(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape: btSoftClusterCollisionShape(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape: void setCluster(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape: com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster getCluster()
com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape: btSoftClusterCollisionShape(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster)
com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape: int getShapeType()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders: btSoftColliders(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders: btSoftColliders(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftColliders)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders: btSoftColliders()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: btSoftColliders$ClusterBase(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: btSoftColliders$ClusterBase(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: void setErp(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: float getErp()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: void setIdt(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: float getIdt()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: void setMargin(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: float getMargin()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: void setFriction(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: float getFriction()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: void setThreshold(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: float getThreshold()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: btSoftColliders$ClusterBase()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase: boolean SolveContact(com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS: btSoftColliders$CollideCL_RS(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS: btSoftColliders$CollideCL_RS(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS: void setPsb(com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS: com.badlogic.gdx.physics.bullet.softbody.btSoftBody getPsb()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS: void setColObjWrap(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper getColObjWrap()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS: void ProcessColObj(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS: btSoftColliders$CollideCL_RS()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS: btSoftColliders$CollideCL_SS(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS: btSoftColliders$CollideCL_SS(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS: void setBodies(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody getBodies()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS: void ProcessSoftSoft(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS: btSoftColliders$CollideCL_SS()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: btSoftColliders$CollideSDF_RS(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: btSoftColliders$CollideSDF_RS(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: void DoNode(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: void setPsb(com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: com.badlogic.gdx.physics.bullet.softbody.btSoftBody getPsb()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: void setColObj1Wrap(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper getColObj1Wrap()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: void setRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBody()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: void setDynmargin(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: float getDynmargin()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: void setStamargin(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: float getStamargin()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS: btSoftColliders$CollideSDF_RS()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS: btSoftColliders$CollideVF_SS(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS: btSoftColliders$CollideVF_SS(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS: void setPsb(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody getPsb()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS: void setMrg(float)
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS: float getMrg()
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS: btSoftColliders$CollideVF_SS()
com.badlogic.gdx.physics.bullet.softbody.btSoftJointBodyType
com.badlogic.gdx.physics.bullet.softbody.btSoftJointBodyType: int BT_JOINT_SOFT_BODY_CLUSTER
com.badlogic.gdx.physics.bullet.softbody.btSoftJointBodyType: int BT_JOINT_RIGID_BODY
com.badlogic.gdx.physics.bullet.softbody.btSoftJointBodyType: int BT_JOINT_COLLISION_OBJECT
com.badlogic.gdx.physics.bullet.softbody.btSoftJointBodyType: btSoftJointBodyType()
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm: btSoftRigidCollisionAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm: btSoftRigidCollisionAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm: btSoftRigidCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm$CreateFunc
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm$CreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm$CreateFunc: btSoftRigidCollisionAlgorithm$CreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm$CreateFunc: btSoftRigidCollisionAlgorithm$CreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm$CreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm$CreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm$CreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm$CreateFunc: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm$CreateFunc: btSoftRigidCollisionAlgorithm$CreateFunc()
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: btSoftRigidDynamicsWorld(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: btSoftRigidDynamicsWorld(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: btSoftRigidDynamicsWorld(com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: btSoftRigidDynamicsWorld(com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: void addSoftBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,short,short)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: void addSoftBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,short)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: void addSoftBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: void removeSoftBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBody)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: int getDrawFlags()
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: void setDrawFlags(int)
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo getWorldInfo()
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t getSoftBodyArray()
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld: void rayTestSingle(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.RayResultCallback)
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm: btSoftSoftCollisionAlgorithm(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm: btSoftSoftCollisionAlgorithm(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm)
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm: btSoftSoftCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo)
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm: btSoftSoftCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper)
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm$CreateFunc
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm$CreateFunc: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm$CreateFunc: btSoftSoftCollisionAlgorithm$CreateFunc(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm$CreateFunc: btSoftSoftCollisionAlgorithm$CreateFunc(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm$CreateFunc: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm$CreateFunc: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm$CreateFunc)
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm$CreateFunc: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm$CreateFunc: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm$CreateFunc: btSoftSoftCollisionAlgorithm$CreateFunc()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: btSparseSdf3(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: btSparseSdf3(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void setCells(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t getCells()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void setVoxelsz(float)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: float getVoxelsz()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void setPuid(int)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: int getPuid()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void setNcells(int)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: int getNcells()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void setClampCells(int)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: int getClampCells()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void setNprobes(int)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: int getNprobes()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void setNqueries(int)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: int getNqueries()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void Initialize(int,int)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void Initialize(int)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void Initialize()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void Reset()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void GarbageCollect(int)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void GarbageCollect()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: int RemoveReferences(com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: float Evaluate(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: void BuildCell(com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: float DistanceToShape(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac Decompose(float)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: float Lerp(float,float,float)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: long Hash(int,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3: btSparseSdf3()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: btSparseSdf3$Cell(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: btSparseSdf3$Cell(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: void setD(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_a_3_1__a_3_1__float)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_a_3_1__a_3_1__float getD()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: void setC(int[])
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: int[] getC()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: void setPuid(int)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: int getPuid()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: void setHash(long)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: long getHash()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: void setPclient(com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: com.badlogic.gdx.physics.bullet.collision.btCollisionShape getPclient()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: void setNext(com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell getNext()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell: btSparseSdf3$Cell()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac: btSparseSdf3$IntFrac(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac: btSparseSdf3$IntFrac(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac: void delete()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac: void setB(int)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac: int getB()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac: void setI(int)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac: int getI()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac: void setF(float)
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac: float getF()
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac: btSparseSdf3$IntFrac()
com.badlogic.gdx.physics.bullet.softbody.btTriIndex
com.badlogic.gdx.physics.bullet.softbody.btTriIndex: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btTriIndex: btTriIndex(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btTriIndex: btTriIndex(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btTriIndex: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btTriIndex: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btTriIndex)
com.badlogic.gdx.physics.bullet.softbody.btTriIndex: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btTriIndex: void delete()
com.badlogic.gdx.physics.bullet.softbody.btTriIndex: void setPartIdTriangleIndex(int)
com.badlogic.gdx.physics.bullet.softbody.btTriIndex: int getPartIdTriangleIndex()
com.badlogic.gdx.physics.bullet.softbody.btTriIndex: void setChildShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.btTriIndex: com.badlogic.gdx.physics.bullet.collision.btCollisionShape getChildShape()
com.badlogic.gdx.physics.bullet.softbody.btTriIndex: btTriIndex(int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionShape)
com.badlogic.gdx.physics.bullet.softbody.btTriIndex: int getTriangleIndex()
com.badlogic.gdx.physics.bullet.softbody.btTriIndex: int getPartId()
com.badlogic.gdx.physics.bullet.softbody.btTriIndex: int getUid()
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor: btVertexBufferDescriptor(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor: btVertexBufferDescriptor(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor)
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor: void finalize()
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor: void delete()
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor: boolean hasVertexPositions()
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor: boolean hasNormals()
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor: int getBufferType()
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor: int getVertexOffset()
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor: int getVertexStride()
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor: int getNormalOffset()
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor: int getNormalStride()
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor$BufferTypes
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor$BufferTypes: int CPU_BUFFER
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor$BufferTypes: int DX11_BUFFER
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor$BufferTypes: int OPENGL_BUFFER
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor$BufferTypes: btVertexBufferDescriptor$BufferTypes()
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags: long swigCPtr
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags: fDrawFlags(java.lang.String,long,boolean)
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags: fDrawFlags(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags: void reset(long,boolean)
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags: long getCPtr(com.badlogic.gdx.physics.bullet.softbody.fDrawFlags)
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags: void finalize()
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags: void delete()
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags: fDrawFlags()
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: int Nodes
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: int Links
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: int Faces
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: int Tetras
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: int Normals
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: int Contacts
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: int Anchors
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: int Notes
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: int Clusters
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: int NodeTree
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: int FaceTree
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: int ClusterTree
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: int Joints
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: int Std
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: int StdTetra
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_: fDrawFlags$_()
com.badlogic.gdx.scenes.scene2d.Action
com.badlogic.gdx.scenes.scene2d.Action: com.badlogic.gdx.scenes.scene2d.Actor actor
com.badlogic.gdx.scenes.scene2d.Action: com.badlogic.gdx.utils.Pool pool
com.badlogic.gdx.scenes.scene2d.Action: Action()
com.badlogic.gdx.scenes.scene2d.Action: boolean act(float)
com.badlogic.gdx.scenes.scene2d.Action: void restart()
com.badlogic.gdx.scenes.scene2d.Action: com.badlogic.gdx.scenes.scene2d.Actor getActor()
com.badlogic.gdx.scenes.scene2d.Action: void setActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Action: void reset()
com.badlogic.gdx.scenes.scene2d.Action: com.badlogic.gdx.utils.Pool getPool()
com.badlogic.gdx.scenes.scene2d.Action: void setPool(com.badlogic.gdx.utils.Pool)
com.badlogic.gdx.scenes.scene2d.Action: java.lang.String toString()
com.badlogic.gdx.scenes.scene2d.Actor
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.scenes.scene2d.Stage stage
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.scenes.scene2d.Group parent
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.utils.DelayedRemovalArray listeners
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.utils.DelayedRemovalArray captureListeners
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.utils.Array actions
com.badlogic.gdx.scenes.scene2d.Actor: java.lang.String name
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.scenes.scene2d.Touchable touchable
com.badlogic.gdx.scenes.scene2d.Actor: boolean visible
com.badlogic.gdx.scenes.scene2d.Actor: float x
com.badlogic.gdx.scenes.scene2d.Actor: float y
com.badlogic.gdx.scenes.scene2d.Actor: float width
com.badlogic.gdx.scenes.scene2d.Actor: float height
com.badlogic.gdx.scenes.scene2d.Actor: float originX
com.badlogic.gdx.scenes.scene2d.Actor: float originY
com.badlogic.gdx.scenes.scene2d.Actor: float scaleX
com.badlogic.gdx.scenes.scene2d.Actor: float scaleY
com.badlogic.gdx.scenes.scene2d.Actor: float rotation
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.scenes.scene2d.Actor: java.lang.Object userObject
com.badlogic.gdx.scenes.scene2d.Actor: Actor()
com.badlogic.gdx.scenes.scene2d.Actor: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.Actor: void act(float)
com.badlogic.gdx.scenes.scene2d.Actor: boolean fire(com.badlogic.gdx.scenes.scene2d.Event)
com.badlogic.gdx.scenes.scene2d.Actor: boolean notify(com.badlogic.gdx.scenes.scene2d.Event,boolean)
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean)
com.badlogic.gdx.scenes.scene2d.Actor: boolean remove()
com.badlogic.gdx.scenes.scene2d.Actor: boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener)
com.badlogic.gdx.scenes.scene2d.Actor: boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener)
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.utils.Array getListeners()
com.badlogic.gdx.scenes.scene2d.Actor: boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener)
com.badlogic.gdx.scenes.scene2d.Actor: boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener)
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.utils.Array getCaptureListeners()
com.badlogic.gdx.scenes.scene2d.Actor: void addAction(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.Actor: void removeAction(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.utils.Array getActions()
com.badlogic.gdx.scenes.scene2d.Actor: void clearActions()
com.badlogic.gdx.scenes.scene2d.Actor: void clearListeners()
com.badlogic.gdx.scenes.scene2d.Actor: void clear()
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.scenes.scene2d.Stage getStage()
com.badlogic.gdx.scenes.scene2d.Actor: void setStage(com.badlogic.gdx.scenes.scene2d.Stage)
com.badlogic.gdx.scenes.scene2d.Actor: boolean isDescendantOf(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Actor: boolean isAscendantOf(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Actor: boolean hasParent()
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.scenes.scene2d.Group getParent()
com.badlogic.gdx.scenes.scene2d.Actor: void setParent(com.badlogic.gdx.scenes.scene2d.Group)
com.badlogic.gdx.scenes.scene2d.Actor: boolean isTouchable()
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.scenes.scene2d.Touchable getTouchable()
com.badlogic.gdx.scenes.scene2d.Actor: void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable)
com.badlogic.gdx.scenes.scene2d.Actor: boolean isVisible()
com.badlogic.gdx.scenes.scene2d.Actor: void setVisible(boolean)
com.badlogic.gdx.scenes.scene2d.Actor: java.lang.Object getUserObject()
com.badlogic.gdx.scenes.scene2d.Actor: void setUserObject(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.Actor: float getX()
com.badlogic.gdx.scenes.scene2d.Actor: void setX(float)
com.badlogic.gdx.scenes.scene2d.Actor: float getY()
com.badlogic.gdx.scenes.scene2d.Actor: void setY(float)
com.badlogic.gdx.scenes.scene2d.Actor: void setPosition(float,float)
com.badlogic.gdx.scenes.scene2d.Actor: void setCenterPosition(float,float)
com.badlogic.gdx.scenes.scene2d.Actor: float getCenterX()
com.badlogic.gdx.scenes.scene2d.Actor: float getCenterY()
com.badlogic.gdx.scenes.scene2d.Actor: void moveBy(float,float)
com.badlogic.gdx.scenes.scene2d.Actor: float getWidth()
com.badlogic.gdx.scenes.scene2d.Actor: void setWidth(float)
com.badlogic.gdx.scenes.scene2d.Actor: float getHeight()
com.badlogic.gdx.scenes.scene2d.Actor: void setHeight(float)
com.badlogic.gdx.scenes.scene2d.Actor: float getTop()
com.badlogic.gdx.scenes.scene2d.Actor: float getRight()
com.badlogic.gdx.scenes.scene2d.Actor: void sizeChanged()
com.badlogic.gdx.scenes.scene2d.Actor: void setSize(float,float)
com.badlogic.gdx.scenes.scene2d.Actor: void sizeBy(float)
com.badlogic.gdx.scenes.scene2d.Actor: void sizeBy(float,float)
com.badlogic.gdx.scenes.scene2d.Actor: void setBounds(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.Actor: float getOriginX()
com.badlogic.gdx.scenes.scene2d.Actor: void setOriginX(float)
com.badlogic.gdx.scenes.scene2d.Actor: float getOriginY()
com.badlogic.gdx.scenes.scene2d.Actor: void setOriginY(float)
com.badlogic.gdx.scenes.scene2d.Actor: void setOrigin(float,float)
com.badlogic.gdx.scenes.scene2d.Actor: float getScaleX()
com.badlogic.gdx.scenes.scene2d.Actor: void setScaleX(float)
com.badlogic.gdx.scenes.scene2d.Actor: float getScaleY()
com.badlogic.gdx.scenes.scene2d.Actor: void setScaleY(float)
com.badlogic.gdx.scenes.scene2d.Actor: void setScale(float)
com.badlogic.gdx.scenes.scene2d.Actor: void setScale(float,float)
com.badlogic.gdx.scenes.scene2d.Actor: void scaleBy(float)
com.badlogic.gdx.scenes.scene2d.Actor: void scaleBy(float,float)
com.badlogic.gdx.scenes.scene2d.Actor: float getRotation()
com.badlogic.gdx.scenes.scene2d.Actor: void setRotation(float)
com.badlogic.gdx.scenes.scene2d.Actor: void rotateBy(float)
com.badlogic.gdx.scenes.scene2d.Actor: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.scenes.scene2d.Actor: void setColor(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.graphics.Color getColor()
com.badlogic.gdx.scenes.scene2d.Actor: java.lang.String getName()
com.badlogic.gdx.scenes.scene2d.Actor: void setName(java.lang.String)
com.badlogic.gdx.scenes.scene2d.Actor: void toFront()
com.badlogic.gdx.scenes.scene2d.Actor: void toBack()
com.badlogic.gdx.scenes.scene2d.Actor: void setZIndex(int)
com.badlogic.gdx.scenes.scene2d.Actor: int getZIndex()
com.badlogic.gdx.scenes.scene2d.Actor: boolean clipBegin()
com.badlogic.gdx.scenes.scene2d.Actor: boolean clipBegin(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.Actor: void clipEnd()
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.math.Vector2 screenToLocalCoordinates(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.math.Vector2 stageToLocalCoordinates(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.math.Vector2 localToStageCoordinates(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.math.Vector2 localToParentCoordinates(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.math.Vector2 localToAscendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Actor: com.badlogic.gdx.math.Vector2 parentToLocalCoordinates(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Actor: java.lang.String toString()
com.badlogic.gdx.scenes.scene2d.Event
com.badlogic.gdx.scenes.scene2d.Event: com.badlogic.gdx.scenes.scene2d.Stage stage
com.badlogic.gdx.scenes.scene2d.Event: com.badlogic.gdx.scenes.scene2d.Actor targetActor
com.badlogic.gdx.scenes.scene2d.Event: com.badlogic.gdx.scenes.scene2d.Actor listenerActor
com.badlogic.gdx.scenes.scene2d.Event: boolean capture
com.badlogic.gdx.scenes.scene2d.Event: boolean bubbles
com.badlogic.gdx.scenes.scene2d.Event: boolean handled
com.badlogic.gdx.scenes.scene2d.Event: boolean stopped
com.badlogic.gdx.scenes.scene2d.Event: boolean cancelled
com.badlogic.gdx.scenes.scene2d.Event: Event()
com.badlogic.gdx.scenes.scene2d.Event: void handle()
com.badlogic.gdx.scenes.scene2d.Event: void cancel()
com.badlogic.gdx.scenes.scene2d.Event: void stop()
com.badlogic.gdx.scenes.scene2d.Event: void reset()
com.badlogic.gdx.scenes.scene2d.Event: com.badlogic.gdx.scenes.scene2d.Actor getTarget()
com.badlogic.gdx.scenes.scene2d.Event: void setTarget(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Event: com.badlogic.gdx.scenes.scene2d.Actor getListenerActor()
com.badlogic.gdx.scenes.scene2d.Event: void setListenerActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Event: boolean getBubbles()
com.badlogic.gdx.scenes.scene2d.Event: void setBubbles(boolean)
com.badlogic.gdx.scenes.scene2d.Event: boolean isHandled()
com.badlogic.gdx.scenes.scene2d.Event: boolean isStopped()
com.badlogic.gdx.scenes.scene2d.Event: boolean isCancelled()
com.badlogic.gdx.scenes.scene2d.Event: void setCapture(boolean)
com.badlogic.gdx.scenes.scene2d.Event: boolean isCapture()
com.badlogic.gdx.scenes.scene2d.Event: void setStage(com.badlogic.gdx.scenes.scene2d.Stage)
com.badlogic.gdx.scenes.scene2d.Event: com.badlogic.gdx.scenes.scene2d.Stage getStage()
com.badlogic.gdx.scenes.scene2d.EventListener
com.badlogic.gdx.scenes.scene2d.EventListener: boolean handle(com.badlogic.gdx.scenes.scene2d.Event)
com.badlogic.gdx.scenes.scene2d.Group
com.badlogic.gdx.scenes.scene2d.Group: com.badlogic.gdx.utils.SnapshotArray children
com.badlogic.gdx.scenes.scene2d.Group: com.badlogic.gdx.math.Matrix3 localTransform
com.badlogic.gdx.scenes.scene2d.Group: com.badlogic.gdx.math.Matrix3 worldTransform
com.badlogic.gdx.scenes.scene2d.Group: com.badlogic.gdx.math.Matrix4 batchTransform
com.badlogic.gdx.scenes.scene2d.Group: com.badlogic.gdx.math.Matrix4 oldBatchTransform
com.badlogic.gdx.scenes.scene2d.Group: boolean transform
com.badlogic.gdx.scenes.scene2d.Group: com.badlogic.gdx.math.Rectangle cullingArea
com.badlogic.gdx.scenes.scene2d.Group: com.badlogic.gdx.math.Vector2 point
com.badlogic.gdx.scenes.scene2d.Group: Group()
com.badlogic.gdx.scenes.scene2d.Group: void act(float)
com.badlogic.gdx.scenes.scene2d.Group: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.Group: void drawChildren(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.Group: void applyTransform(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.scenes.scene2d.Group: com.badlogic.gdx.math.Matrix4 computeTransform()
com.badlogic.gdx.scenes.scene2d.Group: void resetTransform(com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.scenes.scene2d.Group: void setCullingArea(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.scenes.scene2d.Group: com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean)
com.badlogic.gdx.scenes.scene2d.Group: void childrenChanged()
com.badlogic.gdx.scenes.scene2d.Group: void addActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Group: void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Group: void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Group: void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Group: boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Group: void clearChildren()
com.badlogic.gdx.scenes.scene2d.Group: void clear()
com.badlogic.gdx.scenes.scene2d.Group: com.badlogic.gdx.scenes.scene2d.Actor findActor(java.lang.String)
com.badlogic.gdx.scenes.scene2d.Group: void setStage(com.badlogic.gdx.scenes.scene2d.Stage)
com.badlogic.gdx.scenes.scene2d.Group: boolean swapActor(int,int)
com.badlogic.gdx.scenes.scene2d.Group: boolean swapActor(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Group: com.badlogic.gdx.utils.SnapshotArray getChildren()
com.badlogic.gdx.scenes.scene2d.Group: boolean hasChildren()
com.badlogic.gdx.scenes.scene2d.Group: void setTransform(boolean)
com.badlogic.gdx.scenes.scene2d.Group: boolean isTransform()
com.badlogic.gdx.scenes.scene2d.Group: com.badlogic.gdx.math.Vector2 localToDescendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Group: void print()
com.badlogic.gdx.scenes.scene2d.Group: void print(java.lang.String)
com.badlogic.gdx.scenes.scene2d.InputEvent
com.badlogic.gdx.scenes.scene2d.InputEvent: com.badlogic.gdx.scenes.scene2d.InputEvent$Type type
com.badlogic.gdx.scenes.scene2d.InputEvent: float stageX
com.badlogic.gdx.scenes.scene2d.InputEvent: float stageY
com.badlogic.gdx.scenes.scene2d.InputEvent: int pointer
com.badlogic.gdx.scenes.scene2d.InputEvent: int button
com.badlogic.gdx.scenes.scene2d.InputEvent: int keyCode
com.badlogic.gdx.scenes.scene2d.InputEvent: int scrollAmount
com.badlogic.gdx.scenes.scene2d.InputEvent: char character
com.badlogic.gdx.scenes.scene2d.InputEvent: com.badlogic.gdx.scenes.scene2d.Actor relatedActor
com.badlogic.gdx.scenes.scene2d.InputEvent: InputEvent()
com.badlogic.gdx.scenes.scene2d.InputEvent: void reset()
com.badlogic.gdx.scenes.scene2d.InputEvent: float getStageX()
com.badlogic.gdx.scenes.scene2d.InputEvent: void setStageX(float)
com.badlogic.gdx.scenes.scene2d.InputEvent: float getStageY()
com.badlogic.gdx.scenes.scene2d.InputEvent: void setStageY(float)
com.badlogic.gdx.scenes.scene2d.InputEvent: com.badlogic.gdx.scenes.scene2d.InputEvent$Type getType()
com.badlogic.gdx.scenes.scene2d.InputEvent: void setType(com.badlogic.gdx.scenes.scene2d.InputEvent$Type)
com.badlogic.gdx.scenes.scene2d.InputEvent: int getPointer()
com.badlogic.gdx.scenes.scene2d.InputEvent: void setPointer(int)
com.badlogic.gdx.scenes.scene2d.InputEvent: int getButton()
com.badlogic.gdx.scenes.scene2d.InputEvent: void setButton(int)
com.badlogic.gdx.scenes.scene2d.InputEvent: int getKeyCode()
com.badlogic.gdx.scenes.scene2d.InputEvent: void setKeyCode(int)
com.badlogic.gdx.scenes.scene2d.InputEvent: char getCharacter()
com.badlogic.gdx.scenes.scene2d.InputEvent: void setCharacter(char)
com.badlogic.gdx.scenes.scene2d.InputEvent: int getScrollAmount()
com.badlogic.gdx.scenes.scene2d.InputEvent: void setScrollAmount(int)
com.badlogic.gdx.scenes.scene2d.InputEvent: com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor()
com.badlogic.gdx.scenes.scene2d.InputEvent: void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.InputEvent: com.badlogic.gdx.math.Vector2 toCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.InputEvent: boolean isTouchFocusCancel()
com.badlogic.gdx.scenes.scene2d.InputEvent: java.lang.String toString()
com.badlogic.gdx.scenes.scene2d.InputEvent$Type
com.badlogic.gdx.scenes.scene2d.InputEvent$Type: com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDown
com.badlogic.gdx.scenes.scene2d.InputEvent$Type: com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchUp
com.badlogic.gdx.scenes.scene2d.InputEvent$Type: com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDragged
com.badlogic.gdx.scenes.scene2d.InputEvent$Type: com.badlogic.gdx.scenes.scene2d.InputEvent$Type mouseMoved
com.badlogic.gdx.scenes.scene2d.InputEvent$Type: com.badlogic.gdx.scenes.scene2d.InputEvent$Type enter
com.badlogic.gdx.scenes.scene2d.InputEvent$Type: com.badlogic.gdx.scenes.scene2d.InputEvent$Type exit
com.badlogic.gdx.scenes.scene2d.InputEvent$Type: com.badlogic.gdx.scenes.scene2d.InputEvent$Type scrolled
com.badlogic.gdx.scenes.scene2d.InputEvent$Type: com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyDown
com.badlogic.gdx.scenes.scene2d.InputEvent$Type: com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyUp
com.badlogic.gdx.scenes.scene2d.InputEvent$Type: com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyTyped
com.badlogic.gdx.scenes.scene2d.InputEvent$Type: com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] $VALUES
com.badlogic.gdx.scenes.scene2d.InputEvent$Type: com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] values()
com.badlogic.gdx.scenes.scene2d.InputEvent$Type: com.badlogic.gdx.scenes.scene2d.InputEvent$Type valueOf(java.lang.String)
com.badlogic.gdx.scenes.scene2d.InputEvent$Type: InputEvent$Type(java.lang.String,int)
com.badlogic.gdx.scenes.scene2d.InputEvent$Type: void <clinit>()
com.badlogic.gdx.scenes.scene2d.InputListener
com.badlogic.gdx.scenes.scene2d.InputListener: com.badlogic.gdx.math.Vector2 tmpCoords
com.badlogic.gdx.scenes.scene2d.InputListener: InputListener()
com.badlogic.gdx.scenes.scene2d.InputListener: boolean handle(com.badlogic.gdx.scenes.scene2d.Event)
com.badlogic.gdx.scenes.scene2d.InputListener: boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.InputListener: void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.InputListener: void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.InputListener: boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float)
com.badlogic.gdx.scenes.scene2d.InputListener: void enter(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.InputListener: void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.InputListener: boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.InputListener: boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int)
com.badlogic.gdx.scenes.scene2d.InputListener: boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int)
com.badlogic.gdx.scenes.scene2d.InputListener: boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char)
com.badlogic.gdx.scenes.scene2d.InputListener: void <clinit>()
com.badlogic.gdx.scenes.scene2d.InputListener$1
com.badlogic.gdx.scenes.scene2d.InputListener$1: int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type
com.badlogic.gdx.scenes.scene2d.InputListener$1: void <clinit>()
com.badlogic.gdx.scenes.scene2d.Stage
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.math.Vector2 actorCoords
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.utils.viewport.Viewport viewport
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.graphics.g2d.Batch batch
com.badlogic.gdx.scenes.scene2d.Stage: boolean ownsBatch
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.scenes.scene2d.Group root
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.math.Vector2 stageCoords
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.scenes.scene2d.Actor[] pointerOverActors
com.badlogic.gdx.scenes.scene2d.Stage: boolean[] pointerTouched
com.badlogic.gdx.scenes.scene2d.Stage: int[] pointerScreenX
com.badlogic.gdx.scenes.scene2d.Stage: int[] pointerScreenY
com.badlogic.gdx.scenes.scene2d.Stage: int mouseScreenX
com.badlogic.gdx.scenes.scene2d.Stage: int mouseScreenY
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.scenes.scene2d.Actor mouseOverActor
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.scenes.scene2d.Actor keyboardFocus
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.scenes.scene2d.Actor scrollFocus
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.utils.SnapshotArray touchFocuses
com.badlogic.gdx.scenes.scene2d.Stage: Stage()
com.badlogic.gdx.scenes.scene2d.Stage: Stage(com.badlogic.gdx.utils.viewport.Viewport)
com.badlogic.gdx.scenes.scene2d.Stage: Stage(com.badlogic.gdx.utils.viewport.Viewport,com.badlogic.gdx.graphics.g2d.Batch)
com.badlogic.gdx.scenes.scene2d.Stage: void draw()
com.badlogic.gdx.scenes.scene2d.Stage: void act()
com.badlogic.gdx.scenes.scene2d.Stage: void act(float)
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.scenes.scene2d.Actor fireEnterAndExit(com.badlogic.gdx.scenes.scene2d.Actor,int,int,int)
com.badlogic.gdx.scenes.scene2d.Stage: boolean touchDown(int,int,int,int)
com.badlogic.gdx.scenes.scene2d.Stage: boolean touchDragged(int,int,int)
com.badlogic.gdx.scenes.scene2d.Stage: boolean touchUp(int,int,int,int)
com.badlogic.gdx.scenes.scene2d.Stage: boolean mouseMoved(int,int)
com.badlogic.gdx.scenes.scene2d.Stage: boolean scrolled(int)
com.badlogic.gdx.scenes.scene2d.Stage: boolean keyDown(int)
com.badlogic.gdx.scenes.scene2d.Stage: boolean keyUp(int)
com.badlogic.gdx.scenes.scene2d.Stage: boolean keyTyped(char)
com.badlogic.gdx.scenes.scene2d.Stage: void addTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int)
com.badlogic.gdx.scenes.scene2d.Stage: void removeTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int)
com.badlogic.gdx.scenes.scene2d.Stage: void cancelTouchFocus()
com.badlogic.gdx.scenes.scene2d.Stage: void cancelTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Stage: void addActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Stage: void addAction(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.utils.Array getActors()
com.badlogic.gdx.scenes.scene2d.Stage: boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener)
com.badlogic.gdx.scenes.scene2d.Stage: boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener)
com.badlogic.gdx.scenes.scene2d.Stage: boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener)
com.badlogic.gdx.scenes.scene2d.Stage: boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener)
com.badlogic.gdx.scenes.scene2d.Stage: void clear()
com.badlogic.gdx.scenes.scene2d.Stage: void unfocusAll()
com.badlogic.gdx.scenes.scene2d.Stage: void unfocus(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Stage: void setKeyboardFocus(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.scenes.scene2d.Actor getKeyboardFocus()
com.badlogic.gdx.scenes.scene2d.Stage: void setScrollFocus(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.scenes.scene2d.Actor getScrollFocus()
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.graphics.g2d.Batch getSpriteBatch()
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.graphics.g2d.Batch getBatch()
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.utils.viewport.Viewport getViewport()
com.badlogic.gdx.scenes.scene2d.Stage: void setViewport(com.badlogic.gdx.utils.viewport.Viewport)
com.badlogic.gdx.scenes.scene2d.Stage: float getWidth()
com.badlogic.gdx.scenes.scene2d.Stage: float getHeight()
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.graphics.Camera getCamera()
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.scenes.scene2d.Group getRoot()
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean)
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.math.Vector2 screenToStageCoordinates(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.math.Vector2 stageToScreenCoordinates(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.Stage: com.badlogic.gdx.math.Vector2 toScreenCoordinates(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.scenes.scene2d.Stage: void calculateScissors(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.scenes.scene2d.Stage: void dispose()
com.badlogic.gdx.scenes.scene2d.Stage: void <clinit>()
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus: com.badlogic.gdx.scenes.scene2d.EventListener listener
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus: com.badlogic.gdx.scenes.scene2d.Actor listenerActor
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus: com.badlogic.gdx.scenes.scene2d.Actor target
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus: int pointer
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus: int button
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus: Stage$TouchFocus()
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus: void reset()
com.badlogic.gdx.scenes.scene2d.Touchable
com.badlogic.gdx.scenes.scene2d.Touchable: com.badlogic.gdx.scenes.scene2d.Touchable enabled
com.badlogic.gdx.scenes.scene2d.Touchable: com.badlogic.gdx.scenes.scene2d.Touchable disabled
com.badlogic.gdx.scenes.scene2d.Touchable: com.badlogic.gdx.scenes.scene2d.Touchable childrenOnly
com.badlogic.gdx.scenes.scene2d.Touchable: com.badlogic.gdx.scenes.scene2d.Touchable[] $VALUES
com.badlogic.gdx.scenes.scene2d.Touchable: com.badlogic.gdx.scenes.scene2d.Touchable[] values()
com.badlogic.gdx.scenes.scene2d.Touchable: com.badlogic.gdx.scenes.scene2d.Touchable valueOf(java.lang.String)
com.badlogic.gdx.scenes.scene2d.Touchable: Touchable(java.lang.String,int)
com.badlogic.gdx.scenes.scene2d.Touchable: void <clinit>()
com.badlogic.gdx.scenes.scene2d.actions.Actions
com.badlogic.gdx.scenes.scene2d.actions.Actions: Actions()
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.Action action(java.lang.Class)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.AddAction addAction(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.AddAction addAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.RemoveAction removeAction(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.RemoveAction removeAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.VisibleAction show()
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.VisibleAction hide()
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.VisibleAction visible(boolean)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.TouchableAction touchable(com.badlogic.gdx.scenes.scene2d.Touchable)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor()
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction timeScale(float,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action[])
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence()
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action[])
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel()
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.RepeatAction repeat(int,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.RepeatAction forever(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.RunnableAction run(java.lang.Runnable)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.LayoutAction layout(boolean)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.AfterAction after(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction addListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction addListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction removeListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean)
com.badlogic.gdx.scenes.scene2d.actions.Actions: com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction removeListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.AddAction
com.badlogic.gdx.scenes.scene2d.actions.AddAction: com.badlogic.gdx.scenes.scene2d.Actor targetActor
com.badlogic.gdx.scenes.scene2d.actions.AddAction: com.badlogic.gdx.scenes.scene2d.Action action
com.badlogic.gdx.scenes.scene2d.actions.AddAction: AddAction()
com.badlogic.gdx.scenes.scene2d.actions.AddAction: boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.AddAction: com.badlogic.gdx.scenes.scene2d.Actor getTargetActor()
com.badlogic.gdx.scenes.scene2d.actions.AddAction: void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.AddAction: com.badlogic.gdx.scenes.scene2d.Action getAction()
com.badlogic.gdx.scenes.scene2d.actions.AddAction: void setAction(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.AddAction: void restart()
com.badlogic.gdx.scenes.scene2d.actions.AddAction: void reset()
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction: com.badlogic.gdx.scenes.scene2d.Actor targetActor
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction: com.badlogic.gdx.scenes.scene2d.EventListener listener
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction: boolean capture
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction: AddListenerAction()
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction: boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction: com.badlogic.gdx.scenes.scene2d.Actor getTargetActor()
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction: void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction: com.badlogic.gdx.scenes.scene2d.EventListener getListener()
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction: void setListener(com.badlogic.gdx.scenes.scene2d.EventListener)
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction: boolean getCapture()
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction: void setCapture(boolean)
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction: void reset()
com.badlogic.gdx.scenes.scene2d.actions.AfterAction
com.badlogic.gdx.scenes.scene2d.actions.AfterAction: com.badlogic.gdx.utils.Array waitForActions
com.badlogic.gdx.scenes.scene2d.actions.AfterAction: AfterAction()
com.badlogic.gdx.scenes.scene2d.actions.AfterAction: void setActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.AfterAction: void restart()
com.badlogic.gdx.scenes.scene2d.actions.AfterAction: boolean delegate(float)
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction: float start
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction: float end
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction: com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction: AlphaAction()
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction: void begin()
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction: void update(float)
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction: void reset()
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction: com.badlogic.gdx.graphics.Color getColor()
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction: float getAlpha()
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction: void setAlpha(float)
com.badlogic.gdx.scenes.scene2d.actions.ColorAction
com.badlogic.gdx.scenes.scene2d.actions.ColorAction: float startR
com.badlogic.gdx.scenes.scene2d.actions.ColorAction: float startG
com.badlogic.gdx.scenes.scene2d.actions.ColorAction: float startB
com.badlogic.gdx.scenes.scene2d.actions.ColorAction: float startA
com.badlogic.gdx.scenes.scene2d.actions.ColorAction: com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.scenes.scene2d.actions.ColorAction: com.badlogic.gdx.graphics.Color end
com.badlogic.gdx.scenes.scene2d.actions.ColorAction: ColorAction()
com.badlogic.gdx.scenes.scene2d.actions.ColorAction: void begin()
com.badlogic.gdx.scenes.scene2d.actions.ColorAction: void update(float)
com.badlogic.gdx.scenes.scene2d.actions.ColorAction: void reset()
com.badlogic.gdx.scenes.scene2d.actions.ColorAction: com.badlogic.gdx.graphics.Color getColor()
com.badlogic.gdx.scenes.scene2d.actions.ColorAction: void setColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.scenes.scene2d.actions.ColorAction: com.badlogic.gdx.graphics.Color getEndColor()
com.badlogic.gdx.scenes.scene2d.actions.ColorAction: void setEndColor(com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction
com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction: int count
com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction: int current
com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction: CountdownEventAction(java.lang.Class,int)
com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction: boolean handle(com.badlogic.gdx.scenes.scene2d.Event)
com.badlogic.gdx.scenes.scene2d.actions.DelayAction
com.badlogic.gdx.scenes.scene2d.actions.DelayAction: float duration
com.badlogic.gdx.scenes.scene2d.actions.DelayAction: float time
com.badlogic.gdx.scenes.scene2d.actions.DelayAction: DelayAction()
com.badlogic.gdx.scenes.scene2d.actions.DelayAction: DelayAction(float)
com.badlogic.gdx.scenes.scene2d.actions.DelayAction: boolean delegate(float)
com.badlogic.gdx.scenes.scene2d.actions.DelayAction: void finish()
com.badlogic.gdx.scenes.scene2d.actions.DelayAction: void restart()
com.badlogic.gdx.scenes.scene2d.actions.DelayAction: float getTime()
com.badlogic.gdx.scenes.scene2d.actions.DelayAction: void setTime(float)
com.badlogic.gdx.scenes.scene2d.actions.DelayAction: float getDuration()
com.badlogic.gdx.scenes.scene2d.actions.DelayAction: void setDuration(float)
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction: com.badlogic.gdx.scenes.scene2d.Action action
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction: DelegateAction()
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction: void setAction(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction: com.badlogic.gdx.scenes.scene2d.Action getAction()
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction: boolean delegate(float)
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction: boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction: void restart()
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction: void reset()
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction: void setActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction: java.lang.String toString()
com.badlogic.gdx.scenes.scene2d.actions.EventAction
com.badlogic.gdx.scenes.scene2d.actions.EventAction: java.lang.Class eventClass
com.badlogic.gdx.scenes.scene2d.actions.EventAction: boolean result
com.badlogic.gdx.scenes.scene2d.actions.EventAction: boolean active
com.badlogic.gdx.scenes.scene2d.actions.EventAction: com.badlogic.gdx.scenes.scene2d.EventListener listener
com.badlogic.gdx.scenes.scene2d.actions.EventAction: EventAction(java.lang.Class)
com.badlogic.gdx.scenes.scene2d.actions.EventAction: void restart()
com.badlogic.gdx.scenes.scene2d.actions.EventAction: void setActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.EventAction: boolean handle(com.badlogic.gdx.scenes.scene2d.Event)
com.badlogic.gdx.scenes.scene2d.actions.EventAction: boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.EventAction: boolean isActive()
com.badlogic.gdx.scenes.scene2d.actions.EventAction: void setActive(boolean)
com.badlogic.gdx.scenes.scene2d.actions.EventAction$1
com.badlogic.gdx.scenes.scene2d.actions.EventAction$1: com.badlogic.gdx.scenes.scene2d.actions.EventAction this$0
com.badlogic.gdx.scenes.scene2d.actions.EventAction$1: EventAction$1(com.badlogic.gdx.scenes.scene2d.actions.EventAction)
com.badlogic.gdx.scenes.scene2d.actions.EventAction$1: boolean handle(com.badlogic.gdx.scenes.scene2d.Event)
com.badlogic.gdx.scenes.scene2d.actions.FloatAction
com.badlogic.gdx.scenes.scene2d.actions.FloatAction: float start
com.badlogic.gdx.scenes.scene2d.actions.FloatAction: float end
com.badlogic.gdx.scenes.scene2d.actions.FloatAction: float value
com.badlogic.gdx.scenes.scene2d.actions.FloatAction: FloatAction()
com.badlogic.gdx.scenes.scene2d.actions.FloatAction: FloatAction(float,float)
com.badlogic.gdx.scenes.scene2d.actions.FloatAction: void begin()
com.badlogic.gdx.scenes.scene2d.actions.FloatAction: void update(float)
com.badlogic.gdx.scenes.scene2d.actions.FloatAction: float getValue()
com.badlogic.gdx.scenes.scene2d.actions.FloatAction: void setValue(float)
com.badlogic.gdx.scenes.scene2d.actions.FloatAction: float getStart()
com.badlogic.gdx.scenes.scene2d.actions.FloatAction: void setStart(float)
com.badlogic.gdx.scenes.scene2d.actions.FloatAction: float getEnd()
com.badlogic.gdx.scenes.scene2d.actions.FloatAction: void setEnd(float)
com.badlogic.gdx.scenes.scene2d.actions.IntAction
com.badlogic.gdx.scenes.scene2d.actions.IntAction: int start
com.badlogic.gdx.scenes.scene2d.actions.IntAction: int end
com.badlogic.gdx.scenes.scene2d.actions.IntAction: int value
com.badlogic.gdx.scenes.scene2d.actions.IntAction: IntAction()
com.badlogic.gdx.scenes.scene2d.actions.IntAction: IntAction(int,int)
com.badlogic.gdx.scenes.scene2d.actions.IntAction: void begin()
com.badlogic.gdx.scenes.scene2d.actions.IntAction: void update(float)
com.badlogic.gdx.scenes.scene2d.actions.IntAction: int getValue()
com.badlogic.gdx.scenes.scene2d.actions.IntAction: void setValue(int)
com.badlogic.gdx.scenes.scene2d.actions.IntAction: int getStart()
com.badlogic.gdx.scenes.scene2d.actions.IntAction: void setStart(int)
com.badlogic.gdx.scenes.scene2d.actions.IntAction: int getEnd()
com.badlogic.gdx.scenes.scene2d.actions.IntAction: void setEnd(int)
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction: boolean enabled
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction: LayoutAction()
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction: void setActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction: boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction: boolean isEnabled()
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction: void setLayoutEnabled(boolean)
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction: float amountX
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction: float amountY
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction: MoveByAction()
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction: void updateRelative(float)
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction: void setAmount(float,float)
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction: float getAmountX()
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction: void setAmountX(float)
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction: float getAmountY()
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction: void setAmountY(float)
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction: float startX
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction: float startY
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction: float endX
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction: float endY
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction: MoveToAction()
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction: void begin()
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction: void update(float)
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction: void setPosition(float,float)
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction: float getX()
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction: void setX(float)
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction: float getY()
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction: void setY(float)
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction: com.badlogic.gdx.utils.Array actions
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction: boolean complete
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction: ParallelAction()
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction: ParallelAction(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction: ParallelAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction: ParallelAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction: ParallelAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction: ParallelAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction: boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction: void restart()
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction: void reset()
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction: void addAction(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction: void setActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction: com.badlogic.gdx.utils.Array getActions()
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction: java.lang.String toString()
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction: float lastPercent
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction: RelativeTemporalAction()
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction: void begin()
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction: void update(float)
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction: void updateRelative(float)
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction: com.badlogic.gdx.scenes.scene2d.Actor targetActor
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction: com.badlogic.gdx.scenes.scene2d.Action action
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction: RemoveAction()
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction: boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction: com.badlogic.gdx.scenes.scene2d.Actor getTargetActor()
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction: void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction: com.badlogic.gdx.scenes.scene2d.Action getAction()
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction: void setAction(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction: void reset()
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction: com.badlogic.gdx.scenes.scene2d.Actor removeActor
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction: boolean removed
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction: RemoveActorAction()
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction: boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction: void restart()
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction: void reset()
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction: com.badlogic.gdx.scenes.scene2d.Actor getRemoveActor()
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction: void setRemoveActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction: com.badlogic.gdx.scenes.scene2d.Actor targetActor
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction: com.badlogic.gdx.scenes.scene2d.EventListener listener
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction: boolean capture
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction: RemoveListenerAction()
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction: boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction: com.badlogic.gdx.scenes.scene2d.Actor getTargetActor()
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction: void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction: com.badlogic.gdx.scenes.scene2d.EventListener getListener()
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction: void setListener(com.badlogic.gdx.scenes.scene2d.EventListener)
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction: boolean getCapture()
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction: void setCapture(boolean)
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction: void reset()
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction: int FOREVER
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction: int repeatCount
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction: int executedCount
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction: boolean finished
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction: RepeatAction()
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction: boolean delegate(float)
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction: void finish()
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction: void restart()
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction: void setCount(int)
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction: int getCount()
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction: float amount
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction: RotateByAction()
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction: void updateRelative(float)
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction: float getAmount()
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction: void setAmount(float)
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction: float start
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction: float end
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction: RotateToAction()
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction: void begin()
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction: void update(float)
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction: float getRotation()
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction: void setRotation(float)
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: java.lang.Runnable runnable
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: boolean ran
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: RunnableAction()
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: void run()
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: void restart()
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: void reset()
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: java.lang.Runnable getRunnable()
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction: void setRunnable(java.lang.Runnable)
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction: float amountX
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction: float amountY
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction: ScaleByAction()
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction: void updateRelative(float)
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction: void setAmount(float,float)
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction: void setAmount(float)
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction: float getAmountX()
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction: void setAmountX(float)
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction: float getAmountY()
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction: void setAmountY(float)
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction: float startX
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction: float startY
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction: float endX
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction: float endY
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction: ScaleToAction()
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction: void begin()
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction: void update(float)
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction: void setScale(float,float)
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction: void setScale(float)
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction: float getX()
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction: void setX(float)
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction: float getY()
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction: void setY(float)
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction: int index
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction: SequenceAction()
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction: SequenceAction(com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction: SequenceAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction: SequenceAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction: SequenceAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction: SequenceAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action)
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction: boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction: void restart()
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction: float amountWidth
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction: float amountHeight
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction: SizeByAction()
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction: void updateRelative(float)
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction: void setAmount(float,float)
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction: float getAmountWidth()
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction: void setAmountWidth(float)
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction: float getAmountHeight()
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction: void setAmountHeight(float)
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction: float startWidth
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction: float startHeight
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction: float endWidth
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction: float endHeight
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction: SizeToAction()
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction: void begin()
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction: void update(float)
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction: void setSize(float,float)
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction: float getWidth()
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction: void setWidth(float)
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction: float getHeight()
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction: void setHeight(float)
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: float duration
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: float time
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: com.badlogic.gdx.math.Interpolation interpolation
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: boolean reverse
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: boolean began
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: boolean complete
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: TemporalAction()
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: TemporalAction(float)
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: TemporalAction(float,com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: void begin()
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: void end()
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: void update(float)
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: void finish()
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: void restart()
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: void reset()
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: float getTime()
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: void setTime(float)
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: float getDuration()
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: void setDuration(float)
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: com.badlogic.gdx.math.Interpolation getInterpolation()
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: void setInterpolation(com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: boolean isReverse()
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction: void setReverse(boolean)
com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction
com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction: float scale
com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction: TimeScaleAction()
com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction: boolean delegate(float)
com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction: float getScale()
com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction: void setScale(float)
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction: com.badlogic.gdx.scenes.scene2d.Touchable touchable
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction: TouchableAction()
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction: boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction: com.badlogic.gdx.scenes.scene2d.Touchable getTouchable()
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction: void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable)
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction: boolean visible
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction: VisibleAction()
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction: boolean act(float)
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction: boolean isVisible()
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction: void setVisible(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Button
com.badlogic.gdx.scenes.scene2d.ui.Button: com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle style
com.badlogic.gdx.scenes.scene2d.ui.Button: boolean isChecked
com.badlogic.gdx.scenes.scene2d.ui.Button: boolean isDisabled
com.badlogic.gdx.scenes.scene2d.ui.Button: com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup buttonGroup
com.badlogic.gdx.scenes.scene2d.ui.Button: com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener
com.badlogic.gdx.scenes.scene2d.ui.Button: Button(com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.Button: Button(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Button: Button(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Button: Button(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.Button: Button(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.Button: Button()
com.badlogic.gdx.scenes.scene2d.ui.Button: void initialize()
com.badlogic.gdx.scenes.scene2d.ui.Button: Button(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Button: Button(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Button: Button(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Button: Button(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.Button: void setChecked(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Button: void toggle()
com.badlogic.gdx.scenes.scene2d.ui.Button: boolean isChecked()
com.badlogic.gdx.scenes.scene2d.ui.Button: boolean isPressed()
com.badlogic.gdx.scenes.scene2d.ui.Button: boolean isOver()
com.badlogic.gdx.scenes.scene2d.ui.Button: com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener()
com.badlogic.gdx.scenes.scene2d.ui.Button: boolean isDisabled()
com.badlogic.gdx.scenes.scene2d.ui.Button: void setDisabled(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Button: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.Button: com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.Button: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.Button: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.Button: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.Button: float getMinWidth()
com.badlogic.gdx.scenes.scene2d.ui.Button: float getMinHeight()
com.badlogic.gdx.scenes.scene2d.ui.Button$1
com.badlogic.gdx.scenes.scene2d.ui.Button$1: com.badlogic.gdx.scenes.scene2d.ui.Button this$0
com.badlogic.gdx.scenes.scene2d.ui.Button$1: Button$1(com.badlogic.gdx.scenes.scene2d.ui.Button)
com.badlogic.gdx.scenes.scene2d.ui.Button$1: void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable up
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable down
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable over
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable checked
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable checkedOver
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable disabled
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle: float pressedOffsetX
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle: float pressedOffsetY
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle: float unpressedOffsetX
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle: float unpressedOffsetY
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle: Button$ButtonStyle()
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle: Button$ButtonStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle: Button$ButtonStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: com.badlogic.gdx.utils.Array buttons
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: com.badlogic.gdx.utils.Array checkedButtons
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: int minCheckCount
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: int maxCheckCount
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: boolean uncheckLast
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: com.badlogic.gdx.scenes.scene2d.ui.Button lastChecked
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: ButtonGroup()
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: ButtonGroup(com.badlogic.gdx.scenes.scene2d.ui.Button[])
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: void add(com.badlogic.gdx.scenes.scene2d.ui.Button)
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: void add(com.badlogic.gdx.scenes.scene2d.ui.Button[])
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: void remove(com.badlogic.gdx.scenes.scene2d.ui.Button)
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: void remove(com.badlogic.gdx.scenes.scene2d.ui.Button[])
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: void setChecked(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: boolean canCheck(com.badlogic.gdx.scenes.scene2d.ui.Button,boolean)
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: void uncheckAll()
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: com.badlogic.gdx.scenes.scene2d.ui.Button getChecked()
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: com.badlogic.gdx.utils.Array getAllChecked()
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: com.badlogic.gdx.utils.Array getButtons()
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: void setMinCheckCount(int)
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: void setMaxCheckCount(int)
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup: void setUncheckLast(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Cell
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value minWidth
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value minHeight
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value prefWidth
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value prefHeight
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value maxWidth
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value maxHeight
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value spaceTop
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value spaceLeft
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value spaceBottom
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value spaceRight
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value padTop
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value padLeft
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value padBottom
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value padRight
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Float fillX
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Float fillY
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Integer align
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Integer expandX
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Integer expandY
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Integer colspan
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Boolean uniformX
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Boolean uniformY
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.Actor actor
com.badlogic.gdx.scenes.scene2d.ui.Cell: float actorX
com.badlogic.gdx.scenes.scene2d.ui.Cell: float actorY
com.badlogic.gdx.scenes.scene2d.ui.Cell: float actorWidth
com.badlogic.gdx.scenes.scene2d.ui.Cell: float actorHeight
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Table table
com.badlogic.gdx.scenes.scene2d.ui.Cell: boolean endRow
com.badlogic.gdx.scenes.scene2d.ui.Cell: int column
com.badlogic.gdx.scenes.scene2d.ui.Cell: int row
com.badlogic.gdx.scenes.scene2d.ui.Cell: int cellAboveIndex
com.badlogic.gdx.scenes.scene2d.ui.Cell: float computedPadTop
com.badlogic.gdx.scenes.scene2d.ui.Cell: float computedPadLeft
com.badlogic.gdx.scenes.scene2d.ui.Cell: float computedPadBottom
com.badlogic.gdx.scenes.scene2d.ui.Cell: float computedPadRight
com.badlogic.gdx.scenes.scene2d.ui.Cell: Cell()
com.badlogic.gdx.scenes.scene2d.ui.Cell: void setLayout(com.badlogic.gdx.scenes.scene2d.ui.Table)
com.badlogic.gdx.scenes.scene2d.ui.Cell: void set(com.badlogic.gdx.scenes.scene2d.ui.Cell)
com.badlogic.gdx.scenes.scene2d.ui.Cell: void merge(com.badlogic.gdx.scenes.scene2d.ui.Cell)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell setActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.Actor getActor()
com.badlogic.gdx.scenes.scene2d.ui.Cell: boolean hasActor()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell size(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell size(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell size(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell size(float,float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell width(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell width(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell height(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell height(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell minWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell minHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(float,float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell minWidth(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell minHeight(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell prefWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell prefHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(float,float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell prefWidth(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell prefHeight(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell maxWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell maxHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(float,float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell maxWidth(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell maxHeight(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell space(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell space(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell spaceTop(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell spaceLeft(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell spaceBottom(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell spaceRight(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell space(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell space(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell spaceTop(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell spaceLeft(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell spaceBottom(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell spaceRight(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell pad(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell padTop(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell padRight(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell pad(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell pad(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell padTop(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell padLeft(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell padBottom(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell padRight(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell fill()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell fillX()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell fillY()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell fill(java.lang.Float,java.lang.Float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell fill(boolean,boolean)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell fill(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell align(java.lang.Integer)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell center()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell top()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell left()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell bottom()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell right()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell expand()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell expandX()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell expandY()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell expand(java.lang.Integer,java.lang.Integer)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell expand(boolean,boolean)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell colspan(java.lang.Integer)
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell uniform()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell uniformX()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell uniformY()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell uniform(java.lang.Boolean,java.lang.Boolean)
com.badlogic.gdx.scenes.scene2d.ui.Cell: void setActorBounds(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getActorX()
com.badlogic.gdx.scenes.scene2d.ui.Cell: void setActorX(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getActorY()
com.badlogic.gdx.scenes.scene2d.ui.Cell: void setActorY(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getActorWidth()
com.badlogic.gdx.scenes.scene2d.ui.Cell: void setActorWidth(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getActorHeight()
com.badlogic.gdx.scenes.scene2d.ui.Cell: void setActorHeight(float)
com.badlogic.gdx.scenes.scene2d.ui.Cell: int getColumn()
com.badlogic.gdx.scenes.scene2d.ui.Cell: int getRow()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value getMinWidthValue()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getMinWidth()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value getMinHeightValue()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getMinHeight()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value getPrefWidthValue()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value getPrefHeightValue()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value getMaxWidthValue()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getMaxWidth()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value getMaxHeightValue()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getMaxHeight()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceTopValue()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getSpaceTop()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceLeftValue()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getSpaceLeft()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceBottomValue()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getSpaceBottom()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceRightValue()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getSpaceRight()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value getPadTopValue()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getPadTop()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value getPadLeftValue()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getPadLeft()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value getPadBottomValue()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getPadBottom()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Value getPadRightValue()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getPadRight()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getPadX()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getPadY()
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Float getFillX()
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Float getFillY()
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Integer getAlign()
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Integer getExpandX()
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Integer getExpandY()
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Integer getColspan()
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Boolean getUniformX()
com.badlogic.gdx.scenes.scene2d.ui.Cell: java.lang.Boolean getUniformY()
com.badlogic.gdx.scenes.scene2d.ui.Cell: boolean isEndRow()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getComputedPadTop()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getComputedPadLeft()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getComputedPadBottom()
com.badlogic.gdx.scenes.scene2d.ui.Cell: float getComputedPadRight()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Cell row()
com.badlogic.gdx.scenes.scene2d.ui.Cell: com.badlogic.gdx.scenes.scene2d.ui.Table getTable()
com.badlogic.gdx.scenes.scene2d.ui.Cell: void clear()
com.badlogic.gdx.scenes.scene2d.ui.Cell: void reset()
com.badlogic.gdx.scenes.scene2d.ui.Cell: void defaults()
com.badlogic.gdx.scenes.scene2d.ui.CheckBox
com.badlogic.gdx.scenes.scene2d.ui.CheckBox: com.badlogic.gdx.scenes.scene2d.ui.Image image
com.badlogic.gdx.scenes.scene2d.ui.CheckBox: com.badlogic.gdx.scenes.scene2d.ui.Cell imageCell
com.badlogic.gdx.scenes.scene2d.ui.CheckBox: com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle style
com.badlogic.gdx.scenes.scene2d.ui.CheckBox: CheckBox(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.CheckBox: CheckBox(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.CheckBox: CheckBox(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle)
com.badlogic.gdx.scenes.scene2d.ui.CheckBox: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.CheckBox: com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.CheckBox: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.CheckBox: com.badlogic.gdx.scenes.scene2d.ui.Image getImage()
com.badlogic.gdx.scenes.scene2d.ui.CheckBox: com.badlogic.gdx.scenes.scene2d.ui.Cell getImageCell()
com.badlogic.gdx.scenes.scene2d.ui.CheckBox: com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.CheckBox: com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOn
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOff
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOver
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOnDisabled
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOffDisabled
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle: CheckBox$CheckBoxStyle()
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle: CheckBox$CheckBoxStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle: CheckBox$CheckBoxStyle(com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle)
com.badlogic.gdx.scenes.scene2d.ui.Container
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.Actor actor
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value minWidth
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value minHeight
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value prefWidth
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value prefHeight
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value maxWidth
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value maxHeight
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value padTop
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value padLeft
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value padBottom
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value padRight
com.badlogic.gdx.scenes.scene2d.ui.Container: float fillX
com.badlogic.gdx.scenes.scene2d.ui.Container: float fillY
com.badlogic.gdx.scenes.scene2d.ui.Container: int align
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.utils.Drawable background
com.badlogic.gdx.scenes.scene2d.ui.Container: boolean clip
com.badlogic.gdx.scenes.scene2d.ui.Container: boolean round
com.badlogic.gdx.scenes.scene2d.ui.Container: Container()
com.badlogic.gdx.scenes.scene2d.ui.Container: Container(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Container: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.Container: void drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Container: void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Container: void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable,boolean)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container background(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.utils.Drawable getBackground()
com.badlogic.gdx.scenes.scene2d.ui.Container: void layout()
com.badlogic.gdx.scenes.scene2d.ui.Container: void setActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.Actor getActor()
com.badlogic.gdx.scenes.scene2d.ui.Container: void addActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Container: void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Container: void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Container: void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Container: boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container size(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container size(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container size(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container size(float,float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container width(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container width(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container height(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container height(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container minSize(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container minSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container minWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container minHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container minSize(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container minSize(float,float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container minWidth(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container minHeight(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container prefWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container prefHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(float,float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container prefWidth(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container prefHeight(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container maxWidth(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container maxHeight(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(float,float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container maxWidth(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container maxHeight(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container pad(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container padTop(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container padRight(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container pad(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container pad(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container padTop(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container padLeft(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container padBottom(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container padRight(float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container fill()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container fillX()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container fillY()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container fill(float,float)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container fill(boolean,boolean)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container fill(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container align(int)
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container center()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container top()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container left()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container bottom()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Container right()
com.badlogic.gdx.scenes.scene2d.ui.Container: float getMinWidth()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value getMinHeightValue()
com.badlogic.gdx.scenes.scene2d.ui.Container: float getMinHeight()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value getPrefWidthValue()
com.badlogic.gdx.scenes.scene2d.ui.Container: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value getPrefHeightValue()
com.badlogic.gdx.scenes.scene2d.ui.Container: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value getMaxWidthValue()
com.badlogic.gdx.scenes.scene2d.ui.Container: float getMaxWidth()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value getMaxHeightValue()
com.badlogic.gdx.scenes.scene2d.ui.Container: float getMaxHeight()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value getPadTopValue()
com.badlogic.gdx.scenes.scene2d.ui.Container: float getPadTop()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value getPadLeftValue()
com.badlogic.gdx.scenes.scene2d.ui.Container: float getPadLeft()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value getPadBottomValue()
com.badlogic.gdx.scenes.scene2d.ui.Container: float getPadBottom()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.ui.Value getPadRightValue()
com.badlogic.gdx.scenes.scene2d.ui.Container: float getPadRight()
com.badlogic.gdx.scenes.scene2d.ui.Container: float getPadX()
com.badlogic.gdx.scenes.scene2d.ui.Container: float getPadY()
com.badlogic.gdx.scenes.scene2d.ui.Container: float getFillX()
com.badlogic.gdx.scenes.scene2d.ui.Container: float getFillY()
com.badlogic.gdx.scenes.scene2d.ui.Container: int getAlign()
com.badlogic.gdx.scenes.scene2d.ui.Container: void setRound(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Container: void setClip(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Container: boolean getClip()
com.badlogic.gdx.scenes.scene2d.ui.Container: com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean)
com.badlogic.gdx.scenes.scene2d.ui.Dialog
com.badlogic.gdx.scenes.scene2d.ui.Dialog: float fadeDuration
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.ui.Table contentTable
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.ui.Table buttonTable
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.ui.Skin skin
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.utils.ObjectMap values
com.badlogic.gdx.scenes.scene2d.ui.Dialog: boolean cancelHide
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.Actor previousKeyboardFocus
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.Actor previousScrollFocus
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.InputListener ignoreTouchDown
com.badlogic.gdx.scenes.scene2d.ui.Dialog: Dialog(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.Dialog: Dialog(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Dialog: Dialog(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle)
com.badlogic.gdx.scenes.scene2d.ui.Dialog: void initialize()
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.ui.Table getContentTable()
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.ui.Table getButtonTable()
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle)
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.ui.Dialog text(com.badlogic.gdx.scenes.scene2d.ui.Label)
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object,com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button)
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button,java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.ui.Dialog show(com.badlogic.gdx.scenes.scene2d.Stage)
com.badlogic.gdx.scenes.scene2d.ui.Dialog: void hide()
com.badlogic.gdx.scenes.scene2d.ui.Dialog: void setObject(com.badlogic.gdx.scenes.scene2d.Actor,java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.Dialog: com.badlogic.gdx.scenes.scene2d.ui.Dialog key(int,java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.Dialog: void result(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.Dialog: void cancel()
com.badlogic.gdx.scenes.scene2d.ui.Dialog: void <clinit>()
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1: com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1: Dialog$1(com.badlogic.gdx.scenes.scene2d.ui.Dialog)
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1: boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2: com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2: Dialog$2(com.badlogic.gdx.scenes.scene2d.ui.Dialog)
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2: void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3: com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3: Dialog$3(com.badlogic.gdx.scenes.scene2d.ui.Dialog)
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3: void keyboardFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean)
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3: void scrollFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean)
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3: void focusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent)
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4: int val$keycode
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4: java.lang.Object val$object
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4: com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4: Dialog$4(com.badlogic.gdx.scenes.scene2d.ui.Dialog,int,java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4: boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int)
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float prefWidth
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float prefHeight
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: boolean sizeInvalid
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: int align
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: boolean reverse
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: boolean round
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float spacing
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float padTop
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float padLeft
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float padBottom
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float padRight
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float fill
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: HorizontalGroup()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: void invalidate()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: void computeSize()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: void layout()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: void setRound(boolean)
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup reverse()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup reverse(boolean)
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: boolean getReverse()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup space(float)
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float getSpace()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup pad(float)
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup pad(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padTop(float)
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padLeft(float)
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padBottom(float)
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padRight(float)
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float getPadTop()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float getPadLeft()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float getPadBottom()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float getPadRight()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup align(int)
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup center()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup top()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup bottom()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: int getAlign()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup fill()
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup fill(float)
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup: float getFill()
com.badlogic.gdx.scenes.scene2d.ui.Image
com.badlogic.gdx.scenes.scene2d.ui.Image: com.badlogic.gdx.utils.Scaling scaling
com.badlogic.gdx.scenes.scene2d.ui.Image: int align
com.badlogic.gdx.scenes.scene2d.ui.Image: float imageX
com.badlogic.gdx.scenes.scene2d.ui.Image: float imageY
com.badlogic.gdx.scenes.scene2d.ui.Image: float imageWidth
com.badlogic.gdx.scenes.scene2d.ui.Image: float imageHeight
com.badlogic.gdx.scenes.scene2d.ui.Image: com.badlogic.gdx.scenes.scene2d.utils.Drawable drawable
com.badlogic.gdx.scenes.scene2d.ui.Image: Image()
com.badlogic.gdx.scenes.scene2d.ui.Image: Image(com.badlogic.gdx.graphics.g2d.NinePatch)
com.badlogic.gdx.scenes.scene2d.ui.Image: Image(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.scenes.scene2d.ui.Image: Image(com.badlogic.gdx.graphics.Texture)
com.badlogic.gdx.scenes.scene2d.ui.Image: Image(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Image: Image(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Image: Image(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.utils.Scaling)
com.badlogic.gdx.scenes.scene2d.ui.Image: Image(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.utils.Scaling,int)
com.badlogic.gdx.scenes.scene2d.ui.Image: void layout()
com.badlogic.gdx.scenes.scene2d.ui.Image: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.Image: void setDrawable(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Image: void setDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Image: com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable()
com.badlogic.gdx.scenes.scene2d.ui.Image: void setScaling(com.badlogic.gdx.utils.Scaling)
com.badlogic.gdx.scenes.scene2d.ui.Image: void setAlign(int)
com.badlogic.gdx.scenes.scene2d.ui.Image: float getMinWidth()
com.badlogic.gdx.scenes.scene2d.ui.Image: float getMinHeight()
com.badlogic.gdx.scenes.scene2d.ui.Image: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.Image: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.Image: float getImageX()
com.badlogic.gdx.scenes.scene2d.ui.Image: float getImageY()
com.badlogic.gdx.scenes.scene2d.ui.Image: float getImageWidth()
com.badlogic.gdx.scenes.scene2d.ui.Image: float getImageHeight()
com.badlogic.gdx.scenes.scene2d.ui.ImageButton
com.badlogic.gdx.scenes.scene2d.ui.ImageButton: com.badlogic.gdx.scenes.scene2d.ui.Image image
com.badlogic.gdx.scenes.scene2d.ui.ImageButton: com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle style
com.badlogic.gdx.scenes.scene2d.ui.ImageButton: ImageButton(com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.ImageButton: ImageButton(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.ImageButton: ImageButton(com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.ImageButton: ImageButton(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.ImageButton: ImageButton(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.ImageButton: ImageButton(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.ImageButton: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.ImageButton: com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.ImageButton: void updateImage()
com.badlogic.gdx.scenes.scene2d.ui.ImageButton: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.ImageButton: com.badlogic.gdx.scenes.scene2d.ui.Image getImage()
com.badlogic.gdx.scenes.scene2d.ui.ImageButton: com.badlogic.gdx.scenes.scene2d.ui.Cell getImageCell()
com.badlogic.gdx.scenes.scene2d.ui.ImageButton: com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle: ImageButton$ImageButtonStyle()
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle: ImageButton$ImageButtonStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle: ImageButton$ImageButtonStyle(com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle: ImageButton$ImageButtonStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: com.badlogic.gdx.scenes.scene2d.ui.Image image
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: com.badlogic.gdx.scenes.scene2d.ui.Label label
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle style
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: ImageTextButton(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: ImageTextButton(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: ImageTextButton(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: void updateImage()
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: com.badlogic.gdx.scenes.scene2d.ui.Image getImage()
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: com.badlogic.gdx.scenes.scene2d.ui.Cell getImageCell()
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: com.badlogic.gdx.scenes.scene2d.ui.Label getLabel()
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: com.badlogic.gdx.scenes.scene2d.ui.Cell getLabelCell()
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: void setText(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: java.lang.CharSequence getText()
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle: ImageTextButton$ImageTextButtonStyle()
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle: ImageTextButton$ImageTextButtonStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.BitmapFont)
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle: ImageTextButton$ImageTextButtonStyle(com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle: ImageTextButton$ImageTextButtonStyle(com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.Label
com.badlogic.gdx.scenes.scene2d.ui.Label: com.badlogic.gdx.graphics.Color tempColor
com.badlogic.gdx.scenes.scene2d.ui.Label: com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style
com.badlogic.gdx.scenes.scene2d.ui.Label: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds
com.badlogic.gdx.scenes.scene2d.ui.Label: com.badlogic.gdx.utils.StringBuilder text
com.badlogic.gdx.scenes.scene2d.ui.Label: com.badlogic.gdx.utils.StringBuilder tempText
com.badlogic.gdx.scenes.scene2d.ui.Label: com.badlogic.gdx.graphics.g2d.BitmapFontCache cache
com.badlogic.gdx.scenes.scene2d.ui.Label: int labelAlign
com.badlogic.gdx.scenes.scene2d.ui.Label: com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment lineAlign
com.badlogic.gdx.scenes.scene2d.ui.Label: boolean wrap
com.badlogic.gdx.scenes.scene2d.ui.Label: float lastPrefHeight
com.badlogic.gdx.scenes.scene2d.ui.Label: boolean sizeInvalid
com.badlogic.gdx.scenes.scene2d.ui.Label: float fontScaleX
com.badlogic.gdx.scenes.scene2d.ui.Label: float fontScaleY
com.badlogic.gdx.scenes.scene2d.ui.Label: boolean ellipse
com.badlogic.gdx.scenes.scene2d.ui.Label: Label(java.lang.CharSequence,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.Label: Label(java.lang.CharSequence,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Label: Label(java.lang.CharSequence,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.scenes.scene2d.ui.Label: Label(java.lang.CharSequence,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Label: Label(java.lang.CharSequence,com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle)
com.badlogic.gdx.scenes.scene2d.ui.Label: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle)
com.badlogic.gdx.scenes.scene2d.ui.Label: com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.Label: void setText(java.lang.CharSequence)
com.badlogic.gdx.scenes.scene2d.ui.Label: boolean textEquals(java.lang.CharSequence)
com.badlogic.gdx.scenes.scene2d.ui.Label: java.lang.CharSequence getText()
com.badlogic.gdx.scenes.scene2d.ui.Label: void invalidate()
com.badlogic.gdx.scenes.scene2d.ui.Label: void scaleAndComputeSize()
com.badlogic.gdx.scenes.scene2d.ui.Label: void computeSize()
com.badlogic.gdx.scenes.scene2d.ui.Label: void layout()
com.badlogic.gdx.scenes.scene2d.ui.Label: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.Label: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.Label: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.Label: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getTextBounds()
com.badlogic.gdx.scenes.scene2d.ui.Label: void setWrap(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Label: void setAlignment(int)
com.badlogic.gdx.scenes.scene2d.ui.Label: void setAlignment(int,int)
com.badlogic.gdx.scenes.scene2d.ui.Label: void setFontScale(float)
com.badlogic.gdx.scenes.scene2d.ui.Label: void setFontScale(float,float)
com.badlogic.gdx.scenes.scene2d.ui.Label: float getFontScaleX()
com.badlogic.gdx.scenes.scene2d.ui.Label: void setFontScaleX(float)
com.badlogic.gdx.scenes.scene2d.ui.Label: float getFontScaleY()
com.badlogic.gdx.scenes.scene2d.ui.Label: void setFontScaleY(float)
com.badlogic.gdx.scenes.scene2d.ui.Label: void setEllipse(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Label: com.badlogic.gdx.graphics.g2d.BitmapFontCache getBitmapFontCache()
com.badlogic.gdx.scenes.scene2d.ui.Label: void <clinit>()
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle: com.badlogic.gdx.graphics.g2d.BitmapFont font
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle: com.badlogic.gdx.graphics.Color fontColor
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable background
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle: Label$LabelStyle()
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle: Label$LabelStyle(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle: Label$LabelStyle(com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle)
com.badlogic.gdx.scenes.scene2d.ui.List
com.badlogic.gdx.scenes.scene2d.ui.List: com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle style
com.badlogic.gdx.scenes.scene2d.ui.List: com.badlogic.gdx.utils.Array items
com.badlogic.gdx.scenes.scene2d.ui.List: com.badlogic.gdx.math.Rectangle cullingArea
com.badlogic.gdx.scenes.scene2d.ui.List: float prefWidth
com.badlogic.gdx.scenes.scene2d.ui.List: float prefHeight
com.badlogic.gdx.scenes.scene2d.ui.List: float itemHeight
com.badlogic.gdx.scenes.scene2d.ui.List: float textOffsetX
com.badlogic.gdx.scenes.scene2d.ui.List: float textOffsetY
com.badlogic.gdx.scenes.scene2d.ui.List: com.badlogic.gdx.scenes.scene2d.utils.ArraySelection selection
com.badlogic.gdx.scenes.scene2d.ui.List: List(com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.List: List(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.List: List(com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle)
com.badlogic.gdx.scenes.scene2d.ui.List: void touchDown(float)
com.badlogic.gdx.scenes.scene2d.ui.List: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle)
com.badlogic.gdx.scenes.scene2d.ui.List: com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.List: void layout()
com.badlogic.gdx.scenes.scene2d.ui.List: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.List: com.badlogic.gdx.scenes.scene2d.utils.ArraySelection getSelection()
com.badlogic.gdx.scenes.scene2d.ui.List: java.lang.Object getSelected()
com.badlogic.gdx.scenes.scene2d.ui.List: int getSelectedIndex()
com.badlogic.gdx.scenes.scene2d.ui.List: void setSelectedIndex(int)
com.badlogic.gdx.scenes.scene2d.ui.List: void setItems(java.lang.Object[])
com.badlogic.gdx.scenes.scene2d.ui.List: void setItems(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.ui.List: com.badlogic.gdx.utils.Array getItems()
com.badlogic.gdx.scenes.scene2d.ui.List: float getItemHeight()
com.badlogic.gdx.scenes.scene2d.ui.List: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.List: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.List: void setCullingArea(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.scenes.scene2d.ui.List$1
com.badlogic.gdx.scenes.scene2d.ui.List$1: com.badlogic.gdx.scenes.scene2d.ui.List this$0
com.badlogic.gdx.scenes.scene2d.ui.List$1: List$1(com.badlogic.gdx.scenes.scene2d.ui.List)
com.badlogic.gdx.scenes.scene2d.ui.List$1: boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle: com.badlogic.gdx.graphics.g2d.BitmapFont font
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle: com.badlogic.gdx.graphics.Color fontColorSelected
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle: com.badlogic.gdx.graphics.Color fontColorUnselected
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable selection
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable background
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle: List$ListStyle()
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle: List$ListStyle(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle: List$ListStyle(com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle style
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float min
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float max
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float stepSize
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float value
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float animateFromValue
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float position
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: boolean vertical
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float animateDuration
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float animateTime
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: com.badlogic.gdx.math.Interpolation animateInterpolation
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float[] snapValues
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float threshold
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: boolean disabled
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: boolean shiftIgnoresSnap
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: ProgressBar(float,float,float,boolean,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: ProgressBar(float,float,float,boolean,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: ProgressBar(float,float,float,boolean,com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: void act(float)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float getValue()
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float getVisualValue()
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float getKnobPosition()
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: boolean setValue(float)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float clamp(float)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: void setRange(float,float)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: void setStepSize(float)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float getMinValue()
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float getMaxValue()
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float getStepSize()
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: void setAnimateDuration(float)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: void setAnimateInterpolation(com.badlogic.gdx.math.Interpolation)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: void setSnapToValues(float[],float)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: float snap(float)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: void setDisabled(boolean)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: boolean isDisabled()
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable background
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledBackground
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable knob
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledKnob
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable knobBefore
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable knobAfter
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledKnobBefore
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledKnobAfter
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle: ProgressBar$ProgressBarStyle()
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle: ProgressBar$ProgressBarStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle: ProgressBar$ProgressBarStyle(com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle style
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: com.badlogic.gdx.scenes.scene2d.Actor widget
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: com.badlogic.gdx.math.Rectangle hScrollBounds
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: com.badlogic.gdx.math.Rectangle vScrollBounds
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: com.badlogic.gdx.math.Rectangle hKnobBounds
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: com.badlogic.gdx.math.Rectangle vKnobBounds
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: com.badlogic.gdx.math.Rectangle widgetAreaBounds
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: com.badlogic.gdx.math.Rectangle widgetCullingArea
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: com.badlogic.gdx.math.Rectangle scissorBounds
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener flickScrollListener
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean scrollX
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean scrollY
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean vScrollOnRight
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean hScrollOnBottom
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float amountX
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float amountY
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float visualAmountX
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float visualAmountY
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float maxX
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float maxY
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean touchScrollH
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean touchScrollV
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: com.badlogic.gdx.math.Vector2 lastPoint
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float areaWidth
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float areaHeight
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean fadeScrollBars
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean smoothScrolling
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float fadeAlpha
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float fadeAlphaSeconds
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float fadeDelay
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float fadeDelaySeconds
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean cancelTouchFocus
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean flickScroll
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float velocityX
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float velocityY
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float flingTimer
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean overscrollX
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean overscrollY
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float flingTime
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float overscrollDistance
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float overscrollSpeedMin
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float overscrollSpeedMax
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean forceScrollX
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean forceScrollY
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean disableX
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean disableY
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean clamp
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean scrollbarsOnTop
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean variableSizeKnobs
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: int draggingPointer
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: ScrollPane(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: ScrollPane(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: ScrollPane(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: ScrollPane(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void resetFade()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void cancelTouchFocusedChild(com.badlogic.gdx.scenes.scene2d.InputEvent)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void cancel()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void clamp()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void act(float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void layout()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void fling(float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getMinWidth()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getMinHeight()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setWidget(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: com.badlogic.gdx.scenes.scene2d.Actor getWidget()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void addActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void scrollX(float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void scrollY(float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void visualScrollX(float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void visualScrollY(float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getMouseWheelX()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getMouseWheelY()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setScrollX(float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getScrollX()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setScrollY(float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getScrollY()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void updateVisualScroll()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getVisualScrollX()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getVisualScrollY()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getScrollPercentX()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setScrollPercentX(float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getScrollPercentY()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setScrollPercentY(float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setFlickScroll(boolean)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void scrollTo(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void scrollToCenter(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getMaxX()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getMaxY()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getScrollBarHeight()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getScrollBarWidth()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getScrollWidth()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getScrollHeight()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean isScrollX()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean isScrollY()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setScrollingDisabled(boolean,boolean)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean isDragging()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean isPanning()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean isFlinging()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setVelocityX(float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getVelocityX()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setVelocityY(float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: float getVelocityY()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setOverscroll(boolean,boolean)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setupOverscroll(float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setForceScroll(boolean,boolean)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean isForceScrollX()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean isForceScrollY()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setFlingTime(float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setClamp(boolean)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setScrollBarPositions(boolean,boolean)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setFadeScrollBars(boolean)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setupFadeScrollBars(float,float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setSmoothScrolling(boolean)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setScrollbarsOnTop(boolean)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: boolean getVariableSizeKnobs()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setVariableSizeKnobs(boolean)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: void setCancelTouchFocus(boolean)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1: float handlePosition
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1: ScrollPane$1(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1: boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1: void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1: void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1: boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2: ScrollPane$2(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2: void pan(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2: void fling(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2: boolean handle(com.badlogic.gdx.scenes.scene2d.Event)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3: ScrollPane$3(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3: boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable background
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable corner
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable hScroll
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable hScrollKnob
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable vScroll
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable vScrollKnob
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle: ScrollPane$ScrollPaneStyle()
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle: ScrollPane$ScrollPaneStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle: ScrollPane$ScrollPaneStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: com.badlogic.gdx.math.Vector2 tmpCoords
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle style
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: com.badlogic.gdx.utils.Array items
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: java.lang.Object selected
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll scroll
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: com.badlogic.gdx.scenes.scene2d.utils.Selection selection
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: com.badlogic.gdx.scenes.scene2d.Actor previousScrollFocus
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: float prefWidth
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: float prefHeight
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: int maxListCount
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: boolean disabled
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: SelectBox(com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: SelectBox(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: SelectBox(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: void setMaxListCount(int)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: int getMaxListCount()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: void setItems(java.lang.Object[])
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: void setItems(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: com.badlogic.gdx.utils.Array getItems()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: void layout()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: com.badlogic.gdx.scenes.scene2d.utils.Selection getSelection()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: java.lang.Object getSelected()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: void setSelected(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: int getSelectedIndex()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: void setSelectedIndex(int)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: void setDisabled(boolean)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: void showList()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: void hideList()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: com.badlogic.gdx.scenes.scene2d.ui.List getList()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane getScrollPane()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox: void <clinit>()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1: com.badlogic.gdx.scenes.scene2d.ui.SelectBox this$0
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1: SelectBox$1(com.badlogic.gdx.scenes.scene2d.ui.SelectBox)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1: boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll: com.badlogic.gdx.scenes.scene2d.ui.List list
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll: com.badlogic.gdx.math.Vector2 screenCoords
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll: com.badlogic.gdx.scenes.scene2d.ui.SelectBox this$0
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll: SelectBox$ListScroll(com.badlogic.gdx.scenes.scene2d.ui.SelectBox)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll: void show(com.badlogic.gdx.scenes.scene2d.Stage)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll: com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll: void act(float)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$1
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$1: com.badlogic.gdx.scenes.scene2d.ui.SelectBox val$this$0
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$1: com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll this$1
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$1: SelectBox$ListScroll$1(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll,com.badlogic.gdx.scenes.scene2d.ui.SelectBox)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$1: boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$2
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$2: com.badlogic.gdx.scenes.scene2d.ui.SelectBox val$this$0
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$2: com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll this$1
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$2: SelectBox$ListScroll$2(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll,com.badlogic.gdx.scenes.scene2d.ui.SelectBox)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$2: boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$2: void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle: com.badlogic.gdx.graphics.g2d.BitmapFont font
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle: com.badlogic.gdx.graphics.Color fontColor
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle: com.badlogic.gdx.graphics.Color disabledFontColor
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable background
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle scrollStyle
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle: com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle listStyle
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOver
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOpen
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundDisabled
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle: SelectBox$SelectBoxStyle()
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle: SelectBox$SelectBoxStyle(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle,com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle)
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle: SelectBox$SelectBoxStyle(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle)
com.badlogic.gdx.scenes.scene2d.ui.Skin
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.utils.ObjectMap resources
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.graphics.g2d.TextureAtlas atlas
com.badlogic.gdx.scenes.scene2d.ui.Skin: Skin()
com.badlogic.gdx.scenes.scene2d.ui.Skin: Skin(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.scenes.scene2d.ui.Skin: Skin(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureAtlas)
com.badlogic.gdx.scenes.scene2d.ui.Skin: Skin(com.badlogic.gdx.graphics.g2d.TextureAtlas)
com.badlogic.gdx.scenes.scene2d.ui.Skin: void load(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.scenes.scene2d.ui.Skin: void addRegions(com.badlogic.gdx.graphics.g2d.TextureAtlas)
com.badlogic.gdx.scenes.scene2d.ui.Skin: void add(java.lang.String,java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.Skin: void add(java.lang.String,java.lang.Object,java.lang.Class)
com.badlogic.gdx.scenes.scene2d.ui.Skin: void remove(java.lang.String,java.lang.Class)
com.badlogic.gdx.scenes.scene2d.ui.Skin: java.lang.Object get(java.lang.Class)
com.badlogic.gdx.scenes.scene2d.ui.Skin: java.lang.Object get(java.lang.String,java.lang.Class)
com.badlogic.gdx.scenes.scene2d.ui.Skin: java.lang.Object optional(java.lang.String,java.lang.Class)
com.badlogic.gdx.scenes.scene2d.ui.Skin: boolean has(java.lang.String,java.lang.Class)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.utils.ObjectMap getAll(java.lang.Class)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.graphics.Color getColor(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.graphics.g2d.BitmapFont getFont(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable getTiledDrawable(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.graphics.g2d.NinePatch getPatch(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.graphics.g2d.Sprite getSprite(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Skin: java.lang.String find(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.scenes.scene2d.ui.Skin: void setEnabled(com.badlogic.gdx.scenes.scene2d.Actor,boolean)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas()
com.badlogic.gdx.scenes.scene2d.ui.Skin: void dispose()
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.utils.Json getJsonLoader(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.scenes.scene2d.ui.Skin: com.badlogic.gdx.utils.reflect.Method findMethod(java.lang.Class,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Skin$1
com.badlogic.gdx.scenes.scene2d.ui.Skin$1: com.badlogic.gdx.scenes.scene2d.ui.Skin this$0
com.badlogic.gdx.scenes.scene2d.ui.Skin$1: Skin$1(com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.Skin$1: java.lang.Object readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.scenes.scene2d.ui.Skin$2
com.badlogic.gdx.scenes.scene2d.ui.Skin$2: com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin
com.badlogic.gdx.scenes.scene2d.ui.Skin$2: com.badlogic.gdx.scenes.scene2d.ui.Skin this$0
com.badlogic.gdx.scenes.scene2d.ui.Skin$2: Skin$2(com.badlogic.gdx.scenes.scene2d.ui.Skin,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.Skin$2: com.badlogic.gdx.scenes.scene2d.ui.Skin read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class)
com.badlogic.gdx.scenes.scene2d.ui.Skin$2: void readNamedObjects(com.badlogic.gdx.utils.Json,java.lang.Class,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.scenes.scene2d.ui.Skin$2: java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class)
com.badlogic.gdx.scenes.scene2d.ui.Skin$3
com.badlogic.gdx.scenes.scene2d.ui.Skin$3: com.badlogic.gdx.files.FileHandle val$skinFile
com.badlogic.gdx.scenes.scene2d.ui.Skin$3: com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin
com.badlogic.gdx.scenes.scene2d.ui.Skin$3: com.badlogic.gdx.scenes.scene2d.ui.Skin this$0
com.badlogic.gdx.scenes.scene2d.ui.Skin$3: Skin$3(com.badlogic.gdx.scenes.scene2d.ui.Skin,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.Skin$3: com.badlogic.gdx.graphics.g2d.BitmapFont read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class)
com.badlogic.gdx.scenes.scene2d.ui.Skin$3: java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class)
com.badlogic.gdx.scenes.scene2d.ui.Skin$4
com.badlogic.gdx.scenes.scene2d.ui.Skin$4: com.badlogic.gdx.scenes.scene2d.ui.Skin this$0
com.badlogic.gdx.scenes.scene2d.ui.Skin$4: Skin$4(com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.Skin$4: com.badlogic.gdx.graphics.Color read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class)
com.badlogic.gdx.scenes.scene2d.ui.Skin$4: java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class)
com.badlogic.gdx.scenes.scene2d.ui.Skin$5
com.badlogic.gdx.scenes.scene2d.ui.Skin$5: com.badlogic.gdx.scenes.scene2d.ui.Skin this$0
com.badlogic.gdx.scenes.scene2d.ui.Skin$5: Skin$5(com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.Skin$5: java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class)
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable: java.lang.String name
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable: com.badlogic.gdx.graphics.Color color
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable: Skin$TintedDrawable()
com.badlogic.gdx.scenes.scene2d.ui.Slider
com.badlogic.gdx.scenes.scene2d.ui.Slider: int draggingPointer
com.badlogic.gdx.scenes.scene2d.ui.Slider: Slider(float,float,float,boolean,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.Slider: Slider(float,float,float,boolean,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Slider: Slider(float,float,float,boolean,com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle)
com.badlogic.gdx.scenes.scene2d.ui.Slider: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle)
com.badlogic.gdx.scenes.scene2d.ui.Slider: com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.Slider: boolean calculatePositionAndValue(float,float)
com.badlogic.gdx.scenes.scene2d.ui.Slider: boolean isDragging()
com.badlogic.gdx.scenes.scene2d.ui.Slider: com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.Slider$1
com.badlogic.gdx.scenes.scene2d.ui.Slider$1: com.badlogic.gdx.scenes.scene2d.ui.Slider this$0
com.badlogic.gdx.scenes.scene2d.ui.Slider$1: Slider$1(com.badlogic.gdx.scenes.scene2d.ui.Slider)
com.badlogic.gdx.scenes.scene2d.ui.Slider$1: boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.Slider$1: void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.Slider$1: void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle: Slider$SliderStyle()
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle: Slider$SliderStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle: Slider$SliderStyle(com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle style
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: com.badlogic.gdx.scenes.scene2d.Actor firstWidget
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: com.badlogic.gdx.scenes.scene2d.Actor secondWidget
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: boolean vertical
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: float splitAmount
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: float minAmount
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: float maxAmount
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: float oldSplitAmount
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: com.badlogic.gdx.math.Rectangle firstWidgetBounds
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: com.badlogic.gdx.math.Rectangle secondWidgetBounds
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: com.badlogic.gdx.math.Rectangle handleBounds
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: com.badlogic.gdx.math.Rectangle firstScissors
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: com.badlogic.gdx.math.Rectangle secondScissors
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: com.badlogic.gdx.math.Vector2 lastPoint
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: com.badlogic.gdx.math.Vector2 handlePosition
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: SplitPane(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,boolean,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: SplitPane(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,boolean,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: SplitPane(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,boolean,com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: void initialize()
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: void layout()
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: float getMinWidth()
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: float getMinHeight()
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: void setVertical(boolean)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: void calculateHorizBoundsAndPositions()
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: void calculateVertBoundsAndPositions()
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: void setSplitAmount(float)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: float getSplit()
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: void setMinSplitAmount(float)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: void setMaxSplitAmount(float)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: void setFirstWidget(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: void setSecondWidget(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: void addActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane: boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1: int draggingPointer
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1: com.badlogic.gdx.scenes.scene2d.ui.SplitPane this$0
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1: SplitPane$1(com.badlogic.gdx.scenes.scene2d.ui.SplitPane)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1: boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1: void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1: void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable handle
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle: SplitPane$SplitPaneStyle()
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle: SplitPane$SplitPaneStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle: SplitPane$SplitPaneStyle(com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle)
com.badlogic.gdx.scenes.scene2d.ui.Stack
com.badlogic.gdx.scenes.scene2d.ui.Stack: float prefWidth
com.badlogic.gdx.scenes.scene2d.ui.Stack: float prefHeight
com.badlogic.gdx.scenes.scene2d.ui.Stack: float minWidth
com.badlogic.gdx.scenes.scene2d.ui.Stack: float minHeight
com.badlogic.gdx.scenes.scene2d.ui.Stack: float maxWidth
com.badlogic.gdx.scenes.scene2d.ui.Stack: float maxHeight
com.badlogic.gdx.scenes.scene2d.ui.Stack: boolean sizeInvalid
com.badlogic.gdx.scenes.scene2d.ui.Stack: Stack()
com.badlogic.gdx.scenes.scene2d.ui.Stack: void invalidate()
com.badlogic.gdx.scenes.scene2d.ui.Stack: void computeSize()
com.badlogic.gdx.scenes.scene2d.ui.Stack: void add(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Stack: void layout()
com.badlogic.gdx.scenes.scene2d.ui.Stack: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.Stack: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.Stack: float getMinWidth()
com.badlogic.gdx.scenes.scene2d.ui.Stack: float getMinHeight()
com.badlogic.gdx.scenes.scene2d.ui.Stack: float getMaxWidth()
com.badlogic.gdx.scenes.scene2d.ui.Stack: float getMaxHeight()
com.badlogic.gdx.scenes.scene2d.ui.Table
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.utils.Pool cellPool
com.badlogic.gdx.scenes.scene2d.ui.Table: float[] columnWeightedWidth
com.badlogic.gdx.scenes.scene2d.ui.Table: float[] rowWeightedHeight
com.badlogic.gdx.scenes.scene2d.ui.Table: int columns
com.badlogic.gdx.scenes.scene2d.ui.Table: int rows
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.utils.Array cells
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Cell cellDefaults
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.utils.Array columnDefaults
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Cell rowDefaults
com.badlogic.gdx.scenes.scene2d.ui.Table: boolean sizeInvalid
com.badlogic.gdx.scenes.scene2d.ui.Table: float[] columnMinWidth
com.badlogic.gdx.scenes.scene2d.ui.Table: float[] rowMinHeight
com.badlogic.gdx.scenes.scene2d.ui.Table: float[] columnPrefWidth
com.badlogic.gdx.scenes.scene2d.ui.Table: float[] rowPrefHeight
com.badlogic.gdx.scenes.scene2d.ui.Table: float tableMinWidth
com.badlogic.gdx.scenes.scene2d.ui.Table: float tableMinHeight
com.badlogic.gdx.scenes.scene2d.ui.Table: float tablePrefWidth
com.badlogic.gdx.scenes.scene2d.ui.Table: float tablePrefHeight
com.badlogic.gdx.scenes.scene2d.ui.Table: float[] columnWidth
com.badlogic.gdx.scenes.scene2d.ui.Table: float[] rowHeight
com.badlogic.gdx.scenes.scene2d.ui.Table: float[] expandWidth
com.badlogic.gdx.scenes.scene2d.ui.Table: float[] expandHeight
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Value padTop
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Value padLeft
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Value padBottom
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Value padRight
com.badlogic.gdx.scenes.scene2d.ui.Table: int align
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table$Debug debug
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.utils.Array debugRects
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.utils.Drawable background
com.badlogic.gdx.scenes.scene2d.ui.Table: boolean clip
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Skin skin
com.badlogic.gdx.scenes.scene2d.ui.Table: boolean round
com.badlogic.gdx.scenes.scene2d.ui.Table: Table()
com.badlogic.gdx.scenes.scene2d.ui.Table: Table(com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Cell obtainCell()
com.badlogic.gdx.scenes.scene2d.ui.Table: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.Table: void drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Table: void setBackground(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Table: void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Table: void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable,boolean)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table background(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table background(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.utils.Drawable getBackground()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean)
com.badlogic.gdx.scenes.scene2d.ui.Table: void setClip(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Table: boolean getClip()
com.badlogic.gdx.scenes.scene2d.ui.Table: void invalidate()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Cell add(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Table: void add(com.badlogic.gdx.scenes.scene2d.Actor[])
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String,java.lang.String,com.badlogic.gdx.graphics.Color)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String,java.lang.String,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Cell add()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Cell stack(com.badlogic.gdx.scenes.scene2d.Actor[])
com.badlogic.gdx.scenes.scene2d.ui.Table: boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Table: void clearChildren()
com.badlogic.gdx.scenes.scene2d.ui.Table: void reset()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Cell row()
com.badlogic.gdx.scenes.scene2d.ui.Table: void endRow()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Cell columnDefaults(int)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Cell getCell(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.utils.Array getCells()
com.badlogic.gdx.scenes.scene2d.ui.Table: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.Table: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.Table: float getMinWidth()
com.badlogic.gdx.scenes.scene2d.ui.Table: float getMinHeight()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Cell defaults()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table padTop(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table padRight(com.badlogic.gdx.scenes.scene2d.ui.Value)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table pad(float)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table pad(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table padTop(float)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(float)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(float)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table padRight(float)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table align(int)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table center()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table top()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table left()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table bottom()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table right()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table debug()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table debugTable()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table debugCell()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table debugActor()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table debug(com.badlogic.gdx.scenes.scene2d.ui.Table$Debug)
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Table$Debug getDebug()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Value getPadTopValue()
com.badlogic.gdx.scenes.scene2d.ui.Table: float getPadTop()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Value getPadLeftValue()
com.badlogic.gdx.scenes.scene2d.ui.Table: float getPadLeft()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Value getPadBottomValue()
com.badlogic.gdx.scenes.scene2d.ui.Table: float getPadBottom()
com.badlogic.gdx.scenes.scene2d.ui.Table: com.badlogic.gdx.scenes.scene2d.ui.Value getPadRightValue()
com.badlogic.gdx.scenes.scene2d.ui.Table: float getPadRight()
com.badlogic.gdx.scenes.scene2d.ui.Table: float getPadX()
com.badlogic.gdx.scenes.scene2d.ui.Table: float getPadY()
com.badlogic.gdx.scenes.scene2d.ui.Table: int getAlign()
com.badlogic.gdx.scenes.scene2d.ui.Table: int getRow(float)
com.badlogic.gdx.scenes.scene2d.ui.Table: void setSkin(com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.Table: void setRound(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Table: float[] ensureSize(float[],int)
com.badlogic.gdx.scenes.scene2d.ui.Table: void layout()
com.badlogic.gdx.scenes.scene2d.ui.Table: void computeSize()
com.badlogic.gdx.scenes.scene2d.ui.Table: void layout(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Table: void drawDebug(com.badlogic.gdx.scenes.scene2d.Stage)
com.badlogic.gdx.scenes.scene2d.ui.Table: void <clinit>()
com.badlogic.gdx.scenes.scene2d.ui.Table$1
com.badlogic.gdx.scenes.scene2d.ui.Table$1: Table$1()
com.badlogic.gdx.scenes.scene2d.ui.Table$1: com.badlogic.gdx.scenes.scene2d.ui.Cell newObject()
com.badlogic.gdx.scenes.scene2d.ui.Table$1: java.lang.Object newObject()
com.badlogic.gdx.scenes.scene2d.ui.Table$Debug
com.badlogic.gdx.scenes.scene2d.ui.Table$Debug: com.badlogic.gdx.scenes.scene2d.ui.Table$Debug none
com.badlogic.gdx.scenes.scene2d.ui.Table$Debug: com.badlogic.gdx.scenes.scene2d.ui.Table$Debug all
com.badlogic.gdx.scenes.scene2d.ui.Table$Debug: com.badlogic.gdx.scenes.scene2d.ui.Table$Debug table
com.badlogic.gdx.scenes.scene2d.ui.Table$Debug: com.badlogic.gdx.scenes.scene2d.ui.Table$Debug cell
com.badlogic.gdx.scenes.scene2d.ui.Table$Debug: com.badlogic.gdx.scenes.scene2d.ui.Table$Debug actor
com.badlogic.gdx.scenes.scene2d.ui.Table$Debug: com.badlogic.gdx.scenes.scene2d.ui.Table$Debug[] $VALUES
com.badlogic.gdx.scenes.scene2d.ui.Table$Debug: com.badlogic.gdx.scenes.scene2d.ui.Table$Debug[] values()
com.badlogic.gdx.scenes.scene2d.ui.Table$Debug: com.badlogic.gdx.scenes.scene2d.ui.Table$Debug valueOf(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Table$Debug: Table$Debug(java.lang.String,int)
com.badlogic.gdx.scenes.scene2d.ui.Table$Debug: void <clinit>()
com.badlogic.gdx.scenes.scene2d.ui.Table$DebugRect
com.badlogic.gdx.scenes.scene2d.ui.Table$DebugRect: com.badlogic.gdx.scenes.scene2d.ui.Table$Debug type
com.badlogic.gdx.scenes.scene2d.ui.Table$DebugRect: Table$DebugRect(com.badlogic.gdx.scenes.scene2d.ui.Table$Debug,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Table$TableDebug
com.badlogic.gdx.scenes.scene2d.ui.Table$TableDebug: boolean draw
com.badlogic.gdx.scenes.scene2d.ui.Table$TableDebug: com.badlogic.gdx.Application app
com.badlogic.gdx.scenes.scene2d.ui.Table$TableDebug: com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer debugRenderer
com.badlogic.gdx.scenes.scene2d.ui.Table$TableDebug: Table$TableDebug()
com.badlogic.gdx.scenes.scene2d.ui.Table$TableDebug: void addRectangle(com.badlogic.gdx.scenes.scene2d.ui.Table,com.badlogic.gdx.scenes.scene2d.ui.Table$Debug,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Table$TableDebug: void draw(com.badlogic.gdx.scenes.scene2d.Stage)
com.badlogic.gdx.scenes.scene2d.ui.Table$TableDebug: void draw(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.ui.Table$TableDebug: void draw(com.badlogic.gdx.scenes.scene2d.ui.Table)
com.badlogic.gdx.scenes.scene2d.ui.TextArea
com.badlogic.gdx.scenes.scene2d.ui.TextArea: com.badlogic.gdx.utils.IntArray linesBreak
com.badlogic.gdx.scenes.scene2d.ui.TextArea: java.lang.String lastText
com.badlogic.gdx.scenes.scene2d.ui.TextArea: int cursorLine
com.badlogic.gdx.scenes.scene2d.ui.TextArea: int firstLineShowing
com.badlogic.gdx.scenes.scene2d.ui.TextArea: int linesShowing
com.badlogic.gdx.scenes.scene2d.ui.TextArea: float moveOffset
com.badlogic.gdx.scenes.scene2d.ui.TextArea: float prefRows
com.badlogic.gdx.scenes.scene2d.ui.TextArea: TextArea(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.TextArea: TextArea(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.TextArea: TextArea(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle)
com.badlogic.gdx.scenes.scene2d.ui.TextArea: void initialize()
com.badlogic.gdx.scenes.scene2d.ui.TextArea: int letterUnderCursor(float)
com.badlogic.gdx.scenes.scene2d.ui.TextArea: void setPrefRows(float)
com.badlogic.gdx.scenes.scene2d.ui.TextArea: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.TextArea: int getLines()
com.badlogic.gdx.scenes.scene2d.ui.TextArea: boolean newLineAtEnd()
com.badlogic.gdx.scenes.scene2d.ui.TextArea: void moveCursorLine(int)
com.badlogic.gdx.scenes.scene2d.ui.TextArea: void updateCurrentLine()
com.badlogic.gdx.scenes.scene2d.ui.TextArea: void showCursor()
com.badlogic.gdx.scenes.scene2d.ui.TextArea: int calculateCurrentLineIndex(int)
com.badlogic.gdx.scenes.scene2d.ui.TextArea: void sizeChanged()
com.badlogic.gdx.scenes.scene2d.ui.TextArea: float getTextY(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.TextArea: void drawSelection(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float)
com.badlogic.gdx.scenes.scene2d.ui.TextArea: void drawText(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float)
com.badlogic.gdx.scenes.scene2d.ui.TextArea: void drawCursor(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float)
com.badlogic.gdx.scenes.scene2d.ui.TextArea: void calculateOffsets()
com.badlogic.gdx.scenes.scene2d.ui.TextArea: com.badlogic.gdx.scenes.scene2d.InputListener createInputListener()
com.badlogic.gdx.scenes.scene2d.ui.TextArea: void setSelection(int,int)
com.badlogic.gdx.scenes.scene2d.ui.TextArea: void moveCursor(boolean,boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextArea: boolean continueCursor(int,int)
com.badlogic.gdx.scenes.scene2d.ui.TextArea: int getCursorLine()
com.badlogic.gdx.scenes.scene2d.ui.TextArea: int getFirstLineShowing()
com.badlogic.gdx.scenes.scene2d.ui.TextArea: int getLinesShowing()
com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener
com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener: com.badlogic.gdx.scenes.scene2d.ui.TextArea this$0
com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener: TextArea$TextAreaListener(com.badlogic.gdx.scenes.scene2d.ui.TextArea)
com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener: void setCursorPosition(float,float)
com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener: boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int)
com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener: boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char)
com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener: void goHome(boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener: void goEnd(boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextButton
com.badlogic.gdx.scenes.scene2d.ui.TextButton: com.badlogic.gdx.scenes.scene2d.ui.Label label
com.badlogic.gdx.scenes.scene2d.ui.TextButton: com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle style
com.badlogic.gdx.scenes.scene2d.ui.TextButton: TextButton(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.TextButton: TextButton(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.TextButton: TextButton(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.TextButton: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.TextButton: com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.TextButton: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.TextButton: com.badlogic.gdx.scenes.scene2d.ui.Label getLabel()
com.badlogic.gdx.scenes.scene2d.ui.TextButton: com.badlogic.gdx.scenes.scene2d.ui.Cell getLabelCell()
com.badlogic.gdx.scenes.scene2d.ui.TextButton: void setText(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.TextButton: java.lang.CharSequence getText()
com.badlogic.gdx.scenes.scene2d.ui.TextButton: com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle: com.badlogic.gdx.graphics.g2d.BitmapFont font
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle: com.badlogic.gdx.graphics.Color fontColor
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle: com.badlogic.gdx.graphics.Color downFontColor
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle: com.badlogic.gdx.graphics.Color overFontColor
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle: com.badlogic.gdx.graphics.Color checkedFontColor
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle: com.badlogic.gdx.graphics.Color checkedOverFontColor
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle: com.badlogic.gdx.graphics.Color disabledFontColor
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle: TextButton$TextButtonStyle()
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle: TextButton$TextButtonStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.BitmapFont)
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle: TextButton$TextButtonStyle(com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle)
com.badlogic.gdx.scenes.scene2d.ui.TextField
com.badlogic.gdx.scenes.scene2d.ui.TextField: char BACKSPACE
com.badlogic.gdx.scenes.scene2d.ui.TextField: char ENTER_DESKTOP
com.badlogic.gdx.scenes.scene2d.ui.TextField: char ENTER_ANDROID
com.badlogic.gdx.scenes.scene2d.ui.TextField: char TAB
com.badlogic.gdx.scenes.scene2d.ui.TextField: char DELETE
com.badlogic.gdx.scenes.scene2d.ui.TextField: char BULLET
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.math.Vector2 tmp1
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.math.Vector2 tmp2
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.math.Vector2 tmp3
com.badlogic.gdx.scenes.scene2d.ui.TextField: java.lang.String text
com.badlogic.gdx.scenes.scene2d.ui.TextField: int cursor
com.badlogic.gdx.scenes.scene2d.ui.TextField: int selectionStart
com.badlogic.gdx.scenes.scene2d.ui.TextField: boolean hasSelection
com.badlogic.gdx.scenes.scene2d.ui.TextField: boolean writeEnters
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.utils.FloatArray glyphAdvances
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.utils.FloatArray glyphPositions
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle style
com.badlogic.gdx.scenes.scene2d.ui.TextField: java.lang.String messageText
com.badlogic.gdx.scenes.scene2d.ui.TextField: java.lang.CharSequence displayText
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.utils.Clipboard clipboard
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.scenes.scene2d.InputListener inputListener
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener listener
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter filter
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard keyboard
com.badlogic.gdx.scenes.scene2d.ui.TextField: boolean focusTraversal
com.badlogic.gdx.scenes.scene2d.ui.TextField: boolean onlyFontChars
com.badlogic.gdx.scenes.scene2d.ui.TextField: boolean disabled
com.badlogic.gdx.scenes.scene2d.ui.TextField: boolean rightAligned
com.badlogic.gdx.scenes.scene2d.ui.TextField: float selectionX
com.badlogic.gdx.scenes.scene2d.ui.TextField: float selectionWidth
com.badlogic.gdx.scenes.scene2d.ui.TextField: boolean passwordMode
com.badlogic.gdx.scenes.scene2d.ui.TextField: java.lang.StringBuilder passwordBuffer
com.badlogic.gdx.scenes.scene2d.ui.TextField: char passwordCharacter
com.badlogic.gdx.scenes.scene2d.ui.TextField: float textHeight
com.badlogic.gdx.scenes.scene2d.ui.TextField: float textOffset
com.badlogic.gdx.scenes.scene2d.ui.TextField: float renderOffset
com.badlogic.gdx.scenes.scene2d.ui.TextField: int visibleTextStart
com.badlogic.gdx.scenes.scene2d.ui.TextField: int visibleTextEnd
com.badlogic.gdx.scenes.scene2d.ui.TextField: int maxLength
com.badlogic.gdx.scenes.scene2d.ui.TextField: float blinkTime
com.badlogic.gdx.scenes.scene2d.ui.TextField: boolean cursorOn
com.badlogic.gdx.scenes.scene2d.ui.TextField: long lastBlink
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask keyRepeatTask
com.badlogic.gdx.scenes.scene2d.ui.TextField: float keyRepeatInitialTime
com.badlogic.gdx.scenes.scene2d.ui.TextField: float keyRepeatTime
com.badlogic.gdx.scenes.scene2d.ui.TextField: TextField(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.TextField: TextField(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.TextField: TextField(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void initialize()
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.scenes.scene2d.InputListener createInputListener()
com.badlogic.gdx.scenes.scene2d.ui.TextField: int letterUnderCursor(float)
com.badlogic.gdx.scenes.scene2d.ui.TextField: boolean isWordCharacter(char)
com.badlogic.gdx.scenes.scene2d.ui.TextField: int[] wordUnderCursor(int)
com.badlogic.gdx.scenes.scene2d.ui.TextField: int[] wordUnderCursor(float)
com.badlogic.gdx.scenes.scene2d.ui.TextField: boolean withinMaxLength(int)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setMaxLength(int)
com.badlogic.gdx.scenes.scene2d.ui.TextField: int getMaxLength()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setOnlyFontChars(boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle)
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void calculateOffsets()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.TextField: float getTextY(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void drawSelection(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void drawText(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void drawCursor(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void updateDisplayText()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void blink()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void copy()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void cut()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void paste()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void paste(java.lang.String,boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextField: java.lang.String insert(int,java.lang.CharSequence,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.TextField: int delete()
com.badlogic.gdx.scenes.scene2d.ui.TextField: int delete(boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextField: int delete(int,int,boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void next(boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.scenes.scene2d.ui.TextField findNextTextField(com.badlogic.gdx.utils.Array,com.badlogic.gdx.scenes.scene2d.ui.TextField,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.scenes.scene2d.InputListener getDefaultInputListener()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setTextFieldListener(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setTextFieldFilter(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter)
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter getTextFieldFilter()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setFocusTraversal(boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextField: java.lang.String getMessageText()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setMessageText(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setText(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.TextField: java.lang.String getText()
com.badlogic.gdx.scenes.scene2d.ui.TextField: int getSelectionStart()
com.badlogic.gdx.scenes.scene2d.ui.TextField: java.lang.String getSelection()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setSelection(int,int)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void selectAll()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void clearSelection()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setCursorPosition(int)
com.badlogic.gdx.scenes.scene2d.ui.TextField: int getCursorPosition()
com.badlogic.gdx.scenes.scene2d.ui.TextField: com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard getOnscreenKeyboard()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setOnscreenKeyboard(com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setClipboard(com.badlogic.gdx.utils.Clipboard)
com.badlogic.gdx.scenes.scene2d.ui.TextField: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.TextField: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setRightAligned(boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setPasswordMode(boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextField: boolean isPasswordMode()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setPasswordCharacter(char)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setBlinkTime(float)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void setDisabled(boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextField: boolean isDisabled()
com.badlogic.gdx.scenes.scene2d.ui.TextField: void moveCursor(boolean,boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextField: boolean continueCursor(int,int)
com.badlogic.gdx.scenes.scene2d.ui.TextField: void <clinit>()
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard: TextField$DefaultOnscreenKeyboard()
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard: void show(boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask: int keycode
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask: com.badlogic.gdx.scenes.scene2d.ui.TextField this$0
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask: TextField$KeyRepeatTask(com.badlogic.gdx.scenes.scene2d.ui.TextField)
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask: void run()
com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard
com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard: void show(boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener: com.badlogic.gdx.scenes.scene2d.ui.TextField this$0
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener: TextField$TextFieldClickListener(com.badlogic.gdx.scenes.scene2d.ui.TextField)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener: void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener: boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener: void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener: void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener: void setCursorPosition(float,float)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener: void goHome(boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener: void goEnd(boolean)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener: boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener: void scheduleKeyRepeatTask(int)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener: boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener: boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter: boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter: TextField$TextFieldFilter$DigitsOnlyFilter()
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter: boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener: void keyTyped(com.badlogic.gdx.scenes.scene2d.ui.TextField,char)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle: com.badlogic.gdx.graphics.g2d.BitmapFont font
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle: com.badlogic.gdx.graphics.Color fontColor
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle: com.badlogic.gdx.graphics.Color focusedFontColor
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle: com.badlogic.gdx.graphics.Color disabledFontColor
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable background
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable focusedBackground
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledBackground
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable cursor
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable selection
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle: com.badlogic.gdx.graphics.g2d.BitmapFont messageFont
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle: com.badlogic.gdx.graphics.Color messageFontColor
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle: TextField$TextFieldStyle()
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle: TextField$TextFieldStyle(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle: TextField$TextFieldStyle(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle style
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: boolean touched
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: boolean resetOnTouchUp
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: float deadzoneRadius
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: com.badlogic.gdx.math.Circle knobBounds
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: com.badlogic.gdx.math.Circle touchBounds
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: com.badlogic.gdx.math.Circle deadzoneBounds
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: com.badlogic.gdx.math.Vector2 knobPosition
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: com.badlogic.gdx.math.Vector2 knobPercent
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: Touchpad(float,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: Touchpad(float,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: Touchpad(float,com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: void calculatePositionAndValue(float,float,boolean)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: void layout()
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: boolean isTouched()
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: boolean getResetOnTouchUp()
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: void setResetOnTouchUp(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: void setDeadzone(float)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: float getKnobX()
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: float getKnobY()
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: float getKnobPercentX()
com.badlogic.gdx.scenes.scene2d.ui.Touchpad: float getKnobPercentY()
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1: com.badlogic.gdx.scenes.scene2d.ui.Touchpad this$0
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1: Touchpad$1(com.badlogic.gdx.scenes.scene2d.ui.Touchpad)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1: boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1: void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1: void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable background
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable knob
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle: Touchpad$TouchpadStyle()
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle: Touchpad$TouchpadStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle: Touchpad$TouchpadStyle(com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle)
com.badlogic.gdx.scenes.scene2d.ui.Tree
com.badlogic.gdx.scenes.scene2d.ui.Tree: com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle style
com.badlogic.gdx.scenes.scene2d.ui.Tree: com.badlogic.gdx.utils.Array rootNodes
com.badlogic.gdx.scenes.scene2d.ui.Tree: com.badlogic.gdx.scenes.scene2d.utils.Selection selection
com.badlogic.gdx.scenes.scene2d.ui.Tree: float ySpacing
com.badlogic.gdx.scenes.scene2d.ui.Tree: float iconSpacingLeft
com.badlogic.gdx.scenes.scene2d.ui.Tree: float iconSpacingRight
com.badlogic.gdx.scenes.scene2d.ui.Tree: float padding
com.badlogic.gdx.scenes.scene2d.ui.Tree: float indentSpacing
com.badlogic.gdx.scenes.scene2d.ui.Tree: float leftColumnWidth
com.badlogic.gdx.scenes.scene2d.ui.Tree: float prefWidth
com.badlogic.gdx.scenes.scene2d.ui.Tree: float prefHeight
com.badlogic.gdx.scenes.scene2d.ui.Tree: boolean sizeInvalid
com.badlogic.gdx.scenes.scene2d.ui.Tree: com.badlogic.gdx.scenes.scene2d.ui.Tree$Node foundNode
com.badlogic.gdx.scenes.scene2d.ui.Tree: com.badlogic.gdx.scenes.scene2d.ui.Tree$Node overNode
com.badlogic.gdx.scenes.scene2d.ui.Tree: com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener
com.badlogic.gdx.scenes.scene2d.ui.Tree: Tree(com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.Tree: Tree(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Tree: Tree(com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle)
com.badlogic.gdx.scenes.scene2d.ui.Tree: void initialize()
com.badlogic.gdx.scenes.scene2d.ui.Tree: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle)
com.badlogic.gdx.scenes.scene2d.ui.Tree: void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node)
com.badlogic.gdx.scenes.scene2d.ui.Tree: void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node)
com.badlogic.gdx.scenes.scene2d.ui.Tree: void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node)
com.badlogic.gdx.scenes.scene2d.ui.Tree: void clearChildren()
com.badlogic.gdx.scenes.scene2d.ui.Tree: com.badlogic.gdx.utils.Array getNodes()
com.badlogic.gdx.scenes.scene2d.ui.Tree: void invalidate()
com.badlogic.gdx.scenes.scene2d.ui.Tree: void computeSize()
com.badlogic.gdx.scenes.scene2d.ui.Tree: void computeSize(com.badlogic.gdx.utils.Array,float)
com.badlogic.gdx.scenes.scene2d.ui.Tree: void layout()
com.badlogic.gdx.scenes.scene2d.ui.Tree: float layout(com.badlogic.gdx.utils.Array,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Tree: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.Tree: void draw(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.utils.Array,float)
com.badlogic.gdx.scenes.scene2d.ui.Tree: com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getNodeAt(float)
com.badlogic.gdx.scenes.scene2d.ui.Tree: float getNodeAt(com.badlogic.gdx.utils.Array,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Tree: void selectNodes(com.badlogic.gdx.utils.Array,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Tree: com.badlogic.gdx.scenes.scene2d.utils.Selection getSelection()
com.badlogic.gdx.scenes.scene2d.ui.Tree: com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.Tree: com.badlogic.gdx.utils.Array getRootNodes()
com.badlogic.gdx.scenes.scene2d.ui.Tree: com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getOverNode()
com.badlogic.gdx.scenes.scene2d.ui.Tree: void setOverNode(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node)
com.badlogic.gdx.scenes.scene2d.ui.Tree: void setPadding(float)
com.badlogic.gdx.scenes.scene2d.ui.Tree: void setYSpacing(float)
com.badlogic.gdx.scenes.scene2d.ui.Tree: void setIconSpacing(float,float)
com.badlogic.gdx.scenes.scene2d.ui.Tree: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.Tree: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.Tree: void findExpandedObjects(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.ui.Tree: void restoreExpandedObjects(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.ui.Tree: boolean findExpandedObjects(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.ui.Tree: com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.Tree: com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(com.badlogic.gdx.utils.Array,java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.Tree: void collapseAll()
com.badlogic.gdx.scenes.scene2d.ui.Tree: void collapseAll(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.ui.Tree: void expandAll()
com.badlogic.gdx.scenes.scene2d.ui.Tree: void expandAll(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.ui.Tree: com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener()
com.badlogic.gdx.scenes.scene2d.ui.Tree$1
com.badlogic.gdx.scenes.scene2d.ui.Tree$1: com.badlogic.gdx.scenes.scene2d.ui.Tree this$0
com.badlogic.gdx.scenes.scene2d.ui.Tree$1: Tree$1(com.badlogic.gdx.scenes.scene2d.ui.Tree)
com.badlogic.gdx.scenes.scene2d.ui.Tree$1: void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Tree$1: boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Tree$1: void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: com.badlogic.gdx.scenes.scene2d.Actor actor
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: com.badlogic.gdx.scenes.scene2d.ui.Tree$Node parent
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: com.badlogic.gdx.utils.Array children
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: boolean selectable
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: boolean expanded
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: com.badlogic.gdx.scenes.scene2d.utils.Drawable icon
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: float height
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: java.lang.Object object
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: Tree$Node(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void setExpanded(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void addToTree(com.badlogic.gdx.scenes.scene2d.ui.Tree)
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void removeFromTree(com.badlogic.gdx.scenes.scene2d.ui.Tree)
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node)
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void addAll(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node)
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void remove()
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node)
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void removeAll()
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: com.badlogic.gdx.scenes.scene2d.ui.Tree getTree()
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: com.badlogic.gdx.scenes.scene2d.Actor getActor()
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: boolean isExpanded()
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: com.badlogic.gdx.utils.Array getChildren()
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void updateChildren()
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getParent()
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void setIcon(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: java.lang.Object getObject()
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void setObject(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: com.badlogic.gdx.scenes.scene2d.utils.Drawable getIcon()
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void collapseAll()
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void expandAll()
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void expandTo()
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: boolean isSelectable()
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void setSelectable(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void findExpandedObjects(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node: void restoreExpandedObjects(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable plus
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable minus
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable over
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable selection
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable background
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle: Tree$TreeStyle()
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle: Tree$TreeStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle: Tree$TreeStyle(com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle)
com.badlogic.gdx.scenes.scene2d.ui.Value
com.badlogic.gdx.scenes.scene2d.ui.Value: com.badlogic.gdx.scenes.scene2d.ui.Value$Fixed zero
com.badlogic.gdx.scenes.scene2d.ui.Value: com.badlogic.gdx.scenes.scene2d.ui.Value minWidth
com.badlogic.gdx.scenes.scene2d.ui.Value: com.badlogic.gdx.scenes.scene2d.ui.Value minHeight
com.badlogic.gdx.scenes.scene2d.ui.Value: com.badlogic.gdx.scenes.scene2d.ui.Value prefWidth
com.badlogic.gdx.scenes.scene2d.ui.Value: com.badlogic.gdx.scenes.scene2d.ui.Value prefHeight
com.badlogic.gdx.scenes.scene2d.ui.Value: com.badlogic.gdx.scenes.scene2d.ui.Value maxWidth
com.badlogic.gdx.scenes.scene2d.ui.Value: com.badlogic.gdx.scenes.scene2d.ui.Value maxHeight
com.badlogic.gdx.scenes.scene2d.ui.Value: Value()
com.badlogic.gdx.scenes.scene2d.ui.Value: float get(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Value: com.badlogic.gdx.scenes.scene2d.ui.Value percentWidth(float)
com.badlogic.gdx.scenes.scene2d.ui.Value: com.badlogic.gdx.scenes.scene2d.ui.Value percentHeight(float)
com.badlogic.gdx.scenes.scene2d.ui.Value: com.badlogic.gdx.scenes.scene2d.ui.Value percentWidth(float,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Value: com.badlogic.gdx.scenes.scene2d.ui.Value percentHeight(float,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Value: void <clinit>()
com.badlogic.gdx.scenes.scene2d.ui.Value$1
com.badlogic.gdx.scenes.scene2d.ui.Value$1: Value$1()
com.badlogic.gdx.scenes.scene2d.ui.Value$1: float get(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Value$10
com.badlogic.gdx.scenes.scene2d.ui.Value$10: com.badlogic.gdx.scenes.scene2d.Actor val$actor
com.badlogic.gdx.scenes.scene2d.ui.Value$10: float val$percent
com.badlogic.gdx.scenes.scene2d.ui.Value$10: Value$10(com.badlogic.gdx.scenes.scene2d.Actor,float)
com.badlogic.gdx.scenes.scene2d.ui.Value$10: float get(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Value$2
com.badlogic.gdx.scenes.scene2d.ui.Value$2: Value$2()
com.badlogic.gdx.scenes.scene2d.ui.Value$2: float get(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Value$3
com.badlogic.gdx.scenes.scene2d.ui.Value$3: Value$3()
com.badlogic.gdx.scenes.scene2d.ui.Value$3: float get(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Value$4
com.badlogic.gdx.scenes.scene2d.ui.Value$4: Value$4()
com.badlogic.gdx.scenes.scene2d.ui.Value$4: float get(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Value$5
com.badlogic.gdx.scenes.scene2d.ui.Value$5: Value$5()
com.badlogic.gdx.scenes.scene2d.ui.Value$5: float get(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Value$6
com.badlogic.gdx.scenes.scene2d.ui.Value$6: Value$6()
com.badlogic.gdx.scenes.scene2d.ui.Value$6: float get(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Value$7
com.badlogic.gdx.scenes.scene2d.ui.Value$7: float val$percent
com.badlogic.gdx.scenes.scene2d.ui.Value$7: Value$7(float)
com.badlogic.gdx.scenes.scene2d.ui.Value$7: float get(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Value$8
com.badlogic.gdx.scenes.scene2d.ui.Value$8: float val$percent
com.badlogic.gdx.scenes.scene2d.ui.Value$8: Value$8(float)
com.badlogic.gdx.scenes.scene2d.ui.Value$8: float get(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Value$9
com.badlogic.gdx.scenes.scene2d.ui.Value$9: com.badlogic.gdx.scenes.scene2d.Actor val$actor
com.badlogic.gdx.scenes.scene2d.ui.Value$9: float val$percent
com.badlogic.gdx.scenes.scene2d.ui.Value$9: Value$9(com.badlogic.gdx.scenes.scene2d.Actor,float)
com.badlogic.gdx.scenes.scene2d.ui.Value$9: float get(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.Value$Fixed
com.badlogic.gdx.scenes.scene2d.ui.Value$Fixed: float value
com.badlogic.gdx.scenes.scene2d.ui.Value$Fixed: Value$Fixed(float)
com.badlogic.gdx.scenes.scene2d.ui.Value$Fixed: float get(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float prefWidth
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float prefHeight
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: boolean sizeInvalid
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: int align
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: boolean reverse
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: boolean round
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float spacing
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float padTop
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float padLeft
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float padBottom
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float padRight
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float fill
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: VerticalGroup()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: void invalidate()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: void computeSize()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: void layout()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: void setRound(boolean)
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup reverse()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup reverse(boolean)
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: boolean getReverse()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup space(float)
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float getSpace()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup pad(float)
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup pad(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padTop(float)
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padLeft(float)
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padBottom(float)
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padRight(float)
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float getPadTop()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float getPadLeft()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float getPadBottom()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float getPadRight()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup align(int)
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup center()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup left()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup right()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: int getAlign()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup fill()
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup fill(float)
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup: float getFill()
com.badlogic.gdx.scenes.scene2d.ui.Widget
com.badlogic.gdx.scenes.scene2d.ui.Widget: boolean needsLayout
com.badlogic.gdx.scenes.scene2d.ui.Widget: boolean fillParent
com.badlogic.gdx.scenes.scene2d.ui.Widget: boolean layoutEnabled
com.badlogic.gdx.scenes.scene2d.ui.Widget: Widget()
com.badlogic.gdx.scenes.scene2d.ui.Widget: float getMinWidth()
com.badlogic.gdx.scenes.scene2d.ui.Widget: float getMinHeight()
com.badlogic.gdx.scenes.scene2d.ui.Widget: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.Widget: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.Widget: float getMaxWidth()
com.badlogic.gdx.scenes.scene2d.ui.Widget: float getMaxHeight()
com.badlogic.gdx.scenes.scene2d.ui.Widget: void setLayoutEnabled(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Widget: void validate()
com.badlogic.gdx.scenes.scene2d.ui.Widget: boolean needsLayout()
com.badlogic.gdx.scenes.scene2d.ui.Widget: void invalidate()
com.badlogic.gdx.scenes.scene2d.ui.Widget: void invalidateHierarchy()
com.badlogic.gdx.scenes.scene2d.ui.Widget: void sizeChanged()
com.badlogic.gdx.scenes.scene2d.ui.Widget: void pack()
com.badlogic.gdx.scenes.scene2d.ui.Widget: void setFillParent(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Widget: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.Widget: void layout()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: boolean needsLayout
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: boolean fillParent
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: boolean layoutEnabled
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: WidgetGroup()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: float getMinWidth()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: float getMinHeight()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: float getMaxWidth()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: float getMaxHeight()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: void setLayoutEnabled(boolean)
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: void setLayoutEnabled(com.badlogic.gdx.scenes.scene2d.Group,boolean)
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: void validate()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: boolean needsLayout()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: void invalidate()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: void invalidateHierarchy()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: void childrenChanged()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: void sizeChanged()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: void pack()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: void setFillParent(boolean)
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: void layout()
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.Window
com.badlogic.gdx.scenes.scene2d.ui.Window: com.badlogic.gdx.math.Vector2 tmpPosition
com.badlogic.gdx.scenes.scene2d.ui.Window: com.badlogic.gdx.math.Vector2 tmpSize
com.badlogic.gdx.scenes.scene2d.ui.Window: int MOVE
com.badlogic.gdx.scenes.scene2d.ui.Window: com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle style
com.badlogic.gdx.scenes.scene2d.ui.Window: java.lang.String title
com.badlogic.gdx.scenes.scene2d.ui.Window: com.badlogic.gdx.graphics.g2d.BitmapFontCache titleCache
com.badlogic.gdx.scenes.scene2d.ui.Window: boolean isMovable
com.badlogic.gdx.scenes.scene2d.ui.Window: boolean isModal
com.badlogic.gdx.scenes.scene2d.ui.Window: boolean isResizable
com.badlogic.gdx.scenes.scene2d.ui.Window: int resizeBorder
com.badlogic.gdx.scenes.scene2d.ui.Window: boolean dragging
com.badlogic.gdx.scenes.scene2d.ui.Window: int titleAlignment
com.badlogic.gdx.scenes.scene2d.ui.Window: boolean keepWithinStage
com.badlogic.gdx.scenes.scene2d.ui.Window: com.badlogic.gdx.scenes.scene2d.ui.Table buttonTable
com.badlogic.gdx.scenes.scene2d.ui.Window: Window(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin)
com.badlogic.gdx.scenes.scene2d.ui.Window: Window(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Window: Window(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle)
com.badlogic.gdx.scenes.scene2d.ui.Window: void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle)
com.badlogic.gdx.scenes.scene2d.ui.Window: com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle getStyle()
com.badlogic.gdx.scenes.scene2d.ui.Window: void keepWithinStage()
com.badlogic.gdx.scenes.scene2d.ui.Window: void draw(com.badlogic.gdx.graphics.g2d.Batch,float)
com.badlogic.gdx.scenes.scene2d.ui.Window: void drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Window: com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean)
com.badlogic.gdx.scenes.scene2d.ui.Window: void setTitle(java.lang.String)
com.badlogic.gdx.scenes.scene2d.ui.Window: java.lang.String getTitle()
com.badlogic.gdx.scenes.scene2d.ui.Window: void setTitleAlignment(int)
com.badlogic.gdx.scenes.scene2d.ui.Window: boolean isMovable()
com.badlogic.gdx.scenes.scene2d.ui.Window: void setMovable(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Window: boolean isModal()
com.badlogic.gdx.scenes.scene2d.ui.Window: void setModal(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Window: void setKeepWithinStage(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Window: boolean isResizable()
com.badlogic.gdx.scenes.scene2d.ui.Window: void setResizable(boolean)
com.badlogic.gdx.scenes.scene2d.ui.Window: void setResizeBorder(int)
com.badlogic.gdx.scenes.scene2d.ui.Window: boolean isDragging()
com.badlogic.gdx.scenes.scene2d.ui.Window: float getTitleWidth()
com.badlogic.gdx.scenes.scene2d.ui.Window: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.ui.Window: com.badlogic.gdx.scenes.scene2d.ui.Table getButtonTable()
com.badlogic.gdx.scenes.scene2d.ui.Window: void <clinit>()
com.badlogic.gdx.scenes.scene2d.ui.Window$1
com.badlogic.gdx.scenes.scene2d.ui.Window$1: com.badlogic.gdx.scenes.scene2d.ui.Window this$0
com.badlogic.gdx.scenes.scene2d.ui.Window$1: Window$1(com.badlogic.gdx.scenes.scene2d.ui.Window)
com.badlogic.gdx.scenes.scene2d.ui.Window$1: boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.Window$2
com.badlogic.gdx.scenes.scene2d.ui.Window$2: int edge
com.badlogic.gdx.scenes.scene2d.ui.Window$2: float startX
com.badlogic.gdx.scenes.scene2d.ui.Window$2: float startY
com.badlogic.gdx.scenes.scene2d.ui.Window$2: float lastX
com.badlogic.gdx.scenes.scene2d.ui.Window$2: float lastY
com.badlogic.gdx.scenes.scene2d.ui.Window$2: com.badlogic.gdx.scenes.scene2d.ui.Window this$0
com.badlogic.gdx.scenes.scene2d.ui.Window$2: Window$2(com.badlogic.gdx.scenes.scene2d.ui.Window)
com.badlogic.gdx.scenes.scene2d.ui.Window$2: boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.Window$2: void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.ui.Window$2: void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.ui.Window$2: boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float)
com.badlogic.gdx.scenes.scene2d.ui.Window$2: boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.ui.Window$2: boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int)
com.badlogic.gdx.scenes.scene2d.ui.Window$2: boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int)
com.badlogic.gdx.scenes.scene2d.ui.Window$2: boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char)
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable background
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle: com.badlogic.gdx.graphics.g2d.BitmapFont titleFont
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle: com.badlogic.gdx.graphics.Color titleFontColor
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle: com.badlogic.gdx.scenes.scene2d.utils.Drawable stageBackground
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle: Window$WindowStyle()
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle: Window$WindowStyle(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle: Window$WindowStyle(com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: com.badlogic.gdx.math.Vector2 tmpCoords
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: com.badlogic.gdx.input.GestureDetector detector
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: com.badlogic.gdx.scenes.scene2d.InputEvent event
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: com.badlogic.gdx.scenes.scene2d.Actor actor
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: com.badlogic.gdx.scenes.scene2d.Actor touchDownTarget
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: ActorGestureListener()
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: ActorGestureListener(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: boolean handle(com.badlogic.gdx.scenes.scene2d.Event)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: void touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: void tap(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: boolean longPress(com.badlogic.gdx.scenes.scene2d.Actor,float,float)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: void fling(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: void pan(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: void zoom(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: void pinch(com.badlogic.gdx.scenes.scene2d.InputEvent,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: com.badlogic.gdx.input.GestureDetector getGestureDetector()
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: com.badlogic.gdx.scenes.scene2d.Actor getTouchDownTarget()
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener: void <clinit>()
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1: com.badlogic.gdx.math.Vector2 initialPointer1
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1: com.badlogic.gdx.math.Vector2 initialPointer2
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1: com.badlogic.gdx.math.Vector2 pointer1
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1: com.badlogic.gdx.math.Vector2 pointer2
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1: com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener this$0
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1: ActorGestureListener$1(com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1: boolean tap(float,float,int,int)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1: boolean longPress(float,float)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1: boolean fling(float,float,int)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1: boolean pan(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1: boolean zoom(float,float)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1: boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2: int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2: void <clinit>()
com.badlogic.gdx.scenes.scene2d.utils.Align
com.badlogic.gdx.scenes.scene2d.utils.Align: int center
com.badlogic.gdx.scenes.scene2d.utils.Align: int top
com.badlogic.gdx.scenes.scene2d.utils.Align: int bottom
com.badlogic.gdx.scenes.scene2d.utils.Align: int left
com.badlogic.gdx.scenes.scene2d.utils.Align: int right
com.badlogic.gdx.scenes.scene2d.utils.Align: Align()
com.badlogic.gdx.scenes.scene2d.utils.ArraySelection
com.badlogic.gdx.scenes.scene2d.utils.ArraySelection: com.badlogic.gdx.utils.Array items
com.badlogic.gdx.scenes.scene2d.utils.ArraySelection: boolean rangeSelect
com.badlogic.gdx.scenes.scene2d.utils.ArraySelection: ArraySelection(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.utils.ArraySelection: void choose(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.utils.ArraySelection: boolean getRangeSelect()
com.badlogic.gdx.scenes.scene2d.utils.ArraySelection: void setRangeSelect(boolean)
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: float leftWidth
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: float rightWidth
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: float topHeight
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: float bottomHeight
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: float minWidth
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: float minHeight
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: BaseDrawable()
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: BaseDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable)
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: float getLeftWidth()
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: void setLeftWidth(float)
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: float getRightWidth()
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: void setRightWidth(float)
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: float getTopHeight()
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: void setTopHeight(float)
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: float getBottomHeight()
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: void setBottomHeight(float)
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: float getMinWidth()
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: void setMinWidth(float)
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: float getMinHeight()
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable: void setMinHeight(float)
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener: ChangeListener()
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener: boolean handle(com.badlogic.gdx.scenes.scene2d.Event)
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener: void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent: ChangeListener$ChangeEvent()
com.badlogic.gdx.scenes.scene2d.utils.ClickListener
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: float visualPressedDuration
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: float tapSquareSize
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: float touchDownX
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: float touchDownY
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: int pressedPointer
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: int pressedButton
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: int button
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: boolean pressed
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: boolean over
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: boolean cancelled
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: float visualPressedTime
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: long tapCountInterval
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: int tapCount
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: long lastTapTime
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: ClickListener()
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: ClickListener(int)
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: void enter(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: void cancel()
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float)
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: boolean isOver(com.badlogic.gdx.scenes.scene2d.Actor,float,float)
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: boolean inTapSquare(float,float)
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: boolean inTapSquare()
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: void invalidateTapSquare()
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: boolean isPressed()
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: boolean isVisualPressed()
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: boolean isOver()
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: void setTapSquareSize(float)
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: float getTapSquareSize()
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: void setTapCountInterval(float)
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: int getTapCount()
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: float getTouchDownX()
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: float getTouchDownY()
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: int getPressedButton()
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: int getPressedPointer()
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: int getButton()
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: void setButton(int)
com.badlogic.gdx.scenes.scene2d.utils.ClickListener: void <clinit>()
com.badlogic.gdx.scenes.scene2d.utils.Cullable
com.badlogic.gdx.scenes.scene2d.utils.Cullable: void setCullingArea(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.scenes.scene2d.utils.Disableable
com.badlogic.gdx.scenes.scene2d.utils.Disableable: void setDisabled(boolean)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: com.badlogic.gdx.math.Vector2 tmpVector
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload payload
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: com.badlogic.gdx.scenes.scene2d.Actor dragActor
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target target
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: boolean isValidTarget
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: com.badlogic.gdx.utils.Array targets
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: com.badlogic.gdx.utils.ObjectMap sourceListeners
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: float tapSquareSize
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: int button
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: float dragActorX
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: float dragActorY
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: float touchOffsetX
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: float touchOffsetY
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: long dragStartTime
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: int dragTime
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: int activePointer
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: DragAndDrop()
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: void addSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: void removeSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: void addTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: void removeTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: void clear()
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: void setTapSquareSize(float)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: void setButton(int)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: void setDragActorPosition(float,float)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: void setTouchOffset(float,float)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: boolean isDragging()
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: com.badlogic.gdx.scenes.scene2d.Actor getDragActor()
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: void setDragTime(int)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop: void <clinit>()
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1: com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source val$source
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1: com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop this$0
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1: DragAndDrop$1(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1: void dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1: void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1: void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload: com.badlogic.gdx.scenes.scene2d.Actor dragActor
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload: com.badlogic.gdx.scenes.scene2d.Actor validDragActor
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload: com.badlogic.gdx.scenes.scene2d.Actor invalidDragActor
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload: java.lang.Object object
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload: DragAndDrop$Payload()
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload: void setDragActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload: com.badlogic.gdx.scenes.scene2d.Actor getDragActor()
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload: void setValidDragActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload: com.badlogic.gdx.scenes.scene2d.Actor getValidDragActor()
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload: void setInvalidDragActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload: com.badlogic.gdx.scenes.scene2d.Actor getInvalidDragActor()
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload: java.lang.Object getObject()
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload: void setObject(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source: com.badlogic.gdx.scenes.scene2d.Actor actor
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source: DragAndDrop$Source(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source: com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source: void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source: com.badlogic.gdx.scenes.scene2d.Actor getActor()
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target: com.badlogic.gdx.scenes.scene2d.Actor actor
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target: DragAndDrop$Target(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target: boolean drag(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload,float,float,int)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target: void reset(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target: void drop(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload,float,float,int)
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target: com.badlogic.gdx.scenes.scene2d.Actor getActor()
com.badlogic.gdx.scenes.scene2d.utils.DragListener
com.badlogic.gdx.scenes.scene2d.utils.DragListener: float tapSquareSize
com.badlogic.gdx.scenes.scene2d.utils.DragListener: float touchDownX
com.badlogic.gdx.scenes.scene2d.utils.DragListener: float touchDownY
com.badlogic.gdx.scenes.scene2d.utils.DragListener: int pressedPointer
com.badlogic.gdx.scenes.scene2d.utils.DragListener: int button
com.badlogic.gdx.scenes.scene2d.utils.DragListener: boolean dragging
com.badlogic.gdx.scenes.scene2d.utils.DragListener: float deltaX
com.badlogic.gdx.scenes.scene2d.utils.DragListener: float deltaY
com.badlogic.gdx.scenes.scene2d.utils.DragListener: DragListener()
com.badlogic.gdx.scenes.scene2d.utils.DragListener: boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.utils.DragListener: void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.utils.DragListener: void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int)
com.badlogic.gdx.scenes.scene2d.utils.DragListener: void dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.utils.DragListener: void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.utils.DragListener: void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.utils.DragListener: void cancel()
com.badlogic.gdx.scenes.scene2d.utils.DragListener: boolean isDragging()
com.badlogic.gdx.scenes.scene2d.utils.DragListener: void setTapSquareSize(float)
com.badlogic.gdx.scenes.scene2d.utils.DragListener: float getTapSquareSize()
com.badlogic.gdx.scenes.scene2d.utils.DragListener: float getTouchDownX()
com.badlogic.gdx.scenes.scene2d.utils.DragListener: float getTouchDownY()
com.badlogic.gdx.scenes.scene2d.utils.DragListener: float getDeltaX()
com.badlogic.gdx.scenes.scene2d.utils.DragListener: float getDeltaY()
com.badlogic.gdx.scenes.scene2d.utils.DragListener: int getButton()
com.badlogic.gdx.scenes.scene2d.utils.DragListener: void setButton(int)
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane scroll
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener: com.badlogic.gdx.utils.Timer$Task scrollUp
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener: com.badlogic.gdx.utils.Timer$Task scrollDown
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener: com.badlogic.gdx.math.Interpolation interpolation
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener: float minSpeed
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener: float maxSpeed
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener: float tickSecs
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener: long startTime
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener: long rampTime
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener: DragScrollListener(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane)
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener: void setup(float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener: float getScrollPixels()
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener: void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener: void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int)
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane val$scroll
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1: com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener this$0
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1: DragScrollListener$1(com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener,com.badlogic.gdx.scenes.scene2d.ui.ScrollPane)
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1: void run()
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane val$scroll
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2: com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener this$0
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2: DragScrollListener$2(com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener,com.badlogic.gdx.scenes.scene2d.ui.ScrollPane)
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2: void run()
com.badlogic.gdx.scenes.scene2d.utils.Drawable
com.badlogic.gdx.scenes.scene2d.utils.Drawable: void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.Drawable: float getLeftWidth()
com.badlogic.gdx.scenes.scene2d.utils.Drawable: void setLeftWidth(float)
com.badlogic.gdx.scenes.scene2d.utils.Drawable: float getRightWidth()
com.badlogic.gdx.scenes.scene2d.utils.Drawable: void setRightWidth(float)
com.badlogic.gdx.scenes.scene2d.utils.Drawable: float getTopHeight()
com.badlogic.gdx.scenes.scene2d.utils.Drawable: void setTopHeight(float)
com.badlogic.gdx.scenes.scene2d.utils.Drawable: float getBottomHeight()
com.badlogic.gdx.scenes.scene2d.utils.Drawable: void setBottomHeight(float)
com.badlogic.gdx.scenes.scene2d.utils.Drawable: float getMinWidth()
com.badlogic.gdx.scenes.scene2d.utils.Drawable: void setMinWidth(float)
com.badlogic.gdx.scenes.scene2d.utils.Drawable: float getMinHeight()
com.badlogic.gdx.scenes.scene2d.utils.Drawable: void setMinHeight(float)
com.badlogic.gdx.scenes.scene2d.utils.FocusListener
com.badlogic.gdx.scenes.scene2d.utils.FocusListener: FocusListener()
com.badlogic.gdx.scenes.scene2d.utils.FocusListener: boolean handle(com.badlogic.gdx.scenes.scene2d.Event)
com.badlogic.gdx.scenes.scene2d.utils.FocusListener: void keyboardFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean)
com.badlogic.gdx.scenes.scene2d.utils.FocusListener: void scrollFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean)
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1: int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1: void <clinit>()
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent: boolean focused
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent: com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type type
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent: com.badlogic.gdx.scenes.scene2d.Actor relatedActor
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent: FocusListener$FocusEvent()
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent: void reset()
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent: boolean isFocused()
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent: void setFocused(boolean)
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent: com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type getType()
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent: void setType(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type)
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent: com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor()
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent: void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type: com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type keyboard
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type: com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type scroll
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type: com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] $VALUES
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type: com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] values()
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type: com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type valueOf(java.lang.String)
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type: FocusListener$FocusEvent$Type(java.lang.String,int)
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type: void <clinit>()
com.badlogic.gdx.scenes.scene2d.utils.Layout
com.badlogic.gdx.scenes.scene2d.utils.Layout: void layout()
com.badlogic.gdx.scenes.scene2d.utils.Layout: void invalidate()
com.badlogic.gdx.scenes.scene2d.utils.Layout: void invalidateHierarchy()
com.badlogic.gdx.scenes.scene2d.utils.Layout: void validate()
com.badlogic.gdx.scenes.scene2d.utils.Layout: void pack()
com.badlogic.gdx.scenes.scene2d.utils.Layout: void setFillParent(boolean)
com.badlogic.gdx.scenes.scene2d.utils.Layout: void setLayoutEnabled(boolean)
com.badlogic.gdx.scenes.scene2d.utils.Layout: float getMinWidth()
com.badlogic.gdx.scenes.scene2d.utils.Layout: float getMinHeight()
com.badlogic.gdx.scenes.scene2d.utils.Layout: float getPrefWidth()
com.badlogic.gdx.scenes.scene2d.utils.Layout: float getPrefHeight()
com.badlogic.gdx.scenes.scene2d.utils.Layout: float getMaxWidth()
com.badlogic.gdx.scenes.scene2d.utils.Layout: float getMaxHeight()
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable: com.badlogic.gdx.graphics.g2d.NinePatch patch
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable: NinePatchDrawable()
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable: NinePatchDrawable(com.badlogic.gdx.graphics.g2d.NinePatch)
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable: NinePatchDrawable(com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable)
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable: void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable: void setPatch(com.badlogic.gdx.graphics.g2d.NinePatch)
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable: com.badlogic.gdx.graphics.g2d.NinePatch getPatch()
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack: com.badlogic.gdx.utils.Array scissors
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack: com.badlogic.gdx.math.Vector3 tmp
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack: com.badlogic.gdx.math.Rectangle viewport
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack: ScissorStack()
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack: boolean pushScissors(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack: com.badlogic.gdx.math.Rectangle popScissors()
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack: void fix(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack: void calculateScissors(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack: void calculateScissors(com.badlogic.gdx.graphics.Camera,float,float,float,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack: com.badlogic.gdx.math.Rectangle getViewport()
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack: void <clinit>()
com.badlogic.gdx.scenes.scene2d.utils.Selection
com.badlogic.gdx.scenes.scene2d.utils.Selection: com.badlogic.gdx.scenes.scene2d.Actor actor
com.badlogic.gdx.scenes.scene2d.utils.Selection: com.badlogic.gdx.utils.ObjectSet selected
com.badlogic.gdx.scenes.scene2d.utils.Selection: com.badlogic.gdx.utils.ObjectSet old
com.badlogic.gdx.scenes.scene2d.utils.Selection: boolean isDisabled
com.badlogic.gdx.scenes.scene2d.utils.Selection: boolean toggle
com.badlogic.gdx.scenes.scene2d.utils.Selection: boolean multiple
com.badlogic.gdx.scenes.scene2d.utils.Selection: boolean required
com.badlogic.gdx.scenes.scene2d.utils.Selection: boolean programmaticChangeEvents
com.badlogic.gdx.scenes.scene2d.utils.Selection: java.lang.Object lastSelected
com.badlogic.gdx.scenes.scene2d.utils.Selection: Selection()
com.badlogic.gdx.scenes.scene2d.utils.Selection: void setActor(com.badlogic.gdx.scenes.scene2d.Actor)
com.badlogic.gdx.scenes.scene2d.utils.Selection: void choose(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.utils.Selection: boolean hasItems()
com.badlogic.gdx.scenes.scene2d.utils.Selection: boolean isEmpty()
com.badlogic.gdx.scenes.scene2d.utils.Selection: int size()
com.badlogic.gdx.scenes.scene2d.utils.Selection: com.badlogic.gdx.utils.ObjectSet items()
com.badlogic.gdx.scenes.scene2d.utils.Selection: java.lang.Object first()
com.badlogic.gdx.scenes.scene2d.utils.Selection: void snapshot()
com.badlogic.gdx.scenes.scene2d.utils.Selection: void revert()
com.badlogic.gdx.scenes.scene2d.utils.Selection: void cleanup()
com.badlogic.gdx.scenes.scene2d.utils.Selection: void set(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.utils.Selection: void setAll(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.utils.Selection: void add(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.utils.Selection: void addAll(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.utils.Selection: void remove(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.utils.Selection: void removeAll(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.utils.Selection: void clear()
com.badlogic.gdx.scenes.scene2d.utils.Selection: boolean fireChangeEvent()
com.badlogic.gdx.scenes.scene2d.utils.Selection: boolean contains(java.lang.Object)
com.badlogic.gdx.scenes.scene2d.utils.Selection: java.lang.Object getLastSelected()
com.badlogic.gdx.scenes.scene2d.utils.Selection: java.util.Iterator iterator()
com.badlogic.gdx.scenes.scene2d.utils.Selection: com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.scenes.scene2d.utils.Selection: com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.scenes.scene2d.utils.Selection: void setDisabled(boolean)
com.badlogic.gdx.scenes.scene2d.utils.Selection: boolean isDisabled()
com.badlogic.gdx.scenes.scene2d.utils.Selection: boolean getToggle()
com.badlogic.gdx.scenes.scene2d.utils.Selection: void setToggle(boolean)
com.badlogic.gdx.scenes.scene2d.utils.Selection: boolean getMultiple()
com.badlogic.gdx.scenes.scene2d.utils.Selection: void setMultiple(boolean)
com.badlogic.gdx.scenes.scene2d.utils.Selection: boolean getRequired()
com.badlogic.gdx.scenes.scene2d.utils.Selection: void setRequired(boolean)
com.badlogic.gdx.scenes.scene2d.utils.Selection: void setProgrammaticChangeEvents(boolean)
com.badlogic.gdx.scenes.scene2d.utils.Selection: java.lang.String toString()
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable: com.badlogic.gdx.graphics.g2d.Sprite sprite
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable: SpriteDrawable()
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable: SpriteDrawable(com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable: SpriteDrawable(com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable)
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable: void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable: void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable: void setSprite(com.badlogic.gdx.graphics.g2d.Sprite)
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable: com.badlogic.gdx.graphics.g2d.Sprite getSprite()
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable: com.badlogic.gdx.graphics.g2d.TextureRegion region
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable: TextureRegionDrawable()
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable: TextureRegionDrawable(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable: TextureRegionDrawable(com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable)
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable: void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable: void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable: void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable: com.badlogic.gdx.graphics.g2d.TextureRegion getRegion()
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable: TiledDrawable()
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable: TiledDrawable(com.badlogic.gdx.graphics.g2d.TextureRegion)
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable: TiledDrawable(com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable)
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable: void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.TransformDrawable
com.badlogic.gdx.scenes.scene2d.utils.TransformDrawable: void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.scenes.scene2d.utils.UIUtils
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: boolean isMac
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: boolean isWindows
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: boolean isLinux
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: UIUtils()
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: boolean left()
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: boolean left(int)
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: boolean right()
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: boolean right(int)
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: boolean middle()
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: boolean middle(int)
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: boolean shift()
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: boolean shift(int)
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: boolean ctrl()
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: boolean ctrl(int)
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: boolean alt()
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: boolean alt(int)
com.badlogic.gdx.scenes.scene2d.utils.UIUtils: void <clinit>()
com.badlogic.gdx.utils.Array
com.badlogic.gdx.utils.Array: java.lang.Object[] items
com.badlogic.gdx.utils.Array: int size
com.badlogic.gdx.utils.Array: boolean ordered
com.badlogic.gdx.utils.Array: com.badlogic.gdx.utils.Array$ArrayIterable iterable
com.badlogic.gdx.utils.Array: com.badlogic.gdx.utils.Predicate$PredicateIterable predicateIterable
com.badlogic.gdx.utils.Array: Array()
com.badlogic.gdx.utils.Array: Array(int)
com.badlogic.gdx.utils.Array: Array(boolean,int)
com.badlogic.gdx.utils.Array: Array(boolean,int,java.lang.Class)
com.badlogic.gdx.utils.Array: Array(java.lang.Class)
com.badlogic.gdx.utils.Array: Array(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.Array: Array(java.lang.Object[])
com.badlogic.gdx.utils.Array: Array(boolean,java.lang.Object[],int,int)
com.badlogic.gdx.utils.Array: void add(java.lang.Object)
com.badlogic.gdx.utils.Array: void addAll(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.Array: void addAll(com.badlogic.gdx.utils.Array,int,int)
com.badlogic.gdx.utils.Array: void addAll(java.lang.Object[])
com.badlogic.gdx.utils.Array: void addAll(java.lang.Object[],int,int)
com.badlogic.gdx.utils.Array: java.lang.Object get(int)
com.badlogic.gdx.utils.Array: void set(int,java.lang.Object)
com.badlogic.gdx.utils.Array: void insert(int,java.lang.Object)
com.badlogic.gdx.utils.Array: void swap(int,int)
com.badlogic.gdx.utils.Array: boolean contains(java.lang.Object,boolean)
com.badlogic.gdx.utils.Array: int indexOf(java.lang.Object,boolean)
com.badlogic.gdx.utils.Array: int lastIndexOf(java.lang.Object,boolean)
com.badlogic.gdx.utils.Array: boolean removeValue(java.lang.Object,boolean)
com.badlogic.gdx.utils.Array: java.lang.Object removeIndex(int)
com.badlogic.gdx.utils.Array: void removeRange(int,int)
com.badlogic.gdx.utils.Array: boolean removeAll(com.badlogic.gdx.utils.Array,boolean)
com.badlogic.gdx.utils.Array: java.lang.Object pop()
com.badlogic.gdx.utils.Array: java.lang.Object peek()
com.badlogic.gdx.utils.Array: java.lang.Object first()
com.badlogic.gdx.utils.Array: void clear()
com.badlogic.gdx.utils.Array: java.lang.Object[] shrink()
com.badlogic.gdx.utils.Array: java.lang.Object[] ensureCapacity(int)
com.badlogic.gdx.utils.Array: java.lang.Object[] resize(int)
com.badlogic.gdx.utils.Array: void sort()
com.badlogic.gdx.utils.Array: void sort(java.util.Comparator)
com.badlogic.gdx.utils.Array: java.lang.Object selectRanked(java.util.Comparator,int)
com.badlogic.gdx.utils.Array: int selectRankedIndex(java.util.Comparator,int)
com.badlogic.gdx.utils.Array: void reverse()
com.badlogic.gdx.utils.Array: void shuffle()
com.badlogic.gdx.utils.Array: java.util.Iterator iterator()
com.badlogic.gdx.utils.Array: java.lang.Iterable select(com.badlogic.gdx.utils.Predicate)
com.badlogic.gdx.utils.Array: void truncate(int)
com.badlogic.gdx.utils.Array: java.lang.Object random()
com.badlogic.gdx.utils.Array: java.lang.Object[] toArray()
com.badlogic.gdx.utils.Array: java.lang.Object[] toArray(java.lang.Class)
com.badlogic.gdx.utils.Array: boolean equals(java.lang.Object)
com.badlogic.gdx.utils.Array: java.lang.String toString()
com.badlogic.gdx.utils.Array: java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.Array: com.badlogic.gdx.utils.Array of(java.lang.Class)
com.badlogic.gdx.utils.Array: com.badlogic.gdx.utils.Array of(boolean,int,java.lang.Class)
com.badlogic.gdx.utils.Array: com.badlogic.gdx.utils.Array with(java.lang.Object[])
com.badlogic.gdx.utils.Array$ArrayIterable
com.badlogic.gdx.utils.Array$ArrayIterable: com.badlogic.gdx.utils.Array array
com.badlogic.gdx.utils.Array$ArrayIterable: boolean allowRemove
com.badlogic.gdx.utils.Array$ArrayIterable: com.badlogic.gdx.utils.Array$ArrayIterator iterator1
com.badlogic.gdx.utils.Array$ArrayIterable: com.badlogic.gdx.utils.Array$ArrayIterator iterator2
com.badlogic.gdx.utils.Array$ArrayIterable: Array$ArrayIterable(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.Array$ArrayIterable: Array$ArrayIterable(com.badlogic.gdx.utils.Array,boolean)
com.badlogic.gdx.utils.Array$ArrayIterable: java.util.Iterator iterator()
com.badlogic.gdx.utils.Array$ArrayIterator
com.badlogic.gdx.utils.Array$ArrayIterator: com.badlogic.gdx.utils.Array array
com.badlogic.gdx.utils.Array$ArrayIterator: boolean allowRemove
com.badlogic.gdx.utils.Array$ArrayIterator: int index
com.badlogic.gdx.utils.Array$ArrayIterator: boolean valid
com.badlogic.gdx.utils.Array$ArrayIterator: Array$ArrayIterator(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.Array$ArrayIterator: Array$ArrayIterator(com.badlogic.gdx.utils.Array,boolean)
com.badlogic.gdx.utils.Array$ArrayIterator: boolean hasNext()
com.badlogic.gdx.utils.Array$ArrayIterator: java.lang.Object next()
com.badlogic.gdx.utils.Array$ArrayIterator: void remove()
com.badlogic.gdx.utils.Array$ArrayIterator: void reset()
com.badlogic.gdx.utils.Array$ArrayIterator: java.util.Iterator iterator()
com.badlogic.gdx.utils.ArrayMap
com.badlogic.gdx.utils.ArrayMap: java.lang.Object[] keys
com.badlogic.gdx.utils.ArrayMap: java.lang.Object[] values
com.badlogic.gdx.utils.ArrayMap: int size
com.badlogic.gdx.utils.ArrayMap: boolean ordered
com.badlogic.gdx.utils.ArrayMap: com.badlogic.gdx.utils.ArrayMap$Entries entries1
com.badlogic.gdx.utils.ArrayMap: com.badlogic.gdx.utils.ArrayMap$Entries entries2
com.badlogic.gdx.utils.ArrayMap: com.badlogic.gdx.utils.ArrayMap$Values valuesIter1
com.badlogic.gdx.utils.ArrayMap: com.badlogic.gdx.utils.ArrayMap$Values valuesIter2
com.badlogic.gdx.utils.ArrayMap: com.badlogic.gdx.utils.ArrayMap$Keys keysIter1
com.badlogic.gdx.utils.ArrayMap: com.badlogic.gdx.utils.ArrayMap$Keys keysIter2
com.badlogic.gdx.utils.ArrayMap: ArrayMap()
com.badlogic.gdx.utils.ArrayMap: ArrayMap(int)
com.badlogic.gdx.utils.ArrayMap: ArrayMap(boolean,int)
com.badlogic.gdx.utils.ArrayMap: ArrayMap(boolean,int,java.lang.Class,java.lang.Class)
com.badlogic.gdx.utils.ArrayMap: ArrayMap(java.lang.Class,java.lang.Class)
com.badlogic.gdx.utils.ArrayMap: ArrayMap(com.badlogic.gdx.utils.ArrayMap)
com.badlogic.gdx.utils.ArrayMap: void put(java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.ArrayMap: void put(java.lang.Object,java.lang.Object,int)
com.badlogic.gdx.utils.ArrayMap: void putAll(com.badlogic.gdx.utils.ArrayMap)
com.badlogic.gdx.utils.ArrayMap: void putAll(com.badlogic.gdx.utils.ArrayMap,int,int)
com.badlogic.gdx.utils.ArrayMap: java.lang.Object get(java.lang.Object)
com.badlogic.gdx.utils.ArrayMap: java.lang.Object getKey(java.lang.Object,boolean)
com.badlogic.gdx.utils.ArrayMap: java.lang.Object getKeyAt(int)
com.badlogic.gdx.utils.ArrayMap: java.lang.Object getValueAt(int)
com.badlogic.gdx.utils.ArrayMap: java.lang.Object firstKey()
com.badlogic.gdx.utils.ArrayMap: java.lang.Object firstValue()
com.badlogic.gdx.utils.ArrayMap: void setKey(int,java.lang.Object)
com.badlogic.gdx.utils.ArrayMap: void setValue(int,java.lang.Object)
com.badlogic.gdx.utils.ArrayMap: void insert(int,java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.ArrayMap: boolean containsKey(java.lang.Object)
com.badlogic.gdx.utils.ArrayMap: boolean containsValue(java.lang.Object,boolean)
com.badlogic.gdx.utils.ArrayMap: int indexOfKey(java.lang.Object)
com.badlogic.gdx.utils.ArrayMap: int indexOfValue(java.lang.Object,boolean)
com.badlogic.gdx.utils.ArrayMap: java.lang.Object removeKey(java.lang.Object)
com.badlogic.gdx.utils.ArrayMap: boolean removeValue(java.lang.Object,boolean)
com.badlogic.gdx.utils.ArrayMap: void removeIndex(int)
com.badlogic.gdx.utils.ArrayMap: java.lang.Object peekKey()
com.badlogic.gdx.utils.ArrayMap: java.lang.Object peekValue()
com.badlogic.gdx.utils.ArrayMap: void clear(int)
com.badlogic.gdx.utils.ArrayMap: void clear()
com.badlogic.gdx.utils.ArrayMap: void shrink()
com.badlogic.gdx.utils.ArrayMap: void ensureCapacity(int)
com.badlogic.gdx.utils.ArrayMap: void resize(int)
com.badlogic.gdx.utils.ArrayMap: void reverse()
com.badlogic.gdx.utils.ArrayMap: void shuffle()
com.badlogic.gdx.utils.ArrayMap: void truncate(int)
com.badlogic.gdx.utils.ArrayMap: java.lang.String toString()
com.badlogic.gdx.utils.ArrayMap: java.util.Iterator iterator()
com.badlogic.gdx.utils.ArrayMap: com.badlogic.gdx.utils.ArrayMap$Entries entries()
com.badlogic.gdx.utils.ArrayMap: com.badlogic.gdx.utils.ArrayMap$Values values()
com.badlogic.gdx.utils.ArrayMap: com.badlogic.gdx.utils.ArrayMap$Keys keys()
com.badlogic.gdx.utils.ArrayMap$Entries
com.badlogic.gdx.utils.ArrayMap$Entries: com.badlogic.gdx.utils.ArrayMap map
com.badlogic.gdx.utils.ArrayMap$Entries: com.badlogic.gdx.utils.ObjectMap$Entry entry
com.badlogic.gdx.utils.ArrayMap$Entries: int index
com.badlogic.gdx.utils.ArrayMap$Entries: boolean valid
com.badlogic.gdx.utils.ArrayMap$Entries: ArrayMap$Entries(com.badlogic.gdx.utils.ArrayMap)
com.badlogic.gdx.utils.ArrayMap$Entries: boolean hasNext()
com.badlogic.gdx.utils.ArrayMap$Entries: java.util.Iterator iterator()
com.badlogic.gdx.utils.ArrayMap$Entries: com.badlogic.gdx.utils.ObjectMap$Entry next()
com.badlogic.gdx.utils.ArrayMap$Entries: void remove()
com.badlogic.gdx.utils.ArrayMap$Entries: void reset()
com.badlogic.gdx.utils.ArrayMap$Entries: java.lang.Object next()
com.badlogic.gdx.utils.ArrayMap$Keys
com.badlogic.gdx.utils.ArrayMap$Keys: com.badlogic.gdx.utils.ArrayMap map
com.badlogic.gdx.utils.ArrayMap$Keys: int index
com.badlogic.gdx.utils.ArrayMap$Keys: boolean valid
com.badlogic.gdx.utils.ArrayMap$Keys: ArrayMap$Keys(com.badlogic.gdx.utils.ArrayMap)
com.badlogic.gdx.utils.ArrayMap$Keys: boolean hasNext()
com.badlogic.gdx.utils.ArrayMap$Keys: java.util.Iterator iterator()
com.badlogic.gdx.utils.ArrayMap$Keys: java.lang.Object next()
com.badlogic.gdx.utils.ArrayMap$Keys: void remove()
com.badlogic.gdx.utils.ArrayMap$Keys: void reset()
com.badlogic.gdx.utils.ArrayMap$Keys: com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.ArrayMap$Keys: com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.ArrayMap$Values
com.badlogic.gdx.utils.ArrayMap$Values: com.badlogic.gdx.utils.ArrayMap map
com.badlogic.gdx.utils.ArrayMap$Values: int index
com.badlogic.gdx.utils.ArrayMap$Values: boolean valid
com.badlogic.gdx.utils.ArrayMap$Values: ArrayMap$Values(com.badlogic.gdx.utils.ArrayMap)
com.badlogic.gdx.utils.ArrayMap$Values: boolean hasNext()
com.badlogic.gdx.utils.ArrayMap$Values: java.util.Iterator iterator()
com.badlogic.gdx.utils.ArrayMap$Values: java.lang.Object next()
com.badlogic.gdx.utils.ArrayMap$Values: void remove()
com.badlogic.gdx.utils.ArrayMap$Values: void reset()
com.badlogic.gdx.utils.ArrayMap$Values: com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.ArrayMap$Values: com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.AtomicQueue
com.badlogic.gdx.utils.AtomicQueue: java.util.concurrent.atomic.AtomicInteger writeIndex
com.badlogic.gdx.utils.AtomicQueue: java.util.concurrent.atomic.AtomicInteger readIndex
com.badlogic.gdx.utils.AtomicQueue: java.util.concurrent.atomic.AtomicReferenceArray queue
com.badlogic.gdx.utils.AtomicQueue: AtomicQueue(int)
com.badlogic.gdx.utils.AtomicQueue: int next(int)
com.badlogic.gdx.utils.AtomicQueue: boolean put(java.lang.Object)
com.badlogic.gdx.utils.AtomicQueue: java.lang.Object poll()
com.badlogic.gdx.utils.Base64Coder
com.badlogic.gdx.utils.Base64Coder: java.lang.String systemLineSeparator
com.badlogic.gdx.utils.Base64Coder: char[] map1
com.badlogic.gdx.utils.Base64Coder: byte[] map2
com.badlogic.gdx.utils.Base64Coder: java.lang.String encodeString(java.lang.String)
com.badlogic.gdx.utils.Base64Coder: java.lang.String encodeLines(byte[])
com.badlogic.gdx.utils.Base64Coder: java.lang.String encodeLines(byte[],int,int,int,java.lang.String)
com.badlogic.gdx.utils.Base64Coder: char[] encode(byte[])
com.badlogic.gdx.utils.Base64Coder: char[] encode(byte[],int)
com.badlogic.gdx.utils.Base64Coder: char[] encode(byte[],int,int)
com.badlogic.gdx.utils.Base64Coder: java.lang.String decodeString(java.lang.String)
com.badlogic.gdx.utils.Base64Coder: byte[] decodeLines(java.lang.String)
com.badlogic.gdx.utils.Base64Coder: byte[] decode(java.lang.String)
com.badlogic.gdx.utils.Base64Coder: byte[] decode(char[])
com.badlogic.gdx.utils.Base64Coder: byte[] decode(char[],int,int)
com.badlogic.gdx.utils.Base64Coder: Base64Coder()
com.badlogic.gdx.utils.Base64Coder: void <clinit>()
com.badlogic.gdx.utils.BaseJsonReader
com.badlogic.gdx.utils.BaseJsonReader: com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream)
com.badlogic.gdx.utils.BaseJsonReader: com.badlogic.gdx.utils.JsonValue parse(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.utils.BinaryHeap
com.badlogic.gdx.utils.BinaryHeap: int size
com.badlogic.gdx.utils.BinaryHeap: com.badlogic.gdx.utils.BinaryHeap$Node[] nodes
com.badlogic.gdx.utils.BinaryHeap: boolean isMaxHeap
com.badlogic.gdx.utils.BinaryHeap: BinaryHeap()
com.badlogic.gdx.utils.BinaryHeap: BinaryHeap(int,boolean)
com.badlogic.gdx.utils.BinaryHeap: com.badlogic.gdx.utils.BinaryHeap$Node add(com.badlogic.gdx.utils.BinaryHeap$Node)
com.badlogic.gdx.utils.BinaryHeap: com.badlogic.gdx.utils.BinaryHeap$Node add(com.badlogic.gdx.utils.BinaryHeap$Node,float)
com.badlogic.gdx.utils.BinaryHeap: com.badlogic.gdx.utils.BinaryHeap$Node peek()
com.badlogic.gdx.utils.BinaryHeap: com.badlogic.gdx.utils.BinaryHeap$Node pop()
com.badlogic.gdx.utils.BinaryHeap: com.badlogic.gdx.utils.BinaryHeap$Node remove(com.badlogic.gdx.utils.BinaryHeap$Node)
com.badlogic.gdx.utils.BinaryHeap: com.badlogic.gdx.utils.BinaryHeap$Node remove(int)
com.badlogic.gdx.utils.BinaryHeap: void clear()
com.badlogic.gdx.utils.BinaryHeap: void setValue(com.badlogic.gdx.utils.BinaryHeap$Node,float)
com.badlogic.gdx.utils.BinaryHeap: void up(int)
com.badlogic.gdx.utils.BinaryHeap: void down(int)
com.badlogic.gdx.utils.BinaryHeap: java.lang.String toString()
com.badlogic.gdx.utils.BinaryHeap$Node
com.badlogic.gdx.utils.BinaryHeap$Node: float value
com.badlogic.gdx.utils.BinaryHeap$Node: int index
com.badlogic.gdx.utils.BinaryHeap$Node: BinaryHeap$Node(float)
com.badlogic.gdx.utils.BinaryHeap$Node: float getValue()
com.badlogic.gdx.utils.BinaryHeap$Node: java.lang.String toString()
com.badlogic.gdx.utils.Bits
com.badlogic.gdx.utils.Bits: long[] bits
com.badlogic.gdx.utils.Bits: Bits()
com.badlogic.gdx.utils.Bits: Bits(int)
com.badlogic.gdx.utils.Bits: boolean get(int)
com.badlogic.gdx.utils.Bits: boolean getAndClear(int)
com.badlogic.gdx.utils.Bits: boolean getAndSet(int)
com.badlogic.gdx.utils.Bits: void set(int)
com.badlogic.gdx.utils.Bits: void flip(int)
com.badlogic.gdx.utils.Bits: void checkCapacity(int)
com.badlogic.gdx.utils.Bits: void clear(int)
com.badlogic.gdx.utils.Bits: void clear()
com.badlogic.gdx.utils.Bits: int numBits()
com.badlogic.gdx.utils.Bits: int length()
com.badlogic.gdx.utils.Bits: boolean isEmpty()
com.badlogic.gdx.utils.Bits: int nextSetBit(int)
com.badlogic.gdx.utils.Bits: int nextClearBit(int)
com.badlogic.gdx.utils.Bits: void and(com.badlogic.gdx.utils.Bits)
com.badlogic.gdx.utils.Bits: void andNot(com.badlogic.gdx.utils.Bits)
com.badlogic.gdx.utils.Bits: void or(com.badlogic.gdx.utils.Bits)
com.badlogic.gdx.utils.Bits: void xor(com.badlogic.gdx.utils.Bits)
com.badlogic.gdx.utils.Bits: boolean intersects(com.badlogic.gdx.utils.Bits)
com.badlogic.gdx.utils.Bits: boolean containsAll(com.badlogic.gdx.utils.Bits)
com.badlogic.gdx.utils.BooleanArray
com.badlogic.gdx.utils.BooleanArray: boolean[] items
com.badlogic.gdx.utils.BooleanArray: int size
com.badlogic.gdx.utils.BooleanArray: boolean ordered
com.badlogic.gdx.utils.BooleanArray: BooleanArray()
com.badlogic.gdx.utils.BooleanArray: BooleanArray(int)
com.badlogic.gdx.utils.BooleanArray: BooleanArray(boolean,int)
com.badlogic.gdx.utils.BooleanArray: BooleanArray(com.badlogic.gdx.utils.BooleanArray)
com.badlogic.gdx.utils.BooleanArray: BooleanArray(boolean[])
com.badlogic.gdx.utils.BooleanArray: BooleanArray(boolean,boolean[],int,int)
com.badlogic.gdx.utils.BooleanArray: void add(boolean)
com.badlogic.gdx.utils.BooleanArray: void addAll(com.badlogic.gdx.utils.BooleanArray)
com.badlogic.gdx.utils.BooleanArray: void addAll(com.badlogic.gdx.utils.BooleanArray,int,int)
com.badlogic.gdx.utils.BooleanArray: void addAll(boolean[])
com.badlogic.gdx.utils.BooleanArray: void addAll(boolean[],int,int)
com.badlogic.gdx.utils.BooleanArray: boolean get(int)
com.badlogic.gdx.utils.BooleanArray: void set(int,boolean)
com.badlogic.gdx.utils.BooleanArray: void insert(int,boolean)
com.badlogic.gdx.utils.BooleanArray: void swap(int,int)
com.badlogic.gdx.utils.BooleanArray: boolean removeIndex(int)
com.badlogic.gdx.utils.BooleanArray: void removeRange(int,int)
com.badlogic.gdx.utils.BooleanArray: boolean removeAll(com.badlogic.gdx.utils.BooleanArray)
com.badlogic.gdx.utils.BooleanArray: boolean pop()
com.badlogic.gdx.utils.BooleanArray: boolean peek()
com.badlogic.gdx.utils.BooleanArray: boolean first()
com.badlogic.gdx.utils.BooleanArray: void clear()
com.badlogic.gdx.utils.BooleanArray: boolean[] shrink()
com.badlogic.gdx.utils.BooleanArray: boolean[] ensureCapacity(int)
com.badlogic.gdx.utils.BooleanArray: boolean[] resize(int)
com.badlogic.gdx.utils.BooleanArray: void reverse()
com.badlogic.gdx.utils.BooleanArray: void shuffle()
com.badlogic.gdx.utils.BooleanArray: void truncate(int)
com.badlogic.gdx.utils.BooleanArray: boolean random()
com.badlogic.gdx.utils.BooleanArray: boolean[] toArray()
com.badlogic.gdx.utils.BooleanArray: boolean equals(java.lang.Object)
com.badlogic.gdx.utils.BooleanArray: java.lang.String toString()
com.badlogic.gdx.utils.BooleanArray: java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.BooleanArray: com.badlogic.gdx.utils.BooleanArray with(boolean[])
com.badlogic.gdx.utils.BufferUtils
com.badlogic.gdx.utils.BufferUtils: com.badlogic.gdx.utils.Array unsafeBuffers
com.badlogic.gdx.utils.BufferUtils: int allocatedUnsafe
com.badlogic.gdx.utils.BufferUtils: BufferUtils()
com.badlogic.gdx.utils.BufferUtils: void copy(float[],java.nio.Buffer,int,int)
com.badlogic.gdx.utils.BufferUtils: void copy(byte[],int,java.nio.Buffer,int)
com.badlogic.gdx.utils.BufferUtils: void copy(short[],int,java.nio.Buffer,int)
com.badlogic.gdx.utils.BufferUtils: void copy(char[],int,int,java.nio.Buffer)
com.badlogic.gdx.utils.BufferUtils: void copy(int[],int,int,java.nio.Buffer)
com.badlogic.gdx.utils.BufferUtils: void copy(long[],int,int,java.nio.Buffer)
com.badlogic.gdx.utils.BufferUtils: void copy(float[],int,int,java.nio.Buffer)
com.badlogic.gdx.utils.BufferUtils: void copy(double[],int,int,java.nio.Buffer)
com.badlogic.gdx.utils.BufferUtils: void copy(char[],int,java.nio.Buffer,int)
com.badlogic.gdx.utils.BufferUtils: void copy(int[],int,java.nio.Buffer,int)
com.badlogic.gdx.utils.BufferUtils: void copy(long[],int,java.nio.Buffer,int)
com.badlogic.gdx.utils.BufferUtils: void copy(float[],int,java.nio.Buffer,int)
com.badlogic.gdx.utils.BufferUtils: void copy(double[],int,java.nio.Buffer,int)
com.badlogic.gdx.utils.BufferUtils: void copy(java.nio.Buffer,java.nio.Buffer,int)
com.badlogic.gdx.utils.BufferUtils: void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.utils.BufferUtils: void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.utils.BufferUtils: void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix4,int)
com.badlogic.gdx.utils.BufferUtils: void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix4,int)
com.badlogic.gdx.utils.BufferUtils: void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.utils.BufferUtils: void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.utils.BufferUtils: void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix3,int)
com.badlogic.gdx.utils.BufferUtils: void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix3,int)
com.badlogic.gdx.utils.BufferUtils: long findFloats(java.nio.Buffer,int,java.nio.Buffer,int)
com.badlogic.gdx.utils.BufferUtils: long findFloats(float[],int,java.nio.Buffer,int)
com.badlogic.gdx.utils.BufferUtils: long findFloats(java.nio.Buffer,int,float[],int)
com.badlogic.gdx.utils.BufferUtils: long findFloats(float[],int,float[],int)
com.badlogic.gdx.utils.BufferUtils: long findFloats(java.nio.Buffer,int,java.nio.Buffer,int,float)
com.badlogic.gdx.utils.BufferUtils: long findFloats(float[],int,java.nio.Buffer,int,float)
com.badlogic.gdx.utils.BufferUtils: long findFloats(java.nio.Buffer,int,float[],int,float)
com.badlogic.gdx.utils.BufferUtils: long findFloats(float[],int,float[],int,float)
com.badlogic.gdx.utils.BufferUtils: int positionInBytes(java.nio.Buffer)
com.badlogic.gdx.utils.BufferUtils: int bytesToElements(java.nio.Buffer,int)
com.badlogic.gdx.utils.BufferUtils: int elementsToBytes(java.nio.Buffer,int)
com.badlogic.gdx.utils.BufferUtils: java.nio.FloatBuffer newFloatBuffer(int)
com.badlogic.gdx.utils.BufferUtils: java.nio.DoubleBuffer newDoubleBuffer(int)
com.badlogic.gdx.utils.BufferUtils: java.nio.ByteBuffer newByteBuffer(int)
com.badlogic.gdx.utils.BufferUtils: java.nio.ShortBuffer newShortBuffer(int)
com.badlogic.gdx.utils.BufferUtils: java.nio.CharBuffer newCharBuffer(int)
com.badlogic.gdx.utils.BufferUtils: java.nio.IntBuffer newIntBuffer(int)
com.badlogic.gdx.utils.BufferUtils: java.nio.LongBuffer newLongBuffer(int)
com.badlogic.gdx.utils.BufferUtils: void disposeUnsafeByteBuffer(java.nio.ByteBuffer)
com.badlogic.gdx.utils.BufferUtils: java.nio.ByteBuffer newUnsafeByteBuffer(int)
com.badlogic.gdx.utils.BufferUtils: long getUnsafeBufferAddress(java.nio.Buffer)
com.badlogic.gdx.utils.BufferUtils: java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer)
com.badlogic.gdx.utils.BufferUtils: int getAllocatedBytesUnsafe()
com.badlogic.gdx.utils.BufferUtils: void freeMemory(java.nio.ByteBuffer)
com.badlogic.gdx.utils.BufferUtils: java.nio.ByteBuffer newDisposableByteBuffer(int)
com.badlogic.gdx.utils.BufferUtils: long getBufferAddress(java.nio.Buffer)
com.badlogic.gdx.utils.BufferUtils: void clear(java.nio.ByteBuffer,int)
com.badlogic.gdx.utils.BufferUtils: void copyJni(float[],java.nio.Buffer,int,int)
com.badlogic.gdx.utils.BufferUtils: void copyJni(byte[],int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.BufferUtils: void copyJni(char[],int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.BufferUtils: void copyJni(short[],int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.BufferUtils: void copyJni(int[],int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.BufferUtils: void copyJni(long[],int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.BufferUtils: void copyJni(float[],int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.BufferUtils: void copyJni(double[],int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.BufferUtils: void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.BufferUtils: void transformV4M4Jni(java.nio.Buffer,int,int,float[],int)
com.badlogic.gdx.utils.BufferUtils: void transformV4M4Jni(float[],int,int,float[],int)
com.badlogic.gdx.utils.BufferUtils: void transformV3M4Jni(java.nio.Buffer,int,int,float[],int)
com.badlogic.gdx.utils.BufferUtils: void transformV3M4Jni(float[],int,int,float[],int)
com.badlogic.gdx.utils.BufferUtils: void transformV2M4Jni(java.nio.Buffer,int,int,float[],int)
com.badlogic.gdx.utils.BufferUtils: void transformV2M4Jni(float[],int,int,float[],int)
com.badlogic.gdx.utils.BufferUtils: void transformV3M3Jni(java.nio.Buffer,int,int,float[],int)
com.badlogic.gdx.utils.BufferUtils: void transformV3M3Jni(float[],int,int,float[],int)
com.badlogic.gdx.utils.BufferUtils: void transformV2M3Jni(java.nio.Buffer,int,int,float[],int)
com.badlogic.gdx.utils.BufferUtils: void transformV2M3Jni(float[],int,int,float[],int)
com.badlogic.gdx.utils.BufferUtils: long find(java.nio.Buffer,int,int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.BufferUtils: long find(float[],int,int,java.nio.Buffer,int,int)
com.badlogic.gdx.utils.BufferUtils: long find(java.nio.Buffer,int,int,float[],int,int)
com.badlogic.gdx.utils.BufferUtils: long find(float[],int,int,float[],int,int)
com.badlogic.gdx.utils.BufferUtils: long find(java.nio.Buffer,int,int,java.nio.Buffer,int,int,float)
com.badlogic.gdx.utils.BufferUtils: long find(float[],int,int,java.nio.Buffer,int,int,float)
com.badlogic.gdx.utils.BufferUtils: long find(java.nio.Buffer,int,int,float[],int,int,float)
com.badlogic.gdx.utils.BufferUtils: long find(float[],int,int,float[],int,int,float)
com.badlogic.gdx.utils.BufferUtils: void <clinit>()
com.badlogic.gdx.utils.ByteArray
com.badlogic.gdx.utils.ByteArray: byte[] items
com.badlogic.gdx.utils.ByteArray: int size
com.badlogic.gdx.utils.ByteArray: boolean ordered
com.badlogic.gdx.utils.ByteArray: ByteArray()
com.badlogic.gdx.utils.ByteArray: ByteArray(int)
com.badlogic.gdx.utils.ByteArray: ByteArray(boolean,int)
com.badlogic.gdx.utils.ByteArray: ByteArray(com.badlogic.gdx.utils.ByteArray)
com.badlogic.gdx.utils.ByteArray: ByteArray(byte[])
com.badlogic.gdx.utils.ByteArray: ByteArray(boolean,byte[],int,int)
com.badlogic.gdx.utils.ByteArray: void add(byte)
com.badlogic.gdx.utils.ByteArray: void addAll(com.badlogic.gdx.utils.ByteArray)
com.badlogic.gdx.utils.ByteArray: void addAll(com.badlogic.gdx.utils.ByteArray,int,int)
com.badlogic.gdx.utils.ByteArray: void addAll(byte[])
com.badlogic.gdx.utils.ByteArray: void addAll(byte[],int,int)
com.badlogic.gdx.utils.ByteArray: byte get(int)
com.badlogic.gdx.utils.ByteArray: void set(int,byte)
com.badlogic.gdx.utils.ByteArray: void incr(int,byte)
com.badlogic.gdx.utils.ByteArray: void mul(int,byte)
com.badlogic.gdx.utils.ByteArray: void insert(int,byte)
com.badlogic.gdx.utils.ByteArray: void swap(int,int)
com.badlogic.gdx.utils.ByteArray: boolean contains(byte)
com.badlogic.gdx.utils.ByteArray: int indexOf(byte)
com.badlogic.gdx.utils.ByteArray: int lastIndexOf(byte)
com.badlogic.gdx.utils.ByteArray: boolean removeValue(byte)
com.badlogic.gdx.utils.ByteArray: int removeIndex(int)
com.badlogic.gdx.utils.ByteArray: void removeRange(int,int)
com.badlogic.gdx.utils.ByteArray: boolean removeAll(com.badlogic.gdx.utils.ByteArray)
com.badlogic.gdx.utils.ByteArray: byte pop()
com.badlogic.gdx.utils.ByteArray: byte peek()
com.badlogic.gdx.utils.ByteArray: byte first()
com.badlogic.gdx.utils.ByteArray: void clear()
com.badlogic.gdx.utils.ByteArray: byte[] shrink()
com.badlogic.gdx.utils.ByteArray: byte[] ensureCapacity(int)
com.badlogic.gdx.utils.ByteArray: byte[] resize(int)
com.badlogic.gdx.utils.ByteArray: void sort()
com.badlogic.gdx.utils.ByteArray: void reverse()
com.badlogic.gdx.utils.ByteArray: void shuffle()
com.badlogic.gdx.utils.ByteArray: void truncate(int)
com.badlogic.gdx.utils.ByteArray: byte random()
com.badlogic.gdx.utils.ByteArray: byte[] toArray()
com.badlogic.gdx.utils.ByteArray: boolean equals(java.lang.Object)
com.badlogic.gdx.utils.ByteArray: java.lang.String toString()
com.badlogic.gdx.utils.ByteArray: java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.ByteArray: com.badlogic.gdx.utils.ByteArray with(byte[])
com.badlogic.gdx.utils.CharArray
com.badlogic.gdx.utils.CharArray: char[] items
com.badlogic.gdx.utils.CharArray: int size
com.badlogic.gdx.utils.CharArray: boolean ordered
com.badlogic.gdx.utils.CharArray: CharArray()
com.badlogic.gdx.utils.CharArray: CharArray(int)
com.badlogic.gdx.utils.CharArray: CharArray(boolean,int)
com.badlogic.gdx.utils.CharArray: CharArray(com.badlogic.gdx.utils.CharArray)
com.badlogic.gdx.utils.CharArray: CharArray(char[])
com.badlogic.gdx.utils.CharArray: CharArray(boolean,char[],int,int)
com.badlogic.gdx.utils.CharArray: void add(char)
com.badlogic.gdx.utils.CharArray: void addAll(com.badlogic.gdx.utils.CharArray)
com.badlogic.gdx.utils.CharArray: void addAll(com.badlogic.gdx.utils.CharArray,int,int)
com.badlogic.gdx.utils.CharArray: void addAll(char[])
com.badlogic.gdx.utils.CharArray: void addAll(char[],int,int)
com.badlogic.gdx.utils.CharArray: char get(int)
com.badlogic.gdx.utils.CharArray: void set(int,char)
com.badlogic.gdx.utils.CharArray: void incr(int,char)
com.badlogic.gdx.utils.CharArray: void mul(int,char)
com.badlogic.gdx.utils.CharArray: void insert(int,char)
com.badlogic.gdx.utils.CharArray: void swap(int,int)
com.badlogic.gdx.utils.CharArray: boolean contains(char)
com.badlogic.gdx.utils.CharArray: int indexOf(char)
com.badlogic.gdx.utils.CharArray: int lastIndexOf(char)
com.badlogic.gdx.utils.CharArray: boolean removeValue(char)
com.badlogic.gdx.utils.CharArray: char removeIndex(int)
com.badlogic.gdx.utils.CharArray: void removeRange(int,int)
com.badlogic.gdx.utils.CharArray: boolean removeAll(com.badlogic.gdx.utils.CharArray)
com.badlogic.gdx.utils.CharArray: char pop()
com.badlogic.gdx.utils.CharArray: char peek()
com.badlogic.gdx.utils.CharArray: char first()
com.badlogic.gdx.utils.CharArray: void clear()
com.badlogic.gdx.utils.CharArray: char[] shrink()
com.badlogic.gdx.utils.CharArray: char[] ensureCapacity(int)
com.badlogic.gdx.utils.CharArray: char[] resize(int)
com.badlogic.gdx.utils.CharArray: void sort()
com.badlogic.gdx.utils.CharArray: void reverse()
com.badlogic.gdx.utils.CharArray: void shuffle()
com.badlogic.gdx.utils.CharArray: void truncate(int)
com.badlogic.gdx.utils.CharArray: char random()
com.badlogic.gdx.utils.CharArray: char[] toArray()
com.badlogic.gdx.utils.CharArray: boolean equals(java.lang.Object)
com.badlogic.gdx.utils.CharArray: java.lang.String toString()
com.badlogic.gdx.utils.CharArray: java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.CharArray: com.badlogic.gdx.utils.CharArray with(char[])
com.badlogic.gdx.utils.Clipboard
com.badlogic.gdx.utils.Clipboard: java.lang.String getContents()
com.badlogic.gdx.utils.Clipboard: void setContents(java.lang.String)
com.badlogic.gdx.utils.ComparableTimSort
com.badlogic.gdx.utils.ComparableTimSort: int MIN_MERGE
com.badlogic.gdx.utils.ComparableTimSort: java.lang.Object[] a
com.badlogic.gdx.utils.ComparableTimSort: int MIN_GALLOP
com.badlogic.gdx.utils.ComparableTimSort: int minGallop
com.badlogic.gdx.utils.ComparableTimSort: int INITIAL_TMP_STORAGE_LENGTH
com.badlogic.gdx.utils.ComparableTimSort: java.lang.Object[] tmp
com.badlogic.gdx.utils.ComparableTimSort: int stackSize
com.badlogic.gdx.utils.ComparableTimSort: int[] runBase
com.badlogic.gdx.utils.ComparableTimSort: int[] runLen
com.badlogic.gdx.utils.ComparableTimSort: boolean DEBUG
com.badlogic.gdx.utils.ComparableTimSort: ComparableTimSort()
com.badlogic.gdx.utils.ComparableTimSort: void doSort(java.lang.Object[],int,int)
com.badlogic.gdx.utils.ComparableTimSort: ComparableTimSort(java.lang.Object[])
com.badlogic.gdx.utils.ComparableTimSort: void sort(java.lang.Object[])
com.badlogic.gdx.utils.ComparableTimSort: void sort(java.lang.Object[],int,int)
com.badlogic.gdx.utils.ComparableTimSort: void binarySort(java.lang.Object[],int,int,int)
com.badlogic.gdx.utils.ComparableTimSort: int countRunAndMakeAscending(java.lang.Object[],int,int)
com.badlogic.gdx.utils.ComparableTimSort: void reverseRange(java.lang.Object[],int,int)
com.badlogic.gdx.utils.ComparableTimSort: int minRunLength(int)
com.badlogic.gdx.utils.ComparableTimSort: void pushRun(int,int)
com.badlogic.gdx.utils.ComparableTimSort: void mergeCollapse()
com.badlogic.gdx.utils.ComparableTimSort: void mergeForceCollapse()
com.badlogic.gdx.utils.ComparableTimSort: void mergeAt(int)
com.badlogic.gdx.utils.ComparableTimSort: int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int)
com.badlogic.gdx.utils.ComparableTimSort: int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int)
com.badlogic.gdx.utils.ComparableTimSort: void mergeLo(int,int,int,int)
com.badlogic.gdx.utils.ComparableTimSort: void mergeHi(int,int,int,int)
com.badlogic.gdx.utils.ComparableTimSort: java.lang.Object[] ensureCapacity(int)
com.badlogic.gdx.utils.ComparableTimSort: void rangeCheck(int,int,int)
com.badlogic.gdx.utils.DataInput
com.badlogic.gdx.utils.DataInput: char[] chars
com.badlogic.gdx.utils.DataInput: DataInput(java.io.InputStream)
com.badlogic.gdx.utils.DataInput: int readInt(boolean)
com.badlogic.gdx.utils.DataInput: java.lang.String readString()
com.badlogic.gdx.utils.DataInput: void readUtf8_slow(int,int,int)
com.badlogic.gdx.utils.DataOutput
com.badlogic.gdx.utils.DataOutput: DataOutput(java.io.OutputStream)
com.badlogic.gdx.utils.DataOutput: int writeInt(int,boolean)
com.badlogic.gdx.utils.DataOutput: void writeString(java.lang.String)
com.badlogic.gdx.utils.DataOutput: void writeString_slow(java.lang.String,int,int)
com.badlogic.gdx.utils.DelayedRemovalArray
com.badlogic.gdx.utils.DelayedRemovalArray: boolean iterating
com.badlogic.gdx.utils.DelayedRemovalArray: com.badlogic.gdx.utils.IntArray remove
com.badlogic.gdx.utils.DelayedRemovalArray: DelayedRemovalArray()
com.badlogic.gdx.utils.DelayedRemovalArray: DelayedRemovalArray(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.DelayedRemovalArray: DelayedRemovalArray(boolean,int,java.lang.Class)
com.badlogic.gdx.utils.DelayedRemovalArray: DelayedRemovalArray(boolean,int)
com.badlogic.gdx.utils.DelayedRemovalArray: DelayedRemovalArray(boolean,java.lang.Object[],int,int)
com.badlogic.gdx.utils.DelayedRemovalArray: DelayedRemovalArray(java.lang.Class)
com.badlogic.gdx.utils.DelayedRemovalArray: DelayedRemovalArray(int)
com.badlogic.gdx.utils.DelayedRemovalArray: DelayedRemovalArray(java.lang.Object[])
com.badlogic.gdx.utils.DelayedRemovalArray: void begin()
com.badlogic.gdx.utils.DelayedRemovalArray: void end()
com.badlogic.gdx.utils.DelayedRemovalArray: void remove(int)
com.badlogic.gdx.utils.DelayedRemovalArray: boolean removeValue(java.lang.Object,boolean)
com.badlogic.gdx.utils.DelayedRemovalArray: java.lang.Object removeIndex(int)
com.badlogic.gdx.utils.DelayedRemovalArray: void removeRange(int,int)
com.badlogic.gdx.utils.DelayedRemovalArray: void set(int,java.lang.Object)
com.badlogic.gdx.utils.DelayedRemovalArray: void insert(int,java.lang.Object)
com.badlogic.gdx.utils.DelayedRemovalArray: void swap(int,int)
com.badlogic.gdx.utils.DelayedRemovalArray: java.lang.Object pop()
com.badlogic.gdx.utils.DelayedRemovalArray: void clear()
com.badlogic.gdx.utils.DelayedRemovalArray: void sort()
com.badlogic.gdx.utils.DelayedRemovalArray: void sort(java.util.Comparator)
com.badlogic.gdx.utils.DelayedRemovalArray: void reverse()
com.badlogic.gdx.utils.DelayedRemovalArray: void shuffle()
com.badlogic.gdx.utils.DelayedRemovalArray: void truncate(int)
com.badlogic.gdx.utils.DelayedRemovalArray: com.badlogic.gdx.utils.DelayedRemovalArray with(java.lang.Object[])
com.badlogic.gdx.utils.Disposable
com.badlogic.gdx.utils.Disposable: void dispose()
com.badlogic.gdx.utils.FloatArray
com.badlogic.gdx.utils.FloatArray: float[] items
com.badlogic.gdx.utils.FloatArray: int size
com.badlogic.gdx.utils.FloatArray: boolean ordered
com.badlogic.gdx.utils.FloatArray: FloatArray()
com.badlogic.gdx.utils.FloatArray: FloatArray(int)
com.badlogic.gdx.utils.FloatArray: FloatArray(boolean,int)
com.badlogic.gdx.utils.FloatArray: FloatArray(com.badlogic.gdx.utils.FloatArray)
com.badlogic.gdx.utils.FloatArray: FloatArray(float[])
com.badlogic.gdx.utils.FloatArray: FloatArray(boolean,float[],int,int)
com.badlogic.gdx.utils.FloatArray: void add(float)
com.badlogic.gdx.utils.FloatArray: void addAll(com.badlogic.gdx.utils.FloatArray)
com.badlogic.gdx.utils.FloatArray: void addAll(com.badlogic.gdx.utils.FloatArray,int,int)
com.badlogic.gdx.utils.FloatArray: void addAll(float[])
com.badlogic.gdx.utils.FloatArray: void addAll(float[],int,int)
com.badlogic.gdx.utils.FloatArray: float get(int)
com.badlogic.gdx.utils.FloatArray: void set(int,float)
com.badlogic.gdx.utils.FloatArray: void incr(int,float)
com.badlogic.gdx.utils.FloatArray: void mul(int,float)
com.badlogic.gdx.utils.FloatArray: void insert(int,float)
com.badlogic.gdx.utils.FloatArray: void swap(int,int)
com.badlogic.gdx.utils.FloatArray: boolean contains(float)
com.badlogic.gdx.utils.FloatArray: int indexOf(float)
com.badlogic.gdx.utils.FloatArray: int lastIndexOf(char)
com.badlogic.gdx.utils.FloatArray: boolean removeValue(float)
com.badlogic.gdx.utils.FloatArray: float removeIndex(int)
com.badlogic.gdx.utils.FloatArray: void removeRange(int,int)
com.badlogic.gdx.utils.FloatArray: boolean removeAll(com.badlogic.gdx.utils.FloatArray)
com.badlogic.gdx.utils.FloatArray: float pop()
com.badlogic.gdx.utils.FloatArray: float peek()
com.badlogic.gdx.utils.FloatArray: float first()
com.badlogic.gdx.utils.FloatArray: void clear()
com.badlogic.gdx.utils.FloatArray: float[] shrink()
com.badlogic.gdx.utils.FloatArray: float[] ensureCapacity(int)
com.badlogic.gdx.utils.FloatArray: float[] resize(int)
com.badlogic.gdx.utils.FloatArray: void sort()
com.badlogic.gdx.utils.FloatArray: void reverse()
com.badlogic.gdx.utils.FloatArray: void shuffle()
com.badlogic.gdx.utils.FloatArray: void truncate(int)
com.badlogic.gdx.utils.FloatArray: float random()
com.badlogic.gdx.utils.FloatArray: float[] toArray()
com.badlogic.gdx.utils.FloatArray: boolean equals(java.lang.Object)
com.badlogic.gdx.utils.FloatArray: boolean equals(java.lang.Object,float)
com.badlogic.gdx.utils.FloatArray: java.lang.String toString()
com.badlogic.gdx.utils.FloatArray: java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.FloatArray: com.badlogic.gdx.utils.FloatArray with(float[])
com.badlogic.gdx.utils.GdxBuild
com.badlogic.gdx.utils.GdxBuild: GdxBuild()
com.badlogic.gdx.utils.GdxBuild: void main(java.lang.String[])
com.badlogic.gdx.utils.GdxNativesLoader
com.badlogic.gdx.utils.GdxNativesLoader: boolean disableNativesLoading
com.badlogic.gdx.utils.GdxNativesLoader: boolean nativesLoaded
com.badlogic.gdx.utils.GdxNativesLoader: GdxNativesLoader()
com.badlogic.gdx.utils.GdxNativesLoader: void load()
com.badlogic.gdx.utils.GdxNativesLoader: void <clinit>()
com.badlogic.gdx.utils.GdxRuntimeException
com.badlogic.gdx.utils.GdxRuntimeException: long serialVersionUID
com.badlogic.gdx.utils.GdxRuntimeException: GdxRuntimeException(java.lang.String)
com.badlogic.gdx.utils.GdxRuntimeException: GdxRuntimeException(java.lang.Throwable)
com.badlogic.gdx.utils.GdxRuntimeException: GdxRuntimeException(java.lang.String,java.lang.Throwable)
com.badlogic.gdx.utils.I18NBundle
com.badlogic.gdx.utils.I18NBundle: java.lang.String DEFAULT_ENCODING
com.badlogic.gdx.utils.I18NBundle: boolean simpleFormatter
com.badlogic.gdx.utils.I18NBundle: com.badlogic.gdx.utils.I18NBundle parent
com.badlogic.gdx.utils.I18NBundle: java.util.Locale locale
com.badlogic.gdx.utils.I18NBundle: com.badlogic.gdx.utils.ObjectMap properties
com.badlogic.gdx.utils.I18NBundle: com.badlogic.gdx.utils.TextFormatter formatter
com.badlogic.gdx.utils.I18NBundle: I18NBundle()
com.badlogic.gdx.utils.I18NBundle: boolean getSimpleFormatter()
com.badlogic.gdx.utils.I18NBundle: void setSimpleFormatter(boolean)
com.badlogic.gdx.utils.I18NBundle: com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.utils.I18NBundle: com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle,java.util.Locale)
com.badlogic.gdx.utils.I18NBundle: com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle,java.lang.String)
com.badlogic.gdx.utils.I18NBundle: com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)
com.badlogic.gdx.utils.I18NBundle: com.badlogic.gdx.utils.I18NBundle createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String)
com.badlogic.gdx.utils.I18NBundle: java.util.List getCandidateLocales(java.util.Locale)
com.badlogic.gdx.utils.I18NBundle: java.util.Locale getFallbackLocale(java.util.Locale)
com.badlogic.gdx.utils.I18NBundle: com.badlogic.gdx.utils.I18NBundle loadBundleChain(com.badlogic.gdx.files.FileHandle,java.lang.String,java.util.List,int,com.badlogic.gdx.utils.I18NBundle)
com.badlogic.gdx.utils.I18NBundle: com.badlogic.gdx.utils.I18NBundle loadBundle(com.badlogic.gdx.files.FileHandle,java.lang.String,java.util.Locale)
com.badlogic.gdx.utils.I18NBundle: void load(java.io.Reader)
com.badlogic.gdx.utils.I18NBundle: com.badlogic.gdx.files.FileHandle toFileHandle(com.badlogic.gdx.files.FileHandle,java.util.Locale)
com.badlogic.gdx.utils.I18NBundle: java.util.Locale getLocale()
com.badlogic.gdx.utils.I18NBundle: void setLocale(java.util.Locale)
com.badlogic.gdx.utils.I18NBundle: java.lang.String get(java.lang.String)
com.badlogic.gdx.utils.I18NBundle: java.lang.String format(java.lang.String,java.lang.Object[])
com.badlogic.gdx.utils.I18NBundle: void <clinit>()
com.badlogic.gdx.utils.IdentityMap
com.badlogic.gdx.utils.IdentityMap: int PRIME1
com.badlogic.gdx.utils.IdentityMap: int PRIME2
com.badlogic.gdx.utils.IdentityMap: int PRIME3
com.badlogic.gdx.utils.IdentityMap: int size
com.badlogic.gdx.utils.IdentityMap: java.lang.Object[] keyTable
com.badlogic.gdx.utils.IdentityMap: java.lang.Object[] valueTable
com.badlogic.gdx.utils.IdentityMap: int capacity
com.badlogic.gdx.utils.IdentityMap: int stashSize
com.badlogic.gdx.utils.IdentityMap: float loadFactor
com.badlogic.gdx.utils.IdentityMap: int hashShift
com.badlogic.gdx.utils.IdentityMap: int mask
com.badlogic.gdx.utils.IdentityMap: int threshold
com.badlogic.gdx.utils.IdentityMap: int stashCapacity
com.badlogic.gdx.utils.IdentityMap: int pushIterations
com.badlogic.gdx.utils.IdentityMap: com.badlogic.gdx.utils.IdentityMap$Entries entries1
com.badlogic.gdx.utils.IdentityMap: com.badlogic.gdx.utils.IdentityMap$Entries entries2
com.badlogic.gdx.utils.IdentityMap: com.badlogic.gdx.utils.IdentityMap$Values values1
com.badlogic.gdx.utils.IdentityMap: com.badlogic.gdx.utils.IdentityMap$Values values2
com.badlogic.gdx.utils.IdentityMap: com.badlogic.gdx.utils.IdentityMap$Keys keys1
com.badlogic.gdx.utils.IdentityMap: com.badlogic.gdx.utils.IdentityMap$Keys keys2
com.badlogic.gdx.utils.IdentityMap: IdentityMap()
com.badlogic.gdx.utils.IdentityMap: IdentityMap(int)
com.badlogic.gdx.utils.IdentityMap: IdentityMap(int,float)
com.badlogic.gdx.utils.IdentityMap: IdentityMap(com.badlogic.gdx.utils.IdentityMap)
com.badlogic.gdx.utils.IdentityMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.IdentityMap: void putResize(java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.IdentityMap: void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object)
com.badlogic.gdx.utils.IdentityMap: void putStash(java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.IdentityMap: java.lang.Object get(java.lang.Object)
com.badlogic.gdx.utils.IdentityMap: java.lang.Object get(java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.IdentityMap: java.lang.Object getStash(java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.IdentityMap: java.lang.Object remove(java.lang.Object)
com.badlogic.gdx.utils.IdentityMap: java.lang.Object removeStash(java.lang.Object)
com.badlogic.gdx.utils.IdentityMap: void removeStashIndex(int)
com.badlogic.gdx.utils.IdentityMap: void shrink(int)
com.badlogic.gdx.utils.IdentityMap: void clear(int)
com.badlogic.gdx.utils.IdentityMap: void clear()
com.badlogic.gdx.utils.IdentityMap: boolean containsValue(java.lang.Object,boolean)
com.badlogic.gdx.utils.IdentityMap: boolean containsKey(java.lang.Object)
com.badlogic.gdx.utils.IdentityMap: boolean containsKeyStash(java.lang.Object)
com.badlogic.gdx.utils.IdentityMap: java.lang.Object findKey(java.lang.Object,boolean)
com.badlogic.gdx.utils.IdentityMap: void ensureCapacity(int)
com.badlogic.gdx.utils.IdentityMap: void resize(int)
com.badlogic.gdx.utils.IdentityMap: int hash2(int)
com.badlogic.gdx.utils.IdentityMap: int hash3(int)
com.badlogic.gdx.utils.IdentityMap: java.lang.String toString()
com.badlogic.gdx.utils.IdentityMap: java.util.Iterator iterator()
com.badlogic.gdx.utils.IdentityMap: com.badlogic.gdx.utils.IdentityMap$Entries entries()
com.badlogic.gdx.utils.IdentityMap: com.badlogic.gdx.utils.IdentityMap$Values values()
com.badlogic.gdx.utils.IdentityMap: com.badlogic.gdx.utils.IdentityMap$Keys keys()
com.badlogic.gdx.utils.IdentityMap$Entries
com.badlogic.gdx.utils.IdentityMap$Entries: com.badlogic.gdx.utils.IdentityMap$Entry entry
com.badlogic.gdx.utils.IdentityMap$Entries: IdentityMap$Entries(com.badlogic.gdx.utils.IdentityMap)
com.badlogic.gdx.utils.IdentityMap$Entries: com.badlogic.gdx.utils.IdentityMap$Entry next()
com.badlogic.gdx.utils.IdentityMap$Entries: boolean hasNext()
com.badlogic.gdx.utils.IdentityMap$Entries: java.util.Iterator iterator()
com.badlogic.gdx.utils.IdentityMap$Entries: void remove()
com.badlogic.gdx.utils.IdentityMap$Entries: void reset()
com.badlogic.gdx.utils.IdentityMap$Entries: java.lang.Object next()
com.badlogic.gdx.utils.IdentityMap$Entry
com.badlogic.gdx.utils.IdentityMap$Entry: java.lang.Object key
com.badlogic.gdx.utils.IdentityMap$Entry: java.lang.Object value
com.badlogic.gdx.utils.IdentityMap$Entry: IdentityMap$Entry()
com.badlogic.gdx.utils.IdentityMap$Entry: java.lang.String toString()
com.badlogic.gdx.utils.IdentityMap$Keys
com.badlogic.gdx.utils.IdentityMap$Keys: IdentityMap$Keys(com.badlogic.gdx.utils.IdentityMap)
com.badlogic.gdx.utils.IdentityMap$Keys: boolean hasNext()
com.badlogic.gdx.utils.IdentityMap$Keys: java.lang.Object next()
com.badlogic.gdx.utils.IdentityMap$Keys: java.util.Iterator iterator()
com.badlogic.gdx.utils.IdentityMap$Keys: com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.IdentityMap$Keys: void remove()
com.badlogic.gdx.utils.IdentityMap$Keys: void reset()
com.badlogic.gdx.utils.IdentityMap$MapIterator
com.badlogic.gdx.utils.IdentityMap$MapIterator: boolean hasNext
com.badlogic.gdx.utils.IdentityMap$MapIterator: com.badlogic.gdx.utils.IdentityMap map
com.badlogic.gdx.utils.IdentityMap$MapIterator: int nextIndex
com.badlogic.gdx.utils.IdentityMap$MapIterator: int currentIndex
com.badlogic.gdx.utils.IdentityMap$MapIterator: boolean valid
com.badlogic.gdx.utils.IdentityMap$MapIterator: IdentityMap$MapIterator(com.badlogic.gdx.utils.IdentityMap)
com.badlogic.gdx.utils.IdentityMap$MapIterator: void reset()
com.badlogic.gdx.utils.IdentityMap$MapIterator: void findNextIndex()
com.badlogic.gdx.utils.IdentityMap$MapIterator: void remove()
com.badlogic.gdx.utils.IdentityMap$Values
com.badlogic.gdx.utils.IdentityMap$Values: IdentityMap$Values(com.badlogic.gdx.utils.IdentityMap)
com.badlogic.gdx.utils.IdentityMap$Values: boolean hasNext()
com.badlogic.gdx.utils.IdentityMap$Values: java.lang.Object next()
com.badlogic.gdx.utils.IdentityMap$Values: java.util.Iterator iterator()
com.badlogic.gdx.utils.IdentityMap$Values: com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.IdentityMap$Values: void toArray(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.IdentityMap$Values: void remove()
com.badlogic.gdx.utils.IdentityMap$Values: void reset()
com.badlogic.gdx.utils.IntArray
com.badlogic.gdx.utils.IntArray: int[] items
com.badlogic.gdx.utils.IntArray: int size
com.badlogic.gdx.utils.IntArray: boolean ordered
com.badlogic.gdx.utils.IntArray: IntArray()
com.badlogic.gdx.utils.IntArray: IntArray(int)
com.badlogic.gdx.utils.IntArray: IntArray(boolean,int)
com.badlogic.gdx.utils.IntArray: IntArray(com.badlogic.gdx.utils.IntArray)
com.badlogic.gdx.utils.IntArray: IntArray(int[])
com.badlogic.gdx.utils.IntArray: IntArray(boolean,int[],int,int)
com.badlogic.gdx.utils.IntArray: void add(int)
com.badlogic.gdx.utils.IntArray: void addAll(com.badlogic.gdx.utils.IntArray)
com.badlogic.gdx.utils.IntArray: void addAll(com.badlogic.gdx.utils.IntArray,int,int)
com.badlogic.gdx.utils.IntArray: void addAll(int[])
com.badlogic.gdx.utils.IntArray: void addAll(int[],int,int)
com.badlogic.gdx.utils.IntArray: int get(int)
com.badlogic.gdx.utils.IntArray: void set(int,int)
com.badlogic.gdx.utils.IntArray: void incr(int,int)
com.badlogic.gdx.utils.IntArray: void mul(int,int)
com.badlogic.gdx.utils.IntArray: void insert(int,int)
com.badlogic.gdx.utils.IntArray: void swap(int,int)
com.badlogic.gdx.utils.IntArray: boolean contains(int)
com.badlogic.gdx.utils.IntArray: int indexOf(int)
com.badlogic.gdx.utils.IntArray: int lastIndexOf(int)
com.badlogic.gdx.utils.IntArray: boolean removeValue(int)
com.badlogic.gdx.utils.IntArray: int removeIndex(int)
com.badlogic.gdx.utils.IntArray: void removeRange(int,int)
com.badlogic.gdx.utils.IntArray: boolean removeAll(com.badlogic.gdx.utils.IntArray)
com.badlogic.gdx.utils.IntArray: int pop()
com.badlogic.gdx.utils.IntArray: int peek()
com.badlogic.gdx.utils.IntArray: int first()
com.badlogic.gdx.utils.IntArray: void clear()
com.badlogic.gdx.utils.IntArray: int[] shrink()
com.badlogic.gdx.utils.IntArray: int[] ensureCapacity(int)
com.badlogic.gdx.utils.IntArray: int[] resize(int)
com.badlogic.gdx.utils.IntArray: void sort()
com.badlogic.gdx.utils.IntArray: void reverse()
com.badlogic.gdx.utils.IntArray: void shuffle()
com.badlogic.gdx.utils.IntArray: void truncate(int)
com.badlogic.gdx.utils.IntArray: int random()
com.badlogic.gdx.utils.IntArray: int[] toArray()
com.badlogic.gdx.utils.IntArray: boolean equals(java.lang.Object)
com.badlogic.gdx.utils.IntArray: java.lang.String toString()
com.badlogic.gdx.utils.IntArray: java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.IntArray: com.badlogic.gdx.utils.IntArray with(int[])
com.badlogic.gdx.utils.IntFloatMap
com.badlogic.gdx.utils.IntFloatMap: int PRIME1
com.badlogic.gdx.utils.IntFloatMap: int PRIME2
com.badlogic.gdx.utils.IntFloatMap: int PRIME3
com.badlogic.gdx.utils.IntFloatMap: int EMPTY
com.badlogic.gdx.utils.IntFloatMap: int size
com.badlogic.gdx.utils.IntFloatMap: int[] keyTable
com.badlogic.gdx.utils.IntFloatMap: float[] valueTable
com.badlogic.gdx.utils.IntFloatMap: int capacity
com.badlogic.gdx.utils.IntFloatMap: int stashSize
com.badlogic.gdx.utils.IntFloatMap: float zeroValue
com.badlogic.gdx.utils.IntFloatMap: boolean hasZeroValue
com.badlogic.gdx.utils.IntFloatMap: float loadFactor
com.badlogic.gdx.utils.IntFloatMap: int hashShift
com.badlogic.gdx.utils.IntFloatMap: int mask
com.badlogic.gdx.utils.IntFloatMap: int threshold
com.badlogic.gdx.utils.IntFloatMap: int stashCapacity
com.badlogic.gdx.utils.IntFloatMap: int pushIterations
com.badlogic.gdx.utils.IntFloatMap: com.badlogic.gdx.utils.IntFloatMap$Entries entries1
com.badlogic.gdx.utils.IntFloatMap: com.badlogic.gdx.utils.IntFloatMap$Entries entries2
com.badlogic.gdx.utils.IntFloatMap: com.badlogic.gdx.utils.IntFloatMap$Values values1
com.badlogic.gdx.utils.IntFloatMap: com.badlogic.gdx.utils.IntFloatMap$Values values2
com.badlogic.gdx.utils.IntFloatMap: com.badlogic.gdx.utils.IntFloatMap$Keys keys1
com.badlogic.gdx.utils.IntFloatMap: com.badlogic.gdx.utils.IntFloatMap$Keys keys2
com.badlogic.gdx.utils.IntFloatMap: IntFloatMap()
com.badlogic.gdx.utils.IntFloatMap: IntFloatMap(int)
com.badlogic.gdx.utils.IntFloatMap: IntFloatMap(int,float)
com.badlogic.gdx.utils.IntFloatMap: IntFloatMap(com.badlogic.gdx.utils.IntFloatMap)
com.badlogic.gdx.utils.IntFloatMap: void put(int,float)
com.badlogic.gdx.utils.IntFloatMap: void putAll(com.badlogic.gdx.utils.IntFloatMap)
com.badlogic.gdx.utils.IntFloatMap: void putResize(int,float)
com.badlogic.gdx.utils.IntFloatMap: void push(int,float,int,int,int,int,int,int)
com.badlogic.gdx.utils.IntFloatMap: void putStash(int,float)
com.badlogic.gdx.utils.IntFloatMap: float get(int,float)
com.badlogic.gdx.utils.IntFloatMap: float getStash(int,float)
com.badlogic.gdx.utils.IntFloatMap: float getAndIncrement(int,float,float)
com.badlogic.gdx.utils.IntFloatMap: float getAndIncrementStash(int,float,float)
com.badlogic.gdx.utils.IntFloatMap: float remove(int,float)
com.badlogic.gdx.utils.IntFloatMap: float removeStash(int,float)
com.badlogic.gdx.utils.IntFloatMap: void removeStashIndex(int)
com.badlogic.gdx.utils.IntFloatMap: void shrink(int)
com.badlogic.gdx.utils.IntFloatMap: void clear(int)
com.badlogic.gdx.utils.IntFloatMap: void clear()
com.badlogic.gdx.utils.IntFloatMap: boolean containsValue(float)
com.badlogic.gdx.utils.IntFloatMap: boolean containsValue(float,float)
com.badlogic.gdx.utils.IntFloatMap: boolean containsKey(int)
com.badlogic.gdx.utils.IntFloatMap: boolean containsKeyStash(int)
com.badlogic.gdx.utils.IntFloatMap: int findKey(float,int)
com.badlogic.gdx.utils.IntFloatMap: void ensureCapacity(int)
com.badlogic.gdx.utils.IntFloatMap: void resize(int)
com.badlogic.gdx.utils.IntFloatMap: int hash2(int)
com.badlogic.gdx.utils.IntFloatMap: int hash3(int)
com.badlogic.gdx.utils.IntFloatMap: java.lang.String toString()
com.badlogic.gdx.utils.IntFloatMap: java.util.Iterator iterator()
com.badlogic.gdx.utils.IntFloatMap: com.badlogic.gdx.utils.IntFloatMap$Entries entries()
com.badlogic.gdx.utils.IntFloatMap: com.badlogic.gdx.utils.IntFloatMap$Values values()
com.badlogic.gdx.utils.IntFloatMap: com.badlogic.gdx.utils.IntFloatMap$Keys keys()
com.badlogic.gdx.utils.IntFloatMap$Entries
com.badlogic.gdx.utils.IntFloatMap$Entries: com.badlogic.gdx.utils.IntFloatMap$Entry entry
com.badlogic.gdx.utils.IntFloatMap$Entries: IntFloatMap$Entries(com.badlogic.gdx.utils.IntFloatMap)
com.badlogic.gdx.utils.IntFloatMap$Entries: com.badlogic.gdx.utils.IntFloatMap$Entry next()
com.badlogic.gdx.utils.IntFloatMap$Entries: boolean hasNext()
com.badlogic.gdx.utils.IntFloatMap$Entries: java.util.Iterator iterator()
com.badlogic.gdx.utils.IntFloatMap$Entries: void remove()
com.badlogic.gdx.utils.IntFloatMap$Entries: void reset()
com.badlogic.gdx.utils.IntFloatMap$Entries: java.lang.Object next()
com.badlogic.gdx.utils.IntFloatMap$Entry
com.badlogic.gdx.utils.IntFloatMap$Entry: int key
com.badlogic.gdx.utils.IntFloatMap$Entry: float value
com.badlogic.gdx.utils.IntFloatMap$Entry: IntFloatMap$Entry()
com.badlogic.gdx.utils.IntFloatMap$Entry: java.lang.String toString()
com.badlogic.gdx.utils.IntFloatMap$Keys
com.badlogic.gdx.utils.IntFloatMap$Keys: IntFloatMap$Keys(com.badlogic.gdx.utils.IntFloatMap)
com.badlogic.gdx.utils.IntFloatMap$Keys: boolean hasNext()
com.badlogic.gdx.utils.IntFloatMap$Keys: int next()
com.badlogic.gdx.utils.IntFloatMap$Keys: com.badlogic.gdx.utils.IntArray toArray()
com.badlogic.gdx.utils.IntFloatMap$Keys: void remove()
com.badlogic.gdx.utils.IntFloatMap$Keys: void reset()
com.badlogic.gdx.utils.IntFloatMap$MapIterator
com.badlogic.gdx.utils.IntFloatMap$MapIterator: int INDEX_ILLEGAL
com.badlogic.gdx.utils.IntFloatMap$MapIterator: int INDEX_ZERO
com.badlogic.gdx.utils.IntFloatMap$MapIterator: boolean hasNext
com.badlogic.gdx.utils.IntFloatMap$MapIterator: com.badlogic.gdx.utils.IntFloatMap map
com.badlogic.gdx.utils.IntFloatMap$MapIterator: int nextIndex
com.badlogic.gdx.utils.IntFloatMap$MapIterator: int currentIndex
com.badlogic.gdx.utils.IntFloatMap$MapIterator: boolean valid
com.badlogic.gdx.utils.IntFloatMap$MapIterator: IntFloatMap$MapIterator(com.badlogic.gdx.utils.IntFloatMap)
com.badlogic.gdx.utils.IntFloatMap$MapIterator: void reset()
com.badlogic.gdx.utils.IntFloatMap$MapIterator: void findNextIndex()
com.badlogic.gdx.utils.IntFloatMap$MapIterator: void remove()
com.badlogic.gdx.utils.IntFloatMap$Values
com.badlogic.gdx.utils.IntFloatMap$Values: IntFloatMap$Values(com.badlogic.gdx.utils.IntFloatMap)
com.badlogic.gdx.utils.IntFloatMap$Values: boolean hasNext()
com.badlogic.gdx.utils.IntFloatMap$Values: float next()
com.badlogic.gdx.utils.IntFloatMap$Values: com.badlogic.gdx.utils.FloatArray toArray()
com.badlogic.gdx.utils.IntFloatMap$Values: void remove()
com.badlogic.gdx.utils.IntFloatMap$Values: void reset()
com.badlogic.gdx.utils.IntIntMap
com.badlogic.gdx.utils.IntIntMap: int PRIME1
com.badlogic.gdx.utils.IntIntMap: int PRIME2
com.badlogic.gdx.utils.IntIntMap: int PRIME3
com.badlogic.gdx.utils.IntIntMap: int EMPTY
com.badlogic.gdx.utils.IntIntMap: int size
com.badlogic.gdx.utils.IntIntMap: int[] keyTable
com.badlogic.gdx.utils.IntIntMap: int[] valueTable
com.badlogic.gdx.utils.IntIntMap: int capacity
com.badlogic.gdx.utils.IntIntMap: int stashSize
com.badlogic.gdx.utils.IntIntMap: int zeroValue
com.badlogic.gdx.utils.IntIntMap: boolean hasZeroValue
com.badlogic.gdx.utils.IntIntMap: float loadFactor
com.badlogic.gdx.utils.IntIntMap: int hashShift
com.badlogic.gdx.utils.IntIntMap: int mask
com.badlogic.gdx.utils.IntIntMap: int threshold
com.badlogic.gdx.utils.IntIntMap: int stashCapacity
com.badlogic.gdx.utils.IntIntMap: int pushIterations
com.badlogic.gdx.utils.IntIntMap: com.badlogic.gdx.utils.IntIntMap$Entries entries1
com.badlogic.gdx.utils.IntIntMap: com.badlogic.gdx.utils.IntIntMap$Entries entries2
com.badlogic.gdx.utils.IntIntMap: com.badlogic.gdx.utils.IntIntMap$Values values1
com.badlogic.gdx.utils.IntIntMap: com.badlogic.gdx.utils.IntIntMap$Values values2
com.badlogic.gdx.utils.IntIntMap: com.badlogic.gdx.utils.IntIntMap$Keys keys1
com.badlogic.gdx.utils.IntIntMap: com.badlogic.gdx.utils.IntIntMap$Keys keys2
com.badlogic.gdx.utils.IntIntMap: IntIntMap()
com.badlogic.gdx.utils.IntIntMap: IntIntMap(int)
com.badlogic.gdx.utils.IntIntMap: IntIntMap(int,float)
com.badlogic.gdx.utils.IntIntMap: IntIntMap(com.badlogic.gdx.utils.IntIntMap)
com.badlogic.gdx.utils.IntIntMap: void put(int,int)
com.badlogic.gdx.utils.IntIntMap: void putAll(com.badlogic.gdx.utils.IntIntMap)
com.badlogic.gdx.utils.IntIntMap: void putResize(int,int)
com.badlogic.gdx.utils.IntIntMap: void push(int,int,int,int,int,int,int,int)
com.badlogic.gdx.utils.IntIntMap: void putStash(int,int)
com.badlogic.gdx.utils.IntIntMap: int get(int,int)
com.badlogic.gdx.utils.IntIntMap: int getStash(int,int)
com.badlogic.gdx.utils.IntIntMap: int getAndIncrement(int,int,int)
com.badlogic.gdx.utils.IntIntMap: int getAndIncrementStash(int,int,int)
com.badlogic.gdx.utils.IntIntMap: int remove(int,int)
com.badlogic.gdx.utils.IntIntMap: int removeStash(int,int)
com.badlogic.gdx.utils.IntIntMap: void removeStashIndex(int)
com.badlogic.gdx.utils.IntIntMap: void shrink(int)
com.badlogic.gdx.utils.IntIntMap: void clear(int)
com.badlogic.gdx.utils.IntIntMap: void clear()
com.badlogic.gdx.utils.IntIntMap: boolean containsValue(int)
com.badlogic.gdx.utils.IntIntMap: boolean containsKey(int)
com.badlogic.gdx.utils.IntIntMap: boolean containsKeyStash(int)
com.badlogic.gdx.utils.IntIntMap: int findKey(int,int)
com.badlogic.gdx.utils.IntIntMap: void ensureCapacity(int)
com.badlogic.gdx.utils.IntIntMap: void resize(int)
com.badlogic.gdx.utils.IntIntMap: int hash2(int)
com.badlogic.gdx.utils.IntIntMap: int hash3(int)
com.badlogic.gdx.utils.IntIntMap: java.lang.String toString()
com.badlogic.gdx.utils.IntIntMap: java.util.Iterator iterator()
com.badlogic.gdx.utils.IntIntMap: com.badlogic.gdx.utils.IntIntMap$Entries entries()
com.badlogic.gdx.utils.IntIntMap: com.badlogic.gdx.utils.IntIntMap$Values values()
com.badlogic.gdx.utils.IntIntMap: com.badlogic.gdx.utils.IntIntMap$Keys keys()
com.badlogic.gdx.utils.IntIntMap$Entries
com.badlogic.gdx.utils.IntIntMap$Entries: com.badlogic.gdx.utils.IntIntMap$Entry entry
com.badlogic.gdx.utils.IntIntMap$Entries: IntIntMap$Entries(com.badlogic.gdx.utils.IntIntMap)
com.badlogic.gdx.utils.IntIntMap$Entries: com.badlogic.gdx.utils.IntIntMap$Entry next()
com.badlogic.gdx.utils.IntIntMap$Entries: boolean hasNext()
com.badlogic.gdx.utils.IntIntMap$Entries: java.util.Iterator iterator()
com.badlogic.gdx.utils.IntIntMap$Entries: void remove()
com.badlogic.gdx.utils.IntIntMap$Entries: void reset()
com.badlogic.gdx.utils.IntIntMap$Entries: java.lang.Object next()
com.badlogic.gdx.utils.IntIntMap$Entry
com.badlogic.gdx.utils.IntIntMap$Entry: int key
com.badlogic.gdx.utils.IntIntMap$Entry: int value
com.badlogic.gdx.utils.IntIntMap$Entry: IntIntMap$Entry()
com.badlogic.gdx.utils.IntIntMap$Entry: java.lang.String toString()
com.badlogic.gdx.utils.IntIntMap$Keys
com.badlogic.gdx.utils.IntIntMap$Keys: IntIntMap$Keys(com.badlogic.gdx.utils.IntIntMap)
com.badlogic.gdx.utils.IntIntMap$Keys: boolean hasNext()
com.badlogic.gdx.utils.IntIntMap$Keys: int next()
com.badlogic.gdx.utils.IntIntMap$Keys: com.badlogic.gdx.utils.IntArray toArray()
com.badlogic.gdx.utils.IntIntMap$Keys: void remove()
com.badlogic.gdx.utils.IntIntMap$Keys: void reset()
com.badlogic.gdx.utils.IntIntMap$MapIterator
com.badlogic.gdx.utils.IntIntMap$MapIterator: int INDEX_ILLEGAL
com.badlogic.gdx.utils.IntIntMap$MapIterator: int INDEX_ZERO
com.badlogic.gdx.utils.IntIntMap$MapIterator: boolean hasNext
com.badlogic.gdx.utils.IntIntMap$MapIterator: com.badlogic.gdx.utils.IntIntMap map
com.badlogic.gdx.utils.IntIntMap$MapIterator: int nextIndex
com.badlogic.gdx.utils.IntIntMap$MapIterator: int currentIndex
com.badlogic.gdx.utils.IntIntMap$MapIterator: boolean valid
com.badlogic.gdx.utils.IntIntMap$MapIterator: IntIntMap$MapIterator(com.badlogic.gdx.utils.IntIntMap)
com.badlogic.gdx.utils.IntIntMap$MapIterator: void reset()
com.badlogic.gdx.utils.IntIntMap$MapIterator: void findNextIndex()
com.badlogic.gdx.utils.IntIntMap$MapIterator: void remove()
com.badlogic.gdx.utils.IntIntMap$Values
com.badlogic.gdx.utils.IntIntMap$Values: IntIntMap$Values(com.badlogic.gdx.utils.IntIntMap)
com.badlogic.gdx.utils.IntIntMap$Values: boolean hasNext()
com.badlogic.gdx.utils.IntIntMap$Values: int next()
com.badlogic.gdx.utils.IntIntMap$Values: com.badlogic.gdx.utils.IntArray toArray()
com.badlogic.gdx.utils.IntIntMap$Values: void remove()
com.badlogic.gdx.utils.IntIntMap$Values: void reset()
com.badlogic.gdx.utils.IntMap
com.badlogic.gdx.utils.IntMap: int PRIME1
com.badlogic.gdx.utils.IntMap: int PRIME2
com.badlogic.gdx.utils.IntMap: int PRIME3
com.badlogic.gdx.utils.IntMap: int EMPTY
com.badlogic.gdx.utils.IntMap: int size
com.badlogic.gdx.utils.IntMap: int[] keyTable
com.badlogic.gdx.utils.IntMap: java.lang.Object[] valueTable
com.badlogic.gdx.utils.IntMap: int capacity
com.badlogic.gdx.utils.IntMap: int stashSize
com.badlogic.gdx.utils.IntMap: java.lang.Object zeroValue
com.badlogic.gdx.utils.IntMap: boolean hasZeroValue
com.badlogic.gdx.utils.IntMap: float loadFactor
com.badlogic.gdx.utils.IntMap: int hashShift
com.badlogic.gdx.utils.IntMap: int mask
com.badlogic.gdx.utils.IntMap: int threshold
com.badlogic.gdx.utils.IntMap: int stashCapacity
com.badlogic.gdx.utils.IntMap: int pushIterations
com.badlogic.gdx.utils.IntMap: com.badlogic.gdx.utils.IntMap$Entries entries1
com.badlogic.gdx.utils.IntMap: com.badlogic.gdx.utils.IntMap$Entries entries2
com.badlogic.gdx.utils.IntMap: com.badlogic.gdx.utils.IntMap$Values values1
com.badlogic.gdx.utils.IntMap: com.badlogic.gdx.utils.IntMap$Values values2
com.badlogic.gdx.utils.IntMap: com.badlogic.gdx.utils.IntMap$Keys keys1
com.badlogic.gdx.utils.IntMap: com.badlogic.gdx.utils.IntMap$Keys keys2
com.badlogic.gdx.utils.IntMap: IntMap()
com.badlogic.gdx.utils.IntMap: IntMap(int)
com.badlogic.gdx.utils.IntMap: IntMap(int,float)
com.badlogic.gdx.utils.IntMap: IntMap(com.badlogic.gdx.utils.IntMap)
com.badlogic.gdx.utils.IntMap: java.lang.Object put(int,java.lang.Object)
com.badlogic.gdx.utils.IntMap: void putAll(com.badlogic.gdx.utils.IntMap)
com.badlogic.gdx.utils.IntMap: void putResize(int,java.lang.Object)
com.badlogic.gdx.utils.IntMap: void push(int,java.lang.Object,int,int,int,int,int,int)
com.badlogic.gdx.utils.IntMap: void putStash(int,java.lang.Object)
com.badlogic.gdx.utils.IntMap: java.lang.Object get(int)
com.badlogic.gdx.utils.IntMap: java.lang.Object get(int,java.lang.Object)
com.badlogic.gdx.utils.IntMap: java.lang.Object getStash(int,java.lang.Object)
com.badlogic.gdx.utils.IntMap: java.lang.Object remove(int)
com.badlogic.gdx.utils.IntMap: java.lang.Object removeStash(int)
com.badlogic.gdx.utils.IntMap: void removeStashIndex(int)
com.badlogic.gdx.utils.IntMap: void shrink(int)
com.badlogic.gdx.utils.IntMap: void clear(int)
com.badlogic.gdx.utils.IntMap: void clear()
com.badlogic.gdx.utils.IntMap: boolean containsValue(java.lang.Object,boolean)
com.badlogic.gdx.utils.IntMap: boolean containsKey(int)
com.badlogic.gdx.utils.IntMap: boolean containsKeyStash(int)
com.badlogic.gdx.utils.IntMap: int findKey(java.lang.Object,boolean,int)
com.badlogic.gdx.utils.IntMap: void ensureCapacity(int)
com.badlogic.gdx.utils.IntMap: void resize(int)
com.badlogic.gdx.utils.IntMap: int hash2(int)
com.badlogic.gdx.utils.IntMap: int hash3(int)
com.badlogic.gdx.utils.IntMap: java.lang.String toString()
com.badlogic.gdx.utils.IntMap: java.util.Iterator iterator()
com.badlogic.gdx.utils.IntMap: com.badlogic.gdx.utils.IntMap$Entries entries()
com.badlogic.gdx.utils.IntMap: com.badlogic.gdx.utils.IntMap$Values values()
com.badlogic.gdx.utils.IntMap: com.badlogic.gdx.utils.IntMap$Keys keys()
com.badlogic.gdx.utils.IntMap$Entries
com.badlogic.gdx.utils.IntMap$Entries: com.badlogic.gdx.utils.IntMap$Entry entry
com.badlogic.gdx.utils.IntMap$Entries: IntMap$Entries(com.badlogic.gdx.utils.IntMap)
com.badlogic.gdx.utils.IntMap$Entries: com.badlogic.gdx.utils.IntMap$Entry next()
com.badlogic.gdx.utils.IntMap$Entries: boolean hasNext()
com.badlogic.gdx.utils.IntMap$Entries: java.util.Iterator iterator()
com.badlogic.gdx.utils.IntMap$Entries: void remove()
com.badlogic.gdx.utils.IntMap$Entries: void reset()
com.badlogic.gdx.utils.IntMap$Entries: java.lang.Object next()
com.badlogic.gdx.utils.IntMap$Entry
com.badlogic.gdx.utils.IntMap$Entry: int key
com.badlogic.gdx.utils.IntMap$Entry: java.lang.Object value
com.badlogic.gdx.utils.IntMap$Entry: IntMap$Entry()
com.badlogic.gdx.utils.IntMap$Entry: java.lang.String toString()
com.badlogic.gdx.utils.IntMap$Keys
com.badlogic.gdx.utils.IntMap$Keys: IntMap$Keys(com.badlogic.gdx.utils.IntMap)
com.badlogic.gdx.utils.IntMap$Keys: int next()
com.badlogic.gdx.utils.IntMap$Keys: com.badlogic.gdx.utils.IntArray toArray()
com.badlogic.gdx.utils.IntMap$Keys: void remove()
com.badlogic.gdx.utils.IntMap$Keys: void reset()
com.badlogic.gdx.utils.IntMap$MapIterator
com.badlogic.gdx.utils.IntMap$MapIterator: int INDEX_ILLEGAL
com.badlogic.gdx.utils.IntMap$MapIterator: int INDEX_ZERO
com.badlogic.gdx.utils.IntMap$MapIterator: boolean hasNext
com.badlogic.gdx.utils.IntMap$MapIterator: com.badlogic.gdx.utils.IntMap map
com.badlogic.gdx.utils.IntMap$MapIterator: int nextIndex
com.badlogic.gdx.utils.IntMap$MapIterator: int currentIndex
com.badlogic.gdx.utils.IntMap$MapIterator: boolean valid
com.badlogic.gdx.utils.IntMap$MapIterator: IntMap$MapIterator(com.badlogic.gdx.utils.IntMap)
com.badlogic.gdx.utils.IntMap$MapIterator: void reset()
com.badlogic.gdx.utils.IntMap$MapIterator: void findNextIndex()
com.badlogic.gdx.utils.IntMap$MapIterator: void remove()
com.badlogic.gdx.utils.IntMap$Values
com.badlogic.gdx.utils.IntMap$Values: IntMap$Values(com.badlogic.gdx.utils.IntMap)
com.badlogic.gdx.utils.IntMap$Values: boolean hasNext()
com.badlogic.gdx.utils.IntMap$Values: java.lang.Object next()
com.badlogic.gdx.utils.IntMap$Values: java.util.Iterator iterator()
com.badlogic.gdx.utils.IntMap$Values: com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.IntMap$Values: void remove()
com.badlogic.gdx.utils.IntMap$Values: void reset()
com.badlogic.gdx.utils.IntSet
com.badlogic.gdx.utils.IntSet: int PRIME1
com.badlogic.gdx.utils.IntSet: int PRIME2
com.badlogic.gdx.utils.IntSet: int PRIME3
com.badlogic.gdx.utils.IntSet: int EMPTY
com.badlogic.gdx.utils.IntSet: int size
com.badlogic.gdx.utils.IntSet: int[] keyTable
com.badlogic.gdx.utils.IntSet: int capacity
com.badlogic.gdx.utils.IntSet: int stashSize
com.badlogic.gdx.utils.IntSet: boolean hasZeroValue
com.badlogic.gdx.utils.IntSet: float loadFactor
com.badlogic.gdx.utils.IntSet: int hashShift
com.badlogic.gdx.utils.IntSet: int mask
com.badlogic.gdx.utils.IntSet: int threshold
com.badlogic.gdx.utils.IntSet: int stashCapacity
com.badlogic.gdx.utils.IntSet: int pushIterations
com.badlogic.gdx.utils.IntSet: com.badlogic.gdx.utils.IntSet$IntSetIterator iterator1
com.badlogic.gdx.utils.IntSet: com.badlogic.gdx.utils.IntSet$IntSetIterator iterator2
com.badlogic.gdx.utils.IntSet: IntSet()
com.badlogic.gdx.utils.IntSet: IntSet(int)
com.badlogic.gdx.utils.IntSet: IntSet(int,float)
com.badlogic.gdx.utils.IntSet: IntSet(com.badlogic.gdx.utils.IntSet)
com.badlogic.gdx.utils.IntSet: boolean add(int)
com.badlogic.gdx.utils.IntSet: void addAll(com.badlogic.gdx.utils.IntArray)
com.badlogic.gdx.utils.IntSet: void addAll(com.badlogic.gdx.utils.IntArray,int,int)
com.badlogic.gdx.utils.IntSet: void addAll(int[])
com.badlogic.gdx.utils.IntSet: void addAll(int[],int,int)
com.badlogic.gdx.utils.IntSet: void addAll(com.badlogic.gdx.utils.IntSet)
com.badlogic.gdx.utils.IntSet: void addResize(int)
com.badlogic.gdx.utils.IntSet: void push(int,int,int,int,int,int,int)
com.badlogic.gdx.utils.IntSet: void addStash(int)
com.badlogic.gdx.utils.IntSet: boolean remove(int)
com.badlogic.gdx.utils.IntSet: boolean removeStash(int)
com.badlogic.gdx.utils.IntSet: void removeStashIndex(int)
com.badlogic.gdx.utils.IntSet: void shrink(int)
com.badlogic.gdx.utils.IntSet: void clear(int)
com.badlogic.gdx.utils.IntSet: void clear()
com.badlogic.gdx.utils.IntSet: boolean contains(int)
com.badlogic.gdx.utils.IntSet: boolean containsKeyStash(int)
com.badlogic.gdx.utils.IntSet: int first()
com.badlogic.gdx.utils.IntSet: void ensureCapacity(int)
com.badlogic.gdx.utils.IntSet: void resize(int)
com.badlogic.gdx.utils.IntSet: int hash2(int)
com.badlogic.gdx.utils.IntSet: int hash3(int)
com.badlogic.gdx.utils.IntSet: java.lang.String toString()
com.badlogic.gdx.utils.IntSet: com.badlogic.gdx.utils.IntSet$IntSetIterator iterator()
com.badlogic.gdx.utils.IntSet: com.badlogic.gdx.utils.IntSet with(int[])
com.badlogic.gdx.utils.IntSet$IntSetIterator
com.badlogic.gdx.utils.IntSet$IntSetIterator: int INDEX_ILLEGAL
com.badlogic.gdx.utils.IntSet$IntSetIterator: int INDEX_ZERO
com.badlogic.gdx.utils.IntSet$IntSetIterator: boolean hasNext
com.badlogic.gdx.utils.IntSet$IntSetIterator: com.badlogic.gdx.utils.IntSet set
com.badlogic.gdx.utils.IntSet$IntSetIterator: int nextIndex
com.badlogic.gdx.utils.IntSet$IntSetIterator: int currentIndex
com.badlogic.gdx.utils.IntSet$IntSetIterator: boolean valid
com.badlogic.gdx.utils.IntSet$IntSetIterator: IntSet$IntSetIterator(com.badlogic.gdx.utils.IntSet)
com.badlogic.gdx.utils.IntSet$IntSetIterator: void reset()
com.badlogic.gdx.utils.IntSet$IntSetIterator: void findNextIndex()
com.badlogic.gdx.utils.IntSet$IntSetIterator: void remove()
com.badlogic.gdx.utils.IntSet$IntSetIterator: int next()
com.badlogic.gdx.utils.IntSet$IntSetIterator: com.badlogic.gdx.utils.IntArray toArray()
com.badlogic.gdx.utils.Json
com.badlogic.gdx.utils.Json: boolean debug
com.badlogic.gdx.utils.Json: com.badlogic.gdx.utils.JsonWriter writer
com.badlogic.gdx.utils.Json: java.lang.String typeName
com.badlogic.gdx.utils.Json: boolean usePrototypes
com.badlogic.gdx.utils.Json: com.badlogic.gdx.utils.JsonWriter$OutputType outputType
com.badlogic.gdx.utils.Json: com.badlogic.gdx.utils.ObjectMap typeToFields
com.badlogic.gdx.utils.Json: com.badlogic.gdx.utils.ObjectMap tagToClass
com.badlogic.gdx.utils.Json: com.badlogic.gdx.utils.ObjectMap classToTag
com.badlogic.gdx.utils.Json: com.badlogic.gdx.utils.ObjectMap classToSerializer
com.badlogic.gdx.utils.Json: com.badlogic.gdx.utils.ObjectMap classToDefaultValues
com.badlogic.gdx.utils.Json: com.badlogic.gdx.utils.Json$Serializer defaultSerializer
com.badlogic.gdx.utils.Json: boolean ignoreUnknownFields
com.badlogic.gdx.utils.Json: Json()
com.badlogic.gdx.utils.Json: Json(com.badlogic.gdx.utils.JsonWriter$OutputType)
com.badlogic.gdx.utils.Json: void setIgnoreUnknownFields(boolean)
com.badlogic.gdx.utils.Json: void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType)
com.badlogic.gdx.utils.Json: void addClassTag(java.lang.String,java.lang.Class)
com.badlogic.gdx.utils.Json: java.lang.Class getClass(java.lang.String)
com.badlogic.gdx.utils.Json: java.lang.String getTag(java.lang.Class)
com.badlogic.gdx.utils.Json: void setTypeName(java.lang.String)
com.badlogic.gdx.utils.Json: void setDefaultSerializer(com.badlogic.gdx.utils.Json$Serializer)
com.badlogic.gdx.utils.Json: void setSerializer(java.lang.Class,com.badlogic.gdx.utils.Json$Serializer)
com.badlogic.gdx.utils.Json: com.badlogic.gdx.utils.Json$Serializer getSerializer(java.lang.Class)
com.badlogic.gdx.utils.Json: void setUsePrototypes(boolean)
com.badlogic.gdx.utils.Json: void setElementType(java.lang.Class,java.lang.String,java.lang.Class)
com.badlogic.gdx.utils.Json: com.badlogic.gdx.utils.ObjectMap cacheFields(java.lang.Class)
com.badlogic.gdx.utils.Json: java.lang.String toJson(java.lang.Object)
com.badlogic.gdx.utils.Json: java.lang.String toJson(java.lang.Object,java.lang.Class)
com.badlogic.gdx.utils.Json: java.lang.String toJson(java.lang.Object,java.lang.Class,java.lang.Class)
com.badlogic.gdx.utils.Json: void toJson(java.lang.Object,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.utils.Json: void toJson(java.lang.Object,java.lang.Class,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.utils.Json: void toJson(java.lang.Object,java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.utils.Json: void toJson(java.lang.Object,java.io.Writer)
com.badlogic.gdx.utils.Json: void toJson(java.lang.Object,java.lang.Class,java.io.Writer)
com.badlogic.gdx.utils.Json: void toJson(java.lang.Object,java.lang.Class,java.lang.Class,java.io.Writer)
com.badlogic.gdx.utils.Json: void setWriter(java.io.Writer)
com.badlogic.gdx.utils.Json: com.badlogic.gdx.utils.JsonWriter getWriter()
com.badlogic.gdx.utils.Json: void writeFields(java.lang.Object)
com.badlogic.gdx.utils.Json: java.lang.Object[] getDefaultValues(java.lang.Class)
com.badlogic.gdx.utils.Json: void writeField(java.lang.Object,java.lang.String)
com.badlogic.gdx.utils.Json: void writeField(java.lang.Object,java.lang.String,java.lang.Class)
com.badlogic.gdx.utils.Json: void writeField(java.lang.Object,java.lang.String,java.lang.String)
com.badlogic.gdx.utils.Json: void writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class)
com.badlogic.gdx.utils.Json: void writeValue(java.lang.String,java.lang.Object)
com.badlogic.gdx.utils.Json: void writeValue(java.lang.String,java.lang.Object,java.lang.Class)
com.badlogic.gdx.utils.Json: void writeValue(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Class)
com.badlogic.gdx.utils.Json: void writeValue(java.lang.Object)
com.badlogic.gdx.utils.Json: void writeValue(java.lang.Object,java.lang.Class)
com.badlogic.gdx.utils.Json: void writeValue(java.lang.Object,java.lang.Class,java.lang.Class)
com.badlogic.gdx.utils.Json: void writeObjectStart(java.lang.String)
com.badlogic.gdx.utils.Json: void writeObjectStart(java.lang.String,java.lang.Class,java.lang.Class)
com.badlogic.gdx.utils.Json: void writeObjectStart()
com.badlogic.gdx.utils.Json: void writeObjectStart(java.lang.Class,java.lang.Class)
com.badlogic.gdx.utils.Json: void writeObjectEnd()
com.badlogic.gdx.utils.Json: void writeArrayStart(java.lang.String)
com.badlogic.gdx.utils.Json: void writeArrayStart()
com.badlogic.gdx.utils.Json: void writeArrayEnd()
com.badlogic.gdx.utils.Json: void writeType(java.lang.Class)
com.badlogic.gdx.utils.Json: java.lang.Object fromJson(java.lang.Class,java.io.Reader)
com.badlogic.gdx.utils.Json: java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.Reader)
com.badlogic.gdx.utils.Json: java.lang.Object fromJson(java.lang.Class,java.io.InputStream)
com.badlogic.gdx.utils.Json: java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.InputStream)
com.badlogic.gdx.utils.Json: java.lang.Object fromJson(java.lang.Class,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.utils.Json: java.lang.Object fromJson(java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.utils.Json: java.lang.Object fromJson(java.lang.Class,char[],int,int)
com.badlogic.gdx.utils.Json: java.lang.Object fromJson(java.lang.Class,java.lang.Class,char[],int,int)
com.badlogic.gdx.utils.Json: java.lang.Object fromJson(java.lang.Class,java.lang.String)
com.badlogic.gdx.utils.Json: java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.lang.String)
com.badlogic.gdx.utils.Json: void readField(java.lang.Object,java.lang.String,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.Json: void readField(java.lang.Object,java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.Json: void readField(java.lang.Object,java.lang.String,java.lang.String,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.Json: void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.Json: void readFields(java.lang.Object,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.Json: java.lang.Object readValue(java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.Json: java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.Json: java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.Json: java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.Json: java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.Json: java.lang.Object readValue(java.lang.Class,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.Json: java.lang.Object readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.Json: java.lang.String convertToString(java.lang.Object)
com.badlogic.gdx.utils.Json: java.lang.Object newInstance(java.lang.Class)
com.badlogic.gdx.utils.Json: java.lang.String prettyPrint(java.lang.Object)
com.badlogic.gdx.utils.Json: java.lang.String prettyPrint(java.lang.String)
com.badlogic.gdx.utils.Json: java.lang.String prettyPrint(java.lang.Object,int)
com.badlogic.gdx.utils.Json: java.lang.String prettyPrint(java.lang.String,int)
com.badlogic.gdx.utils.Json: java.lang.String prettyPrint(java.lang.Object,com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings)
com.badlogic.gdx.utils.Json: java.lang.String prettyPrint(java.lang.String,com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings)
com.badlogic.gdx.utils.Json$FieldMetadata
com.badlogic.gdx.utils.Json$FieldMetadata: com.badlogic.gdx.utils.reflect.Field field
com.badlogic.gdx.utils.Json$FieldMetadata: java.lang.Class elementType
com.badlogic.gdx.utils.Json$FieldMetadata: Json$FieldMetadata(com.badlogic.gdx.utils.reflect.Field)
com.badlogic.gdx.utils.Json$ReadOnlySerializer
com.badlogic.gdx.utils.Json$ReadOnlySerializer: Json$ReadOnlySerializer()
com.badlogic.gdx.utils.Json$ReadOnlySerializer: void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class)
com.badlogic.gdx.utils.Json$ReadOnlySerializer: java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class)
com.badlogic.gdx.utils.Json$Serializable
com.badlogic.gdx.utils.Json$Serializable: void write(com.badlogic.gdx.utils.Json)
com.badlogic.gdx.utils.Json$Serializable: void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.Json$Serializer
com.badlogic.gdx.utils.Json$Serializer: void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class)
com.badlogic.gdx.utils.Json$Serializer: java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class)
com.badlogic.gdx.utils.JsonReader
com.badlogic.gdx.utils.JsonReader: byte[] _json_actions
com.badlogic.gdx.utils.JsonReader: short[] _json_key_offsets
com.badlogic.gdx.utils.JsonReader: char[] _json_trans_keys
com.badlogic.gdx.utils.JsonReader: byte[] _json_single_lengths
com.badlogic.gdx.utils.JsonReader: byte[] _json_range_lengths
com.badlogic.gdx.utils.JsonReader: short[] _json_index_offsets
com.badlogic.gdx.utils.JsonReader: byte[] _json_indicies
com.badlogic.gdx.utils.JsonReader: byte[] _json_trans_targs
com.badlogic.gdx.utils.JsonReader: byte[] _json_trans_actions
com.badlogic.gdx.utils.JsonReader: byte[] _json_eof_actions
com.badlogic.gdx.utils.JsonReader: int json_start
com.badlogic.gdx.utils.JsonReader: int json_first_final
com.badlogic.gdx.utils.JsonReader: int json_error
com.badlogic.gdx.utils.JsonReader: int json_en_object
com.badlogic.gdx.utils.JsonReader: int json_en_array
com.badlogic.gdx.utils.JsonReader: int json_en_main
com.badlogic.gdx.utils.JsonReader: com.badlogic.gdx.utils.Array elements
com.badlogic.gdx.utils.JsonReader: com.badlogic.gdx.utils.Array lastChild
com.badlogic.gdx.utils.JsonReader: com.badlogic.gdx.utils.JsonValue root
com.badlogic.gdx.utils.JsonReader: com.badlogic.gdx.utils.JsonValue current
com.badlogic.gdx.utils.JsonReader: JsonReader()
com.badlogic.gdx.utils.JsonReader: com.badlogic.gdx.utils.JsonValue parse(java.lang.String)
com.badlogic.gdx.utils.JsonReader: com.badlogic.gdx.utils.JsonValue parse(java.io.Reader)
com.badlogic.gdx.utils.JsonReader: com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream)
com.badlogic.gdx.utils.JsonReader: com.badlogic.gdx.utils.JsonValue parse(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.utils.JsonReader: com.badlogic.gdx.utils.JsonValue parse(char[],int,int)
com.badlogic.gdx.utils.JsonReader: byte[] init__json_actions_0()
com.badlogic.gdx.utils.JsonReader: short[] init__json_key_offsets_0()
com.badlogic.gdx.utils.JsonReader: char[] init__json_trans_keys_0()
com.badlogic.gdx.utils.JsonReader: byte[] init__json_single_lengths_0()
com.badlogic.gdx.utils.JsonReader: byte[] init__json_range_lengths_0()
com.badlogic.gdx.utils.JsonReader: short[] init__json_index_offsets_0()
com.badlogic.gdx.utils.JsonReader: byte[] init__json_indicies_0()
com.badlogic.gdx.utils.JsonReader: byte[] init__json_trans_targs_0()
com.badlogic.gdx.utils.JsonReader: byte[] init__json_trans_actions_0()
com.badlogic.gdx.utils.JsonReader: byte[] init__json_eof_actions_0()
com.badlogic.gdx.utils.JsonReader: void addChild(java.lang.String,com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.JsonReader: void startObject(java.lang.String)
com.badlogic.gdx.utils.JsonReader: void startArray(java.lang.String)
com.badlogic.gdx.utils.JsonReader: void pop()
com.badlogic.gdx.utils.JsonReader: void string(java.lang.String,java.lang.String)
com.badlogic.gdx.utils.JsonReader: void number(java.lang.String,double)
com.badlogic.gdx.utils.JsonReader: void number(java.lang.String,long)
com.badlogic.gdx.utils.JsonReader: void bool(java.lang.String,boolean)
com.badlogic.gdx.utils.JsonReader: java.lang.String unescape(java.lang.String)
com.badlogic.gdx.utils.JsonReader: void <clinit>()
com.badlogic.gdx.utils.JsonValue
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue$ValueType type
com.badlogic.gdx.utils.JsonValue: java.lang.String stringValue
com.badlogic.gdx.utils.JsonValue: double doubleValue
com.badlogic.gdx.utils.JsonValue: long longValue
com.badlogic.gdx.utils.JsonValue: java.lang.String name
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue child
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue next
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue prev
com.badlogic.gdx.utils.JsonValue: int size
com.badlogic.gdx.utils.JsonValue: JsonValue(com.badlogic.gdx.utils.JsonValue$ValueType)
com.badlogic.gdx.utils.JsonValue: JsonValue(java.lang.String)
com.badlogic.gdx.utils.JsonValue: JsonValue(double)
com.badlogic.gdx.utils.JsonValue: JsonValue(long)
com.badlogic.gdx.utils.JsonValue: JsonValue(boolean)
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue get(int)
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue get(java.lang.String)
com.badlogic.gdx.utils.JsonValue: boolean has(java.lang.String)
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue require(int)
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue require(java.lang.String)
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue remove(int)
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue remove(java.lang.String)
com.badlogic.gdx.utils.JsonValue: int size()
com.badlogic.gdx.utils.JsonValue: java.lang.String asString()
com.badlogic.gdx.utils.JsonValue: float asFloat()
com.badlogic.gdx.utils.JsonValue: double asDouble()
com.badlogic.gdx.utils.JsonValue: long asLong()
com.badlogic.gdx.utils.JsonValue: int asInt()
com.badlogic.gdx.utils.JsonValue: boolean asBoolean()
com.badlogic.gdx.utils.JsonValue: byte asByte()
com.badlogic.gdx.utils.JsonValue: short asShort()
com.badlogic.gdx.utils.JsonValue: char asChar()
com.badlogic.gdx.utils.JsonValue: java.lang.String[] asStringArray()
com.badlogic.gdx.utils.JsonValue: float[] asFloatArray()
com.badlogic.gdx.utils.JsonValue: double[] asDoubleArray()
com.badlogic.gdx.utils.JsonValue: long[] asLongArray()
com.badlogic.gdx.utils.JsonValue: int[] asIntArray()
com.badlogic.gdx.utils.JsonValue: boolean[] asBooleanArray()
com.badlogic.gdx.utils.JsonValue: byte[] asByteArray()
com.badlogic.gdx.utils.JsonValue: short[] asShortArray()
com.badlogic.gdx.utils.JsonValue: char[] asCharArray()
com.badlogic.gdx.utils.JsonValue: boolean hasChild(java.lang.String)
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue getChild(java.lang.String)
com.badlogic.gdx.utils.JsonValue: java.lang.String getString(java.lang.String,java.lang.String)
com.badlogic.gdx.utils.JsonValue: float getFloat(java.lang.String,float)
com.badlogic.gdx.utils.JsonValue: double getDouble(java.lang.String,double)
com.badlogic.gdx.utils.JsonValue: long getLong(java.lang.String,long)
com.badlogic.gdx.utils.JsonValue: int getInt(java.lang.String,int)
com.badlogic.gdx.utils.JsonValue: boolean getBoolean(java.lang.String,boolean)
com.badlogic.gdx.utils.JsonValue: byte getByte(java.lang.String,byte)
com.badlogic.gdx.utils.JsonValue: short getShort(java.lang.String,short)
com.badlogic.gdx.utils.JsonValue: char getChar(java.lang.String,char)
com.badlogic.gdx.utils.JsonValue: java.lang.String getString(java.lang.String)
com.badlogic.gdx.utils.JsonValue: float getFloat(java.lang.String)
com.badlogic.gdx.utils.JsonValue: double getDouble(java.lang.String)
com.badlogic.gdx.utils.JsonValue: long getLong(java.lang.String)
com.badlogic.gdx.utils.JsonValue: int getInt(java.lang.String)
com.badlogic.gdx.utils.JsonValue: boolean getBoolean(java.lang.String)
com.badlogic.gdx.utils.JsonValue: byte getByte(java.lang.String)
com.badlogic.gdx.utils.JsonValue: short getShort(java.lang.String)
com.badlogic.gdx.utils.JsonValue: char getChar(java.lang.String)
com.badlogic.gdx.utils.JsonValue: java.lang.String getString(int)
com.badlogic.gdx.utils.JsonValue: float getFloat(int)
com.badlogic.gdx.utils.JsonValue: double getDouble(int)
com.badlogic.gdx.utils.JsonValue: long getLong(int)
com.badlogic.gdx.utils.JsonValue: int getInt(int)
com.badlogic.gdx.utils.JsonValue: boolean getBoolean(int)
com.badlogic.gdx.utils.JsonValue: byte getByte(int)
com.badlogic.gdx.utils.JsonValue: short getShort(int)
com.badlogic.gdx.utils.JsonValue: char getChar(int)
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue$ValueType type()
com.badlogic.gdx.utils.JsonValue: void setType(com.badlogic.gdx.utils.JsonValue$ValueType)
com.badlogic.gdx.utils.JsonValue: boolean isArray()
com.badlogic.gdx.utils.JsonValue: boolean isObject()
com.badlogic.gdx.utils.JsonValue: boolean isString()
com.badlogic.gdx.utils.JsonValue: boolean isNumber()
com.badlogic.gdx.utils.JsonValue: boolean isDouble()
com.badlogic.gdx.utils.JsonValue: boolean isLong()
com.badlogic.gdx.utils.JsonValue: boolean isBoolean()
com.badlogic.gdx.utils.JsonValue: boolean isNull()
com.badlogic.gdx.utils.JsonValue: boolean isValue()
com.badlogic.gdx.utils.JsonValue: java.lang.String name()
com.badlogic.gdx.utils.JsonValue: void setName(java.lang.String)
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue child()
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue next()
com.badlogic.gdx.utils.JsonValue: void setNext(com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue prev()
com.badlogic.gdx.utils.JsonValue: void setPrev(com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.JsonValue: void set(java.lang.String)
com.badlogic.gdx.utils.JsonValue: void set(double)
com.badlogic.gdx.utils.JsonValue: void set(long)
com.badlogic.gdx.utils.JsonValue: void set(boolean)
com.badlogic.gdx.utils.JsonValue: java.lang.String toString()
com.badlogic.gdx.utils.JsonValue: java.lang.String prettyPrint(com.badlogic.gdx.utils.JsonWriter$OutputType,int)
com.badlogic.gdx.utils.JsonValue: java.lang.String prettyPrint(com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings)
com.badlogic.gdx.utils.JsonValue: void prettyPrint(com.badlogic.gdx.utils.JsonValue,com.badlogic.gdx.utils.StringBuilder,int,com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings)
com.badlogic.gdx.utils.JsonValue: boolean isFlat(com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.JsonValue: boolean isNumeric(com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.JsonValue: void indent(int,com.badlogic.gdx.utils.StringBuilder)
com.badlogic.gdx.utils.JsonValue: com.badlogic.gdx.utils.JsonValue$JsonIterator iterator()
com.badlogic.gdx.utils.JsonValue: java.util.Iterator iterator()
com.badlogic.gdx.utils.JsonValue$1
com.badlogic.gdx.utils.JsonValue$1: int[] $SwitchMap$com$badlogic$gdx$utils$JsonValue$ValueType
com.badlogic.gdx.utils.JsonValue$1: void <clinit>()
com.badlogic.gdx.utils.JsonValue$JsonIterator
com.badlogic.gdx.utils.JsonValue$JsonIterator: com.badlogic.gdx.utils.JsonValue entry
com.badlogic.gdx.utils.JsonValue$JsonIterator: com.badlogic.gdx.utils.JsonValue current
com.badlogic.gdx.utils.JsonValue$JsonIterator: com.badlogic.gdx.utils.JsonValue this$0
com.badlogic.gdx.utils.JsonValue$JsonIterator: JsonValue$JsonIterator(com.badlogic.gdx.utils.JsonValue)
com.badlogic.gdx.utils.JsonValue$JsonIterator: boolean hasNext()
com.badlogic.gdx.utils.JsonValue$JsonIterator: com.badlogic.gdx.utils.JsonValue next()
com.badlogic.gdx.utils.JsonValue$JsonIterator: void remove()
com.badlogic.gdx.utils.JsonValue$JsonIterator: java.util.Iterator iterator()
com.badlogic.gdx.utils.JsonValue$JsonIterator: java.lang.Object next()
com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings
com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings: com.badlogic.gdx.utils.JsonWriter$OutputType outputType
com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings: int singleLineColumns
com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings: boolean wrapNumericArrays
com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings: JsonValue$PrettyPrintSettings()
com.badlogic.gdx.utils.JsonValue$ValueType
com.badlogic.gdx.utils.JsonValue$ValueType: com.badlogic.gdx.utils.JsonValue$ValueType object
com.badlogic.gdx.utils.JsonValue$ValueType: com.badlogic.gdx.utils.JsonValue$ValueType array
com.badlogic.gdx.utils.JsonValue$ValueType: com.badlogic.gdx.utils.JsonValue$ValueType stringValue
com.badlogic.gdx.utils.JsonValue$ValueType: com.badlogic.gdx.utils.JsonValue$ValueType doubleValue
com.badlogic.gdx.utils.JsonValue$ValueType: com.badlogic.gdx.utils.JsonValue$ValueType longValue
com.badlogic.gdx.utils.JsonValue$ValueType: com.badlogic.gdx.utils.JsonValue$ValueType booleanValue
com.badlogic.gdx.utils.JsonValue$ValueType: com.badlogic.gdx.utils.JsonValue$ValueType nullValue
com.badlogic.gdx.utils.JsonValue$ValueType: com.badlogic.gdx.utils.JsonValue$ValueType[] $VALUES
com.badlogic.gdx.utils.JsonValue$ValueType: com.badlogic.gdx.utils.JsonValue$ValueType[] values()
com.badlogic.gdx.utils.JsonValue$ValueType: com.badlogic.gdx.utils.JsonValue$ValueType valueOf(java.lang.String)
com.badlogic.gdx.utils.JsonValue$ValueType: JsonValue$ValueType(java.lang.String,int)
com.badlogic.gdx.utils.JsonValue$ValueType: void <clinit>()
com.badlogic.gdx.utils.JsonWriter
com.badlogic.gdx.utils.JsonWriter: java.io.Writer writer
com.badlogic.gdx.utils.JsonWriter: com.badlogic.gdx.utils.Array stack
com.badlogic.gdx.utils.JsonWriter: com.badlogic.gdx.utils.JsonWriter$JsonObject current
com.badlogic.gdx.utils.JsonWriter: boolean named
com.badlogic.gdx.utils.JsonWriter: com.badlogic.gdx.utils.JsonWriter$OutputType outputType
com.badlogic.gdx.utils.JsonWriter: JsonWriter(java.io.Writer)
com.badlogic.gdx.utils.JsonWriter: java.io.Writer getWriter()
com.badlogic.gdx.utils.JsonWriter: void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType)
com.badlogic.gdx.utils.JsonWriter: com.badlogic.gdx.utils.JsonWriter name(java.lang.String)
com.badlogic.gdx.utils.JsonWriter: com.badlogic.gdx.utils.JsonWriter object()
com.badlogic.gdx.utils.JsonWriter: com.badlogic.gdx.utils.JsonWriter array()
com.badlogic.gdx.utils.JsonWriter: com.badlogic.gdx.utils.JsonWriter value(java.lang.Object)
com.badlogic.gdx.utils.JsonWriter: com.badlogic.gdx.utils.JsonWriter object(java.lang.String)
com.badlogic.gdx.utils.JsonWriter: com.badlogic.gdx.utils.JsonWriter array(java.lang.String)
com.badlogic.gdx.utils.JsonWriter: com.badlogic.gdx.utils.JsonWriter set(java.lang.String,java.lang.Object)
com.badlogic.gdx.utils.JsonWriter: com.badlogic.gdx.utils.JsonWriter pop()
com.badlogic.gdx.utils.JsonWriter: void write(char[],int,int)
com.badlogic.gdx.utils.JsonWriter: void flush()
com.badlogic.gdx.utils.JsonWriter: void close()
com.badlogic.gdx.utils.JsonWriter$1
com.badlogic.gdx.utils.JsonWriter$1: int[] $SwitchMap$com$badlogic$gdx$utils$JsonWriter$OutputType
com.badlogic.gdx.utils.JsonWriter$1: void <clinit>()
com.badlogic.gdx.utils.JsonWriter$JsonObject
com.badlogic.gdx.utils.JsonWriter$JsonObject: boolean array
com.badlogic.gdx.utils.JsonWriter$JsonObject: boolean needsComma
com.badlogic.gdx.utils.JsonWriter$JsonObject: com.badlogic.gdx.utils.JsonWriter this$0
com.badlogic.gdx.utils.JsonWriter$JsonObject: JsonWriter$JsonObject(com.badlogic.gdx.utils.JsonWriter,boolean)
com.badlogic.gdx.utils.JsonWriter$JsonObject: void close()
com.badlogic.gdx.utils.JsonWriter$OutputType
com.badlogic.gdx.utils.JsonWriter$OutputType: com.badlogic.gdx.utils.JsonWriter$OutputType json
com.badlogic.gdx.utils.JsonWriter$OutputType: com.badlogic.gdx.utils.JsonWriter$OutputType javascript
com.badlogic.gdx.utils.JsonWriter$OutputType: com.badlogic.gdx.utils.JsonWriter$OutputType minimal
com.badlogic.gdx.utils.JsonWriter$OutputType: java.util.regex.Pattern javascriptPattern
com.badlogic.gdx.utils.JsonWriter$OutputType: java.util.regex.Pattern minimalNamePattern
com.badlogic.gdx.utils.JsonWriter$OutputType: java.util.regex.Pattern minimalValuePattern
com.badlogic.gdx.utils.JsonWriter$OutputType: com.badlogic.gdx.utils.JsonWriter$OutputType[] $VALUES
com.badlogic.gdx.utils.JsonWriter$OutputType: com.badlogic.gdx.utils.JsonWriter$OutputType[] values()
com.badlogic.gdx.utils.JsonWriter$OutputType: com.badlogic.gdx.utils.JsonWriter$OutputType valueOf(java.lang.String)
com.badlogic.gdx.utils.JsonWriter$OutputType: JsonWriter$OutputType(java.lang.String,int)
com.badlogic.gdx.utils.JsonWriter$OutputType: java.lang.String quoteValue(java.lang.Object)
com.badlogic.gdx.utils.JsonWriter$OutputType: java.lang.String quoteName(java.lang.String)
com.badlogic.gdx.utils.JsonWriter$OutputType: void <clinit>()
com.badlogic.gdx.utils.LittleEndianInputStream
com.badlogic.gdx.utils.LittleEndianInputStream: java.io.DataInputStream din
com.badlogic.gdx.utils.LittleEndianInputStream: LittleEndianInputStream(java.io.InputStream)
com.badlogic.gdx.utils.LittleEndianInputStream: void readFully(byte[])
com.badlogic.gdx.utils.LittleEndianInputStream: void readFully(byte[],int,int)
com.badlogic.gdx.utils.LittleEndianInputStream: int skipBytes(int)
com.badlogic.gdx.utils.LittleEndianInputStream: boolean readBoolean()
com.badlogic.gdx.utils.LittleEndianInputStream: byte readByte()
com.badlogic.gdx.utils.LittleEndianInputStream: int readUnsignedByte()
com.badlogic.gdx.utils.LittleEndianInputStream: short readShort()
com.badlogic.gdx.utils.LittleEndianInputStream: int readUnsignedShort()
com.badlogic.gdx.utils.LittleEndianInputStream: char readChar()
com.badlogic.gdx.utils.LittleEndianInputStream: int readInt()
com.badlogic.gdx.utils.LittleEndianInputStream: long readLong()
com.badlogic.gdx.utils.LittleEndianInputStream: float readFloat()
com.badlogic.gdx.utils.LittleEndianInputStream: double readDouble()
com.badlogic.gdx.utils.LittleEndianInputStream: java.lang.String readLine()
com.badlogic.gdx.utils.LittleEndianInputStream: java.lang.String readUTF()
com.badlogic.gdx.utils.Logger
com.badlogic.gdx.utils.Logger: int NONE
com.badlogic.gdx.utils.Logger: int ERROR
com.badlogic.gdx.utils.Logger: int INFO
com.badlogic.gdx.utils.Logger: int DEBUG
com.badlogic.gdx.utils.Logger: java.lang.String tag
com.badlogic.gdx.utils.Logger: int level
com.badlogic.gdx.utils.Logger: Logger(java.lang.String)
com.badlogic.gdx.utils.Logger: Logger(java.lang.String,int)
com.badlogic.gdx.utils.Logger: void debug(java.lang.String)
com.badlogic.gdx.utils.Logger: void debug(java.lang.String,java.lang.Exception)
com.badlogic.gdx.utils.Logger: void info(java.lang.String)
com.badlogic.gdx.utils.Logger: void info(java.lang.String,java.lang.Exception)
com.badlogic.gdx.utils.Logger: void error(java.lang.String)
com.badlogic.gdx.utils.Logger: void error(java.lang.String,java.lang.Throwable)
com.badlogic.gdx.utils.Logger: void setLevel(int)
com.badlogic.gdx.utils.Logger: int getLevel()
com.badlogic.gdx.utils.LongArray
com.badlogic.gdx.utils.LongArray: long[] items
com.badlogic.gdx.utils.LongArray: int size
com.badlogic.gdx.utils.LongArray: boolean ordered
com.badlogic.gdx.utils.LongArray: LongArray()
com.badlogic.gdx.utils.LongArray: LongArray(int)
com.badlogic.gdx.utils.LongArray: LongArray(boolean,int)
com.badlogic.gdx.utils.LongArray: LongArray(com.badlogic.gdx.utils.LongArray)
com.badlogic.gdx.utils.LongArray: LongArray(long[])
com.badlogic.gdx.utils.LongArray: LongArray(boolean,long[],int,int)
com.badlogic.gdx.utils.LongArray: void add(long)
com.badlogic.gdx.utils.LongArray: void addAll(com.badlogic.gdx.utils.LongArray)
com.badlogic.gdx.utils.LongArray: void addAll(com.badlogic.gdx.utils.LongArray,int,int)
com.badlogic.gdx.utils.LongArray: void addAll(long[])
com.badlogic.gdx.utils.LongArray: void addAll(long[],int,int)
com.badlogic.gdx.utils.LongArray: long get(int)
com.badlogic.gdx.utils.LongArray: void set(int,long)
com.badlogic.gdx.utils.LongArray: void incr(int,long)
com.badlogic.gdx.utils.LongArray: void mul(int,long)
com.badlogic.gdx.utils.LongArray: void insert(int,long)
com.badlogic.gdx.utils.LongArray: void swap(int,int)
com.badlogic.gdx.utils.LongArray: boolean contains(long)
com.badlogic.gdx.utils.LongArray: int indexOf(long)
com.badlogic.gdx.utils.LongArray: int lastIndexOf(char)
com.badlogic.gdx.utils.LongArray: boolean removeValue(long)
com.badlogic.gdx.utils.LongArray: long removeIndex(int)
com.badlogic.gdx.utils.LongArray: void removeRange(int,int)
com.badlogic.gdx.utils.LongArray: boolean removeAll(com.badlogic.gdx.utils.LongArray)
com.badlogic.gdx.utils.LongArray: long pop()
com.badlogic.gdx.utils.LongArray: long peek()
com.badlogic.gdx.utils.LongArray: long first()
com.badlogic.gdx.utils.LongArray: void clear()
com.badlogic.gdx.utils.LongArray: long[] shrink()
com.badlogic.gdx.utils.LongArray: long[] ensureCapacity(int)
com.badlogic.gdx.utils.LongArray: long[] resize(int)
com.badlogic.gdx.utils.LongArray: void sort()
com.badlogic.gdx.utils.LongArray: void reverse()
com.badlogic.gdx.utils.LongArray: void shuffle()
com.badlogic.gdx.utils.LongArray: void truncate(int)
com.badlogic.gdx.utils.LongArray: long random()
com.badlogic.gdx.utils.LongArray: long[] toArray()
com.badlogic.gdx.utils.LongArray: boolean equals(java.lang.Object)
com.badlogic.gdx.utils.LongArray: java.lang.String toString()
com.badlogic.gdx.utils.LongArray: java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.LongArray: com.badlogic.gdx.utils.LongArray with(long[])
com.badlogic.gdx.utils.LongMap
com.badlogic.gdx.utils.LongMap: int PRIME1
com.badlogic.gdx.utils.LongMap: int PRIME2
com.badlogic.gdx.utils.LongMap: int PRIME3
com.badlogic.gdx.utils.LongMap: int EMPTY
com.badlogic.gdx.utils.LongMap: int size
com.badlogic.gdx.utils.LongMap: long[] keyTable
com.badlogic.gdx.utils.LongMap: java.lang.Object[] valueTable
com.badlogic.gdx.utils.LongMap: int capacity
com.badlogic.gdx.utils.LongMap: int stashSize
com.badlogic.gdx.utils.LongMap: java.lang.Object zeroValue
com.badlogic.gdx.utils.LongMap: boolean hasZeroValue
com.badlogic.gdx.utils.LongMap: float loadFactor
com.badlogic.gdx.utils.LongMap: int hashShift
com.badlogic.gdx.utils.LongMap: int mask
com.badlogic.gdx.utils.LongMap: int threshold
com.badlogic.gdx.utils.LongMap: int stashCapacity
com.badlogic.gdx.utils.LongMap: int pushIterations
com.badlogic.gdx.utils.LongMap: com.badlogic.gdx.utils.LongMap$Entries entries1
com.badlogic.gdx.utils.LongMap: com.badlogic.gdx.utils.LongMap$Entries entries2
com.badlogic.gdx.utils.LongMap: com.badlogic.gdx.utils.LongMap$Values values1
com.badlogic.gdx.utils.LongMap: com.badlogic.gdx.utils.LongMap$Values values2
com.badlogic.gdx.utils.LongMap: com.badlogic.gdx.utils.LongMap$Keys keys1
com.badlogic.gdx.utils.LongMap: com.badlogic.gdx.utils.LongMap$Keys keys2
com.badlogic.gdx.utils.LongMap: LongMap()
com.badlogic.gdx.utils.LongMap: LongMap(int)
com.badlogic.gdx.utils.LongMap: LongMap(int,float)
com.badlogic.gdx.utils.LongMap: LongMap(com.badlogic.gdx.utils.LongMap)
com.badlogic.gdx.utils.LongMap: java.lang.Object put(long,java.lang.Object)
com.badlogic.gdx.utils.LongMap: void putAll(com.badlogic.gdx.utils.LongMap)
com.badlogic.gdx.utils.LongMap: void putResize(long,java.lang.Object)
com.badlogic.gdx.utils.LongMap: void push(long,java.lang.Object,int,long,int,long,int,long)
com.badlogic.gdx.utils.LongMap: void putStash(long,java.lang.Object)
com.badlogic.gdx.utils.LongMap: java.lang.Object get(long)
com.badlogic.gdx.utils.LongMap: java.lang.Object get(long,java.lang.Object)
com.badlogic.gdx.utils.LongMap: java.lang.Object getStash(long,java.lang.Object)
com.badlogic.gdx.utils.LongMap: java.lang.Object remove(long)
com.badlogic.gdx.utils.LongMap: java.lang.Object removeStash(long)
com.badlogic.gdx.utils.LongMap: void removeStashIndex(int)
com.badlogic.gdx.utils.LongMap: void shrink(int)
com.badlogic.gdx.utils.LongMap: void clear(int)
com.badlogic.gdx.utils.LongMap: void clear()
com.badlogic.gdx.utils.LongMap: boolean containsValue(java.lang.Object,boolean)
com.badlogic.gdx.utils.LongMap: boolean containsKey(long)
com.badlogic.gdx.utils.LongMap: boolean containsKeyStash(long)
com.badlogic.gdx.utils.LongMap: long findKey(java.lang.Object,boolean,long)
com.badlogic.gdx.utils.LongMap: void ensureCapacity(int)
com.badlogic.gdx.utils.LongMap: void resize(int)
com.badlogic.gdx.utils.LongMap: int hash2(long)
com.badlogic.gdx.utils.LongMap: int hash3(long)
com.badlogic.gdx.utils.LongMap: java.lang.String toString()
com.badlogic.gdx.utils.LongMap: java.util.Iterator iterator()
com.badlogic.gdx.utils.LongMap: com.badlogic.gdx.utils.LongMap$Entries entries()
com.badlogic.gdx.utils.LongMap: com.badlogic.gdx.utils.LongMap$Values values()
com.badlogic.gdx.utils.LongMap: com.badlogic.gdx.utils.LongMap$Keys keys()
com.badlogic.gdx.utils.LongMap$Entries
com.badlogic.gdx.utils.LongMap$Entries: com.badlogic.gdx.utils.LongMap$Entry entry
com.badlogic.gdx.utils.LongMap$Entries: LongMap$Entries(com.badlogic.gdx.utils.LongMap)
com.badlogic.gdx.utils.LongMap$Entries: com.badlogic.gdx.utils.LongMap$Entry next()
com.badlogic.gdx.utils.LongMap$Entries: boolean hasNext()
com.badlogic.gdx.utils.LongMap$Entries: java.util.Iterator iterator()
com.badlogic.gdx.utils.LongMap$Entries: void remove()
com.badlogic.gdx.utils.LongMap$Entries: void reset()
com.badlogic.gdx.utils.LongMap$Entries: java.lang.Object next()
com.badlogic.gdx.utils.LongMap$Entry
com.badlogic.gdx.utils.LongMap$Entry: long key
com.badlogic.gdx.utils.LongMap$Entry: java.lang.Object value
com.badlogic.gdx.utils.LongMap$Entry: LongMap$Entry()
com.badlogic.gdx.utils.LongMap$Entry: java.lang.String toString()
com.badlogic.gdx.utils.LongMap$Keys
com.badlogic.gdx.utils.LongMap$Keys: LongMap$Keys(com.badlogic.gdx.utils.LongMap)
com.badlogic.gdx.utils.LongMap$Keys: long next()
com.badlogic.gdx.utils.LongMap$Keys: com.badlogic.gdx.utils.LongArray toArray()
com.badlogic.gdx.utils.LongMap$Keys: void remove()
com.badlogic.gdx.utils.LongMap$Keys: void reset()
com.badlogic.gdx.utils.LongMap$MapIterator
com.badlogic.gdx.utils.LongMap$MapIterator: int INDEX_ILLEGAL
com.badlogic.gdx.utils.LongMap$MapIterator: int INDEX_ZERO
com.badlogic.gdx.utils.LongMap$MapIterator: boolean hasNext
com.badlogic.gdx.utils.LongMap$MapIterator: com.badlogic.gdx.utils.LongMap map
com.badlogic.gdx.utils.LongMap$MapIterator: int nextIndex
com.badlogic.gdx.utils.LongMap$MapIterator: int currentIndex
com.badlogic.gdx.utils.LongMap$MapIterator: boolean valid
com.badlogic.gdx.utils.LongMap$MapIterator: LongMap$MapIterator(com.badlogic.gdx.utils.LongMap)
com.badlogic.gdx.utils.LongMap$MapIterator: void reset()
com.badlogic.gdx.utils.LongMap$MapIterator: void findNextIndex()
com.badlogic.gdx.utils.LongMap$MapIterator: void remove()
com.badlogic.gdx.utils.LongMap$Values
com.badlogic.gdx.utils.LongMap$Values: LongMap$Values(com.badlogic.gdx.utils.LongMap)
com.badlogic.gdx.utils.LongMap$Values: boolean hasNext()
com.badlogic.gdx.utils.LongMap$Values: java.lang.Object next()
com.badlogic.gdx.utils.LongMap$Values: java.util.Iterator iterator()
com.badlogic.gdx.utils.LongMap$Values: com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.LongMap$Values: void remove()
com.badlogic.gdx.utils.LongMap$Values: void reset()
com.badlogic.gdx.utils.NumberUtils
com.badlogic.gdx.utils.NumberUtils: boolean intToFloatColorMask
com.badlogic.gdx.utils.NumberUtils: NumberUtils()
com.badlogic.gdx.utils.NumberUtils: int floatToIntBits(float)
com.badlogic.gdx.utils.NumberUtils: int floatToRawIntBits(float)
com.badlogic.gdx.utils.NumberUtils: int floatToIntColor(float)
com.badlogic.gdx.utils.NumberUtils: float intToFloatColor(int)
com.badlogic.gdx.utils.NumberUtils: float intBitsToFloat(int)
com.badlogic.gdx.utils.NumberUtils: long doubleToLongBits(double)
com.badlogic.gdx.utils.NumberUtils: double longBitsToDouble(long)
com.badlogic.gdx.utils.NumberUtils: void <clinit>()
com.badlogic.gdx.utils.ObjectFloatMap
com.badlogic.gdx.utils.ObjectFloatMap: int PRIME1
com.badlogic.gdx.utils.ObjectFloatMap: int PRIME2
com.badlogic.gdx.utils.ObjectFloatMap: int PRIME3
com.badlogic.gdx.utils.ObjectFloatMap: int size
com.badlogic.gdx.utils.ObjectFloatMap: java.lang.Object[] keyTable
com.badlogic.gdx.utils.ObjectFloatMap: float[] valueTable
com.badlogic.gdx.utils.ObjectFloatMap: int capacity
com.badlogic.gdx.utils.ObjectFloatMap: int stashSize
com.badlogic.gdx.utils.ObjectFloatMap: float loadFactor
com.badlogic.gdx.utils.ObjectFloatMap: int hashShift
com.badlogic.gdx.utils.ObjectFloatMap: int mask
com.badlogic.gdx.utils.ObjectFloatMap: int threshold
com.badlogic.gdx.utils.ObjectFloatMap: int stashCapacity
com.badlogic.gdx.utils.ObjectFloatMap: int pushIterations
com.badlogic.gdx.utils.ObjectFloatMap: com.badlogic.gdx.utils.ObjectFloatMap$Entries entries1
com.badlogic.gdx.utils.ObjectFloatMap: com.badlogic.gdx.utils.ObjectFloatMap$Entries entries2
com.badlogic.gdx.utils.ObjectFloatMap: com.badlogic.gdx.utils.ObjectFloatMap$Values values1
com.badlogic.gdx.utils.ObjectFloatMap: com.badlogic.gdx.utils.ObjectFloatMap$Values values2
com.badlogic.gdx.utils.ObjectFloatMap: com.badlogic.gdx.utils.ObjectFloatMap$Keys keys1
com.badlogic.gdx.utils.ObjectFloatMap: com.badlogic.gdx.utils.ObjectFloatMap$Keys keys2
com.badlogic.gdx.utils.ObjectFloatMap: ObjectFloatMap()
com.badlogic.gdx.utils.ObjectFloatMap: ObjectFloatMap(int)
com.badlogic.gdx.utils.ObjectFloatMap: ObjectFloatMap(int,float)
com.badlogic.gdx.utils.ObjectFloatMap: ObjectFloatMap(com.badlogic.gdx.utils.ObjectFloatMap)
com.badlogic.gdx.utils.ObjectFloatMap: void put(java.lang.Object,float)
com.badlogic.gdx.utils.ObjectFloatMap: void putAll(com.badlogic.gdx.utils.ObjectFloatMap)
com.badlogic.gdx.utils.ObjectFloatMap: void putResize(java.lang.Object,float)
com.badlogic.gdx.utils.ObjectFloatMap: void push(java.lang.Object,float,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object)
com.badlogic.gdx.utils.ObjectFloatMap: void putStash(java.lang.Object,float)
com.badlogic.gdx.utils.ObjectFloatMap: float get(java.lang.Object,float)
com.badlogic.gdx.utils.ObjectFloatMap: float getStash(java.lang.Object,float)
com.badlogic.gdx.utils.ObjectFloatMap: float getAndIncrement(java.lang.Object,float,float)
com.badlogic.gdx.utils.ObjectFloatMap: float getAndIncrementStash(java.lang.Object,float,float)
com.badlogic.gdx.utils.ObjectFloatMap: float remove(java.lang.Object,float)
com.badlogic.gdx.utils.ObjectFloatMap: float removeStash(java.lang.Object,float)
com.badlogic.gdx.utils.ObjectFloatMap: void removeStashIndex(int)
com.badlogic.gdx.utils.ObjectFloatMap: void shrink(int)
com.badlogic.gdx.utils.ObjectFloatMap: void clear(int)
com.badlogic.gdx.utils.ObjectFloatMap: void clear()
com.badlogic.gdx.utils.ObjectFloatMap: boolean containsValue(float)
com.badlogic.gdx.utils.ObjectFloatMap: boolean containsKey(java.lang.Object)
com.badlogic.gdx.utils.ObjectFloatMap: boolean containsKeyStash(java.lang.Object)
com.badlogic.gdx.utils.ObjectFloatMap: java.lang.Object findKey(float)
com.badlogic.gdx.utils.ObjectFloatMap: void ensureCapacity(int)
com.badlogic.gdx.utils.ObjectFloatMap: void resize(int)
com.badlogic.gdx.utils.ObjectFloatMap: int hash2(int)
com.badlogic.gdx.utils.ObjectFloatMap: int hash3(int)
com.badlogic.gdx.utils.ObjectFloatMap: java.lang.String toString()
com.badlogic.gdx.utils.ObjectFloatMap: java.util.Iterator iterator()
com.badlogic.gdx.utils.ObjectFloatMap: com.badlogic.gdx.utils.ObjectFloatMap$Entries entries()
com.badlogic.gdx.utils.ObjectFloatMap: com.badlogic.gdx.utils.ObjectFloatMap$Values values()
com.badlogic.gdx.utils.ObjectFloatMap: com.badlogic.gdx.utils.ObjectFloatMap$Keys keys()
com.badlogic.gdx.utils.ObjectFloatMap$Entries
com.badlogic.gdx.utils.ObjectFloatMap$Entries: com.badlogic.gdx.utils.ObjectFloatMap$Entry entry
com.badlogic.gdx.utils.ObjectFloatMap$Entries: ObjectFloatMap$Entries(com.badlogic.gdx.utils.ObjectFloatMap)
com.badlogic.gdx.utils.ObjectFloatMap$Entries: com.badlogic.gdx.utils.ObjectFloatMap$Entry next()
com.badlogic.gdx.utils.ObjectFloatMap$Entries: boolean hasNext()
com.badlogic.gdx.utils.ObjectFloatMap$Entries: java.util.Iterator iterator()
com.badlogic.gdx.utils.ObjectFloatMap$Entries: void remove()
com.badlogic.gdx.utils.ObjectFloatMap$Entries: void reset()
com.badlogic.gdx.utils.ObjectFloatMap$Entries: java.lang.Object next()
com.badlogic.gdx.utils.ObjectFloatMap$Entry
com.badlogic.gdx.utils.ObjectFloatMap$Entry: java.lang.Object key
com.badlogic.gdx.utils.ObjectFloatMap$Entry: float value
com.badlogic.gdx.utils.ObjectFloatMap$Entry: ObjectFloatMap$Entry()
com.badlogic.gdx.utils.ObjectFloatMap$Entry: java.lang.String toString()
com.badlogic.gdx.utils.ObjectFloatMap$Keys
com.badlogic.gdx.utils.ObjectFloatMap$Keys: ObjectFloatMap$Keys(com.badlogic.gdx.utils.ObjectFloatMap)
com.badlogic.gdx.utils.ObjectFloatMap$Keys: boolean hasNext()
com.badlogic.gdx.utils.ObjectFloatMap$Keys: java.lang.Object next()
com.badlogic.gdx.utils.ObjectFloatMap$Keys: java.util.Iterator iterator()
com.badlogic.gdx.utils.ObjectFloatMap$Keys: com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.ObjectFloatMap$Keys: void remove()
com.badlogic.gdx.utils.ObjectFloatMap$Keys: void reset()
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator: boolean hasNext
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator: com.badlogic.gdx.utils.ObjectFloatMap map
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator: int nextIndex
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator: int currentIndex
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator: boolean valid
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator: ObjectFloatMap$MapIterator(com.badlogic.gdx.utils.ObjectFloatMap)
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator: void reset()
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator: void findNextIndex()
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator: void remove()
com.badlogic.gdx.utils.ObjectFloatMap$Values
com.badlogic.gdx.utils.ObjectFloatMap$Values: ObjectFloatMap$Values(com.badlogic.gdx.utils.ObjectFloatMap)
com.badlogic.gdx.utils.ObjectFloatMap$Values: boolean hasNext()
com.badlogic.gdx.utils.ObjectFloatMap$Values: float next()
com.badlogic.gdx.utils.ObjectFloatMap$Values: com.badlogic.gdx.utils.FloatArray toArray()
com.badlogic.gdx.utils.ObjectFloatMap$Values: void remove()
com.badlogic.gdx.utils.ObjectFloatMap$Values: void reset()
com.badlogic.gdx.utils.ObjectIntMap
com.badlogic.gdx.utils.ObjectIntMap: int PRIME1
com.badlogic.gdx.utils.ObjectIntMap: int PRIME2
com.badlogic.gdx.utils.ObjectIntMap: int PRIME3
com.badlogic.gdx.utils.ObjectIntMap: int size
com.badlogic.gdx.utils.ObjectIntMap: java.lang.Object[] keyTable
com.badlogic.gdx.utils.ObjectIntMap: int[] valueTable
com.badlogic.gdx.utils.ObjectIntMap: int capacity
com.badlogic.gdx.utils.ObjectIntMap: int stashSize
com.badlogic.gdx.utils.ObjectIntMap: float loadFactor
com.badlogic.gdx.utils.ObjectIntMap: int hashShift
com.badlogic.gdx.utils.ObjectIntMap: int mask
com.badlogic.gdx.utils.ObjectIntMap: int threshold
com.badlogic.gdx.utils.ObjectIntMap: int stashCapacity
com.badlogic.gdx.utils.ObjectIntMap: int pushIterations
com.badlogic.gdx.utils.ObjectIntMap: com.badlogic.gdx.utils.ObjectIntMap$Entries entries1
com.badlogic.gdx.utils.ObjectIntMap: com.badlogic.gdx.utils.ObjectIntMap$Entries entries2
com.badlogic.gdx.utils.ObjectIntMap: com.badlogic.gdx.utils.ObjectIntMap$Values values1
com.badlogic.gdx.utils.ObjectIntMap: com.badlogic.gdx.utils.ObjectIntMap$Values values2
com.badlogic.gdx.utils.ObjectIntMap: com.badlogic.gdx.utils.ObjectIntMap$Keys keys1
com.badlogic.gdx.utils.ObjectIntMap: com.badlogic.gdx.utils.ObjectIntMap$Keys keys2
com.badlogic.gdx.utils.ObjectIntMap: ObjectIntMap()
com.badlogic.gdx.utils.ObjectIntMap: ObjectIntMap(int)
com.badlogic.gdx.utils.ObjectIntMap: ObjectIntMap(int,float)
com.badlogic.gdx.utils.ObjectIntMap: ObjectIntMap(com.badlogic.gdx.utils.ObjectIntMap)
com.badlogic.gdx.utils.ObjectIntMap: void put(java.lang.Object,int)
com.badlogic.gdx.utils.ObjectIntMap: void putAll(com.badlogic.gdx.utils.ObjectIntMap)
com.badlogic.gdx.utils.ObjectIntMap: void putResize(java.lang.Object,int)
com.badlogic.gdx.utils.ObjectIntMap: void push(java.lang.Object,int,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object)
com.badlogic.gdx.utils.ObjectIntMap: void putStash(java.lang.Object,int)
com.badlogic.gdx.utils.ObjectIntMap: int get(java.lang.Object,int)
com.badlogic.gdx.utils.ObjectIntMap: int getStash(java.lang.Object,int)
com.badlogic.gdx.utils.ObjectIntMap: int getAndIncrement(java.lang.Object,int,int)
com.badlogic.gdx.utils.ObjectIntMap: int getAndIncrementStash(java.lang.Object,int,int)
com.badlogic.gdx.utils.ObjectIntMap: int remove(java.lang.Object,int)
com.badlogic.gdx.utils.ObjectIntMap: int removeStash(java.lang.Object,int)
com.badlogic.gdx.utils.ObjectIntMap: void removeStashIndex(int)
com.badlogic.gdx.utils.ObjectIntMap: void shrink(int)
com.badlogic.gdx.utils.ObjectIntMap: void clear(int)
com.badlogic.gdx.utils.ObjectIntMap: void clear()
com.badlogic.gdx.utils.ObjectIntMap: boolean containsValue(int)
com.badlogic.gdx.utils.ObjectIntMap: boolean containsKey(java.lang.Object)
com.badlogic.gdx.utils.ObjectIntMap: boolean containsKeyStash(java.lang.Object)
com.badlogic.gdx.utils.ObjectIntMap: java.lang.Object findKey(int)
com.badlogic.gdx.utils.ObjectIntMap: void ensureCapacity(int)
com.badlogic.gdx.utils.ObjectIntMap: void resize(int)
com.badlogic.gdx.utils.ObjectIntMap: int hash2(int)
com.badlogic.gdx.utils.ObjectIntMap: int hash3(int)
com.badlogic.gdx.utils.ObjectIntMap: java.lang.String toString()
com.badlogic.gdx.utils.ObjectIntMap: java.util.Iterator iterator()
com.badlogic.gdx.utils.ObjectIntMap: com.badlogic.gdx.utils.ObjectIntMap$Entries entries()
com.badlogic.gdx.utils.ObjectIntMap: com.badlogic.gdx.utils.ObjectIntMap$Values values()
com.badlogic.gdx.utils.ObjectIntMap: com.badlogic.gdx.utils.ObjectIntMap$Keys keys()
com.badlogic.gdx.utils.ObjectIntMap$Entries
com.badlogic.gdx.utils.ObjectIntMap$Entries: com.badlogic.gdx.utils.ObjectIntMap$Entry entry
com.badlogic.gdx.utils.ObjectIntMap$Entries: ObjectIntMap$Entries(com.badlogic.gdx.utils.ObjectIntMap)
com.badlogic.gdx.utils.ObjectIntMap$Entries: com.badlogic.gdx.utils.ObjectIntMap$Entry next()
com.badlogic.gdx.utils.ObjectIntMap$Entries: boolean hasNext()
com.badlogic.gdx.utils.ObjectIntMap$Entries: java.util.Iterator iterator()
com.badlogic.gdx.utils.ObjectIntMap$Entries: void remove()
com.badlogic.gdx.utils.ObjectIntMap$Entries: void reset()
com.badlogic.gdx.utils.ObjectIntMap$Entries: java.lang.Object next()
com.badlogic.gdx.utils.ObjectIntMap$Entry
com.badlogic.gdx.utils.ObjectIntMap$Entry: java.lang.Object key
com.badlogic.gdx.utils.ObjectIntMap$Entry: int value
com.badlogic.gdx.utils.ObjectIntMap$Entry: ObjectIntMap$Entry()
com.badlogic.gdx.utils.ObjectIntMap$Entry: java.lang.String toString()
com.badlogic.gdx.utils.ObjectIntMap$Keys
com.badlogic.gdx.utils.ObjectIntMap$Keys: ObjectIntMap$Keys(com.badlogic.gdx.utils.ObjectIntMap)
com.badlogic.gdx.utils.ObjectIntMap$Keys: boolean hasNext()
com.badlogic.gdx.utils.ObjectIntMap$Keys: java.lang.Object next()
com.badlogic.gdx.utils.ObjectIntMap$Keys: java.util.Iterator iterator()
com.badlogic.gdx.utils.ObjectIntMap$Keys: com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.ObjectIntMap$Keys: void remove()
com.badlogic.gdx.utils.ObjectIntMap$Keys: void reset()
com.badlogic.gdx.utils.ObjectIntMap$MapIterator
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: boolean hasNext
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: com.badlogic.gdx.utils.ObjectIntMap map
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: int nextIndex
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: int currentIndex
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: boolean valid
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: ObjectIntMap$MapIterator(com.badlogic.gdx.utils.ObjectIntMap)
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: void reset()
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: void findNextIndex()
com.badlogic.gdx.utils.ObjectIntMap$MapIterator: void remove()
com.badlogic.gdx.utils.ObjectIntMap$Values
com.badlogic.gdx.utils.ObjectIntMap$Values: ObjectIntMap$Values(com.badlogic.gdx.utils.ObjectIntMap)
com.badlogic.gdx.utils.ObjectIntMap$Values: boolean hasNext()
com.badlogic.gdx.utils.ObjectIntMap$Values: int next()
com.badlogic.gdx.utils.ObjectIntMap$Values: com.badlogic.gdx.utils.IntArray toArray()
com.badlogic.gdx.utils.ObjectIntMap$Values: void remove()
com.badlogic.gdx.utils.ObjectIntMap$Values: void reset()
com.badlogic.gdx.utils.ObjectMap
com.badlogic.gdx.utils.ObjectMap: int PRIME1
com.badlogic.gdx.utils.ObjectMap: int PRIME2
com.badlogic.gdx.utils.ObjectMap: int PRIME3
com.badlogic.gdx.utils.ObjectMap: int size
com.badlogic.gdx.utils.ObjectMap: java.lang.Object[] keyTable
com.badlogic.gdx.utils.ObjectMap: java.lang.Object[] valueTable
com.badlogic.gdx.utils.ObjectMap: int capacity
com.badlogic.gdx.utils.ObjectMap: int stashSize
com.badlogic.gdx.utils.ObjectMap: float loadFactor
com.badlogic.gdx.utils.ObjectMap: int hashShift
com.badlogic.gdx.utils.ObjectMap: int mask
com.badlogic.gdx.utils.ObjectMap: int threshold
com.badlogic.gdx.utils.ObjectMap: int stashCapacity
com.badlogic.gdx.utils.ObjectMap: int pushIterations
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Entries entries1
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Entries entries2
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Values values1
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Values values2
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Keys keys1
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Keys keys2
com.badlogic.gdx.utils.ObjectMap: ObjectMap()
com.badlogic.gdx.utils.ObjectMap: ObjectMap(int)
com.badlogic.gdx.utils.ObjectMap: ObjectMap(int,float)
com.badlogic.gdx.utils.ObjectMap: ObjectMap(com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.utils.ObjectMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.ObjectMap: java.lang.Object put_internal(java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.ObjectMap: void putAll(com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.utils.ObjectMap: void putResize(java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.ObjectMap: void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object)
com.badlogic.gdx.utils.ObjectMap: void putStash(java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.ObjectMap: java.lang.Object get(java.lang.Object)
com.badlogic.gdx.utils.ObjectMap: java.lang.Object getStash(java.lang.Object)
com.badlogic.gdx.utils.ObjectMap: java.lang.Object get(java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.ObjectMap: java.lang.Object getStash(java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.ObjectMap: java.lang.Object remove(java.lang.Object)
com.badlogic.gdx.utils.ObjectMap: java.lang.Object removeStash(java.lang.Object)
com.badlogic.gdx.utils.ObjectMap: void removeStashIndex(int)
com.badlogic.gdx.utils.ObjectMap: void shrink(int)
com.badlogic.gdx.utils.ObjectMap: void clear(int)
com.badlogic.gdx.utils.ObjectMap: void clear()
com.badlogic.gdx.utils.ObjectMap: boolean containsValue(java.lang.Object,boolean)
com.badlogic.gdx.utils.ObjectMap: boolean containsKey(java.lang.Object)
com.badlogic.gdx.utils.ObjectMap: boolean containsKeyStash(java.lang.Object)
com.badlogic.gdx.utils.ObjectMap: java.lang.Object findKey(java.lang.Object,boolean)
com.badlogic.gdx.utils.ObjectMap: void ensureCapacity(int)
com.badlogic.gdx.utils.ObjectMap: void resize(int)
com.badlogic.gdx.utils.ObjectMap: int hash2(int)
com.badlogic.gdx.utils.ObjectMap: int hash3(int)
com.badlogic.gdx.utils.ObjectMap: java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.ObjectMap: java.lang.String toString()
com.badlogic.gdx.utils.ObjectMap: java.lang.String toString(java.lang.String,boolean)
com.badlogic.gdx.utils.ObjectMap: java.util.Iterator iterator()
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Entries entries()
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Values values()
com.badlogic.gdx.utils.ObjectMap: com.badlogic.gdx.utils.ObjectMap$Keys keys()
com.badlogic.gdx.utils.ObjectMap$Entries
com.badlogic.gdx.utils.ObjectMap$Entries: com.badlogic.gdx.utils.ObjectMap$Entry entry
com.badlogic.gdx.utils.ObjectMap$Entries: ObjectMap$Entries(com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.utils.ObjectMap$Entries: com.badlogic.gdx.utils.ObjectMap$Entry next()
com.badlogic.gdx.utils.ObjectMap$Entries: boolean hasNext()
com.badlogic.gdx.utils.ObjectMap$Entries: java.util.Iterator iterator()
com.badlogic.gdx.utils.ObjectMap$Entries: void remove()
com.badlogic.gdx.utils.ObjectMap$Entries: void reset()
com.badlogic.gdx.utils.ObjectMap$Entries: java.lang.Object next()
com.badlogic.gdx.utils.ObjectMap$Entry
com.badlogic.gdx.utils.ObjectMap$Entry: java.lang.Object key
com.badlogic.gdx.utils.ObjectMap$Entry: java.lang.Object value
com.badlogic.gdx.utils.ObjectMap$Entry: ObjectMap$Entry()
com.badlogic.gdx.utils.ObjectMap$Entry: java.lang.String toString()
com.badlogic.gdx.utils.ObjectMap$Keys
com.badlogic.gdx.utils.ObjectMap$Keys: ObjectMap$Keys(com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.utils.ObjectMap$Keys: boolean hasNext()
com.badlogic.gdx.utils.ObjectMap$Keys: java.lang.Object next()
com.badlogic.gdx.utils.ObjectMap$Keys: java.util.Iterator iterator()
com.badlogic.gdx.utils.ObjectMap$Keys: com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.ObjectMap$Keys: void remove()
com.badlogic.gdx.utils.ObjectMap$Keys: void reset()
com.badlogic.gdx.utils.ObjectMap$MapIterator
com.badlogic.gdx.utils.ObjectMap$MapIterator: boolean hasNext
com.badlogic.gdx.utils.ObjectMap$MapIterator: com.badlogic.gdx.utils.ObjectMap map
com.badlogic.gdx.utils.ObjectMap$MapIterator: int nextIndex
com.badlogic.gdx.utils.ObjectMap$MapIterator: int currentIndex
com.badlogic.gdx.utils.ObjectMap$MapIterator: boolean valid
com.badlogic.gdx.utils.ObjectMap$MapIterator: ObjectMap$MapIterator(com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.utils.ObjectMap$MapIterator: void reset()
com.badlogic.gdx.utils.ObjectMap$MapIterator: void advance()
com.badlogic.gdx.utils.ObjectMap$MapIterator: void remove()
com.badlogic.gdx.utils.ObjectMap$Values
com.badlogic.gdx.utils.ObjectMap$Values: ObjectMap$Values(com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.utils.ObjectMap$Values: boolean hasNext()
com.badlogic.gdx.utils.ObjectMap$Values: java.lang.Object next()
com.badlogic.gdx.utils.ObjectMap$Values: java.util.Iterator iterator()
com.badlogic.gdx.utils.ObjectMap$Values: com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.ObjectMap$Values: void toArray(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.ObjectMap$Values: void remove()
com.badlogic.gdx.utils.ObjectMap$Values: void reset()
com.badlogic.gdx.utils.ObjectSet
com.badlogic.gdx.utils.ObjectSet: int PRIME1
com.badlogic.gdx.utils.ObjectSet: int PRIME2
com.badlogic.gdx.utils.ObjectSet: int PRIME3
com.badlogic.gdx.utils.ObjectSet: int size
com.badlogic.gdx.utils.ObjectSet: java.lang.Object[] keyTable
com.badlogic.gdx.utils.ObjectSet: int capacity
com.badlogic.gdx.utils.ObjectSet: int stashSize
com.badlogic.gdx.utils.ObjectSet: float loadFactor
com.badlogic.gdx.utils.ObjectSet: int hashShift
com.badlogic.gdx.utils.ObjectSet: int mask
com.badlogic.gdx.utils.ObjectSet: int threshold
com.badlogic.gdx.utils.ObjectSet: int stashCapacity
com.badlogic.gdx.utils.ObjectSet: int pushIterations
com.badlogic.gdx.utils.ObjectSet: com.badlogic.gdx.utils.ObjectSet$SetIterator iterator1
com.badlogic.gdx.utils.ObjectSet: com.badlogic.gdx.utils.ObjectSet$SetIterator iterator2
com.badlogic.gdx.utils.ObjectSet: ObjectSet()
com.badlogic.gdx.utils.ObjectSet: ObjectSet(int)
com.badlogic.gdx.utils.ObjectSet: ObjectSet(int,float)
com.badlogic.gdx.utils.ObjectSet: ObjectSet(com.badlogic.gdx.utils.ObjectSet)
com.badlogic.gdx.utils.ObjectSet: boolean add(java.lang.Object)
com.badlogic.gdx.utils.ObjectSet: void addAll(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.ObjectSet: void addAll(com.badlogic.gdx.utils.Array,int,int)
com.badlogic.gdx.utils.ObjectSet: void addAll(java.lang.Object[])
com.badlogic.gdx.utils.ObjectSet: void addAll(java.lang.Object[],int,int)
com.badlogic.gdx.utils.ObjectSet: void addAll(com.badlogic.gdx.utils.ObjectSet)
com.badlogic.gdx.utils.ObjectSet: void addResize(java.lang.Object)
com.badlogic.gdx.utils.ObjectSet: void push(java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object)
com.badlogic.gdx.utils.ObjectSet: void addStash(java.lang.Object)
com.badlogic.gdx.utils.ObjectSet: boolean remove(java.lang.Object)
com.badlogic.gdx.utils.ObjectSet: boolean removeStash(java.lang.Object)
com.badlogic.gdx.utils.ObjectSet: void removeStashIndex(int)
com.badlogic.gdx.utils.ObjectSet: void shrink(int)
com.badlogic.gdx.utils.ObjectSet: void clear(int)
com.badlogic.gdx.utils.ObjectSet: void clear()
com.badlogic.gdx.utils.ObjectSet: boolean contains(java.lang.Object)
com.badlogic.gdx.utils.ObjectSet: boolean containsKeyStash(java.lang.Object)
com.badlogic.gdx.utils.ObjectSet: java.lang.Object first()
com.badlogic.gdx.utils.ObjectSet: void ensureCapacity(int)
com.badlogic.gdx.utils.ObjectSet: void resize(int)
com.badlogic.gdx.utils.ObjectSet: int hash2(int)
com.badlogic.gdx.utils.ObjectSet: int hash3(int)
com.badlogic.gdx.utils.ObjectSet: java.lang.String toString()
com.badlogic.gdx.utils.ObjectSet: java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.ObjectSet: com.badlogic.gdx.utils.ObjectSet$SetIterator iterator()
com.badlogic.gdx.utils.ObjectSet: com.badlogic.gdx.utils.ObjectSet with(java.lang.Object[])
com.badlogic.gdx.utils.ObjectSet: java.util.Iterator iterator()
com.badlogic.gdx.utils.ObjectSet$SetIterator
com.badlogic.gdx.utils.ObjectSet$SetIterator: boolean hasNext
com.badlogic.gdx.utils.ObjectSet$SetIterator: com.badlogic.gdx.utils.ObjectSet set
com.badlogic.gdx.utils.ObjectSet$SetIterator: int nextIndex
com.badlogic.gdx.utils.ObjectSet$SetIterator: int currentIndex
com.badlogic.gdx.utils.ObjectSet$SetIterator: boolean valid
com.badlogic.gdx.utils.ObjectSet$SetIterator: ObjectSet$SetIterator(com.badlogic.gdx.utils.ObjectSet)
com.badlogic.gdx.utils.ObjectSet$SetIterator: void reset()
com.badlogic.gdx.utils.ObjectSet$SetIterator: void findNextIndex()
com.badlogic.gdx.utils.ObjectSet$SetIterator: void remove()
com.badlogic.gdx.utils.ObjectSet$SetIterator: boolean hasNext()
com.badlogic.gdx.utils.ObjectSet$SetIterator: java.lang.Object next()
com.badlogic.gdx.utils.ObjectSet$SetIterator: java.util.Iterator iterator()
com.badlogic.gdx.utils.ObjectSet$SetIterator: com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.ObjectSet$SetIterator: com.badlogic.gdx.utils.Array toArray()
com.badlogic.gdx.utils.OrderedMap
com.badlogic.gdx.utils.OrderedMap: com.badlogic.gdx.utils.Array keys
com.badlogic.gdx.utils.OrderedMap: OrderedMap()
com.badlogic.gdx.utils.OrderedMap: OrderedMap(int)
com.badlogic.gdx.utils.OrderedMap: OrderedMap(int,float)
com.badlogic.gdx.utils.OrderedMap: OrderedMap(com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.utils.OrderedMap: java.lang.Object put(java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.OrderedMap: java.lang.Object remove(java.lang.Object)
com.badlogic.gdx.utils.OrderedMap: void clear(int)
com.badlogic.gdx.utils.OrderedMap: void clear()
com.badlogic.gdx.utils.OrderedMap: com.badlogic.gdx.utils.Array orderedKeys()
com.badlogic.gdx.utils.OrderedMap: com.badlogic.gdx.utils.ObjectMap$Entries entries()
com.badlogic.gdx.utils.OrderedMap: com.badlogic.gdx.utils.ObjectMap$Keys keys()
com.badlogic.gdx.utils.OrderedMap: com.badlogic.gdx.utils.ObjectMap$Values values()
com.badlogic.gdx.utils.OrderedMap: java.lang.String toString()
com.badlogic.gdx.utils.OrderedMap$1
com.badlogic.gdx.utils.OrderedMap$1: com.badlogic.gdx.utils.OrderedMap this$0
com.badlogic.gdx.utils.OrderedMap$1: OrderedMap$1(com.badlogic.gdx.utils.OrderedMap,com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.utils.OrderedMap$1: void advance()
com.badlogic.gdx.utils.OrderedMap$1: com.badlogic.gdx.utils.ObjectMap$Entry next()
com.badlogic.gdx.utils.OrderedMap$1: void remove()
com.badlogic.gdx.utils.OrderedMap$1: java.lang.Object next()
com.badlogic.gdx.utils.OrderedMap$2
com.badlogic.gdx.utils.OrderedMap$2: com.badlogic.gdx.utils.OrderedMap this$0
com.badlogic.gdx.utils.OrderedMap$2: OrderedMap$2(com.badlogic.gdx.utils.OrderedMap,com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.utils.OrderedMap$2: void advance()
com.badlogic.gdx.utils.OrderedMap$2: java.lang.Object next()
com.badlogic.gdx.utils.OrderedMap$2: void remove()
com.badlogic.gdx.utils.OrderedMap$3
com.badlogic.gdx.utils.OrderedMap$3: com.badlogic.gdx.utils.OrderedMap this$0
com.badlogic.gdx.utils.OrderedMap$3: OrderedMap$3(com.badlogic.gdx.utils.OrderedMap,com.badlogic.gdx.utils.ObjectMap)
com.badlogic.gdx.utils.OrderedMap$3: void advance()
com.badlogic.gdx.utils.OrderedMap$3: java.lang.Object next()
com.badlogic.gdx.utils.OrderedMap$3: void remove()
com.badlogic.gdx.utils.PauseableThread
com.badlogic.gdx.utils.PauseableThread: java.lang.Runnable runnable
com.badlogic.gdx.utils.PauseableThread: boolean paused
com.badlogic.gdx.utils.PauseableThread: boolean exit
com.badlogic.gdx.utils.PauseableThread: PauseableThread(java.lang.Runnable)
com.badlogic.gdx.utils.PauseableThread: void run()
com.badlogic.gdx.utils.PauseableThread: void onPause()
com.badlogic.gdx.utils.PauseableThread: void onResume()
com.badlogic.gdx.utils.PauseableThread: boolean isPaused()
com.badlogic.gdx.utils.PauseableThread: void stopThread()
com.badlogic.gdx.utils.PerformanceCounter
com.badlogic.gdx.utils.PerformanceCounter: float nano2seconds
com.badlogic.gdx.utils.PerformanceCounter: long startTime
com.badlogic.gdx.utils.PerformanceCounter: long lastTick
com.badlogic.gdx.utils.PerformanceCounter: com.badlogic.gdx.math.FloatCounter time
com.badlogic.gdx.utils.PerformanceCounter: com.badlogic.gdx.math.FloatCounter load
com.badlogic.gdx.utils.PerformanceCounter: java.lang.String name
com.badlogic.gdx.utils.PerformanceCounter: float current
com.badlogic.gdx.utils.PerformanceCounter: boolean valid
com.badlogic.gdx.utils.PerformanceCounter: PerformanceCounter(java.lang.String)
com.badlogic.gdx.utils.PerformanceCounter: PerformanceCounter(java.lang.String,int)
com.badlogic.gdx.utils.PerformanceCounter: void tick()
com.badlogic.gdx.utils.PerformanceCounter: void tick(float)
com.badlogic.gdx.utils.PerformanceCounter: void start()
com.badlogic.gdx.utils.PerformanceCounter: void stop()
com.badlogic.gdx.utils.PerformanceCounter: void reset()
com.badlogic.gdx.utils.PerformanceCounter: java.lang.String toString()
com.badlogic.gdx.utils.PerformanceCounter: com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder)
com.badlogic.gdx.utils.PerformanceCounters
com.badlogic.gdx.utils.PerformanceCounters: float nano2seconds
com.badlogic.gdx.utils.PerformanceCounters: long lastTick
com.badlogic.gdx.utils.PerformanceCounters: com.badlogic.gdx.utils.Array counters
com.badlogic.gdx.utils.PerformanceCounters: PerformanceCounters()
com.badlogic.gdx.utils.PerformanceCounters: com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String,int)
com.badlogic.gdx.utils.PerformanceCounters: com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String)
com.badlogic.gdx.utils.PerformanceCounters: void tick()
com.badlogic.gdx.utils.PerformanceCounters: void tick(float)
com.badlogic.gdx.utils.PerformanceCounters: com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder)
com.badlogic.gdx.utils.Pool
com.badlogic.gdx.utils.Pool: int max
com.badlogic.gdx.utils.Pool: int peak
com.badlogic.gdx.utils.Pool: com.badlogic.gdx.utils.Array freeObjects
com.badlogic.gdx.utils.Pool: Pool()
com.badlogic.gdx.utils.Pool: Pool(int)
com.badlogic.gdx.utils.Pool: Pool(int,int)
com.badlogic.gdx.utils.Pool: java.lang.Object newObject()
com.badlogic.gdx.utils.Pool: java.lang.Object obtain()
com.badlogic.gdx.utils.Pool: void free(java.lang.Object)
com.badlogic.gdx.utils.Pool: void freeAll(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.Pool: void clear()
com.badlogic.gdx.utils.Pool: int getFree()
com.badlogic.gdx.utils.Pool$Poolable
com.badlogic.gdx.utils.Pool$Poolable: void reset()
com.badlogic.gdx.utils.PooledLinkedList
com.badlogic.gdx.utils.PooledLinkedList: com.badlogic.gdx.utils.PooledLinkedList$Item head
com.badlogic.gdx.utils.PooledLinkedList: com.badlogic.gdx.utils.PooledLinkedList$Item tail
com.badlogic.gdx.utils.PooledLinkedList: com.badlogic.gdx.utils.PooledLinkedList$Item iter
com.badlogic.gdx.utils.PooledLinkedList: com.badlogic.gdx.utils.PooledLinkedList$Item curr
com.badlogic.gdx.utils.PooledLinkedList: int size
com.badlogic.gdx.utils.PooledLinkedList: com.badlogic.gdx.utils.Pool pool
com.badlogic.gdx.utils.PooledLinkedList: PooledLinkedList(int)
com.badlogic.gdx.utils.PooledLinkedList: void add(java.lang.Object)
com.badlogic.gdx.utils.PooledLinkedList: void iter()
com.badlogic.gdx.utils.PooledLinkedList: java.lang.Object next()
com.badlogic.gdx.utils.PooledLinkedList: void remove()
com.badlogic.gdx.utils.PooledLinkedList: void clear()
com.badlogic.gdx.utils.PooledLinkedList$1
com.badlogic.gdx.utils.PooledLinkedList$1: com.badlogic.gdx.utils.PooledLinkedList this$0
com.badlogic.gdx.utils.PooledLinkedList$1: PooledLinkedList$1(com.badlogic.gdx.utils.PooledLinkedList,int,int)
com.badlogic.gdx.utils.PooledLinkedList$1: com.badlogic.gdx.utils.PooledLinkedList$Item newObject()
com.badlogic.gdx.utils.PooledLinkedList$1: java.lang.Object newObject()
com.badlogic.gdx.utils.PooledLinkedList$Item
com.badlogic.gdx.utils.PooledLinkedList$Item: java.lang.Object payload
com.badlogic.gdx.utils.PooledLinkedList$Item: com.badlogic.gdx.utils.PooledLinkedList$Item next
com.badlogic.gdx.utils.PooledLinkedList$Item: com.badlogic.gdx.utils.PooledLinkedList$Item prev
com.badlogic.gdx.utils.PooledLinkedList$Item: PooledLinkedList$Item()
com.badlogic.gdx.utils.Pools
com.badlogic.gdx.utils.Pools: com.badlogic.gdx.utils.ObjectMap typePools
com.badlogic.gdx.utils.Pools: com.badlogic.gdx.utils.Pool get(java.lang.Class)
com.badlogic.gdx.utils.Pools: java.lang.Object obtain(java.lang.Class)
com.badlogic.gdx.utils.Pools: void free(java.lang.Object)
com.badlogic.gdx.utils.Pools: void freeAll(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.Pools: void freeAll(com.badlogic.gdx.utils.Array,boolean)
com.badlogic.gdx.utils.Pools: Pools()
com.badlogic.gdx.utils.Pools: void <clinit>()
com.badlogic.gdx.utils.Predicate
com.badlogic.gdx.utils.Predicate: boolean evaluate(java.lang.Object)
com.badlogic.gdx.utils.Predicate$PredicateIterable
com.badlogic.gdx.utils.Predicate$PredicateIterable: java.lang.Iterable iterable
com.badlogic.gdx.utils.Predicate$PredicateIterable: com.badlogic.gdx.utils.Predicate predicate
com.badlogic.gdx.utils.Predicate$PredicateIterable: com.badlogic.gdx.utils.Predicate$PredicateIterator iterator
com.badlogic.gdx.utils.Predicate$PredicateIterable: Predicate$PredicateIterable(java.lang.Iterable,com.badlogic.gdx.utils.Predicate)
com.badlogic.gdx.utils.Predicate$PredicateIterable: void set(java.lang.Iterable,com.badlogic.gdx.utils.Predicate)
com.badlogic.gdx.utils.Predicate$PredicateIterable: java.util.Iterator iterator()
com.badlogic.gdx.utils.Predicate$PredicateIterator
com.badlogic.gdx.utils.Predicate$PredicateIterator: java.util.Iterator iterator
com.badlogic.gdx.utils.Predicate$PredicateIterator: com.badlogic.gdx.utils.Predicate predicate
com.badlogic.gdx.utils.Predicate$PredicateIterator: boolean end
com.badlogic.gdx.utils.Predicate$PredicateIterator: boolean peeked
com.badlogic.gdx.utils.Predicate$PredicateIterator: java.lang.Object next
com.badlogic.gdx.utils.Predicate$PredicateIterator: Predicate$PredicateIterator(java.lang.Iterable,com.badlogic.gdx.utils.Predicate)
com.badlogic.gdx.utils.Predicate$PredicateIterator: Predicate$PredicateIterator(java.util.Iterator,com.badlogic.gdx.utils.Predicate)
com.badlogic.gdx.utils.Predicate$PredicateIterator: void set(java.lang.Iterable,com.badlogic.gdx.utils.Predicate)
com.badlogic.gdx.utils.Predicate$PredicateIterator: void set(java.util.Iterator,com.badlogic.gdx.utils.Predicate)
com.badlogic.gdx.utils.Predicate$PredicateIterator: boolean hasNext()
com.badlogic.gdx.utils.Predicate$PredicateIterator: java.lang.Object next()
com.badlogic.gdx.utils.Predicate$PredicateIterator: void remove()
com.badlogic.gdx.utils.PropertiesUtils
com.badlogic.gdx.utils.PropertiesUtils: int NONE
com.badlogic.gdx.utils.PropertiesUtils: int SLASH
com.badlogic.gdx.utils.PropertiesUtils: int UNICODE
com.badlogic.gdx.utils.PropertiesUtils: int CONTINUE
com.badlogic.gdx.utils.PropertiesUtils: int KEY_DONE
com.badlogic.gdx.utils.PropertiesUtils: int IGNORE
com.badlogic.gdx.utils.PropertiesUtils: java.lang.String LINE_SEPARATOR
com.badlogic.gdx.utils.PropertiesUtils: PropertiesUtils()
com.badlogic.gdx.utils.PropertiesUtils: void load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader)
com.badlogic.gdx.utils.PropertiesUtils: void store(com.badlogic.gdx.utils.ObjectMap,java.io.Writer,java.lang.String)
com.badlogic.gdx.utils.PropertiesUtils: void storeImpl(com.badlogic.gdx.utils.ObjectMap,java.io.Writer,java.lang.String,boolean)
com.badlogic.gdx.utils.PropertiesUtils: void dumpString(com.badlogic.gdx.utils.StringBuilder,java.lang.String,boolean,boolean)
com.badlogic.gdx.utils.PropertiesUtils: void writeComment(java.io.Writer,java.lang.String)
com.badlogic.gdx.utils.QuickSelect
com.badlogic.gdx.utils.QuickSelect: java.lang.Object[] array
com.badlogic.gdx.utils.QuickSelect: java.util.Comparator comp
com.badlogic.gdx.utils.QuickSelect: QuickSelect()
com.badlogic.gdx.utils.QuickSelect: int select(java.lang.Object[],java.util.Comparator,int,int)
com.badlogic.gdx.utils.QuickSelect: int partition(int,int,int)
com.badlogic.gdx.utils.QuickSelect: int recursiveSelect(int,int,int)
com.badlogic.gdx.utils.QuickSelect: int medianOfThreePivot(int,int)
com.badlogic.gdx.utils.QuickSelect: void swap(int,int)
com.badlogic.gdx.utils.ReflectionPool
com.badlogic.gdx.utils.ReflectionPool: com.badlogic.gdx.utils.reflect.Constructor constructor
com.badlogic.gdx.utils.ReflectionPool: ReflectionPool(java.lang.Class)
com.badlogic.gdx.utils.ReflectionPool: ReflectionPool(java.lang.Class,int)
com.badlogic.gdx.utils.ReflectionPool: ReflectionPool(java.lang.Class,int,int)
com.badlogic.gdx.utils.ReflectionPool: com.badlogic.gdx.utils.reflect.Constructor findConstructor(java.lang.Class)
com.badlogic.gdx.utils.ReflectionPool: java.lang.Object newObject()
com.badlogic.gdx.utils.Scaling
com.badlogic.gdx.utils.Scaling: com.badlogic.gdx.utils.Scaling fit
com.badlogic.gdx.utils.Scaling: com.badlogic.gdx.utils.Scaling fill
com.badlogic.gdx.utils.Scaling: com.badlogic.gdx.utils.Scaling fillX
com.badlogic.gdx.utils.Scaling: com.badlogic.gdx.utils.Scaling fillY
com.badlogic.gdx.utils.Scaling: com.badlogic.gdx.utils.Scaling stretch
com.badlogic.gdx.utils.Scaling: com.badlogic.gdx.utils.Scaling stretchX
com.badlogic.gdx.utils.Scaling: com.badlogic.gdx.utils.Scaling stretchY
com.badlogic.gdx.utils.Scaling: com.badlogic.gdx.utils.Scaling none
com.badlogic.gdx.utils.Scaling: com.badlogic.gdx.math.Vector2 temp
com.badlogic.gdx.utils.Scaling: com.badlogic.gdx.utils.Scaling[] $VALUES
com.badlogic.gdx.utils.Scaling: com.badlogic.gdx.utils.Scaling[] values()
com.badlogic.gdx.utils.Scaling: com.badlogic.gdx.utils.Scaling valueOf(java.lang.String)
com.badlogic.gdx.utils.Scaling: Scaling(java.lang.String,int)
com.badlogic.gdx.utils.Scaling: com.badlogic.gdx.math.Vector2 apply(float,float,float,float)
com.badlogic.gdx.utils.Scaling: void <clinit>()
com.badlogic.gdx.utils.Scaling$1
com.badlogic.gdx.utils.Scaling$1: int[] $SwitchMap$com$badlogic$gdx$utils$Scaling
com.badlogic.gdx.utils.Scaling$1: void <clinit>()
com.badlogic.gdx.utils.ScreenUtils
com.badlogic.gdx.utils.ScreenUtils: ScreenUtils()
com.badlogic.gdx.utils.ScreenUtils: com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture()
com.badlogic.gdx.utils.ScreenUtils: com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture(int,int,int,int)
com.badlogic.gdx.utils.ScreenUtils: com.badlogic.gdx.graphics.Pixmap getFrameBufferPixmap(int,int,int,int)
com.badlogic.gdx.utils.ScreenUtils: byte[] getFrameBufferPixels(boolean)
com.badlogic.gdx.utils.ScreenUtils: byte[] getFrameBufferPixels(int,int,int,int,boolean)
com.badlogic.gdx.utils.Select
com.badlogic.gdx.utils.Select: com.badlogic.gdx.utils.Select instance
com.badlogic.gdx.utils.Select: com.badlogic.gdx.utils.QuickSelect quickSelect
com.badlogic.gdx.utils.Select: Select()
com.badlogic.gdx.utils.Select: com.badlogic.gdx.utils.Select instance()
com.badlogic.gdx.utils.Select: java.lang.Object select(java.lang.Object[],java.util.Comparator,int,int)
com.badlogic.gdx.utils.Select: int selectIndex(java.lang.Object[],java.util.Comparator,int,int)
com.badlogic.gdx.utils.Select: int fastMin(java.lang.Object[],java.util.Comparator,int)
com.badlogic.gdx.utils.Select: int fastMax(java.lang.Object[],java.util.Comparator,int)
com.badlogic.gdx.utils.SerializationException
com.badlogic.gdx.utils.SerializationException: java.lang.StringBuffer trace
com.badlogic.gdx.utils.SerializationException: SerializationException()
com.badlogic.gdx.utils.SerializationException: SerializationException(java.lang.String,java.lang.Throwable)
com.badlogic.gdx.utils.SerializationException: SerializationException(java.lang.String)
com.badlogic.gdx.utils.SerializationException: SerializationException(java.lang.Throwable)
com.badlogic.gdx.utils.SerializationException: boolean causedBy(java.lang.Class)
com.badlogic.gdx.utils.SerializationException: boolean causedBy(java.lang.Throwable,java.lang.Class)
com.badlogic.gdx.utils.SerializationException: java.lang.String getMessage()
com.badlogic.gdx.utils.SerializationException: void addTrace(java.lang.String)
com.badlogic.gdx.utils.SharedLibraryLoader
com.badlogic.gdx.utils.SharedLibraryLoader: boolean isWindows
com.badlogic.gdx.utils.SharedLibraryLoader: boolean isLinux
com.badlogic.gdx.utils.SharedLibraryLoader: boolean isMac
com.badlogic.gdx.utils.SharedLibraryLoader: boolean isIos
com.badlogic.gdx.utils.SharedLibraryLoader: boolean isAndroid
com.badlogic.gdx.utils.SharedLibraryLoader: boolean isARM
com.badlogic.gdx.utils.SharedLibraryLoader: boolean is64Bit
com.badlogic.gdx.utils.SharedLibraryLoader: java.lang.String abi
com.badlogic.gdx.utils.SharedLibraryLoader: java.util.HashSet loadedLibraries
com.badlogic.gdx.utils.SharedLibraryLoader: java.lang.String nativesJar
com.badlogic.gdx.utils.SharedLibraryLoader: SharedLibraryLoader()
com.badlogic.gdx.utils.SharedLibraryLoader: SharedLibraryLoader(java.lang.String)
com.badlogic.gdx.utils.SharedLibraryLoader: java.lang.String crc(java.io.InputStream)
com.badlogic.gdx.utils.SharedLibraryLoader: java.lang.String mapLibraryName(java.lang.String)
com.badlogic.gdx.utils.SharedLibraryLoader: void load(java.lang.String)
com.badlogic.gdx.utils.SharedLibraryLoader: java.io.InputStream readFile(java.lang.String)
com.badlogic.gdx.utils.SharedLibraryLoader: java.io.File extractFile(java.lang.String,java.lang.String)
com.badlogic.gdx.utils.SharedLibraryLoader: java.io.File getExtractedFile(java.lang.String,java.lang.String)
com.badlogic.gdx.utils.SharedLibraryLoader: boolean canWrite(java.io.File)
com.badlogic.gdx.utils.SharedLibraryLoader: boolean canExecute(java.io.File)
com.badlogic.gdx.utils.SharedLibraryLoader: java.io.File extractFile(java.lang.String,java.lang.String,java.io.File)
com.badlogic.gdx.utils.SharedLibraryLoader: void loadFile(java.lang.String)
com.badlogic.gdx.utils.SharedLibraryLoader: java.lang.Throwable loadFile(java.lang.String,java.lang.String,java.io.File)
com.badlogic.gdx.utils.SharedLibraryLoader: void <clinit>()
com.badlogic.gdx.utils.ShortArray
com.badlogic.gdx.utils.ShortArray: short[] items
com.badlogic.gdx.utils.ShortArray: int size
com.badlogic.gdx.utils.ShortArray: boolean ordered
com.badlogic.gdx.utils.ShortArray: ShortArray()
com.badlogic.gdx.utils.ShortArray: ShortArray(int)
com.badlogic.gdx.utils.ShortArray: ShortArray(boolean,int)
com.badlogic.gdx.utils.ShortArray: ShortArray(com.badlogic.gdx.utils.ShortArray)
com.badlogic.gdx.utils.ShortArray: ShortArray(short[])
com.badlogic.gdx.utils.ShortArray: ShortArray(boolean,short[],int,int)
com.badlogic.gdx.utils.ShortArray: void add(int)
com.badlogic.gdx.utils.ShortArray: void add(short)
com.badlogic.gdx.utils.ShortArray: void addAll(com.badlogic.gdx.utils.ShortArray)
com.badlogic.gdx.utils.ShortArray: void addAll(com.badlogic.gdx.utils.ShortArray,int,int)
com.badlogic.gdx.utils.ShortArray: void addAll(short[])
com.badlogic.gdx.utils.ShortArray: void addAll(short[],int,int)
com.badlogic.gdx.utils.ShortArray: short get(int)
com.badlogic.gdx.utils.ShortArray: void set(int,short)
com.badlogic.gdx.utils.ShortArray: void incr(int,short)
com.badlogic.gdx.utils.ShortArray: void mul(int,short)
com.badlogic.gdx.utils.ShortArray: void insert(int,short)
com.badlogic.gdx.utils.ShortArray: void swap(int,int)
com.badlogic.gdx.utils.ShortArray: boolean contains(short)
com.badlogic.gdx.utils.ShortArray: int indexOf(short)
com.badlogic.gdx.utils.ShortArray: int lastIndexOf(char)
com.badlogic.gdx.utils.ShortArray: boolean removeValue(short)
com.badlogic.gdx.utils.ShortArray: short removeIndex(int)
com.badlogic.gdx.utils.ShortArray: void removeRange(int,int)
com.badlogic.gdx.utils.ShortArray: boolean removeAll(com.badlogic.gdx.utils.ShortArray)
com.badlogic.gdx.utils.ShortArray: short pop()
com.badlogic.gdx.utils.ShortArray: short peek()
com.badlogic.gdx.utils.ShortArray: short first()
com.badlogic.gdx.utils.ShortArray: void clear()
com.badlogic.gdx.utils.ShortArray: short[] shrink()
com.badlogic.gdx.utils.ShortArray: short[] ensureCapacity(int)
com.badlogic.gdx.utils.ShortArray: short[] resize(int)
com.badlogic.gdx.utils.ShortArray: void sort()
com.badlogic.gdx.utils.ShortArray: void reverse()
com.badlogic.gdx.utils.ShortArray: void shuffle()
com.badlogic.gdx.utils.ShortArray: void truncate(int)
com.badlogic.gdx.utils.ShortArray: short random()
com.badlogic.gdx.utils.ShortArray: short[] toArray()
com.badlogic.gdx.utils.ShortArray: boolean equals(java.lang.Object)
com.badlogic.gdx.utils.ShortArray: java.lang.String toString()
com.badlogic.gdx.utils.ShortArray: java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.ShortArray: com.badlogic.gdx.utils.ShortArray with(short[])
com.badlogic.gdx.utils.SnapshotArray
com.badlogic.gdx.utils.SnapshotArray: java.lang.Object[] snapshot
com.badlogic.gdx.utils.SnapshotArray: java.lang.Object[] recycled
com.badlogic.gdx.utils.SnapshotArray: int snapshots
com.badlogic.gdx.utils.SnapshotArray: SnapshotArray()
com.badlogic.gdx.utils.SnapshotArray: SnapshotArray(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.SnapshotArray: SnapshotArray(boolean,int,java.lang.Class)
com.badlogic.gdx.utils.SnapshotArray: SnapshotArray(boolean,int)
com.badlogic.gdx.utils.SnapshotArray: SnapshotArray(boolean,java.lang.Object[],int,int)
com.badlogic.gdx.utils.SnapshotArray: SnapshotArray(java.lang.Class)
com.badlogic.gdx.utils.SnapshotArray: SnapshotArray(int)
com.badlogic.gdx.utils.SnapshotArray: SnapshotArray(java.lang.Object[])
com.badlogic.gdx.utils.SnapshotArray: java.lang.Object[] begin()
com.badlogic.gdx.utils.SnapshotArray: void end()
com.badlogic.gdx.utils.SnapshotArray: void modified()
com.badlogic.gdx.utils.SnapshotArray: void set(int,java.lang.Object)
com.badlogic.gdx.utils.SnapshotArray: void insert(int,java.lang.Object)
com.badlogic.gdx.utils.SnapshotArray: void swap(int,int)
com.badlogic.gdx.utils.SnapshotArray: boolean removeValue(java.lang.Object,boolean)
com.badlogic.gdx.utils.SnapshotArray: java.lang.Object removeIndex(int)
com.badlogic.gdx.utils.SnapshotArray: void removeRange(int,int)
com.badlogic.gdx.utils.SnapshotArray: boolean removeAll(com.badlogic.gdx.utils.Array,boolean)
com.badlogic.gdx.utils.SnapshotArray: java.lang.Object pop()
com.badlogic.gdx.utils.SnapshotArray: void clear()
com.badlogic.gdx.utils.SnapshotArray: void sort()
com.badlogic.gdx.utils.SnapshotArray: void sort(java.util.Comparator)
com.badlogic.gdx.utils.SnapshotArray: void reverse()
com.badlogic.gdx.utils.SnapshotArray: void shuffle()
com.badlogic.gdx.utils.SnapshotArray: void truncate(int)
com.badlogic.gdx.utils.SnapshotArray: com.badlogic.gdx.utils.SnapshotArray with(java.lang.Object[])
com.badlogic.gdx.utils.Sort
com.badlogic.gdx.utils.Sort: com.badlogic.gdx.utils.Sort instance
com.badlogic.gdx.utils.Sort: com.badlogic.gdx.utils.TimSort timSort
com.badlogic.gdx.utils.Sort: com.badlogic.gdx.utils.ComparableTimSort comparableTimSort
com.badlogic.gdx.utils.Sort: Sort()
com.badlogic.gdx.utils.Sort: void sort(com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.Sort: void sort(java.lang.Object[])
com.badlogic.gdx.utils.Sort: void sort(java.lang.Object[],int,int)
com.badlogic.gdx.utils.Sort: void sort(com.badlogic.gdx.utils.Array,java.util.Comparator)
com.badlogic.gdx.utils.Sort: void sort(java.lang.Object[],java.util.Comparator)
com.badlogic.gdx.utils.Sort: void sort(java.lang.Object[],java.util.Comparator,int,int)
com.badlogic.gdx.utils.Sort: com.badlogic.gdx.utils.Sort instance()
com.badlogic.gdx.utils.SortedIntList
com.badlogic.gdx.utils.SortedIntList: com.badlogic.gdx.utils.SortedIntList$NodePool nodePool
com.badlogic.gdx.utils.SortedIntList: com.badlogic.gdx.utils.SortedIntList$Iterator iterator
com.badlogic.gdx.utils.SortedIntList: int size
com.badlogic.gdx.utils.SortedIntList: com.badlogic.gdx.utils.SortedIntList$Node first
com.badlogic.gdx.utils.SortedIntList: SortedIntList()
com.badlogic.gdx.utils.SortedIntList: java.lang.Object insert(int,java.lang.Object)
com.badlogic.gdx.utils.SortedIntList: java.lang.Object get(int)
com.badlogic.gdx.utils.SortedIntList: void clear()
com.badlogic.gdx.utils.SortedIntList: int size()
com.badlogic.gdx.utils.SortedIntList: java.util.Iterator iterator()
com.badlogic.gdx.utils.SortedIntList$Iterator
com.badlogic.gdx.utils.SortedIntList$Iterator: com.badlogic.gdx.utils.SortedIntList$Node position
com.badlogic.gdx.utils.SortedIntList$Iterator: com.badlogic.gdx.utils.SortedIntList$Node previousPosition
com.badlogic.gdx.utils.SortedIntList$Iterator: com.badlogic.gdx.utils.SortedIntList this$0
com.badlogic.gdx.utils.SortedIntList$Iterator: SortedIntList$Iterator(com.badlogic.gdx.utils.SortedIntList)
com.badlogic.gdx.utils.SortedIntList$Iterator: boolean hasNext()
com.badlogic.gdx.utils.SortedIntList$Iterator: com.badlogic.gdx.utils.SortedIntList$Node next()
com.badlogic.gdx.utils.SortedIntList$Iterator: void remove()
com.badlogic.gdx.utils.SortedIntList$Iterator: com.badlogic.gdx.utils.SortedIntList$Iterator reset()
com.badlogic.gdx.utils.SortedIntList$Iterator: java.lang.Object next()
com.badlogic.gdx.utils.SortedIntList$Node
com.badlogic.gdx.utils.SortedIntList$Node: com.badlogic.gdx.utils.SortedIntList$Node p
com.badlogic.gdx.utils.SortedIntList$Node: com.badlogic.gdx.utils.SortedIntList$Node n
com.badlogic.gdx.utils.SortedIntList$Node: java.lang.Object value
com.badlogic.gdx.utils.SortedIntList$Node: int index
com.badlogic.gdx.utils.SortedIntList$Node: SortedIntList$Node()
com.badlogic.gdx.utils.SortedIntList$NodePool
com.badlogic.gdx.utils.SortedIntList$NodePool: SortedIntList$NodePool()
com.badlogic.gdx.utils.SortedIntList$NodePool: com.badlogic.gdx.utils.SortedIntList$Node newObject()
com.badlogic.gdx.utils.SortedIntList$NodePool: com.badlogic.gdx.utils.SortedIntList$Node obtain(com.badlogic.gdx.utils.SortedIntList$Node,com.badlogic.gdx.utils.SortedIntList$Node,java.lang.Object,int)
com.badlogic.gdx.utils.SortedIntList$NodePool: java.lang.Object newObject()
com.badlogic.gdx.utils.StreamUtils
com.badlogic.gdx.utils.StreamUtils: int DEFAULT_BUFFER_SIZE
com.badlogic.gdx.utils.StreamUtils: byte[] EMPTY_BYTES
com.badlogic.gdx.utils.StreamUtils: StreamUtils()
com.badlogic.gdx.utils.StreamUtils: void copyStream(java.io.InputStream,java.io.OutputStream)
com.badlogic.gdx.utils.StreamUtils: void copyStream(java.io.InputStream,java.io.OutputStream,int)
com.badlogic.gdx.utils.StreamUtils: byte[] copyStreamToByteArray(java.io.InputStream)
com.badlogic.gdx.utils.StreamUtils: byte[] copyStreamToByteArray(java.io.InputStream,int)
com.badlogic.gdx.utils.StreamUtils: java.lang.String copyStreamToString(java.io.InputStream)
com.badlogic.gdx.utils.StreamUtils: java.lang.String copyStreamToString(java.io.InputStream,int)
com.badlogic.gdx.utils.StreamUtils: void closeQuietly(java.io.Closeable)
com.badlogic.gdx.utils.StreamUtils: void <clinit>()
com.badlogic.gdx.utils.StreamUtils$OptimizedByteArrayOutputStream
com.badlogic.gdx.utils.StreamUtils$OptimizedByteArrayOutputStream: StreamUtils$OptimizedByteArrayOutputStream(int)
com.badlogic.gdx.utils.StreamUtils$OptimizedByteArrayOutputStream: byte[] toByteArray()
com.badlogic.gdx.utils.StringBuilder
com.badlogic.gdx.utils.StringBuilder: int INITIAL_CAPACITY
com.badlogic.gdx.utils.StringBuilder: char[] chars
com.badlogic.gdx.utils.StringBuilder: int length
com.badlogic.gdx.utils.StringBuilder: char[] digits
com.badlogic.gdx.utils.StringBuilder: int numChars(int,int)
com.badlogic.gdx.utils.StringBuilder: int numChars(long,int)
com.badlogic.gdx.utils.StringBuilder: char[] getValue()
com.badlogic.gdx.utils.StringBuilder: StringBuilder()
com.badlogic.gdx.utils.StringBuilder: StringBuilder(int)
com.badlogic.gdx.utils.StringBuilder: StringBuilder(java.lang.CharSequence)
com.badlogic.gdx.utils.StringBuilder: StringBuilder(com.badlogic.gdx.utils.StringBuilder)
com.badlogic.gdx.utils.StringBuilder: StringBuilder(java.lang.String)
com.badlogic.gdx.utils.StringBuilder: void enlargeBuffer(int)
com.badlogic.gdx.utils.StringBuilder: void appendNull()
com.badlogic.gdx.utils.StringBuilder: void append0(char[])
com.badlogic.gdx.utils.StringBuilder: void append0(char[],int,int)
com.badlogic.gdx.utils.StringBuilder: void append0(char)
com.badlogic.gdx.utils.StringBuilder: void append0(java.lang.String)
com.badlogic.gdx.utils.StringBuilder: void append0(java.lang.CharSequence,int,int)
com.badlogic.gdx.utils.StringBuilder: int capacity()
com.badlogic.gdx.utils.StringBuilder: char charAt(int)
com.badlogic.gdx.utils.StringBuilder: void delete0(int,int)
com.badlogic.gdx.utils.StringBuilder: void deleteCharAt0(int)
com.badlogic.gdx.utils.StringBuilder: void ensureCapacity(int)
com.badlogic.gdx.utils.StringBuilder: void getChars(int,int,char[],int)
com.badlogic.gdx.utils.StringBuilder: void insert0(int,char[])
com.badlogic.gdx.utils.StringBuilder: void insert0(int,char[],int,int)
com.badlogic.gdx.utils.StringBuilder: void insert0(int,char)
com.badlogic.gdx.utils.StringBuilder: void insert0(int,java.lang.String)
com.badlogic.gdx.utils.StringBuilder: void insert0(int,java.lang.CharSequence,int,int)
com.badlogic.gdx.utils.StringBuilder: int length()
com.badlogic.gdx.utils.StringBuilder: void move(int,int)
com.badlogic.gdx.utils.StringBuilder: void replace0(int,int,java.lang.String)
com.badlogic.gdx.utils.StringBuilder: void reverse0()
com.badlogic.gdx.utils.StringBuilder: void setCharAt(int,char)
com.badlogic.gdx.utils.StringBuilder: void setLength(int)
com.badlogic.gdx.utils.StringBuilder: java.lang.String substring(int)
com.badlogic.gdx.utils.StringBuilder: java.lang.String substring(int,int)
com.badlogic.gdx.utils.StringBuilder: java.lang.String toString()
com.badlogic.gdx.utils.StringBuilder: java.lang.CharSequence subSequence(int,int)
com.badlogic.gdx.utils.StringBuilder: int indexOf(java.lang.String)
com.badlogic.gdx.utils.StringBuilder: int indexOf(java.lang.String,int)
com.badlogic.gdx.utils.StringBuilder: int lastIndexOf(java.lang.String)
com.badlogic.gdx.utils.StringBuilder: int lastIndexOf(java.lang.String,int)
com.badlogic.gdx.utils.StringBuilder: void trimToSize()
com.badlogic.gdx.utils.StringBuilder: int codePointAt(int)
com.badlogic.gdx.utils.StringBuilder: int codePointBefore(int)
com.badlogic.gdx.utils.StringBuilder: int codePointCount(int,int)
com.badlogic.gdx.utils.StringBuilder: int offsetByCodePoints(int,int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(boolean)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(char)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(int,int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(int,int,char)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(long)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(long,int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(long,int,char)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(float)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(double)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(java.lang.Object)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(java.lang.String)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(char[])
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(char[],int,int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence,int,int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder appendCodePoint(int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder delete(int,int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder deleteCharAt(int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder insert(int,boolean)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder insert(int,char)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder insert(int,int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder insert(int,long)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder insert(int,float)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder insert(int,double)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder insert(int,char[])
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String)
com.badlogic.gdx.utils.StringBuilder: com.badlogic.gdx.utils.StringBuilder reverse()
com.badlogic.gdx.utils.StringBuilder: int hashCode()
com.badlogic.gdx.utils.StringBuilder: boolean equals(java.lang.Object)
com.badlogic.gdx.utils.StringBuilder: java.lang.Appendable append(char)
com.badlogic.gdx.utils.StringBuilder: java.lang.Appendable append(java.lang.CharSequence,int,int)
com.badlogic.gdx.utils.StringBuilder: java.lang.Appendable append(java.lang.CharSequence)
com.badlogic.gdx.utils.StringBuilder: void <clinit>()
com.badlogic.gdx.utils.TextFormatter
com.badlogic.gdx.utils.TextFormatter: java.text.MessageFormat messageFormat
com.badlogic.gdx.utils.TextFormatter: com.badlogic.gdx.utils.StringBuilder buffer
com.badlogic.gdx.utils.TextFormatter: TextFormatter(java.util.Locale,boolean)
com.badlogic.gdx.utils.TextFormatter: java.lang.String format(java.lang.String,java.lang.Object[])
com.badlogic.gdx.utils.TextFormatter: java.lang.String replaceEscapeChars(java.lang.String)
com.badlogic.gdx.utils.TextFormatter: java.lang.String simpleFormat(java.lang.String,java.lang.Object[])
com.badlogic.gdx.utils.TimSort
com.badlogic.gdx.utils.TimSort: int MIN_MERGE
com.badlogic.gdx.utils.TimSort: java.lang.Object[] a
com.badlogic.gdx.utils.TimSort: java.util.Comparator c
com.badlogic.gdx.utils.TimSort: int MIN_GALLOP
com.badlogic.gdx.utils.TimSort: int minGallop
com.badlogic.gdx.utils.TimSort: int INITIAL_TMP_STORAGE_LENGTH
com.badlogic.gdx.utils.TimSort: java.lang.Object[] tmp
com.badlogic.gdx.utils.TimSort: int tmpCount
com.badlogic.gdx.utils.TimSort: int stackSize
com.badlogic.gdx.utils.TimSort: int[] runBase
com.badlogic.gdx.utils.TimSort: int[] runLen
com.badlogic.gdx.utils.TimSort: boolean DEBUG
com.badlogic.gdx.utils.TimSort: TimSort()
com.badlogic.gdx.utils.TimSort: void doSort(java.lang.Object[],java.util.Comparator,int,int)
com.badlogic.gdx.utils.TimSort: TimSort(java.lang.Object[],java.util.Comparator)
com.badlogic.gdx.utils.TimSort: void sort(java.lang.Object[],java.util.Comparator)
com.badlogic.gdx.utils.TimSort: void sort(java.lang.Object[],int,int,java.util.Comparator)
com.badlogic.gdx.utils.TimSort: void binarySort(java.lang.Object[],int,int,int,java.util.Comparator)
com.badlogic.gdx.utils.TimSort: int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator)
com.badlogic.gdx.utils.TimSort: void reverseRange(java.lang.Object[],int,int)
com.badlogic.gdx.utils.TimSort: int minRunLength(int)
com.badlogic.gdx.utils.TimSort: void pushRun(int,int)
com.badlogic.gdx.utils.TimSort: void mergeCollapse()
com.badlogic.gdx.utils.TimSort: void mergeForceCollapse()
com.badlogic.gdx.utils.TimSort: void mergeAt(int)
com.badlogic.gdx.utils.TimSort: int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator)
com.badlogic.gdx.utils.TimSort: int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator)
com.badlogic.gdx.utils.TimSort: void mergeLo(int,int,int,int)
com.badlogic.gdx.utils.TimSort: void mergeHi(int,int,int,int)
com.badlogic.gdx.utils.TimSort: java.lang.Object[] ensureCapacity(int)
com.badlogic.gdx.utils.TimSort: void rangeCheck(int,int,int)
com.badlogic.gdx.utils.TimeUtils
com.badlogic.gdx.utils.TimeUtils: long nanosPerMilli
com.badlogic.gdx.utils.TimeUtils: TimeUtils()
com.badlogic.gdx.utils.TimeUtils: long nanoTime()
com.badlogic.gdx.utils.TimeUtils: long millis()
com.badlogic.gdx.utils.TimeUtils: long nanosToMillis(long)
com.badlogic.gdx.utils.TimeUtils: long millisToNanos(long)
com.badlogic.gdx.utils.TimeUtils: long timeSinceNanos(long)
com.badlogic.gdx.utils.TimeUtils: long timeSinceMillis(long)
com.badlogic.gdx.utils.Timer
com.badlogic.gdx.utils.Timer: com.badlogic.gdx.utils.Array instances
com.badlogic.gdx.utils.Timer: com.badlogic.gdx.utils.Timer$TimerThread thread
com.badlogic.gdx.utils.Timer: int CANCELLED
com.badlogic.gdx.utils.Timer: int FOREVER
com.badlogic.gdx.utils.Timer: com.badlogic.gdx.utils.Timer instance
com.badlogic.gdx.utils.Timer: com.badlogic.gdx.utils.Array tasks
com.badlogic.gdx.utils.Timer: com.badlogic.gdx.utils.Timer instance()
com.badlogic.gdx.utils.Timer: Timer()
com.badlogic.gdx.utils.Timer: void postTask(com.badlogic.gdx.utils.Timer$Task)
com.badlogic.gdx.utils.Timer: void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float)
com.badlogic.gdx.utils.Timer: void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float)
com.badlogic.gdx.utils.Timer: void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float,int)
com.badlogic.gdx.utils.Timer: void stop()
com.badlogic.gdx.utils.Timer: void start()
com.badlogic.gdx.utils.Timer: void clear()
com.badlogic.gdx.utils.Timer: long update(long,long)
com.badlogic.gdx.utils.Timer: void delay(long)
com.badlogic.gdx.utils.Timer: void wake()
com.badlogic.gdx.utils.Timer: void post(com.badlogic.gdx.utils.Timer$Task)
com.badlogic.gdx.utils.Timer: void schedule(com.badlogic.gdx.utils.Timer$Task,float)
com.badlogic.gdx.utils.Timer: void schedule(com.badlogic.gdx.utils.Timer$Task,float,float)
com.badlogic.gdx.utils.Timer: void schedule(com.badlogic.gdx.utils.Timer$Task,float,float,int)
com.badlogic.gdx.utils.Timer: void checkStatics()
com.badlogic.gdx.utils.Timer: void <clinit>()
com.badlogic.gdx.utils.Timer$Task
com.badlogic.gdx.utils.Timer$Task: long executeTimeMillis
com.badlogic.gdx.utils.Timer$Task: long intervalMillis
com.badlogic.gdx.utils.Timer$Task: int repeatCount
com.badlogic.gdx.utils.Timer$Task: Timer$Task()
com.badlogic.gdx.utils.Timer$Task: void run()
com.badlogic.gdx.utils.Timer$Task: void cancel()
com.badlogic.gdx.utils.Timer$Task: boolean isScheduled()
com.badlogic.gdx.utils.Timer$Task: long getExecuteTimeMillis()
com.badlogic.gdx.utils.Timer$TimerThread
com.badlogic.gdx.utils.Timer$TimerThread: com.badlogic.gdx.Application app
com.badlogic.gdx.utils.Timer$TimerThread: long pauseMillis
com.badlogic.gdx.utils.Timer$TimerThread: Timer$TimerThread()
com.badlogic.gdx.utils.Timer$TimerThread: void run()
com.badlogic.gdx.utils.Timer$TimerThread: void resume()
com.badlogic.gdx.utils.Timer$TimerThread: void pause()
com.badlogic.gdx.utils.Timer$TimerThread: void dispose()
com.badlogic.gdx.utils.UBJsonReader
com.badlogic.gdx.utils.UBJsonReader: boolean oldFormat
com.badlogic.gdx.utils.UBJsonReader: UBJsonReader()
com.badlogic.gdx.utils.UBJsonReader: com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream)
com.badlogic.gdx.utils.UBJsonReader: com.badlogic.gdx.utils.JsonValue parse(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.utils.UBJsonReader: com.badlogic.gdx.utils.JsonValue parse(java.io.DataInputStream)
com.badlogic.gdx.utils.UBJsonReader: com.badlogic.gdx.utils.JsonValue parse(java.io.DataInputStream,byte)
com.badlogic.gdx.utils.UBJsonReader: com.badlogic.gdx.utils.JsonValue parseArray(java.io.DataInputStream)
com.badlogic.gdx.utils.UBJsonReader: com.badlogic.gdx.utils.JsonValue parseObject(java.io.DataInputStream)
com.badlogic.gdx.utils.UBJsonReader: com.badlogic.gdx.utils.JsonValue parseData(java.io.DataInputStream,byte)
com.badlogic.gdx.utils.UBJsonReader: java.lang.String parseString(java.io.DataInputStream,byte)
com.badlogic.gdx.utils.UBJsonReader: java.lang.String parseString(java.io.DataInputStream,boolean,byte)
com.badlogic.gdx.utils.UBJsonReader: long parseSize(java.io.DataInputStream,boolean,long)
com.badlogic.gdx.utils.UBJsonReader: long parseSize(java.io.DataInputStream,byte,boolean,long)
com.badlogic.gdx.utils.UBJsonReader: short readUChar(java.io.DataInputStream)
com.badlogic.gdx.utils.UBJsonReader: int readUShort(java.io.DataInputStream)
com.badlogic.gdx.utils.UBJsonReader: long readUInt(java.io.DataInputStream)
com.badlogic.gdx.utils.UBJsonReader: java.lang.String readString(java.io.DataInputStream,long)
com.badlogic.gdx.utils.UBJsonWriter
com.badlogic.gdx.utils.UBJsonWriter: java.io.DataOutputStream out
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter$JsonObject current
com.badlogic.gdx.utils.UBJsonWriter: boolean named
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.Array stack
com.badlogic.gdx.utils.UBJsonWriter: UBJsonWriter(java.io.OutputStream)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter object()
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter object(java.lang.String)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter array()
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter array(java.lang.String)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter name(java.lang.String)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(byte)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(short)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(int)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(long)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(float)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(double)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(boolean)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(char)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(java.lang.String)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(byte[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(short[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(int[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(long[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(float[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(double[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(boolean[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(char[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(java.lang.String[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value(java.lang.Object)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter value()
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,byte)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,short)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,int)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,long)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,float)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,double)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,boolean)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,char)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,java.lang.String)
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,byte[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,short[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,int[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,long[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,float[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,double[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,boolean[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,char[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,java.lang.String[])
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String)
com.badlogic.gdx.utils.UBJsonWriter: void checkName()
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter pop()
com.badlogic.gdx.utils.UBJsonWriter: com.badlogic.gdx.utils.UBJsonWriter pop(boolean)
com.badlogic.gdx.utils.UBJsonWriter: void flush()
com.badlogic.gdx.utils.UBJsonWriter: void close()
com.badlogic.gdx.utils.UBJsonWriter$JsonObject
com.badlogic.gdx.utils.UBJsonWriter$JsonObject: boolean array
com.badlogic.gdx.utils.UBJsonWriter$JsonObject: com.badlogic.gdx.utils.UBJsonWriter this$0
com.badlogic.gdx.utils.UBJsonWriter$JsonObject: UBJsonWriter$JsonObject(com.badlogic.gdx.utils.UBJsonWriter,boolean)
com.badlogic.gdx.utils.UBJsonWriter$JsonObject: void close()
com.badlogic.gdx.utils.XmlReader
com.badlogic.gdx.utils.XmlReader: com.badlogic.gdx.utils.Array elements
com.badlogic.gdx.utils.XmlReader: com.badlogic.gdx.utils.XmlReader$Element root
com.badlogic.gdx.utils.XmlReader: com.badlogic.gdx.utils.XmlReader$Element current
com.badlogic.gdx.utils.XmlReader: com.badlogic.gdx.utils.StringBuilder textBuffer
com.badlogic.gdx.utils.XmlReader: byte[] _xml_actions
com.badlogic.gdx.utils.XmlReader: byte[] _xml_key_offsets
com.badlogic.gdx.utils.XmlReader: char[] _xml_trans_keys
com.badlogic.gdx.utils.XmlReader: byte[] _xml_single_lengths
com.badlogic.gdx.utils.XmlReader: byte[] _xml_range_lengths
com.badlogic.gdx.utils.XmlReader: short[] _xml_index_offsets
com.badlogic.gdx.utils.XmlReader: byte[] _xml_indicies
com.badlogic.gdx.utils.XmlReader: byte[] _xml_trans_targs
com.badlogic.gdx.utils.XmlReader: byte[] _xml_trans_actions
com.badlogic.gdx.utils.XmlReader: int xml_start
com.badlogic.gdx.utils.XmlReader: int xml_first_final
com.badlogic.gdx.utils.XmlReader: int xml_error
com.badlogic.gdx.utils.XmlReader: int xml_en_elementBody
com.badlogic.gdx.utils.XmlReader: int xml_en_main
com.badlogic.gdx.utils.XmlReader: XmlReader()
com.badlogic.gdx.utils.XmlReader: com.badlogic.gdx.utils.XmlReader$Element parse(java.lang.String)
com.badlogic.gdx.utils.XmlReader: com.badlogic.gdx.utils.XmlReader$Element parse(java.io.Reader)
com.badlogic.gdx.utils.XmlReader: com.badlogic.gdx.utils.XmlReader$Element parse(java.io.InputStream)
com.badlogic.gdx.utils.XmlReader: com.badlogic.gdx.utils.XmlReader$Element parse(com.badlogic.gdx.files.FileHandle)
com.badlogic.gdx.utils.XmlReader: com.badlogic.gdx.utils.XmlReader$Element parse(char[],int,int)
com.badlogic.gdx.utils.XmlReader: byte[] init__xml_actions_0()
com.badlogic.gdx.utils.XmlReader: byte[] init__xml_key_offsets_0()
com.badlogic.gdx.utils.XmlReader: char[] init__xml_trans_keys_0()
com.badlogic.gdx.utils.XmlReader: byte[] init__xml_single_lengths_0()
com.badlogic.gdx.utils.XmlReader: byte[] init__xml_range_lengths_0()
com.badlogic.gdx.utils.XmlReader: short[] init__xml_index_offsets_0()
com.badlogic.gdx.utils.XmlReader: byte[] init__xml_indicies_0()
com.badlogic.gdx.utils.XmlReader: byte[] init__xml_trans_targs_0()
com.badlogic.gdx.utils.XmlReader: byte[] init__xml_trans_actions_0()
com.badlogic.gdx.utils.XmlReader: void open(java.lang.String)
com.badlogic.gdx.utils.XmlReader: void attribute(java.lang.String,java.lang.String)
com.badlogic.gdx.utils.XmlReader: java.lang.String entity(java.lang.String)
com.badlogic.gdx.utils.XmlReader: void text(java.lang.String)
com.badlogic.gdx.utils.XmlReader: void close()
com.badlogic.gdx.utils.XmlReader: void <clinit>()
com.badlogic.gdx.utils.XmlReader$Element
com.badlogic.gdx.utils.XmlReader$Element: java.lang.String name
com.badlogic.gdx.utils.XmlReader$Element: com.badlogic.gdx.utils.ObjectMap attributes
com.badlogic.gdx.utils.XmlReader$Element: com.badlogic.gdx.utils.Array children
com.badlogic.gdx.utils.XmlReader$Element: java.lang.String text
com.badlogic.gdx.utils.XmlReader$Element: com.badlogic.gdx.utils.XmlReader$Element parent
com.badlogic.gdx.utils.XmlReader$Element: XmlReader$Element(java.lang.String,com.badlogic.gdx.utils.XmlReader$Element)
com.badlogic.gdx.utils.XmlReader$Element: java.lang.String getName()
com.badlogic.gdx.utils.XmlReader$Element: com.badlogic.gdx.utils.ObjectMap getAttributes()
com.badlogic.gdx.utils.XmlReader$Element: java.lang.String getAttribute(java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: java.lang.String getAttribute(java.lang.String,java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: void setAttribute(java.lang.String,java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: int getChildCount()
com.badlogic.gdx.utils.XmlReader$Element: com.badlogic.gdx.utils.XmlReader$Element getChild(int)
com.badlogic.gdx.utils.XmlReader$Element: void addChild(com.badlogic.gdx.utils.XmlReader$Element)
com.badlogic.gdx.utils.XmlReader$Element: java.lang.String getText()
com.badlogic.gdx.utils.XmlReader$Element: void setText(java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: void removeChild(int)
com.badlogic.gdx.utils.XmlReader$Element: void removeChild(com.badlogic.gdx.utils.XmlReader$Element)
com.badlogic.gdx.utils.XmlReader$Element: void remove()
com.badlogic.gdx.utils.XmlReader$Element: com.badlogic.gdx.utils.XmlReader$Element getParent()
com.badlogic.gdx.utils.XmlReader$Element: java.lang.String toString()
com.badlogic.gdx.utils.XmlReader$Element: java.lang.String toString(java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: com.badlogic.gdx.utils.XmlReader$Element getChildByName(java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: com.badlogic.gdx.utils.XmlReader$Element getChildByNameRecursive(java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: com.badlogic.gdx.utils.Array getChildrenByName(java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: com.badlogic.gdx.utils.Array getChildrenByNameRecursively(java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: void getChildrenByNameRecursively(java.lang.String,com.badlogic.gdx.utils.Array)
com.badlogic.gdx.utils.XmlReader$Element: float getFloatAttribute(java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: float getFloatAttribute(java.lang.String,float)
com.badlogic.gdx.utils.XmlReader$Element: int getIntAttribute(java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: int getIntAttribute(java.lang.String,int)
com.badlogic.gdx.utils.XmlReader$Element: boolean getBooleanAttribute(java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: boolean getBooleanAttribute(java.lang.String,boolean)
com.badlogic.gdx.utils.XmlReader$Element: java.lang.String get(java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: java.lang.String get(java.lang.String,java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: int getInt(java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: int getInt(java.lang.String,int)
com.badlogic.gdx.utils.XmlReader$Element: float getFloat(java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: float getFloat(java.lang.String,float)
com.badlogic.gdx.utils.XmlReader$Element: boolean getBoolean(java.lang.String)
com.badlogic.gdx.utils.XmlReader$Element: boolean getBoolean(java.lang.String,boolean)
com.badlogic.gdx.utils.XmlWriter
com.badlogic.gdx.utils.XmlWriter: java.io.Writer writer
com.badlogic.gdx.utils.XmlWriter: com.badlogic.gdx.utils.Array stack
com.badlogic.gdx.utils.XmlWriter: java.lang.String currentElement
com.badlogic.gdx.utils.XmlWriter: boolean indentNextClose
com.badlogic.gdx.utils.XmlWriter: int indent
com.badlogic.gdx.utils.XmlWriter: XmlWriter(java.io.Writer)
com.badlogic.gdx.utils.XmlWriter: void indent()
com.badlogic.gdx.utils.XmlWriter: com.badlogic.gdx.utils.XmlWriter element(java.lang.String)
com.badlogic.gdx.utils.XmlWriter: com.badlogic.gdx.utils.XmlWriter element(java.lang.String,java.lang.Object)
com.badlogic.gdx.utils.XmlWriter: boolean startElementContent()
com.badlogic.gdx.utils.XmlWriter: com.badlogic.gdx.utils.XmlWriter attribute(java.lang.String,java.lang.Object)
com.badlogic.gdx.utils.XmlWriter: com.badlogic.gdx.utils.XmlWriter text(java.lang.Object)
com.badlogic.gdx.utils.XmlWriter: com.badlogic.gdx.utils.XmlWriter pop()
com.badlogic.gdx.utils.XmlWriter: void close()
com.badlogic.gdx.utils.XmlWriter: void write(char[],int,int)
com.badlogic.gdx.utils.XmlWriter: void flush()
com.badlogic.gdx.utils.async.AsyncExecutor
com.badlogic.gdx.utils.async.AsyncExecutor: java.util.concurrent.ExecutorService executor
com.badlogic.gdx.utils.async.AsyncExecutor: AsyncExecutor(int)
com.badlogic.gdx.utils.async.AsyncExecutor: com.badlogic.gdx.utils.async.AsyncResult submit(com.badlogic.gdx.utils.async.AsyncTask)
com.badlogic.gdx.utils.async.AsyncExecutor: void dispose()
com.badlogic.gdx.utils.async.AsyncExecutor$1
com.badlogic.gdx.utils.async.AsyncExecutor$1: com.badlogic.gdx.utils.async.AsyncExecutor this$0
com.badlogic.gdx.utils.async.AsyncExecutor$1: AsyncExecutor$1(com.badlogic.gdx.utils.async.AsyncExecutor)
com.badlogic.gdx.utils.async.AsyncExecutor$1: java.lang.Thread newThread(java.lang.Runnable)
com.badlogic.gdx.utils.async.AsyncExecutor$2
com.badlogic.gdx.utils.async.AsyncExecutor$2: com.badlogic.gdx.utils.async.AsyncTask val$task
com.badlogic.gdx.utils.async.AsyncExecutor$2: com.badlogic.gdx.utils.async.AsyncExecutor this$0
com.badlogic.gdx.utils.async.AsyncExecutor$2: AsyncExecutor$2(com.badlogic.gdx.utils.async.AsyncExecutor,com.badlogic.gdx.utils.async.AsyncTask)
com.badlogic.gdx.utils.async.AsyncExecutor$2: java.lang.Object call()
com.badlogic.gdx.utils.async.AsyncResult
com.badlogic.gdx.utils.async.AsyncResult: java.util.concurrent.Future future
com.badlogic.gdx.utils.async.AsyncResult: AsyncResult(java.util.concurrent.Future)
com.badlogic.gdx.utils.async.AsyncResult: boolean isDone()
com.badlogic.gdx.utils.async.AsyncResult: java.lang.Object get()
com.badlogic.gdx.utils.async.AsyncTask
com.badlogic.gdx.utils.async.AsyncTask: java.lang.Object call()
com.badlogic.gdx.utils.async.ThreadUtils
com.badlogic.gdx.utils.async.ThreadUtils: ThreadUtils()
com.badlogic.gdx.utils.async.ThreadUtils: void yield()
com.badlogic.gdx.utils.compression.CRC
com.badlogic.gdx.utils.compression.CRC: int[] Table
com.badlogic.gdx.utils.compression.CRC: int _value
com.badlogic.gdx.utils.compression.CRC: CRC()
com.badlogic.gdx.utils.compression.CRC: void Init()
com.badlogic.gdx.utils.compression.CRC: void Update(byte[],int,int)
com.badlogic.gdx.utils.compression.CRC: void Update(byte[])
com.badlogic.gdx.utils.compression.CRC: void UpdateByte(int)
com.badlogic.gdx.utils.compression.CRC: int GetDigest()
com.badlogic.gdx.utils.compression.CRC: void <clinit>()
com.badlogic.gdx.utils.compression.ICodeProgress
com.badlogic.gdx.utils.compression.ICodeProgress: void SetProgress(long,long)
com.badlogic.gdx.utils.compression.Lzma
com.badlogic.gdx.utils.compression.Lzma: Lzma()
com.badlogic.gdx.utils.compression.Lzma: void compress(java.io.InputStream,java.io.OutputStream)
com.badlogic.gdx.utils.compression.Lzma: void decompress(java.io.InputStream,java.io.OutputStream)
com.badlogic.gdx.utils.compression.Lzma$CommandLine
com.badlogic.gdx.utils.compression.Lzma$CommandLine: int kEncode
com.badlogic.gdx.utils.compression.Lzma$CommandLine: int kDecode
com.badlogic.gdx.utils.compression.Lzma$CommandLine: int kBenchmak
com.badlogic.gdx.utils.compression.Lzma$CommandLine: int Command
com.badlogic.gdx.utils.compression.Lzma$CommandLine: int NumBenchmarkPasses
com.badlogic.gdx.utils.compression.Lzma$CommandLine: int DictionarySize
com.badlogic.gdx.utils.compression.Lzma$CommandLine: boolean DictionarySizeIsDefined
com.badlogic.gdx.utils.compression.Lzma$CommandLine: int Lc
com.badlogic.gdx.utils.compression.Lzma$CommandLine: int Lp
com.badlogic.gdx.utils.compression.Lzma$CommandLine: int Pb
com.badlogic.gdx.utils.compression.Lzma$CommandLine: int Fb
com.badlogic.gdx.utils.compression.Lzma$CommandLine: boolean FbIsDefined
com.badlogic.gdx.utils.compression.Lzma$CommandLine: boolean Eos
com.badlogic.gdx.utils.compression.Lzma$CommandLine: int Algorithm
com.badlogic.gdx.utils.compression.Lzma$CommandLine: int MatchFinder
com.badlogic.gdx.utils.compression.Lzma$CommandLine: java.lang.String InFile
com.badlogic.gdx.utils.compression.Lzma$CommandLine: java.lang.String OutFile
com.badlogic.gdx.utils.compression.Lzma$CommandLine: Lzma$CommandLine()
com.badlogic.gdx.utils.compression.lz.BinTree
com.badlogic.gdx.utils.compression.lz.BinTree: int _cyclicBufferPos
com.badlogic.gdx.utils.compression.lz.BinTree: int _cyclicBufferSize
com.badlogic.gdx.utils.compression.lz.BinTree: int _matchMaxLen
com.badlogic.gdx.utils.compression.lz.BinTree: int[] _son
com.badlogic.gdx.utils.compression.lz.BinTree: int[] _hash
com.badlogic.gdx.utils.compression.lz.BinTree: int _cutValue
com.badlogic.gdx.utils.compression.lz.BinTree: int _hashMask
com.badlogic.gdx.utils.compression.lz.BinTree: int _hashSizeSum
com.badlogic.gdx.utils.compression.lz.BinTree: boolean HASH_ARRAY
com.badlogic.gdx.utils.compression.lz.BinTree: int kHash2Size
com.badlogic.gdx.utils.compression.lz.BinTree: int kHash3Size
com.badlogic.gdx.utils.compression.lz.BinTree: int kBT2HashSize
com.badlogic.gdx.utils.compression.lz.BinTree: int kStartMaxLen
com.badlogic.gdx.utils.compression.lz.BinTree: int kHash3Offset
com.badlogic.gdx.utils.compression.lz.BinTree: int kEmptyHashValue
com.badlogic.gdx.utils.compression.lz.BinTree: int kMaxValForNormalize
com.badlogic.gdx.utils.compression.lz.BinTree: int kNumHashDirectBytes
com.badlogic.gdx.utils.compression.lz.BinTree: int kMinMatchCheck
com.badlogic.gdx.utils.compression.lz.BinTree: int kFixHashSize
com.badlogic.gdx.utils.compression.lz.BinTree: int[] CrcTable
com.badlogic.gdx.utils.compression.lz.BinTree: BinTree()
com.badlogic.gdx.utils.compression.lz.BinTree: void SetType(int)
com.badlogic.gdx.utils.compression.lz.BinTree: void Init()
com.badlogic.gdx.utils.compression.lz.BinTree: void MovePos()
com.badlogic.gdx.utils.compression.lz.BinTree: boolean Create(int,int,int,int)
com.badlogic.gdx.utils.compression.lz.BinTree: int GetMatches(int[])
com.badlogic.gdx.utils.compression.lz.BinTree: void Skip(int)
com.badlogic.gdx.utils.compression.lz.BinTree: void NormalizeLinks(int[],int,int)
com.badlogic.gdx.utils.compression.lz.BinTree: void Normalize()
com.badlogic.gdx.utils.compression.lz.BinTree: void SetCutValue(int)
com.badlogic.gdx.utils.compression.lz.BinTree: void <clinit>()
com.badlogic.gdx.utils.compression.lz.InWindow
com.badlogic.gdx.utils.compression.lz.InWindow: byte[] _bufferBase
com.badlogic.gdx.utils.compression.lz.InWindow: java.io.InputStream _stream
com.badlogic.gdx.utils.compression.lz.InWindow: int _posLimit
com.badlogic.gdx.utils.compression.lz.InWindow: boolean _streamEndWasReached
com.badlogic.gdx.utils.compression.lz.InWindow: int _pointerToLastSafePosition
com.badlogic.gdx.utils.compression.lz.InWindow: int _bufferOffset
com.badlogic.gdx.utils.compression.lz.InWindow: int _blockSize
com.badlogic.gdx.utils.compression.lz.InWindow: int _pos
com.badlogic.gdx.utils.compression.lz.InWindow: int _keepSizeBefore
com.badlogic.gdx.utils.compression.lz.InWindow: int _keepSizeAfter
com.badlogic.gdx.utils.compression.lz.InWindow: int _streamPos
com.badlogic.gdx.utils.compression.lz.InWindow: InWindow()
com.badlogic.gdx.utils.compression.lz.InWindow: void MoveBlock()
com.badlogic.gdx.utils.compression.lz.InWindow: void ReadBlock()
com.badlogic.gdx.utils.compression.lz.InWindow: void Free()
com.badlogic.gdx.utils.compression.lz.InWindow: void Create(int,int,int)
com.badlogic.gdx.utils.compression.lz.InWindow: void SetStream(java.io.InputStream)
com.badlogic.gdx.utils.compression.lz.InWindow: void ReleaseStream()
com.badlogic.gdx.utils.compression.lz.InWindow: void Init()
com.badlogic.gdx.utils.compression.lz.InWindow: void MovePos()
com.badlogic.gdx.utils.compression.lz.InWindow: byte GetIndexByte(int)
com.badlogic.gdx.utils.compression.lz.InWindow: int GetMatchLen(int,int,int)
com.badlogic.gdx.utils.compression.lz.InWindow: int GetNumAvailableBytes()
com.badlogic.gdx.utils.compression.lz.InWindow: void ReduceOffsets(int)
com.badlogic.gdx.utils.compression.lz.OutWindow
com.badlogic.gdx.utils.compression.lz.OutWindow: byte[] _buffer
com.badlogic.gdx.utils.compression.lz.OutWindow: int _pos
com.badlogic.gdx.utils.compression.lz.OutWindow: int _windowSize
com.badlogic.gdx.utils.compression.lz.OutWindow: int _streamPos
com.badlogic.gdx.utils.compression.lz.OutWindow: java.io.OutputStream _stream
com.badlogic.gdx.utils.compression.lz.OutWindow: OutWindow()
com.badlogic.gdx.utils.compression.lz.OutWindow: void Create(int)
com.badlogic.gdx.utils.compression.lz.OutWindow: void SetStream(java.io.OutputStream)
com.badlogic.gdx.utils.compression.lz.OutWindow: void ReleaseStream()
com.badlogic.gdx.utils.compression.lz.OutWindow: void Init(boolean)
com.badlogic.gdx.utils.compression.lz.OutWindow: void Flush()
com.badlogic.gdx.utils.compression.lz.OutWindow: void CopyBlock(int,int)
com.badlogic.gdx.utils.compression.lz.OutWindow: void PutByte(byte)
com.badlogic.gdx.utils.compression.lz.OutWindow: byte GetByte(int)
com.badlogic.gdx.utils.compression.lzma.Base
com.badlogic.gdx.utils.compression.lzma.Base: int kNumRepDistances
com.badlogic.gdx.utils.compression.lzma.Base: int kNumStates
com.badlogic.gdx.utils.compression.lzma.Base: int kNumPosSlotBits
com.badlogic.gdx.utils.compression.lzma.Base: int kDicLogSizeMin
com.badlogic.gdx.utils.compression.lzma.Base: int kNumLenToPosStatesBits
com.badlogic.gdx.utils.compression.lzma.Base: int kNumLenToPosStates
com.badlogic.gdx.utils.compression.lzma.Base: int kMatchMinLen
com.badlogic.gdx.utils.compression.lzma.Base: int kNumAlignBits
com.badlogic.gdx.utils.compression.lzma.Base: int kAlignTableSize
com.badlogic.gdx.utils.compression.lzma.Base: int kAlignMask
com.badlogic.gdx.utils.compression.lzma.Base: int kStartPosModelIndex
com.badlogic.gdx.utils.compression.lzma.Base: int kEndPosModelIndex
com.badlogic.gdx.utils.compression.lzma.Base: int kNumPosModels
com.badlogic.gdx.utils.compression.lzma.Base: int kNumFullDistances
com.badlogic.gdx.utils.compression.lzma.Base: int kNumLitPosStatesBitsEncodingMax
com.badlogic.gdx.utils.compression.lzma.Base: int kNumLitContextBitsMax
com.badlogic.gdx.utils.compression.lzma.Base: int kNumPosStatesBitsMax
com.badlogic.gdx.utils.compression.lzma.Base: int kNumPosStatesMax
com.badlogic.gdx.utils.compression.lzma.Base: int kNumPosStatesBitsEncodingMax
com.badlogic.gdx.utils.compression.lzma.Base: int kNumPosStatesEncodingMax
com.badlogic.gdx.utils.compression.lzma.Base: int kNumLowLenBits
com.badlogic.gdx.utils.compression.lzma.Base: int kNumMidLenBits
com.badlogic.gdx.utils.compression.lzma.Base: int kNumHighLenBits
com.badlogic.gdx.utils.compression.lzma.Base: int kNumLowLenSymbols
com.badlogic.gdx.utils.compression.lzma.Base: int kNumMidLenSymbols
com.badlogic.gdx.utils.compression.lzma.Base: int kNumLenSymbols
com.badlogic.gdx.utils.compression.lzma.Base: int kMatchMaxLen
com.badlogic.gdx.utils.compression.lzma.Base: Base()
com.badlogic.gdx.utils.compression.lzma.Base: int StateInit()
com.badlogic.gdx.utils.compression.lzma.Base: int StateUpdateChar(int)
com.badlogic.gdx.utils.compression.lzma.Base: int StateUpdateMatch(int)
com.badlogic.gdx.utils.compression.lzma.Base: int StateUpdateRep(int)
com.badlogic.gdx.utils.compression.lzma.Base: int StateUpdateShortRep(int)
com.badlogic.gdx.utils.compression.lzma.Base: boolean StateIsCharState(int)
com.badlogic.gdx.utils.compression.lzma.Base: int GetLenToPosState(int)
com.badlogic.gdx.utils.compression.lzma.Decoder
com.badlogic.gdx.utils.compression.lzma.Decoder: com.badlogic.gdx.utils.compression.lz.OutWindow m_OutWindow
com.badlogic.gdx.utils.compression.lzma.Decoder: com.badlogic.gdx.utils.compression.rangecoder.Decoder m_RangeDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder: short[] m_IsMatchDecoders
com.badlogic.gdx.utils.compression.lzma.Decoder: short[] m_IsRepDecoders
com.badlogic.gdx.utils.compression.lzma.Decoder: short[] m_IsRepG0Decoders
com.badlogic.gdx.utils.compression.lzma.Decoder: short[] m_IsRepG1Decoders
com.badlogic.gdx.utils.compression.lzma.Decoder: short[] m_IsRepG2Decoders
com.badlogic.gdx.utils.compression.lzma.Decoder: short[] m_IsRep0LongDecoders
com.badlogic.gdx.utils.compression.lzma.Decoder: com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_PosSlotDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder: short[] m_PosDecoders
com.badlogic.gdx.utils.compression.lzma.Decoder: com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder m_PosAlignDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder: com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder m_LenDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder: com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder m_RepLenDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder: com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder m_LiteralDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder: int m_DictionarySize
com.badlogic.gdx.utils.compression.lzma.Decoder: int m_DictionarySizeCheck
com.badlogic.gdx.utils.compression.lzma.Decoder: int m_PosStateMask
com.badlogic.gdx.utils.compression.lzma.Decoder: Decoder()
com.badlogic.gdx.utils.compression.lzma.Decoder: boolean SetDictionarySize(int)
com.badlogic.gdx.utils.compression.lzma.Decoder: boolean SetLcLpPb(int,int,int)
com.badlogic.gdx.utils.compression.lzma.Decoder: void Init()
com.badlogic.gdx.utils.compression.lzma.Decoder: boolean Code(java.io.InputStream,java.io.OutputStream,long)
com.badlogic.gdx.utils.compression.lzma.Decoder: boolean SetDecoderProperties(byte[])
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder: short[] m_Choice
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder: com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_LowCoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder: com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_MidCoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder: com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder m_HighCoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder: int m_NumPosStates
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder: com.badlogic.gdx.utils.compression.lzma.Decoder this$0
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder: Decoder$LenDecoder(com.badlogic.gdx.utils.compression.lzma.Decoder)
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder: void Create(int)
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder: void Init()
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder: int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder,int)
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder: com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2[] m_Coders
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder: int m_NumPrevBits
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder: int m_NumPosBits
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder: int m_PosMask
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder: com.badlogic.gdx.utils.compression.lzma.Decoder this$0
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder: Decoder$LiteralDecoder(com.badlogic.gdx.utils.compression.lzma.Decoder)
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder: void Create(int,int)
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder: void Init()
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder: com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2 GetDecoder(int,byte)
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2: short[] m_Decoders
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2: com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder this$1
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2: Decoder$LiteralDecoder$Decoder2(com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder)
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2: void Init()
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2: byte DecodeNormal(com.badlogic.gdx.utils.compression.rangecoder.Decoder)
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2: byte DecodeWithMatchByte(com.badlogic.gdx.utils.compression.rangecoder.Decoder,byte)
com.badlogic.gdx.utils.compression.lzma.Encoder
com.badlogic.gdx.utils.compression.lzma.Encoder: int EMatchFinderTypeBT2
com.badlogic.gdx.utils.compression.lzma.Encoder: int EMatchFinderTypeBT4
com.badlogic.gdx.utils.compression.lzma.Encoder: int kIfinityPrice
com.badlogic.gdx.utils.compression.lzma.Encoder: byte[] g_FastPos
com.badlogic.gdx.utils.compression.lzma.Encoder: int _state
com.badlogic.gdx.utils.compression.lzma.Encoder: byte _previousByte
com.badlogic.gdx.utils.compression.lzma.Encoder: int[] _repDistances
com.badlogic.gdx.utils.compression.lzma.Encoder: int kDefaultDictionaryLogSize
com.badlogic.gdx.utils.compression.lzma.Encoder: int kNumFastBytesDefault
com.badlogic.gdx.utils.compression.lzma.Encoder: int kNumLenSpecSymbols
com.badlogic.gdx.utils.compression.lzma.Encoder: int kNumOpts
com.badlogic.gdx.utils.compression.lzma.Encoder: com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal[] _optimum
com.badlogic.gdx.utils.compression.lzma.Encoder: com.badlogic.gdx.utils.compression.lz.BinTree _matchFinder
com.badlogic.gdx.utils.compression.lzma.Encoder: com.badlogic.gdx.utils.compression.rangecoder.Encoder _rangeEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder: short[] _isMatch
com.badlogic.gdx.utils.compression.lzma.Encoder: short[] _isRep
com.badlogic.gdx.utils.compression.lzma.Encoder: short[] _isRepG0
com.badlogic.gdx.utils.compression.lzma.Encoder: short[] _isRepG1
com.badlogic.gdx.utils.compression.lzma.Encoder: short[] _isRepG2
com.badlogic.gdx.utils.compression.lzma.Encoder: short[] _isRep0Long
com.badlogic.gdx.utils.compression.lzma.Encoder: com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _posSlotEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder: short[] _posEncoders
com.badlogic.gdx.utils.compression.lzma.Encoder: com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder _posAlignEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder: com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder _lenEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder: com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder _repMatchLenEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder: com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder _literalEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder: int[] _matchDistances
com.badlogic.gdx.utils.compression.lzma.Encoder: int _numFastBytes
com.badlogic.gdx.utils.compression.lzma.Encoder: int _longestMatchLength
com.badlogic.gdx.utils.compression.lzma.Encoder: int _numDistancePairs
com.badlogic.gdx.utils.compression.lzma.Encoder: int _additionalOffset
com.badlogic.gdx.utils.compression.lzma.Encoder: int _optimumEndIndex
com.badlogic.gdx.utils.compression.lzma.Encoder: int _optimumCurrentIndex
com.badlogic.gdx.utils.compression.lzma.Encoder: boolean _longestMatchWasFound
com.badlogic.gdx.utils.compression.lzma.Encoder: int[] _posSlotPrices
com.badlogic.gdx.utils.compression.lzma.Encoder: int[] _distancesPrices
com.badlogic.gdx.utils.compression.lzma.Encoder: int[] _alignPrices
com.badlogic.gdx.utils.compression.lzma.Encoder: int _alignPriceCount
com.badlogic.gdx.utils.compression.lzma.Encoder: int _distTableSize
com.badlogic.gdx.utils.compression.lzma.Encoder: int _posStateBits
com.badlogic.gdx.utils.compression.lzma.Encoder: int _posStateMask
com.badlogic.gdx.utils.compression.lzma.Encoder: int _numLiteralPosStateBits
com.badlogic.gdx.utils.compression.lzma.Encoder: int _numLiteralContextBits
com.badlogic.gdx.utils.compression.lzma.Encoder: int _dictionarySize
com.badlogic.gdx.utils.compression.lzma.Encoder: int _dictionarySizePrev
com.badlogic.gdx.utils.compression.lzma.Encoder: int _numFastBytesPrev
com.badlogic.gdx.utils.compression.lzma.Encoder: long nowPos64
com.badlogic.gdx.utils.compression.lzma.Encoder: boolean _finished
com.badlogic.gdx.utils.compression.lzma.Encoder: java.io.InputStream _inStream
com.badlogic.gdx.utils.compression.lzma.Encoder: int _matchFinderType
com.badlogic.gdx.utils.compression.lzma.Encoder: boolean _writeEndMark
com.badlogic.gdx.utils.compression.lzma.Encoder: boolean _needReleaseMFStream
com.badlogic.gdx.utils.compression.lzma.Encoder: int[] reps
com.badlogic.gdx.utils.compression.lzma.Encoder: int[] repLens
com.badlogic.gdx.utils.compression.lzma.Encoder: int backRes
com.badlogic.gdx.utils.compression.lzma.Encoder: long[] processedInSize
com.badlogic.gdx.utils.compression.lzma.Encoder: long[] processedOutSize
com.badlogic.gdx.utils.compression.lzma.Encoder: boolean[] finished
com.badlogic.gdx.utils.compression.lzma.Encoder: int kPropSize
com.badlogic.gdx.utils.compression.lzma.Encoder: byte[] properties
com.badlogic.gdx.utils.compression.lzma.Encoder: int[] tempPrices
com.badlogic.gdx.utils.compression.lzma.Encoder: int _matchPriceCount
com.badlogic.gdx.utils.compression.lzma.Encoder: int GetPosSlot(int)
com.badlogic.gdx.utils.compression.lzma.Encoder: int GetPosSlot2(int)
com.badlogic.gdx.utils.compression.lzma.Encoder: void BaseInit()
com.badlogic.gdx.utils.compression.lzma.Encoder: void Create()
com.badlogic.gdx.utils.compression.lzma.Encoder: Encoder()
com.badlogic.gdx.utils.compression.lzma.Encoder: void SetWriteEndMarkerMode(boolean)
com.badlogic.gdx.utils.compression.lzma.Encoder: void Init()
com.badlogic.gdx.utils.compression.lzma.Encoder: int ReadMatchDistances()
com.badlogic.gdx.utils.compression.lzma.Encoder: void MovePos(int)
com.badlogic.gdx.utils.compression.lzma.Encoder: int GetRepLen1Price(int,int)
com.badlogic.gdx.utils.compression.lzma.Encoder: int GetPureRepPrice(int,int,int)
com.badlogic.gdx.utils.compression.lzma.Encoder: int GetRepPrice(int,int,int,int)
com.badlogic.gdx.utils.compression.lzma.Encoder: int GetPosLenPrice(int,int,int)
com.badlogic.gdx.utils.compression.lzma.Encoder: int Backward(int)
com.badlogic.gdx.utils.compression.lzma.Encoder: int GetOptimum(int)
com.badlogic.gdx.utils.compression.lzma.Encoder: boolean ChangePair(int,int)
com.badlogic.gdx.utils.compression.lzma.Encoder: void WriteEndMarker(int)
com.badlogic.gdx.utils.compression.lzma.Encoder: void Flush(int)
com.badlogic.gdx.utils.compression.lzma.Encoder: void CodeOneBlock(long[],long[],boolean[])
com.badlogic.gdx.utils.compression.lzma.Encoder: void ReleaseMFStream()
com.badlogic.gdx.utils.compression.lzma.Encoder: void SetOutStream(java.io.OutputStream)
com.badlogic.gdx.utils.compression.lzma.Encoder: void ReleaseOutStream()
com.badlogic.gdx.utils.compression.lzma.Encoder: void ReleaseStreams()
com.badlogic.gdx.utils.compression.lzma.Encoder: void SetStreams(java.io.InputStream,java.io.OutputStream,long,long)
com.badlogic.gdx.utils.compression.lzma.Encoder: void Code(java.io.InputStream,java.io.OutputStream,long,long,com.badlogic.gdx.utils.compression.ICodeProgress)
com.badlogic.gdx.utils.compression.lzma.Encoder: void WriteCoderProperties(java.io.OutputStream)
com.badlogic.gdx.utils.compression.lzma.Encoder: void FillDistancesPrices()
com.badlogic.gdx.utils.compression.lzma.Encoder: void FillAlignPrices()
com.badlogic.gdx.utils.compression.lzma.Encoder: boolean SetAlgorithm(int)
com.badlogic.gdx.utils.compression.lzma.Encoder: boolean SetDictionarySize(int)
com.badlogic.gdx.utils.compression.lzma.Encoder: boolean SetNumFastBytes(int)
com.badlogic.gdx.utils.compression.lzma.Encoder: boolean SetMatchFinder(int)
com.badlogic.gdx.utils.compression.lzma.Encoder: boolean SetLcLpPb(int,int,int)
com.badlogic.gdx.utils.compression.lzma.Encoder: void SetEndMarkerMode(boolean)
com.badlogic.gdx.utils.compression.lzma.Encoder: void <clinit>()
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder: short[] _choice
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder: com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _lowCoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder: com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _midCoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder: com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder _highCoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder: com.badlogic.gdx.utils.compression.lzma.Encoder this$0
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder: Encoder$LenEncoder(com.badlogic.gdx.utils.compression.lzma.Encoder)
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder: void Init(int)
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder: void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int)
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder: void SetPrices(int,int,int[],int)
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder: int[] _prices
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder: int _tableSize
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder: int[] _counters
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder: com.badlogic.gdx.utils.compression.lzma.Encoder this$0
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder: Encoder$LenPriceTableEncoder(com.badlogic.gdx.utils.compression.lzma.Encoder)
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder: void SetTableSize(int)
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder: int GetPrice(int,int)
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder: void UpdateTable(int)
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder: void UpdateTables(int)
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder: void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int)
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder: com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2[] m_Coders
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder: int m_NumPrevBits
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder: int m_NumPosBits
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder: int m_PosMask
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder: com.badlogic.gdx.utils.compression.lzma.Encoder this$0
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder: Encoder$LiteralEncoder(com.badlogic.gdx.utils.compression.lzma.Encoder)
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder: void Create(int,int)
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder: void Init()
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder: com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2 GetSubCoder(int,byte)
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2: short[] m_Encoders
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2: com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder this$1
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2: Encoder$LiteralEncoder$Encoder2(com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder)
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2: void Init()
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2: void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte)
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2: void EncodeMatched(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte,byte)
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2: int GetPrice(boolean,byte,byte)
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: int State
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: boolean Prev1IsChar
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: boolean Prev2
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: int PosPrev2
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: int BackPrev2
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: int Price
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: int PosPrev
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: int BackPrev
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: int Backs0
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: int Backs1
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: int Backs2
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: int Backs3
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: com.badlogic.gdx.utils.compression.lzma.Encoder this$0
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: Encoder$Optimal(com.badlogic.gdx.utils.compression.lzma.Encoder)
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: void MakeAsChar()
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: void MakeAsShortRep()
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal: boolean IsShortRep()
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder: short[] Models
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder: int NumBitLevels
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder: BitTreeDecoder(int)
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder: void Init()
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder: int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder)
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder: int ReverseDecode(com.badlogic.gdx.utils.compression.rangecoder.Decoder)
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder: int ReverseDecode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Decoder,int)
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder: short[] Models
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder: int NumBitLevels
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder: BitTreeEncoder(int)
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder: void Init()
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder: void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int)
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder: void ReverseEncode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int)
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder: int GetPrice(int)
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder: int ReverseGetPrice(int)
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder: int ReverseGetPrice(short[],int,int,int)
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder: void ReverseEncode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int)
com.badlogic.gdx.utils.compression.rangecoder.Decoder
com.badlogic.gdx.utils.compression.rangecoder.Decoder: int kTopMask
com.badlogic.gdx.utils.compression.rangecoder.Decoder: int kNumBitModelTotalBits
com.badlogic.gdx.utils.compression.rangecoder.Decoder: int kBitModelTotal
com.badlogic.gdx.utils.compression.rangecoder.Decoder: int kNumMoveBits
com.badlogic.gdx.utils.compression.rangecoder.Decoder: int Range
com.badlogic.gdx.utils.compression.rangecoder.Decoder: int Code
com.badlogic.gdx.utils.compression.rangecoder.Decoder: java.io.InputStream Stream
com.badlogic.gdx.utils.compression.rangecoder.Decoder: Decoder()
com.badlogic.gdx.utils.compression.rangecoder.Decoder: void SetStream(java.io.InputStream)
com.badlogic.gdx.utils.compression.rangecoder.Decoder: void ReleaseStream()
com.badlogic.gdx.utils.compression.rangecoder.Decoder: void Init()
com.badlogic.gdx.utils.compression.rangecoder.Decoder: int DecodeDirectBits(int)
com.badlogic.gdx.utils.compression.rangecoder.Decoder: int DecodeBit(short[],int)
com.badlogic.gdx.utils.compression.rangecoder.Decoder: void InitBitModels(short[])
com.badlogic.gdx.utils.compression.rangecoder.Encoder
com.badlogic.gdx.utils.compression.rangecoder.Encoder: int kTopMask
com.badlogic.gdx.utils.compression.rangecoder.Encoder: int kNumBitModelTotalBits
com.badlogic.gdx.utils.compression.rangecoder.Encoder: int kBitModelTotal
com.badlogic.gdx.utils.compression.rangecoder.Encoder: int kNumMoveBits
com.badlogic.gdx.utils.compression.rangecoder.Encoder: java.io.OutputStream Stream
com.badlogic.gdx.utils.compression.rangecoder.Encoder: long Low
com.badlogic.gdx.utils.compression.rangecoder.Encoder: int Range
com.badlogic.gdx.utils.compression.rangecoder.Encoder: int _cacheSize
com.badlogic.gdx.utils.compression.rangecoder.Encoder: int _cache
com.badlogic.gdx.utils.compression.rangecoder.Encoder: long _position
com.badlogic.gdx.utils.compression.rangecoder.Encoder: int kNumMoveReducingBits
com.badlogic.gdx.utils.compression.rangecoder.Encoder: int kNumBitPriceShiftBits
com.badlogic.gdx.utils.compression.rangecoder.Encoder: int[] ProbPrices
com.badlogic.gdx.utils.compression.rangecoder.Encoder: Encoder()
com.badlogic.gdx.utils.compression.rangecoder.Encoder: void SetStream(java.io.OutputStream)
com.badlogic.gdx.utils.compression.rangecoder.Encoder: void ReleaseStream()
com.badlogic.gdx.utils.compression.rangecoder.Encoder: void Init()
com.badlogic.gdx.utils.compression.rangecoder.Encoder: void FlushData()
com.badlogic.gdx.utils.compression.rangecoder.Encoder: void FlushStream()
com.badlogic.gdx.utils.compression.rangecoder.Encoder: void ShiftLow()
com.badlogic.gdx.utils.compression.rangecoder.Encoder: void EncodeDirectBits(int,int)
com.badlogic.gdx.utils.compression.rangecoder.Encoder: long GetProcessedSizeAdd()
com.badlogic.gdx.utils.compression.rangecoder.Encoder: void InitBitModels(short[])
com.badlogic.gdx.utils.compression.rangecoder.Encoder: void Encode(short[],int,int)
com.badlogic.gdx.utils.compression.rangecoder.Encoder: int GetPrice(int,int)
com.badlogic.gdx.utils.compression.rangecoder.Encoder: int GetPrice0(int)
com.badlogic.gdx.utils.compression.rangecoder.Encoder: int GetPrice1(int)
com.badlogic.gdx.utils.compression.rangecoder.Encoder: void <clinit>()
com.badlogic.gdx.utils.reflect.ArrayReflection
com.badlogic.gdx.utils.reflect.ArrayReflection: ArrayReflection()
com.badlogic.gdx.utils.reflect.ArrayReflection: java.lang.Object newInstance(java.lang.Class,int)
com.badlogic.gdx.utils.reflect.ArrayReflection: int getLength(java.lang.Object)
com.badlogic.gdx.utils.reflect.ArrayReflection: java.lang.Object get(java.lang.Object,int)
com.badlogic.gdx.utils.reflect.ArrayReflection: void set(java.lang.Object,int,java.lang.Object)
com.badlogic.gdx.utils.reflect.ClassReflection
com.badlogic.gdx.utils.reflect.ClassReflection: ClassReflection()
com.badlogic.gdx.utils.reflect.ClassReflection: java.lang.Class forName(java.lang.String)
com.badlogic.gdx.utils.reflect.ClassReflection: java.lang.String getSimpleName(java.lang.Class)
com.badlogic.gdx.utils.reflect.ClassReflection: boolean isInstance(java.lang.Class,java.lang.Object)
com.badlogic.gdx.utils.reflect.ClassReflection: boolean isAssignableFrom(java.lang.Class,java.lang.Class)
com.badlogic.gdx.utils.reflect.ClassReflection: boolean isMemberClass(java.lang.Class)
com.badlogic.gdx.utils.reflect.ClassReflection: boolean isStaticClass(java.lang.Class)
com.badlogic.gdx.utils.reflect.ClassReflection: java.lang.Object newInstance(java.lang.Class)
com.badlogic.gdx.utils.reflect.ClassReflection: com.badlogic.gdx.utils.reflect.Constructor[] getConstructors(java.lang.Class)
com.badlogic.gdx.utils.reflect.ClassReflection: com.badlogic.gdx.utils.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[])
com.badlogic.gdx.utils.reflect.ClassReflection: com.badlogic.gdx.utils.reflect.Constructor getDeclaredConstructor(java.lang.Class,java.lang.Class[])
com.badlogic.gdx.utils.reflect.ClassReflection: com.badlogic.gdx.utils.reflect.Method[] getMethods(java.lang.Class)
com.badlogic.gdx.utils.reflect.ClassReflection: com.badlogic.gdx.utils.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[])
com.badlogic.gdx.utils.reflect.ClassReflection: com.badlogic.gdx.utils.reflect.Method[] getDeclaredMethods(java.lang.Class)
com.badlogic.gdx.utils.reflect.ClassReflection: com.badlogic.gdx.utils.reflect.Method getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class[])
com.badlogic.gdx.utils.reflect.ClassReflection: com.badlogic.gdx.utils.reflect.Field[] getFields(java.lang.Class)
com.badlogic.gdx.utils.reflect.ClassReflection: com.badlogic.gdx.utils.reflect.Field getField(java.lang.Class,java.lang.String)
com.badlogic.gdx.utils.reflect.ClassReflection: com.badlogic.gdx.utils.reflect.Field[] getDeclaredFields(java.lang.Class)
com.badlogic.gdx.utils.reflect.ClassReflection: com.badlogic.gdx.utils.reflect.Field getDeclaredField(java.lang.Class,java.lang.String)
com.badlogic.gdx.utils.reflect.Constructor
com.badlogic.gdx.utils.reflect.Constructor: java.lang.reflect.Constructor constructor
com.badlogic.gdx.utils.reflect.Constructor: Constructor(java.lang.reflect.Constructor)
com.badlogic.gdx.utils.reflect.Constructor: java.lang.Class[] getParameterTypes()
com.badlogic.gdx.utils.reflect.Constructor: java.lang.Class getDeclaringClass()
com.badlogic.gdx.utils.reflect.Constructor: boolean isAccessible()
com.badlogic.gdx.utils.reflect.Constructor: void setAccessible(boolean)
com.badlogic.gdx.utils.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])
com.badlogic.gdx.utils.reflect.Field
com.badlogic.gdx.utils.reflect.Field: java.lang.reflect.Field field
com.badlogic.gdx.utils.reflect.Field: Field(java.lang.reflect.Field)
com.badlogic.gdx.utils.reflect.Field: java.lang.String getName()
com.badlogic.gdx.utils.reflect.Field: java.lang.Class getType()
com.badlogic.gdx.utils.reflect.Field: java.lang.Class getDeclaringClass()
com.badlogic.gdx.utils.reflect.Field: boolean isAccessible()
com.badlogic.gdx.utils.reflect.Field: void setAccessible(boolean)
com.badlogic.gdx.utils.reflect.Field: boolean isDefaultAccess()
com.badlogic.gdx.utils.reflect.Field: boolean isFinal()
com.badlogic.gdx.utils.reflect.Field: boolean isPrivate()
com.badlogic.gdx.utils.reflect.Field: boolean isProtected()
com.badlogic.gdx.utils.reflect.Field: boolean isPublic()
com.badlogic.gdx.utils.reflect.Field: boolean isStatic()
com.badlogic.gdx.utils.reflect.Field: boolean isTransient()
com.badlogic.gdx.utils.reflect.Field: boolean isVolatile()
com.badlogic.gdx.utils.reflect.Field: boolean isSynthetic()
com.badlogic.gdx.utils.reflect.Field: java.lang.Class getElementType(int)
com.badlogic.gdx.utils.reflect.Field: java.lang.Object get(java.lang.Object)
com.badlogic.gdx.utils.reflect.Field: void set(java.lang.Object,java.lang.Object)
com.badlogic.gdx.utils.reflect.Method
com.badlogic.gdx.utils.reflect.Method: java.lang.reflect.Method method
com.badlogic.gdx.utils.reflect.Method: Method(java.lang.reflect.Method)
com.badlogic.gdx.utils.reflect.Method: java.lang.String getName()
com.badlogic.gdx.utils.reflect.Method: java.lang.Class getReturnType()
com.badlogic.gdx.utils.reflect.Method: java.lang.Class[] getParameterTypes()
com.badlogic.gdx.utils.reflect.Method: java.lang.Class getDeclaringClass()
com.badlogic.gdx.utils.reflect.Method: boolean isAccessible()
com.badlogic.gdx.utils.reflect.Method: void setAccessible(boolean)
com.badlogic.gdx.utils.reflect.Method: boolean isAbstract()
com.badlogic.gdx.utils.reflect.Method: boolean isDefaultAccess()
com.badlogic.gdx.utils.reflect.Method: boolean isFinal()
com.badlogic.gdx.utils.reflect.Method: boolean isPrivate()
com.badlogic.gdx.utils.reflect.Method: boolean isProtected()
com.badlogic.gdx.utils.reflect.Method: boolean isPublic()
com.badlogic.gdx.utils.reflect.Method: boolean isNative()
com.badlogic.gdx.utils.reflect.Method: boolean isStatic()
com.badlogic.gdx.utils.reflect.Method: boolean isVarArgs()
com.badlogic.gdx.utils.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])
com.badlogic.gdx.utils.reflect.ReflectionException
com.badlogic.gdx.utils.reflect.ReflectionException: ReflectionException()
com.badlogic.gdx.utils.reflect.ReflectionException: ReflectionException(java.lang.String)
com.badlogic.gdx.utils.reflect.ReflectionException: ReflectionException(java.lang.Throwable)
com.badlogic.gdx.utils.reflect.ReflectionException: ReflectionException(java.lang.String,java.lang.Throwable)
com.badlogic.gdx.utils.viewport.ExtendViewport
com.badlogic.gdx.utils.viewport.ExtendViewport: float minWorldWidth
com.badlogic.gdx.utils.viewport.ExtendViewport: float minWorldHeight
com.badlogic.gdx.utils.viewport.ExtendViewport: float maxWorldWidth
com.badlogic.gdx.utils.viewport.ExtendViewport: float maxWorldHeight
com.badlogic.gdx.utils.viewport.ExtendViewport: ExtendViewport(float,float)
com.badlogic.gdx.utils.viewport.ExtendViewport: ExtendViewport(float,float,com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.utils.viewport.ExtendViewport: ExtendViewport(float,float,float,float)
com.badlogic.gdx.utils.viewport.ExtendViewport: ExtendViewport(float,float,float,float,com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.utils.viewport.ExtendViewport: void update(int,int,boolean)
com.badlogic.gdx.utils.viewport.ExtendViewport: float getMinWorldWidth()
com.badlogic.gdx.utils.viewport.ExtendViewport: void setMinWorldWidth(float)
com.badlogic.gdx.utils.viewport.ExtendViewport: float getMinWorldHeight()
com.badlogic.gdx.utils.viewport.ExtendViewport: void setMinWorldHeight(float)
com.badlogic.gdx.utils.viewport.ExtendViewport: float getMaxWorldWidth()
com.badlogic.gdx.utils.viewport.ExtendViewport: void setMaxWorldWidth(float)
com.badlogic.gdx.utils.viewport.ExtendViewport: float getMaxWorldHeight()
com.badlogic.gdx.utils.viewport.ExtendViewport: void setMaxWorldHeight(float)
com.badlogic.gdx.utils.viewport.FillViewport
com.badlogic.gdx.utils.viewport.FillViewport: FillViewport(float,float)
com.badlogic.gdx.utils.viewport.FillViewport: FillViewport(float,float,com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.utils.viewport.FitViewport
com.badlogic.gdx.utils.viewport.FitViewport: FitViewport(float,float)
com.badlogic.gdx.utils.viewport.FitViewport: FitViewport(float,float,com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.utils.viewport.ScalingViewport
com.badlogic.gdx.utils.viewport.ScalingViewport: com.badlogic.gdx.utils.Scaling scaling
com.badlogic.gdx.utils.viewport.ScalingViewport: ScalingViewport(com.badlogic.gdx.utils.Scaling,float,float)
com.badlogic.gdx.utils.viewport.ScalingViewport: ScalingViewport(com.badlogic.gdx.utils.Scaling,float,float,com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.utils.viewport.ScalingViewport: void update(int,int,boolean)
com.badlogic.gdx.utils.viewport.ScalingViewport: com.badlogic.gdx.utils.Scaling getScaling()
com.badlogic.gdx.utils.viewport.ScalingViewport: void setScaling(com.badlogic.gdx.utils.Scaling)
com.badlogic.gdx.utils.viewport.ScreenViewport
com.badlogic.gdx.utils.viewport.ScreenViewport: float unitsPerPixel
com.badlogic.gdx.utils.viewport.ScreenViewport: ScreenViewport()
com.badlogic.gdx.utils.viewport.ScreenViewport: ScreenViewport(com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.utils.viewport.ScreenViewport: void update(int,int,boolean)
com.badlogic.gdx.utils.viewport.ScreenViewport: float getUnitsPerPixel()
com.badlogic.gdx.utils.viewport.ScreenViewport: void setUnitsPerPixel(float)
com.badlogic.gdx.utils.viewport.StretchViewport
com.badlogic.gdx.utils.viewport.StretchViewport: StretchViewport(float,float)
com.badlogic.gdx.utils.viewport.StretchViewport: StretchViewport(float,float,com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.utils.viewport.Viewport
com.badlogic.gdx.utils.viewport.Viewport: float worldWidth
com.badlogic.gdx.utils.viewport.Viewport: float worldHeight
com.badlogic.gdx.utils.viewport.Viewport: int viewportWidth
com.badlogic.gdx.utils.viewport.Viewport: int viewportHeight
com.badlogic.gdx.utils.viewport.Viewport: int viewportX
com.badlogic.gdx.utils.viewport.Viewport: int viewportY
com.badlogic.gdx.utils.viewport.Viewport: com.badlogic.gdx.graphics.Camera camera
com.badlogic.gdx.utils.viewport.Viewport: com.badlogic.gdx.math.Vector3 tmp
com.badlogic.gdx.utils.viewport.Viewport: Viewport()
com.badlogic.gdx.utils.viewport.Viewport: void update()
com.badlogic.gdx.utils.viewport.Viewport: void update(int,int)
com.badlogic.gdx.utils.viewport.Viewport: void update(int,int,boolean)
com.badlogic.gdx.utils.viewport.Viewport: com.badlogic.gdx.math.Vector2 unproject(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.utils.viewport.Viewport: com.badlogic.gdx.math.Vector2 project(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.utils.viewport.Viewport: com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.utils.viewport.Viewport: com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.utils.viewport.Viewport: com.badlogic.gdx.math.collision.Ray getPickRay(float,float)
com.badlogic.gdx.utils.viewport.Viewport: void calculateScissors(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.utils.viewport.Viewport: com.badlogic.gdx.math.Vector2 toScreenCoordinates(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.utils.viewport.Viewport: com.badlogic.gdx.graphics.Camera getCamera()
com.badlogic.gdx.utils.viewport.Viewport: void setCamera(com.badlogic.gdx.graphics.Camera)
com.badlogic.gdx.utils.viewport.Viewport: void setWorldSize(float,float)
com.badlogic.gdx.utils.viewport.Viewport: float getWorldWidth()
com.badlogic.gdx.utils.viewport.Viewport: void setWorldWidth(float)
com.badlogic.gdx.utils.viewport.Viewport: float getWorldHeight()
com.badlogic.gdx.utils.viewport.Viewport: void setWorldHeight(float)
com.badlogic.gdx.utils.viewport.Viewport: int getViewportX()
com.badlogic.gdx.utils.viewport.Viewport: int getViewportY()
com.badlogic.gdx.utils.viewport.Viewport: int getViewportWidth()
com.badlogic.gdx.utils.viewport.Viewport: int getViewportHeight()
com.badlogic.gdx.utils.viewport.Viewport: int getLeftGutterWidth()
com.badlogic.gdx.utils.viewport.Viewport: int getRightGutterX()
com.badlogic.gdx.utils.viewport.Viewport: int getRightGutterWidth()
com.badlogic.gdx.utils.viewport.Viewport: int getBottomGutterHeight()
com.badlogic.gdx.utils.viewport.Viewport: int getTopGutterY()
com.badlogic.gdx.utils.viewport.Viewport: int getTopGutterHeight()
com.google.ads.AdRequest$ErrorCode: com.google.ads.AdRequest$ErrorCode[] values()
com.google.ads.AdRequest$ErrorCode: com.google.ads.AdRequest$ErrorCode valueOf(java.lang.String)
com.google.ads.AdRequest$Gender: com.google.ads.AdRequest$Gender[] values()
com.google.ads.AdRequest$Gender: com.google.ads.AdRequest$Gender valueOf(java.lang.String)
com.google.android.gms.R$attr: int adSize
com.google.android.gms.R$attr: int adSizes
com.google.android.gms.R$attr: int adUnitId
com.google.android.gms.R$attr: int appTheme
com.google.android.gms.R$attr: int buyButtonAppearance
com.google.android.gms.R$attr: int buyButtonHeight
com.google.android.gms.R$attr: int buyButtonText
com.google.android.gms.R$attr: int buyButtonWidth
com.google.android.gms.R$attr: int cameraBearing
com.google.android.gms.R$attr: int cameraTargetLat
com.google.android.gms.R$attr: int cameraTargetLng
com.google.android.gms.R$attr: int cameraTilt
com.google.android.gms.R$attr: int cameraZoom
com.google.android.gms.R$attr: int circleCrop
com.google.android.gms.R$attr: int environment
com.google.android.gms.R$attr: int fragmentMode
com.google.android.gms.R$attr: int fragmentStyle
com.google.android.gms.R$attr: int imageAspectRatio
com.google.android.gms.R$attr: int imageAspectRatioAdjust
com.google.android.gms.R$attr: int liteMode
com.google.android.gms.R$attr: int mapType
com.google.android.gms.R$attr: int maskedWalletDetailsBackground
com.google.android.gms.R$attr: int maskedWalletDetailsButtonBackground
com.google.android.gms.R$attr: int maskedWalletDetailsButtonTextAppearance
com.google.android.gms.R$attr: int maskedWalletDetailsHeaderTextAppearance
com.google.android.gms.R$attr: int maskedWalletDetailsLogoImageType
com.google.android.gms.R$attr: int maskedWalletDetailsLogoTextColor
com.google.android.gms.R$attr: int maskedWalletDetailsTextAppearance
com.google.android.gms.R$attr: int uiCompass
com.google.android.gms.R$attr: int uiMapToolbar
com.google.android.gms.R$attr: int uiRotateGestures
com.google.android.gms.R$attr: int uiScrollGestures
com.google.android.gms.R$attr: int uiTiltGestures
com.google.android.gms.R$attr: int uiZoomControls
com.google.android.gms.R$attr: int uiZoomGestures
com.google.android.gms.R$attr: int useViewLifecycle
com.google.android.gms.R$attr: int zOrderOnTop
com.google.android.gms.R$color: int common_action_bar_splitter
com.google.android.gms.R$color: int common_signin_btn_dark_text_default
com.google.android.gms.R$color: int common_signin_btn_dark_text_disabled
com.google.android.gms.R$color: int common_signin_btn_dark_text_focused
com.google.android.gms.R$color: int common_signin_btn_dark_text_pressed
com.google.android.gms.R$color: int common_signin_btn_default_background
com.google.android.gms.R$color: int common_signin_btn_light_text_default
com.google.android.gms.R$color: int common_signin_btn_light_text_disabled
com.google.android.gms.R$color: int common_signin_btn_light_text_focused
com.google.android.gms.R$color: int common_signin_btn_light_text_pressed
com.google.android.gms.R$color: int common_signin_btn_text_dark
com.google.android.gms.R$color: int common_signin_btn_text_light
com.google.android.gms.R$color: int wallet_bright_foreground_disabled_holo_light
com.google.android.gms.R$color: int wallet_bright_foreground_holo_dark
com.google.android.gms.R$color: int wallet_bright_foreground_holo_light
com.google.android.gms.R$color: int wallet_dim_foreground_disabled_holo_dark
com.google.android.gms.R$color: int wallet_dim_foreground_holo_dark
com.google.android.gms.R$color: int wallet_dim_foreground_inverse_disabled_holo_dark
com.google.android.gms.R$color: int wallet_dim_foreground_inverse_holo_dark
com.google.android.gms.R$color: int wallet_highlighted_text_holo_dark
com.google.android.gms.R$color: int wallet_highlighted_text_holo_light
com.google.android.gms.R$color: int wallet_hint_foreground_holo_dark
com.google.android.gms.R$color: int wallet_hint_foreground_holo_light
com.google.android.gms.R$color: int wallet_holo_blue_light
com.google.android.gms.R$color: int wallet_link_text_light
com.google.android.gms.R$color: int wallet_primary_text_holo_light
com.google.android.gms.R$color: int wallet_secondary_text_holo_dark
com.google.android.gms.R$drawable: int common_full_open_on_phone
com.google.android.gms.R$drawable: int common_ic_googleplayservices
com.google.android.gms.R$drawable: int common_signin_btn_icon_dark
com.google.android.gms.R$drawable: int common_signin_btn_icon_disabled_dark
com.google.android.gms.R$drawable: int common_signin_btn_icon_disabled_focus_dark
com.google.android.gms.R$drawable: int common_signin_btn_icon_disabled_focus_light
com.google.android.gms.R$drawable: int common_signin_btn_icon_disabled_light
com.google.android.gms.R$drawable: int common_signin_btn_icon_focus_dark
com.google.android.gms.R$drawable: int common_signin_btn_icon_focus_light
com.google.android.gms.R$drawable: int common_signin_btn_icon_light
com.google.android.gms.R$drawable: int common_signin_btn_icon_normal_dark
com.google.android.gms.R$drawable: int common_signin_btn_icon_normal_light
com.google.android.gms.R$drawable: int common_signin_btn_icon_pressed_dark
com.google.android.gms.R$drawable: int common_signin_btn_icon_pressed_light
com.google.android.gms.R$drawable: int common_signin_btn_text_dark
com.google.android.gms.R$drawable: int common_signin_btn_text_disabled_dark
com.google.android.gms.R$drawable: int common_signin_btn_text_disabled_focus_dark
com.google.android.gms.R$drawable: int common_signin_btn_text_disabled_focus_light
com.google.android.gms.R$drawable: int common_signin_btn_text_disabled_light
com.google.android.gms.R$drawable: int common_signin_btn_text_focus_dark
com.google.android.gms.R$drawable: int common_signin_btn_text_focus_light
com.google.android.gms.R$drawable: int common_signin_btn_text_light
com.google.android.gms.R$drawable: int common_signin_btn_text_normal_dark
com.google.android.gms.R$drawable: int common_signin_btn_text_normal_light
com.google.android.gms.R$drawable: int common_signin_btn_text_pressed_dark
com.google.android.gms.R$drawable: int common_signin_btn_text_pressed_light
com.google.android.gms.R$drawable: int ic_plusone_medium_off_client
com.google.android.gms.R$drawable: int ic_plusone_small_off_client
com.google.android.gms.R$drawable: int ic_plusone_standard_off_client
com.google.android.gms.R$drawable: int ic_plusone_tall_off_client
com.google.android.gms.R$drawable: int powered_by_google_dark
com.google.android.gms.R$drawable: int powered_by_google_light
com.google.android.gms.R$id: int adjust_height
com.google.android.gms.R$id: int adjust_width
com.google.android.gms.R$id: int book_now
com.google.android.gms.R$id: int buyButton
com.google.android.gms.R$id: int buy_now
com.google.android.gms.R$id: int buy_with_google
com.google.android.gms.R$id: int classic
com.google.android.gms.R$id: int donate_with_google
com.google.android.gms.R$id: int grayscale
com.google.android.gms.R$id: int holo_dark
com.google.android.gms.R$id: int holo_light
com.google.android.gms.R$id: int hybrid
com.google.android.gms.R$id: int match_parent
com.google.android.gms.R$id: int monochrome
com.google.android.gms.R$id: int none
com.google.android.gms.R$id: int normal
com.google.android.gms.R$id: int production
com.google.android.gms.R$id: int sandbox
com.google.android.gms.R$id: int satellite
com.google.android.gms.R$id: int selectionDetails
com.google.android.gms.R$id: int strict_sandbox
com.google.android.gms.R$id: int terrain
com.google.android.gms.R$id: int wrap_content
com.google.android.gms.R$integer: int google_play_services_version
com.google.android.gms.R$raw: int gtm_analytics
com.google.android.gms.R$string: int accept
com.google.android.gms.R$string: int common_android_wear_notification_needs_update_text
com.google.android.gms.R$string: int common_android_wear_update_text
com.google.android.gms.R$string: int common_android_wear_update_title
com.google.android.gms.R$string: int common_google_play_services_enable_button
com.google.android.gms.R$string: int common_google_play_services_enable_text
com.google.android.gms.R$string: int common_google_play_services_enable_title
com.google.android.gms.R$string: int common_google_play_services_error_notification_requested_by_msg
com.google.android.gms.R$string: int common_google_play_services_install_button
com.google.android.gms.R$string: int common_google_play_services_install_text_phone
com.google.android.gms.R$string: int common_google_play_services_install_text_tablet
com.google.android.gms.R$string: int common_google_play_services_install_title
com.google.android.gms.R$string: int common_google_play_services_invalid_account_text
com.google.android.gms.R$string: int common_google_play_services_invalid_account_title
com.google.android.gms.R$string: int common_google_play_services_needs_enabling_title
com.google.android.gms.R$string: int common_google_play_services_network_error_text
com.google.android.gms.R$string: int common_google_play_services_network_error_title
com.google.android.gms.R$string: int common_google_play_services_notification_needs_installation_title
com.google.android.gms.R$string: int common_google_play_services_notification_needs_update_title
com.google.android.gms.R$string: int common_google_play_services_notification_ticker
com.google.android.gms.R$string: int common_google_play_services_unknown_issue
com.google.android.gms.R$string: int common_google_play_services_unsupported_text
com.google.android.gms.R$string: int common_google_play_services_unsupported_title
com.google.android.gms.R$string: int common_google_play_services_update_button
com.google.android.gms.R$string: int common_google_play_services_update_text
com.google.android.gms.R$string: int common_google_play_services_update_title
com.google.android.gms.R$string: int common_open_on_phone
com.google.android.gms.R$string: int common_signin_button_text
com.google.android.gms.R$string: int common_signin_button_text_long
com.google.android.gms.R$string: int create_calendar_message
com.google.android.gms.R$string: int create_calendar_title
com.google.android.gms.R$string: int decline
com.google.android.gms.R$string: int store_picture_message
com.google.android.gms.R$string: int store_picture_title
com.google.android.gms.R$string: int wallet_buy_button_place_holder
com.google.android.gms.R$style: int Theme_IAPTheme
com.google.android.gms.R$style: int WalletFragmentDefaultButtonTextAppearance
com.google.android.gms.R$style: int WalletFragmentDefaultDetailsHeaderTextAppearance
com.google.android.gms.R$style: int WalletFragmentDefaultDetailsTextAppearance
com.google.android.gms.R$style: int WalletFragmentDefaultStyle
com.google.android.gms.R$styleable: int[] AdsAttrs
com.google.android.gms.R$styleable: int AdsAttrs_adSize
com.google.android.gms.R$styleable: int AdsAttrs_adSizes
com.google.android.gms.R$styleable: int AdsAttrs_adUnitId
com.google.android.gms.R$styleable: int[] LoadingImageView
com.google.android.gms.R$styleable: int LoadingImageView_circleCrop
com.google.android.gms.R$styleable: int LoadingImageView_imageAspectRatio
com.google.android.gms.R$styleable: int LoadingImageView_imageAspectRatioAdjust
com.google.android.gms.R$styleable: int[] MapAttrs
com.google.android.gms.R$styleable: int MapAttrs_cameraBearing
com.google.android.gms.R$styleable: int MapAttrs_cameraTargetLat
com.google.android.gms.R$styleable: int MapAttrs_cameraTargetLng
com.google.android.gms.R$styleable: int MapAttrs_cameraTilt
com.google.android.gms.R$styleable: int MapAttrs_cameraZoom
com.google.android.gms.R$styleable: int MapAttrs_liteMode
com.google.android.gms.R$styleable: int MapAttrs_mapType
com.google.android.gms.R$styleable: int MapAttrs_uiCompass
com.google.android.gms.R$styleable: int MapAttrs_uiMapToolbar
com.google.android.gms.R$styleable: int MapAttrs_uiRotateGestures
com.google.android.gms.R$styleable: int MapAttrs_uiScrollGestures
com.google.android.gms.R$styleable: int MapAttrs_uiTiltGestures
com.google.android.gms.R$styleable: int MapAttrs_uiZoomControls
com.google.android.gms.R$styleable: int MapAttrs_uiZoomGestures
com.google.android.gms.R$styleable: int MapAttrs_useViewLifecycle
com.google.android.gms.R$styleable: int MapAttrs_zOrderOnTop
com.google.android.gms.R$styleable: int[] WalletFragmentOptions
com.google.android.gms.R$styleable: int WalletFragmentOptions_appTheme
com.google.android.gms.R$styleable: int WalletFragmentOptions_environment
com.google.android.gms.R$styleable: int WalletFragmentOptions_fragmentMode
com.google.android.gms.R$styleable: int WalletFragmentOptions_fragmentStyle
com.google.android.gms.R$styleable: int[] WalletFragmentStyle
com.google.android.gms.R$styleable: int WalletFragmentStyle_buyButtonAppearance
com.google.android.gms.R$styleable: int WalletFragmentStyle_buyButtonHeight
com.google.android.gms.R$styleable: int WalletFragmentStyle_buyButtonText
com.google.android.gms.R$styleable: int WalletFragmentStyle_buyButtonWidth
com.google.android.gms.R$styleable: int WalletFragmentStyle_maskedWalletDetailsBackground
com.google.android.gms.R$styleable: int WalletFragmentStyle_maskedWalletDetailsButtonBackground
com.google.android.gms.R$styleable: int WalletFragmentStyle_maskedWalletDetailsButtonTextAppearance
com.google.android.gms.R$styleable: int WalletFragmentStyle_maskedWalletDetailsHeaderTextAppearance
com.google.android.gms.R$styleable: int WalletFragmentStyle_maskedWalletDetailsLogoImageType
com.google.android.gms.R$styleable: int WalletFragmentStyle_maskedWalletDetailsLogoTextColor
com.google.android.gms.R$styleable: int WalletFragmentStyle_maskedWalletDetailsTextAppearance
com.google.android.gms.ads.AdActivity
com.google.android.gms.ads.AdActivity: AdActivity()
com.google.android.gms.ads.AdActivity: void setContentView(android.view.View)
com.google.android.gms.ads.AdView
com.google.android.gms.ads.AdView: AdView(android.content.Context)
com.google.android.gms.ads.AdView: AdView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.ads.AdView: AdView(android.content.Context,android.util.AttributeSet,int)
com.google.android.gms.ads.AdView: com.google.android.gms.ads.AdListener getAdListener()
com.google.android.gms.ads.AdView: com.google.android.gms.ads.AdSize getAdSize()
com.google.android.gms.ads.AdView: java.lang.String getAdUnitId()
com.google.android.gms.ads.AdView: com.google.android.gms.ads.purchase.InAppPurchaseListener getInAppPurchaseListener()
com.google.android.gms.ads.AdView: void setAdListener(com.google.android.gms.ads.AdListener)
com.google.android.gms.ads.AdView: void setAdSize(com.google.android.gms.ads.AdSize)
com.google.android.gms.ads.AdView: void setAdUnitId(java.lang.String)
com.google.android.gms.ads.AdView: void setInAppPurchaseListener(com.google.android.gms.ads.purchase.InAppPurchaseListener)
com.google.android.gms.ads.AdView: java.lang.String getMediationAdapterClassName()
com.google.android.gms.ads.doubleclick.PublisherAdView: com.google.android.gms.ads.AdListener getAdListener()
com.google.android.gms.ads.doubleclick.PublisherAdView: com.google.android.gms.ads.AdSize getAdSize()
com.google.android.gms.ads.doubleclick.PublisherAdView: com.google.android.gms.ads.AdSize[] getAdSizes()
com.google.android.gms.ads.doubleclick.PublisherAdView: java.lang.String getAdUnitId()
com.google.android.gms.ads.doubleclick.PublisherAdView: com.google.android.gms.ads.doubleclick.AppEventListener getAppEventListener()
com.google.android.gms.ads.doubleclick.PublisherAdView: void setAdListener(com.google.android.gms.ads.AdListener)
com.google.android.gms.ads.doubleclick.PublisherAdView: void setAdSizes(com.google.android.gms.ads.AdSize[])
com.google.android.gms.ads.doubleclick.PublisherAdView: void setAdUnitId(java.lang.String)
com.google.android.gms.ads.doubleclick.PublisherAdView: void setAppEventListener(com.google.android.gms.ads.doubleclick.AppEventListener)
com.google.android.gms.ads.doubleclick.PublisherAdView: java.lang.String getMediationAdapterClassName()
com.google.android.gms.ads.search.SearchAdView: com.google.android.gms.ads.AdListener getAdListener()
com.google.android.gms.ads.search.SearchAdView: com.google.android.gms.ads.AdSize getAdSize()
com.google.android.gms.ads.search.SearchAdView: java.lang.String getAdUnitId()
com.google.android.gms.ads.search.SearchAdView: void setAdListener(com.google.android.gms.ads.AdListener)
com.google.android.gms.ads.search.SearchAdView: void setAdSize(com.google.android.gms.ads.AdSize)
com.google.android.gms.ads.search.SearchAdView: void setAdUnitId(java.lang.String)
com.google.android.gms.analytics.i: com.google.android.gms.analytics.i[] values()
com.google.android.gms.analytics.i: com.google.android.gms.analytics.i valueOf(java.lang.String)
com.google.android.gms.analytics.l: com.google.android.gms.analytics.l[] values()
com.google.android.gms.analytics.l: com.google.android.gms.analytics.l valueOf(java.lang.String)
com.google.android.gms.analytics.w$a: com.google.android.gms.analytics.w$a[] values()
com.google.android.gms.analytics.w$a: com.google.android.gms.analytics.w$a valueOf(java.lang.String)
com.google.android.gms.analytics.y$a: com.google.android.gms.analytics.y$a[] values()
com.google.android.gms.analytics.y$a: com.google.android.gms.analytics.y$a valueOf(java.lang.String)
com.google.android.gms.auth.AccountChangeEvent
com.google.android.gms.auth.AccountChangeEventsRequest
com.google.android.gms.auth.AccountChangeEventsResponse
com.google.android.gms.cast.ApplicationMetadata
com.google.android.gms.cast.ApplicationMetadata: android.os.Parcelable$Creator CREATOR
com.google.android.gms.cast.CastDevice
com.google.android.gms.cast.CastDevice: android.os.Parcelable$Creator CREATOR
com.google.android.gms.cast.LaunchOptions
com.google.android.gms.cast.LaunchOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.SignInButton: void setSize(int)
com.google.android.gms.common.SignInButton: void setColorScheme(int)
com.google.android.gms.common.SignInButton: void setOnClickListener(android.view.View$OnClickListener)
com.google.android.gms.common.SignInButton: void setEnabled(boolean)
com.google.android.gms.common.api.Scope
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.api.Status
com.google.android.gms.common.data.DataHolder
com.google.android.gms.common.data.a
com.google.android.gms.common.data.a: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.images.ImageManager$ImageReceiver
com.google.android.gms.common.images.WebImage
com.google.android.gms.common.images.WebImage: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.safeparcel.SafeParcelable
com.google.android.gms.drive.Contents
com.google.android.gms.drive.Contents: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.DriveId
com.google.android.gms.drive.DriveId: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.DrivePreferences
com.google.android.gms.drive.DrivePreferences: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.RealtimeDocumentSyncRequest
com.google.android.gms.drive.RealtimeDocumentSyncRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.StorageStats
com.google.android.gms.drive.StorageStats: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.UserMetadata
com.google.android.gms.drive.UserMetadata: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.events.ChangeEvent
com.google.android.gms.drive.events.ChangeEvent: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.events.CompletionEvent
com.google.android.gms.drive.events.CompletionEvent: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.events.DriveEvent
com.google.android.gms.drive.events.ResourceEvent
com.google.android.gms.drive.i
com.google.android.gms.drive.internal.AddEventListenerRequest
com.google.android.gms.drive.internal.AddEventListenerRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.AuthorizeAccessRequest
com.google.android.gms.drive.internal.AuthorizeAccessRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.CancelPendingActionsRequest
com.google.android.gms.drive.internal.CancelPendingActionsRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.CheckResourceIdsExistRequest
com.google.android.gms.drive.internal.CheckResourceIdsExistRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.CloseContentsAndUpdateMetadataRequest
com.google.android.gms.drive.internal.CloseContentsAndUpdateMetadataRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.CloseContentsRequest
com.google.android.gms.drive.internal.CloseContentsRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.CreateContentsRequest
com.google.android.gms.drive.internal.CreateContentsRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.CreateFileIntentSenderRequest
com.google.android.gms.drive.internal.CreateFileIntentSenderRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.CreateFileRequest
com.google.android.gms.drive.internal.CreateFileRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.CreateFolderRequest
com.google.android.gms.drive.internal.CreateFolderRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.DeleteResourceRequest
com.google.android.gms.drive.internal.DeleteResourceRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.DisconnectRequest
com.google.android.gms.drive.internal.DisconnectRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.FileUploadPreferencesImpl
com.google.android.gms.drive.internal.FileUploadPreferencesImpl: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.GetDriveIdFromUniqueIdentifierRequest
com.google.android.gms.drive.internal.GetDriveIdFromUniqueIdentifierRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.GetMetadataRequest
com.google.android.gms.drive.internal.GetMetadataRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.ListParentsRequest
com.google.android.gms.drive.internal.ListParentsRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.LoadRealtimeRequest
com.google.android.gms.drive.internal.LoadRealtimeRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.OnContentsResponse
com.google.android.gms.drive.internal.OnContentsResponse: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.OnDeviceUsagePreferenceResponse
com.google.android.gms.drive.internal.OnDeviceUsagePreferenceResponse: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.OnDownloadProgressResponse
com.google.android.gms.drive.internal.OnDownloadProgressResponse: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.OnDriveIdResponse
com.google.android.gms.drive.internal.OnDriveIdResponse: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.OnDrivePreferencesResponse
com.google.android.gms.drive.internal.OnDrivePreferencesResponse: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.OnEventResponse
com.google.android.gms.drive.internal.OnEventResponse: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.OnListEntriesResponse
com.google.android.gms.drive.internal.OnListEntriesResponse: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.OnListParentsResponse
com.google.android.gms.drive.internal.OnListParentsResponse: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.OnLoadRealtimeResponse
com.google.android.gms.drive.internal.OnLoadRealtimeResponse: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.OnMetadataResponse
com.google.android.gms.drive.internal.OnMetadataResponse: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.OnResourceIdSetResponse
com.google.android.gms.drive.internal.OnResourceIdSetResponse: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.OnStorageStatsResponse
com.google.android.gms.drive.internal.OnStorageStatsResponse: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.OnSyncMoreResponse
com.google.android.gms.drive.internal.OnSyncMoreResponse: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.OpenContentsRequest
com.google.android.gms.drive.internal.OpenContentsRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.OpenFileIntentSenderRequest
com.google.android.gms.drive.internal.OpenFileIntentSenderRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.QueryRequest
com.google.android.gms.drive.internal.QueryRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.RemoveEventListenerRequest
com.google.android.gms.drive.internal.RemoveEventListenerRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.SetDrivePreferencesRequest
com.google.android.gms.drive.internal.SetDrivePreferencesRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.SetFileUploadPreferencesRequest
com.google.android.gms.drive.internal.SetFileUploadPreferencesRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.SetResourceParentsRequest
com.google.android.gms.drive.internal.SetResourceParentsRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.TrashResourceRequest
com.google.android.gms.drive.internal.TrashResourceRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.internal.UpdateMetadataRequest
com.google.android.gms.drive.internal.UpdateMetadataRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.metadata.CustomPropertyKey
com.google.android.gms.drive.metadata.CustomPropertyKey: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.metadata.internal.AppVisibleCustomProperties
com.google.android.gms.drive.metadata.internal.AppVisibleCustomProperties: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.metadata.internal.CustomProperty
com.google.android.gms.drive.metadata.internal.CustomProperty: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.metadata.internal.MetadataBundle
com.google.android.gms.drive.metadata.internal.MetadataBundle: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.query.Filter
com.google.android.gms.drive.query.Query
com.google.android.gms.drive.query.Query: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.query.SortOrder
com.google.android.gms.drive.query.SortOrder: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.query.internal.AbstractFilter
com.google.android.gms.drive.query.internal.ComparisonFilter
com.google.android.gms.drive.query.internal.FieldOnlyFilter
com.google.android.gms.drive.query.internal.FieldOnlyFilter: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.query.internal.FieldWithSortOrder
com.google.android.gms.drive.query.internal.FilterHolder
com.google.android.gms.drive.query.internal.FilterHolder: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.query.internal.HasFilter
com.google.android.gms.drive.query.internal.InFilter
com.google.android.gms.drive.query.internal.LogicalFilter
com.google.android.gms.drive.query.internal.LogicalFilter: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.query.internal.MatchAllFilter
com.google.android.gms.drive.query.internal.NotFilter
com.google.android.gms.drive.query.internal.NotFilter: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.query.internal.Operator
com.google.android.gms.drive.query.internal.Operator: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.realtime.internal.BeginCompoundOperationRequest
com.google.android.gms.drive.realtime.internal.BeginCompoundOperationRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.realtime.internal.EndCompoundOperationRequest
com.google.android.gms.drive.realtime.internal.EndCompoundOperationRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.realtime.internal.ParcelableCollaborator
com.google.android.gms.drive.realtime.internal.ParcelableCollaborator: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.realtime.internal.ParcelableIndexReference
com.google.android.gms.drive.realtime.internal.ParcelableIndexReference: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.realtime.internal.event.ObjectChangedDetails
com.google.android.gms.drive.realtime.internal.event.ObjectChangedDetails: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.realtime.internal.event.ParcelableEvent
com.google.android.gms.drive.realtime.internal.event.ParcelableEvent: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.realtime.internal.event.ParcelableEventList
com.google.android.gms.drive.realtime.internal.event.ParcelableEventList: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.realtime.internal.event.ReferenceShiftedDetails
com.google.android.gms.drive.realtime.internal.event.ReferenceShiftedDetails: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.realtime.internal.event.TextDeletedDetails
com.google.android.gms.drive.realtime.internal.event.TextDeletedDetails: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.realtime.internal.event.TextInsertedDetails
com.google.android.gms.drive.realtime.internal.event.TextInsertedDetails: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.realtime.internal.event.ValueChangedDetails
com.google.android.gms.drive.realtime.internal.event.ValueChangedDetails: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.realtime.internal.event.ValuesAddedDetails
com.google.android.gms.drive.realtime.internal.event.ValuesAddedDetails: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.realtime.internal.event.ValuesRemovedDetails
com.google.android.gms.drive.realtime.internal.event.ValuesRemovedDetails: android.os.Parcelable$Creator CREATOR
com.google.android.gms.drive.realtime.internal.event.ValuesSetDetails
com.google.android.gms.drive.realtime.internal.event.ValuesSetDetails: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.BleDevice
com.google.android.gms.fitness.data.BleDevice: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.Bucket
com.google.android.gms.fitness.data.Bucket: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.DataPoint
com.google.android.gms.fitness.data.DataPoint: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.DataSet
com.google.android.gms.fitness.data.DataSet: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.DataSource
com.google.android.gms.fitness.data.DataSource: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.DataType
com.google.android.gms.fitness.data.DataType: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.Device
com.google.android.gms.fitness.data.Device: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.Field
com.google.android.gms.fitness.data.Field: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.RawBucket
com.google.android.gms.fitness.data.RawBucket: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.RawDataPoint
com.google.android.gms.fitness.data.RawDataPoint: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.RawDataSet
com.google.android.gms.fitness.data.RawDataSet: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.Session
com.google.android.gms.fitness.data.Session: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.Subscription
com.google.android.gms.fitness.data.Subscription: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.Value
com.google.android.gms.fitness.data.Value: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.a
com.google.android.gms.fitness.data.a: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.data.q
com.google.android.gms.fitness.data.q: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.DataDeleteRequest
com.google.android.gms.fitness.request.DataDeleteRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.DataReadRequest
com.google.android.gms.fitness.request.DataReadRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.DataSourcesRequest
com.google.android.gms.fitness.request.DataSourcesRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.DataTypeCreateRequest
com.google.android.gms.fitness.request.DataTypeCreateRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.SessionInsertRequest
com.google.android.gms.fitness.request.SessionInsertRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.SessionReadRequest
com.google.android.gms.fitness.request.SessionReadRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.StartBleScanRequest
com.google.android.gms.fitness.request.StartBleScanRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.aa
com.google.android.gms.fitness.request.aa: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.ad
com.google.android.gms.fitness.request.ad: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.af
com.google.android.gms.fitness.request.af: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.ah
com.google.android.gms.fitness.request.ah: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.aj
com.google.android.gms.fitness.request.aj: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.b
com.google.android.gms.fitness.request.b: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.e
com.google.android.gms.fitness.request.e: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.j
com.google.android.gms.fitness.request.j: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.m
com.google.android.gms.fitness.request.m: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.o
com.google.android.gms.fitness.request.o: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.q
com.google.android.gms.fitness.request.q: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.u
com.google.android.gms.fitness.request.u: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.w
com.google.android.gms.fitness.request.w: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.request.y
com.google.android.gms.fitness.request.y: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.result.BleDevicesResult
com.google.android.gms.fitness.result.BleDevicesResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.result.DataReadResult
com.google.android.gms.fitness.result.DataReadResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.result.DataSourcesResult
com.google.android.gms.fitness.result.DataSourcesResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.result.DataTypeResult
com.google.android.gms.fitness.result.DataTypeResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.result.ListSubscriptionsResult
com.google.android.gms.fitness.result.ListSubscriptionsResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.result.SessionReadResult
com.google.android.gms.fitness.result.SessionReadResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.result.SessionStopResult
com.google.android.gms.fitness.result.SessionStopResult: android.os.Parcelable$Creator CREATOR
com.google.android.gms.fitness.service.FitnessSensorServiceRequest
com.google.android.gms.fitness.service.FitnessSensorServiceRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.games.Game
com.google.android.gms.games.GameEntity
com.google.android.gms.games.GameEntity: android.os.Parcelable$Creator CREATOR
com.google.android.gms.games.GameRef
com.google.android.gms.games.Player
com.google.android.gms.games.PlayerEntity
com.google.android.gms.games.PlayerEntity: android.os.Parcelable$Creator CREATOR
com.google.android.gms.games.PlayerLevel
com.google.android.gms.games.PlayerLevelInfo
com.google.android.gms.games.PlayerRef
com.google.android.gms.games.achievement.Achievement
com.google.android.gms.games.achievement.AchievementEntity
com.google.android.gms.games.achievement.AchievementRef
com.google.android.gms.games.appcontent.AppContentAction
com.google.android.gms.games.appcontent.AppContentActionEntity
com.google.android.gms.games.appcontent.AppContentActionRef
com.google.android.gms.games.appcontent.AppContentAnnotation
com.google.android.gms.games.appcontent.AppContentAnnotationEntity
com.google.android.gms.games.appcontent.AppContentAnnotationRef
com.google.android.gms.games.appcontent.AppContentCard
com.google.android.gms.games.appcontent.AppContentCardEntity
com.google.android.gms.games.appcontent.AppContentCardRef
com.google.android.gms.games.appcontent.AppContentCondition
com.google.android.gms.games.appcontent.AppContentConditionEntity
com.google.android.gms.games.appcontent.AppContentConditionRef
com.google.android.gms.games.appcontent.AppContentSection
com.google.android.gms.games.appcontent.AppContentSectionEntity
com.google.android.gms.games.appcontent.AppContentSectionRef
com.google.android.gms.games.appcontent.AppContentTuple
com.google.android.gms.games.appcontent.AppContentTupleEntity
com.google.android.gms.games.appcontent.AppContentTupleRef
com.google.android.gms.games.event.Event
com.google.android.gms.games.event.EventEntity
com.google.android.gms.games.event.EventRef
com.google.android.gms.games.internal.ConnectionInfo
com.google.android.gms.games.internal.GamesDowngradeableSafeParcel
com.google.android.gms.games.internal.game.ExtendedGame
com.google.android.gms.games.internal.game.ExtendedGameEntity
com.google.android.gms.games.internal.game.ExtendedGameRef
com.google.android.gms.games.internal.game.GameBadge
com.google.android.gms.games.internal.game.GameBadgeEntity
com.google.android.gms.games.internal.game.GameBadgeRef
com.google.android.gms.games.internal.multiplayer.ZInvitationCluster
com.google.android.gms.games.internal.player.MostRecentGameInfo
com.google.android.gms.games.internal.player.MostRecentGameInfoEntity
com.google.android.gms.games.internal.player.MostRecentGameInfoRef
com.google.android.gms.games.internal.request.GameRequestCluster
com.google.android.gms.games.multiplayer.Invitation
com.google.android.gms.games.multiplayer.InvitationEntity
com.google.android.gms.games.multiplayer.InvitationEntity: android.os.Parcelable$Creator CREATOR
com.google.android.gms.games.multiplayer.InvitationRef
com.google.android.gms.games.multiplayer.Participant
com.google.android.gms.games.multiplayer.ParticipantEntity
com.google.android.gms.games.multiplayer.ParticipantEntity: android.os.Parcelable$Creator CREATOR
com.google.android.gms.games.multiplayer.ParticipantRef
com.google.android.gms.games.multiplayer.ParticipantResult
com.google.android.gms.games.multiplayer.realtime.RealTimeMessage
com.google.android.gms.games.multiplayer.realtime.RealTimeMessage: android.os.Parcelable$Creator CREATOR
com.google.android.gms.games.multiplayer.realtime.Room
com.google.android.gms.games.multiplayer.realtime.RoomEntity
com.google.android.gms.games.multiplayer.realtime.RoomEntity: android.os.Parcelable$Creator CREATOR
com.google.android.gms.games.multiplayer.realtime.RoomRef
com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch
com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchEntity
com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchRef
com.google.android.gms.games.quest.Milestone
com.google.android.gms.games.quest.MilestoneEntity
com.google.android.gms.games.quest.MilestoneRef
com.google.android.gms.games.quest.Quest
com.google.android.gms.games.quest.QuestEntity
com.google.android.gms.games.quest.QuestRef
com.google.android.gms.games.request.GameRequest
com.google.android.gms.games.request.GameRequestEntity
com.google.android.gms.games.request.GameRequestRef
com.google.android.gms.games.snapshot.Snapshot
com.google.android.gms.games.snapshot.SnapshotContents
com.google.android.gms.games.snapshot.SnapshotContentsEntity
com.google.android.gms.games.snapshot.SnapshotEntity
com.google.android.gms.games.snapshot.SnapshotMetadata
com.google.android.gms.games.snapshot.SnapshotMetadataChangeEntity
com.google.android.gms.games.snapshot.SnapshotMetadataEntity
com.google.android.gms.games.snapshot.SnapshotMetadataRef
com.google.android.gms.identity.intents.UserAddressRequest
com.google.android.gms.identity.intents.UserAddressRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.identity.intents.model.CountrySpecification
com.google.android.gms.identity.intents.model.CountrySpecification: android.os.Parcelable$Creator CREATOR
com.google.android.gms.identity.intents.model.UserAddress
com.google.android.gms.identity.intents.model.UserAddress: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.a: com.google.android.gms.internal.a[] values()
com.google.android.gms.internal.a: com.google.android.gms.internal.a valueOf(java.lang.String)
com.google.android.gms.internal.av
com.google.android.gms.internal.ay
com.google.android.gms.internal.b: com.google.android.gms.internal.b[] values()
com.google.android.gms.internal.b: com.google.android.gms.internal.b valueOf(java.lang.String)
com.google.android.gms.internal.bj
com.google.android.gms.internal.do
com.google.android.gms.internal.dr
com.google.android.gms.internal.ea
com.google.android.gms.internal.fh
com.google.android.gms.internal.fj
com.google.android.gms.internal.gs
com.google.android.gms.internal.gu: void setContext(android.content.Context)
com.google.android.gms.internal.ha
com.google.android.gms.internal.ha: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.hd
com.google.android.gms.internal.hf
com.google.android.gms.internal.hh
com.google.android.gms.internal.hj
com.google.android.gms.internal.hl$a
com.google.android.gms.internal.hl$b
com.google.android.gms.internal.hp
com.google.android.gms.internal.hr
com.google.android.gms.internal.if
com.google.android.gms.internal.ii: com.google.android.gms.internal.ii[] values()
com.google.android.gms.internal.ii: com.google.android.gms.internal.ii valueOf(java.lang.String)
com.google.android.gms.internal.ij
com.google.android.gms.internal.ij: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.io
com.google.android.gms.internal.io: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.jg$a
com.google.android.gms.internal.ji
com.google.android.gms.internal.jj
com.google.android.gms.internal.jj: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.kk
com.google.android.gms.internal.km
com.google.android.gms.internal.ko
com.google.android.gms.internal.ko$a
com.google.android.gms.internal.kr$a
com.google.android.gms.internal.ks
com.google.android.gms.internal.kv
com.google.android.gms.internal.kv$a
com.google.android.gms.internal.kv$b
com.google.android.gms.internal.ky
com.google.android.gms.internal.mq
com.google.android.gms.internal.mq: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.ms
com.google.android.gms.internal.ms: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.nd
com.google.android.gms.internal.nl
com.google.android.gms.internal.nn
com.google.android.gms.internal.nq
com.google.android.gms.internal.ns
com.google.android.gms.internal.nu
com.google.android.gms.internal.nw
com.google.android.gms.internal.ny
com.google.android.gms.internal.oa
com.google.android.gms.internal.oc
com.google.android.gms.internal.oc: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.oe
com.google.android.gms.internal.oh
com.google.android.gms.internal.or
com.google.android.gms.internal.ov
com.google.android.gms.internal.pd
com.google.android.gms.internal.pf
com.google.android.gms.internal.pi
com.google.android.gms.internal.pi$a
com.google.android.gms.internal.pi$b
com.google.android.gms.internal.pi$b$a
com.google.android.gms.internal.pi$b$b
com.google.android.gms.internal.pi$c
com.google.android.gms.internal.pi$d
com.google.android.gms.internal.pi$f
com.google.android.gms.internal.pi$g
com.google.android.gms.internal.pi$h
com.google.android.gms.internal.pw
com.google.android.gms.internal.pw: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.py
com.google.android.gms.internal.py: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.y
com.google.android.gms.location.ActivityRecognitionResult
com.google.android.gms.location.DetectedActivity
com.google.android.gms.location.GeofencingRequest
com.google.android.gms.location.GeofencingRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.location.LocationRequest
com.google.android.gms.location.e
com.google.android.gms.maps.GoogleMapOptions
com.google.android.gms.maps.MapView: com.google.android.gms.maps.GoogleMap getMap()
com.google.android.gms.maps.StreetViewPanoramaOptions
com.google.android.gms.maps.StreetViewPanoramaView: com.google.android.gms.maps.StreetViewPanorama getStreetViewPanorama()
com.google.android.gms.maps.internal.y
com.google.android.gms.maps.model.CameraPosition
com.google.android.gms.maps.model.CircleOptions
com.google.android.gms.maps.model.GroundOverlayOptions
com.google.android.gms.maps.model.LatLng
com.google.android.gms.maps.model.LatLngBounds
com.google.android.gms.maps.model.MarkerOptions
com.google.android.gms.maps.model.PolygonOptions
com.google.android.gms.maps.model.PolylineOptions
com.google.android.gms.maps.model.StreetViewPanoramaCamera
com.google.android.gms.maps.model.StreetViewPanoramaLink
com.google.android.gms.maps.model.StreetViewPanoramaLocation
com.google.android.gms.maps.model.StreetViewPanoramaOrientation
com.google.android.gms.maps.model.Tile
com.google.android.gms.maps.model.TileOverlayOptions
com.google.android.gms.maps.model.VisibleRegion
com.google.android.gms.maps.model.internal.a
com.google.android.gms.maps.model.internal.c
com.google.android.gms.maps.model.internal.e
com.google.android.gms.maps.model.internal.p
com.google.android.gms.plus.PlusOneButton: void setOnPlusOneClickListener(com.google.android.gms.plus.PlusOneButton$OnPlusOneClickListener)
com.google.android.gms.plus.PlusOneButton: void setAnnotation(int)
com.google.android.gms.plus.PlusOneButton: void setSize(int)
com.google.android.gms.plus.internal.PlusCommonExtras
com.google.android.gms.plus.internal.h
com.google.android.gms.tagmanager.az$a: com.google.android.gms.tagmanager.az$a[] values()
com.google.android.gms.tagmanager.az$a: com.google.android.gms.tagmanager.az$a valueOf(java.lang.String)
com.google.android.gms.tagmanager.bg$a: com.google.android.gms.tagmanager.bg$a[] values()
com.google.android.gms.tagmanager.bg$a: com.google.android.gms.tagmanager.bg$a valueOf(java.lang.String)
com.google.android.gms.tagmanager.ce$a: com.google.android.gms.tagmanager.ce$a[] values()
com.google.android.gms.tagmanager.ce$a: com.google.android.gms.tagmanager.ce$a valueOf(java.lang.String)
com.google.android.gms.wallet.Address
com.google.android.gms.wallet.Address: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.Cart
com.google.android.gms.wallet.Cart: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.CountrySpecification
com.google.android.gms.wallet.CountrySpecification: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.FullWallet
com.google.android.gms.wallet.FullWallet: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.FullWalletRequest
com.google.android.gms.wallet.FullWalletRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.InstrumentInfo
com.google.android.gms.wallet.InstrumentInfo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.LineItem
com.google.android.gms.wallet.LineItem: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.LoyaltyWalletObject
com.google.android.gms.wallet.LoyaltyWalletObject: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.MaskedWallet
com.google.android.gms.wallet.MaskedWallet: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.MaskedWalletRequest
com.google.android.gms.wallet.MaskedWalletRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.NotifyTransactionStatusRequest
com.google.android.gms.wallet.NotifyTransactionStatusRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.OfferWalletObject
com.google.android.gms.wallet.OfferWalletObject: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.ProxyCard
com.google.android.gms.wallet.ProxyCard: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.d
com.google.android.gms.wallet.d: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.fragment.WalletFragmentInitParams
com.google.android.gms.wallet.fragment.WalletFragmentInitParams: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.fragment.WalletFragmentOptions
com.google.android.gms.wallet.fragment.WalletFragmentOptions: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.fragment.WalletFragmentStyle
com.google.android.gms.wallet.fragment.WalletFragmentStyle: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.wobs.CommonWalletObject
com.google.android.gms.wallet.wobs.CommonWalletObject: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.wobs.b
com.google.android.gms.wallet.wobs.b: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.wobs.d
com.google.android.gms.wallet.wobs.d: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.wobs.f
com.google.android.gms.wallet.wobs.f: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.wobs.g
com.google.android.gms.wallet.wobs.g: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.wobs.j
com.google.android.gms.wallet.wobs.j: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.wobs.l
com.google.android.gms.wallet.wobs.l: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.wobs.n
com.google.android.gms.wallet.wobs.n: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wallet.wobs.p
com.google.android.gms.wallet.wobs.p: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.Asset
com.google.android.gms.wearable.Asset: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.PutDataRequest
com.google.android.gms.wearable.PutDataRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.c
com.google.android.gms.wearable.c: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.DataItemAssetParcelable
com.google.android.gms.wearable.internal.DataItemAssetParcelable: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.ab
com.google.android.gms.wearable.internal.ab: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.ai
com.google.android.gms.wearable.internal.ai: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.al
com.google.android.gms.wearable.internal.al: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.an
com.google.android.gms.wearable.internal.an: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.ap
com.google.android.gms.wearable.internal.ap: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.ar
com.google.android.gms.wearable.internal.ar: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.at
com.google.android.gms.wearable.internal.at: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.aw
com.google.android.gms.wearable.internal.aw: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.b
com.google.android.gms.wearable.internal.b: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.m
com.google.android.gms.wearable.internal.m: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.p
com.google.android.gms.wearable.internal.p: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.r
com.google.android.gms.wearable.internal.r: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.t
com.google.android.gms.wearable.internal.t: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.v
com.google.android.gms.wearable.internal.v: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.x
com.google.android.gms.wearable.internal.x: android.os.Parcelable$Creator CREATOR
com.google.android.gms.wearable.internal.z
com.google.android.gms.wearable.internal.z: android.os.Parcelable$Creator CREATOR
