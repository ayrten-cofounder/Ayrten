android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> b
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.c.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.c.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.c.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.c.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.c.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.c.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.c.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.c.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.c.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.c.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.GravityCompat -> android.support.v4.view.a:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.b:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.c:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.d:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.e:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.f:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.g:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.h:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.i:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.j:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.k:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.l:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.m:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.n:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.o:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.p:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.q:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.r:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.s:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.t:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.u:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.v:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.w:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.x:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.y:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.z:
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.aa:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ab:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ac:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ad:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ae:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.af:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ag:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ah:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ai:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.aj:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ak:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.al:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.am:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> aa
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> ab
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ac
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ad
    int mDrawingOrder -> ae
    java.util.ArrayList mDrawingOrderedChildren -> af
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ag
    java.lang.Runnable mEndScrollRunnable -> ah
    int mScrollState -> ai
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.an:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ao:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ap:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.aq:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ar:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.as:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.at:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.au:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.av:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.aw:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ax:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.ayrten.scrots.android.AdLauncher -> com.ayrten.scrots.android.a:
    com.google.android.gms.ads.AdView adView -> a
    com.google.android.gms.ads.AdRequest adRequest -> c
    android.widget.RelativeLayout layout -> d
    com.ayrten.scrots.android.YesNoDialog dialog -> e
    com.ayrten.scrots.android.GameOverDialog gameOverDialog -> f
    android.widget.RelativeLayout$LayoutParams adParams -> g
    android.os.Handler handler -> b
    void onCreate(android.os.Bundle) -> onCreate
    void showAd() -> a
    void hideAd() -> b
    void shouldShowAd(boolean) -> a
    void showToast(java.lang.String) -> a
    void copyTextToClipboard(java.lang.String) -> b
    void makeYesNoWindow(java.lang.String,com.ayrten.scrots.manager.ButtonInterface,com.ayrten.scrots.manager.ButtonInterface,int) -> a
    void makeWindow(java.lang.String,java.lang.String,java.lang.String,com.ayrten.scrots.manager.ButtonInterface,com.ayrten.scrots.manager.ButtonInterface,int) -> a
    void makeGameOverDialog(com.ayrten.scrots.manager.ButtonInterface,com.ayrten.scrots.manager.ButtonInterface,int) -> a
    void makeGameOverDialogHighScore(com.ayrten.scrots.screens.GameScreen,com.ayrten.scrots.manager.ButtonInterface,com.ayrten.scrots.manager.ButtonInterface,int) -> a
    void access$0(com.ayrten.scrots.android.AdLauncher) -> a
    void access$1(com.ayrten.scrots.android.AdLauncher) -> b
    com.ayrten.scrots.android.YesNoDialog access$2(com.ayrten.scrots.android.AdLauncher) -> c
    com.ayrten.scrots.android.GameOverDialog access$3(com.ayrten.scrots.android.AdLauncher) -> d
com.ayrten.scrots.android.AdLauncher$1 -> com.ayrten.scrots.android.b:
    com.ayrten.scrots.android.AdLauncher this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.ayrten.scrots.android.AdLauncher$2 -> com.ayrten.scrots.android.c:
    com.ayrten.scrots.android.AdLauncher this$0 -> a
    java.lang.String val$msg -> b
    void run() -> run
com.ayrten.scrots.android.AdLauncher$3 -> com.ayrten.scrots.android.d:
    com.ayrten.scrots.android.AdLauncher this$0 -> a
    java.lang.String val$text -> b
    void run() -> run
com.ayrten.scrots.android.AdLauncher$4 -> com.ayrten.scrots.android.e:
    com.ayrten.scrots.android.AdLauncher this$0 -> a
    int val$color -> b
    java.lang.String val$title -> c
    com.ayrten.scrots.manager.ButtonInterface val$yes_interface -> d
    com.ayrten.scrots.manager.ButtonInterface val$no_interface -> e
    void run() -> run
com.ayrten.scrots.android.AdLauncher$5 -> com.ayrten.scrots.android.f:
    com.ayrten.scrots.android.AdLauncher this$0 -> a
    int val$color -> b
    java.lang.String val$title -> c
    java.lang.String val$yes_button -> d
    java.lang.String val$no_button -> e
    com.ayrten.scrots.manager.ButtonInterface val$yes_interface -> f
    com.ayrten.scrots.manager.ButtonInterface val$no_interface -> g
    void run() -> run
com.ayrten.scrots.android.AdLauncher$6 -> com.ayrten.scrots.android.g:
    com.ayrten.scrots.android.AdLauncher this$0 -> a
    int val$color -> b
    com.ayrten.scrots.manager.ButtonInterface val$yes_interface -> c
    com.ayrten.scrots.manager.ButtonInterface val$no_interface -> d
    void run() -> run
com.ayrten.scrots.android.AdLauncher$7 -> com.ayrten.scrots.android.h:
    com.ayrten.scrots.android.AdLauncher this$0 -> a
    int val$color -> b
    com.ayrten.scrots.screens.GameScreen val$gameScreen -> c
    com.ayrten.scrots.manager.ButtonInterface val$yes_interface -> d
    com.ayrten.scrots.manager.ButtonInterface val$no_interface -> e
    void run() -> run
com.ayrten.scrots.android.AndroidLauncher -> com.ayrten.scrots.android.AndroidLauncher:
    void onCreate(android.os.Bundle) -> onCreate
com.ayrten.scrots.android.FontsOverride -> com.ayrten.scrots.android.i:
    void setDefaultFont(android.content.Context,java.lang.String,java.lang.String) -> a
    void replaceFont(java.lang.String,android.graphics.Typeface) -> a
com.ayrten.scrots.android.GameOverDialog -> com.ayrten.scrots.android.j:
    android.widget.TextView title -> a
    android.widget.Button yes -> b
    android.widget.Button no -> c
    android.widget.TextView highScore -> d
    android.widget.EditText name -> e
    android.view.View divider -> f
    void onCreate(android.os.Bundle) -> onCreate
    void setDialog(com.ayrten.scrots.manager.ButtonInterface,com.ayrten.scrots.manager.ButtonInterface) -> a
    void setHighScoreDialog(com.ayrten.scrots.screens.GameScreen,com.ayrten.scrots.manager.ButtonInterface,com.ayrten.scrots.manager.ButtonInterface) -> a
    android.widget.EditText access$0(com.ayrten.scrots.android.GameOverDialog) -> a
    android.widget.TextView access$1(com.ayrten.scrots.android.GameOverDialog) -> b
    android.view.View access$2(com.ayrten.scrots.android.GameOverDialog) -> c
com.ayrten.scrots.android.GameOverDialog$1 -> com.ayrten.scrots.android.k:
    com.ayrten.scrots.android.GameOverDialog this$0 -> a
    com.ayrten.scrots.manager.ButtonInterface val$yes_interface -> b
    void onClick(android.view.View) -> onClick
com.ayrten.scrots.android.GameOverDialog$2 -> com.ayrten.scrots.android.l:
    com.ayrten.scrots.android.GameOverDialog this$0 -> a
    com.ayrten.scrots.manager.ButtonInterface val$no_interface -> b
    void onClick(android.view.View) -> onClick
com.ayrten.scrots.android.GameOverDialog$3 -> com.ayrten.scrots.android.m:
    com.ayrten.scrots.android.GameOverDialog this$0 -> a
    com.ayrten.scrots.screens.GameScreen val$gameScreen -> b
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.ayrten.scrots.android.GameOverDialog$4 -> com.ayrten.scrots.android.n:
    com.ayrten.scrots.android.GameOverDialog this$0 -> a
    com.ayrten.scrots.manager.ButtonInterface val$yes_interface -> b
    void onClick(android.view.View) -> onClick
com.ayrten.scrots.android.GameOverDialog$5 -> com.ayrten.scrots.android.o:
    com.ayrten.scrots.android.GameOverDialog this$0 -> a
    com.ayrten.scrots.manager.ButtonInterface val$no_interface -> b
    void onClick(android.view.View) -> onClick
com.ayrten.scrots.android.YesNoDialog -> com.ayrten.scrots.android.p:
    android.widget.TextView title -> a
    android.widget.Button yes -> b
    android.widget.Button no -> c
    void onCreate(android.os.Bundle) -> onCreate
    void setDialog(java.lang.String,com.ayrten.scrots.manager.ButtonInterface,com.ayrten.scrots.manager.ButtonInterface) -> a
    void setDialogWithButtonNames(java.lang.String,java.lang.String,java.lang.String,com.ayrten.scrots.manager.ButtonInterface,com.ayrten.scrots.manager.ButtonInterface) -> a
com.ayrten.scrots.android.YesNoDialog$1 -> com.ayrten.scrots.android.q:
    com.ayrten.scrots.android.YesNoDialog this$0 -> a
    com.ayrten.scrots.manager.ButtonInterface val$yes_interface -> b
    void onClick(android.view.View) -> onClick
com.ayrten.scrots.android.YesNoDialog$2 -> com.ayrten.scrots.android.r:
    com.ayrten.scrots.android.YesNoDialog this$0 -> a
    com.ayrten.scrots.manager.ButtonInterface val$no_interface -> b
    void onClick(android.view.View) -> onClick
com.ayrten.scrots.android.YesNoDialog$3 -> com.ayrten.scrots.android.s:
    com.ayrten.scrots.android.YesNoDialog this$0 -> a
    com.ayrten.scrots.manager.ButtonInterface val$yes_interface -> b
    void onClick(android.view.View) -> onClick
com.ayrten.scrots.android.YesNoDialog$4 -> com.ayrten.scrots.android.t:
    com.ayrten.scrots.android.YesNoDialog this$0 -> a
    com.ayrten.scrots.manager.ButtonInterface val$no_interface -> b
    void onClick(android.view.View) -> onClick
com.ayrten.scrots.dotGraphics.DotGraphics -> com.ayrten.scrots.a.a:
    float size_ratio -> a
    float slopeX -> b
    float slopeY -> c
    float curr_width -> d
    float curr_height -> e
    com.ayrten.scrots.dots.Dot dot -> f
    void move() -> a
    void move_v3() -> b
    void randSlopeV3() -> c
    void resetRatio() -> d
    void setSize() -> e
    float getCircleWidth() -> g
    float getCircleHeight() -> h
    void changePosition() -> f
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> a
com.ayrten.scrots.dotGraphics.DotGraphics_MainMenuScreenBackground -> com.ayrten.scrots.a.b:
    void move() -> a
    void move_main_menu_screen_background() -> g
com.ayrten.scrots.dotGraphics.DotGraphics_NormalGameMode -> com.ayrten.scrots.a.c:
    void move() -> a
com.ayrten.scrots.dots.BabyBlueDot -> com.ayrten.scrots.b.a:
    void touchedByAnAngel() -> a
com.ayrten.scrots.dots.BlueDot -> com.ayrten.scrots.b.b:
    void touchedByAnAngel() -> a
com.ayrten.scrots.dots.Dot -> com.ayrten.scrots.b.c:
    com.badlogic.gdx.graphics.Texture dot -> a
    com.ayrten.scrots.screens.Manager gm -> b
    java.util.Random random -> c
    com.ayrten.scrots.dotGraphics.DotGraphics graphics -> d
    com.badlogic.gdx.audio.Sound pop -> e
    void touchedByAnAngel() -> a
    com.badlogic.gdx.graphics.Texture getTexture() -> b
    void setPosition(float,float) -> setPosition
    void dotChange() -> d
    void resetRatio() -> c
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void access$0(com.ayrten.scrots.dots.Dot) -> a
com.ayrten.scrots.dots.Dot$1 -> com.ayrten.scrots.b.d:
    com.ayrten.scrots.dots.Dot this$0 -> a
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.ayrten.scrots.dots.DotGenerator -> com.ayrten.scrots.b.e:
    int dots -> a
    java.util.Random random -> b
    int height -> c
    int width -> d
    com.ayrten.scrots.screens.Manager gm -> e
    com.ayrten.scrots.dots.GreenDot genGreenDot() -> a
    com.ayrten.scrots.dots.RedDot genRedDot() -> b
    com.ayrten.scrots.dots.BlueDot genBlueDot() -> c
    com.ayrten.scrots.dots.BabyBlueDot genBabyBlueDot() -> d
    void setRandPositions(com.ayrten.scrots.dots.Dot) -> a
com.ayrten.scrots.dots.GreenDot -> com.ayrten.scrots.b.f:
    void touchedByAnAngel() -> a
com.ayrten.scrots.dots.RedDot -> com.ayrten.scrots.b.g:
    void touchedByAnAngel() -> a
com.ayrten.scrots.game.ChallengeGameMode -> com.ayrten.scrots.c.a:
com.ayrten.scrots.game.GameMode -> com.ayrten.scrots.c.b:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> a
    com.ayrten.scrots.screens.Manager gm -> b
    java.util.ArrayList all_levels -> c
    int w -> d
    int h -> e
    int levels_generated -> f
    void generate() -> a
    void generate(int) -> a
    com.ayrten.scrots.level.Level gen_curr_level() -> b
    int access$0(com.ayrten.scrots.game.GameMode) -> a
    void access$1(com.ayrten.scrots.game.GameMode,int) -> a
com.ayrten.scrots.game.GameMode$1 -> com.ayrten.scrots.c.c:
    com.ayrten.scrots.game.GameMode this$0 -> a
    int val$level -> b
    void run() -> run
com.ayrten.scrots.game.MainMenuBackgroundGameMode -> com.ayrten.scrots.c.d:
    com.ayrten.scrots.level.Level gen_curr_level() -> b
com.ayrten.scrots.game.NormalGameMode -> com.ayrten.scrots.c.e:
com.ayrten.scrots.level.Level -> com.ayrten.scrots.d.a:
    java.util.ArrayList greenDots -> b
    java.util.ArrayList redDots -> c
    java.util.ArrayList blueDots -> d
    java.util.ArrayList babyBlueDots -> e
    int level -> f
    com.ayrten.scrots.dots.DotGenerator generator -> g
    int number_of_green_dots -> h
    boolean $assertionsDisabled -> a
    boolean level_clear() -> a
    void minusGreenDot() -> b
    java.util.ArrayList get_grn_dots() -> c
    java.util.ArrayList get_red_dots() -> d
    java.util.ArrayList get_blue_dots() -> e
    java.util.ArrayList get_baby_blue_dots() -> f
    void gen_grn_dots() -> g
    void gen_red_dots() -> h
    void gen_blue_dots() -> i
    void gen_baby_blue_dots() -> j
com.ayrten.scrots.manager.AndroidInterface -> com.ayrten.scrots.e.a:
    void showToast(java.lang.String) -> a
    void copyTextToClipboard(java.lang.String) -> b
    void makeYesNoWindow(java.lang.String,com.ayrten.scrots.manager.ButtonInterface,com.ayrten.scrots.manager.ButtonInterface,int) -> a
    void makeWindow(java.lang.String,java.lang.String,java.lang.String,com.ayrten.scrots.manager.ButtonInterface,com.ayrten.scrots.manager.ButtonInterface,int) -> a
    void makeGameOverDialog(com.ayrten.scrots.manager.ButtonInterface,com.ayrten.scrots.manager.ButtonInterface,int) -> a
    void makeGameOverDialogHighScore(com.ayrten.scrots.screens.GameScreen,com.ayrten.scrots.manager.ButtonInterface,com.ayrten.scrots.manager.ButtonInterface,int) -> a
com.ayrten.scrots.manager.Assets -> com.ayrten.scrots.e.b:
    int game_height -> a
    int height -> b
    int width -> c
    com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable gray_box -> d
    com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable transparent_box -> e
    com.badlogic.gdx.graphics.g2d.BitmapFont font_120 -> f
    com.badlogic.gdx.graphics.g2d.BitmapFont font_64 -> g
    com.badlogic.gdx.graphics.g2d.BitmapFont font_32 -> h
    com.badlogic.gdx.graphics.g2d.BitmapFont font_16 -> i
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style_font_64_black -> j
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style_font_64_blue -> k
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style_font_64_red -> l
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style_font_64_orange -> m
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style_font_64_white -> n
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style_font_32_red -> o
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style_font_32_orange -> p
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style_font_32_blue -> q
    com.badlogic.gdx.audio.Sound button_pop -> r
    com.badlogic.gdx.audio.Sound grn_pop -> s
    com.badlogic.gdx.audio.Sound blue_pop -> t
    com.badlogic.gdx.audio.Sound baby_blue_pop -> u
    com.badlogic.gdx.audio.Sound level_clear -> v
    com.badlogic.gdx.audio.Music menu_bgm_black -> w
    com.badlogic.gdx.audio.Music menu_bgm_white -> x
    com.badlogic.gdx.audio.Music game_bgm -> y
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> z
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin_window -> A
    com.badlogic.gdx.graphics.Texture redDot -> B
    com.badlogic.gdx.graphics.Texture blueDot -> C
    com.badlogic.gdx.graphics.Texture greenDot -> D
    com.badlogic.gdx.graphics.Texture babyBlueDot -> E
    com.badlogic.gdx.graphics.Texture question_mark -> F
    com.badlogic.gdx.Preferences prefs -> G
    com.ayrten.scrots.screens.ScrotsGame game -> H
    com.badlogic.gdx.graphics.Color ORANGE -> I
    void load(com.ayrten.scrots.screens.ScrotsGame) -> a
    void playGameBGM() -> a
    void playMenuBGM() -> b
    void dispose() -> c
    com.badlogic.gdx.graphics.g2d.BitmapFont generate_BitMapFont(int,float) -> a
com.ayrten.scrots.manager.ButtonInterface -> com.ayrten.scrots.e.c:
    void buttonPressed() -> a
com.ayrten.scrots.scoreboard.ChallengeScoreboard -> com.ayrten.scrots.f.a:
com.ayrten.scrots.scoreboard.NormalScoreboard -> com.ayrten.scrots.f.b:
com.ayrten.scrots.scoreboard.Scoreboard -> com.ayrten.scrots.f.c:
    java.lang.String file -> a
    com.ayrten.scrots.scoreboard.Scoreboard$Scores scores -> b
    int getLowestHighScore() -> a
    com.ayrten.scrots.scoreboard.Scoreboard$Scores getAllScores() -> b
    void addHighScore(int,java.lang.String) -> a
    void clearScoreboard() -> c
    void writeFile(java.lang.String,java.lang.String) -> a
    java.lang.String readFile(java.lang.String) -> a
com.ayrten.scrots.scoreboard.Scoreboard$Scores -> com.ayrten.scrots.f.d:
    int first -> a
    int second -> b
    int third -> c
    int fourth -> d
    int fifth -> e
    java.lang.String first_name -> f
    java.lang.String second_name -> g
    java.lang.String third_name -> h
    java.lang.String fourth_name -> i
    java.lang.String fifth_name -> j
com.ayrten.scrots.screens.ContactScreen -> com.ayrten.scrots.g.a:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane scroll_view -> a
com.ayrten.scrots.screens.ContactScreen$1 -> com.ayrten.scrots.g.b:
    com.ayrten.scrots.screens.ContactScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.ayrten.scrots.screens.ContactScreen$2 -> com.ayrten.scrots.g.c:
    com.ayrten.scrots.screens.ContactScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.ayrten.scrots.screens.ContactScreen$3 -> com.ayrten.scrots.g.d:
    com.ayrten.scrots.screens.ContactScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.ayrten.scrots.screens.CreditsScreen -> com.ayrten.scrots.g.e:
com.ayrten.scrots.screens.CreditsScreen$1 -> com.ayrten.scrots.g.f:
    com.ayrten.scrots.screens.CreditsScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.ayrten.scrots.screens.CreditsScreen$2 -> com.ayrten.scrots.g.g:
    com.ayrten.scrots.screens.CreditsScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.ayrten.scrots.screens.CreditsScreen$3 -> com.ayrten.scrots.g.h:
    com.ayrten.scrots.screens.CreditsScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.ayrten.scrots.screens.GameScreen -> com.ayrten.scrots.g.i:
    com.badlogic.gdx.scenes.scene2d.ui.Label pause -> a
    com.badlogic.gdx.scenes.scene2d.ui.Label points_title -> b
    com.badlogic.gdx.scenes.scene2d.ui.Label points -> c
    com.badlogic.gdx.scenes.scene2d.ui.Label time_title -> d
    com.badlogic.gdx.scenes.scene2d.ui.Label time -> e
    com.badlogic.gdx.scenes.scene2d.ui.Label time_end -> f
    com.ayrten.scrots.game.GameMode gamemode -> g
    com.ayrten.scrots.screens.Manager gm -> h
    com.badlogic.gdx.scenes.scene2d.Stage stage -> i
    int w -> j
    int h -> k
    com.ayrten.scrots.level.Level curr_level -> l
    com.badlogic.gdx.graphics.g2d.SpriteBatch batch -> m
    boolean should_clear_stage -> n
    java.util.ArrayList all_levels -> o
    com.badlogic.gdx.utils.Pool pool -> p
    boolean go_back -> q
    com.ayrten.scrots.screens.Manager getManager() -> a
    void replay() -> j
    void main_menu() -> k
    void setHighScoreName(java.lang.String) -> a
    void showMenu() -> b
    void showQuitConfirm() -> c
    void showGameOver() -> d
    void showGameOverWithHighScore() -> e
    void dispose() -> dispose
    void render(float) -> render
    void point() -> f
    void time() -> g
    void gameOver() -> h
    void addStageActors() -> l
    void levelClear() -> i
    void resize(int,int) -> resize
    void pause() -> pause
    void resume() -> resume
    void show() -> show
    void hide() -> hide
    void access$0(com.ayrten.scrots.screens.GameScreen) -> a
    void access$1(com.ayrten.scrots.screens.GameScreen) -> b
com.ayrten.scrots.screens.GameScreen$1 -> com.ayrten.scrots.g.j:
    com.ayrten.scrots.screens.GameScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.ayrten.scrots.screens.GameScreen$10 -> com.ayrten.scrots.g.k:
    com.ayrten.scrots.screens.GameScreen this$0 -> a
    void buttonPressed() -> a
com.ayrten.scrots.screens.GameScreen$11 -> com.ayrten.scrots.g.l:
    com.ayrten.scrots.screens.GameScreen this$0 -> a
    void buttonPressed() -> a
com.ayrten.scrots.screens.GameScreen$12 -> com.ayrten.scrots.g.m:
    com.ayrten.scrots.screens.GameScreen this$0 -> a
    void buttonPressed() -> a
com.ayrten.scrots.screens.GameScreen$13 -> com.ayrten.scrots.g.n:
    com.ayrten.scrots.screens.GameScreen this$0 -> a
    void buttonPressed() -> a
com.ayrten.scrots.screens.GameScreen$2 -> com.ayrten.scrots.g.o:
    com.ayrten.scrots.screens.GameScreen this$0 -> a
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction newObject() -> a
    java.lang.Object newObject() -> newObject
com.ayrten.scrots.screens.GameScreen$3 -> com.ayrten.scrots.g.p:
    com.ayrten.scrots.screens.GameScreen this$0 -> a
    void run() -> run
com.ayrten.scrots.screens.GameScreen$6 -> com.ayrten.scrots.g.q:
    com.ayrten.scrots.screens.GameScreen this$0 -> a
    void buttonPressed() -> a
com.ayrten.scrots.screens.GameScreen$7 -> com.ayrten.scrots.g.r:
    com.ayrten.scrots.screens.GameScreen this$0 -> a
    void buttonPressed() -> a
com.ayrten.scrots.screens.GameScreen$8 -> com.ayrten.scrots.g.s:
    com.ayrten.scrots.screens.GameScreen this$0 -> a
    void buttonPressed() -> a
com.ayrten.scrots.screens.GameScreen$9 -> com.ayrten.scrots.g.t:
    com.ayrten.scrots.screens.GameScreen this$0 -> a
    void buttonPressed() -> a
com.ayrten.scrots.screens.HighScoresScreen -> com.ayrten.scrots.g.u:
    float pad_left -> c
    float pad_right -> d
    int height -> e
    com.badlogic.gdx.scenes.scene2d.ui.Table table -> f
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox mode -> g
    com.badlogic.gdx.scenes.scene2d.ui.Label clear -> h
    com.badlogic.gdx.scenes.scene2d.ui.Window confirm_clear -> i
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style_big -> a
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style_small -> b
    void clearScoreboard() -> a
    void switchHighScoreTable() -> f
    void setHighScoreTable(com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    void fillInHighScore(com.ayrten.scrots.scoreboard.Scoreboard,com.badlogic.gdx.scenes.scene2d.ui.Table) -> a
    void addActors() -> b
    void show() -> show
    void otherShowOptions() -> c
    void access$0(com.ayrten.scrots.screens.HighScoresScreen) -> a
    com.badlogic.gdx.scenes.scene2d.ui.Window access$1(com.ayrten.scrots.screens.HighScoresScreen) -> b
com.ayrten.scrots.screens.HighScoresScreen$1 -> com.ayrten.scrots.g.v:
    com.ayrten.scrots.screens.HighScoresScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    com.ayrten.scrots.screens.HighScoresScreen access$0(com.ayrten.scrots.screens.HighScoresScreen$1) -> a
com.ayrten.scrots.screens.HighScoresScreen$1$1 -> com.ayrten.scrots.g.w:
    com.ayrten.scrots.screens.HighScoresScreen$1 this$1 -> a
    void buttonPressed() -> a
com.ayrten.scrots.screens.HighScoresScreen$2 -> com.ayrten.scrots.g.x:
    com.ayrten.scrots.screens.HighScoresScreen this$0 -> a
    void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.ayrten.scrots.screens.HighScoresScreen$3 -> com.ayrten.scrots.g.y:
    com.ayrten.scrots.screens.HighScoresScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.ayrten.scrots.screens.HighScoresScreen$4 -> com.ayrten.scrots.g.z:
    com.ayrten.scrots.screens.HighScoresScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.ayrten.scrots.screens.HighScoresScreen$5 -> com.ayrten.scrots.g.aa:
    com.ayrten.scrots.screens.HighScoresScreen this$0 -> a
    void run() -> run
com.ayrten.scrots.screens.HighScoresScreen$6 -> com.ayrten.scrots.g.ab:
    com.ayrten.scrots.screens.HighScoresScreen this$0 -> a
    void run() -> run
com.ayrten.scrots.screens.LoadingScreen -> com.ayrten.scrots.g.ac:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> a
    com.badlogic.gdx.utils.Timer timer -> b
    void render(float) -> render
    void dispose() -> dispose
    void resize(int,int) -> resize
    void show() -> show
    void hide() -> hide
    void pause() -> pause
    void resume() -> resume
    com.badlogic.gdx.scenes.scene2d.Stage access$0(com.ayrten.scrots.screens.LoadingScreen) -> a
    com.badlogic.gdx.utils.Timer access$1(com.ayrten.scrots.screens.LoadingScreen) -> b
com.ayrten.scrots.screens.LoadingScreen$1 -> com.ayrten.scrots.g.ad:
    com.ayrten.scrots.screens.LoadingScreen this$0 -> a
    void run() -> run
    com.ayrten.scrots.screens.LoadingScreen access$0(com.ayrten.scrots.screens.LoadingScreen$1) -> a
com.ayrten.scrots.screens.LoadingScreen$1$1 -> com.ayrten.scrots.g.ae:
    com.ayrten.scrots.screens.LoadingScreen$1 this$1 -> a
    void run() -> run
com.ayrten.scrots.screens.LoadingScreen$2 -> com.ayrten.scrots.g.af:
    com.ayrten.scrots.screens.LoadingScreen this$0 -> a
    void run() -> run
com.ayrten.scrots.screens.MainMenuScreen -> com.ayrten.scrots.g.ag:
    com.badlogic.gdx.scenes.scene2d.ui.Label start -> f
    com.badlogic.gdx.scenes.scene2d.ui.Label others -> g
    com.badlogic.gdx.scenes.scene2d.ui.Label highscore -> h
    com.ayrten.scrots.screens.OthersScreen others_screen -> a
    com.ayrten.scrots.screens.HighScoresScreen high_score_screen -> b
    com.ayrten.scrots.screens.GameScreen game_screen -> c
    com.ayrten.scrots.scoreboard.NormalScoreboard nsb -> d
    com.ayrten.scrots.scoreboard.ChallengeScoreboard csb -> e
    void addActors() -> b
com.ayrten.scrots.screens.MainMenuScreen$1 -> com.ayrten.scrots.g.ah:
    com.ayrten.scrots.screens.MainMenuScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    com.ayrten.scrots.screens.MainMenuScreen access$0(com.ayrten.scrots.screens.MainMenuScreen$1) -> a
com.ayrten.scrots.screens.MainMenuScreen$1$1 -> com.ayrten.scrots.g.ai:
    com.ayrten.scrots.screens.MainMenuScreen$1 this$1 -> a
    void buttonPressed() -> a
com.ayrten.scrots.screens.MainMenuScreen$1$2 -> com.ayrten.scrots.g.aj:
    com.ayrten.scrots.screens.MainMenuScreen$1 this$1 -> a
    void buttonPressed() -> a
    com.ayrten.scrots.screens.MainMenuScreen$1 access$0(com.ayrten.scrots.screens.MainMenuScreen$1$2) -> a
com.ayrten.scrots.screens.MainMenuScreen$1$2$1 -> com.ayrten.scrots.g.ak:
    com.ayrten.scrots.screens.MainMenuScreen$1$2 this$2 -> a
    void run() -> run
com.ayrten.scrots.screens.MainMenuScreen$2 -> com.ayrten.scrots.g.al:
    com.ayrten.scrots.screens.MainMenuScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.ayrten.scrots.screens.MainMenuScreen$3 -> com.ayrten.scrots.g.am:
    com.ayrten.scrots.screens.MainMenuScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.ayrten.scrots.screens.Manager -> com.ayrten.scrots.g.an:
    com.ayrten.scrots.level.Level curr_level -> a
    com.ayrten.scrots.time.Time time -> b
    com.ayrten.scrots.scoreboard.Scoreboard sb -> c
    int mode -> d
    boolean game_over -> e
    int score -> f
    void setMode(int) -> a
    void setScoreboard(com.ayrten.scrots.scoreboard.Scoreboard) -> a
    com.ayrten.scrots.scoreboard.Scoreboard getScoreBoard() -> a
    void addHighScore(java.lang.String) -> a
    int get_game_mode() -> b
    int get_player_score() -> c
    void setLevel(com.ayrten.scrots.level.Level) -> a
    void startGame() -> d
    void pauseGame() -> e
    void changeDotVisibility(boolean) -> a
    void changeDotSize() -> f
    void minusGreenDot() -> g
    void gameOver() -> h
    void plusOnePoint() -> i
    java.lang.String getTime() -> j
    void addTime(float) -> a
    boolean isGameOver() -> k
com.ayrten.scrots.screens.OptionsScreen -> com.ayrten.scrots.g.ao:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox mode -> a
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox bg_color -> b
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox sound_effs -> c
    float label_pad_left -> d
    void render(float) -> render
    void hide() -> hide
    void dispose() -> dispose
    void setActorsColor(com.badlogic.gdx.graphics.Color) -> a
com.ayrten.scrots.screens.OthersScreen -> com.ayrten.scrots.g.ap:
    com.badlogic.gdx.scenes.scene2d.ui.Table table -> a
    com.badlogic.gdx.scenes.scene2d.ui.Label options -> b
    com.badlogic.gdx.scenes.scene2d.ui.Label tutorial -> c
    com.badlogic.gdx.scenes.scene2d.ui.Label contact_us -> d
    com.badlogic.gdx.scenes.scene2d.ui.Label credits -> e
    com.ayrten.scrots.screens.OptionsScreen options_screen -> f
    com.ayrten.scrots.screens.TutorialScreen tutorial_screen -> g
    com.ayrten.scrots.screens.ContactScreen contact_screen -> h
    com.ayrten.scrots.screens.CreditsScreen credits_screen -> i
    void addActors() -> b
com.ayrten.scrots.screens.OthersScreen$1 -> com.ayrten.scrots.g.aq:
    com.ayrten.scrots.screens.OthersScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.ayrten.scrots.screens.OthersScreen$2 -> com.ayrten.scrots.g.ar:
    com.ayrten.scrots.screens.OthersScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.ayrten.scrots.screens.OthersScreen$3 -> com.ayrten.scrots.g.as:
    com.ayrten.scrots.screens.OthersScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.ayrten.scrots.screens.OthersScreen$4 -> com.ayrten.scrots.g.at:
    com.ayrten.scrots.screens.OthersScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.ayrten.scrots.screens.ScrotsGame -> com.ayrten.scrots.g.au:
    com.ayrten.scrots.screens.MainMenuScreen main_menu -> a
    com.ayrten.scrots.manager.AndroidInterface apk_intf -> b
    void create() -> create
    void dispose() -> dispose
com.ayrten.scrots.screens.ScrotsScreen -> com.ayrten.scrots.g.av:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> j
    com.badlogic.gdx.Screen backScreen -> k
    java.util.ArrayList actors -> l
    com.badlogic.gdx.scenes.scene2d.ui.Label back -> m
    boolean createBack -> n
    boolean backStage -> o
    void createBackLabel() -> d
    void setupStage() -> e
    void addActors() -> b
    void setActorsTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> a
    void setActorsColor(com.badlogic.gdx.graphics.Color) -> a
    void render(float) -> render
    void resize(int,int) -> resize
    void show() -> show
    void otherShowOptions() -> c
    void hide() -> hide
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.ayrten.scrots.screens.ScrotsScreen$1 -> com.ayrten.scrots.g.aw:
    com.ayrten.scrots.screens.ScrotsScreen this$0 -> a
    boolean keyDown(int) -> keyDown
    com.ayrten.scrots.screens.ScrotsScreen access$0(com.ayrten.scrots.screens.ScrotsScreen$1) -> a
com.ayrten.scrots.screens.ScrotsScreen$1$1 -> com.ayrten.scrots.g.ax:
    com.ayrten.scrots.screens.ScrotsScreen$1 this$1 -> a
    void run() -> run
com.ayrten.scrots.screens.ScrotsScreen$1$2 -> com.ayrten.scrots.g.ay:
    com.ayrten.scrots.screens.ScrotsScreen$1 this$1 -> a
    void run() -> run
com.ayrten.scrots.screens.ScrotsScreen$2 -> com.ayrten.scrots.g.az:
    com.ayrten.scrots.screens.ScrotsScreen this$0 -> a
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    com.ayrten.scrots.screens.ScrotsScreen access$0(com.ayrten.scrots.screens.ScrotsScreen$2) -> a
com.ayrten.scrots.screens.ScrotsScreen$2$1 -> com.ayrten.scrots.g.ba:
    com.ayrten.scrots.screens.ScrotsScreen$2 this$1 -> a
    void run() -> run
com.ayrten.scrots.screens.ScrotsScreen$2$2 -> com.ayrten.scrots.g.bb:
    com.ayrten.scrots.screens.ScrotsScreen$2 this$1 -> a
    void run() -> run
com.ayrten.scrots.screens.ScrotsScreen$3 -> com.ayrten.scrots.g.bc:
    com.ayrten.scrots.screens.ScrotsScreen this$0 -> a
    void run() -> run
com.ayrten.scrots.screens.TutorialScreen -> com.ayrten.scrots.g.bd:
    void hide() -> hide
com.ayrten.scrots.time.Time -> com.ayrten.scrots.h.a:
    float second -> a
    com.ayrten.scrots.screens.Manager gm -> b
    com.badlogic.gdx.utils.Timer timer -> c
    boolean timeOver() -> d
    java.lang.String getTime() -> a
    void addTime(float) -> a
    void startTime() -> b
    void pauseTime() -> c
    boolean access$0(com.ayrten.scrots.time.Time) -> a
    com.ayrten.scrots.screens.Manager access$1(com.ayrten.scrots.time.Time) -> b
    float access$2(com.ayrten.scrots.time.Time) -> c
    void access$3(com.ayrten.scrots.time.Time,float) -> a
com.ayrten.scrots.time.Time$1 -> com.ayrten.scrots.h.b:
    com.ayrten.scrots.time.Time this$0 -> a
    void run() -> run
com.badlogic.gdx.Application -> com.badlogic.gdx.Application:
    int LOG_NONE -> LOG_NONE
    int LOG_DEBUG -> LOG_DEBUG
    int LOG_INFO -> LOG_INFO
    int LOG_ERROR -> LOG_ERROR
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Input getInput() -> getInput
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Net getNet() -> getNet
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void exit() -> exit
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
com.badlogic.gdx.Application$ApplicationType -> com.badlogic.gdx.Application$ApplicationType:
    com.badlogic.gdx.Application$ApplicationType Android -> Android
    com.badlogic.gdx.Application$ApplicationType Desktop -> Desktop
    com.badlogic.gdx.Application$ApplicationType HeadlessDesktop -> HeadlessDesktop
    com.badlogic.gdx.Application$ApplicationType Applet -> Applet
    com.badlogic.gdx.Application$ApplicationType WebGL -> WebGL
    com.badlogic.gdx.Application$ApplicationType iOS -> iOS
    com.badlogic.gdx.Application$ApplicationType[] $VALUES -> $VALUES
    com.badlogic.gdx.Application$ApplicationType[] values() -> values
    com.badlogic.gdx.Application$ApplicationType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.ApplicationAdapter -> com.badlogic.gdx.ApplicationAdapter:
    void create() -> create
    void resize(int,int) -> resize
    void render() -> render
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.ApplicationListener -> com.badlogic.gdx.ApplicationListener:
    void create() -> create
    void resize(int,int) -> resize
    void render() -> render
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.Audio -> com.badlogic.gdx.Audio:
    com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
com.badlogic.gdx.Files -> com.badlogic.gdx.Files:
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    java.lang.String getLocalStoragePath() -> getLocalStoragePath
    boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.Files$FileType -> com.badlogic.gdx.Files$FileType:
    com.badlogic.gdx.Files$FileType Classpath -> Classpath
    com.badlogic.gdx.Files$FileType Internal -> Internal
    com.badlogic.gdx.Files$FileType External -> External
    com.badlogic.gdx.Files$FileType Absolute -> Absolute
    com.badlogic.gdx.Files$FileType Local -> Local
    com.badlogic.gdx.Files$FileType[] $VALUES -> $VALUES
    com.badlogic.gdx.Files$FileType[] values() -> values
    com.badlogic.gdx.Files$FileType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Game -> com.badlogic.gdx.Game:
    com.badlogic.gdx.Screen screen -> screen
    void dispose() -> dispose
    void pause() -> pause
    void resume() -> resume
    void render() -> render
    void resize(int,int) -> resize
    void setScreen(com.badlogic.gdx.Screen) -> setScreen
    com.badlogic.gdx.Screen getScreen() -> getScreen
com.badlogic.gdx.Gdx -> com.badlogic.gdx.Gdx:
    com.badlogic.gdx.Application app -> app
    com.badlogic.gdx.Graphics graphics -> graphics
    com.badlogic.gdx.Audio audio -> audio
    com.badlogic.gdx.Input input -> input
    com.badlogic.gdx.Files files -> files
    com.badlogic.gdx.Net net -> net
    com.badlogic.gdx.graphics.GL20 gl -> gl
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GL30 gl30 -> gl30
com.badlogic.gdx.Graphics -> com.badlogic.gdx.Graphics:
    boolean isGL30Available() -> isGL30Available
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    com.badlogic.gdx.graphics.GL30 getGL30() -> getGL30
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    int getFramesPerSecond() -> getFramesPerSecond
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    void setVSync(boolean) -> setVSync
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
com.badlogic.gdx.Graphics$BufferFormat -> com.badlogic.gdx.Graphics$BufferFormat:
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    int depth -> depth
    int stencil -> stencil
    int samples -> samples
    boolean coverageSampling -> coverageSampling
    java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$DisplayMode -> com.badlogic.gdx.Graphics$DisplayMode:
    int width -> width
    int height -> height
    int refreshRate -> refreshRate
    int bitsPerPixel -> bitsPerPixel
    java.lang.String toString() -> toString
com.badlogic.gdx.Graphics$GraphicsType -> com.badlogic.gdx.Graphics$GraphicsType:
    com.badlogic.gdx.Graphics$GraphicsType AndroidGL -> AndroidGL
    com.badlogic.gdx.Graphics$GraphicsType LWJGL -> LWJGL
    com.badlogic.gdx.Graphics$GraphicsType Angle -> Angle
    com.badlogic.gdx.Graphics$GraphicsType WebGL -> WebGL
    com.badlogic.gdx.Graphics$GraphicsType iOSGL -> iOSGL
    com.badlogic.gdx.Graphics$GraphicsType JGLFW -> JGLFW
    com.badlogic.gdx.Graphics$GraphicsType Mock -> Mock
    com.badlogic.gdx.Graphics$GraphicsType[] $VALUES -> $VALUES
    com.badlogic.gdx.Graphics$GraphicsType[] values() -> values
    com.badlogic.gdx.Graphics$GraphicsType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input -> com.badlogic.gdx.Input:
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    int getX() -> getX
    int getX(int) -> getX
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getY() -> getY
    int getY(int) -> getY
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    boolean isTouched() -> isTouched
    boolean justTouched() -> justTouched
    boolean isTouched(int) -> isTouched
    boolean isButtonPressed(int) -> isButtonPressed
    boolean isKeyPressed(int) -> isKeyPressed
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void getRotationMatrix(float[]) -> getRotationMatrix
    long getCurrentEventTime() -> getCurrentEventTime
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    void setCursorPosition(int,int) -> setCursorPosition
    void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int) -> setCursorImage
com.badlogic.gdx.Input$Buttons -> com.badlogic.gdx.Input$Buttons:
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int MIDDLE -> MIDDLE
com.badlogic.gdx.Input$Keys -> com.badlogic.gdx.Input$Keys:
    int ANY_KEY -> ANY_KEY
    int NUM_0 -> NUM_0
    int NUM_1 -> NUM_1
    int NUM_2 -> NUM_2
    int NUM_3 -> NUM_3
    int NUM_4 -> NUM_4
    int NUM_5 -> NUM_5
    int NUM_6 -> NUM_6
    int NUM_7 -> NUM_7
    int NUM_8 -> NUM_8
    int NUM_9 -> NUM_9
    int A -> A
    int ALT_LEFT -> ALT_LEFT
    int ALT_RIGHT -> ALT_RIGHT
    int APOSTROPHE -> APOSTROPHE
    int AT -> AT
    int B -> B
    int BACK -> BACK
    int BACKSLASH -> BACKSLASH
    int C -> C
    int CALL -> CALL
    int CAMERA -> CAMERA
    int CLEAR -> CLEAR
    int COMMA -> COMMA
    int D -> D
    int DEL -> DEL
    int BACKSPACE -> BACKSPACE
    int FORWARD_DEL -> FORWARD_DEL
    int DPAD_CENTER -> DPAD_CENTER
    int DPAD_DOWN -> DPAD_DOWN
    int DPAD_LEFT -> DPAD_LEFT
    int DPAD_RIGHT -> DPAD_RIGHT
    int DPAD_UP -> DPAD_UP
    int CENTER -> CENTER
    int DOWN -> DOWN
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int UP -> UP
    int E -> E
    int ENDCALL -> ENDCALL
    int ENTER -> ENTER
    int ENVELOPE -> ENVELOPE
    int EQUALS -> EQUALS
    int EXPLORER -> EXPLORER
    int F -> F
    int FOCUS -> FOCUS
    int G -> G
    int GRAVE -> GRAVE
    int H -> H
    int HEADSETHOOK -> HEADSETHOOK
    int HOME -> HOME
    int I -> I
    int J -> J
    int K -> K
    int L -> L
    int LEFT_BRACKET -> LEFT_BRACKET
    int M -> M
    int MEDIA_FAST_FORWARD -> MEDIA_FAST_FORWARD
    int MEDIA_NEXT -> MEDIA_NEXT
    int MEDIA_PLAY_PAUSE -> MEDIA_PLAY_PAUSE
    int MEDIA_PREVIOUS -> MEDIA_PREVIOUS
    int MEDIA_REWIND -> MEDIA_REWIND
    int MEDIA_STOP -> MEDIA_STOP
    int MENU -> MENU
    int MINUS -> MINUS
    int MUTE -> MUTE
    int N -> N
    int NOTIFICATION -> NOTIFICATION
    int NUM -> NUM
    int O -> O
    int P -> P
    int PERIOD -> PERIOD
    int PLUS -> PLUS
    int POUND -> POUND
    int POWER -> POWER
    int Q -> Q
    int R -> R
    int RIGHT_BRACKET -> RIGHT_BRACKET
    int S -> S
    int SEARCH -> SEARCH
    int SEMICOLON -> SEMICOLON
    int SHIFT_LEFT -> SHIFT_LEFT
    int SHIFT_RIGHT -> SHIFT_RIGHT
    int SLASH -> SLASH
    int SOFT_LEFT -> SOFT_LEFT
    int SOFT_RIGHT -> SOFT_RIGHT
    int SPACE -> SPACE
    int STAR -> STAR
    int SYM -> SYM
    int T -> T
    int TAB -> TAB
    int U -> U
    int UNKNOWN -> UNKNOWN
    int V -> V
    int VOLUME_DOWN -> VOLUME_DOWN
    int VOLUME_UP -> VOLUME_UP
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    int META_ALT_LEFT_ON -> META_ALT_LEFT_ON
    int META_ALT_ON -> META_ALT_ON
    int META_ALT_RIGHT_ON -> META_ALT_RIGHT_ON
    int META_SHIFT_LEFT_ON -> META_SHIFT_LEFT_ON
    int META_SHIFT_ON -> META_SHIFT_ON
    int META_SHIFT_RIGHT_ON -> META_SHIFT_RIGHT_ON
    int META_SYM_ON -> META_SYM_ON
    int CONTROL_LEFT -> CONTROL_LEFT
    int CONTROL_RIGHT -> CONTROL_RIGHT
    int ESCAPE -> ESCAPE
    int END -> END
    int INSERT -> INSERT
    int PAGE_UP -> PAGE_UP
    int PAGE_DOWN -> PAGE_DOWN
    int PICTSYMBOLS -> PICTSYMBOLS
    int SWITCH_CHARSET -> SWITCH_CHARSET
    int BUTTON_CIRCLE -> BUTTON_CIRCLE
    int BUTTON_A -> BUTTON_A
    int BUTTON_B -> BUTTON_B
    int BUTTON_C -> BUTTON_C
    int BUTTON_X -> BUTTON_X
    int BUTTON_Y -> BUTTON_Y
    int BUTTON_Z -> BUTTON_Z
    int BUTTON_L1 -> BUTTON_L1
    int BUTTON_R1 -> BUTTON_R1
    int BUTTON_L2 -> BUTTON_L2
    int BUTTON_R2 -> BUTTON_R2
    int BUTTON_THUMBL -> BUTTON_THUMBL
    int BUTTON_THUMBR -> BUTTON_THUMBR
    int BUTTON_START -> BUTTON_START
    int BUTTON_SELECT -> BUTTON_SELECT
    int BUTTON_MODE -> BUTTON_MODE
    int NUMPAD_0 -> NUMPAD_0
    int NUMPAD_1 -> NUMPAD_1
    int NUMPAD_2 -> NUMPAD_2
    int NUMPAD_3 -> NUMPAD_3
    int NUMPAD_4 -> NUMPAD_4
    int NUMPAD_5 -> NUMPAD_5
    int NUMPAD_6 -> NUMPAD_6
    int NUMPAD_7 -> NUMPAD_7
    int NUMPAD_8 -> NUMPAD_8
    int NUMPAD_9 -> NUMPAD_9
    int COLON -> COLON
    int F1 -> F1
    int F2 -> F2
    int F3 -> F3
    int F4 -> F4
    int F5 -> F5
    int F6 -> F6
    int F7 -> F7
    int F8 -> F8
    int F9 -> F9
    int F10 -> F10
    int F11 -> F11
    int F12 -> F12
    com.badlogic.gdx.utils.ObjectIntMap keyNames -> keyNames
    java.lang.String toString(int) -> toString
    int valueOf(java.lang.String) -> valueOf
    void initializeKeyNames() -> initializeKeyNames
com.badlogic.gdx.Input$Orientation -> com.badlogic.gdx.Input$Orientation:
    com.badlogic.gdx.Input$Orientation Landscape -> Landscape
    com.badlogic.gdx.Input$Orientation Portrait -> Portrait
    com.badlogic.gdx.Input$Orientation[] $VALUES -> $VALUES
    com.badlogic.gdx.Input$Orientation[] values() -> values
    com.badlogic.gdx.Input$Orientation valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$Peripheral -> com.badlogic.gdx.Input$Peripheral:
    com.badlogic.gdx.Input$Peripheral HardwareKeyboard -> HardwareKeyboard
    com.badlogic.gdx.Input$Peripheral OnscreenKeyboard -> OnscreenKeyboard
    com.badlogic.gdx.Input$Peripheral MultitouchScreen -> MultitouchScreen
    com.badlogic.gdx.Input$Peripheral Accelerometer -> Accelerometer
    com.badlogic.gdx.Input$Peripheral Compass -> Compass
    com.badlogic.gdx.Input$Peripheral Vibrator -> Vibrator
    com.badlogic.gdx.Input$Peripheral[] $VALUES -> $VALUES
    com.badlogic.gdx.Input$Peripheral[] values() -> values
    com.badlogic.gdx.Input$Peripheral valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Input$TextInputListener -> com.badlogic.gdx.Input$TextInputListener:
    void input(java.lang.String) -> input
    void canceled() -> canceled
com.badlogic.gdx.InputAdapter -> com.badlogic.gdx.InputAdapter:
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
com.badlogic.gdx.InputMultiplexer -> com.badlogic.gdx.InputMultiplexer:
    com.badlogic.gdx.utils.Array processors -> processors
    void addProcessor(int,com.badlogic.gdx.InputProcessor) -> addProcessor
    void removeProcessor(int) -> removeProcessor
    void addProcessor(com.badlogic.gdx.InputProcessor) -> addProcessor
    void removeProcessor(com.badlogic.gdx.InputProcessor) -> removeProcessor
    int size() -> size
    void clear() -> clear
    void setProcessors(com.badlogic.gdx.utils.Array) -> setProcessors
    com.badlogic.gdx.utils.Array getProcessors() -> getProcessors
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
com.badlogic.gdx.InputProcessor -> com.badlogic.gdx.InputProcessor:
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
com.badlogic.gdx.InputProcessorQueue -> com.badlogic.gdx.InputProcessorQueue:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    int MOUSE_MOVED -> MOUSE_MOVED
    int SCROLLED -> SCROLLED
    com.badlogic.gdx.InputProcessor processor -> processor
    com.badlogic.gdx.utils.IntArray queue -> queue
    com.badlogic.gdx.utils.IntArray processingQueue -> processingQueue
    long currentEventTime -> currentEventTime
    void setProcessor(com.badlogic.gdx.InputProcessor) -> setProcessor
    com.badlogic.gdx.InputProcessor getProcessor() -> getProcessor
    void drain() -> drain
    void queueTime() -> queueTime
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
    long getCurrentEventTime() -> getCurrentEventTime
com.badlogic.gdx.LifecycleListener -> com.badlogic.gdx.LifecycleListener:
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.Net -> com.badlogic.gdx.Net:
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest) -> cancelHttpRequest
    com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints) -> newClientSocket
    void openURI(java.lang.String) -> openURI
com.badlogic.gdx.Net$HttpMethods -> com.badlogic.gdx.Net$HttpMethods:
    java.lang.String GET -> GET
    java.lang.String POST -> POST
    java.lang.String PUT -> PUT
    java.lang.String DELETE -> DELETE
com.badlogic.gdx.Net$HttpRequest -> com.badlogic.gdx.Net$HttpRequest:
    java.lang.String httpMethod -> httpMethod
    java.lang.String url -> url
    java.util.Map headers -> headers
    int timeOut -> timeOut
    java.lang.String content -> content
    java.io.InputStream contentStream -> contentStream
    long contentLength -> contentLength
    void setUrl(java.lang.String) -> setUrl
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setContent(java.lang.String) -> setContent
    void setContent(java.io.InputStream,long) -> setContent
    void setTimeOut(int) -> setTimeOut
    int getTimeOut() -> getTimeOut
    java.lang.String getMethod() -> getMethod
    java.lang.String getUrl() -> getUrl
    java.lang.String getContent() -> getContent
    java.io.InputStream getContentStream() -> getContentStream
    long getContentLength() -> getContentLength
    java.util.Map getHeaders() -> getHeaders
com.badlogic.gdx.Net$HttpResponse -> com.badlogic.gdx.Net$HttpResponse:
    byte[] getResult() -> getResult
    java.lang.String getResultAsString() -> getResultAsString
    java.io.InputStream getResultAsStream() -> getResultAsStream
    com.badlogic.gdx.net.HttpStatus getStatus() -> getStatus
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getHeaders() -> getHeaders
com.badlogic.gdx.Net$HttpResponseListener -> com.badlogic.gdx.Net$HttpResponseListener:
    void handleHttpResponse(com.badlogic.gdx.Net$HttpResponse) -> handleHttpResponse
    void failed(java.lang.Throwable) -> failed
    void cancelled() -> cancelled
com.badlogic.gdx.Net$Protocol -> com.badlogic.gdx.Net$Protocol:
    com.badlogic.gdx.Net$Protocol TCP -> TCP
    com.badlogic.gdx.Net$Protocol[] $VALUES -> $VALUES
    com.badlogic.gdx.Net$Protocol[] values() -> values
    com.badlogic.gdx.Net$Protocol valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.Preferences -> com.badlogic.gdx.Preferences:
    void putBoolean(java.lang.String,boolean) -> putBoolean
    void putInteger(java.lang.String,int) -> putInteger
    void putLong(java.lang.String,long) -> putLong
    void putFloat(java.lang.String,float) -> putFloat
    void putString(java.lang.String,java.lang.String) -> putString
    void put(java.util.Map) -> put
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInteger(java.lang.String) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Map get() -> get
    boolean contains(java.lang.String) -> contains
    void clear() -> clear
    void remove(java.lang.String) -> remove
    void flush() -> flush
com.badlogic.gdx.Screen -> com.badlogic.gdx.Screen:
    void render(float) -> render
    void resize(int,int) -> resize
    void show() -> show
    void hide() -> hide
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.ScreenAdapter -> com.badlogic.gdx.ScreenAdapter:
    void render(float) -> render
    void resize(int,int) -> resize
    void show() -> show
    void hide() -> hide
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
com.badlogic.gdx.Version -> com.badlogic.gdx.Version:
    java.lang.String VERSION -> VERSION
    int MAJOR -> MAJOR
    int MINOR -> MINOR
    int REVISION -> REVISION
    boolean isHigher(int,int,int) -> isHigher
    boolean isHigherEqual(int,int,int) -> isHigherEqual
    boolean isLower(int,int,int) -> isLower
    boolean isLowerEqual(int,int,int) -> isLowerEqual
com.badlogic.gdx.assets.AssetDescriptor -> com.badlogic.gdx.assets.AssetDescriptor:
    java.lang.String fileName -> fileName
    java.lang.Class type -> type
    com.badlogic.gdx.assets.AssetLoaderParameters params -> params
    com.badlogic.gdx.files.FileHandle file -> file
    java.lang.String toString() -> toString
com.badlogic.gdx.assets.AssetErrorListener -> com.badlogic.gdx.assets.AssetErrorListener:
    void error(com.badlogic.gdx.assets.AssetDescriptor,java.lang.Throwable) -> error
com.badlogic.gdx.assets.AssetLoaderParameters -> com.badlogic.gdx.assets.AssetLoaderParameters:
    com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback loadedCallback -> loadedCallback
com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback -> com.badlogic.gdx.assets.AssetLoaderParameters$LoadedCallback:
    void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> finishedLoading
com.badlogic.gdx.assets.AssetLoadingTask -> com.badlogic.gdx.assets.AssetLoadingTask:
    com.badlogic.gdx.assets.AssetManager manager -> manager
    com.badlogic.gdx.assets.AssetDescriptor assetDesc -> assetDesc
    com.badlogic.gdx.assets.loaders.AssetLoader loader -> loader
    com.badlogic.gdx.utils.async.AsyncExecutor executor -> executor
    long startTime -> startTime
    boolean asyncDone -> asyncDone
    boolean dependenciesLoaded -> dependenciesLoaded
    com.badlogic.gdx.utils.Array dependencies -> dependencies
    com.badlogic.gdx.utils.async.AsyncResult depsFuture -> depsFuture
    com.badlogic.gdx.utils.async.AsyncResult loadFuture -> loadFuture
    java.lang.Object asset -> asset
    int ticks -> ticks
    boolean cancel -> cancel
    java.lang.Void call() -> call
    boolean update() -> update
    void handleSyncLoader() -> handleSyncLoader
    void handleAsyncLoader() -> handleAsyncLoader
    com.badlogic.gdx.files.FileHandle resolve(com.badlogic.gdx.assets.loaders.AssetLoader,com.badlogic.gdx.assets.AssetDescriptor) -> resolve
    java.lang.Object getAsset() -> getAsset
    java.lang.Object call() -> call
com.badlogic.gdx.assets.AssetManager -> com.badlogic.gdx.assets.AssetManager:
    com.badlogic.gdx.utils.ObjectMap assets -> assets
    com.badlogic.gdx.utils.ObjectMap assetTypes -> assetTypes
    com.badlogic.gdx.utils.ObjectMap assetDependencies -> assetDependencies
    com.badlogic.gdx.utils.ObjectSet injected -> injected
    com.badlogic.gdx.utils.ObjectMap loaders -> loaders
    com.badlogic.gdx.utils.Array loadQueue -> loadQueue
    com.badlogic.gdx.utils.async.AsyncExecutor executor -> executor
    java.util.Stack tasks -> tasks
    com.badlogic.gdx.assets.AssetErrorListener listener -> listener
    int loaded -> loaded
    int toLoad -> toLoad
    com.badlogic.gdx.utils.Logger log -> log
    java.lang.Object get(java.lang.String) -> get
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    com.badlogic.gdx.utils.Array getAll(java.lang.Class,com.badlogic.gdx.utils.Array) -> getAll
    java.lang.Object get(com.badlogic.gdx.assets.AssetDescriptor) -> get
    void unload(java.lang.String) -> unload
    boolean containsAsset(java.lang.Object) -> containsAsset
    java.lang.String getAssetFileName(java.lang.Object) -> getAssetFileName
    boolean isLoaded(java.lang.String) -> isLoaded
    boolean isLoaded(java.lang.String,java.lang.Class) -> isLoaded
    com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class) -> getLoader
    com.badlogic.gdx.assets.loaders.AssetLoader getLoader(java.lang.Class,java.lang.String) -> getLoader
    void load(java.lang.String,java.lang.Class) -> load
    void load(java.lang.String,java.lang.Class,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    void load(com.badlogic.gdx.assets.AssetDescriptor) -> load
    void disposeDependencies(java.lang.String) -> disposeDependencies
    boolean update() -> update
    boolean update(int) -> update
    void finishLoading() -> finishLoading
    void injectDependencies(java.lang.String,com.badlogic.gdx.utils.Array) -> injectDependencies
    void injectDependency(java.lang.String,com.badlogic.gdx.assets.AssetDescriptor) -> injectDependency
    void nextTask() -> nextTask
    void addTask(com.badlogic.gdx.assets.AssetDescriptor) -> addTask
    void addAsset(java.lang.String,java.lang.Class,java.lang.Object) -> addAsset
    boolean updateTask() -> updateTask
    void incrementRefCountedDependencies(java.lang.String) -> incrementRefCountedDependencies
    void handleTaskError(java.lang.Throwable) -> handleTaskError
    void setLoader(java.lang.Class,com.badlogic.gdx.assets.loaders.AssetLoader) -> setLoader
    void setLoader(java.lang.Class,java.lang.String,com.badlogic.gdx.assets.loaders.AssetLoader) -> setLoader
    int getLoadedAssets() -> getLoadedAssets
    int getQueuedAssets() -> getQueuedAssets
    float getProgress() -> getProgress
    void setErrorListener(com.badlogic.gdx.assets.AssetErrorListener) -> setErrorListener
    void dispose() -> dispose
    void clear() -> clear
    com.badlogic.gdx.utils.Logger getLogger() -> getLogger
    void setLogger(com.badlogic.gdx.utils.Logger) -> setLogger
    int getReferenceCount(java.lang.String) -> getReferenceCount
    void setReferenceCount(java.lang.String,int) -> setReferenceCount
    java.lang.String getDiagnostics() -> getDiagnostics
    com.badlogic.gdx.utils.Array getAssetNames() -> getAssetNames
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String) -> getDependencies
    java.lang.Class getAssetType(java.lang.String) -> getAssetType
com.badlogic.gdx.assets.RefCountedContainer -> com.badlogic.gdx.assets.RefCountedContainer:
    java.lang.Object object -> object
    int refCount -> refCount
    void incRefCount() -> incRefCount
    void decRefCount() -> decRefCount
    int getRefCount() -> getRefCount
    void setRefCount(int) -> setRefCount
    java.lang.Object getObject(java.lang.Class) -> getObject
    void setObject(java.lang.Object) -> setObject
com.badlogic.gdx.assets.loaders.AssetLoader -> com.badlogic.gdx.assets.loaders.AssetLoader:
    com.badlogic.gdx.assets.loaders.FileHandleResolver resolver -> resolver
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader -> com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader:
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
com.badlogic.gdx.assets.loaders.BitmapFontLoader -> com.badlogic.gdx.assets.loaders.BitmapFontLoader:
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> data
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> loadAsync
    com.badlogic.gdx.graphics.g2d.BitmapFont loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter) -> loadSync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter -> com.badlogic.gdx.assets.loaders.BitmapFontLoader$BitmapFontParameter:
    boolean flip -> flip
    boolean genMipMaps -> genMipMaps
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData bitmapFontData -> bitmapFontData
com.badlogic.gdx.assets.loaders.FileHandleResolver -> com.badlogic.gdx.assets.loaders.FileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.I18NBundleLoader -> com.badlogic.gdx.assets.loaders.I18NBundleLoader:
    com.badlogic.gdx.utils.I18NBundle bundle -> bundle
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter) -> loadAsync
    com.badlogic.gdx.utils.I18NBundle loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter -> com.badlogic.gdx.assets.loaders.I18NBundleLoader$I18NBundleParameter:
    java.util.Locale locale -> locale
    java.lang.String encoding -> encoding
com.badlogic.gdx.assets.loaders.ModelLoader -> com.badlogic.gdx.assets.loaders.ModelLoader:
    com.badlogic.gdx.utils.Array items -> items
    com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters defaultParameters -> defaultParameters
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadModelData
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle) -> loadModelData
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.utils.TextureProvider,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadModel
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadModel
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> loadModel
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle) -> loadModel
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadAsync
    com.badlogic.gdx.graphics.g3d.Model loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadSync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters -> com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters:
    com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter textureParameter -> textureParameter
com.badlogic.gdx.assets.loaders.MusicLoader -> com.badlogic.gdx.assets.loaders.MusicLoader:
    com.badlogic.gdx.audio.Music music -> music
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> loadAsync
    com.badlogic.gdx.audio.Music loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter -> com.badlogic.gdx.assets.loaders.MusicLoader$MusicParameter:
com.badlogic.gdx.assets.loaders.ParticleEffectLoader -> com.badlogic.gdx.assets.loaders.ParticleEffectLoader:
    com.badlogic.gdx.graphics.g2d.ParticleEffect load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter) -> getDependencies
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter -> com.badlogic.gdx.assets.loaders.ParticleEffectLoader$ParticleEffectParameter:
    java.lang.String atlasFile -> atlasFile
    java.lang.String atlasPrefix -> atlasPrefix
    com.badlogic.gdx.files.FileHandle imagesDir -> imagesDir
com.badlogic.gdx.assets.loaders.PixmapLoader -> com.badlogic.gdx.assets.loaders.PixmapLoader:
    com.badlogic.gdx.graphics.Pixmap pixmap -> pixmap
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> loadAsync
    com.badlogic.gdx.graphics.Pixmap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter -> com.badlogic.gdx.assets.loaders.PixmapLoader$PixmapParameter:
com.badlogic.gdx.assets.loaders.SkinLoader -> com.badlogic.gdx.assets.loaders.SkinLoader:
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> getDependencies
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> loadAsync
    com.badlogic.gdx.scenes.scene2d.ui.Skin loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter) -> loadSync
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter -> com.badlogic.gdx.assets.loaders.SkinLoader$SkinParameter:
    java.lang.String textureAtlasPath -> textureAtlasPath
    com.badlogic.gdx.utils.ObjectMap resources -> resources
com.badlogic.gdx.assets.loaders.SoundLoader -> com.badlogic.gdx.assets.loaders.SoundLoader:
    com.badlogic.gdx.audio.Sound sound -> sound
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> loadAsync
    com.badlogic.gdx.audio.Sound loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter -> com.badlogic.gdx.assets.loaders.SoundLoader$SoundParameter:
com.badlogic.gdx.assets.loaders.SynchronousAssetLoader -> com.badlogic.gdx.assets.loaders.SynchronousAssetLoader:
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
com.badlogic.gdx.assets.loaders.TextureAtlasLoader -> com.badlogic.gdx.assets.loaders.TextureAtlasLoader:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData data -> data
    com.badlogic.gdx.graphics.g2d.TextureAtlas load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter) -> getDependencies
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter -> com.badlogic.gdx.assets.loaders.TextureAtlasLoader$TextureAtlasParameter:
    boolean flip -> flip
com.badlogic.gdx.assets.loaders.TextureLoader -> com.badlogic.gdx.assets.loaders.TextureLoader:
    com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo info -> info
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> loadAsync
    com.badlogic.gdx.graphics.Texture loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter) -> getDependencies
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo -> com.badlogic.gdx.assets.loaders.TextureLoader$TextureLoaderInfo:
    java.lang.String filename -> filename
    com.badlogic.gdx.graphics.TextureData data -> data
    com.badlogic.gdx.graphics.Texture texture -> texture
com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter -> com.badlogic.gdx.assets.loaders.TextureLoader$TextureParameter:
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    boolean genMipMaps -> genMipMaps
    com.badlogic.gdx.graphics.Texture texture -> texture
    com.badlogic.gdx.graphics.TextureData textureData -> textureData
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapU -> wrapU
    com.badlogic.gdx.graphics.Texture$TextureWrap wrapV -> wrapV
com.badlogic.gdx.assets.loaders.resolvers.AbsoluteFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.AbsoluteFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.ExternalFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.InternalFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.LocalFileHandleResolver -> com.badlogic.gdx.assets.loaders.resolvers.LocalFileHandleResolver:
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver -> com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver:
    com.badlogic.gdx.assets.loaders.FileHandleResolver baseResolver -> baseResolver
    com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[] descriptors -> descriptors
    com.badlogic.gdx.files.FileHandle resolve(java.lang.String) -> resolve
    java.lang.String resolve(com.badlogic.gdx.files.FileHandle,java.lang.String) -> resolve
    com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution choose(com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution[]) -> choose
com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution -> com.badlogic.gdx.assets.loaders.resolvers.ResolutionFileResolver$Resolution:
    int portraitWidth -> portraitWidth
    int portraitHeight -> portraitHeight
    java.lang.String suffix -> suffix
com.badlogic.gdx.audio.AudioDevice -> com.badlogic.gdx.audio.AudioDevice:
    boolean isMono() -> isMono
    void writeSamples(short[],int,int) -> writeSamples
    void writeSamples(float[],int,int) -> writeSamples
    int getLatency() -> getLatency
    void dispose() -> dispose
    void setVolume(float) -> setVolume
com.badlogic.gdx.audio.AudioRecorder -> com.badlogic.gdx.audio.AudioRecorder:
    void read(short[],int,int) -> read
    void dispose() -> dispose
com.badlogic.gdx.audio.Music -> com.badlogic.gdx.audio.Music:
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    boolean isPlaying() -> isPlaying
    void setLooping(boolean) -> setLooping
    boolean isLooping() -> isLooping
    void setVolume(float) -> setVolume
    float getVolume() -> getVolume
    void setPan(float,float) -> setPan
    float getPosition() -> getPosition
    void dispose() -> dispose
    void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener) -> setOnCompletionListener
com.badlogic.gdx.audio.Music$OnCompletionListener -> com.badlogic.gdx.audio.Music$OnCompletionListener:
    void onCompletion(com.badlogic.gdx.audio.Music) -> onCompletion
com.badlogic.gdx.audio.Sound -> com.badlogic.gdx.audio.Sound:
    long play() -> play
    long play(float) -> play
    long play(float,float,float) -> play
    long loop() -> loop
    long loop(float) -> loop
    long loop(float,float,float) -> loop
    void stop() -> stop
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
    void stop(long) -> stop
    void pause(long) -> pause
    void resume(long) -> resume
    void setLooping(long,boolean) -> setLooping
    void setPitch(long,float) -> setPitch
    void setVolume(long,float) -> setVolume
    void setPan(long,float,float) -> setPan
    void setPriority(long,int) -> setPriority
com.badlogic.gdx.backends.android.AndroidApplication -> com.badlogic.gdx.backends.android.AndroidApplication:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    boolean useImmersiveMode -> useImmersiveMode
    boolean hideStatusBar -> hideStatusBar
    int wasFocusChanged -> wasFocusChanged
    boolean isWaitingForAudio -> isWaitingForAudio
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean) -> init
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(boolean) -> createWakeLock
    void hideStatusBar(boolean) -> hideStatusBar
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void useImmersiveMode(boolean) -> useImmersiveMode
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.os.Handler getHandler() -> getHandler
    com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidApplication$1 -> com.badlogic.gdx.backends.android.AndroidApplication$1:
    com.badlogic.gdx.backends.android.AndroidApplication this$0 -> this$0
    void resume() -> resume
    void pause() -> pause
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidApplication$2 -> com.badlogic.gdx.backends.android.AndroidApplication$2:
    com.badlogic.gdx.backends.android.AndroidApplication this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidApplicationBase -> com.badlogic.gdx.backends.android.AndroidApplicationBase:
    int MINIMUM_SDK -> MINIMUM_SDK
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void startActivity(android.content.Intent) -> startActivity
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.view.WindowManager getWindowManager() -> getWindowManager
    void useImmersiveMode(boolean) -> useImmersiveMode
    android.os.Handler getHandler() -> getHandler
com.badlogic.gdx.backends.android.AndroidApplicationConfiguration -> com.badlogic.gdx.backends.android.AndroidApplicationConfiguration:
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    int depth -> depth
    int stencil -> stencil
    int numSamples -> numSamples
    boolean useAccelerometer -> useAccelerometer
    boolean useCompass -> useCompass
    int touchSleepTime -> touchSleepTime
    boolean useWakelock -> useWakelock
    boolean hideStatusBar -> hideStatusBar
    boolean disableAudio -> disableAudio
    int maxSimultaneousSounds -> maxSimultaneousSounds
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    boolean getTouchEventsForLiveWallpaper -> getTouchEventsForLiveWallpaper
    boolean useImmersiveMode -> useImmersiveMode
    boolean useGLSurfaceView20API18 -> useGLSurfaceView20API18
com.badlogic.gdx.backends.android.AndroidAudio -> com.badlogic.gdx.backends.android.AndroidAudio:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    java.util.List musics -> musics
    void pause() -> pause
    void resume() -> resume
    com.badlogic.gdx.audio.AudioDevice newAudioDevice(int,boolean) -> newAudioDevice
    com.badlogic.gdx.audio.Music newMusic(com.badlogic.gdx.files.FileHandle) -> newMusic
    com.badlogic.gdx.audio.Sound newSound(com.badlogic.gdx.files.FileHandle) -> newSound
    com.badlogic.gdx.audio.AudioRecorder newAudioRecorder(int,boolean) -> newAudioRecorder
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidAudioDevice -> com.badlogic.gdx.backends.android.AndroidAudioDevice:
    android.media.AudioTrack track -> track
    short[] buffer -> buffer
    boolean isMono -> isMono
    int latency -> latency
    void dispose() -> dispose
    boolean isMono() -> isMono
    void writeSamples(short[],int,int) -> writeSamples
    void writeSamples(float[],int,int) -> writeSamples
    int getLatency() -> getLatency
    void setVolume(float) -> setVolume
com.badlogic.gdx.backends.android.AndroidAudioRecorder -> com.badlogic.gdx.backends.android.AndroidAudioRecorder:
    android.media.AudioRecord recorder -> recorder
    void dispose() -> dispose
    void read(short[],int,int) -> read
com.badlogic.gdx.backends.android.AndroidClipboard -> com.badlogic.gdx.backends.android.AndroidClipboard:
    android.content.Context context -> context
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
com.badlogic.gdx.backends.android.AndroidClipboard$1 -> com.badlogic.gdx.backends.android.AndroidClipboard$1:
    java.lang.String val$contents -> val$contents
    com.badlogic.gdx.backends.android.AndroidClipboard this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidDaydream -> com.badlogic.gdx.backends.android.AndroidDaydream:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void init(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,boolean) -> init
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(boolean) -> createWakeLock
    void hideStatusBar(com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> hideStatusBar
    void onDreamingStopped() -> onDreamingStopped
    void onDreamingStarted() -> onDreamingStarted
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.os.Handler getHandler() -> getHandler
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void useImmersiveMode(boolean) -> useImmersiveMode
    com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidDaydream$1 -> com.badlogic.gdx.backends.android.AndroidDaydream$1:
    com.badlogic.gdx.backends.android.AndroidDaydream this$0 -> this$0
    void resume() -> resume
    void pause() -> pause
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidDaydream$2 -> com.badlogic.gdx.backends.android.AndroidDaydream$2:
    com.badlogic.gdx.backends.android.AndroidDaydream this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidFileHandle -> com.badlogic.gdx.backends.android.AndroidFileHandle:
    android.content.res.AssetManager assets -> assets
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    java.io.InputStream read() -> read
    com.badlogic.gdx.files.FileHandle[] list() -> list
    com.badlogic.gdx.files.FileHandle[] list(java.io.FileFilter) -> list
    com.badlogic.gdx.files.FileHandle[] list(java.io.FilenameFilter) -> list
    com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    boolean isDirectory() -> isDirectory
    boolean exists() -> exists
    long length() -> length
    long lastModified() -> lastModified
    java.io.File file() -> file
com.badlogic.gdx.backends.android.AndroidFiles -> com.badlogic.gdx.backends.android.AndroidFiles:
    java.lang.String sdcard -> sdcard
    java.lang.String localpath -> localpath
    android.content.res.AssetManager assets -> assets
    com.badlogic.gdx.files.FileHandle getFileHandle(java.lang.String,com.badlogic.gdx.Files$FileType) -> getFileHandle
    com.badlogic.gdx.files.FileHandle classpath(java.lang.String) -> classpath
    com.badlogic.gdx.files.FileHandle internal(java.lang.String) -> internal
    com.badlogic.gdx.files.FileHandle external(java.lang.String) -> external
    com.badlogic.gdx.files.FileHandle absolute(java.lang.String) -> absolute
    com.badlogic.gdx.files.FileHandle local(java.lang.String) -> local
    java.lang.String getExternalStoragePath() -> getExternalStoragePath
    boolean isExternalStorageAvailable() -> isExternalStorageAvailable
    java.lang.String getLocalStoragePath() -> getLocalStoragePath
    boolean isLocalStorageAvailable() -> isLocalStorageAvailable
com.badlogic.gdx.backends.android.AndroidFragmentApplication -> com.badlogic.gdx.backends.android.AndroidFragmentApplication:
    com.badlogic.gdx.backends.android.AndroidGraphics graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    android.os.Handler handler -> handler
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks callbacks -> callbacks
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    android.widget.FrameLayout$LayoutParams createLayoutParams() -> createLayoutParams
    void createWakeLock(boolean) -> createWakeLock
    void useImmersiveMode(boolean) -> useImmersiveMode
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener) -> initializeForView
    android.view.View initializeForView(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initializeForView
    void onPause() -> onPause
    void onResume() -> onResume
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void postRunnable(java.lang.Runnable) -> postRunnable
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void exit() -> exit
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.os.Handler getHandler() -> getHandler
    android.view.WindowManager getWindowManager() -> getWindowManager
    com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidFragmentApplication$1 -> com.badlogic.gdx.backends.android.AndroidFragmentApplication$1:
    com.badlogic.gdx.backends.android.AndroidFragmentApplication this$0 -> this$0
    void resume() -> resume
    void pause() -> pause
    void dispose() -> dispose
com.badlogic.gdx.backends.android.AndroidFragmentApplication$2 -> com.badlogic.gdx.backends.android.AndroidFragmentApplication$2:
    com.badlogic.gdx.backends.android.AndroidFragmentApplication this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks -> com.badlogic.gdx.backends.android.AndroidFragmentApplication$Callbacks:
    void exit() -> exit
com.badlogic.gdx.backends.android.AndroidGL20 -> com.badlogic.gdx.backends.android.AndroidGL20:
    void init() -> init
    void glActiveTexture(int) -> glActiveTexture
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBindTexture(int,int) -> glBindTexture
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFunc(int,int) -> glBlendFunc
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompileShader(int) -> glCompileShader
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glCullFace(int) -> glCullFace
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDetachShader(int,int) -> glDetachShader
    void glDisable(int) -> glDisable
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glFrontFace(int) -> glFrontFace
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    int glGetError() -> glGetError
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetShaderSource(int,int,java.nio.Buffer,java.lang.String) -> glGetShaderSource
    java.lang.String glGetString(int) -> glGetString
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    void glHint(int,int) -> glHint
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLineWidth(float) -> glLineWidth
    void glLinkProgram(int) -> glLinkProgram
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glScissor(int,int,int,int) -> glScissor
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMask(int) -> glStencilMask
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOp(int,int,int) -> glStencilOp
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    void glViewport(int,int,int,int) -> glViewport
com.badlogic.gdx.backends.android.AndroidGL30 -> com.badlogic.gdx.backends.android.AndroidGL30:
    void glReadBuffer(int) -> glReadBuffer
    void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer) -> glDrawRangeElements
    void glDrawRangeElements(int,int,int,int,int,int) -> glDrawRangeElements
    void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage3D
    void glTexImage3D(int,int,int,int,int,int,int,int,int,int) -> glTexImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int) -> glTexSubImage3D
    void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int) -> glCopyTexSubImage3D
    void glGenQueries(int,int[],int) -> glGenQueries
    void glGenQueries(int,java.nio.IntBuffer) -> glGenQueries
    void glDeleteQueries(int,int[],int) -> glDeleteQueries
    void glDeleteQueries(int,java.nio.IntBuffer) -> glDeleteQueries
    boolean glIsQuery(int) -> glIsQuery
    void glBeginQuery(int,int) -> glBeginQuery
    void glEndQuery(int) -> glEndQuery
    void glGetQueryiv(int,int,java.nio.IntBuffer) -> glGetQueryiv
    void glGetQueryObjectuiv(int,int,java.nio.IntBuffer) -> glGetQueryObjectuiv
    boolean glUnmapBuffer(int) -> glUnmapBuffer
    java.nio.Buffer glGetBufferPointerv(int,int) -> glGetBufferPointerv
    void glDrawBuffers(int,java.nio.IntBuffer) -> glDrawBuffers
    void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x3fv
    void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x2fv
    void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x4fv
    void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x2fv
    void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x4fv
    void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x3fv
    void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int) -> glBlitFramebuffer
    void glRenderbufferStorageMultisample(int,int,int,int,int) -> glRenderbufferStorageMultisample
    void glFramebufferTextureLayer(int,int,int,int,int) -> glFramebufferTextureLayer
    void glFlushMappedBufferRange(int,int,int) -> glFlushMappedBufferRange
    void glBindVertexArray(int) -> glBindVertexArray
    void glDeleteVertexArrays(int,int[],int) -> glDeleteVertexArrays
    void glDeleteVertexArrays(int,java.nio.IntBuffer) -> glDeleteVertexArrays
    void glGenVertexArrays(int,int[],int) -> glGenVertexArrays
    void glGenVertexArrays(int,java.nio.IntBuffer) -> glGenVertexArrays
    boolean glIsVertexArray(int) -> glIsVertexArray
    void glBeginTransformFeedback(int) -> glBeginTransformFeedback
    void glEndTransformFeedback() -> glEndTransformFeedback
    void glBindBufferRange(int,int,int,int,int) -> glBindBufferRange
    void glBindBufferBase(int,int,int) -> glBindBufferBase
    void glTransformFeedbackVaryings(int,java.lang.String[],int) -> glTransformFeedbackVaryings
    void glVertexAttribIPointer(int,int,int,int,int) -> glVertexAttribIPointer
    void glGetVertexAttribIiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIiv
    void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIuiv
    void glVertexAttribI4i(int,int,int,int,int) -> glVertexAttribI4i
    void glVertexAttribI4ui(int,int,int,int,int) -> glVertexAttribI4ui
    void glGetUniformuiv(int,int,java.nio.IntBuffer) -> glGetUniformuiv
    int glGetFragDataLocation(int,java.lang.String) -> glGetFragDataLocation
    void glUniform1uiv(int,int,java.nio.IntBuffer) -> glUniform1uiv
    void glUniform3uiv(int,int,java.nio.IntBuffer) -> glUniform3uiv
    void glUniform4uiv(int,int,java.nio.IntBuffer) -> glUniform4uiv
    void glClearBufferiv(int,int,java.nio.IntBuffer) -> glClearBufferiv
    void glClearBufferuiv(int,int,java.nio.IntBuffer) -> glClearBufferuiv
    void glClearBufferfv(int,int,java.nio.FloatBuffer) -> glClearBufferfv
    void glClearBufferfi(int,int,float,int) -> glClearBufferfi
    java.lang.String glGetStringi(int,int) -> glGetStringi
    void glCopyBufferSubData(int,int,int,int,int) -> glCopyBufferSubData
    void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer) -> glGetUniformIndices
    void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer) -> glGetActiveUniformsiv
    int glGetUniformBlockIndex(int,java.lang.String) -> glGetUniformBlockIndex
    void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer) -> glGetActiveUniformBlockiv
    void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer) -> glGetActiveUniformBlockName
    java.lang.String glGetActiveUniformBlockName(int,int) -> glGetActiveUniformBlockName
    void glUniformBlockBinding(int,int,int) -> glUniformBlockBinding
    void glDrawArraysInstanced(int,int,int,int) -> glDrawArraysInstanced
    void glDrawElementsInstanced(int,int,int,int,int) -> glDrawElementsInstanced
    void glGetInteger64v(int,java.nio.LongBuffer) -> glGetInteger64v
    void glGetBufferParameteri64v(int,int,java.nio.LongBuffer) -> glGetBufferParameteri64v
    void glGenSamplers(int,int[],int) -> glGenSamplers
    void glGenSamplers(int,java.nio.IntBuffer) -> glGenSamplers
    void glDeleteSamplers(int,int[],int) -> glDeleteSamplers
    void glDeleteSamplers(int,java.nio.IntBuffer) -> glDeleteSamplers
    boolean glIsSampler(int) -> glIsSampler
    void glBindSampler(int,int) -> glBindSampler
    void glSamplerParameteri(int,int,int) -> glSamplerParameteri
    void glSamplerParameteriv(int,int,java.nio.IntBuffer) -> glSamplerParameteriv
    void glSamplerParameterf(int,int,float) -> glSamplerParameterf
    void glSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glSamplerParameterfv
    void glGetSamplerParameteriv(int,int,java.nio.IntBuffer) -> glGetSamplerParameteriv
    void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glGetSamplerParameterfv
    void glVertexAttribDivisor(int,int) -> glVertexAttribDivisor
    void glBindTransformFeedback(int,int) -> glBindTransformFeedback
    void glDeleteTransformFeedbacks(int,int[],int) -> glDeleteTransformFeedbacks
    void glDeleteTransformFeedbacks(int,java.nio.IntBuffer) -> glDeleteTransformFeedbacks
    void glGenTransformFeedbacks(int,int[],int) -> glGenTransformFeedbacks
    void glGenTransformFeedbacks(int,java.nio.IntBuffer) -> glGenTransformFeedbacks
    boolean glIsTransformFeedback(int) -> glIsTransformFeedback
    void glPauseTransformFeedback() -> glPauseTransformFeedback
    void glResumeTransformFeedback() -> glResumeTransformFeedback
    void glProgramParameteri(int,int,int) -> glProgramParameteri
    void glInvalidateFramebuffer(int,int,java.nio.IntBuffer) -> glInvalidateFramebuffer
    void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int) -> glInvalidateSubFramebuffer
com.badlogic.gdx.backends.android.AndroidGraphics -> com.badlogic.gdx.backends.android.AndroidGraphics:
    java.lang.String LOG_TAG -> LOG_TAG
    android.view.View view -> view
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.AndroidApplicationBase app -> app
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    com.badlogic.gdx.graphics.GL30 gl30 -> gl30
    javax.microedition.khronos.egl.EGLContext eglContext -> eglContext
    java.lang.String extensions -> extensions
    long lastFrameTime -> lastFrameTime
    float deltaTime -> deltaTime
    long frameStart -> frameStart
    int frames -> frames
    int fps -> fps
    com.badlogic.gdx.math.WindowedMean mean -> mean
    boolean created -> created
    boolean running -> running
    boolean pause -> pause
    boolean resume -> resume
    boolean destroy -> destroy
    float ppiX -> ppiX
    float ppiY -> ppiY
    float ppcX -> ppcX
    float ppcY -> ppcY
    float density -> density
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Graphics$BufferFormat bufferFormat -> bufferFormat
    boolean isContinuous -> isContinuous
    int[] value -> value
    java.lang.Object synch -> synch
    void preserveEGLContextOnPause() -> preserveEGLContextOnPause
    android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    void onPauseGLSurfaceView() -> onPauseGLSurfaceView
    void onResumeGLSurfaceView() -> onResumeGLSurfaceView
    android.opengl.GLSurfaceView$EGLConfigChooser getEglConfigChooser() -> getEglConfigChooser
    void updatePpi() -> updatePpi
    boolean checkGL20() -> checkGL20
    com.badlogic.gdx.graphics.GL20 getGL20() -> getGL20
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    void setupGL(javax.microedition.khronos.opengles.GL10) -> setupGL
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void logConfig(javax.microedition.khronos.egl.EGLConfig) -> logConfig
    int getAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> getAttrib
    void resume() -> resume
    void pause() -> pause
    void destroy() -> destroy
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    float getDeltaTime() -> getDeltaTime
    float getRawDeltaTime() -> getRawDeltaTime
    com.badlogic.gdx.Graphics$GraphicsType getType() -> getType
    int getFramesPerSecond() -> getFramesPerSecond
    void clearManagedCaches() -> clearManagedCaches
    void logManagedCachesStatus() -> logManagedCachesStatus
    android.view.View getView() -> getView
    float getPpiX() -> getPpiX
    float getPpiY() -> getPpiY
    float getPpcX() -> getPpcX
    float getPpcY() -> getPpcY
    float getDensity() -> getDensity
    boolean supportsDisplayModeChange() -> supportsDisplayModeChange
    boolean setDisplayMode(com.badlogic.gdx.Graphics$DisplayMode) -> setDisplayMode
    com.badlogic.gdx.Graphics$DisplayMode[] getDisplayModes() -> getDisplayModes
    boolean setDisplayMode(int,int,boolean) -> setDisplayMode
    void setTitle(java.lang.String) -> setTitle
    com.badlogic.gdx.Graphics$DisplayMode getDesktopDisplayMode() -> getDesktopDisplayMode
    com.badlogic.gdx.Graphics$BufferFormat getBufferFormat() -> getBufferFormat
    void setVSync(boolean) -> setVSync
    boolean supportsExtension(java.lang.String) -> supportsExtension
    void setContinuousRendering(boolean) -> setContinuousRendering
    boolean isContinuousRendering() -> isContinuousRendering
    void requestRendering() -> requestRendering
    boolean isFullscreen() -> isFullscreen
    boolean isGL30Available() -> isGL30Available
    com.badlogic.gdx.graphics.GL30 getGL30() -> getGL30
com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode -> com.badlogic.gdx.backends.android.AndroidGraphics$AndroidDisplayMode:
    com.badlogic.gdx.backends.android.AndroidGraphics this$0 -> this$0
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper:
    android.view.SurfaceHolder getSurfaceHolder() -> getSurfaceHolder
    android.view.View createGLSurfaceView(com.badlogic.gdx.backends.android.AndroidApplicationBase,com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy) -> createGLSurfaceView
    void onDestroyGLSurfaceView() -> onDestroyGLSurfaceView
    void resume() -> resume
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void logManagedCachesStatus() -> logManagedCachesStatus
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1 -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$1:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
    android.view.SurfaceHolder getHolder() -> getHolder
    void onDestroy() -> onDestroy
com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2 -> com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper$2:
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper this$0 -> this$0
    android.view.SurfaceHolder getHolder() -> getHolder
    void onDestroy() -> onDestroy
com.badlogic.gdx.backends.android.AndroidInput -> com.badlogic.gdx.backends.android.AndroidInput:
    com.badlogic.gdx.utils.Pool usedKeyEvents -> usedKeyEvents
    com.badlogic.gdx.utils.Pool usedTouchEvents -> usedTouchEvents
    int NUM_TOUCHES -> NUM_TOUCHES
    java.util.ArrayList keyListeners -> keyListeners
    java.util.ArrayList keyEvents -> keyEvents
    java.util.ArrayList touchEvents -> touchEvents
    int[] touchX -> touchX
    int[] touchY -> touchY
    int[] deltaX -> deltaX
    int[] deltaY -> deltaY
    boolean[] touched -> touched
    int[] realId -> realId
    boolean hasMultitouch -> hasMultitouch
    com.badlogic.gdx.utils.IntMap keys -> keys
    android.hardware.SensorManager manager -> manager
    boolean accelerometerAvailable -> accelerometerAvailable
    float[] accelerometerValues -> accelerometerValues
    java.lang.String text -> text
    com.badlogic.gdx.Input$TextInputListener textListener -> textListener
    android.os.Handler handle -> handle
    com.badlogic.gdx.Application app -> app
    android.content.Context context -> context
    com.badlogic.gdx.backends.android.AndroidTouchHandler touchHandler -> touchHandler
    int sleepTime -> sleepTime
    boolean catchBack -> catchBack
    boolean catchMenu -> catchMenu
    android.os.Vibrator vibrator -> vibrator
    boolean compassAvailable -> compassAvailable
    boolean keyboardAvailable -> keyboardAvailable
    float[] magneticFieldValues -> magneticFieldValues
    float azimuth -> azimuth
    float pitch -> pitch
    float roll -> roll
    float inclination -> inclination
    boolean justTouched -> justTouched
    com.badlogic.gdx.InputProcessor processor -> processor
    com.badlogic.gdx.backends.android.AndroidApplicationConfiguration config -> config
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    long currentEventTimeStamp -> currentEventTimeStamp
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard onscreenKeyboard -> onscreenKeyboard
    android.hardware.SensorEventListener accelerometerListener -> accelerometerListener
    android.hardware.SensorEventListener compassListener -> compassListener
    boolean requestFocus -> requestFocus
    float[] R -> R
    float[] orientation -> orientation
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    int getX() -> getX
    int getY() -> getY
    int getX(int) -> getX
    int getY(int) -> getY
    boolean isTouched(int) -> isTouched
    boolean isKeyPressed(int) -> isKeyPressed
    boolean isTouched() -> isTouched
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    void processEvents() -> processEvents
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onTap(int,int) -> onTap
    void onDrop(int,int) -> onDrop
    void postTap(int,int) -> postTap
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    boolean justTouched() -> justTouched
    boolean isButtonPressed(int) -> isButtonPressed
    void updateOrientation() -> updateOrientation
    void getRotationMatrix(float[]) -> getRotationMatrix
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void registerSensorListeners() -> registerSensorListeners
    void unregisterSensorListeners() -> unregisterSensorListeners
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getFreePointerIndex() -> getFreePointerIndex
    int[] resize(int[]) -> resize
    boolean[] resize(boolean[]) -> resize
    int lookUpPointerIndex(int) -> lookUpPointerIndex
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    void setCursorPosition(int,int) -> setCursorPosition
    void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int) -> setCursorImage
    long getCurrentEventTime() -> getCurrentEventTime
    void addKeyListener(android.view.View$OnKeyListener) -> addKeyListener
com.badlogic.gdx.backends.android.AndroidInput$1 -> com.badlogic.gdx.backends.android.AndroidInput$1:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    com.badlogic.gdx.backends.android.AndroidInput$KeyEvent newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$2 -> com.badlogic.gdx.backends.android.AndroidInput$2:
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    com.badlogic.gdx.backends.android.AndroidInput$TouchEvent newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.backends.android.AndroidInput$3 -> com.badlogic.gdx.backends.android.AndroidInput$3:
    java.lang.String val$title -> val$title
    java.lang.String val$text -> val$text
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$1 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$2 -> com.badlogic.gdx.backends.android.AndroidInput$3$2:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$3$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$2 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$3$3 -> com.badlogic.gdx.backends.android.AndroidInput$3$3:
    com.badlogic.gdx.backends.android.AndroidInput$3 this$1 -> this$1
    void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$3$3$1 -> com.badlogic.gdx.backends.android.AndroidInput$3$3$1:
    com.badlogic.gdx.backends.android.AndroidInput$3$3 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4 -> com.badlogic.gdx.backends.android.AndroidInput$4:
    java.lang.String val$title -> val$title
    java.lang.String val$placeholder -> val$placeholder
    com.badlogic.gdx.Input$TextInputListener val$listener -> val$listener
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1:
    android.widget.EditText val$input -> val$input
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    void onClick(android.content.DialogInterface,int) -> onClick
com.badlogic.gdx.backends.android.AndroidInput$4$1$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$1$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$1 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$4$2 -> com.badlogic.gdx.backends.android.AndroidInput$4$2:
    com.badlogic.gdx.backends.android.AndroidInput$4 this$1 -> this$1
    void onCancel(android.content.DialogInterface) -> onCancel
com.badlogic.gdx.backends.android.AndroidInput$4$2$1 -> com.badlogic.gdx.backends.android.AndroidInput$4$2$1:
    com.badlogic.gdx.backends.android.AndroidInput$4$2 this$2 -> this$2
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$5 -> com.badlogic.gdx.backends.android.AndroidInput$5:
    boolean val$visible -> val$visible
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidInput$KeyEvent -> com.badlogic.gdx.backends.android.AndroidInput$KeyEvent:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    long timeStamp -> timeStamp
    int type -> type
    int keyCode -> keyCode
    char keyChar -> keyChar
com.badlogic.gdx.backends.android.AndroidInput$SensorListener -> com.badlogic.gdx.backends.android.AndroidInput$SensorListener:
    float[] accelerometerValues -> accelerometerValues
    float[] magneticFieldValues -> magneticFieldValues
    com.badlogic.gdx.Input$Orientation nativeOrientation -> nativeOrientation
    com.badlogic.gdx.backends.android.AndroidInput this$0 -> this$0
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.badlogic.gdx.backends.android.AndroidInput$TouchEvent -> com.badlogic.gdx.backends.android.AndroidInput$TouchEvent:
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    long timeStamp -> timeStamp
    int type -> type
    int x -> x
    int y -> y
    int pointer -> pointer
com.badlogic.gdx.backends.android.AndroidInputFactory -> com.badlogic.gdx.backends.android.AndroidInputFactory:
    com.badlogic.gdx.backends.android.AndroidInput newAndroidInput(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> newAndroidInput
com.badlogic.gdx.backends.android.AndroidInputThreePlus -> com.badlogic.gdx.backends.android.AndroidInputThreePlus:
    java.util.ArrayList genericMotionListeners -> genericMotionListeners
    boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
    void addGenericMotionListener(android.view.View$OnGenericMotionListener) -> addGenericMotionListener
com.badlogic.gdx.backends.android.AndroidLiveWallpaper -> com.badlogic.gdx.backends.android.AndroidLiveWallpaper:
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService service -> service
    com.badlogic.gdx.backends.android.AndroidGraphicsLiveWallpaper graphics -> graphics
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    com.badlogic.gdx.backends.android.AndroidFiles files -> files
    com.badlogic.gdx.backends.android.AndroidNet net -> net
    com.badlogic.gdx.ApplicationListener listener -> listener
    boolean firstResume -> firstResume
    com.badlogic.gdx.utils.Array runnables -> runnables
    com.badlogic.gdx.utils.Array executedRunnables -> executedRunnables
    com.badlogic.gdx.utils.Array lifecycleListeners -> lifecycleListeners
    int logLevel -> logLevel
    com.badlogic.gdx.backends.android.AndroidClipboard clipboard -> clipboard
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    android.view.WindowManager getWindowManager() -> getWindowManager
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService getService() -> getService
    com.badlogic.gdx.ApplicationListener getApplicationListener() -> getApplicationListener
    void postRunnable(java.lang.Runnable) -> postRunnable
    com.badlogic.gdx.Audio getAudio() -> getAudio
    com.badlogic.gdx.Files getFiles() -> getFiles
    com.badlogic.gdx.Graphics getGraphics() -> getGraphics
    com.badlogic.gdx.backends.android.AndroidInput getInput() -> getInput
    com.badlogic.gdx.Net getNet() -> getNet
    com.badlogic.gdx.Application$ApplicationType getType() -> getType
    int getVersion() -> getVersion
    long getJavaHeap() -> getJavaHeap
    long getNativeHeap() -> getNativeHeap
    com.badlogic.gdx.Preferences getPreferences(java.lang.String) -> getPreferences
    com.badlogic.gdx.utils.Clipboard getClipboard() -> getClipboard
    void debug(java.lang.String,java.lang.String) -> debug
    void debug(java.lang.String,java.lang.String,java.lang.Throwable) -> debug
    void log(java.lang.String,java.lang.String) -> log
    void log(java.lang.String,java.lang.String,java.lang.Throwable) -> log
    void error(java.lang.String,java.lang.String) -> error
    void error(java.lang.String,java.lang.String,java.lang.Throwable) -> error
    void setLogLevel(int) -> setLogLevel
    int getLogLevel() -> getLogLevel
    void exit() -> exit
    void addLifecycleListener(com.badlogic.gdx.LifecycleListener) -> addLifecycleListener
    void removeLifecycleListener(com.badlogic.gdx.LifecycleListener) -> removeLifecycleListener
    android.content.Context getContext() -> getContext
    com.badlogic.gdx.utils.Array getRunnables() -> getRunnables
    com.badlogic.gdx.utils.Array getExecutedRunnables() -> getExecutedRunnables
    com.badlogic.gdx.utils.Array getLifecycleListeners() -> getLifecycleListeners
    void startActivity(android.content.Intent) -> startActivity
    android.view.Window getApplicationWindow() -> getApplicationWindow
    android.os.Handler getHandler() -> getHandler
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void useImmersiveMode(boolean) -> useImmersiveMode
    com.badlogic.gdx.Input getInput() -> getInput
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper app -> app
    android.view.SurfaceHolder$Callback view -> view
    int viewFormat -> viewFormat
    int viewWidth -> viewWidth
    int viewHeight -> viewHeight
    int engines -> engines
    int visibleEngines -> visibleEngines
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine linkedEngine -> linkedEngine
    boolean isPreviewNotified -> isPreviewNotified
    boolean notifiedPreviewState -> notifiedPreviewState
    int[] sync -> sync
    void setLinkedEngine(com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine) -> setLinkedEngine
    void onCreate() -> onCreate
    android.service.wallpaper.WallpaperService$Engine onCreateEngine() -> onCreateEngine
    void onCreateApplication() -> onCreateApplication
    void initialize(com.badlogic.gdx.ApplicationListener) -> initialize
    void initialize(com.badlogic.gdx.ApplicationListener,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration) -> initialize
    android.view.SurfaceHolder getSurfaceHolder() -> getSurfaceHolder
    void onDeepPauseApplication() -> onDeepPauseApplication
    void onDestroy() -> onDestroy
    void finalize() -> finalize
    com.badlogic.gdx.backends.android.AndroidLiveWallpaper getLiveWallpaper() -> getLiveWallpaper
    android.view.WindowManager getWindowManager() -> getWindowManager
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine:
    boolean engineIsVisible -> engineIsVisible
    int engineFormat -> engineFormat
    int engineWidth -> engineWidth
    int engineHeight -> engineHeight
    boolean offsetsConsumed -> offsetsConsumed
    float xOffset -> xOffset
    float yOffset -> yOffset
    float xOffsetStep -> xOffsetStep
    float yOffsetStep -> yOffsetStep
    int xPixelOffset -> xPixelOffset
    int yPixelOffset -> yPixelOffset
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService this$0 -> this$0
    void onCreate(android.view.SurfaceHolder) -> onCreate
    void onSurfaceCreated(android.view.SurfaceHolder) -> onSurfaceCreated
    void onSurfaceChanged(android.view.SurfaceHolder,int,int,int) -> onSurfaceChanged
    void notifySurfaceChanged(int,int,int,boolean) -> notifySurfaceChanged
    void onVisibilityChanged(boolean) -> onVisibilityChanged
    void notifyVisibilityChanged(boolean) -> notifyVisibilityChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void onSurfaceDestroyed(android.view.SurfaceHolder) -> onSurfaceDestroyed
    void onDestroy() -> onDestroy
    android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean) -> onCommand
    void onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onOffsetsChanged(float,float,float,float,int,int) -> onOffsetsChanged
    void notifyOffsetsChanged() -> notifyOffsetsChanged
    void notifyPreviewState() -> notifyPreviewState
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1 -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$1:
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2 -> com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine$2:
    boolean val$currentPreviewState -> val$currentPreviewState
    com.badlogic.gdx.backends.android.AndroidLiveWallpaperService$AndroidWallpaperEngine this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidMultiTouchHandler -> com.badlogic.gdx.backends.android.AndroidMultiTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    void logAction(int,int) -> logAction
    void postTouchEvent(com.badlogic.gdx.backends.android.AndroidInput,int,int,int,int,long) -> postTouchEvent
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidMusic -> com.badlogic.gdx.backends.android.AndroidMusic:
    com.badlogic.gdx.backends.android.AndroidAudio audio -> audio
    android.media.MediaPlayer player -> player
    boolean isPrepared -> isPrepared
    boolean wasPlaying -> wasPlaying
    float volume -> volume
    com.badlogic.gdx.audio.Music$OnCompletionListener onCompletionListener -> onCompletionListener
    void dispose() -> dispose
    boolean isLooping() -> isLooping
    boolean isPlaying() -> isPlaying
    void pause() -> pause
    void play() -> play
    void setLooping(boolean) -> setLooping
    void setVolume(float) -> setVolume
    float getVolume() -> getVolume
    void setPan(float,float) -> setPan
    void stop() -> stop
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    float getDuration() -> getDuration
    void setOnCompletionListener(com.badlogic.gdx.audio.Music$OnCompletionListener) -> setOnCompletionListener
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.badlogic.gdx.backends.android.AndroidMusic$1 -> com.badlogic.gdx.backends.android.AndroidMusic$1:
    com.badlogic.gdx.backends.android.AndroidMusic this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidNet -> com.badlogic.gdx.backends.android.AndroidNet:
    com.badlogic.gdx.backends.android.AndroidApplicationBase app -> app
    com.badlogic.gdx.net.NetJavaImpl netJavaImpl -> netJavaImpl
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest) -> cancelHttpRequest
    com.badlogic.gdx.net.ServerSocket newServerSocket(com.badlogic.gdx.Net$Protocol,int,com.badlogic.gdx.net.ServerSocketHints) -> newServerSocket
    com.badlogic.gdx.net.Socket newClientSocket(com.badlogic.gdx.Net$Protocol,java.lang.String,int,com.badlogic.gdx.net.SocketHints) -> newClientSocket
    void openURI(java.lang.String) -> openURI
com.badlogic.gdx.backends.android.AndroidNet$1 -> com.badlogic.gdx.backends.android.AndroidNet$1:
    android.net.Uri val$uri -> val$uri
    com.badlogic.gdx.backends.android.AndroidNet this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard:
    android.content.Context context -> context
    android.os.Handler handler -> handler
    com.badlogic.gdx.backends.android.AndroidInput input -> input
    android.app.Dialog dialog -> dialog
    android.widget.TextView textView -> textView
    android.app.Dialog createDialog() -> createDialog
    android.widget.TextView createView(android.content.Context) -> createView
    void setVisible(boolean) -> setVisible
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$1:
    android.text.Editable editable -> editable
    boolean getDefaultEditable() -> getDefaultEditable
    android.text.Editable getEditableText() -> getEditableText
    android.text.method.MovementMethod getDefaultMovementMethod() -> getDefaultMovementMethod
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard this$0 -> this$0
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$1:
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2 -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2$2:
    int[] screenloc -> screenloc
    int keyboardHeight -> keyboardHeight
    boolean keyboardShowing -> keyboardShowing
    android.view.View val$content -> val$content
    com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$2 this$1 -> this$1
    boolean onPreDraw() -> onPreDraw
com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable -> com.badlogic.gdx.backends.android.AndroidOnscreenKeyboard$PassThroughEditable:
    char charAt(int) -> charAt
    int length() -> length
    java.lang.CharSequence subSequence(int,int) -> subSequence
    void getChars(int,int,char[],int) -> getChars
    void removeSpan(java.lang.Object) -> removeSpan
    void setSpan(java.lang.Object,int,int,int) -> setSpan
    int getSpanEnd(java.lang.Object) -> getSpanEnd
    int getSpanFlags(java.lang.Object) -> getSpanFlags
    int getSpanStart(java.lang.Object) -> getSpanStart
    java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    android.text.Editable append(java.lang.CharSequence) -> append
    android.text.Editable append(char) -> append
    android.text.Editable append(java.lang.CharSequence,int,int) -> append
    void clear() -> clear
    void clearSpans() -> clearSpans
    android.text.Editable delete(int,int) -> delete
    android.text.InputFilter[] getFilters() -> getFilters
    android.text.Editable insert(int,java.lang.CharSequence) -> insert
    android.text.Editable insert(int,java.lang.CharSequence,int,int) -> insert
    android.text.Editable replace(int,int,java.lang.CharSequence) -> replace
    android.text.Editable replace(int,int,java.lang.CharSequence,int,int) -> replace
    void setFilters(android.text.InputFilter[]) -> setFilters
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.backends.android.AndroidPreferences -> com.badlogic.gdx.backends.android.AndroidPreferences:
    android.content.SharedPreferences sharedPrefs -> sharedPrefs
    android.content.SharedPreferences$Editor editor -> editor
    void putBoolean(java.lang.String,boolean) -> putBoolean
    void putInteger(java.lang.String,int) -> putInteger
    void putLong(java.lang.String,long) -> putLong
    void putFloat(java.lang.String,float) -> putFloat
    void putString(java.lang.String,java.lang.String) -> putString
    void put(java.util.Map) -> put
    boolean getBoolean(java.lang.String) -> getBoolean
    int getInteger(java.lang.String) -> getInteger
    long getLong(java.lang.String) -> getLong
    float getFloat(java.lang.String) -> getFloat
    java.lang.String getString(java.lang.String) -> getString
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    int getInteger(java.lang.String,int) -> getInteger
    long getLong(java.lang.String,long) -> getLong
    float getFloat(java.lang.String,float) -> getFloat
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    java.util.Map get() -> get
    boolean contains(java.lang.String) -> contains
    void clear() -> clear
    void flush() -> flush
    void remove(java.lang.String) -> remove
    void edit() -> edit
com.badlogic.gdx.backends.android.AndroidSound -> com.badlogic.gdx.backends.android.AndroidSound:
    android.media.SoundPool soundPool -> soundPool
    android.media.AudioManager manager -> manager
    int soundId -> soundId
    com.badlogic.gdx.utils.IntArray streamIds -> streamIds
    void dispose() -> dispose
    long play() -> play
    long play(float) -> play
    void stop() -> stop
    void stop(long) -> stop
    void pause() -> pause
    void pause(long) -> pause
    void resume() -> resume
    void resume(long) -> resume
    void setPitch(long,float) -> setPitch
    void setVolume(long,float) -> setVolume
    long loop() -> loop
    long loop(float) -> loop
    void setLooping(long,boolean) -> setLooping
    void setPan(long,float,float) -> setPan
    long play(float,float,float) -> play
    long loop(float,float,float) -> loop
    void setPriority(long,int) -> setPriority
com.badlogic.gdx.backends.android.AndroidTouchHandler -> com.badlogic.gdx.backends.android.AndroidTouchHandler:
    void onTouch(android.view.MotionEvent,com.badlogic.gdx.backends.android.AndroidInput) -> onTouch
    boolean supportsMultitouch(android.content.Context) -> supportsMultitouch
com.badlogic.gdx.backends.android.AndroidVisibilityListener -> com.badlogic.gdx.backends.android.AndroidVisibilityListener:
    void createListener(com.badlogic.gdx.backends.android.AndroidApplicationBase) -> createListener
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1 -> com.badlogic.gdx.backends.android.AndroidVisibilityListener$1:
    com.badlogic.gdx.backends.android.AndroidApplicationBase val$application -> val$application
    com.badlogic.gdx.backends.android.AndroidVisibilityListener this$0 -> this$0
    void onSystemUiVisibilityChange(int) -> onSystemUiVisibilityChange
com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1 -> com.badlogic.gdx.backends.android.AndroidVisibilityListener$1$1:
    com.badlogic.gdx.backends.android.AndroidVisibilityListener$1 this$1 -> this$1
    void run() -> run
com.badlogic.gdx.backends.android.AndroidWallpaperListener -> com.badlogic.gdx.backends.android.AndroidWallpaperListener:
    void offsetChange(float,float,float,float,int,int) -> offsetChange
    void previewStateChange(boolean) -> previewStateChange
com.badlogic.gdx.backends.android.InputProcessorLW -> com.badlogic.gdx.backends.android.InputProcessorLW:
    void touchDrop(int,int) -> touchDrop
com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FillResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.FixedResolutionStrategy:
    int width -> width
    int height -> height
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void onMeasure(int,int) -> onMeasure
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    void init(boolean,int,int) -> init
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$1:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20 this$0 -> this$0
    boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    void sendDownUpKeyEventForBackwardCompatibility(int) -> sendDownUpKeyEventForBackwardCompatibility
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy resolutionStrategy -> resolutionStrategy
    void onMeasure(int,int) -> onMeasure
    android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    void init(boolean,int,int) -> init
    void checkEglError(java.lang.String,javax.microedition.khronos.egl.EGL10) -> checkEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$1 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$1:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18 this$0 -> this$0
    boolean deleteSurroundingText(int,int) -> deleteSurroundingText
    void sendDownUpKeyEventForBackwardCompatibility(int) -> sendDownUpKeyEventForBackwardCompatibility
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int[] s_configAttribs2 -> s_configAttribs2
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceView20API18$ContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18:
    java.lang.String TAG -> TAG
    boolean LOG_ATTACH_DETACH -> LOG_ATTACH_DETACH
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_PAUSE_RESUME -> LOG_PAUSE_RESUME
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean LOG_RENDERER_DRAW_FRAME -> LOG_RENDERER_DRAW_FRAME
    boolean LOG_EGL -> LOG_EGL
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager sGLThreadManager -> sGLThreadManager
    java.lang.ref.WeakReference mThisWeakRef -> mThisWeakRef
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread mGLThread -> mGLThread
    android.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    boolean mDetached -> mDetached
    android.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    int mEGLContextClientVersion -> mEGLContextClientVersion
    boolean mPreserveEGLContextOnPause -> mPreserveEGLContextOnPause
    void finalize() -> finalize
    void init() -> init
    void setGLWrapper(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setPreserveEGLContextOnPause(boolean) -> setPreserveEGLContextOnPause
    boolean getPreserveEGLContextOnPause() -> getPreserveEGLContextOnPause
    void setRenderer(android.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLContextFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory) -> setEGLContextFactory
    void setEGLWindowSurfaceFactory(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory) -> setEGLWindowSurfaceFactory
    void setEGLConfigChooser(android.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setEGLContextClientVersion(int) -> setEGLContextClientVersion
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void queueEvent(java.lang.Runnable) -> queueEvent
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void checkRenderThreadState() -> checkRenderThreadState
    int access$200(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$200
    android.opengl.GLSurfaceView$EGLConfigChooser access$300(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$300
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory access$400(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$400
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory access$500(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$500
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper access$600(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$600
    int access$700(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$700
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager access$800() -> access$800
    boolean access$900(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$900
    android.opengl.GLSurfaceView$Renderer access$1000(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18) -> access$1000
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$1 -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$1:
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int[] filterConfigSpec(int[]) -> filterConfigSpec
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$DefaultWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLContextFactory:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EGLWindowSurfaceFactory:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> createWindowSurface
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> destroySurface
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper:
    java.lang.ref.WeakReference mGLSurfaceViewWeakRef -> mGLSurfaceViewWeakRef
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    void start() -> start
    boolean createSurface() -> createSurface
    javax.microedition.khronos.opengles.GL createGL() -> createGL
    int swap() -> swap
    void destroySurface() -> destroySurface
    void destroySurfaceImp() -> destroySurfaceImp
    void finish() -> finish
    void throwEglException(java.lang.String) -> throwEglException
    void throwEglException(java.lang.String,int) -> throwEglException
    void logEglErrorAsWarning(java.lang.String,java.lang.String,int) -> logEglErrorAsWarning
    java.lang.String getErrorString(int) -> getErrorString
    java.lang.String formatEglError(java.lang.String,int) -> formatEglError
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mRequestPaused -> mRequestPaused
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mSurfaceIsBad -> mSurfaceIsBad
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEglContext -> mHaveEglContext
    boolean mHaveEglSurface -> mHaveEglSurface
    boolean mFinishedCreatingEglSurface -> mFinishedCreatingEglSurface
    boolean mShouldReleaseEglContext -> mShouldReleaseEglContext
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    boolean mSizeChanged -> mSizeChanged
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$EglHelper mEglHelper -> mEglHelper
    java.lang.ref.WeakReference mGLSurfaceViewWeakRef -> mGLSurfaceViewWeakRef
    void run() -> run
    void stopEglSurfaceLocked() -> stopEglSurfaceLocked
    void stopEglContextLocked() -> stopEglContextLocked
    void guardedRun() -> guardedRun
    boolean ableToDraw() -> ableToDraw
    boolean readyToDraw() -> readyToDraw
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated() -> surfaceCreated
    void surfaceDestroyed() -> surfaceDestroyed
    void onPause() -> onPause
    void onResume() -> onResume
    void onWindowResize(int,int) -> onWindowResize
    void requestExitAndWait() -> requestExitAndWait
    void requestReleaseEglContextLocked() -> requestReleaseEglContextLocked
    void queueEvent(java.lang.Runnable) -> queueEvent
    boolean access$1102(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread,boolean) -> access$1102
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThreadManager:
    java.lang.String TAG -> TAG
    boolean mGLESVersionCheckComplete -> mGLESVersionCheckComplete
    int mGLESVersion -> mGLESVersion
    boolean mGLESDriverCheckComplete -> mGLESDriverCheckComplete
    boolean mMultipleGLESContextsAllowed -> mMultipleGLESContextsAllowed
    boolean mLimitedGLESContexts -> mLimitedGLESContexts
    int kGLES_20 -> kGLES_20
    java.lang.String kMSM7K_RENDERER_PREFIX -> kMSM7K_RENDERER_PREFIX
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread mEglOwner -> mEglOwner
    void threadExiting(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread) -> threadExiting
    boolean tryAcquireEglContextLocked(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread) -> tryAcquireEglContextLocked
    void releaseEglContextLocked(com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLThread) -> releaseEglContextLocked
    boolean shouldReleaseEGLContextWhenPausing() -> shouldReleaseEGLContextWhenPausing
    boolean shouldTerminateEGLWhenPausing() -> shouldTerminateEGLWhenPausing
    void checkGLDriver(javax.microedition.khronos.opengles.GL10) -> checkGLDriver
    void checkGLESVersion() -> checkGLESVersion
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$GLWrapper:
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$SimpleEGLConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18$SimpleEGLConfigChooser:
    com.badlogic.gdx.backends.android.surfaceview.GLSurfaceViewAPI18 this$0 -> this$0
com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser -> com.badlogic.gdx.backends.android.surfaceview.GdxEglConfigChooser:
    int EGL_OPENGL_ES2_BIT -> EGL_OPENGL_ES2_BIT
    int EGL_COVERAGE_BUFFERS_NV -> EGL_COVERAGE_BUFFERS_NV
    int EGL_COVERAGE_SAMPLES_NV -> EGL_COVERAGE_SAMPLES_NV
    java.lang.String TAG -> TAG
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    int mNumSamples -> mNumSamples
    int[] mConfigAttribs -> mConfigAttribs
    int[] mValue -> mValue
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
    void printConfigs(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> printConfigs
    void printConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> printConfig
com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.RatioResolutionStrategy:
    float ratio -> ratio
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy:
    com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension calcMeasures(int,int) -> calcMeasures
com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension -> com.badlogic.gdx.backends.android.surfaceview.ResolutionStrategy$MeasuredDimension:
    int width -> width
    int height -> height
com.badlogic.gdx.controllers.ControlType -> com.badlogic.gdx.controllers.ControlType:
    com.badlogic.gdx.controllers.ControlType button -> button
    com.badlogic.gdx.controllers.ControlType axis -> axis
    com.badlogic.gdx.controllers.ControlType slider -> slider
    com.badlogic.gdx.controllers.ControlType pov -> pov
    com.badlogic.gdx.controllers.ControlType accelerometer -> accelerometer
    com.badlogic.gdx.controllers.ControlType[] $VALUES -> $VALUES
    com.badlogic.gdx.controllers.ControlType[] values() -> values
    com.badlogic.gdx.controllers.ControlType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.controllers.Controller -> com.badlogic.gdx.controllers.Controller:
    boolean getButton(int) -> getButton
    float getAxis(int) -> getAxis
    com.badlogic.gdx.controllers.PovDirection getPov(int) -> getPov
    boolean getSliderX(int) -> getSliderX
    boolean getSliderY(int) -> getSliderY
    com.badlogic.gdx.math.Vector3 getAccelerometer(int) -> getAccelerometer
    void setAccelerometerSensitivity(float) -> setAccelerometerSensitivity
    java.lang.String getName() -> getName
    void addListener(com.badlogic.gdx.controllers.ControllerListener) -> addListener
    void removeListener(com.badlogic.gdx.controllers.ControllerListener) -> removeListener
com.badlogic.gdx.controllers.ControllerAdapter -> com.badlogic.gdx.controllers.ControllerAdapter:
    boolean buttonDown(com.badlogic.gdx.controllers.Controller,int) -> buttonDown
    boolean buttonUp(com.badlogic.gdx.controllers.Controller,int) -> buttonUp
    boolean axisMoved(com.badlogic.gdx.controllers.Controller,int,float) -> axisMoved
    boolean povMoved(com.badlogic.gdx.controllers.Controller,int,com.badlogic.gdx.controllers.PovDirection) -> povMoved
    boolean xSliderMoved(com.badlogic.gdx.controllers.Controller,int,boolean) -> xSliderMoved
    boolean ySliderMoved(com.badlogic.gdx.controllers.Controller,int,boolean) -> ySliderMoved
    boolean accelerometerMoved(com.badlogic.gdx.controllers.Controller,int,com.badlogic.gdx.math.Vector3) -> accelerometerMoved
    void connected(com.badlogic.gdx.controllers.Controller) -> connected
    void disconnected(com.badlogic.gdx.controllers.Controller) -> disconnected
com.badlogic.gdx.controllers.ControllerListener -> com.badlogic.gdx.controllers.ControllerListener:
    void connected(com.badlogic.gdx.controllers.Controller) -> connected
    void disconnected(com.badlogic.gdx.controllers.Controller) -> disconnected
    boolean buttonDown(com.badlogic.gdx.controllers.Controller,int) -> buttonDown
    boolean buttonUp(com.badlogic.gdx.controllers.Controller,int) -> buttonUp
    boolean axisMoved(com.badlogic.gdx.controllers.Controller,int,float) -> axisMoved
    boolean povMoved(com.badlogic.gdx.controllers.Controller,int,com.badlogic.gdx.controllers.PovDirection) -> povMoved
    boolean xSliderMoved(com.badlogic.gdx.controllers.Controller,int,boolean) -> xSliderMoved
    boolean ySliderMoved(com.badlogic.gdx.controllers.Controller,int,boolean) -> ySliderMoved
    boolean accelerometerMoved(com.badlogic.gdx.controllers.Controller,int,com.badlogic.gdx.math.Vector3) -> accelerometerMoved
com.badlogic.gdx.controllers.ControllerManager -> com.badlogic.gdx.controllers.ControllerManager:
    com.badlogic.gdx.utils.Array getControllers() -> getControllers
    void addListener(com.badlogic.gdx.controllers.ControllerListener) -> addListener
    void removeListener(com.badlogic.gdx.controllers.ControllerListener) -> removeListener
    void clearListeners() -> clearListeners
com.badlogic.gdx.controllers.ControllerManagerStub -> com.badlogic.gdx.controllers.ControllerManagerStub:
    com.badlogic.gdx.utils.Array controllers -> controllers
    com.badlogic.gdx.utils.Array getControllers() -> getControllers
    void addListener(com.badlogic.gdx.controllers.ControllerListener) -> addListener
    void removeListener(com.badlogic.gdx.controllers.ControllerListener) -> removeListener
    void clearListeners() -> clearListeners
com.badlogic.gdx.controllers.Controllers -> com.badlogic.gdx.controllers.Controllers:
    java.lang.String TAG -> TAG
    com.badlogic.gdx.utils.ObjectMap managers -> managers
    com.badlogic.gdx.utils.Array getControllers() -> getControllers
    void addListener(com.badlogic.gdx.controllers.ControllerListener) -> addListener
    void removeListener(com.badlogic.gdx.controllers.ControllerListener) -> removeListener
    com.badlogic.gdx.controllers.ControllerManager getManager() -> getManager
    void initialize() -> initialize
com.badlogic.gdx.controllers.Controllers$1 -> com.badlogic.gdx.controllers.Controllers$1:
    com.badlogic.gdx.Application val$app -> val$app
    void resume() -> resume
    void pause() -> pause
    void dispose() -> dispose
com.badlogic.gdx.controllers.PovDirection -> com.badlogic.gdx.controllers.PovDirection:
    com.badlogic.gdx.controllers.PovDirection center -> center
    com.badlogic.gdx.controllers.PovDirection north -> north
    com.badlogic.gdx.controllers.PovDirection south -> south
    com.badlogic.gdx.controllers.PovDirection east -> east
    com.badlogic.gdx.controllers.PovDirection west -> west
    com.badlogic.gdx.controllers.PovDirection northEast -> northEast
    com.badlogic.gdx.controllers.PovDirection southEast -> southEast
    com.badlogic.gdx.controllers.PovDirection northWest -> northWest
    com.badlogic.gdx.controllers.PovDirection southWest -> southWest
    com.badlogic.gdx.controllers.PovDirection[] $VALUES -> $VALUES
    com.badlogic.gdx.controllers.PovDirection[] values() -> values
    com.badlogic.gdx.controllers.PovDirection valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.controllers.android.AndroidController -> com.badlogic.gdx.controllers.android.AndroidController:
    int deviceId -> deviceId
    boolean attached -> attached
    java.lang.String name -> name
    com.badlogic.gdx.utils.IntIntMap buttons -> buttons
    float[] axes -> axes
    int[] axesIds -> axesIds
    com.badlogic.gdx.utils.Array listeners -> listeners
    boolean isAttached() -> isAttached
    void setAttached(boolean) -> setAttached
    int getDeviceId() -> getDeviceId
    boolean getSliderX(int) -> getSliderX
    boolean getSliderY(int) -> getSliderY
    com.badlogic.gdx.math.Vector3 getAccelerometer(int) -> getAccelerometer
    void setAccelerometerSensitivity(float) -> setAccelerometerSensitivity
    void addListener(com.badlogic.gdx.controllers.ControllerListener) -> addListener
    void removeListener(com.badlogic.gdx.controllers.ControllerListener) -> removeListener
    com.badlogic.gdx.utils.Array getListeners() -> getListeners
    boolean getButton(int) -> getButton
    float getAxis(int) -> getAxis
    com.badlogic.gdx.controllers.PovDirection getPov(int) -> getPov
    java.lang.String getName() -> getName
com.badlogic.gdx.controllers.android.AndroidControllerEvent -> com.badlogic.gdx.controllers.android.AndroidControllerEvent:
    int BUTTON_DOWN -> BUTTON_DOWN
    int BUTTON_UP -> BUTTON_UP
    int AXIS -> AXIS
    int POV -> POV
    int CONNECTED -> CONNECTED
    int DISCONNECTED -> DISCONNECTED
    com.badlogic.gdx.controllers.android.AndroidController controller -> controller
    int type -> type
    int code -> code
    float axisValue -> axisValue
    com.badlogic.gdx.controllers.PovDirection povDirection -> povDirection
com.badlogic.gdx.controllers.android.AndroidControllers -> com.badlogic.gdx.controllers.android.AndroidControllers:
    java.lang.String TAG -> TAG
    com.badlogic.gdx.utils.IntMap controllerMap -> controllerMap
    com.badlogic.gdx.utils.Array controllers -> controllers
    com.badlogic.gdx.utils.Array listeners -> listeners
    com.badlogic.gdx.utils.Array eventQueue -> eventQueue
    com.badlogic.gdx.utils.Pool eventPool -> eventPool
    void setupEventQueue() -> setupEventQueue
    boolean onGenericMotion(android.view.View,android.view.MotionEvent) -> onGenericMotion
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    void gatherControllers(boolean) -> gatherControllers
    void addController(int,boolean) -> addController
    void removeController(int) -> removeController
    boolean isController(android.view.InputDevice) -> isController
    com.badlogic.gdx.utils.Array getControllers() -> getControllers
    void addListener(com.badlogic.gdx.controllers.ControllerListener) -> addListener
    void removeListener(com.badlogic.gdx.controllers.ControllerListener) -> removeListener
    void pause() -> pause
    void resume() -> resume
    void dispose() -> dispose
    void clearListeners() -> clearListeners
    com.badlogic.gdx.utils.Array access$000(com.badlogic.gdx.controllers.android.AndroidControllers) -> access$000
    com.badlogic.gdx.utils.Array access$100(com.badlogic.gdx.controllers.android.AndroidControllers) -> access$100
    com.badlogic.gdx.utils.Array access$200(com.badlogic.gdx.controllers.android.AndroidControllers) -> access$200
    com.badlogic.gdx.utils.Pool access$300(com.badlogic.gdx.controllers.android.AndroidControllers) -> access$300
com.badlogic.gdx.controllers.android.AndroidControllers$1 -> com.badlogic.gdx.controllers.android.AndroidControllers$1:
    com.badlogic.gdx.controllers.android.AndroidControllers this$0 -> this$0
    com.badlogic.gdx.controllers.android.AndroidControllerEvent newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.controllers.android.AndroidControllers$2 -> com.badlogic.gdx.controllers.android.AndroidControllers$2:
    com.badlogic.gdx.controllers.android.AndroidControllers this$0 -> this$0
    void run() -> run
com.badlogic.gdx.controllers.android.ControllerLifeCycleListener -> com.badlogic.gdx.controllers.android.ControllerLifeCycleListener:
    java.lang.String TAG -> TAG
    android.hardware.input.InputManager inputManager -> inputManager
    com.badlogic.gdx.controllers.android.AndroidControllers controllers -> controllers
    void resume() -> resume
    void pause() -> pause
    void onInputDeviceAdded(int) -> onInputDeviceAdded
    void onInputDeviceRemoved(int) -> onInputDeviceRemoved
    void onInputDeviceChanged(int) -> onInputDeviceChanged
    void dispose() -> dispose
com.badlogic.gdx.controllers.mappings.Ouya -> com.badlogic.gdx.controllers.mappings.Ouya:
    java.lang.String ID -> ID
    int BUTTON_O -> BUTTON_O
    int BUTTON_U -> BUTTON_U
    int BUTTON_Y -> BUTTON_Y
    int BUTTON_A -> BUTTON_A
    int BUTTON_MENU -> BUTTON_MENU
    int BUTTON_DPAD_UP -> BUTTON_DPAD_UP
    int BUTTON_DPAD_DOWN -> BUTTON_DPAD_DOWN
    int BUTTON_DPAD_RIGHT -> BUTTON_DPAD_RIGHT
    int BUTTON_DPAD_LEFT -> BUTTON_DPAD_LEFT
    int BUTTON_L1 -> BUTTON_L1
    int BUTTON_L2 -> BUTTON_L2
    int BUTTON_L3 -> BUTTON_L3
    int BUTTON_R1 -> BUTTON_R1
    int BUTTON_R2 -> BUTTON_R2
    int BUTTON_R3 -> BUTTON_R3
    int AXIS_LEFT_X -> AXIS_LEFT_X
    int AXIS_LEFT_Y -> AXIS_LEFT_Y
    int AXIS_LEFT_TRIGGER -> AXIS_LEFT_TRIGGER
    int AXIS_RIGHT_X -> AXIS_RIGHT_X
    int AXIS_RIGHT_Y -> AXIS_RIGHT_Y
    int AXIS_RIGHT_TRIGGER -> AXIS_RIGHT_TRIGGER
    float STICK_DEADZONE -> STICK_DEADZONE
    boolean runningOnOuya -> runningOnOuya
    boolean simulateRunningOnOuya -> simulateRunningOnOuya
    boolean isRunningOnOuya() -> isRunningOnOuya
com.badlogic.gdx.files.FileHandle -> com.badlogic.gdx.files.FileHandle:
    java.io.File file -> file
    com.badlogic.gdx.Files$FileType type -> type
    java.lang.String path() -> path
    java.lang.String name() -> name
    java.lang.String extension() -> extension
    java.lang.String nameWithoutExtension() -> nameWithoutExtension
    java.lang.String pathWithoutExtension() -> pathWithoutExtension
    com.badlogic.gdx.Files$FileType type() -> type
    java.io.File file() -> file
    java.io.InputStream read() -> read
    java.io.BufferedInputStream read(int) -> read
    java.io.Reader reader() -> reader
    java.io.Reader reader(java.lang.String) -> reader
    java.io.BufferedReader reader(int) -> reader
    java.io.BufferedReader reader(int,java.lang.String) -> reader
    java.lang.String readString() -> readString
    java.lang.String readString(java.lang.String) -> readString
    byte[] readBytes() -> readBytes
    int estimateLength() -> estimateLength
    int readBytes(byte[],int,int) -> readBytes
    java.io.OutputStream write(boolean) -> write
    java.io.OutputStream write(boolean,int) -> write
    void write(java.io.InputStream,boolean) -> write
    java.io.Writer writer(boolean) -> writer
    java.io.Writer writer(boolean,java.lang.String) -> writer
    void writeString(java.lang.String,boolean) -> writeString
    void writeString(java.lang.String,boolean,java.lang.String) -> writeString
    void writeBytes(byte[],boolean) -> writeBytes
    void writeBytes(byte[],int,int,boolean) -> writeBytes
    com.badlogic.gdx.files.FileHandle[] list() -> list
    com.badlogic.gdx.files.FileHandle[] list(java.io.FileFilter) -> list
    com.badlogic.gdx.files.FileHandle[] list(java.io.FilenameFilter) -> list
    com.badlogic.gdx.files.FileHandle[] list(java.lang.String) -> list
    boolean isDirectory() -> isDirectory
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    void mkdirs() -> mkdirs
    boolean exists() -> exists
    boolean delete() -> delete
    boolean deleteDirectory() -> deleteDirectory
    void emptyDirectory() -> emptyDirectory
    void emptyDirectory(boolean) -> emptyDirectory
    void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
    long length() -> length
    long lastModified() -> lastModified
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.badlogic.gdx.files.FileHandle tempFile(java.lang.String) -> tempFile
    com.badlogic.gdx.files.FileHandle tempDirectory(java.lang.String) -> tempDirectory
    void emptyDirectory(java.io.File,boolean) -> emptyDirectory
    boolean deleteDirectory(java.io.File) -> deleteDirectory
    void copyFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyFile
    void copyDirectory(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> copyDirectory
com.badlogic.gdx.files.FileHandle$1 -> com.badlogic.gdx.files.FileHandle$1:
    int[] $SwitchMap$com$badlogic$gdx$Files$FileType -> $SwitchMap$com$badlogic$gdx$Files$FileType
com.badlogic.gdx.files.FileHandleStream -> com.badlogic.gdx.files.FileHandleStream:
    boolean isDirectory() -> isDirectory
    long length() -> length
    boolean exists() -> exists
    com.badlogic.gdx.files.FileHandle child(java.lang.String) -> child
    com.badlogic.gdx.files.FileHandle sibling(java.lang.String) -> sibling
    com.badlogic.gdx.files.FileHandle parent() -> parent
    java.io.InputStream read() -> read
    java.io.OutputStream write(boolean) -> write
    com.badlogic.gdx.files.FileHandle[] list() -> list
    void mkdirs() -> mkdirs
    boolean delete() -> delete
    boolean deleteDirectory() -> deleteDirectory
    void copyTo(com.badlogic.gdx.files.FileHandle) -> copyTo
    void moveTo(com.badlogic.gdx.files.FileHandle) -> moveTo
com.badlogic.gdx.graphics.Camera -> com.badlogic.gdx.graphics.Camera:
    com.badlogic.gdx.math.Vector3 position -> position
    com.badlogic.gdx.math.Vector3 direction -> direction
    com.badlogic.gdx.math.Vector3 up -> up
    com.badlogic.gdx.math.Matrix4 projection -> projection
    com.badlogic.gdx.math.Matrix4 view -> view
    com.badlogic.gdx.math.Matrix4 combined -> combined
    com.badlogic.gdx.math.Matrix4 invProjectionView -> invProjectionView
    float near -> near
    float far -> far
    float viewportWidth -> viewportWidth
    float viewportHeight -> viewportHeight
    com.badlogic.gdx.math.Frustum frustum -> frustum
    com.badlogic.gdx.math.Vector3 tmpVec -> tmpVec
    com.badlogic.gdx.math.collision.Ray ray -> ray
    void update() -> update
    void update(boolean) -> update
    void lookAt(float,float,float) -> lookAt
    void lookAt(com.badlogic.gdx.math.Vector3) -> lookAt
    void normalizeUp() -> normalizeUp
    void rotate(float,float,float,float) -> rotate
    void rotate(com.badlogic.gdx.math.Vector3,float) -> rotate
    void rotate(com.badlogic.gdx.math.Matrix4) -> rotate
    void rotate(com.badlogic.gdx.math.Quaternion) -> rotate
    void rotateAround(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> rotateAround
    void transform(com.badlogic.gdx.math.Matrix4) -> transform
    void translate(float,float,float) -> translate
    void translate(com.badlogic.gdx.math.Vector3) -> translate
    com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3,float,float,float,float) -> unproject
    com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3) -> unproject
    com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3) -> project
    com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3,float,float,float,float) -> project
    com.badlogic.gdx.math.collision.Ray getPickRay(float,float,float,float,float,float) -> getPickRay
    com.badlogic.gdx.math.collision.Ray getPickRay(float,float) -> getPickRay
com.badlogic.gdx.graphics.Color -> com.badlogic.gdx.graphics.Color:
    com.badlogic.gdx.graphics.Color CLEAR -> CLEAR
    com.badlogic.gdx.graphics.Color WHITE -> WHITE
    com.badlogic.gdx.graphics.Color BLACK -> BLACK
    com.badlogic.gdx.graphics.Color RED -> RED
    com.badlogic.gdx.graphics.Color GREEN -> GREEN
    com.badlogic.gdx.graphics.Color BLUE -> BLUE
    com.badlogic.gdx.graphics.Color LIGHT_GRAY -> LIGHT_GRAY
    com.badlogic.gdx.graphics.Color GRAY -> GRAY
    com.badlogic.gdx.graphics.Color DARK_GRAY -> DARK_GRAY
    com.badlogic.gdx.graphics.Color PINK -> PINK
    com.badlogic.gdx.graphics.Color ORANGE -> ORANGE
    com.badlogic.gdx.graphics.Color YELLOW -> YELLOW
    com.badlogic.gdx.graphics.Color MAGENTA -> MAGENTA
    com.badlogic.gdx.graphics.Color CYAN -> CYAN
    com.badlogic.gdx.graphics.Color OLIVE -> OLIVE
    com.badlogic.gdx.graphics.Color PURPLE -> PURPLE
    com.badlogic.gdx.graphics.Color MAROON -> MAROON
    com.badlogic.gdx.graphics.Color TEAL -> TEAL
    com.badlogic.gdx.graphics.Color NAVY -> NAVY
    com.badlogic.gdx.graphics.Color tmp -> tmp
    float r -> r
    float g -> g
    float b -> b
    float a -> a
    com.badlogic.gdx.graphics.Color set(com.badlogic.gdx.graphics.Color) -> set
    com.badlogic.gdx.graphics.Color mul(com.badlogic.gdx.graphics.Color) -> mul
    com.badlogic.gdx.graphics.Color mul(float) -> mul
    com.badlogic.gdx.graphics.Color add(com.badlogic.gdx.graphics.Color) -> add
    com.badlogic.gdx.graphics.Color sub(com.badlogic.gdx.graphics.Color) -> sub
    com.badlogic.gdx.graphics.Color clamp() -> clamp
    com.badlogic.gdx.graphics.Color set(float,float,float,float) -> set
    com.badlogic.gdx.graphics.Color set(int) -> set
    com.badlogic.gdx.graphics.Color add(float,float,float,float) -> add
    com.badlogic.gdx.graphics.Color sub(float,float,float,float) -> sub
    com.badlogic.gdx.graphics.Color mul(float,float,float,float) -> mul
    com.badlogic.gdx.graphics.Color lerp(com.badlogic.gdx.graphics.Color,float) -> lerp
    com.badlogic.gdx.graphics.Color lerp(float,float,float,float,float) -> lerp
    com.badlogic.gdx.graphics.Color premultiplyAlpha() -> premultiplyAlpha
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    float toFloatBits() -> toFloatBits
    int toIntBits() -> toIntBits
    java.lang.String toString() -> toString
    com.badlogic.gdx.graphics.Color valueOf(java.lang.String) -> valueOf
    float toFloatBits(int,int,int,int) -> toFloatBits
    float toFloatBits(float,float,float,float) -> toFloatBits
    int toIntBits(int,int,int,int) -> toIntBits
    int alpha(float) -> alpha
    int luminanceAlpha(float,float) -> luminanceAlpha
    int rgb565(float,float,float) -> rgb565
    int rgba4444(float,float,float,float) -> rgba4444
    int rgb888(float,float,float) -> rgb888
    int rgba8888(float,float,float,float) -> rgba8888
    int rgb565(com.badlogic.gdx.graphics.Color) -> rgb565
    int rgba4444(com.badlogic.gdx.graphics.Color) -> rgba4444
    int rgb888(com.badlogic.gdx.graphics.Color) -> rgb888
    int rgba8888(com.badlogic.gdx.graphics.Color) -> rgba8888
    void rgb565ToColor(com.badlogic.gdx.graphics.Color,int) -> rgb565ToColor
    void rgba4444ToColor(com.badlogic.gdx.graphics.Color,int) -> rgba4444ToColor
    void rgb888ToColor(com.badlogic.gdx.graphics.Color,int) -> rgb888ToColor
    void rgba8888ToColor(com.badlogic.gdx.graphics.Color,int) -> rgba8888ToColor
    com.badlogic.gdx.graphics.Color tmp() -> tmp
    com.badlogic.gdx.graphics.Color cpy() -> cpy
com.badlogic.gdx.graphics.Colors -> com.badlogic.gdx.graphics.Colors:
    com.badlogic.gdx.utils.ObjectMap map -> map
    com.badlogic.gdx.utils.ObjectMap getColors() -> getColors
    com.badlogic.gdx.graphics.Color get(java.lang.String) -> get
    com.badlogic.gdx.graphics.Color put(java.lang.String,com.badlogic.gdx.graphics.Color) -> put
    void reset() -> reset
com.badlogic.gdx.graphics.Cubemap -> com.badlogic.gdx.graphics.Cubemap:
    com.badlogic.gdx.graphics.TextureData[] data -> data
    void load(com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData) -> load
    boolean isManaged() -> isManaged
    void reload() -> reload
    void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.files.FileHandle) -> load
    void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.files.FileHandle,boolean) -> load
    void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.graphics.Pixmap) -> load
    void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.graphics.Pixmap,boolean) -> load
    void load(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.graphics.TextureData) -> load
    void unsafeLoad(com.badlogic.gdx.graphics.Cubemap$CubemapSide,com.badlogic.gdx.graphics.TextureData) -> unsafeLoad
    boolean isComplete() -> isComplete
    com.badlogic.gdx.graphics.TextureData getTextureData(com.badlogic.gdx.graphics.Cubemap$CubemapSide) -> getTextureData
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getDepth() -> getDepth
com.badlogic.gdx.graphics.Cubemap$CubemapSide -> com.badlogic.gdx.graphics.Cubemap$CubemapSide:
    com.badlogic.gdx.graphics.Cubemap$CubemapSide PositiveX -> PositiveX
    com.badlogic.gdx.graphics.Cubemap$CubemapSide NegativeX -> NegativeX
    com.badlogic.gdx.graphics.Cubemap$CubemapSide PositiveY -> PositiveY
    com.badlogic.gdx.graphics.Cubemap$CubemapSide NegativeY -> NegativeY
    com.badlogic.gdx.graphics.Cubemap$CubemapSide PositiveZ -> PositiveZ
    com.badlogic.gdx.graphics.Cubemap$CubemapSide NegativeZ -> NegativeZ
    int index -> index
    int glEnum -> glEnum
    com.badlogic.gdx.graphics.Cubemap$CubemapSide[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Cubemap$CubemapSide[] values() -> values
    com.badlogic.gdx.graphics.Cubemap$CubemapSide valueOf(java.lang.String) -> valueOf
    int getGLEnum() -> getGLEnum
com.badlogic.gdx.graphics.FPSLogger -> com.badlogic.gdx.graphics.FPSLogger:
    long startTime -> startTime
    void log() -> log
com.badlogic.gdx.graphics.GL20 -> com.badlogic.gdx.graphics.GL20:
    int GL_ES_VERSION_2_0 -> GL_ES_VERSION_2_0
    int GL_DEPTH_BUFFER_BIT -> GL_DEPTH_BUFFER_BIT
    int GL_STENCIL_BUFFER_BIT -> GL_STENCIL_BUFFER_BIT
    int GL_COLOR_BUFFER_BIT -> GL_COLOR_BUFFER_BIT
    int GL_FALSE -> GL_FALSE
    int GL_TRUE -> GL_TRUE
    int GL_POINTS -> GL_POINTS
    int GL_LINES -> GL_LINES
    int GL_LINE_LOOP -> GL_LINE_LOOP
    int GL_LINE_STRIP -> GL_LINE_STRIP
    int GL_TRIANGLES -> GL_TRIANGLES
    int GL_TRIANGLE_STRIP -> GL_TRIANGLE_STRIP
    int GL_TRIANGLE_FAN -> GL_TRIANGLE_FAN
    int GL_ZERO -> GL_ZERO
    int GL_ONE -> GL_ONE
    int GL_SRC_COLOR -> GL_SRC_COLOR
    int GL_ONE_MINUS_SRC_COLOR -> GL_ONE_MINUS_SRC_COLOR
    int GL_SRC_ALPHA -> GL_SRC_ALPHA
    int GL_ONE_MINUS_SRC_ALPHA -> GL_ONE_MINUS_SRC_ALPHA
    int GL_DST_ALPHA -> GL_DST_ALPHA
    int GL_ONE_MINUS_DST_ALPHA -> GL_ONE_MINUS_DST_ALPHA
    int GL_DST_COLOR -> GL_DST_COLOR
    int GL_ONE_MINUS_DST_COLOR -> GL_ONE_MINUS_DST_COLOR
    int GL_SRC_ALPHA_SATURATE -> GL_SRC_ALPHA_SATURATE
    int GL_FUNC_ADD -> GL_FUNC_ADD
    int GL_BLEND_EQUATION -> GL_BLEND_EQUATION
    int GL_BLEND_EQUATION_RGB -> GL_BLEND_EQUATION_RGB
    int GL_BLEND_EQUATION_ALPHA -> GL_BLEND_EQUATION_ALPHA
    int GL_FUNC_SUBTRACT -> GL_FUNC_SUBTRACT
    int GL_FUNC_REVERSE_SUBTRACT -> GL_FUNC_REVERSE_SUBTRACT
    int GL_BLEND_DST_RGB -> GL_BLEND_DST_RGB
    int GL_BLEND_SRC_RGB -> GL_BLEND_SRC_RGB
    int GL_BLEND_DST_ALPHA -> GL_BLEND_DST_ALPHA
    int GL_BLEND_SRC_ALPHA -> GL_BLEND_SRC_ALPHA
    int GL_CONSTANT_COLOR -> GL_CONSTANT_COLOR
    int GL_ONE_MINUS_CONSTANT_COLOR -> GL_ONE_MINUS_CONSTANT_COLOR
    int GL_CONSTANT_ALPHA -> GL_CONSTANT_ALPHA
    int GL_ONE_MINUS_CONSTANT_ALPHA -> GL_ONE_MINUS_CONSTANT_ALPHA
    int GL_BLEND_COLOR -> GL_BLEND_COLOR
    int GL_ARRAY_BUFFER -> GL_ARRAY_BUFFER
    int GL_ELEMENT_ARRAY_BUFFER -> GL_ELEMENT_ARRAY_BUFFER
    int GL_ARRAY_BUFFER_BINDING -> GL_ARRAY_BUFFER_BINDING
    int GL_ELEMENT_ARRAY_BUFFER_BINDING -> GL_ELEMENT_ARRAY_BUFFER_BINDING
    int GL_STREAM_DRAW -> GL_STREAM_DRAW
    int GL_STATIC_DRAW -> GL_STATIC_DRAW
    int GL_DYNAMIC_DRAW -> GL_DYNAMIC_DRAW
    int GL_BUFFER_SIZE -> GL_BUFFER_SIZE
    int GL_BUFFER_USAGE -> GL_BUFFER_USAGE
    int GL_CURRENT_VERTEX_ATTRIB -> GL_CURRENT_VERTEX_ATTRIB
    int GL_FRONT -> GL_FRONT
    int GL_BACK -> GL_BACK
    int GL_FRONT_AND_BACK -> GL_FRONT_AND_BACK
    int GL_TEXTURE_2D -> GL_TEXTURE_2D
    int GL_CULL_FACE -> GL_CULL_FACE
    int GL_BLEND -> GL_BLEND
    int GL_DITHER -> GL_DITHER
    int GL_STENCIL_TEST -> GL_STENCIL_TEST
    int GL_DEPTH_TEST -> GL_DEPTH_TEST
    int GL_SCISSOR_TEST -> GL_SCISSOR_TEST
    int GL_POLYGON_OFFSET_FILL -> GL_POLYGON_OFFSET_FILL
    int GL_SAMPLE_ALPHA_TO_COVERAGE -> GL_SAMPLE_ALPHA_TO_COVERAGE
    int GL_SAMPLE_COVERAGE -> GL_SAMPLE_COVERAGE
    int GL_NO_ERROR -> GL_NO_ERROR
    int GL_INVALID_ENUM -> GL_INVALID_ENUM
    int GL_INVALID_VALUE -> GL_INVALID_VALUE
    int GL_INVALID_OPERATION -> GL_INVALID_OPERATION
    int GL_OUT_OF_MEMORY -> GL_OUT_OF_MEMORY
    int GL_CW -> GL_CW
    int GL_CCW -> GL_CCW
    int GL_LINE_WIDTH -> GL_LINE_WIDTH
    int GL_ALIASED_POINT_SIZE_RANGE -> GL_ALIASED_POINT_SIZE_RANGE
    int GL_ALIASED_LINE_WIDTH_RANGE -> GL_ALIASED_LINE_WIDTH_RANGE
    int GL_CULL_FACE_MODE -> GL_CULL_FACE_MODE
    int GL_FRONT_FACE -> GL_FRONT_FACE
    int GL_DEPTH_RANGE -> GL_DEPTH_RANGE
    int GL_DEPTH_WRITEMASK -> GL_DEPTH_WRITEMASK
    int GL_DEPTH_CLEAR_VALUE -> GL_DEPTH_CLEAR_VALUE
    int GL_DEPTH_FUNC -> GL_DEPTH_FUNC
    int GL_STENCIL_CLEAR_VALUE -> GL_STENCIL_CLEAR_VALUE
    int GL_STENCIL_FUNC -> GL_STENCIL_FUNC
    int GL_STENCIL_FAIL -> GL_STENCIL_FAIL
    int GL_STENCIL_PASS_DEPTH_FAIL -> GL_STENCIL_PASS_DEPTH_FAIL
    int GL_STENCIL_PASS_DEPTH_PASS -> GL_STENCIL_PASS_DEPTH_PASS
    int GL_STENCIL_REF -> GL_STENCIL_REF
    int GL_STENCIL_VALUE_MASK -> GL_STENCIL_VALUE_MASK
    int GL_STENCIL_WRITEMASK -> GL_STENCIL_WRITEMASK
    int GL_STENCIL_BACK_FUNC -> GL_STENCIL_BACK_FUNC
    int GL_STENCIL_BACK_FAIL -> GL_STENCIL_BACK_FAIL
    int GL_STENCIL_BACK_PASS_DEPTH_FAIL -> GL_STENCIL_BACK_PASS_DEPTH_FAIL
    int GL_STENCIL_BACK_PASS_DEPTH_PASS -> GL_STENCIL_BACK_PASS_DEPTH_PASS
    int GL_STENCIL_BACK_REF -> GL_STENCIL_BACK_REF
    int GL_STENCIL_BACK_VALUE_MASK -> GL_STENCIL_BACK_VALUE_MASK
    int GL_STENCIL_BACK_WRITEMASK -> GL_STENCIL_BACK_WRITEMASK
    int GL_VIEWPORT -> GL_VIEWPORT
    int GL_SCISSOR_BOX -> GL_SCISSOR_BOX
    int GL_COLOR_CLEAR_VALUE -> GL_COLOR_CLEAR_VALUE
    int GL_COLOR_WRITEMASK -> GL_COLOR_WRITEMASK
    int GL_UNPACK_ALIGNMENT -> GL_UNPACK_ALIGNMENT
    int GL_PACK_ALIGNMENT -> GL_PACK_ALIGNMENT
    int GL_MAX_TEXTURE_SIZE -> GL_MAX_TEXTURE_SIZE
    int GL_MAX_TEXTURE_UNITS -> GL_MAX_TEXTURE_UNITS
    int GL_MAX_VIEWPORT_DIMS -> GL_MAX_VIEWPORT_DIMS
    int GL_SUBPIXEL_BITS -> GL_SUBPIXEL_BITS
    int GL_RED_BITS -> GL_RED_BITS
    int GL_GREEN_BITS -> GL_GREEN_BITS
    int GL_BLUE_BITS -> GL_BLUE_BITS
    int GL_ALPHA_BITS -> GL_ALPHA_BITS
    int GL_DEPTH_BITS -> GL_DEPTH_BITS
    int GL_STENCIL_BITS -> GL_STENCIL_BITS
    int GL_POLYGON_OFFSET_UNITS -> GL_POLYGON_OFFSET_UNITS
    int GL_POLYGON_OFFSET_FACTOR -> GL_POLYGON_OFFSET_FACTOR
    int GL_TEXTURE_BINDING_2D -> GL_TEXTURE_BINDING_2D
    int GL_SAMPLE_BUFFERS -> GL_SAMPLE_BUFFERS
    int GL_SAMPLES -> GL_SAMPLES
    int GL_SAMPLE_COVERAGE_VALUE -> GL_SAMPLE_COVERAGE_VALUE
    int GL_SAMPLE_COVERAGE_INVERT -> GL_SAMPLE_COVERAGE_INVERT
    int GL_NUM_COMPRESSED_TEXTURE_FORMATS -> GL_NUM_COMPRESSED_TEXTURE_FORMATS
    int GL_COMPRESSED_TEXTURE_FORMATS -> GL_COMPRESSED_TEXTURE_FORMATS
    int GL_DONT_CARE -> GL_DONT_CARE
    int GL_FASTEST -> GL_FASTEST
    int GL_NICEST -> GL_NICEST
    int GL_GENERATE_MIPMAP -> GL_GENERATE_MIPMAP
    int GL_GENERATE_MIPMAP_HINT -> GL_GENERATE_MIPMAP_HINT
    int GL_BYTE -> GL_BYTE
    int GL_UNSIGNED_BYTE -> GL_UNSIGNED_BYTE
    int GL_SHORT -> GL_SHORT
    int GL_UNSIGNED_SHORT -> GL_UNSIGNED_SHORT
    int GL_INT -> GL_INT
    int GL_UNSIGNED_INT -> GL_UNSIGNED_INT
    int GL_FLOAT -> GL_FLOAT
    int GL_FIXED -> GL_FIXED
    int GL_DEPTH_COMPONENT -> GL_DEPTH_COMPONENT
    int GL_ALPHA -> GL_ALPHA
    int GL_RGB -> GL_RGB
    int GL_RGBA -> GL_RGBA
    int GL_LUMINANCE -> GL_LUMINANCE
    int GL_LUMINANCE_ALPHA -> GL_LUMINANCE_ALPHA
    int GL_UNSIGNED_SHORT_4_4_4_4 -> GL_UNSIGNED_SHORT_4_4_4_4
    int GL_UNSIGNED_SHORT_5_5_5_1 -> GL_UNSIGNED_SHORT_5_5_5_1
    int GL_UNSIGNED_SHORT_5_6_5 -> GL_UNSIGNED_SHORT_5_6_5
    int GL_FRAGMENT_SHADER -> GL_FRAGMENT_SHADER
    int GL_VERTEX_SHADER -> GL_VERTEX_SHADER
    int GL_MAX_VERTEX_ATTRIBS -> GL_MAX_VERTEX_ATTRIBS
    int GL_MAX_VERTEX_UNIFORM_VECTORS -> GL_MAX_VERTEX_UNIFORM_VECTORS
    int GL_MAX_VARYING_VECTORS -> GL_MAX_VARYING_VECTORS
    int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS -> GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
    int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS -> GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
    int GL_MAX_TEXTURE_IMAGE_UNITS -> GL_MAX_TEXTURE_IMAGE_UNITS
    int GL_MAX_FRAGMENT_UNIFORM_VECTORS -> GL_MAX_FRAGMENT_UNIFORM_VECTORS
    int GL_SHADER_TYPE -> GL_SHADER_TYPE
    int GL_DELETE_STATUS -> GL_DELETE_STATUS
    int GL_LINK_STATUS -> GL_LINK_STATUS
    int GL_VALIDATE_STATUS -> GL_VALIDATE_STATUS
    int GL_ATTACHED_SHADERS -> GL_ATTACHED_SHADERS
    int GL_ACTIVE_UNIFORMS -> GL_ACTIVE_UNIFORMS
    int GL_ACTIVE_UNIFORM_MAX_LENGTH -> GL_ACTIVE_UNIFORM_MAX_LENGTH
    int GL_ACTIVE_ATTRIBUTES -> GL_ACTIVE_ATTRIBUTES
    int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH -> GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
    int GL_SHADING_LANGUAGE_VERSION -> GL_SHADING_LANGUAGE_VERSION
    int GL_CURRENT_PROGRAM -> GL_CURRENT_PROGRAM
    int GL_NEVER -> GL_NEVER
    int GL_LESS -> GL_LESS
    int GL_EQUAL -> GL_EQUAL
    int GL_LEQUAL -> GL_LEQUAL
    int GL_GREATER -> GL_GREATER
    int GL_NOTEQUAL -> GL_NOTEQUAL
    int GL_GEQUAL -> GL_GEQUAL
    int GL_ALWAYS -> GL_ALWAYS
    int GL_KEEP -> GL_KEEP
    int GL_REPLACE -> GL_REPLACE
    int GL_INCR -> GL_INCR
    int GL_DECR -> GL_DECR
    int GL_INVERT -> GL_INVERT
    int GL_INCR_WRAP -> GL_INCR_WRAP
    int GL_DECR_WRAP -> GL_DECR_WRAP
    int GL_VENDOR -> GL_VENDOR
    int GL_RENDERER -> GL_RENDERER
    int GL_VERSION -> GL_VERSION
    int GL_EXTENSIONS -> GL_EXTENSIONS
    int GL_NEAREST -> GL_NEAREST
    int GL_LINEAR -> GL_LINEAR
    int GL_NEAREST_MIPMAP_NEAREST -> GL_NEAREST_MIPMAP_NEAREST
    int GL_LINEAR_MIPMAP_NEAREST -> GL_LINEAR_MIPMAP_NEAREST
    int GL_NEAREST_MIPMAP_LINEAR -> GL_NEAREST_MIPMAP_LINEAR
    int GL_LINEAR_MIPMAP_LINEAR -> GL_LINEAR_MIPMAP_LINEAR
    int GL_TEXTURE_MAG_FILTER -> GL_TEXTURE_MAG_FILTER
    int GL_TEXTURE_MIN_FILTER -> GL_TEXTURE_MIN_FILTER
    int GL_TEXTURE_WRAP_S -> GL_TEXTURE_WRAP_S
    int GL_TEXTURE_WRAP_T -> GL_TEXTURE_WRAP_T
    int GL_TEXTURE -> GL_TEXTURE
    int GL_TEXTURE_CUBE_MAP -> GL_TEXTURE_CUBE_MAP
    int GL_TEXTURE_BINDING_CUBE_MAP -> GL_TEXTURE_BINDING_CUBE_MAP
    int GL_TEXTURE_CUBE_MAP_POSITIVE_X -> GL_TEXTURE_CUBE_MAP_POSITIVE_X
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_X -> GL_TEXTURE_CUBE_MAP_NEGATIVE_X
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Y -> GL_TEXTURE_CUBE_MAP_POSITIVE_Y
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y -> GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
    int GL_TEXTURE_CUBE_MAP_POSITIVE_Z -> GL_TEXTURE_CUBE_MAP_POSITIVE_Z
    int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z -> GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
    int GL_MAX_CUBE_MAP_TEXTURE_SIZE -> GL_MAX_CUBE_MAP_TEXTURE_SIZE
    int GL_TEXTURE0 -> GL_TEXTURE0
    int GL_TEXTURE1 -> GL_TEXTURE1
    int GL_TEXTURE2 -> GL_TEXTURE2
    int GL_TEXTURE3 -> GL_TEXTURE3
    int GL_TEXTURE4 -> GL_TEXTURE4
    int GL_TEXTURE5 -> GL_TEXTURE5
    int GL_TEXTURE6 -> GL_TEXTURE6
    int GL_TEXTURE7 -> GL_TEXTURE7
    int GL_TEXTURE8 -> GL_TEXTURE8
    int GL_TEXTURE9 -> GL_TEXTURE9
    int GL_TEXTURE10 -> GL_TEXTURE10
    int GL_TEXTURE11 -> GL_TEXTURE11
    int GL_TEXTURE12 -> GL_TEXTURE12
    int GL_TEXTURE13 -> GL_TEXTURE13
    int GL_TEXTURE14 -> GL_TEXTURE14
    int GL_TEXTURE15 -> GL_TEXTURE15
    int GL_TEXTURE16 -> GL_TEXTURE16
    int GL_TEXTURE17 -> GL_TEXTURE17
    int GL_TEXTURE18 -> GL_TEXTURE18
    int GL_TEXTURE19 -> GL_TEXTURE19
    int GL_TEXTURE20 -> GL_TEXTURE20
    int GL_TEXTURE21 -> GL_TEXTURE21
    int GL_TEXTURE22 -> GL_TEXTURE22
    int GL_TEXTURE23 -> GL_TEXTURE23
    int GL_TEXTURE24 -> GL_TEXTURE24
    int GL_TEXTURE25 -> GL_TEXTURE25
    int GL_TEXTURE26 -> GL_TEXTURE26
    int GL_TEXTURE27 -> GL_TEXTURE27
    int GL_TEXTURE28 -> GL_TEXTURE28
    int GL_TEXTURE29 -> GL_TEXTURE29
    int GL_TEXTURE30 -> GL_TEXTURE30
    int GL_TEXTURE31 -> GL_TEXTURE31
    int GL_ACTIVE_TEXTURE -> GL_ACTIVE_TEXTURE
    int GL_REPEAT -> GL_REPEAT
    int GL_CLAMP_TO_EDGE -> GL_CLAMP_TO_EDGE
    int GL_MIRRORED_REPEAT -> GL_MIRRORED_REPEAT
    int GL_FLOAT_VEC2 -> GL_FLOAT_VEC2
    int GL_FLOAT_VEC3 -> GL_FLOAT_VEC3
    int GL_FLOAT_VEC4 -> GL_FLOAT_VEC4
    int GL_INT_VEC2 -> GL_INT_VEC2
    int GL_INT_VEC3 -> GL_INT_VEC3
    int GL_INT_VEC4 -> GL_INT_VEC4
    int GL_BOOL -> GL_BOOL
    int GL_BOOL_VEC2 -> GL_BOOL_VEC2
    int GL_BOOL_VEC3 -> GL_BOOL_VEC3
    int GL_BOOL_VEC4 -> GL_BOOL_VEC4
    int GL_FLOAT_MAT2 -> GL_FLOAT_MAT2
    int GL_FLOAT_MAT3 -> GL_FLOAT_MAT3
    int GL_FLOAT_MAT4 -> GL_FLOAT_MAT4
    int GL_SAMPLER_2D -> GL_SAMPLER_2D
    int GL_SAMPLER_CUBE -> GL_SAMPLER_CUBE
    int GL_VERTEX_ATTRIB_ARRAY_ENABLED -> GL_VERTEX_ATTRIB_ARRAY_ENABLED
    int GL_VERTEX_ATTRIB_ARRAY_SIZE -> GL_VERTEX_ATTRIB_ARRAY_SIZE
    int GL_VERTEX_ATTRIB_ARRAY_STRIDE -> GL_VERTEX_ATTRIB_ARRAY_STRIDE
    int GL_VERTEX_ATTRIB_ARRAY_TYPE -> GL_VERTEX_ATTRIB_ARRAY_TYPE
    int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED -> GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
    int GL_VERTEX_ATTRIB_ARRAY_POINTER -> GL_VERTEX_ATTRIB_ARRAY_POINTER
    int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING -> GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
    int GL_IMPLEMENTATION_COLOR_READ_TYPE -> GL_IMPLEMENTATION_COLOR_READ_TYPE
    int GL_IMPLEMENTATION_COLOR_READ_FORMAT -> GL_IMPLEMENTATION_COLOR_READ_FORMAT
    int GL_COMPILE_STATUS -> GL_COMPILE_STATUS
    int GL_INFO_LOG_LENGTH -> GL_INFO_LOG_LENGTH
    int GL_SHADER_SOURCE_LENGTH -> GL_SHADER_SOURCE_LENGTH
    int GL_SHADER_COMPILER -> GL_SHADER_COMPILER
    int GL_SHADER_BINARY_FORMATS -> GL_SHADER_BINARY_FORMATS
    int GL_NUM_SHADER_BINARY_FORMATS -> GL_NUM_SHADER_BINARY_FORMATS
    int GL_LOW_FLOAT -> GL_LOW_FLOAT
    int GL_MEDIUM_FLOAT -> GL_MEDIUM_FLOAT
    int GL_HIGH_FLOAT -> GL_HIGH_FLOAT
    int GL_LOW_INT -> GL_LOW_INT
    int GL_MEDIUM_INT -> GL_MEDIUM_INT
    int GL_HIGH_INT -> GL_HIGH_INT
    int GL_FRAMEBUFFER -> GL_FRAMEBUFFER
    int GL_RENDERBUFFER -> GL_RENDERBUFFER
    int GL_RGBA4 -> GL_RGBA4
    int GL_RGB5_A1 -> GL_RGB5_A1
    int GL_RGB565 -> GL_RGB565
    int GL_DEPTH_COMPONENT16 -> GL_DEPTH_COMPONENT16
    int GL_STENCIL_INDEX -> GL_STENCIL_INDEX
    int GL_STENCIL_INDEX8 -> GL_STENCIL_INDEX8
    int GL_RENDERBUFFER_WIDTH -> GL_RENDERBUFFER_WIDTH
    int GL_RENDERBUFFER_HEIGHT -> GL_RENDERBUFFER_HEIGHT
    int GL_RENDERBUFFER_INTERNAL_FORMAT -> GL_RENDERBUFFER_INTERNAL_FORMAT
    int GL_RENDERBUFFER_RED_SIZE -> GL_RENDERBUFFER_RED_SIZE
    int GL_RENDERBUFFER_GREEN_SIZE -> GL_RENDERBUFFER_GREEN_SIZE
    int GL_RENDERBUFFER_BLUE_SIZE -> GL_RENDERBUFFER_BLUE_SIZE
    int GL_RENDERBUFFER_ALPHA_SIZE -> GL_RENDERBUFFER_ALPHA_SIZE
    int GL_RENDERBUFFER_DEPTH_SIZE -> GL_RENDERBUFFER_DEPTH_SIZE
    int GL_RENDERBUFFER_STENCIL_SIZE -> GL_RENDERBUFFER_STENCIL_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE -> GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
    int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME -> GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL -> GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE -> GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
    int GL_COLOR_ATTACHMENT0 -> GL_COLOR_ATTACHMENT0
    int GL_DEPTH_ATTACHMENT -> GL_DEPTH_ATTACHMENT
    int GL_STENCIL_ATTACHMENT -> GL_STENCIL_ATTACHMENT
    int GL_NONE -> GL_NONE
    int GL_FRAMEBUFFER_COMPLETE -> GL_FRAMEBUFFER_COMPLETE
    int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT -> GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
    int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT -> GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
    int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS -> GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
    int GL_FRAMEBUFFER_UNSUPPORTED -> GL_FRAMEBUFFER_UNSUPPORTED
    int GL_FRAMEBUFFER_BINDING -> GL_FRAMEBUFFER_BINDING
    int GL_RENDERBUFFER_BINDING -> GL_RENDERBUFFER_BINDING
    int GL_MAX_RENDERBUFFER_SIZE -> GL_MAX_RENDERBUFFER_SIZE
    int GL_INVALID_FRAMEBUFFER_OPERATION -> GL_INVALID_FRAMEBUFFER_OPERATION
    int GL_VERTEX_PROGRAM_POINT_SIZE -> GL_VERTEX_PROGRAM_POINT_SIZE
    int GL_COVERAGE_BUFFER_BIT_NV -> GL_COVERAGE_BUFFER_BIT_NV
    int GL_TEXTURE_MAX_ANISOTROPY_EXT -> GL_TEXTURE_MAX_ANISOTROPY_EXT
    int GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT -> GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
    void glActiveTexture(int) -> glActiveTexture
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFrontFace(int) -> glFrontFace
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLineWidth(float) -> glLineWidth
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glScissor(int,int,int,int) -> glScissor
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glViewport(int,int,int,int) -> glViewport
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDetachShader(int,int) -> glDetachShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLinkProgram(int) -> glLinkProgram
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.graphics.GL30 -> com.badlogic.gdx.graphics.GL30:
    int GL_READ_BUFFER -> GL_READ_BUFFER
    int GL_UNPACK_ROW_LENGTH -> GL_UNPACK_ROW_LENGTH
    int GL_UNPACK_SKIP_ROWS -> GL_UNPACK_SKIP_ROWS
    int GL_UNPACK_SKIP_PIXELS -> GL_UNPACK_SKIP_PIXELS
    int GL_PACK_ROW_LENGTH -> GL_PACK_ROW_LENGTH
    int GL_PACK_SKIP_ROWS -> GL_PACK_SKIP_ROWS
    int GL_PACK_SKIP_PIXELS -> GL_PACK_SKIP_PIXELS
    int GL_COLOR -> GL_COLOR
    int GL_DEPTH -> GL_DEPTH
    int GL_STENCIL -> GL_STENCIL
    int GL_RED -> GL_RED
    int GL_RGB8 -> GL_RGB8
    int GL_RGBA8 -> GL_RGBA8
    int GL_RGB10_A2 -> GL_RGB10_A2
    int GL_TEXTURE_BINDING_3D -> GL_TEXTURE_BINDING_3D
    int GL_UNPACK_SKIP_IMAGES -> GL_UNPACK_SKIP_IMAGES
    int GL_UNPACK_IMAGE_HEIGHT -> GL_UNPACK_IMAGE_HEIGHT
    int GL_TEXTURE_3D -> GL_TEXTURE_3D
    int GL_TEXTURE_WRAP_R -> GL_TEXTURE_WRAP_R
    int GL_MAX_3D_TEXTURE_SIZE -> GL_MAX_3D_TEXTURE_SIZE
    int GL_UNSIGNED_INT_2_10_10_10_REV -> GL_UNSIGNED_INT_2_10_10_10_REV
    int GL_MAX_ELEMENTS_VERTICES -> GL_MAX_ELEMENTS_VERTICES
    int GL_MAX_ELEMENTS_INDICES -> GL_MAX_ELEMENTS_INDICES
    int GL_TEXTURE_MIN_LOD -> GL_TEXTURE_MIN_LOD
    int GL_TEXTURE_MAX_LOD -> GL_TEXTURE_MAX_LOD
    int GL_TEXTURE_BASE_LEVEL -> GL_TEXTURE_BASE_LEVEL
    int GL_TEXTURE_MAX_LEVEL -> GL_TEXTURE_MAX_LEVEL
    int GL_MIN -> GL_MIN
    int GL_MAX -> GL_MAX
    int GL_DEPTH_COMPONENT24 -> GL_DEPTH_COMPONENT24
    int GL_MAX_TEXTURE_LOD_BIAS -> GL_MAX_TEXTURE_LOD_BIAS
    int GL_TEXTURE_COMPARE_MODE -> GL_TEXTURE_COMPARE_MODE
    int GL_TEXTURE_COMPARE_FUNC -> GL_TEXTURE_COMPARE_FUNC
    int GL_CURRENT_QUERY -> GL_CURRENT_QUERY
    int GL_QUERY_RESULT -> GL_QUERY_RESULT
    int GL_QUERY_RESULT_AVAILABLE -> GL_QUERY_RESULT_AVAILABLE
    int GL_BUFFER_MAPPED -> GL_BUFFER_MAPPED
    int GL_BUFFER_MAP_POINTER -> GL_BUFFER_MAP_POINTER
    int GL_STREAM_READ -> GL_STREAM_READ
    int GL_STREAM_COPY -> GL_STREAM_COPY
    int GL_STATIC_READ -> GL_STATIC_READ
    int GL_STATIC_COPY -> GL_STATIC_COPY
    int GL_DYNAMIC_READ -> GL_DYNAMIC_READ
    int GL_DYNAMIC_COPY -> GL_DYNAMIC_COPY
    int GL_MAX_DRAW_BUFFERS -> GL_MAX_DRAW_BUFFERS
    int GL_DRAW_BUFFER0 -> GL_DRAW_BUFFER0
    int GL_DRAW_BUFFER1 -> GL_DRAW_BUFFER1
    int GL_DRAW_BUFFER2 -> GL_DRAW_BUFFER2
    int GL_DRAW_BUFFER3 -> GL_DRAW_BUFFER3
    int GL_DRAW_BUFFER4 -> GL_DRAW_BUFFER4
    int GL_DRAW_BUFFER5 -> GL_DRAW_BUFFER5
    int GL_DRAW_BUFFER6 -> GL_DRAW_BUFFER6
    int GL_DRAW_BUFFER7 -> GL_DRAW_BUFFER7
    int GL_DRAW_BUFFER8 -> GL_DRAW_BUFFER8
    int GL_DRAW_BUFFER9 -> GL_DRAW_BUFFER9
    int GL_DRAW_BUFFER10 -> GL_DRAW_BUFFER10
    int GL_DRAW_BUFFER11 -> GL_DRAW_BUFFER11
    int GL_DRAW_BUFFER12 -> GL_DRAW_BUFFER12
    int GL_DRAW_BUFFER13 -> GL_DRAW_BUFFER13
    int GL_DRAW_BUFFER14 -> GL_DRAW_BUFFER14
    int GL_DRAW_BUFFER15 -> GL_DRAW_BUFFER15
    int GL_MAX_FRAGMENT_UNIFORM_COMPONENTS -> GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
    int GL_MAX_VERTEX_UNIFORM_COMPONENTS -> GL_MAX_VERTEX_UNIFORM_COMPONENTS
    int GL_SAMPLER_3D -> GL_SAMPLER_3D
    int GL_SAMPLER_2D_SHADOW -> GL_SAMPLER_2D_SHADOW
    int GL_FRAGMENT_SHADER_DERIVATIVE_HINT -> GL_FRAGMENT_SHADER_DERIVATIVE_HINT
    int GL_PIXEL_PACK_BUFFER -> GL_PIXEL_PACK_BUFFER
    int GL_PIXEL_UNPACK_BUFFER -> GL_PIXEL_UNPACK_BUFFER
    int GL_PIXEL_PACK_BUFFER_BINDING -> GL_PIXEL_PACK_BUFFER_BINDING
    int GL_PIXEL_UNPACK_BUFFER_BINDING -> GL_PIXEL_UNPACK_BUFFER_BINDING
    int GL_FLOAT_MAT2x3 -> GL_FLOAT_MAT2x3
    int GL_FLOAT_MAT2x4 -> GL_FLOAT_MAT2x4
    int GL_FLOAT_MAT3x2 -> GL_FLOAT_MAT3x2
    int GL_FLOAT_MAT3x4 -> GL_FLOAT_MAT3x4
    int GL_FLOAT_MAT4x2 -> GL_FLOAT_MAT4x2
    int GL_FLOAT_MAT4x3 -> GL_FLOAT_MAT4x3
    int GL_SRGB -> GL_SRGB
    int GL_SRGB8 -> GL_SRGB8
    int GL_SRGB8_ALPHA8 -> GL_SRGB8_ALPHA8
    int GL_COMPARE_REF_TO_TEXTURE -> GL_COMPARE_REF_TO_TEXTURE
    int GL_MAJOR_VERSION -> GL_MAJOR_VERSION
    int GL_MINOR_VERSION -> GL_MINOR_VERSION
    int GL_NUM_EXTENSIONS -> GL_NUM_EXTENSIONS
    int GL_RGBA32F -> GL_RGBA32F
    int GL_RGB32F -> GL_RGB32F
    int GL_RGBA16F -> GL_RGBA16F
    int GL_RGB16F -> GL_RGB16F
    int GL_VERTEX_ATTRIB_ARRAY_INTEGER -> GL_VERTEX_ATTRIB_ARRAY_INTEGER
    int GL_MAX_ARRAY_TEXTURE_LAYERS -> GL_MAX_ARRAY_TEXTURE_LAYERS
    int GL_MIN_PROGRAM_TEXEL_OFFSET -> GL_MIN_PROGRAM_TEXEL_OFFSET
    int GL_MAX_PROGRAM_TEXEL_OFFSET -> GL_MAX_PROGRAM_TEXEL_OFFSET
    int GL_MAX_VARYING_COMPONENTS -> GL_MAX_VARYING_COMPONENTS
    int GL_TEXTURE_2D_ARRAY -> GL_TEXTURE_2D_ARRAY
    int GL_TEXTURE_BINDING_2D_ARRAY -> GL_TEXTURE_BINDING_2D_ARRAY
    int GL_R11F_G11F_B10F -> GL_R11F_G11F_B10F
    int GL_UNSIGNED_INT_10F_11F_11F_REV -> GL_UNSIGNED_INT_10F_11F_11F_REV
    int GL_RGB9_E5 -> GL_RGB9_E5
    int GL_UNSIGNED_INT_5_9_9_9_REV -> GL_UNSIGNED_INT_5_9_9_9_REV
    int GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH -> GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
    int GL_TRANSFORM_FEEDBACK_BUFFER_MODE -> GL_TRANSFORM_FEEDBACK_BUFFER_MODE
    int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS -> GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
    int GL_TRANSFORM_FEEDBACK_VARYINGS -> GL_TRANSFORM_FEEDBACK_VARYINGS
    int GL_TRANSFORM_FEEDBACK_BUFFER_START -> GL_TRANSFORM_FEEDBACK_BUFFER_START
    int GL_TRANSFORM_FEEDBACK_BUFFER_SIZE -> GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
    int GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN -> GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
    int GL_RASTERIZER_DISCARD -> GL_RASTERIZER_DISCARD
    int GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS -> GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
    int GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS -> GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
    int GL_INTERLEAVED_ATTRIBS -> GL_INTERLEAVED_ATTRIBS
    int GL_SEPARATE_ATTRIBS -> GL_SEPARATE_ATTRIBS
    int GL_TRANSFORM_FEEDBACK_BUFFER -> GL_TRANSFORM_FEEDBACK_BUFFER
    int GL_TRANSFORM_FEEDBACK_BUFFER_BINDING -> GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
    int GL_RGBA32UI -> GL_RGBA32UI
    int GL_RGB32UI -> GL_RGB32UI
    int GL_RGBA16UI -> GL_RGBA16UI
    int GL_RGB16UI -> GL_RGB16UI
    int GL_RGBA8UI -> GL_RGBA8UI
    int GL_RGB8UI -> GL_RGB8UI
    int GL_RGBA32I -> GL_RGBA32I
    int GL_RGB32I -> GL_RGB32I
    int GL_RGBA16I -> GL_RGBA16I
    int GL_RGB16I -> GL_RGB16I
    int GL_RGBA8I -> GL_RGBA8I
    int GL_RGB8I -> GL_RGB8I
    int GL_RED_INTEGER -> GL_RED_INTEGER
    int GL_RGB_INTEGER -> GL_RGB_INTEGER
    int GL_RGBA_INTEGER -> GL_RGBA_INTEGER
    int GL_SAMPLER_2D_ARRAY -> GL_SAMPLER_2D_ARRAY
    int GL_SAMPLER_2D_ARRAY_SHADOW -> GL_SAMPLER_2D_ARRAY_SHADOW
    int GL_SAMPLER_CUBE_SHADOW -> GL_SAMPLER_CUBE_SHADOW
    int GL_UNSIGNED_INT_VEC2 -> GL_UNSIGNED_INT_VEC2
    int GL_UNSIGNED_INT_VEC3 -> GL_UNSIGNED_INT_VEC3
    int GL_UNSIGNED_INT_VEC4 -> GL_UNSIGNED_INT_VEC4
    int GL_INT_SAMPLER_2D -> GL_INT_SAMPLER_2D
    int GL_INT_SAMPLER_3D -> GL_INT_SAMPLER_3D
    int GL_INT_SAMPLER_CUBE -> GL_INT_SAMPLER_CUBE
    int GL_INT_SAMPLER_2D_ARRAY -> GL_INT_SAMPLER_2D_ARRAY
    int GL_UNSIGNED_INT_SAMPLER_2D -> GL_UNSIGNED_INT_SAMPLER_2D
    int GL_UNSIGNED_INT_SAMPLER_3D -> GL_UNSIGNED_INT_SAMPLER_3D
    int GL_UNSIGNED_INT_SAMPLER_CUBE -> GL_UNSIGNED_INT_SAMPLER_CUBE
    int GL_UNSIGNED_INT_SAMPLER_2D_ARRAY -> GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
    int GL_BUFFER_ACCESS_FLAGS -> GL_BUFFER_ACCESS_FLAGS
    int GL_BUFFER_MAP_LENGTH -> GL_BUFFER_MAP_LENGTH
    int GL_BUFFER_MAP_OFFSET -> GL_BUFFER_MAP_OFFSET
    int GL_DEPTH_COMPONENT32F -> GL_DEPTH_COMPONENT32F
    int GL_DEPTH32F_STENCIL8 -> GL_DEPTH32F_STENCIL8
    int GL_FLOAT_32_UNSIGNED_INT_24_8_REV -> GL_FLOAT_32_UNSIGNED_INT_24_8_REV
    int GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING -> GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
    int GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE -> GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
    int GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
    int GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE -> GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
    int GL_FRAMEBUFFER_DEFAULT -> GL_FRAMEBUFFER_DEFAULT
    int GL_FRAMEBUFFER_UNDEFINED -> GL_FRAMEBUFFER_UNDEFINED
    int GL_DEPTH_STENCIL_ATTACHMENT -> GL_DEPTH_STENCIL_ATTACHMENT
    int GL_DEPTH_STENCIL -> GL_DEPTH_STENCIL
    int GL_UNSIGNED_INT_24_8 -> GL_UNSIGNED_INT_24_8
    int GL_DEPTH24_STENCIL8 -> GL_DEPTH24_STENCIL8
    int GL_UNSIGNED_NORMALIZED -> GL_UNSIGNED_NORMALIZED
    int GL_DRAW_FRAMEBUFFER_BINDING -> GL_DRAW_FRAMEBUFFER_BINDING
    int GL_READ_FRAMEBUFFER -> GL_READ_FRAMEBUFFER
    int GL_DRAW_FRAMEBUFFER -> GL_DRAW_FRAMEBUFFER
    int GL_READ_FRAMEBUFFER_BINDING -> GL_READ_FRAMEBUFFER_BINDING
    int GL_RENDERBUFFER_SAMPLES -> GL_RENDERBUFFER_SAMPLES
    int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER -> GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
    int GL_MAX_COLOR_ATTACHMENTS -> GL_MAX_COLOR_ATTACHMENTS
    int GL_COLOR_ATTACHMENT1 -> GL_COLOR_ATTACHMENT1
    int GL_COLOR_ATTACHMENT2 -> GL_COLOR_ATTACHMENT2
    int GL_COLOR_ATTACHMENT3 -> GL_COLOR_ATTACHMENT3
    int GL_COLOR_ATTACHMENT4 -> GL_COLOR_ATTACHMENT4
    int GL_COLOR_ATTACHMENT5 -> GL_COLOR_ATTACHMENT5
    int GL_COLOR_ATTACHMENT6 -> GL_COLOR_ATTACHMENT6
    int GL_COLOR_ATTACHMENT7 -> GL_COLOR_ATTACHMENT7
    int GL_COLOR_ATTACHMENT8 -> GL_COLOR_ATTACHMENT8
    int GL_COLOR_ATTACHMENT9 -> GL_COLOR_ATTACHMENT9
    int GL_COLOR_ATTACHMENT10 -> GL_COLOR_ATTACHMENT10
    int GL_COLOR_ATTACHMENT11 -> GL_COLOR_ATTACHMENT11
    int GL_COLOR_ATTACHMENT12 -> GL_COLOR_ATTACHMENT12
    int GL_COLOR_ATTACHMENT13 -> GL_COLOR_ATTACHMENT13
    int GL_COLOR_ATTACHMENT14 -> GL_COLOR_ATTACHMENT14
    int GL_COLOR_ATTACHMENT15 -> GL_COLOR_ATTACHMENT15
    int GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE -> GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
    int GL_MAX_SAMPLES -> GL_MAX_SAMPLES
    int GL_HALF_FLOAT -> GL_HALF_FLOAT
    int GL_MAP_READ_BIT -> GL_MAP_READ_BIT
    int GL_MAP_WRITE_BIT -> GL_MAP_WRITE_BIT
    int GL_MAP_INVALIDATE_RANGE_BIT -> GL_MAP_INVALIDATE_RANGE_BIT
    int GL_MAP_INVALIDATE_BUFFER_BIT -> GL_MAP_INVALIDATE_BUFFER_BIT
    int GL_MAP_FLUSH_EXPLICIT_BIT -> GL_MAP_FLUSH_EXPLICIT_BIT
    int GL_MAP_UNSYNCHRONIZED_BIT -> GL_MAP_UNSYNCHRONIZED_BIT
    int GL_RG -> GL_RG
    int GL_RG_INTEGER -> GL_RG_INTEGER
    int GL_R8 -> GL_R8
    int GL_RG8 -> GL_RG8
    int GL_R16F -> GL_R16F
    int GL_R32F -> GL_R32F
    int GL_RG16F -> GL_RG16F
    int GL_RG32F -> GL_RG32F
    int GL_R8I -> GL_R8I
    int GL_R8UI -> GL_R8UI
    int GL_R16I -> GL_R16I
    int GL_R16UI -> GL_R16UI
    int GL_R32I -> GL_R32I
    int GL_R32UI -> GL_R32UI
    int GL_RG8I -> GL_RG8I
    int GL_RG8UI -> GL_RG8UI
    int GL_RG16I -> GL_RG16I
    int GL_RG16UI -> GL_RG16UI
    int GL_RG32I -> GL_RG32I
    int GL_RG32UI -> GL_RG32UI
    int GL_VERTEX_ARRAY_BINDING -> GL_VERTEX_ARRAY_BINDING
    int GL_R8_SNORM -> GL_R8_SNORM
    int GL_RG8_SNORM -> GL_RG8_SNORM
    int GL_RGB8_SNORM -> GL_RGB8_SNORM
    int GL_RGBA8_SNORM -> GL_RGBA8_SNORM
    int GL_SIGNED_NORMALIZED -> GL_SIGNED_NORMALIZED
    int GL_PRIMITIVE_RESTART_FIXED_INDEX -> GL_PRIMITIVE_RESTART_FIXED_INDEX
    int GL_COPY_READ_BUFFER -> GL_COPY_READ_BUFFER
    int GL_COPY_WRITE_BUFFER -> GL_COPY_WRITE_BUFFER
    int GL_COPY_READ_BUFFER_BINDING -> GL_COPY_READ_BUFFER_BINDING
    int GL_COPY_WRITE_BUFFER_BINDING -> GL_COPY_WRITE_BUFFER_BINDING
    int GL_UNIFORM_BUFFER -> GL_UNIFORM_BUFFER
    int GL_UNIFORM_BUFFER_BINDING -> GL_UNIFORM_BUFFER_BINDING
    int GL_UNIFORM_BUFFER_START -> GL_UNIFORM_BUFFER_START
    int GL_UNIFORM_BUFFER_SIZE -> GL_UNIFORM_BUFFER_SIZE
    int GL_MAX_VERTEX_UNIFORM_BLOCKS -> GL_MAX_VERTEX_UNIFORM_BLOCKS
    int GL_MAX_FRAGMENT_UNIFORM_BLOCKS -> GL_MAX_FRAGMENT_UNIFORM_BLOCKS
    int GL_MAX_COMBINED_UNIFORM_BLOCKS -> GL_MAX_COMBINED_UNIFORM_BLOCKS
    int GL_MAX_UNIFORM_BUFFER_BINDINGS -> GL_MAX_UNIFORM_BUFFER_BINDINGS
    int GL_MAX_UNIFORM_BLOCK_SIZE -> GL_MAX_UNIFORM_BLOCK_SIZE
    int GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS -> GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
    int GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS -> GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
    int GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT -> GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
    int GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH -> GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
    int GL_ACTIVE_UNIFORM_BLOCKS -> GL_ACTIVE_UNIFORM_BLOCKS
    int GL_UNIFORM_TYPE -> GL_UNIFORM_TYPE
    int GL_UNIFORM_SIZE -> GL_UNIFORM_SIZE
    int GL_UNIFORM_NAME_LENGTH -> GL_UNIFORM_NAME_LENGTH
    int GL_UNIFORM_BLOCK_INDEX -> GL_UNIFORM_BLOCK_INDEX
    int GL_UNIFORM_OFFSET -> GL_UNIFORM_OFFSET
    int GL_UNIFORM_ARRAY_STRIDE -> GL_UNIFORM_ARRAY_STRIDE
    int GL_UNIFORM_MATRIX_STRIDE -> GL_UNIFORM_MATRIX_STRIDE
    int GL_UNIFORM_IS_ROW_MAJOR -> GL_UNIFORM_IS_ROW_MAJOR
    int GL_UNIFORM_BLOCK_BINDING -> GL_UNIFORM_BLOCK_BINDING
    int GL_UNIFORM_BLOCK_DATA_SIZE -> GL_UNIFORM_BLOCK_DATA_SIZE
    int GL_UNIFORM_BLOCK_NAME_LENGTH -> GL_UNIFORM_BLOCK_NAME_LENGTH
    int GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS -> GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
    int GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES -> GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
    int GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER -> GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
    int GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER -> GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
    int GL_INVALID_INDEX -> GL_INVALID_INDEX
    int GL_MAX_VERTEX_OUTPUT_COMPONENTS -> GL_MAX_VERTEX_OUTPUT_COMPONENTS
    int GL_MAX_FRAGMENT_INPUT_COMPONENTS -> GL_MAX_FRAGMENT_INPUT_COMPONENTS
    int GL_MAX_SERVER_WAIT_TIMEOUT -> GL_MAX_SERVER_WAIT_TIMEOUT
    int GL_OBJECT_TYPE -> GL_OBJECT_TYPE
    int GL_SYNC_CONDITION -> GL_SYNC_CONDITION
    int GL_SYNC_STATUS -> GL_SYNC_STATUS
    int GL_SYNC_FLAGS -> GL_SYNC_FLAGS
    int GL_SYNC_FENCE -> GL_SYNC_FENCE
    int GL_SYNC_GPU_COMMANDS_COMPLETE -> GL_SYNC_GPU_COMMANDS_COMPLETE
    int GL_UNSIGNALED -> GL_UNSIGNALED
    int GL_SIGNALED -> GL_SIGNALED
    int GL_ALREADY_SIGNALED -> GL_ALREADY_SIGNALED
    int GL_TIMEOUT_EXPIRED -> GL_TIMEOUT_EXPIRED
    int GL_CONDITION_SATISFIED -> GL_CONDITION_SATISFIED
    int GL_WAIT_FAILED -> GL_WAIT_FAILED
    int GL_SYNC_FLUSH_COMMANDS_BIT -> GL_SYNC_FLUSH_COMMANDS_BIT
    long GL_TIMEOUT_IGNORED -> GL_TIMEOUT_IGNORED
    int GL_VERTEX_ATTRIB_ARRAY_DIVISOR -> GL_VERTEX_ATTRIB_ARRAY_DIVISOR
    int GL_ANY_SAMPLES_PASSED -> GL_ANY_SAMPLES_PASSED
    int GL_ANY_SAMPLES_PASSED_CONSERVATIVE -> GL_ANY_SAMPLES_PASSED_CONSERVATIVE
    int GL_SAMPLER_BINDING -> GL_SAMPLER_BINDING
    int GL_RGB10_A2UI -> GL_RGB10_A2UI
    int GL_TEXTURE_SWIZZLE_R -> GL_TEXTURE_SWIZZLE_R
    int GL_TEXTURE_SWIZZLE_G -> GL_TEXTURE_SWIZZLE_G
    int GL_TEXTURE_SWIZZLE_B -> GL_TEXTURE_SWIZZLE_B
    int GL_TEXTURE_SWIZZLE_A -> GL_TEXTURE_SWIZZLE_A
    int GL_GREEN -> GL_GREEN
    int GL_BLUE -> GL_BLUE
    int GL_INT_2_10_10_10_REV -> GL_INT_2_10_10_10_REV
    int GL_TRANSFORM_FEEDBACK -> GL_TRANSFORM_FEEDBACK
    int GL_TRANSFORM_FEEDBACK_PAUSED -> GL_TRANSFORM_FEEDBACK_PAUSED
    int GL_TRANSFORM_FEEDBACK_ACTIVE -> GL_TRANSFORM_FEEDBACK_ACTIVE
    int GL_TRANSFORM_FEEDBACK_BINDING -> GL_TRANSFORM_FEEDBACK_BINDING
    int GL_PROGRAM_BINARY_RETRIEVABLE_HINT -> GL_PROGRAM_BINARY_RETRIEVABLE_HINT
    int GL_PROGRAM_BINARY_LENGTH -> GL_PROGRAM_BINARY_LENGTH
    int GL_NUM_PROGRAM_BINARY_FORMATS -> GL_NUM_PROGRAM_BINARY_FORMATS
    int GL_PROGRAM_BINARY_FORMATS -> GL_PROGRAM_BINARY_FORMATS
    int GL_COMPRESSED_R11_EAC -> GL_COMPRESSED_R11_EAC
    int GL_COMPRESSED_SIGNED_R11_EAC -> GL_COMPRESSED_SIGNED_R11_EAC
    int GL_COMPRESSED_RG11_EAC -> GL_COMPRESSED_RG11_EAC
    int GL_COMPRESSED_SIGNED_RG11_EAC -> GL_COMPRESSED_SIGNED_RG11_EAC
    int GL_COMPRESSED_RGB8_ETC2 -> GL_COMPRESSED_RGB8_ETC2
    int GL_COMPRESSED_SRGB8_ETC2 -> GL_COMPRESSED_SRGB8_ETC2
    int GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 -> GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
    int GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 -> GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
    int GL_COMPRESSED_RGBA8_ETC2_EAC -> GL_COMPRESSED_RGBA8_ETC2_EAC
    int GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC -> GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
    int GL_TEXTURE_IMMUTABLE_FORMAT -> GL_TEXTURE_IMMUTABLE_FORMAT
    int GL_MAX_ELEMENT_INDEX -> GL_MAX_ELEMENT_INDEX
    int GL_NUM_SAMPLE_COUNTS -> GL_NUM_SAMPLE_COUNTS
    int GL_TEXTURE_IMMUTABLE_LEVELS -> GL_TEXTURE_IMMUTABLE_LEVELS
    void glReadBuffer(int) -> glReadBuffer
    void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer) -> glDrawRangeElements
    void glDrawRangeElements(int,int,int,int,int,int) -> glDrawRangeElements
    void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage3D
    void glTexImage3D(int,int,int,int,int,int,int,int,int,int) -> glTexImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int) -> glTexSubImage3D
    void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int) -> glCopyTexSubImage3D
    void glGenQueries(int,int[],int) -> glGenQueries
    void glGenQueries(int,java.nio.IntBuffer) -> glGenQueries
    void glDeleteQueries(int,int[],int) -> glDeleteQueries
    void glDeleteQueries(int,java.nio.IntBuffer) -> glDeleteQueries
    boolean glIsQuery(int) -> glIsQuery
    void glBeginQuery(int,int) -> glBeginQuery
    void glEndQuery(int) -> glEndQuery
    void glGetQueryiv(int,int,java.nio.IntBuffer) -> glGetQueryiv
    void glGetQueryObjectuiv(int,int,java.nio.IntBuffer) -> glGetQueryObjectuiv
    boolean glUnmapBuffer(int) -> glUnmapBuffer
    java.nio.Buffer glGetBufferPointerv(int,int) -> glGetBufferPointerv
    void glDrawBuffers(int,java.nio.IntBuffer) -> glDrawBuffers
    void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x3fv
    void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x2fv
    void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x4fv
    void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x2fv
    void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x4fv
    void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x3fv
    void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int) -> glBlitFramebuffer
    void glRenderbufferStorageMultisample(int,int,int,int,int) -> glRenderbufferStorageMultisample
    void glFramebufferTextureLayer(int,int,int,int,int) -> glFramebufferTextureLayer
    void glFlushMappedBufferRange(int,int,int) -> glFlushMappedBufferRange
    void glBindVertexArray(int) -> glBindVertexArray
    void glDeleteVertexArrays(int,int[],int) -> glDeleteVertexArrays
    void glDeleteVertexArrays(int,java.nio.IntBuffer) -> glDeleteVertexArrays
    void glGenVertexArrays(int,int[],int) -> glGenVertexArrays
    void glGenVertexArrays(int,java.nio.IntBuffer) -> glGenVertexArrays
    boolean glIsVertexArray(int) -> glIsVertexArray
    void glBeginTransformFeedback(int) -> glBeginTransformFeedback
    void glEndTransformFeedback() -> glEndTransformFeedback
    void glBindBufferRange(int,int,int,int,int) -> glBindBufferRange
    void glBindBufferBase(int,int,int) -> glBindBufferBase
    void glTransformFeedbackVaryings(int,java.lang.String[],int) -> glTransformFeedbackVaryings
    void glVertexAttribIPointer(int,int,int,int,int) -> glVertexAttribIPointer
    void glGetVertexAttribIiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIiv
    void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIuiv
    void glVertexAttribI4i(int,int,int,int,int) -> glVertexAttribI4i
    void glVertexAttribI4ui(int,int,int,int,int) -> glVertexAttribI4ui
    void glGetUniformuiv(int,int,java.nio.IntBuffer) -> glGetUniformuiv
    int glGetFragDataLocation(int,java.lang.String) -> glGetFragDataLocation
    void glUniform1uiv(int,int,java.nio.IntBuffer) -> glUniform1uiv
    void glUniform3uiv(int,int,java.nio.IntBuffer) -> glUniform3uiv
    void glUniform4uiv(int,int,java.nio.IntBuffer) -> glUniform4uiv
    void glClearBufferiv(int,int,java.nio.IntBuffer) -> glClearBufferiv
    void glClearBufferuiv(int,int,java.nio.IntBuffer) -> glClearBufferuiv
    void glClearBufferfv(int,int,java.nio.FloatBuffer) -> glClearBufferfv
    void glClearBufferfi(int,int,float,int) -> glClearBufferfi
    java.lang.String glGetStringi(int,int) -> glGetStringi
    void glCopyBufferSubData(int,int,int,int,int) -> glCopyBufferSubData
    void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer) -> glGetUniformIndices
    void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer) -> glGetActiveUniformsiv
    int glGetUniformBlockIndex(int,java.lang.String) -> glGetUniformBlockIndex
    void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer) -> glGetActiveUniformBlockiv
    void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer) -> glGetActiveUniformBlockName
    java.lang.String glGetActiveUniformBlockName(int,int) -> glGetActiveUniformBlockName
    void glUniformBlockBinding(int,int,int) -> glUniformBlockBinding
    void glDrawArraysInstanced(int,int,int,int) -> glDrawArraysInstanced
    void glDrawElementsInstanced(int,int,int,int,int) -> glDrawElementsInstanced
    void glGetInteger64v(int,java.nio.LongBuffer) -> glGetInteger64v
    void glGetBufferParameteri64v(int,int,java.nio.LongBuffer) -> glGetBufferParameteri64v
    void glGenSamplers(int,int[],int) -> glGenSamplers
    void glGenSamplers(int,java.nio.IntBuffer) -> glGenSamplers
    void glDeleteSamplers(int,int[],int) -> glDeleteSamplers
    void glDeleteSamplers(int,java.nio.IntBuffer) -> glDeleteSamplers
    boolean glIsSampler(int) -> glIsSampler
    void glBindSampler(int,int) -> glBindSampler
    void glSamplerParameteri(int,int,int) -> glSamplerParameteri
    void glSamplerParameteriv(int,int,java.nio.IntBuffer) -> glSamplerParameteriv
    void glSamplerParameterf(int,int,float) -> glSamplerParameterf
    void glSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glSamplerParameterfv
    void glGetSamplerParameteriv(int,int,java.nio.IntBuffer) -> glGetSamplerParameteriv
    void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glGetSamplerParameterfv
    void glVertexAttribDivisor(int,int) -> glVertexAttribDivisor
    void glBindTransformFeedback(int,int) -> glBindTransformFeedback
    void glDeleteTransformFeedbacks(int,int[],int) -> glDeleteTransformFeedbacks
    void glDeleteTransformFeedbacks(int,java.nio.IntBuffer) -> glDeleteTransformFeedbacks
    void glGenTransformFeedbacks(int,int[],int) -> glGenTransformFeedbacks
    void glGenTransformFeedbacks(int,java.nio.IntBuffer) -> glGenTransformFeedbacks
    boolean glIsTransformFeedback(int) -> glIsTransformFeedback
    void glPauseTransformFeedback() -> glPauseTransformFeedback
    void glResumeTransformFeedback() -> glResumeTransformFeedback
    void glProgramParameteri(int,int,int) -> glProgramParameteri
    void glInvalidateFramebuffer(int,int,java.nio.IntBuffer) -> glInvalidateFramebuffer
    void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int) -> glInvalidateSubFramebuffer
com.badlogic.gdx.graphics.GLTexture -> com.badlogic.gdx.graphics.GLTexture:
    java.nio.IntBuffer buffer -> buffer
    int glTarget -> glTarget
    int glHandle -> glHandle
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> uWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> vWrap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getDepth() -> getDepth
    boolean isManaged() -> isManaged
    void reload() -> reload
    void bind() -> bind
    void bind(int) -> bind
    com.badlogic.gdx.graphics.Texture$TextureFilter getMinFilter() -> getMinFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter getMagFilter() -> getMagFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap getUWrap() -> getUWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap getVWrap() -> getVWrap
    int getTextureObjectHandle() -> getTextureObjectHandle
    void unsafeSetWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> unsafeSetWrap
    void unsafeSetWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap,boolean) -> unsafeSetWrap
    void setWrap(com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> setWrap
    void unsafeSetFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> unsafeSetFilter
    void unsafeSetFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> unsafeSetFilter
    void setFilter(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> setFilter
    void delete() -> delete
    void dispose() -> dispose
    com.badlogic.gdx.graphics.TextureData createTextureData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap$Format,boolean) -> createTextureData
    com.badlogic.gdx.graphics.TextureData createTextureData(com.badlogic.gdx.files.FileHandle,boolean) -> createTextureData
    int createGLHandle() -> createGLHandle
    void uploadImageData(int,com.badlogic.gdx.graphics.TextureData) -> uploadImageData
    void uploadImageData(int,com.badlogic.gdx.graphics.TextureData,int) -> uploadImageData
com.badlogic.gdx.graphics.Mesh -> com.badlogic.gdx.graphics.Mesh:
    java.util.Map meshes -> meshes
    com.badlogic.gdx.graphics.glutils.VertexData vertices -> vertices
    com.badlogic.gdx.graphics.glutils.IndexData indices -> indices
    boolean autoBind -> autoBind
    boolean isVertexArray -> isVertexArray
    com.badlogic.gdx.math.Vector3 tmpV -> tmpV
    com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.math.Matrix4[]) -> create
    com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[]) -> create
    com.badlogic.gdx.graphics.Mesh create(boolean,com.badlogic.gdx.graphics.Mesh[],com.badlogic.gdx.math.Matrix4[]) -> create
    com.badlogic.gdx.graphics.Mesh setVertices(float[]) -> setVertices
    com.badlogic.gdx.graphics.Mesh setVertices(float[],int,int) -> setVertices
    com.badlogic.gdx.graphics.Mesh updateVertices(int,float[]) -> updateVertices
    com.badlogic.gdx.graphics.Mesh updateVertices(int,float[],int,int) -> updateVertices
    float[] getVertices(float[]) -> getVertices
    float[] getVertices(int,float[]) -> getVertices
    float[] getVertices(int,int,float[]) -> getVertices
    float[] getVertices(int,int,float[],int) -> getVertices
    com.badlogic.gdx.graphics.Mesh setIndices(short[]) -> setIndices
    com.badlogic.gdx.graphics.Mesh setIndices(short[],int,int) -> setIndices
    void getIndices(short[]) -> getIndices
    void getIndices(short[],int) -> getIndices
    int getNumIndices() -> getNumIndices
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    int getMaxIndices() -> getMaxIndices
    int getVertexSize() -> getVertexSize
    void setAutoBind(boolean) -> setAutoBind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> unbind
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int) -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,int,int,int,boolean) -> render
    void dispose() -> dispose
    com.badlogic.gdx.graphics.VertexAttribute getVertexAttribute(int) -> getVertexAttribute
    com.badlogic.gdx.graphics.VertexAttributes getVertexAttributes() -> getVertexAttributes
    java.nio.FloatBuffer getVerticesBuffer() -> getVerticesBuffer
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox() -> calculateBoundingBox
    void calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int) -> extendBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4) -> extendBoundingBox
    float calculateRadiusSquared(float,float,float,int,int,com.badlogic.gdx.math.Matrix4) -> calculateRadiusSquared
    float calculateRadius(float,float,float,int,int,com.badlogic.gdx.math.Matrix4) -> calculateRadius
    float calculateRadius(com.badlogic.gdx.math.Vector3,int,int,com.badlogic.gdx.math.Matrix4) -> calculateRadius
    float calculateRadius(float,float,float,int,int) -> calculateRadius
    float calculateRadius(com.badlogic.gdx.math.Vector3,int,int) -> calculateRadius
    float calculateRadius(float,float,float) -> calculateRadius
    float calculateRadius(com.badlogic.gdx.math.Vector3) -> calculateRadius
    java.nio.ShortBuffer getIndicesBuffer() -> getIndicesBuffer
    void addManagedMesh(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Mesh) -> addManagedMesh
    void invalidateAllMeshes(com.badlogic.gdx.Application) -> invalidateAllMeshes
    void clearAllMeshes(com.badlogic.gdx.Application) -> clearAllMeshes
    java.lang.String getManagedStatus() -> getManagedStatus
    void scale(float,float,float) -> scale
    void transform(com.badlogic.gdx.math.Matrix4) -> transform
    void transform(com.badlogic.gdx.math.Matrix4,int,int) -> transform
    void transform(com.badlogic.gdx.math.Matrix4,float[],int,int,int,int,int) -> transform
    void transformUV(com.badlogic.gdx.math.Matrix3) -> transformUV
    void transformUV(com.badlogic.gdx.math.Matrix3,int,int) -> transformUV
    void transformUV(com.badlogic.gdx.math.Matrix3,float[],int,int,int,int) -> transformUV
    com.badlogic.gdx.graphics.Mesh copy(boolean,boolean,int[]) -> copy
    com.badlogic.gdx.graphics.Mesh copy(boolean) -> copy
com.badlogic.gdx.graphics.Mesh$VertexDataType -> com.badlogic.gdx.graphics.Mesh$VertexDataType:
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexArray -> VertexArray
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObject -> VertexBufferObject
    com.badlogic.gdx.graphics.Mesh$VertexDataType VertexBufferObjectSubData -> VertexBufferObjectSubData
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Mesh$VertexDataType[] values() -> values
    com.badlogic.gdx.graphics.Mesh$VertexDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.OrthographicCamera -> com.badlogic.gdx.graphics.OrthographicCamera:
    float zoom -> zoom
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    void update() -> update
    void update(boolean) -> update
    void setToOrtho(boolean) -> setToOrtho
    void setToOrtho(boolean,float,float) -> setToOrtho
    void rotate(float) -> rotate
    void translate(float,float) -> translate
    void translate(com.badlogic.gdx.math.Vector2) -> translate
com.badlogic.gdx.graphics.PerspectiveCamera -> com.badlogic.gdx.graphics.PerspectiveCamera:
    float fieldOfView -> fieldOfView
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    void update() -> update
    void update(boolean) -> update
com.badlogic.gdx.graphics.Pixmap -> com.badlogic.gdx.graphics.Pixmap:
    com.badlogic.gdx.graphics.Pixmap$Blending blending -> blending
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap pixmap -> pixmap
    int color -> color
    boolean disposed -> disposed
    void setBlending(com.badlogic.gdx.graphics.Pixmap$Blending) -> setBlending
    void setFilter(com.badlogic.gdx.graphics.Pixmap$Filter) -> setFilter
    void setColor(int) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void fill() -> fill
    void drawLine(int,int,int,int) -> drawLine
    void drawRectangle(int,int,int,int) -> drawRectangle
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int) -> drawPixmap
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int) -> drawPixmap
    void drawPixmap(com.badlogic.gdx.graphics.Pixmap,int,int,int,int,int,int,int,int) -> drawPixmap
    void fillRectangle(int,int,int,int) -> fillRectangle
    void drawCircle(int,int,int) -> drawCircle
    void fillCircle(int,int,int) -> fillCircle
    void fillTriangle(int,int,int,int,int,int) -> fillTriangle
    int getPixel(int,int) -> getPixel
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    void dispose() -> dispose
    void drawPixel(int,int) -> drawPixel
    void drawPixel(int,int,int) -> drawPixel
    int getGLFormat() -> getGLFormat
    int getGLInternalFormat() -> getGLInternalFormat
    int getGLType() -> getGLType
    java.nio.ByteBuffer getPixels() -> getPixels
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    com.badlogic.gdx.graphics.Pixmap$Blending getBlending() -> getBlending
com.badlogic.gdx.graphics.Pixmap$Blending -> com.badlogic.gdx.graphics.Pixmap$Blending:
    com.badlogic.gdx.graphics.Pixmap$Blending None -> None
    com.badlogic.gdx.graphics.Pixmap$Blending SourceOver -> SourceOver
    com.badlogic.gdx.graphics.Pixmap$Blending[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Pixmap$Blending[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Blending valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Filter -> com.badlogic.gdx.graphics.Pixmap$Filter:
    com.badlogic.gdx.graphics.Pixmap$Filter NearestNeighbour -> NearestNeighbour
    com.badlogic.gdx.graphics.Pixmap$Filter BiLinear -> BiLinear
    com.badlogic.gdx.graphics.Pixmap$Filter[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Pixmap$Filter[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Filter valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.Pixmap$Format -> com.badlogic.gdx.graphics.Pixmap$Format:
    com.badlogic.gdx.graphics.Pixmap$Format Alpha -> Alpha
    com.badlogic.gdx.graphics.Pixmap$Format Intensity -> Intensity
    com.badlogic.gdx.graphics.Pixmap$Format LuminanceAlpha -> LuminanceAlpha
    com.badlogic.gdx.graphics.Pixmap$Format RGB565 -> RGB565
    com.badlogic.gdx.graphics.Pixmap$Format RGBA4444 -> RGBA4444
    com.badlogic.gdx.graphics.Pixmap$Format RGB888 -> RGB888
    com.badlogic.gdx.graphics.Pixmap$Format RGBA8888 -> RGBA8888
    com.badlogic.gdx.graphics.Pixmap$Format[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Pixmap$Format[] values() -> values
    com.badlogic.gdx.graphics.Pixmap$Format valueOf(java.lang.String) -> valueOf
    int toGdx2DPixmapFormat(com.badlogic.gdx.graphics.Pixmap$Format) -> toGdx2DPixmapFormat
    com.badlogic.gdx.graphics.Pixmap$Format fromGdx2DPixmapFormat(int) -> fromGdx2DPixmapFormat
com.badlogic.gdx.graphics.PixmapIO -> com.badlogic.gdx.graphics.PixmapIO:
    void writeCIM(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> writeCIM
    com.badlogic.gdx.graphics.Pixmap readCIM(com.badlogic.gdx.files.FileHandle) -> readCIM
    void writePNG(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> writePNG
com.badlogic.gdx.graphics.PixmapIO$CIM -> com.badlogic.gdx.graphics.PixmapIO$CIM:
    int BUFFER_SIZE -> BUFFER_SIZE
    byte[] writeBuffer -> writeBuffer
    byte[] readBuffer -> readBuffer
    void write(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap) -> write
    com.badlogic.gdx.graphics.Pixmap read(com.badlogic.gdx.files.FileHandle) -> read
com.badlogic.gdx.graphics.PixmapIO$PNG -> com.badlogic.gdx.graphics.PixmapIO$PNG:
    int[] crcTable -> crcTable
    int ZLIB_BLOCK_SIZE -> ZLIB_BLOCK_SIZE
    byte[] write(com.badlogic.gdx.graphics.Pixmap) -> write
    byte[] createHeaderChunk(int,int) -> createHeaderChunk
    byte[] createDataChunk(com.badlogic.gdx.graphics.Pixmap) -> createDataChunk
    byte[] createTrailerChunk() -> createTrailerChunk
    byte[] toChunk(java.lang.String,byte[]) -> toChunk
    void createCRCTable() -> createCRCTable
    int updateCRC(int,byte[]) -> updateCRC
    byte[] toZLIB(byte[]) -> toZLIB
    void writeUncompressedDeflateBlock(java.io.DataOutputStream,boolean,byte[],int,char) -> writeUncompressedDeflateBlock
    int calcADLER32(byte[]) -> calcADLER32
com.badlogic.gdx.graphics.Texture -> com.badlogic.gdx.graphics.Texture:
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    java.util.Map managedTextures -> managedTextures
    com.badlogic.gdx.graphics.TextureData data -> data
    void load(com.badlogic.gdx.graphics.TextureData) -> load
    void reload() -> reload
    void draw(com.badlogic.gdx.graphics.Pixmap,int,int) -> draw
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    int getDepth() -> getDepth
    com.badlogic.gdx.graphics.TextureData getTextureData() -> getTextureData
    boolean isManaged() -> isManaged
    void dispose() -> dispose
    void addManagedTexture(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.Texture) -> addManagedTexture
    void clearAllTextures(com.badlogic.gdx.Application) -> clearAllTextures
    void invalidateAllTextures(com.badlogic.gdx.Application) -> invalidateAllTextures
    void setAssetManager(com.badlogic.gdx.assets.AssetManager) -> setAssetManager
    java.lang.String getManagedStatus() -> getManagedStatus
    int getNumManagedTextures() -> getNumManagedTextures
com.badlogic.gdx.graphics.Texture$1 -> com.badlogic.gdx.graphics.Texture$1:
    int val$refCount -> val$refCount
    void finishedLoading(com.badlogic.gdx.assets.AssetManager,java.lang.String,java.lang.Class) -> finishedLoading
com.badlogic.gdx.graphics.Texture$TextureFilter -> com.badlogic.gdx.graphics.Texture$TextureFilter:
    com.badlogic.gdx.graphics.Texture$TextureFilter Nearest -> Nearest
    com.badlogic.gdx.graphics.Texture$TextureFilter Linear -> Linear
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMap -> MipMap
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestNearest -> MipMapNearestNearest
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearNearest -> MipMapLinearNearest
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapNearestLinear -> MipMapNearestLinear
    com.badlogic.gdx.graphics.Texture$TextureFilter MipMapLinearLinear -> MipMapLinearLinear
    int glEnum -> glEnum
    com.badlogic.gdx.graphics.Texture$TextureFilter[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Texture$TextureFilter[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureFilter valueOf(java.lang.String) -> valueOf
    boolean isMipMap() -> isMipMap
    int getGLEnum() -> getGLEnum
com.badlogic.gdx.graphics.Texture$TextureWrap -> com.badlogic.gdx.graphics.Texture$TextureWrap:
    com.badlogic.gdx.graphics.Texture$TextureWrap MirroredRepeat -> MirroredRepeat
    com.badlogic.gdx.graphics.Texture$TextureWrap ClampToEdge -> ClampToEdge
    com.badlogic.gdx.graphics.Texture$TextureWrap Repeat -> Repeat
    int glEnum -> glEnum
    com.badlogic.gdx.graphics.Texture$TextureWrap[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.Texture$TextureWrap[] values() -> values
    com.badlogic.gdx.graphics.Texture$TextureWrap valueOf(java.lang.String) -> valueOf
    int getGLEnum() -> getGLEnum
com.badlogic.gdx.graphics.TextureData -> com.badlogic.gdx.graphics.TextureData:
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    void consumeCustomData(int) -> consumeCustomData
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.TextureData$TextureDataType -> com.badlogic.gdx.graphics.TextureData$TextureDataType:
    com.badlogic.gdx.graphics.TextureData$TextureDataType Pixmap -> Pixmap
    com.badlogic.gdx.graphics.TextureData$TextureDataType Custom -> Custom
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.TextureData$TextureDataType[] values() -> values
    com.badlogic.gdx.graphics.TextureData$TextureDataType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.VertexAttribute -> com.badlogic.gdx.graphics.VertexAttribute:
    int usage -> usage
    int numComponents -> numComponents
    int offset -> offset
    java.lang.String alias -> alias
    int unit -> unit
    int usageIndex -> usageIndex
    com.badlogic.gdx.graphics.VertexAttribute Position() -> Position
    com.badlogic.gdx.graphics.VertexAttribute TexCoords(int) -> TexCoords
    com.badlogic.gdx.graphics.VertexAttribute Normal() -> Normal
    com.badlogic.gdx.graphics.VertexAttribute Color() -> Color
    com.badlogic.gdx.graphics.VertexAttribute ColorUnpacked() -> ColorUnpacked
    com.badlogic.gdx.graphics.VertexAttribute Tangent() -> Tangent
    com.badlogic.gdx.graphics.VertexAttribute Binormal() -> Binormal
    com.badlogic.gdx.graphics.VertexAttribute BoneWeight(int) -> BoneWeight
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.VertexAttribute) -> equals
    int getKey() -> getKey
com.badlogic.gdx.graphics.VertexAttributes -> com.badlogic.gdx.graphics.VertexAttributes:
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> attributes
    int vertexSize -> vertexSize
    long mask -> mask
    com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable iterable -> iterable
    int getOffset(int) -> getOffset
    com.badlogic.gdx.graphics.VertexAttribute findByUsage(int) -> findByUsage
    int calculateOffsets() -> calculateOffsets
    int size() -> size
    com.badlogic.gdx.graphics.VertexAttribute get(int) -> get
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    long getMask() -> getMask
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable -> com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterable:
    java.lang.Object[] array -> array
    com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator iterator1 -> iterator1
    com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator iterator2 -> iterator2
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator -> com.badlogic.gdx.graphics.VertexAttributes$ReadonlyIterator:
    java.lang.Object[] array -> array
    int index -> index
    boolean valid -> valid
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.graphics.VertexAttributes$Usage -> com.badlogic.gdx.graphics.VertexAttributes$Usage:
    int Position -> Position
    int Color -> Color
    int ColorPacked -> ColorPacked
    int Normal -> Normal
    int TextureCoordinates -> TextureCoordinates
    int Generic -> Generic
    int BoneWeight -> BoneWeight
    int Tangent -> Tangent
    int BiNormal -> BiNormal
com.badlogic.gdx.graphics.g2d.Animation -> com.badlogic.gdx.graphics.g2d.Animation:
    com.badlogic.gdx.graphics.g2d.TextureRegion[] keyFrames -> keyFrames
    float frameDuration -> frameDuration
    float animationDuration -> animationDuration
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode playMode -> playMode
    com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float,boolean) -> getKeyFrame
    com.badlogic.gdx.graphics.g2d.TextureRegion getKeyFrame(float) -> getKeyFrame
    int getKeyFrameIndex(float) -> getKeyFrameIndex
    com.badlogic.gdx.graphics.g2d.TextureRegion[] getKeyFrames() -> getKeyFrames
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode getPlayMode() -> getPlayMode
    void setPlayMode(com.badlogic.gdx.graphics.g2d.Animation$PlayMode) -> setPlayMode
    boolean isAnimationFinished(float) -> isAnimationFinished
    void setFrameDuration(float) -> setFrameDuration
    float getFrameDuration() -> getFrameDuration
    float getAnimationDuration() -> getAnimationDuration
com.badlogic.gdx.graphics.g2d.Animation$1 -> com.badlogic.gdx.graphics.g2d.Animation$1:
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$Animation$PlayMode -> $SwitchMap$com$badlogic$gdx$graphics$g2d$Animation$PlayMode
com.badlogic.gdx.graphics.g2d.Animation$PlayMode -> com.badlogic.gdx.graphics.g2d.Animation$PlayMode:
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode NORMAL -> NORMAL
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode REVERSED -> REVERSED
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP -> LOOP
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP_REVERSED -> LOOP_REVERSED
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP_PINGPONG -> LOOP_PINGPONG
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode LOOP_RANDOM -> LOOP_RANDOM
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode[] values() -> values
    com.badlogic.gdx.graphics.g2d.Animation$PlayMode valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.Batch -> com.badlogic.gdx.graphics.g2d.Batch:
    int X1 -> X1
    int Y1 -> Y1
    int C1 -> C1
    int U1 -> U1
    int V1 -> V1
    int X2 -> X2
    int Y2 -> Y2
    int C2 -> C2
    int U2 -> U2
    int V2 -> V2
    int X3 -> X3
    int Y3 -> Y3
    int C3 -> C3
    int U3 -> U3
    int V3 -> V3
    int X4 -> X4
    int Y4 -> Y4
    int C4 -> C4
    int U4 -> U4
    int V4 -> V4
    void begin() -> begin
    void end() -> end
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean) -> draw
    void flush() -> flush
    void disableBlending() -> disableBlending
    void enableBlending() -> enableBlending
    void setBlendFunction(int,int) -> setBlendFunction
    int getBlendSrcFunc() -> getBlendSrcFunc
    int getBlendDstFunc() -> getBlendDstFunc
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    boolean isBlendingEnabled() -> isBlendingEnabled
com.badlogic.gdx.graphics.g2d.BitmapFont -> com.badlogic.gdx.graphics.g2d.BitmapFont:
    int LOG2_PAGE_SIZE -> LOG2_PAGE_SIZE
    int PAGE_SIZE -> PAGE_SIZE
    int PAGES -> PAGES
    char[] xChars -> xChars
    char[] capChars -> capChars
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData data -> data
    com.badlogic.gdx.graphics.g2d.TextureRegion[] regions -> regions
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> cache
    boolean flipped -> flipped
    boolean integer -> integer
    boolean ownsTexture -> ownsTexture
    boolean markupEnabled -> markupEnabled
    void load(com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData) -> load
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float) -> draw
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds draw(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,int,int) -> draw
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float) -> drawMultiLine
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawMultiLine(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> drawMultiLine
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,float) -> drawWrapped
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds drawWrapped(com.badlogic.gdx.graphics.g2d.Batch,java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> drawWrapped
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds(java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence) -> getMultiLineBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getMultiLineBounds(java.lang.CharSequence,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getMultiLineBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float) -> getWrappedBounds
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getWrappedBounds(java.lang.CharSequence,float,com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> getWrappedBounds
    void computeGlyphAdvancesAndPositions(java.lang.CharSequence,com.badlogic.gdx.utils.FloatArray,com.badlogic.gdx.utils.FloatArray) -> computeGlyphAdvancesAndPositions
    int computeVisibleGlyphs(java.lang.CharSequence,int,int,float) -> computeVisibleGlyphs
    void setColor(float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setScale(float,float) -> setScale
    void setScale(float) -> setScale
    void scale(float) -> scale
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> getRegion
    com.badlogic.gdx.graphics.g2d.TextureRegion[] getRegions() -> getRegions
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(int) -> getRegion
    float getLineHeight() -> getLineHeight
    float getSpaceWidth() -> getSpaceWidth
    float getXHeight() -> getXHeight
    float getCapHeight() -> getCapHeight
    float getAscent() -> getAscent
    float getDescent() -> getDescent
    boolean isFlipped() -> isFlipped
    boolean isMarkupEnabled() -> isMarkupEnabled
    void setMarkupEnabled(boolean) -> setMarkupEnabled
    void dispose() -> dispose
    void setFixedWidthGlyphs(java.lang.CharSequence) -> setFixedWidthGlyphs
    boolean containsCharacter(char) -> containsCharacter
    void setUseIntegerPositions(boolean) -> setUseIntegerPositions
    boolean usesIntegerPositions() -> usesIntegerPositions
    com.badlogic.gdx.graphics.g2d.BitmapFontCache getCache() -> getCache
    com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData getData() -> getData
    boolean ownsTexture() -> ownsTexture
    void setOwnsTexture(boolean) -> setOwnsTexture
    int indexOf(java.lang.CharSequence,char,int) -> indexOf
    boolean isWhitespace(char) -> isWhitespace
com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData -> com.badlogic.gdx.graphics.g2d.BitmapFont$BitmapFontData:
    java.lang.String imagePath -> imagePath
    java.lang.String[] imagePaths -> imagePaths
    com.badlogic.gdx.files.FileHandle fontFile -> fontFile
    boolean flipped -> flipped
    float lineHeight -> lineHeight
    float capHeight -> capHeight
    float ascent -> ascent
    float descent -> descent
    float down -> down
    float scaleX -> scaleX
    float scaleY -> scaleY
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph[][] glyphs -> glyphs
    float spaceWidth -> spaceWidth
    float xHeight -> xHeight
    void setGlyph(int,com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph) -> setGlyph
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getFirstGlyph() -> getFirstGlyph
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph getGlyph(char) -> getGlyph
    java.lang.String getImagePath() -> getImagePath
    java.lang.String getImagePath(int) -> getImagePath
    java.lang.String[] getImagePaths() -> getImagePaths
    com.badlogic.gdx.files.FileHandle getFontFile() -> getFontFile
com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph -> com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph:
    int id -> id
    int srcX -> srcX
    int srcY -> srcY
    int width -> width
    int height -> height
    float u -> u
    float v -> v
    float u2 -> u2
    float v2 -> v2
    int xoffset -> xoffset
    int yoffset -> yoffset
    int xadvance -> xadvance
    byte[][] kerning -> kerning
    int page -> page
    int getKerning(char) -> getKerning
    void setKerning(int,int) -> setKerning
com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment -> com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment:
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment LEFT -> LEFT
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment CENTER -> CENTER
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment RIGHT -> RIGHT
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment[] values() -> values
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds -> com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds:
    float width -> width
    float height -> height
    void set(com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds) -> set
com.badlogic.gdx.graphics.g2d.BitmapFontCache -> com.badlogic.gdx.graphics.g2d.BitmapFontCache:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    float[][] vertexData -> vertexData
    int[] idx -> idx
    int[] tmpGlyphCount -> tmpGlyphCount
    float x -> x
    float y -> y
    float color -> color
    float previousColor -> previousColor
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    com.badlogic.gdx.graphics.Color hexColor -> hexColor
    com.badlogic.gdx.utils.StringBuilder colorBuffer -> colorBuffer
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds textBounds -> textBounds
    boolean integer -> integer
    int glyphCount -> glyphCount
    com.badlogic.gdx.utils.IntArray[] glyphIndices -> glyphIndices
    void setPosition(float,float) -> setPosition
    void translate(float,float) -> translate
    void setColors(float) -> setColors
    void setColors(com.badlogic.gdx.graphics.Color) -> setColors
    void setColors(float,float,float,float) -> setColors
    void setColors(com.badlogic.gdx.graphics.Color,int,int) -> setColors
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void draw(com.badlogic.gdx.graphics.g2d.Batch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,int,int) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void clear() -> clear
    int countGlyphs(java.lang.CharSequence,int,int) -> countGlyphs
    void requireSequence(java.lang.CharSequence,int,int) -> requireSequence
    void require(int,int) -> require
    int parseAndSetColor(java.lang.CharSequence,int,int) -> parseAndSetColor
    float addToCache(java.lang.CharSequence,float,float,int,int) -> addToCache
    void addGlyph(com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph,float,float,float,float) -> addGlyph
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float) -> setText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setText(java.lang.CharSequence,float,float,int,int) -> setText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float) -> addText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addText(java.lang.CharSequence,float,float,int,int) -> addText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float) -> setMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> setMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float) -> addMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addMultiLineText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> addMultiLineText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float) -> setWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds setWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> setWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float) -> addWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds addWrappedText(java.lang.CharSequence,float,float,float,com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment) -> addWrappedText
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getBounds() -> getBounds
    float getX() -> getX
    float getY() -> getY
    com.badlogic.gdx.graphics.g2d.BitmapFont getFont() -> getFont
    void setUseIntegerPositions(boolean) -> setUseIntegerPositions
    boolean usesIntegerPositions() -> usesIntegerPositions
    float[] getVertices() -> getVertices
    float[] getVertices(int) -> getVertices
com.badlogic.gdx.graphics.g2d.Gdx2DPixmap -> com.badlogic.gdx.graphics.g2d.Gdx2DPixmap:
    int GDX2D_FORMAT_ALPHA -> GDX2D_FORMAT_ALPHA
    int GDX2D_FORMAT_LUMINANCE_ALPHA -> GDX2D_FORMAT_LUMINANCE_ALPHA
    int GDX2D_FORMAT_RGB888 -> GDX2D_FORMAT_RGB888
    int GDX2D_FORMAT_RGBA8888 -> GDX2D_FORMAT_RGBA8888
    int GDX2D_FORMAT_RGB565 -> GDX2D_FORMAT_RGB565
    int GDX2D_FORMAT_RGBA4444 -> GDX2D_FORMAT_RGBA4444
    int GDX2D_SCALE_NEAREST -> GDX2D_SCALE_NEAREST
    int GDX2D_SCALE_LINEAR -> GDX2D_SCALE_LINEAR
    int GDX2D_BLEND_NONE -> GDX2D_BLEND_NONE
    int GDX2D_BLEND_SRC_OVER -> GDX2D_BLEND_SRC_OVER
    long basePtr -> basePtr
    int width -> width
    int height -> height
    int format -> format
    java.nio.ByteBuffer pixelPtr -> pixelPtr
    long[] nativeData -> nativeData
    void convert(int) -> convert
    void dispose() -> dispose
    void clear(int) -> clear
    void setPixel(int,int,int) -> setPixel
    int getPixel(int,int) -> getPixel
    void drawLine(int,int,int,int,int) -> drawLine
    void drawRect(int,int,int,int,int) -> drawRect
    void drawCircle(int,int,int,int) -> drawCircle
    void fillRect(int,int,int,int,int) -> fillRect
    void fillCircle(int,int,int,int) -> fillCircle
    void fillTriangle(int,int,int,int,int,int,int) -> fillTriangle
    void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int) -> drawPixmap
    void drawPixmap(com.badlogic.gdx.graphics.g2d.Gdx2DPixmap,int,int,int,int,int,int,int,int) -> drawPixmap
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(java.io.InputStream,int) -> newPixmap
    com.badlogic.gdx.graphics.g2d.Gdx2DPixmap newPixmap(int,int,int) -> newPixmap
    java.nio.ByteBuffer getPixels() -> getPixels
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    int getFormat() -> getFormat
    int getGLInternalFormat() -> getGLInternalFormat
    int getGLFormat() -> getGLFormat
    int getGLType() -> getGLType
    java.lang.String getFormatString() -> getFormatString
    java.nio.ByteBuffer load(long[],byte[],int,int) -> load
    java.nio.ByteBuffer newPixmap(long[],int,int,int) -> newPixmap
    void free(long) -> free
    void clear(long,int) -> clear
    void setPixel(long,int,int,int) -> setPixel
    int getPixel(long,int,int) -> getPixel
    void drawLine(long,int,int,int,int,int) -> drawLine
    void drawRect(long,int,int,int,int,int) -> drawRect
    void drawCircle(long,int,int,int,int) -> drawCircle
    void fillRect(long,int,int,int,int,int) -> fillRect
    void fillCircle(long,int,int,int,int) -> fillCircle
    void fillTriangle(long,int,int,int,int,int,int,int) -> fillTriangle
    void drawPixmap(long,long,int,int,int,int,int,int,int,int) -> drawPixmap
    void setBlend(int) -> setBlend
    void setScale(int) -> setScale
    java.lang.String getFailureReason() -> getFailureReason
com.badlogic.gdx.graphics.g2d.NinePatch -> com.badlogic.gdx.graphics.g2d.NinePatch:
    int TOP_LEFT -> TOP_LEFT
    int TOP_CENTER -> TOP_CENTER
    int TOP_RIGHT -> TOP_RIGHT
    int MIDDLE_LEFT -> MIDDLE_LEFT
    int MIDDLE_CENTER -> MIDDLE_CENTER
    int MIDDLE_RIGHT -> MIDDLE_RIGHT
    int BOTTOM_LEFT -> BOTTOM_LEFT
    int BOTTOM_CENTER -> BOTTOM_CENTER
    int BOTTOM_RIGHT -> BOTTOM_RIGHT
    com.badlogic.gdx.graphics.Color tmpDrawColor -> tmpDrawColor
    com.badlogic.gdx.graphics.Texture texture -> texture
    int bottomLeft -> bottomLeft
    int bottomCenter -> bottomCenter
    int bottomRight -> bottomRight
    int middleLeft -> middleLeft
    int middleCenter -> middleCenter
    int middleRight -> middleRight
    int topLeft -> topLeft
    int topCenter -> topCenter
    int topRight -> topRight
    float leftWidth -> leftWidth
    float rightWidth -> rightWidth
    float middleWidth -> middleWidth
    float middleHeight -> middleHeight
    float topHeight -> topHeight
    float bottomHeight -> bottomHeight
    float[] vertices -> vertices
    int idx -> idx
    com.badlogic.gdx.graphics.Color color -> color
    int padLeft -> padLeft
    int padRight -> padRight
    int padTop -> padTop
    int padBottom -> padBottom
    void load(com.badlogic.gdx.graphics.g2d.TextureRegion[]) -> load
    int add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,boolean,boolean) -> add
    void set(int,float,float,float,float,float) -> set
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    float getLeftWidth() -> getLeftWidth
    void setLeftWidth(float) -> setLeftWidth
    float getRightWidth() -> getRightWidth
    void setRightWidth(float) -> setRightWidth
    float getTopHeight() -> getTopHeight
    void setTopHeight(float) -> setTopHeight
    float getBottomHeight() -> getBottomHeight
    void setBottomHeight(float) -> setBottomHeight
    float getMiddleWidth() -> getMiddleWidth
    void setMiddleWidth(float) -> setMiddleWidth
    float getMiddleHeight() -> getMiddleHeight
    void setMiddleHeight(float) -> setMiddleHeight
    float getTotalWidth() -> getTotalWidth
    float getTotalHeight() -> getTotalHeight
    void setPadding(int,int,int,int) -> setPadding
    float getPadLeft() -> getPadLeft
    void setPadLeft(int) -> setPadLeft
    float getPadRight() -> getPadRight
    void setPadRight(int) -> setPadRight
    float getPadTop() -> getPadTop
    void setPadTop(int) -> setPadTop
    float getPadBottom() -> getPadBottom
    void setPadBottom(int) -> setPadBottom
    void scale(float,float) -> scale
    com.badlogic.gdx.graphics.Texture getTexture() -> getTexture
com.badlogic.gdx.graphics.g2d.ParticleEffect -> com.badlogic.gdx.graphics.g2d.ParticleEffect:
    com.badlogic.gdx.utils.Array emitters -> emitters
    com.badlogic.gdx.math.collision.BoundingBox bounds -> bounds
    boolean ownsTexture -> ownsTexture
    void start() -> start
    void reset() -> reset
    void update(float) -> update
    void draw(com.badlogic.gdx.graphics.g2d.Batch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void allowCompletion() -> allowCompletion
    boolean isComplete() -> isComplete
    void setDuration(int) -> setDuration
    void setPosition(float,float) -> setPosition
    void setFlip(boolean,boolean) -> setFlip
    void flipY() -> flipY
    com.badlogic.gdx.utils.Array getEmitters() -> getEmitters
    com.badlogic.gdx.graphics.g2d.ParticleEmitter findEmitter(java.lang.String) -> findEmitter
    void save(java.io.Writer) -> save
    void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.files.FileHandle) -> load
    void load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String) -> load
    void loadEmitters(com.badlogic.gdx.files.FileHandle) -> loadEmitters
    void loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String) -> loadEmitterImages
    void loadEmitterImages(com.badlogic.gdx.files.FileHandle) -> loadEmitterImages
    com.badlogic.gdx.graphics.Texture loadTexture(com.badlogic.gdx.files.FileHandle) -> loadTexture
    void dispose() -> dispose
    com.badlogic.gdx.math.collision.BoundingBox getBoundingBox() -> getBoundingBox
com.badlogic.gdx.graphics.g2d.ParticleEffectPool -> com.badlogic.gdx.graphics.g2d.ParticleEffectPool:
    com.badlogic.gdx.graphics.g2d.ParticleEffect effect -> effect
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect newObject() -> newObject
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect obtain() -> obtain
    java.lang.Object obtain() -> obtain
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect -> com.badlogic.gdx.graphics.g2d.ParticleEffectPool$PooledEffect:
    com.badlogic.gdx.graphics.g2d.ParticleEffectPool this$0 -> this$0
    void reset() -> reset
    void free() -> free
com.badlogic.gdx.graphics.g2d.ParticleEmitter -> com.badlogic.gdx.graphics.g2d.ParticleEmitter:
    int UPDATE_SCALE -> UPDATE_SCALE
    int UPDATE_ANGLE -> UPDATE_ANGLE
    int UPDATE_ROTATION -> UPDATE_ROTATION
    int UPDATE_VELOCITY -> UPDATE_VELOCITY
    int UPDATE_WIND -> UPDATE_WIND
    int UPDATE_GRAVITY -> UPDATE_GRAVITY
    int UPDATE_TINT -> UPDATE_TINT
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue delayValue -> delayValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeOffsetValue -> lifeOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue durationValue -> durationValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue lifeValue -> lifeValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue emissionValue -> emissionValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue scaleValue -> scaleValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue rotationValue -> rotationValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue velocityValue -> velocityValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue angleValue -> angleValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue windValue -> windValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue gravityValue -> gravityValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue transparencyValue -> transparencyValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue tintValue -> tintValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue xOffsetValue -> xOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue yOffsetValue -> yOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnWidthValue -> spawnWidthValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue spawnHeightValue -> spawnHeightValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue spawnShapeValue -> spawnShapeValue
    float accumulator -> accumulator
    com.badlogic.gdx.graphics.g2d.Sprite sprite -> sprite
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle[] particles -> particles
    int minParticleCount -> minParticleCount
    int maxParticleCount -> maxParticleCount
    float x -> x
    float y -> y
    java.lang.String name -> name
    java.lang.String imagePath -> imagePath
    int activeCount -> activeCount
    boolean[] active -> active
    boolean firstUpdate -> firstUpdate
    boolean flipX -> flipX
    boolean flipY -> flipY
    int updateFlags -> updateFlags
    boolean allowCompletion -> allowCompletion
    com.badlogic.gdx.math.collision.BoundingBox bounds -> bounds
    int emission -> emission
    int emissionDiff -> emissionDiff
    int emissionDelta -> emissionDelta
    int lifeOffset -> lifeOffset
    int lifeOffsetDiff -> lifeOffsetDiff
    int life -> life
    int lifeDiff -> lifeDiff
    float spawnWidth -> spawnWidth
    float spawnWidthDiff -> spawnWidthDiff
    float spawnHeight -> spawnHeight
    float spawnHeightDiff -> spawnHeightDiff
    float duration -> duration
    float durationTimer -> durationTimer
    float delay -> delay
    float delayTimer -> delayTimer
    boolean attached -> attached
    boolean continuous -> continuous
    boolean aligned -> aligned
    boolean behind -> behind
    boolean additive -> additive
    void initialize() -> initialize
    void setMaxParticleCount(int) -> setMaxParticleCount
    void addParticle() -> addParticle
    void addParticles(int) -> addParticles
    void update(float) -> update
    void draw(com.badlogic.gdx.graphics.g2d.Batch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void start() -> start
    void reset() -> reset
    void restart() -> restart
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite) -> newParticle
    void activateParticle(int) -> activateParticle
    boolean updateParticle(com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle,float,int) -> updateParticle
    void setPosition(float,float) -> setPosition
    void setSprite(com.badlogic.gdx.graphics.g2d.Sprite) -> setSprite
    void allowCompletion() -> allowCompletion
    com.badlogic.gdx.graphics.g2d.Sprite getSprite() -> getSprite
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLife() -> getLife
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getScale() -> getScale
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getRotation() -> getRotation
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue getTint() -> getTint
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getVelocity() -> getVelocity
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getWind() -> getWind
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getGravity() -> getGravity
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getAngle() -> getAngle
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getEmission() -> getEmission
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getTransparency() -> getTransparency
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDuration() -> getDuration
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getDelay() -> getDelay
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getLifeOffset() -> getLifeOffset
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getXOffsetValue() -> getXOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue getYOffsetValue() -> getYOffsetValue
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnWidth() -> getSpawnWidth
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue getSpawnHeight() -> getSpawnHeight
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue getSpawnShape() -> getSpawnShape
    boolean isAttached() -> isAttached
    void setAttached(boolean) -> setAttached
    boolean isContinuous() -> isContinuous
    void setContinuous(boolean) -> setContinuous
    boolean isAligned() -> isAligned
    void setAligned(boolean) -> setAligned
    boolean isAdditive() -> isAdditive
    void setAdditive(boolean) -> setAdditive
    boolean isBehind() -> isBehind
    void setBehind(boolean) -> setBehind
    int getMinParticleCount() -> getMinParticleCount
    void setMinParticleCount(int) -> setMinParticleCount
    int getMaxParticleCount() -> getMaxParticleCount
    boolean isComplete() -> isComplete
    float getPercentComplete() -> getPercentComplete
    float getX() -> getX
    float getY() -> getY
    int getActiveCount() -> getActiveCount
    java.lang.String getImagePath() -> getImagePath
    void setImagePath(java.lang.String) -> setImagePath
    void setFlip(boolean,boolean) -> setFlip
    void flipY() -> flipY
    com.badlogic.gdx.math.collision.BoundingBox getBoundingBox() -> getBoundingBox
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    java.lang.String readString(java.io.BufferedReader,java.lang.String) -> readString
    boolean readBoolean(java.io.BufferedReader,java.lang.String) -> readBoolean
    int readInt(java.io.BufferedReader,java.lang.String) -> readInt
    float readFloat(java.io.BufferedReader,java.lang.String) -> readFloat
com.badlogic.gdx.graphics.g2d.ParticleEmitter$1 -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$1:
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide -> $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnEllipseSide
    int[] $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape -> $SwitchMap$com$badlogic$gdx$graphics$g2d$ParticleEmitter$SpawnShape
com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue:
    float[] temp -> temp
    float[] colors -> colors
    float[] timeline -> timeline
    float[] getTimeline() -> getTimeline
    void setTimeline(float[]) -> setTimeline
    float[] getColors() -> getColors
    void setColors(float[]) -> setColors
    float[] getColor(float) -> getColor
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$GradientColorValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue:
    float value -> value
    float getValue() -> getValue
    void setValue(float) -> setValue
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$NumericValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle:
    int life -> life
    int currentLife -> currentLife
    float scale -> scale
    float scaleDiff -> scaleDiff
    float rotation -> rotation
    float rotationDiff -> rotationDiff
    float velocity -> velocity
    float velocityDiff -> velocityDiff
    float angle -> angle
    float angleDiff -> angleDiff
    float angleCos -> angleCos
    float angleSin -> angleSin
    float transparency -> transparency
    float transparencyDiff -> transparencyDiff
    float wind -> wind
    float windDiff -> windDiff
    float gravity -> gravity
    float gravityDiff -> gravityDiff
    float[] tint -> tint
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue:
    boolean active -> active
    boolean alwaysActive -> alwaysActive
    void setAlwaysActive(boolean) -> setAlwaysActive
    boolean isAlwaysActive() -> isAlwaysActive
    boolean isActive() -> isActive
    void setActive(boolean) -> setActive
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ParticleValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue:
    float lowMin -> lowMin
    float lowMax -> lowMax
    float newLowValue() -> newLowValue
    void setLow(float) -> setLow
    void setLow(float,float) -> setLow
    float getLowMin() -> getLowMin
    void setLowMin(float) -> setLowMin
    float getLowMax() -> getLowMax
    void setLowMax(float) -> setLowMax
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$RangedNumericValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue:
    float[] scaling -> scaling
    float[] timeline -> timeline
    float highMin -> highMin
    float highMax -> highMax
    boolean relative -> relative
    float newHighValue() -> newHighValue
    void setHigh(float) -> setHigh
    void setHigh(float,float) -> setHigh
    float getHighMin() -> getHighMin
    void setHighMin(float) -> setHighMin
    float getHighMax() -> getHighMax
    void setHighMax(float) -> setHighMax
    float[] getScaling() -> getScaling
    void setScaling(float[]) -> setScaling
    float[] getTimeline() -> getTimeline
    void setTimeline(float[]) -> setTimeline
    boolean isRelative() -> isRelative
    void setRelative(boolean) -> setRelative
    float getScale(float) -> getScale
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$ScaledNumericValue) -> load
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide both -> both
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide top -> top
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide bottom -> bottom
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide[] values() -> values
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape point -> point
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape line -> line
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape square -> square
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape ellipse -> ellipse
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape[] values() -> values
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue -> com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue:
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape shape -> shape
    boolean edges -> edges
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide side -> side
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape getShape() -> getShape
    void setShape(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShape) -> setShape
    boolean isEdges() -> isEdges
    void setEdges(boolean) -> setEdges
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide getSide() -> getSide
    void setSide(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnEllipseSide) -> setSide
    void save(java.io.Writer) -> save
    void load(java.io.BufferedReader) -> load
    void load(com.badlogic.gdx.graphics.g2d.ParticleEmitter$SpawnShapeValue) -> load
com.badlogic.gdx.graphics.g2d.PixmapPacker -> com.badlogic.gdx.graphics.g2d.PixmapPacker:
    int pageWidth -> pageWidth
    int pageHeight -> pageHeight
    com.badlogic.gdx.graphics.Pixmap$Format pageFormat -> pageFormat
    int padding -> padding
    boolean duplicateBorder -> duplicateBorder
    com.badlogic.gdx.utils.Array pages -> pages
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page currPage -> currPage
    boolean disposed -> disposed
    com.badlogic.gdx.math.Rectangle pack(java.lang.String,com.badlogic.gdx.graphics.Pixmap) -> pack
    void newPage() -> newPage
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node insert(com.badlogic.gdx.graphics.g2d.PixmapPacker$Node,com.badlogic.gdx.math.Rectangle) -> insert
    com.badlogic.gdx.utils.Array getPages() -> getPages
    com.badlogic.gdx.math.Rectangle getRect(java.lang.String) -> getRect
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Page getPage(java.lang.String) -> getPage
    int getPageIndex(java.lang.String) -> getPageIndex
    void dispose() -> dispose
    com.badlogic.gdx.graphics.g2d.TextureAtlas generateTextureAtlas(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> generateTextureAtlas
    void updateTextureAtlas(com.badlogic.gdx.graphics.g2d.TextureAtlas,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,boolean) -> updateTextureAtlas
    int getPageWidth() -> getPageWidth
    int getPageHeight() -> getPageHeight
    int getPadding() -> getPadding
    boolean duplicateBorder() -> duplicateBorder
com.badlogic.gdx.graphics.g2d.PixmapPacker$1 -> com.badlogic.gdx.graphics.g2d.PixmapPacker$1:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PixmapPacker$2 -> com.badlogic.gdx.graphics.g2d.PixmapPacker$2:
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.PixmapPacker$Node -> com.badlogic.gdx.graphics.g2d.PixmapPacker$Node:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node leftChild -> leftChild
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node rightChild -> rightChild
    com.badlogic.gdx.math.Rectangle rect -> rect
    java.lang.String leaveName -> leaveName
com.badlogic.gdx.graphics.g2d.PixmapPacker$Page -> com.badlogic.gdx.graphics.g2d.PixmapPacker$Page:
    com.badlogic.gdx.graphics.g2d.PixmapPacker$Node root -> root
    com.badlogic.gdx.utils.OrderedMap rects -> rects
    com.badlogic.gdx.graphics.Pixmap image -> image
    com.badlogic.gdx.graphics.Texture texture -> texture
    com.badlogic.gdx.utils.Array addedRects -> addedRects
    com.badlogic.gdx.graphics.g2d.PixmapPacker this$0 -> this$0
    com.badlogic.gdx.graphics.Pixmap getPixmap() -> getPixmap
    com.badlogic.gdx.utils.OrderedMap getRects() -> getRects
com.badlogic.gdx.graphics.g2d.PolygonRegion -> com.badlogic.gdx.graphics.g2d.PolygonRegion:
    float[] textureCoords -> textureCoords
    float[] vertices -> vertices
    short[] triangles -> triangles
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> region
    float[] getVertices() -> getVertices
    short[] getTriangles() -> getTriangles
    float[] getTextureCoords() -> getTextureCoords
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> getRegion
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader -> com.badlogic.gdx.graphics.g2d.PolygonRegionLoader:
    com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters defaultParameters -> defaultParameters
    com.badlogic.gdx.math.EarClippingTriangulator triangulator -> triangulator
    com.badlogic.gdx.graphics.g2d.PolygonRegion load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters) -> getDependencies
    com.badlogic.gdx.graphics.g2d.PolygonRegion load(com.badlogic.gdx.graphics.g2d.TextureRegion,com.badlogic.gdx.files.FileHandle) -> load
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters -> com.badlogic.gdx.graphics.g2d.PolygonRegionLoader$PolygonRegionParameters:
    java.lang.String texturePrefix -> texturePrefix
    int readerBuffer -> readerBuffer
    java.lang.String[] textureExtensions -> textureExtensions
com.badlogic.gdx.graphics.g2d.PolygonSprite -> com.badlogic.gdx.graphics.g2d.PolygonSprite:
    com.badlogic.gdx.graphics.g2d.PolygonRegion region -> region
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float scaleX -> scaleX
    float scaleY -> scaleY
    float rotation -> rotation
    float originX -> originX
    float originY -> originY
    float[] vertices -> vertices
    boolean dirty -> dirty
    com.badlogic.gdx.math.Rectangle bounds -> bounds
    com.badlogic.gdx.graphics.Color color -> color
    void set(com.badlogic.gdx.graphics.g2d.PolygonSprite) -> set
    void setBounds(float,float,float,float) -> setBounds
    void setSize(float,float) -> setSize
    void setPosition(float,float) -> setPosition
    void setX(float) -> setX
    void setY(float) -> setY
    void translateX(float) -> translateX
    void translateY(float) -> translateY
    void translate(float,float) -> translate
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setOrigin(float,float) -> setOrigin
    void setRotation(float) -> setRotation
    void rotate(float) -> rotate
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    float[] getVertices() -> getVertices
    com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> getBoundingRectangle
    void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch,float) -> draw
    float getX() -> getX
    float getY() -> getY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getRotation() -> getRotation
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setRegion(com.badlogic.gdx.graphics.g2d.PolygonRegion) -> setRegion
com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch -> com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch:
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    float[] vertices -> vertices
    short[] triangles -> triangles
    int vertexIndex -> vertexIndex
    int triangleIndex -> triangleIndex
    com.badlogic.gdx.graphics.Texture lastTexture -> lastTexture
    float invTexWidth -> invTexWidth
    float invTexHeight -> invTexHeight
    boolean drawing -> drawing
    com.badlogic.gdx.math.Matrix4 transformMatrix -> transformMatrix
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> projectionMatrix
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> combinedMatrix
    boolean blendingDisabled -> blendingDisabled
    int blendSrcFunc -> blendSrcFunc
    int blendDstFunc -> blendDstFunc
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> customShader
    boolean ownsShader -> ownsShader
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    int renderCalls -> renderCalls
    int totalRenderCalls -> totalRenderCalls
    int maxTrianglesInBatch -> maxTrianglesInBatch
    void begin() -> begin
    void end() -> end
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.PolygonRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int,short[],int,int) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean) -> draw
    void flush() -> flush
    void disableBlending() -> disableBlending
    void enableBlending() -> enableBlending
    void setBlendFunction(int,int) -> setBlendFunction
    int getBlendSrcFunc() -> getBlendSrcFunc
    int getBlendDstFunc() -> getBlendDstFunc
    void dispose() -> dispose
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    void setupMatrices() -> setupMatrices
    void switchTexture(com.badlogic.gdx.graphics.Texture) -> switchTexture
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    boolean isBlendingEnabled() -> isBlendingEnabled
com.badlogic.gdx.graphics.g2d.Sprite -> com.badlogic.gdx.graphics.g2d.Sprite:
    int VERTEX_SIZE -> VERTEX_SIZE
    int SPRITE_SIZE -> SPRITE_SIZE
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.Color color -> color
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float originX -> originX
    float originY -> originY
    float rotation -> rotation
    float scaleX -> scaleX
    float scaleY -> scaleY
    boolean dirty -> dirty
    com.badlogic.gdx.math.Rectangle bounds -> bounds
    void set(com.badlogic.gdx.graphics.g2d.Sprite) -> set
    void setBounds(float,float,float,float) -> setBounds
    void setSize(float,float) -> setSize
    void setPosition(float,float) -> setPosition
    void setX(float) -> setX
    void setY(float) -> setY
    void setCenterX(float) -> setCenterX
    void setCenterY(float) -> setCenterY
    void setCenter(float,float) -> setCenter
    void translateX(float) -> translateX
    void translateY(float) -> translateY
    void translate(float,float) -> translate
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setAlpha(float) -> setAlpha
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    void setOrigin(float,float) -> setOrigin
    void setOriginCenter() -> setOriginCenter
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void rotate(float) -> rotate
    void rotate90(boolean) -> rotate90
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    float[] getVertices() -> getVertices
    com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> getBoundingRectangle
    void draw(com.badlogic.gdx.graphics.g2d.Batch) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getX() -> getX
    float getY() -> getY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setRegion(float,float,float,float) -> setRegion
    void setU(float) -> setU
    void setV(float) -> setV
    void setU2(float) -> setU2
    void setV2(float) -> setV2
    void setFlip(boolean,boolean) -> setFlip
    void flip(boolean,boolean) -> flip
    void scroll(float,float) -> scroll
com.badlogic.gdx.graphics.g2d.SpriteBatch -> com.badlogic.gdx.graphics.g2d.SpriteBatch:
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    float[] vertices -> vertices
    int idx -> idx
    com.badlogic.gdx.graphics.Texture lastTexture -> lastTexture
    float invTexWidth -> invTexWidth
    float invTexHeight -> invTexHeight
    boolean drawing -> drawing
    com.badlogic.gdx.math.Matrix4 transformMatrix -> transformMatrix
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> projectionMatrix
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> combinedMatrix
    boolean blendingDisabled -> blendingDisabled
    int blendSrcFunc -> blendSrcFunc
    int blendDstFunc -> blendDstFunc
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> customShader
    boolean ownsShader -> ownsShader
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    int renderCalls -> renderCalls
    int totalRenderCalls -> totalRenderCalls
    int maxSpritesInBatch -> maxSpritesInBatch
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> createDefaultShader
    void begin() -> begin
    void end() -> end
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.Texture,float[],int,int) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float,boolean) -> draw
    void flush() -> flush
    void disableBlending() -> disableBlending
    void enableBlending() -> enableBlending
    void setBlendFunction(int,int) -> setBlendFunction
    int getBlendSrcFunc() -> getBlendSrcFunc
    int getBlendDstFunc() -> getBlendDstFunc
    void dispose() -> dispose
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    void setupMatrices() -> setupMatrices
    void switchTexture(com.badlogic.gdx.graphics.Texture) -> switchTexture
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    boolean isBlendingEnabled() -> isBlendingEnabled
    boolean isDrawing() -> isDrawing
com.badlogic.gdx.graphics.g2d.SpriteCache -> com.badlogic.gdx.graphics.g2d.SpriteCache:
    float[] tempVertices -> tempVertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    boolean drawing -> drawing
    com.badlogic.gdx.math.Matrix4 transformMatrix -> transformMatrix
    com.badlogic.gdx.math.Matrix4 projectionMatrix -> projectionMatrix
    com.badlogic.gdx.utils.Array caches -> caches
    com.badlogic.gdx.math.Matrix4 combinedMatrix -> combinedMatrix
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    com.badlogic.gdx.graphics.g2d.SpriteCache$Cache currentCache -> currentCache
    com.badlogic.gdx.utils.Array textures -> textures
    com.badlogic.gdx.utils.IntArray counts -> counts
    float color -> color
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    com.badlogic.gdx.graphics.glutils.ShaderProgram customShader -> customShader
    int renderCalls -> renderCalls
    int totalRenderCalls -> totalRenderCalls
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setColor(float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void beginCache() -> beginCache
    void beginCache(int) -> beginCache
    int endCache() -> endCache
    void clear() -> clear
    void add(com.badlogic.gdx.graphics.Texture,float[],int,int) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,float,float,float,float,float) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,int,int,int,int) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,int,int,int,int,boolean,boolean) -> add
    void add(com.badlogic.gdx.graphics.Texture,float,float,float,float,float,float,float,float,float,int,int,int,int,boolean,boolean) -> add
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float) -> add
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float) -> add
    void add(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float,float,float,float,float,float,float,float) -> add
    void add(com.badlogic.gdx.graphics.g2d.Sprite) -> add
    void begin() -> begin
    void end() -> end
    void draw(int) -> draw
    void draw(int,int,int) -> draw
    void dispose() -> dispose
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader() -> createDefaultShader
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
com.badlogic.gdx.graphics.g2d.SpriteCache$Cache -> com.badlogic.gdx.graphics.g2d.SpriteCache$Cache:
    int id -> id
    int offset -> offset
    int maxCount -> maxCount
    int textureCount -> textureCount
    com.badlogic.gdx.graphics.Texture[] textures -> textures
    int[] counts -> counts
com.badlogic.gdx.graphics.g2d.TextureAtlas -> com.badlogic.gdx.graphics.g2d.TextureAtlas:
    java.lang.String[] tuple -> tuple
    com.badlogic.gdx.utils.ObjectSet textures -> textures
    com.badlogic.gdx.utils.Array regions -> regions
    java.util.Comparator indexComparator -> indexComparator
    void load(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData) -> load
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.Texture,int,int,int,int) -> addRegion
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion addRegion(java.lang.String,com.badlogic.gdx.graphics.g2d.TextureRegion) -> addRegion
    com.badlogic.gdx.utils.Array getRegions() -> getRegions
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String) -> findRegion
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion findRegion(java.lang.String,int) -> findRegion
    com.badlogic.gdx.utils.Array findRegions(java.lang.String) -> findRegions
    com.badlogic.gdx.utils.Array createSprites() -> createSprites
    com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String) -> createSprite
    com.badlogic.gdx.graphics.g2d.Sprite createSprite(java.lang.String,int) -> createSprite
    com.badlogic.gdx.utils.Array createSprites(java.lang.String) -> createSprites
    com.badlogic.gdx.graphics.g2d.Sprite newSprite(com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion) -> newSprite
    com.badlogic.gdx.graphics.g2d.NinePatch createPatch(java.lang.String) -> createPatch
    com.badlogic.gdx.utils.ObjectSet getTextures() -> getTextures
    void dispose() -> dispose
    java.lang.String readValue(java.io.BufferedReader) -> readValue
    int readTuple(java.io.BufferedReader) -> readTuple
com.badlogic.gdx.graphics.g2d.TextureAtlas$1 -> com.badlogic.gdx.graphics.g2d.TextureAtlas$1:
    int compare(com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region,com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion -> com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion:
    int index -> index
    java.lang.String name -> name
    float offsetX -> offsetX
    float offsetY -> offsetY
    int packedWidth -> packedWidth
    int packedHeight -> packedHeight
    int originalWidth -> originalWidth
    int originalHeight -> originalHeight
    boolean rotate -> rotate
    int[] splits -> splits
    int[] pads -> pads
    void flip(boolean,boolean) -> flip
    float getRotatedPackedWidth() -> getRotatedPackedWidth
    float getRotatedPackedHeight() -> getRotatedPackedHeight
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite -> com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasSprite:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion region -> region
    float originalOffsetX -> originalOffsetX
    float originalOffsetY -> originalOffsetY
    void setPosition(float,float) -> setPosition
    void setX(float) -> setX
    void setY(float) -> setY
    void setBounds(float,float,float,float) -> setBounds
    void setSize(float,float) -> setSize
    void setOrigin(float,float) -> setOrigin
    void setOriginCenter() -> setOriginCenter
    void flip(boolean,boolean) -> flip
    void rotate90(boolean) -> rotate90
    float getX() -> getX
    float getY() -> getY
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getWidthRatio() -> getWidthRatio
    float getHeightRatio() -> getHeightRatio
    com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion getAtlasRegion() -> getAtlasRegion
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData:
    com.badlogic.gdx.utils.Array pages -> pages
    com.badlogic.gdx.utils.Array regions -> regions
    com.badlogic.gdx.utils.Array getPages() -> getPages
    com.badlogic.gdx.utils.Array getRegions() -> getRegions
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page:
    com.badlogic.gdx.files.FileHandle textureFile -> textureFile
    com.badlogic.gdx.graphics.Texture texture -> texture
    float width -> width
    float height -> height
    boolean useMipMaps -> useMipMaps
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> uWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> vWrap
com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region -> com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Region:
    com.badlogic.gdx.graphics.g2d.TextureAtlas$TextureAtlasData$Page page -> page
    int index -> index
    java.lang.String name -> name
    float offsetX -> offsetX
    float offsetY -> offsetY
    int originalWidth -> originalWidth
    int originalHeight -> originalHeight
    boolean rotate -> rotate
    int left -> left
    int top -> top
    int width -> width
    int height -> height
    boolean flip -> flip
    int[] splits -> splits
    int[] pads -> pads
com.badlogic.gdx.graphics.g2d.TextureRegion -> com.badlogic.gdx.graphics.g2d.TextureRegion:
    com.badlogic.gdx.graphics.Texture texture -> texture
    float u -> u
    float v -> v
    float u2 -> u2
    float v2 -> v2
    int regionWidth -> regionWidth
    int regionHeight -> regionHeight
    void setRegion(com.badlogic.gdx.graphics.Texture) -> setRegion
    void setRegion(int,int,int,int) -> setRegion
    void setRegion(float,float,float,float) -> setRegion
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setRegion
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion,int,int,int,int) -> setRegion
    com.badlogic.gdx.graphics.Texture getTexture() -> getTexture
    void setTexture(com.badlogic.gdx.graphics.Texture) -> setTexture
    float getU() -> getU
    void setU(float) -> setU
    float getV() -> getV
    void setV(float) -> setV
    float getU2() -> getU2
    void setU2(float) -> setU2
    float getV2() -> getV2
    void setV2(float) -> setV2
    int getRegionX() -> getRegionX
    void setRegionX(int) -> setRegionX
    int getRegionY() -> getRegionY
    void setRegionY(int) -> setRegionY
    int getRegionWidth() -> getRegionWidth
    void setRegionWidth(int) -> setRegionWidth
    int getRegionHeight() -> getRegionHeight
    void setRegionHeight(int) -> setRegionHeight
    void flip(boolean,boolean) -> flip
    boolean isFlipX() -> isFlipX
    boolean isFlipY() -> isFlipY
    void scroll(float,float) -> scroll
    com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(int,int) -> split
    com.badlogic.gdx.graphics.g2d.TextureRegion[][] split(com.badlogic.gdx.graphics.Texture,int,int) -> split
com.badlogic.gdx.graphics.g2d.freetype.FreeType -> com.badlogic.gdx.graphics.g2d.freetype.FreeType:
    int FT_PIXEL_MODE_NONE -> FT_PIXEL_MODE_NONE
    int FT_PIXEL_MODE_MONO -> FT_PIXEL_MODE_MONO
    int FT_PIXEL_MODE_GRAY -> FT_PIXEL_MODE_GRAY
    int FT_PIXEL_MODE_GRAY2 -> FT_PIXEL_MODE_GRAY2
    int FT_PIXEL_MODE_GRAY4 -> FT_PIXEL_MODE_GRAY4
    int FT_PIXEL_MODE_LCD -> FT_PIXEL_MODE_LCD
    int FT_PIXEL_MODE_LCD_V -> FT_PIXEL_MODE_LCD_V
    int FT_ENCODING_NONE -> FT_ENCODING_NONE
    int FT_ENCODING_MS_SYMBOL -> FT_ENCODING_MS_SYMBOL
    int FT_ENCODING_UNICODE -> FT_ENCODING_UNICODE
    int FT_ENCODING_SJIS -> FT_ENCODING_SJIS
    int FT_ENCODING_GB2312 -> FT_ENCODING_GB2312
    int FT_ENCODING_BIG5 -> FT_ENCODING_BIG5
    int FT_ENCODING_WANSUNG -> FT_ENCODING_WANSUNG
    int FT_ENCODING_JOHAB -> FT_ENCODING_JOHAB
    int FT_ENCODING_ADOBE_STANDARD -> FT_ENCODING_ADOBE_STANDARD
    int FT_ENCODING_ADOBE_EXPERT -> FT_ENCODING_ADOBE_EXPERT
    int FT_ENCODING_ADOBE_CUSTOM -> FT_ENCODING_ADOBE_CUSTOM
    int FT_ENCODING_ADOBE_LATIN_1 -> FT_ENCODING_ADOBE_LATIN_1
    int FT_ENCODING_OLD_LATIN_2 -> FT_ENCODING_OLD_LATIN_2
    int FT_ENCODING_APPLE_ROMAN -> FT_ENCODING_APPLE_ROMAN
    int FT_FACE_FLAG_SCALABLE -> FT_FACE_FLAG_SCALABLE
    int FT_FACE_FLAG_FIXED_SIZES -> FT_FACE_FLAG_FIXED_SIZES
    int FT_FACE_FLAG_FIXED_WIDTH -> FT_FACE_FLAG_FIXED_WIDTH
    int FT_FACE_FLAG_SFNT -> FT_FACE_FLAG_SFNT
    int FT_FACE_FLAG_HORIZONTAL -> FT_FACE_FLAG_HORIZONTAL
    int FT_FACE_FLAG_VERTICAL -> FT_FACE_FLAG_VERTICAL
    int FT_FACE_FLAG_KERNING -> FT_FACE_FLAG_KERNING
    int FT_FACE_FLAG_FAST_GLYPHS -> FT_FACE_FLAG_FAST_GLYPHS
    int FT_FACE_FLAG_MULTIPLE_MASTERS -> FT_FACE_FLAG_MULTIPLE_MASTERS
    int FT_FACE_FLAG_GLYPH_NAMES -> FT_FACE_FLAG_GLYPH_NAMES
    int FT_FACE_FLAG_EXTERNAL_STREAM -> FT_FACE_FLAG_EXTERNAL_STREAM
    int FT_FACE_FLAG_HINTER -> FT_FACE_FLAG_HINTER
    int FT_FACE_FLAG_CID_KEYED -> FT_FACE_FLAG_CID_KEYED
    int FT_FACE_FLAG_TRICKY -> FT_FACE_FLAG_TRICKY
    int FT_STYLE_FLAG_ITALIC -> FT_STYLE_FLAG_ITALIC
    int FT_STYLE_FLAG_BOLD -> FT_STYLE_FLAG_BOLD
    int FT_LOAD_DEFAULT -> FT_LOAD_DEFAULT
    int FT_LOAD_NO_SCALE -> FT_LOAD_NO_SCALE
    int FT_LOAD_NO_HINTING -> FT_LOAD_NO_HINTING
    int FT_LOAD_RENDER -> FT_LOAD_RENDER
    int FT_LOAD_NO_BITMAP -> FT_LOAD_NO_BITMAP
    int FT_LOAD_VERTICAL_LAYOUT -> FT_LOAD_VERTICAL_LAYOUT
    int FT_LOAD_FORCE_AUTOHINT -> FT_LOAD_FORCE_AUTOHINT
    int FT_LOAD_CROP_BITMAP -> FT_LOAD_CROP_BITMAP
    int FT_LOAD_PEDANTIC -> FT_LOAD_PEDANTIC
    int FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH -> FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH
    int FT_LOAD_NO_RECURSE -> FT_LOAD_NO_RECURSE
    int FT_LOAD_IGNORE_TRANSFORM -> FT_LOAD_IGNORE_TRANSFORM
    int FT_LOAD_MONOCHROME -> FT_LOAD_MONOCHROME
    int FT_LOAD_LINEAR_DESIGN -> FT_LOAD_LINEAR_DESIGN
    int FT_LOAD_NO_AUTOHINT -> FT_LOAD_NO_AUTOHINT
    int FT_RENDER_MODE_NORMAL -> FT_RENDER_MODE_NORMAL
    int FT_RENDER_MODE_LIGHT -> FT_RENDER_MODE_LIGHT
    int FT_RENDER_MODE_MONO -> FT_RENDER_MODE_MONO
    int FT_RENDER_MODE_LCD -> FT_RENDER_MODE_LCD
    int FT_RENDER_MODE_LCD_V -> FT_RENDER_MODE_LCD_V
    int FT_RENDER_MODE_MAX -> FT_RENDER_MODE_MAX
    int FT_KERNING_DEFAULT -> FT_KERNING_DEFAULT
    int FT_KERNING_UNFITTED -> FT_KERNING_UNFITTED
    int FT_KERNING_UNSCALED -> FT_KERNING_UNSCALED
    int encode(char,char,char,char) -> encode
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library initFreeType() -> initFreeType
    long initFreeTypeJni() -> initFreeTypeJni
    void doneFreeType(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library) -> doneFreeType
    void doneFreeType(long) -> doneFreeType
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face newFace(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library,com.badlogic.gdx.files.FileHandle,int) -> newFace
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face newMemoryFace(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library,byte[],int,int) -> newMemoryFace
    long newMemoryFace(long,java.nio.ByteBuffer,int,int) -> newMemoryFace
    void doneFace(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face) -> doneFace
    void doneFace(long) -> doneFace
    boolean selectSize(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int) -> selectSize
    boolean selectSize(long,int) -> selectSize
    boolean setCharSize(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int,int,int) -> setCharSize
    boolean setCharSize(long,int,int,int,int) -> setCharSize
    boolean setPixelSizes(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int) -> setPixelSizes
    boolean setPixelSizes(long,int,int) -> setPixelSizes
    boolean loadGlyph(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int) -> loadGlyph
    boolean loadGlyph(long,int,int) -> loadGlyph
    boolean loadChar(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int) -> loadChar
    boolean loadChar(long,int,int) -> loadChar
    boolean renderGlyph(com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot,int) -> renderGlyph
    boolean renderGlyph(long,int) -> renderGlyph
    boolean hasKerning(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face) -> hasKerning
    boolean hasKerning(long) -> hasKerning
    int getKerning(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int,int,int) -> getKerning
    int getKerning(long,int,int,int) -> getKerning
    int getCharIndex(com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face,int) -> getCharIndex
    int getCharIndex(long,int) -> getCharIndex
    int toInt(int) -> toInt
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap:
    int getRows() -> getRows
    int getRows(long) -> getRows
    int getWidth() -> getWidth
    int getWidth(long) -> getWidth
    int getPitch() -> getPitch
    int getPitch(long) -> getPitch
    java.nio.ByteBuffer getBuffer() -> getBuffer
    com.badlogic.gdx.graphics.Pixmap getPixmap(com.badlogic.gdx.graphics.Pixmap$Format) -> getPixmap
    java.nio.ByteBuffer getBuffer(long) -> getBuffer
    int getNumGray() -> getNumGray
    int getNumGray(long) -> getNumGray
    int getPixelMode() -> getPixelMode
    int getPixelMode(long) -> getPixelMode
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face:
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library library -> library
    int getFaceFlags() -> getFaceFlags
    int getFaceFlags(long) -> getFaceFlags
    int getStyleFlags() -> getStyleFlags
    int getStyleFlags(long) -> getStyleFlags
    int getNumGlyphs() -> getNumGlyphs
    int getNumGlyphs(long) -> getNumGlyphs
    int getAscender() -> getAscender
    int getAscender(long) -> getAscender
    int getDescender() -> getDescender
    int getDescender(long) -> getDescender
    int getHeight() -> getHeight
    int getHeight(long) -> getHeight
    int getMaxAdvanceWidth() -> getMaxAdvanceWidth
    int getMaxAdvanceWidth(long) -> getMaxAdvanceWidth
    int getMaxAdvanceHeight() -> getMaxAdvanceHeight
    int getMaxAdvanceHeight(long) -> getMaxAdvanceHeight
    int getUnderlinePosition() -> getUnderlinePosition
    int getUnderlinePosition(long) -> getUnderlinePosition
    int getUnderlineThickness() -> getUnderlineThickness
    int getUnderlineThickness(long) -> getUnderlineThickness
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot getGlyph() -> getGlyph
    long getGlyph(long) -> getGlyph
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size getSize() -> getSize
    long getSize(long) -> getSize
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics:
    int getWidth() -> getWidth
    int getWidth(long) -> getWidth
    int getHeight() -> getHeight
    int getHeight(long) -> getHeight
    int getHoriBearingX() -> getHoriBearingX
    int getHoriBearingX(long) -> getHoriBearingX
    int getHoriBearingY() -> getHoriBearingY
    int getHoriBearingY(long) -> getHoriBearingY
    int getHoriAdvance() -> getHoriAdvance
    int getHoriAdvance(long) -> getHoriAdvance
    int getVertBearingX() -> getVertBearingX
    int getVertBearingX(long) -> getVertBearingX
    int getVertBearingY() -> getVertBearingY
    int getVertBearingY(long) -> getVertBearingY
    int getVertAdvance() -> getVertAdvance
    int getVertAdvance(long) -> getVertAdvance
com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphSlot:
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$GlyphMetrics getMetrics() -> getMetrics
    long getMetrics(long) -> getMetrics
    int getLinearHoriAdvance() -> getLinearHoriAdvance
    int getLinearHoriAdvance(long) -> getLinearHoriAdvance
    int getLinearVertAdvance() -> getLinearVertAdvance
    int getLinearVertAdvance(long) -> getLinearVertAdvance
    int getAdvanceX() -> getAdvanceX
    int getAdvanceX(long) -> getAdvanceX
    int getAdvanceY() -> getAdvanceY
    int getAdvanceY(long) -> getAdvanceY
    int getFormat() -> getFormat
    int getFormat(long) -> getFormat
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap getBitmap() -> getBitmap
    long getBitmap(long) -> getBitmap
    int getBitmapLeft() -> getBitmapLeft
    int getBitmapLeft(long) -> getBitmapLeft
    int getBitmapTop() -> getBitmapTop
    int getBitmapTop(long) -> getBitmapTop
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library:
    com.badlogic.gdx.utils.LongMap fontData -> fontData
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Pointer -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Pointer:
    long address -> address
com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$Size:
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics getMetrics() -> getMetrics
    long getMetrics(long) -> getMetrics
com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics -> com.badlogic.gdx.graphics.g2d.freetype.FreeType$SizeMetrics:
    int getXppem() -> getXppem
    int getXppem(long) -> getXppem
    int getYppem() -> getYppem
    int getYppem(long) -> getYppem
    int getXScale() -> getXScale
    int getXscale(long) -> getXscale
    int getYscale() -> getYscale
    int getYscale(long) -> getYscale
    int getAscender() -> getAscender
    int getAscender(long) -> getAscender
    int getDescender() -> getDescender
    int getDescender(long) -> getDescender
    int getHeight() -> getHeight
    int getHeight(long) -> getHeight
    int getMaxAdvance() -> getMaxAdvance
    int getMaxAdvance(long) -> getMaxAdvance
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator -> com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator:
    java.lang.String DEFAULT_CHARS -> DEFAULT_CHARS
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Library library -> library
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Face face -> face
    java.lang.String filePath -> filePath
    boolean bitmapped -> bitmapped
    int maxTextureSize -> maxTextureSize
    int NO_MAXIMUM -> NO_MAXIMUM
    void setMaxTextureSize(int) -> setMaxTextureSize
    int getMaxTextureSize() -> getMaxTextureSize
    boolean checkForBitmapFont() -> checkForBitmapFont
    com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(int,java.lang.String,boolean) -> generateFont
    com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(int) -> generateFont
    com.badlogic.gdx.graphics.g2d.BitmapFont generateFont(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter) -> generateFont
    int scaleForPixelHeight(int) -> scaleForPixelHeight
    int scaleForPixelWidth(int,int) -> scaleForPixelWidth
    int scaleToFitSquare(int,int,int) -> scaleToFitSquare
    com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap generateGlyphAndBitmap(int,int,boolean) -> generateGlyphAndBitmap
    com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(int) -> generateData
    com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(int,java.lang.String,boolean) -> generateData
    com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(int,java.lang.String,boolean,com.badlogic.gdx.graphics.g2d.PixmapPacker) -> generateData
    com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData generateData(com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter) -> generateData
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$1 -> com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$1:
    com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator this$0 -> this$0
    void dispose() -> dispose
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData -> com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeBitmapFontData:
    com.badlogic.gdx.graphics.g2d.TextureRegion[] regions -> regions
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    com.badlogic.gdx.graphics.g2d.TextureRegion[] getTextureRegions() -> getTextureRegions
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter -> com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$FreeTypeFontParameter:
    int size -> size
    java.lang.String characters -> characters
    com.badlogic.gdx.graphics.g2d.PixmapPacker packer -> packer
    boolean flip -> flip
    boolean genMipMaps -> genMipMaps
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap -> com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator$GlyphAndBitmap:
    com.badlogic.gdx.graphics.g2d.BitmapFont$Glyph glyph -> glyph
    com.badlogic.gdx.graphics.g2d.freetype.FreeType$Bitmap bitmap -> bitmap
    com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator this$0 -> this$0
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader -> com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader:
    com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGenerator load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader$FreeTypeFontGeneratorParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader$FreeTypeFontGeneratorParameters) -> getDependencies
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader$FreeTypeFontGeneratorParameters -> com.badlogic.gdx.graphics.g2d.freetype.FreeTypeFontGeneratorLoader$FreeTypeFontGeneratorParameters:
com.badlogic.gdx.graphics.g2d.freetype.FreetypeBuild -> com.badlogic.gdx.graphics.g2d.freetype.FreetypeBuild:
    void main(java.lang.String[]) -> main
com.badlogic.gdx.graphics.g3d.Attribute -> com.badlogic.gdx.graphics.g3d.Attribute:
    com.badlogic.gdx.utils.Array types -> types
    long type -> type
    long getAttributeType(java.lang.String) -> getAttributeType
    java.lang.String getAttributeAlias(long) -> getAttributeAlias
    long register(java.lang.String) -> register
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    boolean equals(com.badlogic.gdx.graphics.g3d.Attribute) -> equals
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g3d.Attributes -> com.badlogic.gdx.graphics.g3d.Attributes:
    long mask -> mask
    com.badlogic.gdx.utils.Array attributes -> attributes
    boolean sorted -> sorted
    void sort() -> sort
    long getMask() -> getMask
    com.badlogic.gdx.graphics.g3d.Attribute get(long) -> get
    com.badlogic.gdx.graphics.g3d.Attribute get(java.lang.Class,long) -> get
    com.badlogic.gdx.utils.Array get(com.badlogic.gdx.utils.Array,long) -> get
    void clear() -> clear
    int size() -> size
    void enable(long) -> enable
    void disable(long) -> disable
    void set(com.badlogic.gdx.graphics.g3d.Attribute) -> set
    void set(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute) -> set
    void set(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute) -> set
    void set(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute) -> set
    void set(com.badlogic.gdx.graphics.g3d.Attribute[]) -> set
    void set(java.lang.Iterable) -> set
    void remove(long) -> remove
    boolean has(long) -> has
    int indexOf(long) -> indexOf
    boolean same(com.badlogic.gdx.graphics.g3d.Attributes,boolean) -> same
    boolean same(com.badlogic.gdx.graphics.g3d.Attributes) -> same
    int compare(com.badlogic.gdx.graphics.g3d.Attribute,com.badlogic.gdx.graphics.g3d.Attribute) -> compare
    java.util.Iterator iterator() -> iterator
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.Environment -> com.badlogic.gdx.graphics.g3d.Environment:
    com.badlogic.gdx.graphics.g3d.environment.ShadowMap shadowMap -> shadowMap
    com.badlogic.gdx.utils.Array directionalLights -> directionalLights
    com.badlogic.gdx.utils.Array pointLights -> pointLights
    com.badlogic.gdx.graphics.g3d.Environment add(com.badlogic.gdx.graphics.g3d.environment.BaseLight[]) -> add
    com.badlogic.gdx.graphics.g3d.Environment add(com.badlogic.gdx.utils.Array) -> add
    com.badlogic.gdx.graphics.g3d.Environment add(com.badlogic.gdx.graphics.g3d.environment.BaseLight) -> add
    void clear() -> clear
com.badlogic.gdx.graphics.g3d.Material -> com.badlogic.gdx.graphics.g3d.Material:
    int counter -> counter
    java.lang.String id -> id
    com.badlogic.gdx.graphics.g3d.Material copy() -> copy
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.Model -> com.badlogic.gdx.graphics.g3d.Model:
    com.badlogic.gdx.utils.Array materials -> materials
    com.badlogic.gdx.utils.Array nodes -> nodes
    com.badlogic.gdx.utils.Array animations -> animations
    com.badlogic.gdx.utils.Array meshes -> meshes
    com.badlogic.gdx.utils.Array meshParts -> meshParts
    com.badlogic.gdx.utils.Array disposables -> disposables
    com.badlogic.gdx.utils.ObjectMap nodePartBones -> nodePartBones
    void load(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> load
    void loadAnimations(java.lang.Iterable) -> loadAnimations
    void loadNodes(java.lang.Iterable) -> loadNodes
    com.badlogic.gdx.graphics.g3d.model.Node loadNode(com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.graphics.g3d.model.data.ModelNode) -> loadNode
    void loadMeshes(java.lang.Iterable) -> loadMeshes
    void convertMesh(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh) -> convertMesh
    void loadMaterials(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> loadMaterials
    com.badlogic.gdx.graphics.g3d.Material convertMaterial(com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial,com.badlogic.gdx.graphics.g3d.utils.TextureProvider) -> convertMaterial
    void manageDisposable(com.badlogic.gdx.utils.Disposable) -> manageDisposable
    java.lang.Iterable getManagedDisposables() -> getManagedDisposables
    void dispose() -> dispose
    void calculateTransforms() -> calculateTransforms
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> extendBoundingBox
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String) -> getAnimation
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String,boolean) -> getAnimation
    com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String) -> getMaterial
    com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String,boolean) -> getMaterial
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String) -> getNode
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean) -> getNode
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean,boolean) -> getNode
com.badlogic.gdx.graphics.g3d.ModelBatch -> com.badlogic.gdx.graphics.g3d.ModelBatch:
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool renderablesPool -> renderablesPool
    com.badlogic.gdx.utils.Array renderables -> renderables
    com.badlogic.gdx.graphics.g3d.utils.RenderContext context -> context
    boolean ownContext -> ownContext
    com.badlogic.gdx.graphics.g3d.utils.ShaderProvider shaderProvider -> shaderProvider
    com.badlogic.gdx.graphics.g3d.utils.RenderableSorter sorter -> sorter
    void begin(com.badlogic.gdx.graphics.Camera) -> begin
    void setCamera(com.badlogic.gdx.graphics.Camera) -> setCamera
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    boolean ownsRenderContext() -> ownsRenderContext
    com.badlogic.gdx.graphics.g3d.utils.RenderContext getRenderContext() -> getRenderContext
    com.badlogic.gdx.graphics.g3d.utils.ShaderProvider getShaderProvider() -> getShaderProvider
    com.badlogic.gdx.graphics.g3d.utils.RenderableSorter getRenderableSorter() -> getRenderableSorter
    void flush() -> flush
    void end() -> end
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> render
    void render(com.badlogic.gdx.graphics.g3d.RenderableProvider) -> render
    void render(java.lang.Iterable) -> render
    void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.Environment) -> render
    void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.Environment) -> render
    void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.Shader) -> render
    void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.Shader) -> render
    void render(com.badlogic.gdx.graphics.g3d.RenderableProvider,com.badlogic.gdx.graphics.g3d.Environment,com.badlogic.gdx.graphics.g3d.Shader) -> render
    void render(java.lang.Iterable,com.badlogic.gdx.graphics.g3d.Environment,com.badlogic.gdx.graphics.g3d.Shader) -> render
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool -> com.badlogic.gdx.graphics.g3d.ModelBatch$RenderablePool:
    com.badlogic.gdx.utils.Array obtained -> obtained
    com.badlogic.gdx.graphics.g3d.Renderable newObject() -> newObject
    com.badlogic.gdx.graphics.g3d.Renderable obtain() -> obtain
    void flush() -> flush
    java.lang.Object obtain() -> obtain
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.ModelInstance -> com.badlogic.gdx.graphics.g3d.ModelInstance:
    com.badlogic.gdx.utils.Array materials -> materials
    com.badlogic.gdx.utils.Array nodes -> nodes
    com.badlogic.gdx.utils.Array animations -> animations
    com.badlogic.gdx.graphics.g3d.Model model -> model
    com.badlogic.gdx.math.Matrix4 transform -> transform
    java.lang.Object userData -> userData
    com.badlogic.gdx.utils.ObjectMap nodePartBones -> nodePartBones
    com.badlogic.gdx.graphics.g3d.ModelInstance copy() -> copy
    void copyNodes(com.badlogic.gdx.utils.Array) -> copyNodes
    void copyNodes(com.badlogic.gdx.utils.Array,java.lang.String[]) -> copyNodes
    void copyNodes(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array) -> copyNodes
    void setBones() -> setBones
    com.badlogic.gdx.graphics.g3d.model.Node copyNode(com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.graphics.g3d.model.Node) -> copyNode
    com.badlogic.gdx.graphics.g3d.model.NodePart copyNodePart(com.badlogic.gdx.graphics.g3d.model.NodePart) -> copyNodePart
    void copyAnimations(java.lang.Iterable) -> copyAnimations
    void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> getRenderables
    com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable) -> getRenderable
    com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.model.Node) -> getRenderable
    com.badlogic.gdx.graphics.g3d.Renderable getRenderable(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.graphics.g3d.model.NodePart) -> getRenderable
    void getRenderables(com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> getRenderables
    void calculateTransforms() -> calculateTransforms
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> extendBoundingBox
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String) -> getAnimation
    com.badlogic.gdx.graphics.g3d.model.Animation getAnimation(java.lang.String,boolean) -> getAnimation
    com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String) -> getMaterial
    com.badlogic.gdx.graphics.g3d.Material getMaterial(java.lang.String,boolean) -> getMaterial
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String) -> getNode
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean) -> getNode
    com.badlogic.gdx.graphics.g3d.model.Node getNode(java.lang.String,boolean,boolean) -> getNode
com.badlogic.gdx.graphics.g3d.Renderable -> com.badlogic.gdx.graphics.g3d.Renderable:
    com.badlogic.gdx.math.Matrix4 worldTransform -> worldTransform
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    int meshPartOffset -> meshPartOffset
    int meshPartSize -> meshPartSize
    int primitiveType -> primitiveType
    com.badlogic.gdx.graphics.g3d.Material material -> material
    com.badlogic.gdx.graphics.g3d.Environment environment -> environment
    com.badlogic.gdx.math.Matrix4[] bones -> bones
    com.badlogic.gdx.graphics.g3d.Shader shader -> shader
    java.lang.Object userData -> userData
com.badlogic.gdx.graphics.g3d.RenderableProvider -> com.badlogic.gdx.graphics.g3d.RenderableProvider:
    void getRenderables(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Pool) -> getRenderables
com.badlogic.gdx.graphics.g3d.Shader -> com.badlogic.gdx.graphics.g3d.Shader:
    void init() -> init
    int compareTo(com.badlogic.gdx.graphics.g3d.Shader) -> compareTo
    boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable) -> canRender
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> begin
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> render
    void end() -> end
com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute -> com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute:
    java.lang.String Alias -> Alias
    long Type -> Type
    boolean blended -> blended
    int sourceFunction -> sourceFunction
    int destFunction -> destFunction
    float opacity -> opacity
    boolean is(long) -> is
    com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute copy() -> copy
    int hashCode() -> hashCode
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute -> com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute:
    java.lang.String DiffuseAlias -> DiffuseAlias
    long Diffuse -> Diffuse
    java.lang.String SpecularAlias -> SpecularAlias
    long Specular -> Specular
    java.lang.String AmbientAlias -> AmbientAlias
    long Ambient -> Ambient
    java.lang.String EmissiveAlias -> EmissiveAlias
    long Emissive -> Emissive
    java.lang.String ReflectionAlias -> ReflectionAlias
    long Reflection -> Reflection
    java.lang.String AmbientLightAlias -> AmbientLightAlias
    long AmbientLight -> AmbientLight
    java.lang.String FogAlias -> FogAlias
    long Fog -> Fog
    long Mask -> Mask
    com.badlogic.gdx.graphics.Color color -> color
    boolean is(long) -> is
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createAmbient(com.badlogic.gdx.graphics.Color) -> createAmbient
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createAmbient(float,float,float,float) -> createAmbient
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createDiffuse(com.badlogic.gdx.graphics.Color) -> createDiffuse
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createDiffuse(float,float,float,float) -> createDiffuse
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createSpecular(com.badlogic.gdx.graphics.Color) -> createSpecular
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createSpecular(float,float,float,float) -> createSpecular
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createReflection(com.badlogic.gdx.graphics.Color) -> createReflection
    com.badlogic.gdx.graphics.g3d.attributes.ColorAttribute createReflection(float,float,float,float) -> createReflection
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute -> com.badlogic.gdx.graphics.g3d.attributes.CubemapAttribute:
    java.lang.String EnvironmentMapAlias -> EnvironmentMapAlias
    long EnvironmentMap -> EnvironmentMap
    long Mask -> Mask
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor textureDescription -> textureDescription
    boolean is(long) -> is
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute -> com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute:
    java.lang.String Alias -> Alias
    long Type -> Type
    long Mask -> Mask
    int depthFunc -> depthFunc
    float depthRangeNear -> depthRangeNear
    float depthRangeFar -> depthRangeFar
    boolean depthMask -> depthMask
    boolean is(long) -> is
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute -> com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute:
    java.lang.String ShininessAlias -> ShininessAlias
    long Shininess -> Shininess
    java.lang.String AlphaTestAlias -> AlphaTestAlias
    long AlphaTest -> AlphaTest
    float value -> value
    com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute createShininess(float) -> createShininess
    com.badlogic.gdx.graphics.g3d.attributes.FloatAttribute createAlphaTest(float) -> createAlphaTest
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.attributes.IntAttribute -> com.badlogic.gdx.graphics.g3d.attributes.IntAttribute:
    java.lang.String CullFaceAlias -> CullFaceAlias
    long CullFace -> CullFace
    int value -> value
    com.badlogic.gdx.graphics.g3d.attributes.IntAttribute createCullFace(int) -> createCullFace
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute -> com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute:
    java.lang.String DiffuseAlias -> DiffuseAlias
    long Diffuse -> Diffuse
    java.lang.String SpecularAlias -> SpecularAlias
    long Specular -> Specular
    java.lang.String BumpAlias -> BumpAlias
    long Bump -> Bump
    java.lang.String NormalAlias -> NormalAlias
    long Normal -> Normal
    long Mask -> Mask
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor textureDescription -> textureDescription
    boolean is(long) -> is
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createDiffuse(com.badlogic.gdx.graphics.Texture) -> createDiffuse
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createSpecular(com.badlogic.gdx.graphics.Texture) -> createSpecular
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createNormal(com.badlogic.gdx.graphics.Texture) -> createNormal
    com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute createBump(com.badlogic.gdx.graphics.Texture) -> createBump
    com.badlogic.gdx.graphics.g3d.Attribute copy() -> copy
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy:
    int GROUP_OPAQUE -> GROUP_OPAQUE
    int GROUP_BLEND -> GROUP_BLEND
    com.badlogic.gdx.utils.Pool arrayPool -> arrayPool
    com.badlogic.gdx.utils.Array usedArrays -> usedArrays
    com.badlogic.gdx.utils.ObjectMap materialGroups -> materialGroups
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    java.util.Comparator cameraSorter -> cameraSorter
    void setCamera(com.badlogic.gdx.graphics.Camera) -> setCamera
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
    void createDefaultShader() -> createDefaultShader
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1 -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$1:
    com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy this$0 -> this$0
    com.badlogic.gdx.utils.Array newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2 -> com.badlogic.gdx.graphics.g3d.decals.CameraGroupStrategy$2:
    com.badlogic.gdx.graphics.Camera val$camera -> val$camera
    int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.decals.Decal -> com.badlogic.gdx.graphics.g3d.decals.Decal:
    int VERTEX_SIZE -> VERTEX_SIZE
    int SIZE -> SIZE
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Vector3 tmp2 -> tmp2
    int value -> value
    float[] vertices -> vertices
    com.badlogic.gdx.math.Vector3 position -> position
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    com.badlogic.gdx.math.Vector2 scale -> scale
    com.badlogic.gdx.math.Vector2 transformationOffset -> transformationOffset
    com.badlogic.gdx.math.Vector2 dimensions -> dimensions
    com.badlogic.gdx.graphics.g3d.decals.DecalMaterial material -> material
    boolean updated -> updated
    com.badlogic.gdx.math.Vector3 dir -> dir
    int X1 -> X1
    int Y1 -> Y1
    int Z1 -> Z1
    int C1 -> C1
    int U1 -> U1
    int V1 -> V1
    int X2 -> X2
    int Y2 -> Y2
    int Z2 -> Z2
    int C2 -> C2
    int U2 -> U2
    int V2 -> V2
    int X3 -> X3
    int Y3 -> Y3
    int Z3 -> Z3
    int C3 -> C3
    int U3 -> U3
    int V3 -> V3
    int X4 -> X4
    int Y4 -> Y4
    int Z4 -> Z4
    int C4 -> C4
    int U4 -> U4
    int V4 -> V4
    com.badlogic.gdx.math.Quaternion rotator -> rotator
    com.badlogic.gdx.math.Vector3 X_AXIS -> X_AXIS
    com.badlogic.gdx.math.Vector3 Y_AXIS -> Y_AXIS
    com.badlogic.gdx.math.Vector3 Z_AXIS -> Z_AXIS
    void setColor(float,float,float,float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float) -> setColor
    void setRotationX(float) -> setRotationX
    void setRotationY(float) -> setRotationY
    void setRotationZ(float) -> setRotationZ
    void rotateX(float) -> rotateX
    void rotateY(float) -> rotateY
    void rotateZ(float) -> rotateZ
    void setRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setRotation
    com.badlogic.gdx.math.Quaternion getRotation() -> getRotation
    void translateX(float) -> translateX
    void setX(float) -> setX
    float getX() -> getX
    void translateY(float) -> translateY
    void setY(float) -> setY
    float getY() -> getY
    void translateZ(float) -> translateZ
    void setZ(float) -> setZ
    float getZ() -> getZ
    void translate(float,float,float) -> translate
    void setPosition(float,float,float) -> setPosition
    com.badlogic.gdx.math.Vector3 getPosition() -> getPosition
    void setScaleX(float) -> setScaleX
    float getScaleX() -> getScaleX
    void setScaleY(float) -> setScaleY
    float getScaleY() -> getScaleY
    void setScale(float,float) -> setScale
    void setScale(float) -> setScale
    void setWidth(float) -> setWidth
    float getWidth() -> getWidth
    void setHeight(float) -> setHeight
    float getHeight() -> getHeight
    void setDimensions(float,float) -> setDimensions
    float[] getVertices() -> getVertices
    void update() -> update
    void transformVertices() -> transformVertices
    void resetVertices() -> resetVertices
    void updateUVs() -> updateUVs
    void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setTextureRegion
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    void setBlending(int,int) -> setBlending
    com.badlogic.gdx.graphics.g3d.decals.DecalMaterial getMaterial() -> getMaterial
    void lookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> lookAt
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(com.badlogic.gdx.graphics.g2d.TextureRegion,boolean) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean) -> newDecal
    com.badlogic.gdx.graphics.g3d.decals.Decal newDecal(float,float,com.badlogic.gdx.graphics.g2d.TextureRegion,int,int) -> newDecal
com.badlogic.gdx.graphics.g3d.decals.DecalBatch -> com.badlogic.gdx.graphics.g3d.decals.DecalBatch:
    int DEFAULT_SIZE -> DEFAULT_SIZE
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    com.badlogic.gdx.utils.SortedIntList groupList -> groupList
    com.badlogic.gdx.graphics.g3d.decals.GroupStrategy groupStrategy -> groupStrategy
    com.badlogic.gdx.utils.Pool groupPool -> groupPool
    com.badlogic.gdx.utils.Array usedGroups -> usedGroups
    void setGroupStrategy(com.badlogic.gdx.graphics.g3d.decals.GroupStrategy) -> setGroupStrategy
    void initialize(int) -> initialize
    int getSize() -> getSize
    void add(com.badlogic.gdx.graphics.g3d.decals.Decal) -> add
    void flush() -> flush
    void render() -> render
    void render(com.badlogic.gdx.graphics.glutils.ShaderProgram,com.badlogic.gdx.utils.Array) -> render
    void flush(com.badlogic.gdx.graphics.glutils.ShaderProgram,int) -> flush
    void clear() -> clear
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1 -> com.badlogic.gdx.graphics.g3d.decals.DecalBatch$1:
    com.badlogic.gdx.graphics.g3d.decals.DecalBatch this$0 -> this$0
    com.badlogic.gdx.utils.Array newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.decals.DecalMaterial -> com.badlogic.gdx.graphics.g3d.decals.DecalMaterial:
    int NO_BLEND -> NO_BLEND
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> textureRegion
    int srcBlendFactor -> srcBlendFactor
    int dstBlendFactor -> dstBlendFactor
    void set() -> set
    boolean isOpaque() -> isOpaque
    int getSrcBlendFactor() -> getSrcBlendFactor
    int getDstBlendFactor() -> getDstBlendFactor
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.DefaultGroupStrategy:
    int GROUP_OPAQUE -> GROUP_OPAQUE
    int GROUP_BLEND -> GROUP_BLEND
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
com.badlogic.gdx.graphics.g3d.decals.GroupPlug -> com.badlogic.gdx.graphics.g3d.decals.GroupPlug:
    void beforeGroup(com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup() -> afterGroup
com.badlogic.gdx.graphics.g3d.decals.GroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.GroupStrategy:
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.PluggableGroupStrategy:
    com.badlogic.gdx.utils.IntMap plugs -> plugs
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void plugIn(com.badlogic.gdx.graphics.g3d.decals.GroupPlug,int) -> plugIn
    com.badlogic.gdx.graphics.g3d.decals.GroupPlug unPlug(int) -> unPlug
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy -> com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy:
    com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator comparator -> comparator
    int GROUP_OPAQUE -> GROUP_OPAQUE
    int GROUP_BLEND -> GROUP_BLEND
    int decideGroup(com.badlogic.gdx.graphics.g3d.decals.Decal) -> decideGroup
    void beforeGroup(int,com.badlogic.gdx.utils.Array) -> beforeGroup
    void afterGroup(int) -> afterGroup
    void beforeGroups() -> beforeGroups
    void afterGroups() -> afterGroups
    com.badlogic.gdx.graphics.glutils.ShaderProgram getGroupShader(int) -> getGroupShader
com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator -> com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy$Comparator:
    com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy this$0 -> this$0
    int compare(com.badlogic.gdx.graphics.g3d.decals.Decal,com.badlogic.gdx.graphics.g3d.decals.Decal) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap -> com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap:
    float[] data -> data
    float clamp(float) -> clamp
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(float[]) -> set
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap) -> set
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(com.badlogic.gdx.graphics.Color) -> set
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap set(float,float,float) -> set
    com.badlogic.gdx.graphics.Color getColor(com.badlogic.gdx.graphics.Color,int) -> getColor
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap clear() -> clear
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap clamp() -> clamp
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(float,float,float) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(float,float,float,float,float,float) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(float,float,float,com.badlogic.gdx.math.Vector3) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,float,float,float) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> add
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap add(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> add
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.g3d.environment.BaseLight -> com.badlogic.gdx.graphics.g3d.environment.BaseLight:
    com.badlogic.gdx.graphics.Color color -> color
com.badlogic.gdx.graphics.g3d.environment.DirectionalLight -> com.badlogic.gdx.graphics.g3d.environment.DirectionalLight:
    com.badlogic.gdx.math.Vector3 direction -> direction
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(com.badlogic.gdx.graphics.g3d.environment.DirectionalLight) -> set
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(float,float,float,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(com.badlogic.gdx.graphics.Color,float,float,float) -> set
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight set(float,float,float,float,float,float) -> set
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.g3d.environment.DirectionalLight) -> equals
com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight -> com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight:
    com.badlogic.gdx.graphics.glutils.FrameBuffer fbo -> fbo
    com.badlogic.gdx.graphics.Camera cam -> cam
    float halfDepth -> halfDepth
    float halfHeight -> halfHeight
    com.badlogic.gdx.math.Vector3 tmpV -> tmpV
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor textureDesc -> textureDesc
    void update(com.badlogic.gdx.graphics.Camera) -> update
    void update(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> update
    void begin(com.badlogic.gdx.graphics.Camera) -> begin
    void begin(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> begin
    void begin() -> begin
    void end() -> end
    com.badlogic.gdx.graphics.glutils.FrameBuffer getFrameBuffer() -> getFrameBuffer
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    com.badlogic.gdx.math.Matrix4 getProjViewTrans() -> getProjViewTrans
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor getDepthMap() -> getDepthMap
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.environment.PointLight -> com.badlogic.gdx.graphics.g3d.environment.PointLight:
    com.badlogic.gdx.math.Vector3 position -> position
    float intensity -> intensity
    com.badlogic.gdx.graphics.g3d.environment.PointLight set(com.badlogic.gdx.graphics.g3d.environment.PointLight) -> set
    com.badlogic.gdx.graphics.g3d.environment.PointLight set(com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,float) -> set
    com.badlogic.gdx.graphics.g3d.environment.PointLight set(float,float,float,com.badlogic.gdx.math.Vector3,float) -> set
    com.badlogic.gdx.graphics.g3d.environment.PointLight set(com.badlogic.gdx.graphics.Color,float,float,float,float) -> set
    com.badlogic.gdx.graphics.g3d.environment.PointLight set(float,float,float,float,float,float,float) -> set
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.g3d.environment.PointLight) -> equals
com.badlogic.gdx.graphics.g3d.environment.ShadowMap -> com.badlogic.gdx.graphics.g3d.environment.ShadowMap:
    com.badlogic.gdx.math.Matrix4 getProjViewTrans() -> getProjViewTrans
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor getDepthMap() -> getDepthMap
com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics -> com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics:
    float[] coeff -> coeff
    float[] data -> data
    float clamp(float) -> clamp
    com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(float[]) -> set
    com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap) -> set
    com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(com.badlogic.gdx.graphics.Color) -> set
    com.badlogic.gdx.graphics.g3d.environment.SphericalHarmonics set(float,float,float) -> set
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader -> com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader:
    short VERSION_HI -> VERSION_HI
    short VERSION_LO -> VERSION_LO
    com.badlogic.gdx.utils.BaseJsonReader reader -> reader
    com.badlogic.gdx.math.Quaternion tempQ -> tempQ
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadModelData
    com.badlogic.gdx.graphics.g3d.model.data.ModelData parseModel(com.badlogic.gdx.files.FileHandle) -> parseModel
    void parseMeshes(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue) -> parseMeshes
    int parseType(java.lang.String) -> parseType
    com.badlogic.gdx.graphics.VertexAttribute[] parseAttributes(com.badlogic.gdx.utils.JsonValue) -> parseAttributes
    void parseMaterials(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue,java.lang.String) -> parseMaterials
    int parseTextureUsage(java.lang.String) -> parseTextureUsage
    com.badlogic.gdx.graphics.Color parseColor(com.badlogic.gdx.utils.JsonValue) -> parseColor
    com.badlogic.gdx.math.Vector2 readVector2(com.badlogic.gdx.utils.JsonValue,float,float) -> readVector2
    com.badlogic.gdx.utils.Array parseNodes(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue) -> parseNodes
    com.badlogic.gdx.graphics.g3d.model.data.ModelNode parseNodesRecursively(com.badlogic.gdx.utils.JsonValue) -> parseNodesRecursively
    void parseAnimations(com.badlogic.gdx.graphics.g3d.model.data.ModelData,com.badlogic.gdx.utils.JsonValue) -> parseAnimations
com.badlogic.gdx.graphics.g3d.loader.MtlLoader -> com.badlogic.gdx.graphics.g3d.loader.MtlLoader:
    com.badlogic.gdx.utils.Array materials -> materials
    void load(com.badlogic.gdx.files.FileHandle) -> load
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial getMaterial(java.lang.String) -> getMaterial
com.badlogic.gdx.graphics.g3d.loader.ObjLoader -> com.badlogic.gdx.graphics.g3d.loader.ObjLoader:
    boolean logWarning -> logWarning
    com.badlogic.gdx.utils.FloatArray verts -> verts
    com.badlogic.gdx.utils.FloatArray norms -> norms
    com.badlogic.gdx.utils.FloatArray uvs -> uvs
    com.badlogic.gdx.utils.Array groups -> groups
    com.badlogic.gdx.graphics.g3d.Model loadObj(com.badlogic.gdx.files.FileHandle) -> loadObj
    com.badlogic.gdx.graphics.g3d.Model loadObj(com.badlogic.gdx.files.FileHandle,boolean) -> loadObj
    com.badlogic.gdx.graphics.g3d.Model loadModel(com.badlogic.gdx.files.FileHandle,boolean) -> loadModel
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters) -> loadModelData
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,boolean) -> loadModelData
    com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group setActiveGroup(java.lang.String) -> setActiveGroup
    int getIndex(java.lang.String,int) -> getIndex
    com.badlogic.gdx.graphics.g3d.model.data.ModelData loadModelData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ModelLoader$ModelParameters) -> loadModelData
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group -> com.badlogic.gdx.graphics.g3d.loader.ObjLoader$Group:
    java.lang.String name -> name
    java.lang.String materialName -> materialName
    com.badlogic.gdx.utils.Array faces -> faces
    int numFaces -> numFaces
    boolean hasNorms -> hasNorms
    boolean hasUVs -> hasUVs
    com.badlogic.gdx.graphics.g3d.Material mat -> mat
    com.badlogic.gdx.graphics.g3d.loader.ObjLoader this$0 -> this$0
com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters -> com.badlogic.gdx.graphics.g3d.loader.ObjLoader$ObjLoaderParameters:
    boolean flipV -> flipV
com.badlogic.gdx.graphics.g3d.model.Animation -> com.badlogic.gdx.graphics.g3d.model.Animation:
    java.lang.String id -> id
    float duration -> duration
    com.badlogic.gdx.utils.Array nodeAnimations -> nodeAnimations
com.badlogic.gdx.graphics.g3d.model.MeshPart -> com.badlogic.gdx.graphics.g3d.model.MeshPart:
    java.lang.String id -> id
    int primitiveType -> primitiveType
    int indexOffset -> indexOffset
    int numVertices -> numVertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    boolean equals(com.badlogic.gdx.graphics.g3d.model.MeshPart) -> equals
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g3d.model.Node -> com.badlogic.gdx.graphics.g3d.model.Node:
    java.lang.String id -> id
    com.badlogic.gdx.graphics.g3d.model.Node parent -> parent
    com.badlogic.gdx.utils.Array children -> children
    boolean isAnimated -> isAnimated
    com.badlogic.gdx.math.Vector3 translation -> translation
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    com.badlogic.gdx.math.Vector3 scale -> scale
    com.badlogic.gdx.math.Matrix4 localTransform -> localTransform
    com.badlogic.gdx.math.Matrix4 globalTransform -> globalTransform
    com.badlogic.gdx.utils.Array parts -> parts
    com.badlogic.gdx.math.Matrix4 calculateLocalTransform() -> calculateLocalTransform
    com.badlogic.gdx.math.Matrix4 calculateWorldTransform() -> calculateWorldTransform
    void calculateTransforms(boolean) -> calculateTransforms
    void calculateBoneTransforms(boolean) -> calculateBoneTransforms
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox calculateBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,boolean) -> calculateBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox) -> extendBoundingBox
    com.badlogic.gdx.math.collision.BoundingBox extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,boolean) -> extendBoundingBox
    com.badlogic.gdx.graphics.g3d.model.Node getChild(java.lang.String,boolean,boolean) -> getChild
    com.badlogic.gdx.graphics.g3d.model.Node getNode(com.badlogic.gdx.utils.Array,java.lang.String,boolean,boolean) -> getNode
com.badlogic.gdx.graphics.g3d.model.NodeAnimation -> com.badlogic.gdx.graphics.g3d.model.NodeAnimation:
    com.badlogic.gdx.graphics.g3d.model.Node node -> node
    com.badlogic.gdx.utils.Array keyframes -> keyframes
com.badlogic.gdx.graphics.g3d.model.NodeKeyframe -> com.badlogic.gdx.graphics.g3d.model.NodeKeyframe:
    float keytime -> keytime
    com.badlogic.gdx.math.Vector3 translation -> translation
    com.badlogic.gdx.math.Vector3 scale -> scale
    com.badlogic.gdx.math.Quaternion rotation -> rotation
com.badlogic.gdx.graphics.g3d.model.NodePart -> com.badlogic.gdx.graphics.g3d.model.NodePart:
    com.badlogic.gdx.graphics.g3d.model.MeshPart meshPart -> meshPart
    com.badlogic.gdx.graphics.g3d.Material material -> material
    com.badlogic.gdx.utils.ArrayMap invBoneBindTransforms -> invBoneBindTransforms
    com.badlogic.gdx.math.Matrix4[] bones -> bones
    boolean enabled -> enabled
    com.badlogic.gdx.graphics.g3d.Renderable setRenderable(com.badlogic.gdx.graphics.g3d.Renderable) -> setRenderable
com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation -> com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation:
    java.lang.String id -> id
    com.badlogic.gdx.utils.Array nodeAnimations -> nodeAnimations
com.badlogic.gdx.graphics.g3d.model.data.ModelData -> com.badlogic.gdx.graphics.g3d.model.data.ModelData:
    java.lang.String id -> id
    short[] version -> version
    com.badlogic.gdx.utils.Array meshes -> meshes
    com.badlogic.gdx.utils.Array materials -> materials
    com.badlogic.gdx.utils.Array nodes -> nodes
    com.badlogic.gdx.utils.Array animations -> animations
    void addMesh(com.badlogic.gdx.graphics.g3d.model.data.ModelMesh) -> addMesh
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial -> com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial:
    java.lang.String id -> id
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType type -> type
    com.badlogic.gdx.graphics.Color ambient -> ambient
    com.badlogic.gdx.graphics.Color diffuse -> diffuse
    com.badlogic.gdx.graphics.Color specular -> specular
    com.badlogic.gdx.graphics.Color emissive -> emissive
    com.badlogic.gdx.graphics.Color reflection -> reflection
    float shininess -> shininess
    float opacity -> opacity
    com.badlogic.gdx.utils.Array textures -> textures
com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType -> com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType:
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType Lambert -> Lambert
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType Phong -> Phong
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType[] values() -> values
    com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial$MaterialType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.graphics.g3d.model.data.ModelMesh -> com.badlogic.gdx.graphics.g3d.model.data.ModelMesh:
    java.lang.String id -> id
    com.badlogic.gdx.graphics.VertexAttribute[] attributes -> attributes
    float[] vertices -> vertices
    com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart[] parts -> parts
com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart -> com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart:
    java.lang.String id -> id
    short[] indices -> indices
    int primitiveType -> primitiveType
com.badlogic.gdx.graphics.g3d.model.data.ModelNode -> com.badlogic.gdx.graphics.g3d.model.data.ModelNode:
    java.lang.String id -> id
    int boneId -> boneId
    com.badlogic.gdx.math.Vector3 translation -> translation
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    com.badlogic.gdx.math.Vector3 scale -> scale
    java.lang.String meshId -> meshId
    com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart[] parts -> parts
    com.badlogic.gdx.graphics.g3d.model.data.ModelNode[] children -> children
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation -> com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation:
    java.lang.String nodeId -> nodeId
    com.badlogic.gdx.utils.Array keyframes -> keyframes
com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe -> com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe:
    float keytime -> keytime
    com.badlogic.gdx.math.Vector3 translation -> translation
    com.badlogic.gdx.math.Vector3 scale -> scale
    com.badlogic.gdx.math.Quaternion rotation -> rotation
com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart -> com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart:
    java.lang.String materialId -> materialId
    java.lang.String meshPartId -> meshPartId
    com.badlogic.gdx.utils.ArrayMap bones -> bones
    int[][] uvMapping -> uvMapping
com.badlogic.gdx.graphics.g3d.model.data.ModelTexture -> com.badlogic.gdx.graphics.g3d.model.data.ModelTexture:
    int USAGE_UNKNOWN -> USAGE_UNKNOWN
    int USAGE_NONE -> USAGE_NONE
    int USAGE_DIFFUSE -> USAGE_DIFFUSE
    int USAGE_EMISSIVE -> USAGE_EMISSIVE
    int USAGE_AMBIENT -> USAGE_AMBIENT
    int USAGE_SPECULAR -> USAGE_SPECULAR
    int USAGE_SHININESS -> USAGE_SHININESS
    int USAGE_NORMAL -> USAGE_NORMAL
    int USAGE_BUMP -> USAGE_BUMP
    int USAGE_TRANSPARENCY -> USAGE_TRANSPARENCY
    int USAGE_REFLECTION -> USAGE_REFLECTION
    java.lang.String id -> id
    java.lang.String fileName -> fileName
    com.badlogic.gdx.math.Vector2 uvTranslation -> uvTranslation
    com.badlogic.gdx.math.Vector2 uvScaling -> uvScaling
    int usage -> usage
com.badlogic.gdx.graphics.g3d.shaders.BaseShader -> com.badlogic.gdx.graphics.g3d.shaders.BaseShader:
    com.badlogic.gdx.utils.Array uniforms -> uniforms
    com.badlogic.gdx.utils.Array validators -> validators
    com.badlogic.gdx.utils.Array setters -> setters
    int[] locations -> locations
    com.badlogic.gdx.utils.IntArray globalUniforms -> globalUniforms
    com.badlogic.gdx.utils.IntArray localUniforms -> localUniforms
    com.badlogic.gdx.utils.IntIntMap attributes -> attributes
    com.badlogic.gdx.graphics.glutils.ShaderProgram program -> program
    com.badlogic.gdx.graphics.g3d.utils.RenderContext context -> context
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.graphics.Mesh currentMesh -> currentMesh
    com.badlogic.gdx.utils.IntArray tempArray -> tempArray
    com.badlogic.gdx.graphics.g3d.Attributes combinedAttributes -> combinedAttributes
    int register(java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter) -> register
    int register(java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator) -> register
    int register(java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter) -> register
    int register(java.lang.String) -> register
    int register(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform,com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter) -> register
    int register(com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform) -> register
    int getUniformID(java.lang.String) -> getUniformID
    java.lang.String getUniformAlias(int) -> getUniformAlias
    void init(com.badlogic.gdx.graphics.glutils.ShaderProgram,com.badlogic.gdx.graphics.g3d.Renderable) -> init
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> begin
    int[] getAttributeLocations(com.badlogic.gdx.graphics.VertexAttributes) -> getAttributeLocations
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> render
    void render(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> render
    void end() -> end
    void dispose() -> dispose
    boolean has(int) -> has
    int loc(int) -> loc
    boolean set(int,com.badlogic.gdx.math.Matrix4) -> set
    boolean set(int,com.badlogic.gdx.math.Matrix3) -> set
    boolean set(int,com.badlogic.gdx.math.Vector3) -> set
    boolean set(int,com.badlogic.gdx.math.Vector2) -> set
    boolean set(int,com.badlogic.gdx.graphics.Color) -> set
    boolean set(int,float) -> set
    boolean set(int,float,float) -> set
    boolean set(int,float,float,float) -> set
    boolean set(int,float,float,float,float) -> set
    boolean set(int,int) -> set
    boolean set(int,int,int) -> set
    boolean set(int,int,int,int) -> set
    boolean set(int,int,int,int,int) -> set
    boolean set(int,com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> set
    boolean set(int,com.badlogic.gdx.graphics.GLTexture) -> set
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter -> com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform -> com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform:
    java.lang.String alias -> alias
    long materialMask -> materialMask
    long environmentMask -> environmentMask
    long overallMask -> overallMask
    boolean validate(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable) -> validate
com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator -> com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Validator:
    boolean validate(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable) -> validate
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader:
    java.lang.String defaultVertexShader -> defaultVertexShader
    java.lang.String defaultFragmentShader -> defaultFragmentShader
    long implementedFlags -> implementedFlags
    int defaultCullFace -> defaultCullFace
    int defaultDepthFunc -> defaultDepthFunc
    int u_projTrans -> u_projTrans
    int u_viewTrans -> u_viewTrans
    int u_projViewTrans -> u_projViewTrans
    int u_cameraPosition -> u_cameraPosition
    int u_cameraDirection -> u_cameraDirection
    int u_cameraUp -> u_cameraUp
    int u_time -> u_time
    int u_worldTrans -> u_worldTrans
    int u_viewWorldTrans -> u_viewWorldTrans
    int u_projViewWorldTrans -> u_projViewWorldTrans
    int u_normalMatrix -> u_normalMatrix
    int u_bones -> u_bones
    int u_shininess -> u_shininess
    int u_opacity -> u_opacity
    int u_diffuseColor -> u_diffuseColor
    int u_diffuseTexture -> u_diffuseTexture
    int u_specularColor -> u_specularColor
    int u_specularTexture -> u_specularTexture
    int u_emissiveColor -> u_emissiveColor
    int u_reflectionColor -> u_reflectionColor
    int u_normalTexture -> u_normalTexture
    int u_alphaTest -> u_alphaTest
    int u_ambientCubemap -> u_ambientCubemap
    int u_environmentCubemap -> u_environmentCubemap
    int u_dirLights0color -> u_dirLights0color
    int u_dirLights0direction -> u_dirLights0direction
    int u_dirLights1color -> u_dirLights1color
    int u_pointLights0color -> u_pointLights0color
    int u_pointLights0position -> u_pointLights0position
    int u_pointLights0intensity -> u_pointLights0intensity
    int u_pointLights1color -> u_pointLights1color
    int u_fogColor -> u_fogColor
    int u_shadowMapProjViewTrans -> u_shadowMapProjViewTrans
    int u_shadowTexture -> u_shadowTexture
    int u_shadowPCFOffset -> u_shadowPCFOffset
    int dirLightsLoc -> dirLightsLoc
    int dirLightsColorOffset -> dirLightsColorOffset
    int dirLightsDirectionOffset -> dirLightsDirectionOffset
    int dirLightsSize -> dirLightsSize
    int pointLightsLoc -> pointLightsLoc
    int pointLightsColorOffset -> pointLightsColorOffset
    int pointLightsPositionOffset -> pointLightsPositionOffset
    int pointLightsSize -> pointLightsSize
    boolean lighting -> lighting
    boolean environmentCubemap -> environmentCubemap
    boolean shadowMap -> shadowMap
    boolean fog -> fog
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap ambientCubemap -> ambientCubemap
    com.badlogic.gdx.graphics.g3d.environment.DirectionalLight[] directionalLights -> directionalLights
    com.badlogic.gdx.graphics.g3d.environment.PointLight[] pointLights -> pointLights
    com.badlogic.gdx.graphics.g3d.Renderable renderable -> renderable
    long materialMask -> materialMask
    long vertexMask -> vertexMask
    com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config config -> config
    long optionalAttributes -> optionalAttributes
    com.badlogic.gdx.math.Matrix3 normalMatrix -> normalMatrix
    com.badlogic.gdx.graphics.Camera camera -> camera
    float time -> time
    boolean lightsSet -> lightsSet
    com.badlogic.gdx.graphics.g3d.Material currentMaterial -> currentMaterial
    com.badlogic.gdx.math.Vector3 tmpV1 -> tmpV1
    java.lang.String getDefaultVertexShader() -> getDefaultVertexShader
    java.lang.String getDefaultFragmentShader() -> getDefaultFragmentShader
    void init() -> init
    boolean and(long,long) -> and
    boolean or(long,long) -> or
    java.lang.String createPrefix(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config) -> createPrefix
    boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable) -> canRender
    int compareTo(com.badlogic.gdx.graphics.g3d.Shader) -> compareTo
    boolean equals(java.lang.Object) -> equals
    boolean equals(com.badlogic.gdx.graphics.g3d.shaders.DefaultShader) -> equals
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> begin
    void render(com.badlogic.gdx.graphics.g3d.Renderable) -> render
    void end() -> end
    void bindMaterial(com.badlogic.gdx.graphics.g3d.Renderable) -> bindMaterial
    void bindLights(com.badlogic.gdx.graphics.g3d.Renderable) -> bindLights
    void dispose() -> dispose
    int getDefaultCullFace() -> getDefaultCullFace
    void setDefaultCullFace(int) -> setDefaultCullFace
    int getDefaultDepthFunc() -> getDefaultDepthFunc
    void setDefaultDepthFunc(int) -> setDefaultDepthFunc
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config:
    java.lang.String vertexShader -> vertexShader
    java.lang.String fragmentShader -> fragmentShader
    int numDirectionalLights -> numDirectionalLights
    int numPointLights -> numPointLights
    int numSpotLights -> numSpotLights
    int numBones -> numBones
    boolean ignoreUnimplemented -> ignoreUnimplemented
    int defaultCullFace -> defaultCullFace
    int defaultDepthFunc -> defaultDepthFunc
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Inputs:
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform projTrans -> projTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform viewTrans -> viewTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform projViewTrans -> projViewTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform cameraPosition -> cameraPosition
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform cameraDirection -> cameraDirection
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform cameraUp -> cameraUp
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform worldTrans -> worldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform viewWorldTrans -> viewWorldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform projViewWorldTrans -> projViewWorldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform normalMatrix -> normalMatrix
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform bones -> bones
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform shininess -> shininess
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform opacity -> opacity
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform diffuseColor -> diffuseColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform diffuseTexture -> diffuseTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform specularColor -> specularColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform specularTexture -> specularTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform emissiveColor -> emissiveColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform reflectionColor -> reflectionColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform normalTexture -> normalTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform alphaTest -> alphaTest
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform ambientCube -> ambientCube
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform dirLights -> dirLights
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform pointLights -> pointLights
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Uniform environmentCubemap -> environmentCubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters:
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter projTrans -> projTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter viewTrans -> viewTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter projViewTrans -> projViewTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraPosition -> cameraPosition
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraDirection -> cameraDirection
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter cameraUp -> cameraUp
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter worldTrans -> worldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter viewWorldTrans -> viewWorldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter projViewWorldTrans -> projViewWorldTrans
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter normalMatrix -> normalMatrix
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter shininess -> shininess
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter diffuseColor -> diffuseColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter diffuseTexture -> diffuseTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter specularColor -> specularColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter specularTexture -> specularTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter emissiveColor -> emissiveColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter reflectionColor -> reflectionColor
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter normalTexture -> normalTexture
    com.badlogic.gdx.graphics.g3d.shaders.BaseShader$Setter environmentCubemap -> environmentCubemap
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$1 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$1:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$10 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$10:
    com.badlogic.gdx.math.Matrix3 tmpM -> tmpM
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$11 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$11:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$12 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$12:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$13 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$13:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$14 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$14:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$15 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$15:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$16 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$16:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$17 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$17:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$18 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$18:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$19 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$19:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$2 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$2:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$3 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$3:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$4 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$4:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$5 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$5:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$6 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$6:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$7 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$7:
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$8 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$8:
    com.badlogic.gdx.math.Matrix4 temp -> temp
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$9 -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$9:
    com.badlogic.gdx.math.Matrix4 temp -> temp
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$ACubemap:
    float[] ones -> ones
    com.badlogic.gdx.graphics.g3d.environment.AmbientCubemap cacheAmbientCubemap -> cacheAmbientCubemap
    com.badlogic.gdx.math.Vector3 tmpV1 -> tmpV1
    int dirLightsOffset -> dirLightsOffset
    int pointLightsOffset -> pointLightsOffset
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones -> com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Setters$Bones:
    com.badlogic.gdx.math.Matrix4 idtMatrix -> idtMatrix
    float[] bones -> bones
    boolean isGlobal(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int) -> isGlobal
    void set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) -> set
com.badlogic.gdx.graphics.g3d.shaders.DepthShader -> com.badlogic.gdx.graphics.g3d.shaders.DepthShader:
    java.lang.String defaultVertexShader -> defaultVertexShader
    java.lang.String defaultFragmentShader -> defaultFragmentShader
    int numBones -> numBones
    int weights -> weights
    java.lang.String getDefaultVertexShader() -> getDefaultVertexShader
    java.lang.String getDefaultFragmentShader() -> getDefaultFragmentShader
    java.lang.String createPrefix(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config) -> createPrefix
    void begin(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.graphics.g3d.utils.RenderContext) -> begin
    void end() -> end
    boolean canRender(com.badlogic.gdx.graphics.g3d.Renderable) -> canRender
com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config -> com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config:
    boolean depthBufferOnly -> depthBufferOnly
com.badlogic.gdx.graphics.g3d.utils.AnimationController -> com.badlogic.gdx.graphics.g3d.utils.AnimationController:
    com.badlogic.gdx.utils.Pool animationPool -> animationPool
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc current -> current
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queued -> queued
    float queuedTransitionTime -> queuedTransitionTime
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc previous -> previous
    float transitionCurrentTime -> transitionCurrentTime
    float transitionTargetTime -> transitionTargetTime
    boolean inAction -> inAction
    boolean paused -> paused
    boolean allowSameAnimation -> allowSameAnimation
    boolean justChangedAnimation -> justChangedAnimation
    boolean updating -> updating
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc obtain(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> obtain
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc obtain(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> obtain
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc obtain(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc) -> obtain
    void update(float) -> update
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,int) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,int,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc setAnimation(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc) -> setAnimation
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,int,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc animate(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc,float) -> animate
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> queue
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> queue
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> queue
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc queue(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc,float) -> queue
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> action
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> action
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener,float) -> action
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc action(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc,float) -> action
com.badlogic.gdx.graphics.g3d.utils.AnimationController$1 -> com.badlogic.gdx.graphics.g3d.utils.AnimationController$1:
    com.badlogic.gdx.graphics.g3d.utils.AnimationController this$0 -> this$0
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc -> com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc:
    com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener listener -> listener
    com.badlogic.gdx.graphics.g3d.model.Animation animation -> animation
    float speed -> speed
    float time -> time
    float offset -> offset
    float duration -> duration
    int loopCount -> loopCount
    float update(float) -> update
com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener -> com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationListener:
    void onEnd(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc) -> onEnd
    void onLoop(com.badlogic.gdx.graphics.g3d.utils.AnimationController$AnimationDesc) -> onLoop
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController -> com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController:
    com.badlogic.gdx.utils.Pool transformPool -> transformPool
    com.badlogic.gdx.utils.ObjectMap transforms -> transforms
    boolean applying -> applying
    com.badlogic.gdx.graphics.g3d.ModelInstance target -> target
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform tmpT -> tmpT
    void begin() -> begin
    void apply(com.badlogic.gdx.graphics.g3d.model.Animation,float,float) -> apply
    void end() -> end
    void applyAnimation(com.badlogic.gdx.graphics.g3d.model.Animation,float) -> applyAnimation
    void applyAnimations(com.badlogic.gdx.graphics.g3d.model.Animation,float,com.badlogic.gdx.graphics.g3d.model.Animation,float,float) -> applyAnimations
    void applyAnimation(com.badlogic.gdx.utils.ObjectMap,com.badlogic.gdx.utils.Pool,float,com.badlogic.gdx.graphics.g3d.model.Animation,float) -> applyAnimation
    void removeAnimation(com.badlogic.gdx.graphics.g3d.model.Animation) -> removeAnimation
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1 -> com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$1:
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController this$0 -> this$0
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform -> com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform:
    com.badlogic.gdx.math.Vector3 translation -> translation
    com.badlogic.gdx.math.Quaternion rotation -> rotation
    com.badlogic.gdx.math.Vector3 scale -> scale
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform idt() -> idt
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform set(com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform) -> set
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform lerp(com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform,float) -> lerp
    com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController$Transform lerp(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3,float) -> lerp
    com.badlogic.gdx.math.Matrix4 toMatrix4(com.badlogic.gdx.math.Matrix4) -> toMatrix4
    void reset() -> reset
com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider -> com.badlogic.gdx.graphics.g3d.utils.BaseShaderProvider:
    com.badlogic.gdx.utils.Array shaders -> shaders
    com.badlogic.gdx.graphics.g3d.Shader getShader(com.badlogic.gdx.graphics.g3d.Renderable) -> getShader
    com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable) -> createShader
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.utils.CameraInputController -> com.badlogic.gdx.graphics.g3d.utils.CameraInputController:
    int rotateButton -> rotateButton
    float rotateAngle -> rotateAngle
    int translateButton -> translateButton
    float translateUnits -> translateUnits
    int forwardButton -> forwardButton
    int activateKey -> activateKey
    boolean activatePressed -> activatePressed
    boolean alwaysScroll -> alwaysScroll
    float scrollFactor -> scrollFactor
    float pinchZoomFactor -> pinchZoomFactor
    boolean autoUpdate -> autoUpdate
    com.badlogic.gdx.math.Vector3 target -> target
    boolean translateTarget -> translateTarget
    boolean forwardTarget -> forwardTarget
    boolean scrollTarget -> scrollTarget
    int forwardKey -> forwardKey
    boolean forwardPressed -> forwardPressed
    int backwardKey -> backwardKey
    boolean backwardPressed -> backwardPressed
    int rotateRightKey -> rotateRightKey
    boolean rotateRightPressed -> rotateRightPressed
    int rotateLeftKey -> rotateLeftKey
    boolean rotateLeftPressed -> rotateLeftPressed
    com.badlogic.gdx.graphics.Camera camera -> camera
    int button -> button
    float startX -> startX
    float startY -> startY
    com.badlogic.gdx.math.Vector3 tmpV1 -> tmpV1
    com.badlogic.gdx.math.Vector3 tmpV2 -> tmpV2
    com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener gestureListener -> gestureListener
    int touched -> touched
    boolean multiTouch -> multiTouch
    void update() -> update
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean process(float,float,int) -> process
    boolean touchDragged(int,int,int) -> touchDragged
    boolean scrolled(int) -> scrolled
    boolean zoom(float) -> zoom
    boolean pinchZoom(float) -> pinchZoom
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener -> com.badlogic.gdx.graphics.g3d.utils.CameraInputController$CameraGestureListener:
    com.badlogic.gdx.graphics.g3d.utils.CameraInputController controller -> controller
    float previousZoom -> previousZoom
    boolean touchDown(float,float,int,int) -> touchDown
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter -> com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter:
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.math.Vector3 tmpV1 -> tmpV1
    com.badlogic.gdx.math.Vector3 tmpV2 -> tmpV2
    void sort(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.utils.Array) -> sort
    int compare(com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Renderable) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider -> com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider:
    com.badlogic.gdx.graphics.g3d.shaders.DefaultShader$Config config -> config
    com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable) -> createShader
com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder -> com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder:
    int ROUNDROBIN -> ROUNDROBIN
    int WEIGHTED -> WEIGHTED
    int MAX_GLES_UNITS -> MAX_GLES_UNITS
    int offset -> offset
    int count -> count
    int reuseWeight -> reuseWeight
    com.badlogic.gdx.graphics.GLTexture[] textures -> textures
    int[] weights -> weights
    int method -> method
    boolean reused -> reused
    int reuseCount -> reuseCount
    int bindCount -> bindCount
    com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor tempDesc -> tempDesc
    int currentTexture -> currentTexture
    int getMaxTextureUnits() -> getMaxTextureUnits
    void begin() -> begin
    void end() -> end
    int bind(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> bind
    int bind(com.badlogic.gdx.graphics.GLTexture) -> bind
    int bindTexture(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor,boolean) -> bindTexture
    int bindTextureRoundRobin(com.badlogic.gdx.graphics.GLTexture) -> bindTextureRoundRobin
    int bindTextureWeighted(com.badlogic.gdx.graphics.GLTexture) -> bindTextureWeighted
    int getBindCount() -> getBindCount
    int getReuseCount() -> getReuseCount
    void resetCounts() -> resetCounts
com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider -> com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider:
    com.badlogic.gdx.graphics.g3d.shaders.DepthShader$Config config -> config
    com.badlogic.gdx.graphics.g3d.Shader createShader(com.badlogic.gdx.graphics.g3d.Renderable) -> createShader
com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController -> com.badlogic.gdx.graphics.g3d.utils.FirstPersonCameraController:
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.utils.IntIntMap keys -> keys
    int STRAFE_LEFT -> STRAFE_LEFT
    int STRAFE_RIGHT -> STRAFE_RIGHT
    int FORWARD -> FORWARD
    int BACKWARD -> BACKWARD
    int UP -> UP
    int DOWN -> DOWN
    float velocity -> velocity
    float degreesPerPixel -> degreesPerPixel
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    void setVelocity(float) -> setVelocity
    void setDegreesPerPixel(float) -> setDegreesPerPixel
    boolean touchDragged(int,int,int) -> touchDragged
    void update() -> update
    void update(float) -> update
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder -> com.badlogic.gdx.graphics.g3d.utils.MeshBuilder:
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp1 -> vertTmp1
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp2 -> vertTmp2
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp3 -> vertTmp3
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp4 -> vertTmp4
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp5 -> vertTmp5
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp6 -> vertTmp6
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp7 -> vertTmp7
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo vertTmp8 -> vertTmp8
    com.badlogic.gdx.math.Matrix4 matTmp1 -> matTmp1
    com.badlogic.gdx.math.Vector3 tempV1 -> tempV1
    com.badlogic.gdx.math.Vector3 tempV2 -> tempV2
    com.badlogic.gdx.math.Vector3 tempV3 -> tempV3
    com.badlogic.gdx.math.Vector3 tempV4 -> tempV4
    com.badlogic.gdx.math.Vector3 tempV5 -> tempV5
    com.badlogic.gdx.math.Vector3 tempV6 -> tempV6
    com.badlogic.gdx.math.Vector3 tempV7 -> tempV7
    com.badlogic.gdx.math.Vector3 tempV8 -> tempV8
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    com.badlogic.gdx.utils.FloatArray vertices -> vertices
    com.badlogic.gdx.utils.ShortArray indices -> indices
    int stride -> stride
    short vindex -> vindex
    int istart -> istart
    int posOffset -> posOffset
    int posSize -> posSize
    int norOffset -> norOffset
    int colOffset -> colOffset
    int colSize -> colSize
    int cpOffset -> cpOffset
    int uvOffset -> uvOffset
    com.badlogic.gdx.graphics.g3d.model.MeshPart part -> part
    com.badlogic.gdx.utils.Array parts -> parts
    com.badlogic.gdx.graphics.Color color -> color
    boolean colorSet -> colorSet
    int primitiveType -> primitiveType
    float uMin -> uMin
    float uMax -> uMax
    float vMin -> vMin
    float vMax -> vMax
    float[] vertex -> vertex
    boolean vertexTransformationEnabled -> vertexTransformationEnabled
    com.badlogic.gdx.math.Matrix4 positionTransform -> positionTransform
    com.badlogic.gdx.math.Matrix4 normalTransform -> normalTransform
    com.badlogic.gdx.math.Vector3 tempVTransformed -> tempVTransformed
    com.badlogic.gdx.utils.Pool vectorPool -> vectorPool
    com.badlogic.gdx.utils.Array vectorArray -> vectorArray
    com.badlogic.gdx.utils.Pool matrices4Pool -> matrices4Pool
    com.badlogic.gdx.utils.Array matrices4Array -> matrices4Array
    short lastIndex -> lastIndex
    com.badlogic.gdx.utils.ShortArray tmpIndices -> tmpIndices
    com.badlogic.gdx.graphics.VertexAttributes createAttributes(long) -> createAttributes
    void begin(long) -> begin
    void begin(com.badlogic.gdx.graphics.VertexAttributes) -> begin
    void begin(long,int) -> begin
    void begin(com.badlogic.gdx.graphics.VertexAttributes,int) -> begin
    void endpart() -> endpart
    com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,int) -> part
    com.badlogic.gdx.graphics.Mesh end() -> end
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    com.badlogic.gdx.graphics.g3d.model.MeshPart getMeshPart() -> getMeshPart
    com.badlogic.gdx.math.Vector3 tmp(float,float,float) -> tmp
    com.badlogic.gdx.math.Vector3 tmp(com.badlogic.gdx.math.Vector3) -> tmp
    com.badlogic.gdx.math.Matrix4 tmp() -> tmp
    com.badlogic.gdx.math.Matrix4 tmp(com.badlogic.gdx.math.Matrix4) -> tmp
    void cleanup() -> cleanup
    void setColor(float,float,float,float) -> setColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setUVRange(float,float,float,float) -> setUVRange
    void setUVRange(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setUVRange
    void ensureVertices(int) -> ensureVertices
    void ensureIndices(int) -> ensureIndices
    void ensureCapacity(int,int) -> ensureCapacity
    void ensureTriangleIndices(int) -> ensureTriangleIndices
    void ensureTriangles(int,int) -> ensureTriangles
    void ensureTriangles(int) -> ensureTriangles
    void ensureRectangleIndices(int) -> ensureRectangleIndices
    void ensureRectangles(int,int) -> ensureRectangles
    void ensureRectangles(int) -> ensureRectangles
    short lastIndex() -> lastIndex
    void addVertex(float[],int) -> addVertex
    short vertex(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2) -> vertex
    short vertex(float[]) -> vertex
    short vertex(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> vertex
    void index(short) -> index
    void index(short,short) -> index
    void index(short,short,short) -> index
    void index(short,short,short,short) -> index
    void index(short,short,short,short,short,short) -> index
    void index(short,short,short,short,short,short,short,short) -> index
    void line(short,short) -> line
    void line(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> line
    void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> line
    void line(float,float,float,float,float,float) -> line
    void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color) -> line
    void triangle(short,short,short) -> triangle
    void triangle(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> triangle
    void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> triangle
    void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color) -> triangle
    void rect(short,short,short,short) -> rect
    void rect(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> rect
    void rect(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rect
    void rect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> rect
    void patch(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,int,int) -> patch
    void patch(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int) -> patch
    void patch(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,int) -> patch
    void box(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> box
    void box(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> box
    void box(com.badlogic.gdx.math.Matrix4) -> box
    void box(float,float,float) -> box
    void box(float,float,float,float,float,float) -> box
    void circle(float,int,float,float,float,float,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> circle
    void ellipse(float,float,int,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void cylinder(float,float,float,int) -> cylinder
    void cylinder(float,float,float,int,float,float) -> cylinder
    void cylinder(float,float,float,int,float,float,boolean) -> cylinder
    void cone(float,float,float,int) -> cone
    void cone(float,float,float,int,float,float) -> cone
    void sphere(float,float,float,int,int) -> sphere
    void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int) -> sphere
    void sphere(float,float,float,int,int,float,float,float,float) -> sphere
    void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int,float,float,float,float) -> sphere
    void capsule(float,float,int) -> capsule
    void arrow(float,float,float,float,float,float,float,float,int) -> arrow
    com.badlogic.gdx.math.Matrix4 getVertexTransform(com.badlogic.gdx.math.Matrix4) -> getVertexTransform
    void setVertexTransform(com.badlogic.gdx.math.Matrix4) -> setVertexTransform
    boolean isVertexTransformationEnabled() -> isVertexTransformationEnabled
    void setVertexTransformationEnabled(boolean) -> setVertexTransformationEnabled
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$1 -> com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$1:
    com.badlogic.gdx.math.Vector3 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$2 -> com.badlogic.gdx.graphics.g3d.utils.MeshBuilder$2:
    com.badlogic.gdx.math.Matrix4 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder -> com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder:
    com.badlogic.gdx.graphics.g3d.model.MeshPart getMeshPart() -> getMeshPart
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    void setUVRange(float,float,float,float) -> setUVRange
    void setUVRange(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setUVRange
    short vertex(float[]) -> vertex
    short vertex(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2) -> vertex
    short vertex(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> vertex
    short lastIndex() -> lastIndex
    void index(short) -> index
    void index(short,short) -> index
    void index(short,short,short) -> index
    void index(short,short,short,short) -> index
    void index(short,short,short,short,short,short) -> index
    void index(short,short,short,short,short,short,short,short) -> index
    void line(short,short) -> line
    void line(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> line
    void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> line
    void line(float,float,float,float,float,float) -> line
    void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color) -> line
    void triangle(short,short,short) -> triangle
    void triangle(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> triangle
    void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> triangle
    void triangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color) -> triangle
    void rect(short,short,short,short) -> rect
    void rect(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> rect
    void rect(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rect
    void rect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> rect
    void patch(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,int,int) -> patch
    void patch(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int) -> patch
    void patch(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,int) -> patch
    void box(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> box
    void box(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> box
    void box(com.badlogic.gdx.math.Matrix4) -> box
    void box(float,float,float) -> box
    void box(float,float,float,float,float,float) -> box
    void circle(float,int,float,float,float,float,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> circle
    void circle(float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> circle
    void circle(float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> circle
    void ellipse(float,float,int,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> ellipse
    void ellipse(float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> ellipse
    void ellipse(float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,float,float,float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ellipse
    void cylinder(float,float,float,int) -> cylinder
    void cylinder(float,float,float,int,float,float) -> cylinder
    void cylinder(float,float,float,int,float,float,boolean) -> cylinder
    void cone(float,float,float,int) -> cone
    void cone(float,float,float,int,float,float) -> cone
    void sphere(float,float,float,int,int) -> sphere
    void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int) -> sphere
    void sphere(float,float,float,int,int,float,float,float,float) -> sphere
    void sphere(com.badlogic.gdx.math.Matrix4,float,float,float,int,int,float,float,float,float) -> sphere
    void capsule(float,float,int) -> capsule
    void arrow(float,float,float,float,float,float,float,float,int) -> arrow
    com.badlogic.gdx.math.Matrix4 getVertexTransform(com.badlogic.gdx.math.Matrix4) -> getVertexTransform
    void setVertexTransform(com.badlogic.gdx.math.Matrix4) -> setVertexTransform
    boolean isVertexTransformationEnabled() -> isVertexTransformationEnabled
    void setVertexTransformationEnabled(boolean) -> setVertexTransformationEnabled
com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo -> com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo:
    com.badlogic.gdx.math.Vector3 position -> position
    boolean hasPosition -> hasPosition
    com.badlogic.gdx.math.Vector3 normal -> normal
    boolean hasNormal -> hasNormal
    com.badlogic.gdx.graphics.Color color -> color
    boolean hasColor -> hasColor
    com.badlogic.gdx.math.Vector2 uv -> uv
    boolean hasUV -> hasUV
    void reset() -> reset
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2) -> set
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo set(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo) -> set
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setPos(float,float,float) -> setPos
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setPos(com.badlogic.gdx.math.Vector3) -> setPos
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setNor(float,float,float) -> setNor
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setNor(com.badlogic.gdx.math.Vector3) -> setNor
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setCol(float,float,float,float) -> setCol
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setCol(com.badlogic.gdx.graphics.Color) -> setCol
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setUV(float,float) -> setUV
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo setUV(com.badlogic.gdx.math.Vector2) -> setUV
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo lerp(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder$VertexInfo,float) -> lerp
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder -> com.badlogic.gdx.graphics.g3d.utils.ModelBuilder:
    com.badlogic.gdx.graphics.g3d.Model model -> model
    com.badlogic.gdx.graphics.g3d.model.Node node -> node
    com.badlogic.gdx.utils.Array builders -> builders
    com.badlogic.gdx.math.Matrix4 tmpTransform -> tmpTransform
    com.badlogic.gdx.graphics.g3d.utils.MeshBuilder getBuilder(com.badlogic.gdx.graphics.VertexAttributes) -> getBuilder
    void begin() -> begin
    com.badlogic.gdx.graphics.g3d.Model end() -> end
    void endnode() -> endnode
    com.badlogic.gdx.graphics.g3d.model.Node node(com.badlogic.gdx.graphics.g3d.model.Node) -> node
    com.badlogic.gdx.graphics.g3d.model.Node node() -> node
    com.badlogic.gdx.graphics.g3d.model.Node node(java.lang.String,com.badlogic.gdx.graphics.g3d.Model) -> node
    void manage(com.badlogic.gdx.utils.Disposable) -> manage
    void part(com.badlogic.gdx.graphics.g3d.model.MeshPart,com.badlogic.gdx.graphics.g3d.Material) -> part
    com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,int,int,com.badlogic.gdx.graphics.g3d.Material) -> part
    com.badlogic.gdx.graphics.g3d.model.MeshPart part(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,com.badlogic.gdx.graphics.g3d.Material) -> part
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder part(java.lang.String,int,com.badlogic.gdx.graphics.VertexAttributes,com.badlogic.gdx.graphics.g3d.Material) -> part
    com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder part(java.lang.String,int,long,com.badlogic.gdx.graphics.g3d.Material) -> part
    com.badlogic.gdx.graphics.g3d.Model createBox(float,float,float,com.badlogic.gdx.graphics.g3d.Material,long) -> createBox
    com.badlogic.gdx.graphics.g3d.Model createBox(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createBox
    com.badlogic.gdx.graphics.g3d.Model createRect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,com.badlogic.gdx.graphics.g3d.Material,long) -> createRect
    com.badlogic.gdx.graphics.g3d.Model createRect(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createRect
    com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCylinder
    com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCylinder
    com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float) -> createCylinder
    com.badlogic.gdx.graphics.g3d.Model createCylinder(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float) -> createCylinder
    com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCone
    com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCone
    com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float) -> createCone
    com.badlogic.gdx.graphics.g3d.Model createCone(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float) -> createCone
    com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createSphere
    com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createSphere
    com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float,float,float) -> createSphere
    com.badlogic.gdx.graphics.g3d.Model createSphere(float,float,float,int,int,int,com.badlogic.gdx.graphics.g3d.Material,long,float,float,float,float) -> createSphere
    com.badlogic.gdx.graphics.g3d.Model createCapsule(float,float,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCapsule
    com.badlogic.gdx.graphics.g3d.Model createCapsule(float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createCapsule
    void rebuildReferences(com.badlogic.gdx.graphics.g3d.Model) -> rebuildReferences
    void rebuildReferences(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.graphics.g3d.model.Node) -> rebuildReferences
    com.badlogic.gdx.graphics.g3d.Model createFromMesh(com.badlogic.gdx.graphics.Mesh,int,com.badlogic.gdx.graphics.g3d.Material) -> createFromMesh
    com.badlogic.gdx.graphics.g3d.Model createFromMesh(com.badlogic.gdx.graphics.Mesh,int,int,int,com.badlogic.gdx.graphics.g3d.Material) -> createFromMesh
    com.badlogic.gdx.graphics.g3d.Model createFromMesh(float[],com.badlogic.gdx.graphics.VertexAttribute[],short[],int,com.badlogic.gdx.graphics.g3d.Material) -> createFromMesh
    com.badlogic.gdx.graphics.g3d.Model createXYZCoordinates(float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createXYZCoordinates
    com.badlogic.gdx.graphics.g3d.Model createXYZCoordinates(float,com.badlogic.gdx.graphics.g3d.Material,long) -> createXYZCoordinates
    com.badlogic.gdx.graphics.g3d.Model createArrow(float,float,float,float,float,float,float,float,int,int,com.badlogic.gdx.graphics.g3d.Material,long) -> createArrow
    com.badlogic.gdx.graphics.g3d.Model createArrow(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.g3d.Material,long) -> createArrow
    com.badlogic.gdx.graphics.g3d.Model createLineGrid(int,int,float,float,com.badlogic.gdx.graphics.g3d.Material,long) -> createLineGrid
com.badlogic.gdx.graphics.g3d.utils.RenderContext -> com.badlogic.gdx.graphics.g3d.utils.RenderContext:
    com.badlogic.gdx.graphics.g3d.utils.TextureBinder textureBinder -> textureBinder
    boolean blending -> blending
    int blendSFactor -> blendSFactor
    int blendDFactor -> blendDFactor
    int depthFunc -> depthFunc
    float depthRangeNear -> depthRangeNear
    float depthRangeFar -> depthRangeFar
    boolean depthMask -> depthMask
    int cullFace -> cullFace
    void begin() -> begin
    void end() -> end
    void setDepthMask(boolean) -> setDepthMask
    void setDepthTest(int) -> setDepthTest
    void setDepthTest(int,float,float) -> setDepthTest
    void setBlending(boolean,int,int) -> setBlending
    void setCullFace(int) -> setCullFace
com.badlogic.gdx.graphics.g3d.utils.RenderableSorter -> com.badlogic.gdx.graphics.g3d.utils.RenderableSorter:
    void sort(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.utils.Array) -> sort
com.badlogic.gdx.graphics.g3d.utils.ShaderProvider -> com.badlogic.gdx.graphics.g3d.utils.ShaderProvider:
    com.badlogic.gdx.graphics.g3d.Shader getShader(com.badlogic.gdx.graphics.g3d.Renderable) -> getShader
    void dispose() -> dispose
com.badlogic.gdx.graphics.g3d.utils.TextureBinder -> com.badlogic.gdx.graphics.g3d.utils.TextureBinder:
    void begin() -> begin
    void end() -> end
    int bind(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> bind
    int bind(com.badlogic.gdx.graphics.GLTexture) -> bind
    int getBindCount() -> getBindCount
    int getReuseCount() -> getReuseCount
    void resetCounts() -> resetCounts
com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor -> com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor:
    com.badlogic.gdx.graphics.GLTexture texture -> texture
    com.badlogic.gdx.graphics.Texture$TextureFilter minFilter -> minFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter magFilter -> magFilter
    com.badlogic.gdx.graphics.Texture$TextureWrap uWrap -> uWrap
    com.badlogic.gdx.graphics.Texture$TextureWrap vWrap -> vWrap
    void set(com.badlogic.gdx.graphics.GLTexture,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureWrap,com.badlogic.gdx.graphics.Texture$TextureWrap) -> set
    void set(com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor) -> set
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.graphics.g3d.utils.TextureProvider -> com.badlogic.gdx.graphics.g3d.utils.TextureProvider:
    com.badlogic.gdx.graphics.Texture load(java.lang.String) -> load
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$AssetTextureProvider -> com.badlogic.gdx.graphics.g3d.utils.TextureProvider$AssetTextureProvider:
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    com.badlogic.gdx.graphics.Texture load(java.lang.String) -> load
com.badlogic.gdx.graphics.g3d.utils.TextureProvider$FileTextureProvider -> com.badlogic.gdx.graphics.g3d.utils.TextureProvider$FileTextureProvider:
    com.badlogic.gdx.graphics.Texture load(java.lang.String) -> load
com.badlogic.gdx.graphics.glutils.ETC1 -> com.badlogic.gdx.graphics.glutils.ETC1:
    int PKM_HEADER_SIZE -> PKM_HEADER_SIZE
    int ETC1_RGB8_OES -> ETC1_RGB8_OES
    int getPixelSize(com.badlogic.gdx.graphics.Pixmap$Format) -> getPixelSize
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImage(com.badlogic.gdx.graphics.Pixmap) -> encodeImage
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data encodeImagePKM(com.badlogic.gdx.graphics.Pixmap) -> encodeImagePKM
    com.badlogic.gdx.graphics.Pixmap decodeImage(com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data,com.badlogic.gdx.graphics.Pixmap$Format) -> decodeImage
    int getCompressedDataSize(int,int) -> getCompressedDataSize
    void formatHeader(java.nio.ByteBuffer,int,int,int) -> formatHeader
    int getWidthPKM(java.nio.ByteBuffer,int) -> getWidthPKM
    int getHeightPKM(java.nio.ByteBuffer,int) -> getHeightPKM
    boolean isValidPKM(java.nio.ByteBuffer,int) -> isValidPKM
    void decodeImage(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int,int,int) -> decodeImage
    java.nio.ByteBuffer encodeImage(java.nio.ByteBuffer,int,int,int,int) -> encodeImage
    java.nio.ByteBuffer encodeImagePKM(java.nio.ByteBuffer,int,int,int,int) -> encodeImagePKM
com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data -> com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data:
    int width -> width
    int height -> height
    java.nio.ByteBuffer compressedData -> compressedData
    int dataOffset -> dataOffset
    void checkNPOT() -> checkNPOT
    boolean hasPKMHeader() -> hasPKMHeader
    void write(com.badlogic.gdx.files.FileHandle) -> write
    void dispose() -> dispose
    java.lang.String toString() -> toString
com.badlogic.gdx.graphics.glutils.ETC1TextureData -> com.badlogic.gdx.graphics.glutils.ETC1TextureData:
    com.badlogic.gdx.files.FileHandle file -> file
    com.badlogic.gdx.graphics.glutils.ETC1$ETC1Data data -> data
    boolean useMipMaps -> useMipMaps
    int width -> width
    int height -> height
    boolean isPrepared -> isPrepared
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    void consumeCustomData(int) -> consumeCustomData
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.glutils.FileTextureData -> com.badlogic.gdx.graphics.glutils.FileTextureData:
    boolean copyToPOT -> copyToPOT
    com.badlogic.gdx.files.FileHandle file -> file
    int width -> width
    int height -> height
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    com.badlogic.gdx.graphics.Pixmap pixmap -> pixmap
    boolean useMipMaps -> useMipMaps
    boolean isPrepared -> isPrepared
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap ensurePot(com.badlogic.gdx.graphics.Pixmap) -> ensurePot
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
    com.badlogic.gdx.files.FileHandle getFileHandle() -> getFileHandle
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    void consumeCustomData(int) -> consumeCustomData
com.badlogic.gdx.graphics.glutils.FloatFrameBuffer -> com.badlogic.gdx.graphics.glutils.FloatFrameBuffer:
    void setupTexture() -> setupTexture
com.badlogic.gdx.graphics.glutils.FloatTextureData -> com.badlogic.gdx.graphics.glutils.FloatTextureData:
    int width -> width
    int height -> height
    boolean isPrepared -> isPrepared
    java.nio.FloatBuffer buffer -> buffer
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    void consumeCustomData(int) -> consumeCustomData
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.glutils.FrameBuffer -> com.badlogic.gdx.graphics.glutils.FrameBuffer:
    java.util.Map buffers -> buffers
    com.badlogic.gdx.graphics.Texture colorTexture -> colorTexture
    int defaultFramebufferHandle -> defaultFramebufferHandle
    boolean defaultFramebufferHandleInitialized -> defaultFramebufferHandleInitialized
    int framebufferHandle -> framebufferHandle
    int depthbufferHandle -> depthbufferHandle
    int width -> width
    int height -> height
    boolean hasDepth -> hasDepth
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    void setupTexture() -> setupTexture
    void build() -> build
    void dispose() -> dispose
    void bind() -> bind
    void unbind() -> unbind
    void begin() -> begin
    void setFrameBufferViewport() -> setFrameBufferViewport
    void end() -> end
    void setDefaultFrameBufferViewport() -> setDefaultFrameBufferViewport
    void end(int,int,int,int) -> end
    com.badlogic.gdx.graphics.Texture getColorBufferTexture() -> getColorBufferTexture
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    void addManagedFrameBuffer(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.FrameBuffer) -> addManagedFrameBuffer
    void invalidateAllFrameBuffers(com.badlogic.gdx.Application) -> invalidateAllFrameBuffers
    void clearAllFrameBuffers(com.badlogic.gdx.Application) -> clearAllFrameBuffers
    java.lang.StringBuilder getManagedStatus(java.lang.StringBuilder) -> getManagedStatus
    java.lang.String getManagedStatus() -> getManagedStatus
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer -> com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer:
    void begin(com.badlogic.gdx.math.Matrix4,int) -> begin
    void flush() -> flush
    void color(com.badlogic.gdx.graphics.Color) -> color
    void color(float,float,float,float) -> color
    void texCoord(float,float) -> texCoord
    void normal(float,float,float) -> normal
    void vertex(float,float,float) -> vertex
    void end() -> end
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20 -> com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer20:
    int primitiveType -> primitiveType
    int vertexIdx -> vertexIdx
    int numSetTexCoords -> numSetTexCoords
    int maxVertices -> maxVertices
    int numVertices -> numVertices
    com.badlogic.gdx.graphics.Mesh mesh -> mesh
    com.badlogic.gdx.graphics.glutils.ShaderProgram shader -> shader
    boolean ownsShader -> ownsShader
    int numTexCoords -> numTexCoords
    int vertexSize -> vertexSize
    int normalOffset -> normalOffset
    int colorOffset -> colorOffset
    int texCoordOffset -> texCoordOffset
    com.badlogic.gdx.math.Matrix4 projModelView -> projModelView
    float[] vertices -> vertices
    java.lang.String[] shaderUniformNames -> shaderUniformNames
    com.badlogic.gdx.graphics.VertexAttribute[] buildVertexAttributes(boolean,boolean,int) -> buildVertexAttributes
    void setShader(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> setShader
    void begin(com.badlogic.gdx.math.Matrix4,int) -> begin
    void color(com.badlogic.gdx.graphics.Color) -> color
    void color(float,float,float,float) -> color
    void texCoord(float,float) -> texCoord
    void normal(float,float,float) -> normal
    void vertex(float,float,float) -> vertex
    void flush() -> flush
    void end() -> end
    int getNumVertices() -> getNumVertices
    int getMaxVertices() -> getMaxVertices
    void dispose() -> dispose
    java.lang.String createVertexShader(boolean,boolean,int) -> createVertexShader
    java.lang.String createFragmentShader(boolean,boolean,int) -> createFragmentShader
    com.badlogic.gdx.graphics.glutils.ShaderProgram createDefaultShader(boolean,boolean,int) -> createDefaultShader
com.badlogic.gdx.graphics.glutils.IndexArray -> com.badlogic.gdx.graphics.glutils.IndexArray:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    java.nio.ShortBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObject -> com.badlogic.gdx.graphics.glutils.IndexBufferObject:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    java.nio.ShortBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isDirect -> isDirect
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int usage -> usage
    int createBufferObject() -> createBufferObject
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.IndexBufferObjectSubData:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    java.nio.ShortBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isDirect -> isDirect
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int usage -> usage
    int createBufferObject() -> createBufferObject
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.IndexData -> com.badlogic.gdx.graphics.glutils.IndexData:
    int getNumIndices() -> getNumIndices
    int getNumMaxIndices() -> getNumMaxIndices
    void setIndices(short[],int,int) -> setIndices
    java.nio.ShortBuffer getBuffer() -> getBuffer
    void bind() -> bind
    void unbind() -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.MipMapGenerator -> com.badlogic.gdx.graphics.glutils.MipMapGenerator:
    boolean useHWMipMap -> useHWMipMap
    void setUseHardwareMipMap(boolean) -> setUseHardwareMipMap
    void generateMipMap(com.badlogic.gdx.graphics.Pixmap,int,int) -> generateMipMap
    void generateMipMap(int,com.badlogic.gdx.graphics.Pixmap,int,int) -> generateMipMap
    void generateMipMapGLES20(int,com.badlogic.gdx.graphics.Pixmap) -> generateMipMapGLES20
    void generateMipMapDesktop(int,com.badlogic.gdx.graphics.Pixmap,int,int) -> generateMipMapDesktop
    void generateMipMapCPU(int,com.badlogic.gdx.graphics.Pixmap,int,int) -> generateMipMapCPU
com.badlogic.gdx.graphics.glutils.MipMapTextureData -> com.badlogic.gdx.graphics.glutils.MipMapTextureData:
    com.badlogic.gdx.graphics.TextureData[] mips -> mips
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    boolean disposePixmap() -> disposePixmap
    void consumeCustomData(int) -> consumeCustomData
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
com.badlogic.gdx.graphics.glutils.PixmapTextureData -> com.badlogic.gdx.graphics.glutils.PixmapTextureData:
    com.badlogic.gdx.graphics.Pixmap pixmap -> pixmap
    com.badlogic.gdx.graphics.Pixmap$Format format -> format
    boolean useMipMaps -> useMipMaps
    boolean disposePixmap -> disposePixmap
    boolean managed -> managed
    boolean disposePixmap() -> disposePixmap
    com.badlogic.gdx.graphics.Pixmap consumePixmap() -> consumePixmap
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    com.badlogic.gdx.graphics.Pixmap$Format getFormat() -> getFormat
    boolean useMipMaps() -> useMipMaps
    boolean isManaged() -> isManaged
    com.badlogic.gdx.graphics.TextureData$TextureDataType getType() -> getType
    void consumeCustomData(int) -> consumeCustomData
    boolean isPrepared() -> isPrepared
    void prepare() -> prepare
com.badlogic.gdx.graphics.glutils.ShaderProgram -> com.badlogic.gdx.graphics.glutils.ShaderProgram:
    java.lang.String POSITION_ATTRIBUTE -> POSITION_ATTRIBUTE
    java.lang.String NORMAL_ATTRIBUTE -> NORMAL_ATTRIBUTE
    java.lang.String COLOR_ATTRIBUTE -> COLOR_ATTRIBUTE
    java.lang.String TEXCOORD_ATTRIBUTE -> TEXCOORD_ATTRIBUTE
    java.lang.String TANGENT_ATTRIBUTE -> TANGENT_ATTRIBUTE
    java.lang.String BINORMAL_ATTRIBUTE -> BINORMAL_ATTRIBUTE
    boolean pedantic -> pedantic
    com.badlogic.gdx.utils.ObjectMap shaders -> shaders
    java.lang.String log -> log
    boolean isCompiled -> isCompiled
    com.badlogic.gdx.utils.ObjectIntMap uniforms -> uniforms
    com.badlogic.gdx.utils.ObjectIntMap uniformTypes -> uniformTypes
    com.badlogic.gdx.utils.ObjectIntMap uniformSizes -> uniformSizes
    java.lang.String[] uniformNames -> uniformNames
    com.badlogic.gdx.utils.ObjectIntMap attributes -> attributes
    com.badlogic.gdx.utils.ObjectIntMap attributeTypes -> attributeTypes
    com.badlogic.gdx.utils.ObjectIntMap attributeSizes -> attributeSizes
    java.lang.String[] attributeNames -> attributeNames
    int program -> program
    int vertexShaderHandle -> vertexShaderHandle
    int fragmentShaderHandle -> fragmentShaderHandle
    java.nio.FloatBuffer matrix -> matrix
    java.lang.String vertexShaderSource -> vertexShaderSource
    java.lang.String fragmentShaderSource -> fragmentShaderSource
    boolean invalidated -> invalidated
    java.nio.ByteBuffer buffer -> buffer
    java.nio.FloatBuffer floatBuffer -> floatBuffer
    java.nio.IntBuffer intBuffer -> intBuffer
    int refCount -> refCount
    java.nio.IntBuffer intbuf -> intbuf
    java.nio.IntBuffer params -> params
    java.nio.IntBuffer type -> type
    void compileShaders(java.lang.String,java.lang.String) -> compileShaders
    int loadShader(int,java.lang.String) -> loadShader
    int linkProgram() -> linkProgram
    java.lang.String getLog() -> getLog
    boolean isCompiled() -> isCompiled
    int fetchAttributeLocation(java.lang.String) -> fetchAttributeLocation
    int fetchUniformLocation(java.lang.String) -> fetchUniformLocation
    int fetchUniformLocation(java.lang.String,boolean) -> fetchUniformLocation
    void setUniformi(java.lang.String,int) -> setUniformi
    void setUniformi(int,int) -> setUniformi
    void setUniformi(java.lang.String,int,int) -> setUniformi
    void setUniformi(int,int,int) -> setUniformi
    void setUniformi(java.lang.String,int,int,int) -> setUniformi
    void setUniformi(int,int,int,int) -> setUniformi
    void setUniformi(java.lang.String,int,int,int,int) -> setUniformi
    void setUniformi(int,int,int,int,int) -> setUniformi
    void setUniformf(java.lang.String,float) -> setUniformf
    void setUniformf(int,float) -> setUniformf
    void setUniformf(java.lang.String,float,float) -> setUniformf
    void setUniformf(int,float,float) -> setUniformf
    void setUniformf(java.lang.String,float,float,float) -> setUniformf
    void setUniformf(int,float,float,float) -> setUniformf
    void setUniformf(java.lang.String,float,float,float,float) -> setUniformf
    void setUniformf(int,float,float,float,float) -> setUniformf
    void setUniform1fv(java.lang.String,float[],int,int) -> setUniform1fv
    void setUniform1fv(int,float[],int,int) -> setUniform1fv
    void setUniform2fv(java.lang.String,float[],int,int) -> setUniform2fv
    void setUniform2fv(int,float[],int,int) -> setUniform2fv
    void setUniform3fv(java.lang.String,float[],int,int) -> setUniform3fv
    void setUniform3fv(int,float[],int,int) -> setUniform3fv
    void setUniform4fv(java.lang.String,float[],int,int) -> setUniform4fv
    void setUniform4fv(int,float[],int,int) -> setUniform4fv
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4) -> setUniformMatrix
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix4,boolean) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix4,boolean) -> setUniformMatrix
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3) -> setUniformMatrix
    void setUniformMatrix(java.lang.String,com.badlogic.gdx.math.Matrix3,boolean) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3) -> setUniformMatrix
    void setUniformMatrix(int,com.badlogic.gdx.math.Matrix3,boolean) -> setUniformMatrix
    void setUniformMatrix3fv(java.lang.String,java.nio.FloatBuffer,int,boolean) -> setUniformMatrix3fv
    void setUniformMatrix4fv(java.lang.String,java.nio.FloatBuffer,int,boolean) -> setUniformMatrix4fv
    void setUniformMatrix4fv(int,float[],int,int) -> setUniformMatrix4fv
    void setUniformMatrix4fv(java.lang.String,float[],int,int) -> setUniformMatrix4fv
    void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector2) -> setUniformf
    void setUniformf(int,com.badlogic.gdx.math.Vector2) -> setUniformf
    void setUniformf(java.lang.String,com.badlogic.gdx.math.Vector3) -> setUniformf
    void setUniformf(int,com.badlogic.gdx.math.Vector3) -> setUniformf
    void setUniformf(java.lang.String,com.badlogic.gdx.graphics.Color) -> setUniformf
    void setUniformf(int,com.badlogic.gdx.graphics.Color) -> setUniformf
    void setVertexAttribute(java.lang.String,int,int,boolean,int,java.nio.Buffer) -> setVertexAttribute
    void setVertexAttribute(int,int,int,boolean,int,java.nio.Buffer) -> setVertexAttribute
    void setVertexAttribute(java.lang.String,int,int,boolean,int,int) -> setVertexAttribute
    void setVertexAttribute(int,int,int,boolean,int,int) -> setVertexAttribute
    void begin() -> begin
    void end() -> end
    void dispose() -> dispose
    void disableVertexAttribute(java.lang.String) -> disableVertexAttribute
    void disableVertexAttribute(int) -> disableVertexAttribute
    void enableVertexAttribute(java.lang.String) -> enableVertexAttribute
    void enableVertexAttribute(int) -> enableVertexAttribute
    void checkManaged() -> checkManaged
    void addManagedShader(com.badlogic.gdx.Application,com.badlogic.gdx.graphics.glutils.ShaderProgram) -> addManagedShader
    void invalidateAllShaderPrograms(com.badlogic.gdx.Application) -> invalidateAllShaderPrograms
    void clearAllShaderPrograms(com.badlogic.gdx.Application) -> clearAllShaderPrograms
    java.lang.String getManagedStatus() -> getManagedStatus
    void setAttributef(java.lang.String,float,float,float,float) -> setAttributef
    void ensureBufferCapacity(int) -> ensureBufferCapacity
    void fetchUniforms() -> fetchUniforms
    void fetchAttributes() -> fetchAttributes
    boolean hasAttribute(java.lang.String) -> hasAttribute
    int getAttributeType(java.lang.String) -> getAttributeType
    int getAttributeLocation(java.lang.String) -> getAttributeLocation
    int getAttributeSize(java.lang.String) -> getAttributeSize
    boolean hasUniform(java.lang.String) -> hasUniform
    int getUniformType(java.lang.String) -> getUniformType
    int getUniformLocation(java.lang.String) -> getUniformLocation
    int getUniformSize(java.lang.String) -> getUniformSize
    java.lang.String[] getAttributes() -> getAttributes
    java.lang.String[] getUniforms() -> getUniforms
    java.lang.String getVertexShaderSource() -> getVertexShaderSource
    java.lang.String getFragmentShaderSource() -> getFragmentShaderSource
com.badlogic.gdx.graphics.glutils.ShapeRenderer -> com.badlogic.gdx.graphics.glutils.ShapeRenderer:
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer renderer -> renderer
    boolean matrixDirty -> matrixDirty
    com.badlogic.gdx.math.Matrix4 projView -> projView
    com.badlogic.gdx.math.Matrix4 transform -> transform
    com.badlogic.gdx.math.Matrix4 combined -> combined
    com.badlogic.gdx.math.Vector2 tmp -> tmp
    com.badlogic.gdx.graphics.Color color -> color
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType currType -> currType
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setProjectionMatrix(com.badlogic.gdx.math.Matrix4) -> setProjectionMatrix
    com.badlogic.gdx.math.Matrix4 getProjectionMatrix() -> getProjectionMatrix
    void updateMatrices() -> updateMatrices
    void setTransformMatrix(com.badlogic.gdx.math.Matrix4) -> setTransformMatrix
    com.badlogic.gdx.math.Matrix4 getTransformMatrix() -> getTransformMatrix
    void identity() -> identity
    void translate(float,float,float) -> translate
    void rotate(float,float,float,float) -> rotate
    void scale(float,float,float) -> scale
    void begin(com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType) -> begin
    void point(float,float,float) -> point
    void line(float,float,float,float,float,float) -> line
    void line(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> line
    void line(float,float,float,float) -> line
    void line(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> line
    void line(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> line
    void line(float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> line
    void curve(float,float,float,float,float,float,float,float,int) -> curve
    void triangle(float,float,float,float,float,float) -> triangle
    void triangle(float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> triangle
    void rect(float,float,float,float) -> rect
    void rect(float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> rect
    void rect(float,float,float,float,float,float,float) -> rect
    void rect(float,float,float,float,float,float,float,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.graphics.Color) -> rect
    void rectLine(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> rectLine
    void rectLine(float,float,float,float,float) -> rectLine
    void box(float,float,float,float,float,float) -> box
    void x(float,float,float) -> x
    void x(com.badlogic.gdx.math.Vector2,float) -> x
    void arc(float,float,float,float,float) -> arc
    void arc(float,float,float,float,float,int) -> arc
    void circle(float,float,float) -> circle
    void circle(float,float,float,int) -> circle
    void ellipse(float,float,float,float) -> ellipse
    void ellipse(float,float,float,float,int) -> ellipse
    void cone(float,float,float,float,float) -> cone
    void cone(float,float,float,float,float,int) -> cone
    void polygon(float[]) -> polygon
    void polygon(float[],int,int) -> polygon
    void polyline(float[]) -> polyline
    void polyline(float[],int,int) -> polyline
    void checkDirty() -> checkDirty
    void checkFlush(int) -> checkFlush
    void end() -> end
    void flush() -> flush
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType getCurrentType() -> getCurrentType
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer getRenderer() -> getRenderer
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType -> com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType:
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Point -> Point
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Line -> Line
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType Filled -> Filled
    int glType -> glType
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] $VALUES -> $VALUES
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType[] values() -> values
    com.badlogic.gdx.graphics.glutils.ShapeRenderer$ShapeType valueOf(java.lang.String) -> valueOf
    int getGlType() -> getGlType
com.badlogic.gdx.graphics.glutils.VertexArray -> com.badlogic.gdx.graphics.glutils.VertexArray:
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    java.nio.FloatBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    boolean isBound -> isBound
    void dispose() -> dispose
    java.nio.FloatBuffer getBuffer() -> getBuffer
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    void setVertices(float[],int,int) -> setVertices
    void updateVertices(int,float[],int,int) -> updateVertices
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> unbind
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
com.badlogic.gdx.graphics.glutils.VertexBufferObject -> com.badlogic.gdx.graphics.glutils.VertexBufferObject:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    java.nio.FloatBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isStatic -> isStatic
    int usage -> usage
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int createBufferObject() -> createBufferObject
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    java.nio.FloatBuffer getBuffer() -> getBuffer
    void bufferChanged() -> bufferChanged
    void setVertices(float[],int,int) -> setVertices
    void updateVertices(int,float[],int,int) -> updateVertices
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData -> com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData:
    java.nio.IntBuffer tmpHandle -> tmpHandle
    com.badlogic.gdx.graphics.VertexAttributes attributes -> attributes
    java.nio.FloatBuffer buffer -> buffer
    java.nio.ByteBuffer byteBuffer -> byteBuffer
    int bufferHandle -> bufferHandle
    boolean isDirect -> isDirect
    boolean isStatic -> isStatic
    int usage -> usage
    boolean isDirty -> isDirty
    boolean isBound -> isBound
    int createBufferObject() -> createBufferObject
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    java.nio.FloatBuffer getBuffer() -> getBuffer
    void bufferChanged() -> bufferChanged
    void setVertices(float[],int,int) -> setVertices
    void updateVertices(int,float[],int,int) -> updateVertices
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> unbind
    void invalidate() -> invalidate
    void dispose() -> dispose
    int getBufferHandle() -> getBufferHandle
com.badlogic.gdx.graphics.glutils.VertexData -> com.badlogic.gdx.graphics.glutils.VertexData:
    int getNumVertices() -> getNumVertices
    int getNumMaxVertices() -> getNumMaxVertices
    com.badlogic.gdx.graphics.VertexAttributes getAttributes() -> getAttributes
    void setVertices(float[],int,int) -> setVertices
    void updateVertices(int,float[],int,int) -> updateVertices
    java.nio.FloatBuffer getBuffer() -> getBuffer
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> bind
    void bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> bind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram) -> unbind
    void unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[]) -> unbind
    void dispose() -> dispose
com.badlogic.gdx.graphics.profiling.GL20Profiler -> com.badlogic.gdx.graphics.profiling.GL20Profiler:
    com.badlogic.gdx.graphics.GL20 gl20 -> gl20
    void glActiveTexture(int) -> glActiveTexture
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFrontFace(int) -> glFrontFace
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLineWidth(float) -> glLineWidth
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glScissor(int,int,int,int) -> glScissor
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glViewport(int,int,int,int) -> glViewport
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDetachShader(int,int) -> glDetachShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLinkProgram(int) -> glLinkProgram
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
com.badlogic.gdx.graphics.profiling.GL30Profiler -> com.badlogic.gdx.graphics.profiling.GL30Profiler:
    com.badlogic.gdx.graphics.GL30 gl30 -> gl30
    void glActiveTexture(int) -> glActiveTexture
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearDepthf(float) -> glClearDepthf
    void glClearStencil(int) -> glClearStencil
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDisable(int) -> glDisable
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFrontFace(int) -> glFrontFace
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLineWidth(float) -> glLineWidth
    void glPixelStorei(int,int) -> glPixelStorei
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glScissor(int,int,int,int) -> glScissor
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glViewport(int,int,int,int) -> glViewport
    void glAttachShader(int,int) -> glAttachShader
    void glBindAttribLocation(int,int,java.lang.String) -> glBindAttribLocation
    void glBindBuffer(int,int) -> glBindBuffer
    void glBindFramebuffer(int,int) -> glBindFramebuffer
    void glBindRenderbuffer(int,int) -> glBindRenderbuffer
    void glBlendColor(float,float,float,float) -> glBlendColor
    void glBlendEquation(int) -> glBlendEquation
    void glBlendEquationSeparate(int,int) -> glBlendEquationSeparate
    void glBlendFuncSeparate(int,int,int,int) -> glBlendFuncSeparate
    void glBufferData(int,int,java.nio.Buffer,int) -> glBufferData
    void glBufferSubData(int,int,int,java.nio.Buffer) -> glBufferSubData
    int glCheckFramebufferStatus(int) -> glCheckFramebufferStatus
    void glCompileShader(int) -> glCompileShader
    int glCreateProgram() -> glCreateProgram
    int glCreateShader(int) -> glCreateShader
    void glDeleteBuffers(int,java.nio.IntBuffer) -> glDeleteBuffers
    void glDeleteFramebuffers(int,java.nio.IntBuffer) -> glDeleteFramebuffers
    void glDeleteProgram(int) -> glDeleteProgram
    void glDeleteRenderbuffers(int,java.nio.IntBuffer) -> glDeleteRenderbuffers
    void glDeleteShader(int) -> glDeleteShader
    void glDetachShader(int,int) -> glDetachShader
    void glDisableVertexAttribArray(int) -> glDisableVertexAttribArray
    void glDrawElements(int,int,int,int) -> glDrawElements
    void glEnableVertexAttribArray(int) -> glEnableVertexAttribArray
    void glFramebufferRenderbuffer(int,int,int,int) -> glFramebufferRenderbuffer
    void glFramebufferTexture2D(int,int,int,int,int) -> glFramebufferTexture2D
    void glGenBuffers(int,java.nio.IntBuffer) -> glGenBuffers
    void glGenerateMipmap(int) -> glGenerateMipmap
    void glGenFramebuffers(int,java.nio.IntBuffer) -> glGenFramebuffers
    void glGenRenderbuffers(int,java.nio.IntBuffer) -> glGenRenderbuffers
    java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveAttrib
    java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.Buffer) -> glGetActiveUniform
    void glGetAttachedShaders(int,int,java.nio.Buffer,java.nio.IntBuffer) -> glGetAttachedShaders
    int glGetAttribLocation(int,java.lang.String) -> glGetAttribLocation
    void glGetBooleanv(int,java.nio.Buffer) -> glGetBooleanv
    void glGetBufferParameteriv(int,int,java.nio.IntBuffer) -> glGetBufferParameteriv
    void glGetFloatv(int,java.nio.FloatBuffer) -> glGetFloatv
    void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer) -> glGetFramebufferAttachmentParameteriv
    void glGetProgramiv(int,int,java.nio.IntBuffer) -> glGetProgramiv
    java.lang.String glGetProgramInfoLog(int) -> glGetProgramInfoLog
    void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer) -> glGetRenderbufferParameteriv
    void glGetShaderiv(int,int,java.nio.IntBuffer) -> glGetShaderiv
    java.lang.String glGetShaderInfoLog(int) -> glGetShaderInfoLog
    void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer) -> glGetShaderPrecisionFormat
    void glGetTexParameterfv(int,int,java.nio.FloatBuffer) -> glGetTexParameterfv
    void glGetTexParameteriv(int,int,java.nio.IntBuffer) -> glGetTexParameteriv
    void glGetUniformfv(int,int,java.nio.FloatBuffer) -> glGetUniformfv
    void glGetUniformiv(int,int,java.nio.IntBuffer) -> glGetUniformiv
    int glGetUniformLocation(int,java.lang.String) -> glGetUniformLocation
    void glGetVertexAttribfv(int,int,java.nio.FloatBuffer) -> glGetVertexAttribfv
    void glGetVertexAttribiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribiv
    void glGetVertexAttribPointerv(int,int,java.nio.Buffer) -> glGetVertexAttribPointerv
    boolean glIsBuffer(int) -> glIsBuffer
    boolean glIsEnabled(int) -> glIsEnabled
    boolean glIsFramebuffer(int) -> glIsFramebuffer
    boolean glIsProgram(int) -> glIsProgram
    boolean glIsRenderbuffer(int) -> glIsRenderbuffer
    boolean glIsShader(int) -> glIsShader
    boolean glIsTexture(int) -> glIsTexture
    void glLinkProgram(int) -> glLinkProgram
    void glReleaseShaderCompiler() -> glReleaseShaderCompiler
    void glRenderbufferStorage(int,int,int,int) -> glRenderbufferStorage
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int) -> glShaderBinary
    void glShaderSource(int,java.lang.String) -> glShaderSource
    void glStencilFuncSeparate(int,int,int,int) -> glStencilFuncSeparate
    void glStencilMaskSeparate(int,int) -> glStencilMaskSeparate
    void glStencilOpSeparate(int,int,int,int) -> glStencilOpSeparate
    void glTexParameterfv(int,int,java.nio.FloatBuffer) -> glTexParameterfv
    void glTexParameteri(int,int,int) -> glTexParameteri
    void glTexParameteriv(int,int,java.nio.IntBuffer) -> glTexParameteriv
    void glUniform1f(int,float) -> glUniform1f
    void glUniform1fv(int,int,java.nio.FloatBuffer) -> glUniform1fv
    void glUniform1i(int,int) -> glUniform1i
    void glUniform1iv(int,int,java.nio.IntBuffer) -> glUniform1iv
    void glUniform2f(int,float,float) -> glUniform2f
    void glUniform2fv(int,int,java.nio.FloatBuffer) -> glUniform2fv
    void glUniform2i(int,int,int) -> glUniform2i
    void glUniform2iv(int,int,java.nio.IntBuffer) -> glUniform2iv
    void glUniform3f(int,float,float,float) -> glUniform3f
    void glUniform3fv(int,int,java.nio.FloatBuffer) -> glUniform3fv
    void glUniform3i(int,int,int,int) -> glUniform3i
    void glUniform3iv(int,int,java.nio.IntBuffer) -> glUniform3iv
    void glUniform4f(int,float,float,float,float) -> glUniform4f
    void glUniform4fv(int,int,java.nio.FloatBuffer) -> glUniform4fv
    void glUniform4i(int,int,int,int,int) -> glUniform4i
    void glUniform4iv(int,int,java.nio.IntBuffer) -> glUniform4iv
    void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2fv
    void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3fv
    void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4fv
    void glUseProgram(int) -> glUseProgram
    void glValidateProgram(int) -> glValidateProgram
    void glVertexAttrib1f(int,float) -> glVertexAttrib1f
    void glVertexAttrib1fv(int,java.nio.FloatBuffer) -> glVertexAttrib1fv
    void glVertexAttrib2f(int,float,float) -> glVertexAttrib2f
    void glVertexAttrib2fv(int,java.nio.FloatBuffer) -> glVertexAttrib2fv
    void glVertexAttrib3f(int,float,float,float) -> glVertexAttrib3f
    void glVertexAttrib3fv(int,java.nio.FloatBuffer) -> glVertexAttrib3fv
    void glVertexAttrib4f(int,float,float,float,float) -> glVertexAttrib4f
    void glVertexAttrib4fv(int,java.nio.FloatBuffer) -> glVertexAttrib4fv
    void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer) -> glVertexAttribPointer
    void glVertexAttribPointer(int,int,int,boolean,int,int) -> glVertexAttribPointer
    void glReadBuffer(int) -> glReadBuffer
    void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer) -> glDrawRangeElements
    void glDrawRangeElements(int,int,int,int,int,int) -> glDrawRangeElements
    void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage3D
    void glTexImage3D(int,int,int,int,int,int,int,int,int,int) -> glTexImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage3D
    void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int) -> glTexSubImage3D
    void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int) -> glCopyTexSubImage3D
    void glGenQueries(int,int[],int) -> glGenQueries
    void glGenQueries(int,java.nio.IntBuffer) -> glGenQueries
    void glDeleteQueries(int,int[],int) -> glDeleteQueries
    void glDeleteQueries(int,java.nio.IntBuffer) -> glDeleteQueries
    boolean glIsQuery(int) -> glIsQuery
    void glBeginQuery(int,int) -> glBeginQuery
    void glEndQuery(int) -> glEndQuery
    void glGetQueryiv(int,int,java.nio.IntBuffer) -> glGetQueryiv
    void glGetQueryObjectuiv(int,int,java.nio.IntBuffer) -> glGetQueryObjectuiv
    boolean glUnmapBuffer(int) -> glUnmapBuffer
    java.nio.Buffer glGetBufferPointerv(int,int) -> glGetBufferPointerv
    void glDrawBuffers(int,java.nio.IntBuffer) -> glDrawBuffers
    void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x3fv
    void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x2fv
    void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix2x4fv
    void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x2fv
    void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix3x4fv
    void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer) -> glUniformMatrix4x3fv
    void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int) -> glBlitFramebuffer
    void glRenderbufferStorageMultisample(int,int,int,int,int) -> glRenderbufferStorageMultisample
    void glFramebufferTextureLayer(int,int,int,int,int) -> glFramebufferTextureLayer
    void glFlushMappedBufferRange(int,int,int) -> glFlushMappedBufferRange
    void glBindVertexArray(int) -> glBindVertexArray
    void glDeleteVertexArrays(int,int[],int) -> glDeleteVertexArrays
    void glDeleteVertexArrays(int,java.nio.IntBuffer) -> glDeleteVertexArrays
    void glGenVertexArrays(int,int[],int) -> glGenVertexArrays
    void glGenVertexArrays(int,java.nio.IntBuffer) -> glGenVertexArrays
    boolean glIsVertexArray(int) -> glIsVertexArray
    void glBeginTransformFeedback(int) -> glBeginTransformFeedback
    void glEndTransformFeedback() -> glEndTransformFeedback
    void glBindBufferRange(int,int,int,int,int) -> glBindBufferRange
    void glBindBufferBase(int,int,int) -> glBindBufferBase
    void glTransformFeedbackVaryings(int,java.lang.String[],int) -> glTransformFeedbackVaryings
    void glVertexAttribIPointer(int,int,int,int,int) -> glVertexAttribIPointer
    void glGetVertexAttribIiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIiv
    void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer) -> glGetVertexAttribIuiv
    void glVertexAttribI4i(int,int,int,int,int) -> glVertexAttribI4i
    void glVertexAttribI4ui(int,int,int,int,int) -> glVertexAttribI4ui
    void glGetUniformuiv(int,int,java.nio.IntBuffer) -> glGetUniformuiv
    int glGetFragDataLocation(int,java.lang.String) -> glGetFragDataLocation
    void glUniform1uiv(int,int,java.nio.IntBuffer) -> glUniform1uiv
    void glUniform3uiv(int,int,java.nio.IntBuffer) -> glUniform3uiv
    void glUniform4uiv(int,int,java.nio.IntBuffer) -> glUniform4uiv
    void glClearBufferiv(int,int,java.nio.IntBuffer) -> glClearBufferiv
    void glClearBufferuiv(int,int,java.nio.IntBuffer) -> glClearBufferuiv
    void glClearBufferfv(int,int,java.nio.FloatBuffer) -> glClearBufferfv
    void glClearBufferfi(int,int,float,int) -> glClearBufferfi
    java.lang.String glGetStringi(int,int) -> glGetStringi
    void glCopyBufferSubData(int,int,int,int,int) -> glCopyBufferSubData
    void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer) -> glGetUniformIndices
    void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer) -> glGetActiveUniformsiv
    int glGetUniformBlockIndex(int,java.lang.String) -> glGetUniformBlockIndex
    void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer) -> glGetActiveUniformBlockiv
    void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer) -> glGetActiveUniformBlockName
    java.lang.String glGetActiveUniformBlockName(int,int) -> glGetActiveUniformBlockName
    void glUniformBlockBinding(int,int,int) -> glUniformBlockBinding
    void glDrawArraysInstanced(int,int,int,int) -> glDrawArraysInstanced
    void glDrawElementsInstanced(int,int,int,int,int) -> glDrawElementsInstanced
    void glGetInteger64v(int,java.nio.LongBuffer) -> glGetInteger64v
    void glGetBufferParameteri64v(int,int,java.nio.LongBuffer) -> glGetBufferParameteri64v
    void glGenSamplers(int,int[],int) -> glGenSamplers
    void glGenSamplers(int,java.nio.IntBuffer) -> glGenSamplers
    void glDeleteSamplers(int,int[],int) -> glDeleteSamplers
    void glDeleteSamplers(int,java.nio.IntBuffer) -> glDeleteSamplers
    boolean glIsSampler(int) -> glIsSampler
    void glBindSampler(int,int) -> glBindSampler
    void glSamplerParameteri(int,int,int) -> glSamplerParameteri
    void glSamplerParameteriv(int,int,java.nio.IntBuffer) -> glSamplerParameteriv
    void glSamplerParameterf(int,int,float) -> glSamplerParameterf
    void glSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glSamplerParameterfv
    void glGetSamplerParameteriv(int,int,java.nio.IntBuffer) -> glGetSamplerParameteriv
    void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer) -> glGetSamplerParameterfv
    void glVertexAttribDivisor(int,int) -> glVertexAttribDivisor
    void glBindTransformFeedback(int,int) -> glBindTransformFeedback
    void glDeleteTransformFeedbacks(int,int[],int) -> glDeleteTransformFeedbacks
    void glDeleteTransformFeedbacks(int,java.nio.IntBuffer) -> glDeleteTransformFeedbacks
    void glGenTransformFeedbacks(int,int[],int) -> glGenTransformFeedbacks
    void glGenTransformFeedbacks(int,java.nio.IntBuffer) -> glGenTransformFeedbacks
    boolean glIsTransformFeedback(int) -> glIsTransformFeedback
    void glPauseTransformFeedback() -> glPauseTransformFeedback
    void glResumeTransformFeedback() -> glResumeTransformFeedback
    void glProgramParameteri(int,int,int) -> glProgramParameteri
    void glInvalidateFramebuffer(int,int,java.nio.IntBuffer) -> glInvalidateFramebuffer
    void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int) -> glInvalidateSubFramebuffer
com.badlogic.gdx.graphics.profiling.GLProfiler -> com.badlogic.gdx.graphics.profiling.GLProfiler:
    int calls -> calls
    int textureBindings -> textureBindings
    int drawCalls -> drawCalls
    int shaderSwitches -> shaderSwitches
    com.badlogic.gdx.math.FloatCounter vertexCount -> vertexCount
    void enable() -> enable
    void disable() -> disable
    void reset() -> reset
com.badlogic.gdx.input.GestureDetector -> com.badlogic.gdx.input.GestureDetector:
    com.badlogic.gdx.input.GestureDetector$GestureListener listener -> listener
    float tapSquareSize -> tapSquareSize
    long tapCountInterval -> tapCountInterval
    float longPressSeconds -> longPressSeconds
    long maxFlingDelay -> maxFlingDelay
    boolean inTapSquare -> inTapSquare
    int tapCount -> tapCount
    long lastTapTime -> lastTapTime
    float lastTapX -> lastTapX
    float lastTapY -> lastTapY
    int lastTapButton -> lastTapButton
    int lastTapPointer -> lastTapPointer
    boolean longPressFired -> longPressFired
    boolean pinching -> pinching
    boolean panning -> panning
    com.badlogic.gdx.input.GestureDetector$VelocityTracker tracker -> tracker
    float tapSquareCenterX -> tapSquareCenterX
    float tapSquareCenterY -> tapSquareCenterY
    long gestureStartTime -> gestureStartTime
    com.badlogic.gdx.math.Vector2 pointer1 -> pointer1
    com.badlogic.gdx.math.Vector2 pointer2 -> pointer2
    com.badlogic.gdx.math.Vector2 initialPointer1 -> initialPointer1
    com.badlogic.gdx.math.Vector2 initialPointer2 -> initialPointer2
    com.badlogic.gdx.utils.Timer$Task longPressTask -> longPressTask
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchDown(float,float,int,int) -> touchDown
    boolean touchDragged(int,int,int) -> touchDragged
    boolean touchDragged(float,float,int) -> touchDragged
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchUp(float,float,int,int) -> touchUp
    void cancel() -> cancel
    boolean isLongPressed() -> isLongPressed
    boolean isLongPressed(float) -> isLongPressed
    boolean isPanning() -> isPanning
    void reset() -> reset
    boolean isWithinTapSquare(float,float,float,float) -> isWithinTapSquare
    void invalidateTapSquare() -> invalidateTapSquare
    void setTapSquareSize(float) -> setTapSquareSize
    void setTapCountInterval(float) -> setTapCountInterval
    void setLongPressSeconds(float) -> setLongPressSeconds
    void setMaxFlingDelay(long) -> setMaxFlingDelay
com.badlogic.gdx.input.GestureDetector$1 -> com.badlogic.gdx.input.GestureDetector$1:
    com.badlogic.gdx.input.GestureDetector this$0 -> this$0
    void run() -> run
com.badlogic.gdx.input.GestureDetector$GestureAdapter -> com.badlogic.gdx.input.GestureDetector$GestureAdapter:
    boolean touchDown(float,float,int,int) -> touchDown
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean panStop(float,float,int,int) -> panStop
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.input.GestureDetector$GestureListener -> com.badlogic.gdx.input.GestureDetector$GestureListener:
    boolean touchDown(float,float,int,int) -> touchDown
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean panStop(float,float,int,int) -> panStop
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.input.GestureDetector$VelocityTracker -> com.badlogic.gdx.input.GestureDetector$VelocityTracker:
    int sampleSize -> sampleSize
    float lastX -> lastX
    float lastY -> lastY
    float deltaX -> deltaX
    float deltaY -> deltaY
    long lastTime -> lastTime
    int numSamples -> numSamples
    float[] meanX -> meanX
    float[] meanY -> meanY
    long[] meanTime -> meanTime
    void start(float,float,long) -> start
    void update(float,float,long) -> update
    float getVelocityX() -> getVelocityX
    float getVelocityY() -> getVelocityY
    float getAverage(float[],int) -> getAverage
    long getAverage(long[],int) -> getAverage
    float getSum(float[],int) -> getSum
com.badlogic.gdx.input.RemoteInput -> com.badlogic.gdx.input.RemoteInput:
    int DEFAULT_PORT -> DEFAULT_PORT
    java.net.ServerSocket serverSocket -> serverSocket
    float[] accel -> accel
    float[] compass -> compass
    boolean multiTouch -> multiTouch
    float remoteWidth -> remoteWidth
    float remoteHeight -> remoteHeight
    boolean connected -> connected
    com.badlogic.gdx.input.RemoteInput$RemoteInputListener listener -> listener
    java.util.Set keys -> keys
    int[] touchX -> touchX
    int[] touchY -> touchY
    boolean[] isTouched -> isTouched
    boolean justTouched -> justTouched
    com.badlogic.gdx.InputProcessor processor -> processor
    int port -> port
    java.lang.String[] ips -> ips
    void run() -> run
    boolean isConnected() -> isConnected
    float getAccelerometerX() -> getAccelerometerX
    float getAccelerometerY() -> getAccelerometerY
    float getAccelerometerZ() -> getAccelerometerZ
    int getX() -> getX
    int getX(int) -> getX
    int getY() -> getY
    int getY(int) -> getY
    boolean isTouched() -> isTouched
    boolean justTouched() -> justTouched
    boolean isTouched(int) -> isTouched
    boolean isButtonPressed(int) -> isButtonPressed
    boolean isKeyPressed(int) -> isKeyPressed
    void getTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getTextInput
    void getPlaceholderTextInput(com.badlogic.gdx.Input$TextInputListener,java.lang.String,java.lang.String) -> getPlaceholderTextInput
    void setOnscreenKeyboardVisible(boolean) -> setOnscreenKeyboardVisible
    void vibrate(int) -> vibrate
    void vibrate(long[],int) -> vibrate
    void cancelVibrate() -> cancelVibrate
    float getAzimuth() -> getAzimuth
    float getPitch() -> getPitch
    float getRoll() -> getRoll
    void setCatchBackKey(boolean) -> setCatchBackKey
    void setInputProcessor(com.badlogic.gdx.InputProcessor) -> setInputProcessor
    com.badlogic.gdx.InputProcessor getInputProcessor() -> getInputProcessor
    java.lang.String[] getIPs() -> getIPs
    boolean isPeripheralAvailable(com.badlogic.gdx.Input$Peripheral) -> isPeripheralAvailable
    int getRotation() -> getRotation
    com.badlogic.gdx.Input$Orientation getNativeOrientation() -> getNativeOrientation
    void setCursorCatched(boolean) -> setCursorCatched
    boolean isCursorCatched() -> isCursorCatched
    int getDeltaX() -> getDeltaX
    int getDeltaX(int) -> getDeltaX
    int getDeltaY() -> getDeltaY
    int getDeltaY(int) -> getDeltaY
    void setCursorPosition(int,int) -> setCursorPosition
    void setCursorImage(com.badlogic.gdx.graphics.Pixmap,int,int) -> setCursorImage
    void setCatchMenuKey(boolean) -> setCatchMenuKey
    long getCurrentEventTime() -> getCurrentEventTime
    void getRotationMatrix(float[]) -> getRotationMatrix
com.badlogic.gdx.input.RemoteInput$EventTrigger -> com.badlogic.gdx.input.RemoteInput$EventTrigger:
    com.badlogic.gdx.input.RemoteInput$TouchEvent touchEvent -> touchEvent
    com.badlogic.gdx.input.RemoteInput$KeyEvent keyEvent -> keyEvent
    com.badlogic.gdx.input.RemoteInput this$0 -> this$0
    void run() -> run
com.badlogic.gdx.input.RemoteInput$KeyEvent -> com.badlogic.gdx.input.RemoteInput$KeyEvent:
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    long timeStamp -> timeStamp
    int type -> type
    int keyCode -> keyCode
    char keyChar -> keyChar
    com.badlogic.gdx.input.RemoteInput this$0 -> this$0
com.badlogic.gdx.input.RemoteInput$RemoteInputListener -> com.badlogic.gdx.input.RemoteInput$RemoteInputListener:
    void onConnected() -> onConnected
    void onDisconnected() -> onDisconnected
com.badlogic.gdx.input.RemoteInput$TouchEvent -> com.badlogic.gdx.input.RemoteInput$TouchEvent:
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    long timeStamp -> timeStamp
    int type -> type
    int x -> x
    int y -> y
    int pointer -> pointer
    com.badlogic.gdx.input.RemoteInput this$0 -> this$0
com.badlogic.gdx.input.RemoteSender -> com.badlogic.gdx.input.RemoteSender:
    java.io.DataOutputStream out -> out
    boolean connected -> connected
    int KEY_DOWN -> KEY_DOWN
    int KEY_UP -> KEY_UP
    int KEY_TYPED -> KEY_TYPED
    int TOUCH_DOWN -> TOUCH_DOWN
    int TOUCH_UP -> TOUCH_UP
    int TOUCH_DRAGGED -> TOUCH_DRAGGED
    int ACCEL -> ACCEL
    int COMPASS -> COMPASS
    int SIZE -> SIZE
    void sendUpdate() -> sendUpdate
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchUp(int,int,int,int) -> touchUp
    boolean touchDragged(int,int,int) -> touchDragged
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
    boolean isConnected() -> isConnected
com.badlogic.gdx.maps.ImageResolver -> com.badlogic.gdx.maps.ImageResolver:
    com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> getImage
com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver -> com.badlogic.gdx.maps.ImageResolver$AssetManagerImageResolver:
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> getImage
com.badlogic.gdx.maps.ImageResolver$DirectImageResolver -> com.badlogic.gdx.maps.ImageResolver$DirectImageResolver:
    com.badlogic.gdx.utils.ObjectMap images -> images
    com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> getImage
com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver -> com.badlogic.gdx.maps.ImageResolver$TextureAtlasImageResolver:
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> atlas
    com.badlogic.gdx.graphics.g2d.TextureRegion getImage(java.lang.String) -> getImage
com.badlogic.gdx.maps.Map -> com.badlogic.gdx.maps.Map:
    com.badlogic.gdx.maps.MapLayers layers -> layers
    com.badlogic.gdx.maps.MapProperties properties -> properties
    com.badlogic.gdx.maps.MapLayers getLayers() -> getLayers
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
    void dispose() -> dispose
com.badlogic.gdx.maps.MapLayer -> com.badlogic.gdx.maps.MapLayer:
    java.lang.String name -> name
    float opacity -> opacity
    boolean visible -> visible
    com.badlogic.gdx.maps.MapObjects objects -> objects
    com.badlogic.gdx.maps.MapProperties properties -> properties
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    float getOpacity() -> getOpacity
    void setOpacity(float) -> setOpacity
    com.badlogic.gdx.maps.MapObjects getObjects() -> getObjects
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
com.badlogic.gdx.maps.MapLayers -> com.badlogic.gdx.maps.MapLayers:
    com.badlogic.gdx.utils.Array layers -> layers
    com.badlogic.gdx.maps.MapLayer get(int) -> get
    com.badlogic.gdx.maps.MapLayer get(java.lang.String) -> get
    int getCount() -> getCount
    void add(com.badlogic.gdx.maps.MapLayer) -> add
    void remove(int) -> remove
    void remove(com.badlogic.gdx.maps.MapLayer) -> remove
    com.badlogic.gdx.utils.Array getByType(java.lang.Class) -> getByType
    com.badlogic.gdx.utils.Array getByType(java.lang.Class,com.badlogic.gdx.utils.Array) -> getByType
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.maps.MapObject -> com.badlogic.gdx.maps.MapObject:
    java.lang.String name -> name
    float opacity -> opacity
    boolean visible -> visible
    com.badlogic.gdx.maps.MapProperties properties -> properties
    com.badlogic.gdx.graphics.Color color -> color
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    float getOpacity() -> getOpacity
    void setOpacity(float) -> setOpacity
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
com.badlogic.gdx.maps.MapObjects -> com.badlogic.gdx.maps.MapObjects:
    com.badlogic.gdx.utils.Array objects -> objects
    com.badlogic.gdx.maps.MapObject get(int) -> get
    com.badlogic.gdx.maps.MapObject get(java.lang.String) -> get
    void add(com.badlogic.gdx.maps.MapObject) -> add
    void remove(int) -> remove
    void remove(com.badlogic.gdx.maps.MapObject) -> remove
    int getCount() -> getCount
    com.badlogic.gdx.utils.Array getByType(java.lang.Class) -> getByType
    com.badlogic.gdx.utils.Array getByType(java.lang.Class,com.badlogic.gdx.utils.Array) -> getByType
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.maps.MapProperties -> com.badlogic.gdx.maps.MapProperties:
    com.badlogic.gdx.utils.ObjectMap properties -> properties
    boolean containsKey(java.lang.String) -> containsKey
    java.lang.Object get(java.lang.String) -> get
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    java.lang.Object get(java.lang.String,java.lang.Object,java.lang.Class) -> get
    void put(java.lang.String,java.lang.Object) -> put
    void putAll(com.badlogic.gdx.maps.MapProperties) -> putAll
    void remove(java.lang.String) -> remove
    void clear() -> clear
    java.util.Iterator getKeys() -> getKeys
    java.util.Iterator getValues() -> getValues
com.badlogic.gdx.maps.MapRenderer -> com.badlogic.gdx.maps.MapRenderer:
    void setView(com.badlogic.gdx.graphics.OrthographicCamera) -> setView
    void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float) -> setView
    void render() -> render
    void render(int[]) -> render
com.badlogic.gdx.maps.objects.CircleMapObject -> com.badlogic.gdx.maps.objects.CircleMapObject:
    com.badlogic.gdx.math.Circle circle -> circle
    com.badlogic.gdx.math.Circle getCircle() -> getCircle
com.badlogic.gdx.maps.objects.EllipseMapObject -> com.badlogic.gdx.maps.objects.EllipseMapObject:
    com.badlogic.gdx.math.Ellipse ellipse -> ellipse
    com.badlogic.gdx.math.Ellipse getEllipse() -> getEllipse
com.badlogic.gdx.maps.objects.PolygonMapObject -> com.badlogic.gdx.maps.objects.PolygonMapObject:
    com.badlogic.gdx.math.Polygon polygon -> polygon
    com.badlogic.gdx.math.Polygon getPolygon() -> getPolygon
    void setPolygon(com.badlogic.gdx.math.Polygon) -> setPolygon
com.badlogic.gdx.maps.objects.PolylineMapObject -> com.badlogic.gdx.maps.objects.PolylineMapObject:
    com.badlogic.gdx.math.Polyline polyline -> polyline
    com.badlogic.gdx.math.Polyline getPolyline() -> getPolyline
    void setPolyline(com.badlogic.gdx.math.Polyline) -> setPolyline
com.badlogic.gdx.maps.objects.RectangleMapObject -> com.badlogic.gdx.maps.objects.RectangleMapObject:
    com.badlogic.gdx.math.Rectangle rectangle -> rectangle
    com.badlogic.gdx.math.Rectangle getRectangle() -> getRectangle
com.badlogic.gdx.maps.objects.TextureMapObject -> com.badlogic.gdx.maps.objects.TextureMapObject:
    float x -> x
    float y -> y
    float originX -> originX
    float originY -> originY
    float scaleX -> scaleX
    float scaleY -> scaleY
    float rotation -> rotation
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> textureRegion
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    float getOriginX() -> getOriginX
    void setOriginX(float) -> setOriginX
    float getOriginY() -> getOriginY
    void setOriginY(float) -> setOriginY
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    void setTextureRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setTextureRegion
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader -> com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader:
    int FLAG_FLIP_HORIZONTALLY -> FLAG_FLIP_HORIZONTALLY
    int FLAG_FLIP_VERTICALLY -> FLAG_FLIP_VERTICALLY
    int FLAG_FLIP_DIAGONALLY -> FLAG_FLIP_DIAGONALLY
    int MASK_CLEAR -> MASK_CLEAR
    com.badlogic.gdx.utils.XmlReader xml -> xml
    com.badlogic.gdx.utils.XmlReader$Element root -> root
    boolean convertObjectToTileSpace -> convertObjectToTileSpace
    int mapTileWidth -> mapTileWidth
    int mapTileHeight -> mapTileHeight
    int mapWidthInPixels -> mapWidthInPixels
    int mapHeightInPixels -> mapHeightInPixels
    com.badlogic.gdx.maps.tiled.TiledMap map -> map
    com.badlogic.gdx.utils.Array trackedTextures -> trackedTextures
    com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> getDependencies
    com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> load
    com.badlogic.gdx.files.FileHandle loadAtlas(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle) -> loadAtlas
    void setTextureFilters(com.badlogic.gdx.graphics.Texture$TextureFilter,com.badlogic.gdx.graphics.Texture$TextureFilter) -> setTextureFilters
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> loadAsync
    com.badlogic.gdx.maps.tiled.TiledMap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> loadSync
    com.badlogic.gdx.maps.tiled.TiledMap loadMap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> loadMap
    void loadTileset(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver,com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters) -> loadTileset
    void loadTileLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> loadTileLayer
    void loadObjectGroup(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> loadObjectGroup
    void loadObject(com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element) -> loadObject
    void loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element) -> loadProperties
    com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell createTileLayerCell(boolean,boolean,boolean) -> createTileLayerCell
    com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> getRelativeFileHandle
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver -> com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver:
    com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas(java.lang.String) -> getAtlas
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$AssetManagerAtlasResolver -> com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$AssetManagerAtlasResolver:
    com.badlogic.gdx.assets.AssetManager assetManager -> assetManager
    com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas(java.lang.String) -> getAtlas
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver -> com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasResolver$DirectAtlasResolver:
    com.badlogic.gdx.utils.ObjectMap atlases -> atlases
    com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas(java.lang.String) -> getAtlas
com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters -> com.badlogic.gdx.maps.tiled.AtlasTmxMapLoader$AtlasTiledMapLoaderParameters:
    boolean forceTextureFilters -> forceTextureFilters
    com.badlogic.gdx.graphics.Texture$TextureFilter textureMinFilter -> textureMinFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter textureMagFilter -> textureMagFilter
    boolean convertObjectToTileSpace -> convertObjectToTileSpace
com.badlogic.gdx.maps.tiled.TideMapLoader -> com.badlogic.gdx.maps.tiled.TideMapLoader:
    com.badlogic.gdx.utils.XmlReader xml -> xml
    com.badlogic.gdx.utils.XmlReader$Element root -> root
    com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String) -> load
    com.badlogic.gdx.maps.tiled.TiledMap load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters) -> getDependencies
    com.badlogic.gdx.maps.tiled.TiledMap loadMap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> loadMap
    com.badlogic.gdx.utils.Array loadTileSheets(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle) -> loadTileSheets
    void loadTileSheet(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> loadTileSheet
    void loadLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> loadLayer
    void loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element) -> loadProperties
    com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> getRelativeFileHandle
    java.lang.Object load(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> load
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters -> com.badlogic.gdx.maps.tiled.TideMapLoader$Parameters:
com.badlogic.gdx.maps.tiled.TiledMap -> com.badlogic.gdx.maps.tiled.TiledMap:
    com.badlogic.gdx.maps.tiled.TiledMapTileSets tilesets -> tilesets
    com.badlogic.gdx.utils.Array ownedResources -> ownedResources
    com.badlogic.gdx.maps.tiled.TiledMapTileSets getTileSets() -> getTileSets
    void setOwnedResources(com.badlogic.gdx.utils.Array) -> setOwnedResources
    void dispose() -> dispose
com.badlogic.gdx.maps.tiled.TiledMapRenderer -> com.badlogic.gdx.maps.tiled.TiledMapRenderer:
    void renderObject(com.badlogic.gdx.maps.MapObject) -> renderObject
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
com.badlogic.gdx.maps.tiled.TiledMapTile -> com.badlogic.gdx.maps.tiled.TiledMapTile:
    int getId() -> getId
    void setId(int) -> setId
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode() -> getBlendMode
    void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode) -> setBlendMode
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    float getOffsetX() -> getOffsetX
    void setOffsetX(float) -> setOffsetX
    float getOffsetY() -> getOffsetY
    void setOffsetY(float) -> setOffsetY
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode -> com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode:
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode NONE -> NONE
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode ALPHA -> ALPHA
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode[] $VALUES -> $VALUES
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode[] values() -> values
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.maps.tiled.TiledMapTileLayer -> com.badlogic.gdx.maps.tiled.TiledMapTileLayer:
    int width -> width
    int height -> height
    float tileWidth -> tileWidth
    float tileHeight -> tileHeight
    com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell[][] cells -> cells
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    float getTileWidth() -> getTileWidth
    float getTileHeight() -> getTileHeight
    com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell getCell(int,int) -> getCell
    void setCell(int,int,com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell) -> setCell
com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell -> com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell:
    com.badlogic.gdx.maps.tiled.TiledMapTile tile -> tile
    boolean flipHorizontally -> flipHorizontally
    boolean flipVertically -> flipVertically
    int rotation -> rotation
    int ROTATE_0 -> ROTATE_0
    int ROTATE_90 -> ROTATE_90
    int ROTATE_180 -> ROTATE_180
    int ROTATE_270 -> ROTATE_270
    com.badlogic.gdx.maps.tiled.TiledMapTile getTile() -> getTile
    void setTile(com.badlogic.gdx.maps.tiled.TiledMapTile) -> setTile
    boolean getFlipHorizontally() -> getFlipHorizontally
    void setFlipHorizontally(boolean) -> setFlipHorizontally
    boolean getFlipVertically() -> getFlipVertically
    void setFlipVertically(boolean) -> setFlipVertically
    int getRotation() -> getRotation
    void setRotation(int) -> setRotation
com.badlogic.gdx.maps.tiled.TiledMapTileSet -> com.badlogic.gdx.maps.tiled.TiledMapTileSet:
    java.lang.String name -> name
    com.badlogic.gdx.utils.IntMap tiles -> tiles
    com.badlogic.gdx.maps.MapProperties properties -> properties
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
    com.badlogic.gdx.maps.tiled.TiledMapTile getTile(int) -> getTile
    java.util.Iterator iterator() -> iterator
    void putTile(int,com.badlogic.gdx.maps.tiled.TiledMapTile) -> putTile
    void removeTile(int) -> removeTile
    int size() -> size
com.badlogic.gdx.maps.tiled.TiledMapTileSets -> com.badlogic.gdx.maps.tiled.TiledMapTileSets:
    com.badlogic.gdx.utils.Array tilesets -> tilesets
    com.badlogic.gdx.maps.tiled.TiledMapTileSet getTileSet(int) -> getTileSet
    com.badlogic.gdx.maps.tiled.TiledMapTileSet getTileSet(java.lang.String) -> getTileSet
    void addTileSet(com.badlogic.gdx.maps.tiled.TiledMapTileSet) -> addTileSet
    void removeTileSet(int) -> removeTileSet
    void removeTileSet(com.badlogic.gdx.maps.tiled.TiledMapTileSet) -> removeTileSet
    com.badlogic.gdx.maps.tiled.TiledMapTile getTile(int) -> getTile
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.maps.tiled.TmxMapHelper -> com.badlogic.gdx.maps.tiled.TmxMapHelper:
    int FLAG_FLIP_HORIZONTALLY -> FLAG_FLIP_HORIZONTALLY
    int FLAG_FLIP_VERTICALLY -> FLAG_FLIP_VERTICALLY
    int FLAG_FLIP_DIAGONALLY -> FLAG_FLIP_DIAGONALLY
    int MASK_CLEAR -> MASK_CLEAR
    int[] getTileIds(com.badlogic.gdx.utils.XmlReader$Element,int,int) -> getTileIds
    int unsignedByteToInt(byte) -> unsignedByteToInt
com.badlogic.gdx.maps.tiled.TmxMapLoader -> com.badlogic.gdx.maps.tiled.TmxMapLoader:
    int FLAG_FLIP_HORIZONTALLY -> FLAG_FLIP_HORIZONTALLY
    int FLAG_FLIP_VERTICALLY -> FLAG_FLIP_VERTICALLY
    int FLAG_FLIP_DIAGONALLY -> FLAG_FLIP_DIAGONALLY
    int MASK_CLEAR -> MASK_CLEAR
    com.badlogic.gdx.utils.XmlReader xml -> xml
    com.badlogic.gdx.utils.XmlReader$Element root -> root
    boolean convertObjectToTileSpace -> convertObjectToTileSpace
    int mapTileWidth -> mapTileWidth
    int mapTileHeight -> mapTileHeight
    int mapWidthInPixels -> mapWidthInPixels
    int mapHeightInPixels -> mapHeightInPixels
    com.badlogic.gdx.maps.tiled.TiledMap map -> map
    com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String) -> load
    com.badlogic.gdx.maps.tiled.TiledMap load(java.lang.String,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> load
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> loadAsync
    com.badlogic.gdx.maps.tiled.TiledMap loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> loadSync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters) -> getDependencies
    com.badlogic.gdx.maps.tiled.TiledMap loadTilemap(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> loadTilemap
    com.badlogic.gdx.utils.Array loadTilesets(com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle) -> loadTilesets
    void loadTileSet(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver) -> loadTileSet
    void loadTileLayer(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> loadTileLayer
    void loadObjectGroup(com.badlogic.gdx.maps.tiled.TiledMap,com.badlogic.gdx.utils.XmlReader$Element) -> loadObjectGroup
    void loadObject(com.badlogic.gdx.maps.MapLayer,com.badlogic.gdx.utils.XmlReader$Element) -> loadObject
    void loadProperties(com.badlogic.gdx.maps.MapProperties,com.badlogic.gdx.utils.XmlReader$Element) -> loadProperties
    com.badlogic.gdx.maps.tiled.TiledMapTileLayer$Cell createTileLayerCell(boolean,boolean,boolean) -> createTileLayerCell
    com.badlogic.gdx.files.FileHandle getRelativeFileHandle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> getRelativeFileHandle
    java.lang.Object loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadSync
    void loadAsync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> loadAsync
    com.badlogic.gdx.utils.Array getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.AssetLoaderParameters) -> getDependencies
com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters -> com.badlogic.gdx.maps.tiled.TmxMapLoader$Parameters:
    boolean generateMipMaps -> generateMipMaps
    com.badlogic.gdx.graphics.Texture$TextureFilter textureMinFilter -> textureMinFilter
    com.badlogic.gdx.graphics.Texture$TextureFilter textureMagFilter -> textureMagFilter
    boolean convertObjectToTileSpace -> convertObjectToTileSpace
com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.BatchTiledMapRenderer:
    com.badlogic.gdx.maps.tiled.TiledMap map -> map
    float unitScale -> unitScale
    com.badlogic.gdx.graphics.g2d.Batch spriteBatch -> spriteBatch
    com.badlogic.gdx.math.Rectangle viewBounds -> viewBounds
    boolean ownsSpriteBatch -> ownsSpriteBatch
    float[] vertices -> vertices
    com.badlogic.gdx.maps.tiled.TiledMap getMap() -> getMap
    void setMap(com.badlogic.gdx.maps.tiled.TiledMap) -> setMap
    float getUnitScale() -> getUnitScale
    com.badlogic.gdx.graphics.g2d.Batch getSpriteBatch() -> getSpriteBatch
    com.badlogic.gdx.math.Rectangle getViewBounds() -> getViewBounds
    void setView(com.badlogic.gdx.graphics.OrthographicCamera) -> setView
    void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float) -> setView
    void render() -> render
    void render(int[]) -> render
    void beginRender() -> beginRender
    void endRender() -> endRender
    void dispose() -> dispose
com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.HexagonalTiledMapRenderer:
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
    void renderObject(com.badlogic.gdx.maps.MapObject) -> renderObject
com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.IsometricStaggeredTiledMapRenderer:
    void renderObject(com.badlogic.gdx.maps.MapObject) -> renderObject
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer:
    com.badlogic.gdx.math.Matrix4 isoTransform -> isoTransform
    com.badlogic.gdx.math.Matrix4 invIsotransform -> invIsotransform
    com.badlogic.gdx.math.Vector3 screenPos -> screenPos
    com.badlogic.gdx.math.Vector2 topRight -> topRight
    com.badlogic.gdx.math.Vector2 bottomLeft -> bottomLeft
    com.badlogic.gdx.math.Vector2 topLeft -> topLeft
    com.badlogic.gdx.math.Vector2 bottomRight -> bottomRight
    void init() -> init
    void renderObject(com.badlogic.gdx.maps.MapObject) -> renderObject
    com.badlogic.gdx.math.Vector3 translateScreenToIso(com.badlogic.gdx.math.Vector2) -> translateScreenToIso
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer:
    float tolerance -> tolerance
    com.badlogic.gdx.maps.tiled.TiledMap map -> map
    com.badlogic.gdx.graphics.g2d.SpriteCache spriteCache -> spriteCache
    float[] vertices -> vertices
    boolean blending -> blending
    float unitScale -> unitScale
    com.badlogic.gdx.math.Rectangle viewBounds -> viewBounds
    com.badlogic.gdx.math.Rectangle cacheBounds -> cacheBounds
    float overCache -> overCache
    float maxTileWidth -> maxTileWidth
    float maxTileHeight -> maxTileHeight
    boolean cached -> cached
    int count -> count
    boolean canCacheMoreN -> canCacheMoreN
    boolean canCacheMoreE -> canCacheMoreE
    boolean canCacheMoreW -> canCacheMoreW
    boolean canCacheMoreS -> canCacheMoreS
    void setView(com.badlogic.gdx.graphics.OrthographicCamera) -> setView
    void setView(com.badlogic.gdx.math.Matrix4,float,float,float,float) -> setView
    void render() -> render
    void render(int[]) -> render
    void renderObject(com.badlogic.gdx.maps.MapObject) -> renderObject
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
    void invalidateCache() -> invalidateCache
    boolean isCached() -> isCached
    void setOverCache(float) -> setOverCache
    void setMaxTileSize(float,float) -> setMaxTileSize
    void setBlending(boolean) -> setBlending
    com.badlogic.gdx.graphics.g2d.SpriteCache getSpriteCache() -> getSpriteCache
    void dispose() -> dispose
com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer -> com.badlogic.gdx.maps.tiled.renderers.OrthogonalTiledMapRenderer:
    void renderObject(com.badlogic.gdx.maps.MapObject) -> renderObject
    void renderTileLayer(com.badlogic.gdx.maps.tiled.TiledMapTileLayer) -> renderTileLayer
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile -> com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile:
    long lastTiledMapRenderTime -> lastTiledMapRenderTime
    int id -> id
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode blendMode -> blendMode
    com.badlogic.gdx.maps.MapProperties properties -> properties
    com.badlogic.gdx.utils.Array frameTiles -> frameTiles
    float animationInterval -> animationInterval
    long frameCount -> frameCount
    long initialTimeOffset -> initialTimeOffset
    int getId() -> getId
    void setId(int) -> setId
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode() -> getBlendMode
    void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode) -> setBlendMode
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    float getOffsetX() -> getOffsetX
    void setOffsetX(float) -> setOffsetX
    float getOffsetY() -> getOffsetY
    void setOffsetY(float) -> setOffsetY
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
    void updateAnimationBaseTime() -> updateAnimationBaseTime
com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile -> com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile:
    int id -> id
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode blendMode -> blendMode
    com.badlogic.gdx.maps.MapProperties properties -> properties
    com.badlogic.gdx.graphics.g2d.TextureRegion textureRegion -> textureRegion
    float offsetX -> offsetX
    float offsetY -> offsetY
    int getId() -> getId
    void setId(int) -> setId
    com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode getBlendMode() -> getBlendMode
    void setBlendMode(com.badlogic.gdx.maps.tiled.TiledMapTile$BlendMode) -> setBlendMode
    com.badlogic.gdx.maps.MapProperties getProperties() -> getProperties
    com.badlogic.gdx.graphics.g2d.TextureRegion getTextureRegion() -> getTextureRegion
    float getOffsetX() -> getOffsetX
    void setOffsetX(float) -> setOffsetX
    float getOffsetY() -> getOffsetY
    void setOffsetY(float) -> setOffsetY
com.badlogic.gdx.math.BSpline -> com.badlogic.gdx.math.BSpline:
    float d6 -> d6
    com.badlogic.gdx.math.Vector[] controlPoints -> controlPoints
    com.badlogic.gdx.utils.Array knots -> knots
    int degree -> degree
    boolean continuous -> continuous
    int spanCount -> spanCount
    com.badlogic.gdx.math.Vector tmp -> tmp
    com.badlogic.gdx.math.Vector tmp2 -> tmp2
    com.badlogic.gdx.math.Vector tmp3 -> tmp3
    com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> cubic
    com.badlogic.gdx.math.Vector cubic_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> cubic_derivative
    com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> cubic
    com.badlogic.gdx.math.Vector cubic_derivative(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> cubic_derivative
    com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector) -> calculate
    com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector) -> derivative
    com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector) -> calculate
    com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],int,boolean,com.badlogic.gdx.math.Vector) -> derivative
    com.badlogic.gdx.math.BSpline set(com.badlogic.gdx.math.Vector[],int,boolean) -> set
    com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float) -> valueAt
    com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,int,float) -> valueAt
    com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,float) -> derivativeAt
    com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,int,float) -> derivativeAt
    int nearest(com.badlogic.gdx.math.Vector) -> nearest
    int nearest(com.badlogic.gdx.math.Vector,int,int) -> nearest
    float approximate(com.badlogic.gdx.math.Vector) -> approximate
    float approximate(com.badlogic.gdx.math.Vector,int,int) -> approximate
    float approximate(com.badlogic.gdx.math.Vector,int) -> approximate
    float locate(com.badlogic.gdx.math.Vector) -> locate
    float approxLength(int) -> approxLength
    float locate(java.lang.Object) -> locate
    float approximate(java.lang.Object) -> approximate
    java.lang.Object valueAt(java.lang.Object,float) -> valueAt
    java.lang.Object derivativeAt(java.lang.Object,float) -> derivativeAt
com.badlogic.gdx.math.Bezier -> com.badlogic.gdx.math.Bezier:
    com.badlogic.gdx.utils.Array points -> points
    com.badlogic.gdx.math.Vector tmp -> tmp
    com.badlogic.gdx.math.Vector tmp2 -> tmp2
    com.badlogic.gdx.math.Vector tmp3 -> tmp3
    com.badlogic.gdx.math.Vector linear(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> linear
    com.badlogic.gdx.math.Vector linear_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> linear_derivative
    com.badlogic.gdx.math.Vector quadratic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> quadratic
    com.badlogic.gdx.math.Vector quadratic_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> quadratic_derivative
    com.badlogic.gdx.math.Vector cubic(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> cubic
    com.badlogic.gdx.math.Vector cubic_derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> cubic_derivative
    com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.math.Vector[]) -> set
    com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.math.Vector[],int,int) -> set
    com.badlogic.gdx.math.Bezier set(com.badlogic.gdx.utils.Array,int,int) -> set
    com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float) -> valueAt
    com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,float) -> derivativeAt
    float approximate(com.badlogic.gdx.math.Vector) -> approximate
    float locate(com.badlogic.gdx.math.Vector) -> locate
    float approxLength(int) -> approxLength
    float locate(java.lang.Object) -> locate
    float approximate(java.lang.Object) -> approximate
    java.lang.Object valueAt(java.lang.Object,float) -> valueAt
    java.lang.Object derivativeAt(java.lang.Object,float) -> derivativeAt
com.badlogic.gdx.math.Bresenham2 -> com.badlogic.gdx.math.Bresenham2:
    com.badlogic.gdx.utils.Array points -> points
    com.badlogic.gdx.utils.Pool pool -> pool
    com.badlogic.gdx.utils.Array line(com.badlogic.gdx.math.GridPoint2,com.badlogic.gdx.math.GridPoint2) -> line
    com.badlogic.gdx.utils.Array line(int,int,int,int) -> line
    com.badlogic.gdx.utils.Array line(int,int,int,int,com.badlogic.gdx.utils.Pool,com.badlogic.gdx.utils.Array) -> line
com.badlogic.gdx.math.Bresenham2$1 -> com.badlogic.gdx.math.Bresenham2$1:
    com.badlogic.gdx.math.Bresenham2 this$0 -> this$0
    com.badlogic.gdx.math.GridPoint2 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.math.CatmullRomSpline -> com.badlogic.gdx.math.CatmullRomSpline:
    com.badlogic.gdx.math.Vector[] controlPoints -> controlPoints
    boolean continuous -> continuous
    int spanCount -> spanCount
    com.badlogic.gdx.math.Vector tmp -> tmp
    com.badlogic.gdx.math.Vector tmp2 -> tmp2
    com.badlogic.gdx.math.Vector tmp3 -> tmp3
    com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> calculate
    com.badlogic.gdx.math.Vector calculate(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> calculate
    com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> derivative
    com.badlogic.gdx.math.Vector derivative(com.badlogic.gdx.math.Vector,int,float,com.badlogic.gdx.math.Vector[],boolean,com.badlogic.gdx.math.Vector) -> derivative
    com.badlogic.gdx.math.CatmullRomSpline set(com.badlogic.gdx.math.Vector[],boolean) -> set
    com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,float) -> valueAt
    com.badlogic.gdx.math.Vector valueAt(com.badlogic.gdx.math.Vector,int,float) -> valueAt
    com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,float) -> derivativeAt
    com.badlogic.gdx.math.Vector derivativeAt(com.badlogic.gdx.math.Vector,int,float) -> derivativeAt
    int nearest(com.badlogic.gdx.math.Vector) -> nearest
    int nearest(com.badlogic.gdx.math.Vector,int,int) -> nearest
    float approximate(com.badlogic.gdx.math.Vector) -> approximate
    float approximate(com.badlogic.gdx.math.Vector,int,int) -> approximate
    float approximate(com.badlogic.gdx.math.Vector,int) -> approximate
    float locate(com.badlogic.gdx.math.Vector) -> locate
    float approxLength(int) -> approxLength
    float locate(java.lang.Object) -> locate
    float approximate(java.lang.Object) -> approximate
    java.lang.Object valueAt(java.lang.Object,float) -> valueAt
    java.lang.Object derivativeAt(java.lang.Object,float) -> derivativeAt
com.badlogic.gdx.math.Circle -> com.badlogic.gdx.math.Circle:
    float x -> x
    float y -> y
    float radius -> radius
    void set(float,float,float) -> set
    void set(com.badlogic.gdx.math.Vector2,float) -> set
    void set(com.badlogic.gdx.math.Circle) -> set
    void setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
    void setPosition(float,float) -> setPosition
    void setX(float) -> setX
    void setY(float) -> setY
    void setRadius(float) -> setRadius
    boolean contains(float,float) -> contains
    boolean contains(com.badlogic.gdx.math.Vector2) -> contains
    boolean contains(com.badlogic.gdx.math.Circle) -> contains
    boolean overlaps(com.badlogic.gdx.math.Circle) -> overlaps
    java.lang.String toString() -> toString
com.badlogic.gdx.math.ConvexHull -> com.badlogic.gdx.math.ConvexHull:
    com.badlogic.gdx.utils.IntArray quicksortStack -> quicksortStack
    float[] sortedPoints -> sortedPoints
    com.badlogic.gdx.utils.FloatArray hull -> hull
    com.badlogic.gdx.utils.IntArray indices -> indices
    com.badlogic.gdx.utils.ShortArray originalIndices -> originalIndices
    com.badlogic.gdx.utils.FloatArray computePolygon(com.badlogic.gdx.utils.FloatArray,boolean) -> computePolygon
    com.badlogic.gdx.utils.FloatArray computePolygon(float[],boolean) -> computePolygon
    com.badlogic.gdx.utils.FloatArray computePolygon(float[],int,int,boolean) -> computePolygon
    com.badlogic.gdx.utils.IntArray computeIndices(com.badlogic.gdx.utils.FloatArray,boolean,boolean) -> computeIndices
    com.badlogic.gdx.utils.IntArray computeIndices(float[],boolean,boolean) -> computeIndices
    com.badlogic.gdx.utils.IntArray computeIndices(float[],int,int,boolean,boolean) -> computeIndices
    float ccw(float,float) -> ccw
    void sort(float[],int) -> sort
    int quicksortPartition(float[],int,int) -> quicksortPartition
    void sortWithIndices(float[],int,boolean) -> sortWithIndices
    int quicksortPartitionWithIndices(float[],int,int,boolean,short[]) -> quicksortPartitionWithIndices
com.badlogic.gdx.math.CumulativeDistribution -> com.badlogic.gdx.math.CumulativeDistribution:
    com.badlogic.gdx.utils.Array values -> values
    void add(java.lang.Object,float) -> add
    void add(java.lang.Object) -> add
    void generate() -> generate
    void generateNormalized() -> generateNormalized
    void generateUniform() -> generateUniform
    java.lang.Object value(float) -> value
    java.lang.Object value() -> value
    int size() -> size
    float getInterval(int) -> getInterval
    java.lang.Object getValue(int) -> getValue
    void setInterval(java.lang.Object,float) -> setInterval
    void setInterval(int,float) -> setInterval
    void clear() -> clear
com.badlogic.gdx.math.CumulativeDistribution$CumulativeValue -> com.badlogic.gdx.math.CumulativeDistribution$CumulativeValue:
    java.lang.Object value -> value
    float frequency -> frequency
    float interval -> interval
    com.badlogic.gdx.math.CumulativeDistribution this$0 -> this$0
com.badlogic.gdx.math.DelaunayTriangulator -> com.badlogic.gdx.math.DelaunayTriangulator:
    float EPSILON -> EPSILON
    int INSIDE -> INSIDE
    int COMPLETE -> COMPLETE
    int INCOMPLETE -> INCOMPLETE
    com.badlogic.gdx.utils.IntArray quicksortStack -> quicksortStack
    float[] sortedPoints -> sortedPoints
    com.badlogic.gdx.utils.ShortArray triangles -> triangles
    com.badlogic.gdx.utils.ShortArray originalIndices -> originalIndices
    com.badlogic.gdx.utils.IntArray edges -> edges
    com.badlogic.gdx.utils.BooleanArray complete -> complete
    float[] superTriangle -> superTriangle
    com.badlogic.gdx.math.Vector2 centroid -> centroid
    com.badlogic.gdx.utils.ShortArray computeTriangles(com.badlogic.gdx.utils.FloatArray,boolean) -> computeTriangles
    com.badlogic.gdx.utils.ShortArray computeTriangles(float[],boolean) -> computeTriangles
    com.badlogic.gdx.utils.ShortArray computeTriangles(float[],int,int,boolean) -> computeTriangles
    int circumCircle(float,float,float,float,float,float,float,float) -> circumCircle
    void sort(float[],int) -> sort
    int quicksortPartition(float[],int,int,short[]) -> quicksortPartition
    void trim(com.badlogic.gdx.utils.ShortArray,float[],float[],int,int) -> trim
com.badlogic.gdx.math.EarClippingTriangulator -> com.badlogic.gdx.math.EarClippingTriangulator:
    int CONCAVE -> CONCAVE
    int TANGENTIAL -> TANGENTIAL
    int CONVEX -> CONVEX
    com.badlogic.gdx.utils.ShortArray indicesArray -> indicesArray
    short[] indices -> indices
    float[] vertices -> vertices
    int vertexCount -> vertexCount
    com.badlogic.gdx.utils.IntArray vertexTypes -> vertexTypes
    com.badlogic.gdx.utils.ShortArray triangles -> triangles
    com.badlogic.gdx.utils.ShortArray computeTriangles(com.badlogic.gdx.utils.FloatArray) -> computeTriangles
    com.badlogic.gdx.utils.ShortArray computeTriangles(float[]) -> computeTriangles
    com.badlogic.gdx.utils.ShortArray computeTriangles(float[],int,int) -> computeTriangles
    void triangulate() -> triangulate
    int classifyVertex(int) -> classifyVertex
    int findEarTip() -> findEarTip
    boolean isEarTip(int) -> isEarTip
    void cutEarTip(int) -> cutEarTip
    int previousIndex(int) -> previousIndex
    int nextIndex(int) -> nextIndex
    boolean areVerticesClockwise(float[],int,int) -> areVerticesClockwise
    int computeSpannedAreaSign(float,float,float,float,float,float) -> computeSpannedAreaSign
com.badlogic.gdx.math.Ellipse -> com.badlogic.gdx.math.Ellipse:
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    long serialVersionUID -> serialVersionUID
    boolean contains(float,float) -> contains
    boolean contains(com.badlogic.gdx.math.Vector2) -> contains
    void set(float,float,float,float) -> set
    void set(com.badlogic.gdx.math.Ellipse) -> set
    com.badlogic.gdx.math.Ellipse setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
    com.badlogic.gdx.math.Ellipse setPosition(float,float) -> setPosition
    com.badlogic.gdx.math.Ellipse setSize(float,float) -> setSize
com.badlogic.gdx.math.FloatCounter -> com.badlogic.gdx.math.FloatCounter:
    int count -> count
    float total -> total
    float min -> min
    float max -> max
    float average -> average
    float latest -> latest
    float value -> value
    com.badlogic.gdx.math.WindowedMean mean -> mean
    void put(float) -> put
    void reset() -> reset
com.badlogic.gdx.math.Frustum -> com.badlogic.gdx.math.Frustum:
    com.badlogic.gdx.math.Vector3[] clipSpacePlanePoints -> clipSpacePlanePoints
    float[] clipSpacePlanePointsArray -> clipSpacePlanePointsArray
    com.badlogic.gdx.math.Plane[] planes -> planes
    com.badlogic.gdx.math.Vector3[] planePoints -> planePoints
    float[] planePointsArray -> planePointsArray
    void update(com.badlogic.gdx.math.Matrix4) -> update
    boolean pointInFrustum(com.badlogic.gdx.math.Vector3) -> pointInFrustum
    boolean pointInFrustum(float,float,float) -> pointInFrustum
    boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float) -> sphereInFrustum
    boolean sphereInFrustum(float,float,float,float) -> sphereInFrustum
    boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float) -> sphereInFrustumWithoutNearFar
    boolean sphereInFrustumWithoutNearFar(float,float,float,float) -> sphereInFrustumWithoutNearFar
    boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox) -> boundsInFrustum
    boolean boundsInFrustum(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> boundsInFrustum
    boolean boundsInFrustum(float,float,float,float,float,float) -> boundsInFrustum
com.badlogic.gdx.math.GeometryUtils -> com.badlogic.gdx.math.GeometryUtils:
    com.badlogic.gdx.math.Vector2 tmp1 -> tmp1
    com.badlogic.gdx.math.Vector2 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector2 tmp3 -> tmp3
    com.badlogic.gdx.math.Vector2 toBarycoord(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> toBarycoord
    boolean barycoordInsideTriangle(com.badlogic.gdx.math.Vector2) -> barycoordInsideTriangle
    com.badlogic.gdx.math.Vector2 fromBarycoord(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> fromBarycoord
    float fromBarycoord(com.badlogic.gdx.math.Vector2,float,float,float) -> fromBarycoord
    float lowestPositiveRoot(float,float,float) -> lowestPositiveRoot
    com.badlogic.gdx.math.Vector2 triangleCentroid(float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> triangleCentroid
    float triangleArea(float,float,float,float,float,float) -> triangleArea
    com.badlogic.gdx.math.Vector2 quadrilateralCentroid(float,float,float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> quadrilateralCentroid
    com.badlogic.gdx.math.Vector2 polygonCentroid(float[],int,int,com.badlogic.gdx.math.Vector2) -> polygonCentroid
    float polygonArea(float[],int,int) -> polygonArea
com.badlogic.gdx.math.GridPoint2 -> com.badlogic.gdx.math.GridPoint2:
    int x -> x
    int y -> y
    com.badlogic.gdx.math.GridPoint2 set(com.badlogic.gdx.math.GridPoint2) -> set
    com.badlogic.gdx.math.GridPoint2 set(int,int) -> set
com.badlogic.gdx.math.GridPoint3 -> com.badlogic.gdx.math.GridPoint3:
    int x -> x
    int y -> y
    int z -> z
    com.badlogic.gdx.math.GridPoint3 set(com.badlogic.gdx.math.GridPoint3) -> set
    com.badlogic.gdx.math.GridPoint3 set(int,int,int) -> set
com.badlogic.gdx.math.Interpolation -> com.badlogic.gdx.math.Interpolation:
    com.badlogic.gdx.math.Interpolation linear -> linear
    com.badlogic.gdx.math.Interpolation fade -> fade
    com.badlogic.gdx.math.Interpolation$Pow pow2 -> pow2
    com.badlogic.gdx.math.Interpolation$PowIn pow2In -> pow2In
    com.badlogic.gdx.math.Interpolation$PowOut pow2Out -> pow2Out
    com.badlogic.gdx.math.Interpolation$Pow pow3 -> pow3
    com.badlogic.gdx.math.Interpolation$PowIn pow3In -> pow3In
    com.badlogic.gdx.math.Interpolation$PowOut pow3Out -> pow3Out
    com.badlogic.gdx.math.Interpolation$Pow pow4 -> pow4
    com.badlogic.gdx.math.Interpolation$PowIn pow4In -> pow4In
    com.badlogic.gdx.math.Interpolation$PowOut pow4Out -> pow4Out
    com.badlogic.gdx.math.Interpolation$Pow pow5 -> pow5
    com.badlogic.gdx.math.Interpolation$PowIn pow5In -> pow5In
    com.badlogic.gdx.math.Interpolation$PowOut pow5Out -> pow5Out
    com.badlogic.gdx.math.Interpolation sine -> sine
    com.badlogic.gdx.math.Interpolation sineIn -> sineIn
    com.badlogic.gdx.math.Interpolation sineOut -> sineOut
    com.badlogic.gdx.math.Interpolation exp10 -> exp10
    com.badlogic.gdx.math.Interpolation exp10In -> exp10In
    com.badlogic.gdx.math.Interpolation exp10Out -> exp10Out
    com.badlogic.gdx.math.Interpolation exp5 -> exp5
    com.badlogic.gdx.math.Interpolation exp5In -> exp5In
    com.badlogic.gdx.math.Interpolation exp5Out -> exp5Out
    com.badlogic.gdx.math.Interpolation circle -> circle
    com.badlogic.gdx.math.Interpolation circleIn -> circleIn
    com.badlogic.gdx.math.Interpolation circleOut -> circleOut
    com.badlogic.gdx.math.Interpolation$Elastic elastic -> elastic
    com.badlogic.gdx.math.Interpolation$Elastic elasticIn -> elasticIn
    com.badlogic.gdx.math.Interpolation$Elastic elasticOut -> elasticOut
    com.badlogic.gdx.math.Interpolation swing -> swing
    com.badlogic.gdx.math.Interpolation swingIn -> swingIn
    com.badlogic.gdx.math.Interpolation swingOut -> swingOut
    com.badlogic.gdx.math.Interpolation bounce -> bounce
    com.badlogic.gdx.math.Interpolation bounceIn -> bounceIn
    com.badlogic.gdx.math.Interpolation bounceOut -> bounceOut
    float apply(float) -> apply
    float apply(float,float,float) -> apply
com.badlogic.gdx.math.Interpolation$1 -> com.badlogic.gdx.math.Interpolation$1:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$2 -> com.badlogic.gdx.math.Interpolation$2:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$3 -> com.badlogic.gdx.math.Interpolation$3:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$4 -> com.badlogic.gdx.math.Interpolation$4:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$5 -> com.badlogic.gdx.math.Interpolation$5:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$6 -> com.badlogic.gdx.math.Interpolation$6:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$7 -> com.badlogic.gdx.math.Interpolation$7:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$8 -> com.badlogic.gdx.math.Interpolation$8:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Bounce -> com.badlogic.gdx.math.Interpolation$Bounce:
    float out(float) -> out
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$BounceIn -> com.badlogic.gdx.math.Interpolation$BounceIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$BounceOut -> com.badlogic.gdx.math.Interpolation$BounceOut:
    float[] widths -> widths
    float[] heights -> heights
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Elastic -> com.badlogic.gdx.math.Interpolation$Elastic:
    float value -> value
    float power -> power
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ElasticIn -> com.badlogic.gdx.math.Interpolation$ElasticIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ElasticOut -> com.badlogic.gdx.math.Interpolation$ElasticOut:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Exp -> com.badlogic.gdx.math.Interpolation$Exp:
    float value -> value
    float power -> power
    float min -> min
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ExpIn -> com.badlogic.gdx.math.Interpolation$ExpIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$ExpOut -> com.badlogic.gdx.math.Interpolation$ExpOut:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Pow -> com.badlogic.gdx.math.Interpolation$Pow:
    int power -> power
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$PowIn -> com.badlogic.gdx.math.Interpolation$PowIn:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$PowOut -> com.badlogic.gdx.math.Interpolation$PowOut:
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$Swing -> com.badlogic.gdx.math.Interpolation$Swing:
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$SwingIn -> com.badlogic.gdx.math.Interpolation$SwingIn:
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Interpolation$SwingOut -> com.badlogic.gdx.math.Interpolation$SwingOut:
    float scale -> scale
    float apply(float) -> apply
com.badlogic.gdx.math.Intersector -> com.badlogic.gdx.math.Intersector:
    com.badlogic.gdx.math.Vector3 v0 -> v0
    com.badlogic.gdx.math.Vector3 v1 -> v1
    com.badlogic.gdx.math.Vector3 v2 -> v2
    com.badlogic.gdx.math.Plane p -> p
    com.badlogic.gdx.math.Vector3 i -> i
    com.badlogic.gdx.math.Vector3 dir -> dir
    com.badlogic.gdx.math.Vector3 start -> start
    com.badlogic.gdx.math.Vector3 best -> best
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Vector3 tmp1 -> tmp1
    com.badlogic.gdx.math.Vector3 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector3 tmp3 -> tmp3
    com.badlogic.gdx.math.Vector2 v2tmp -> v2tmp
    com.badlogic.gdx.math.Vector3 intersection -> intersection
    boolean isPointInTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> isPointInTriangle
    boolean isPointInTriangle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> isPointInTriangle
    boolean isPointInTriangle(float,float,float,float,float,float,float,float) -> isPointInTriangle
    boolean intersectSegmentPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectSegmentPlane
    int pointLineSide(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pointLineSide
    int pointLineSide(float,float,float,float,float,float) -> pointLineSide
    boolean isPointInPolygon(com.badlogic.gdx.utils.Array,com.badlogic.gdx.math.Vector2) -> isPointInPolygon
    boolean isPointInPolygon(float[],int,int,float,float) -> isPointInPolygon
    float distanceLinePoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> distanceLinePoint
    float distanceLinePoint(float,float,float,float,float,float) -> distanceLinePoint
    float distanceSegmentPoint(float,float,float,float,float,float) -> distanceSegmentPoint
    float distanceSegmentPoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> distanceSegmentPoint
    com.badlogic.gdx.math.Vector2 nearestSegmentPoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> nearestSegmentPoint
    com.badlogic.gdx.math.Vector2 nearestSegmentPoint(float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> nearestSegmentPoint
    boolean intersectSegmentCircle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> intersectSegmentCircle
    float intersectSegmentCircleDisplace(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2) -> intersectSegmentCircleDisplace
    boolean intersectRayPlane(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectRayPlane
    float intersectLinePlane(float,float,float,float,float,float,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectLinePlane
    boolean intersectRayTriangle(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> intersectRayTriangle
    boolean intersectRaySphere(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3) -> intersectRaySphere
    boolean intersectRayBounds(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Vector3) -> intersectRayBounds
    boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox) -> intersectRayBoundsFast
    boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> intersectRayBoundsFast
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],short[],int,com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,java.util.List,com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectLines(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> intersectLines
    boolean intersectLines(float,float,float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> intersectLines
    boolean intersectLinePolygon(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Polygon) -> intersectLinePolygon
    boolean intersectRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> intersectRectangles
    boolean intersectSegmentPolygon(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Polygon) -> intersectSegmentPolygon
    boolean intersectSegments(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> intersectSegments
    boolean intersectSegments(float,float,float,float,float,float,float,float,com.badlogic.gdx.math.Vector2) -> intersectSegments
    float det(float,float,float,float) -> det
    double detd(double,double,double,double) -> detd
    boolean overlaps(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Circle) -> overlaps
    boolean overlaps(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> overlaps
    boolean overlaps(com.badlogic.gdx.math.Circle,com.badlogic.gdx.math.Rectangle) -> overlaps
    boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon) -> overlapConvexPolygons
    boolean overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Intersector$MinimumTranslationVector) -> overlapConvexPolygons
    boolean overlapConvexPolygons(float[],float[],com.badlogic.gdx.math.Intersector$MinimumTranslationVector) -> overlapConvexPolygons
    boolean overlapConvexPolygons(float[],int,int,float[],int,int,com.badlogic.gdx.math.Intersector$MinimumTranslationVector) -> overlapConvexPolygons
    void splitTriangle(float[],com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Intersector$SplitTriangle) -> splitTriangle
    void splitEdge(float[],int,int,int,com.badlogic.gdx.math.Plane,float[],int) -> splitEdge
    void main(java.lang.String[]) -> main
com.badlogic.gdx.math.Intersector$MinimumTranslationVector -> com.badlogic.gdx.math.Intersector$MinimumTranslationVector:
    com.badlogic.gdx.math.Vector2 normal -> normal
    float depth -> depth
com.badlogic.gdx.math.Intersector$SplitTriangle -> com.badlogic.gdx.math.Intersector$SplitTriangle:
    float[] front -> front
    float[] back -> back
    float[] edgeSplit -> edgeSplit
    int numFront -> numFront
    int numBack -> numBack
    int total -> total
    boolean frontCurrent -> frontCurrent
    int frontOffset -> frontOffset
    int backOffset -> backOffset
    java.lang.String toString() -> toString
    void setSide(boolean) -> setSide
    boolean getSide() -> getSide
    void add(float[],int,int) -> add
    void reset() -> reset
com.badlogic.gdx.math.MathUtils -> com.badlogic.gdx.math.MathUtils:
    float nanoToSec -> nanoToSec
    float FLOAT_ROUNDING_ERROR -> FLOAT_ROUNDING_ERROR
    float PI -> PI
    float PI2 -> PI2
    float E -> E
    int SIN_BITS -> SIN_BITS
    int SIN_MASK -> SIN_MASK
    int SIN_COUNT -> SIN_COUNT
    float radFull -> radFull
    float degFull -> degFull
    float radToIndex -> radToIndex
    float degToIndex -> degToIndex
    float radiansToDegrees -> radiansToDegrees
    float radDeg -> radDeg
    float degreesToRadians -> degreesToRadians
    float degRad -> degRad
    int ATAN2_BITS -> ATAN2_BITS
    int ATAN2_BITS2 -> ATAN2_BITS2
    int ATAN2_MASK -> ATAN2_MASK
    int ATAN2_COUNT -> ATAN2_COUNT
    int ATAN2_DIM -> ATAN2_DIM
    float INV_ATAN2_DIM_MINUS_1 -> INV_ATAN2_DIM_MINUS_1
    java.util.Random random -> random
    int BIG_ENOUGH_INT -> BIG_ENOUGH_INT
    double BIG_ENOUGH_FLOOR -> BIG_ENOUGH_FLOOR
    double CEIL -> CEIL
    double BIG_ENOUGH_CEIL -> BIG_ENOUGH_CEIL
    double BIG_ENOUGH_ROUND -> BIG_ENOUGH_ROUND
    float sin(float) -> sin
    float cos(float) -> cos
    float sinDeg(float) -> sinDeg
    float cosDeg(float) -> cosDeg
    float atan2(float,float) -> atan2
    int random(int) -> random
    int random(int,int) -> random
    boolean randomBoolean() -> randomBoolean
    boolean randomBoolean(float) -> randomBoolean
    float random() -> random
    float random(float) -> random
    float random(float,float) -> random
    int nextPowerOfTwo(int) -> nextPowerOfTwo
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    int clamp(int,int,int) -> clamp
    short clamp(short,short,short) -> clamp
    float clamp(float,float,float) -> clamp
    float lerp(float,float,float) -> lerp
    int floor(float) -> floor
    int floorPositive(float) -> floorPositive
    int ceil(float) -> ceil
    int ceilPositive(float) -> ceilPositive
    int round(float) -> round
    int roundPositive(float) -> roundPositive
    boolean isZero(float) -> isZero
    boolean isZero(float,float) -> isZero
    boolean isEqual(float,float) -> isEqual
    boolean isEqual(float,float,float) -> isEqual
com.badlogic.gdx.math.MathUtils$Atan2 -> com.badlogic.gdx.math.MathUtils$Atan2:
    float[] table -> table
com.badlogic.gdx.math.MathUtils$Sin -> com.badlogic.gdx.math.MathUtils$Sin:
    float[] table -> table
com.badlogic.gdx.math.Matrix3 -> com.badlogic.gdx.math.Matrix3:
    long serialVersionUID -> serialVersionUID
    int M00 -> M00
    int M01 -> M01
    int M02 -> M02
    int M10 -> M10
    int M11 -> M11
    int M12 -> M12
    int M20 -> M20
    int M21 -> M21
    int M22 -> M22
    float[] val -> val
    float[] tmp -> tmp
    com.badlogic.gdx.math.Matrix3 idt() -> idt
    com.badlogic.gdx.math.Matrix3 mul(com.badlogic.gdx.math.Matrix3) -> mul
    com.badlogic.gdx.math.Matrix3 mulLeft(com.badlogic.gdx.math.Matrix3) -> mulLeft
    com.badlogic.gdx.math.Matrix3 setToRotation(float) -> setToRotation
    com.badlogic.gdx.math.Matrix3 setToRotationRad(float) -> setToRotationRad
    com.badlogic.gdx.math.Matrix3 setToRotation(com.badlogic.gdx.math.Vector3,float) -> setToRotation
    com.badlogic.gdx.math.Matrix3 setToRotation(com.badlogic.gdx.math.Vector3,float,float) -> setToRotation
    com.badlogic.gdx.math.Matrix3 setToTranslation(float,float) -> setToTranslation
    com.badlogic.gdx.math.Matrix3 setToTranslation(com.badlogic.gdx.math.Vector2) -> setToTranslation
    com.badlogic.gdx.math.Matrix3 setToScaling(float,float) -> setToScaling
    java.lang.String toString() -> toString
    float det() -> det
    com.badlogic.gdx.math.Matrix3 inv() -> inv
    com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix3) -> set
    com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix4) -> set
    com.badlogic.gdx.math.Matrix3 set(float[]) -> set
    com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector2) -> trn
    com.badlogic.gdx.math.Matrix3 trn(float,float) -> trn
    com.badlogic.gdx.math.Matrix3 trn(com.badlogic.gdx.math.Vector3) -> trn
    com.badlogic.gdx.math.Matrix3 translate(float,float) -> translate
    com.badlogic.gdx.math.Matrix3 translate(com.badlogic.gdx.math.Vector2) -> translate
    com.badlogic.gdx.math.Matrix3 rotate(float) -> rotate
    com.badlogic.gdx.math.Matrix3 rotateRad(float) -> rotateRad
    com.badlogic.gdx.math.Matrix3 scale(float,float) -> scale
    com.badlogic.gdx.math.Matrix3 scale(com.badlogic.gdx.math.Vector2) -> scale
    float[] getValues() -> getValues
    com.badlogic.gdx.math.Vector2 getTranslation(com.badlogic.gdx.math.Vector2) -> getTranslation
    com.badlogic.gdx.math.Vector2 getScale(com.badlogic.gdx.math.Vector2) -> getScale
    float getRotation() -> getRotation
    float getRotationRad() -> getRotationRad
    com.badlogic.gdx.math.Matrix3 scl(float) -> scl
    com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector2) -> scl
    com.badlogic.gdx.math.Matrix3 scl(com.badlogic.gdx.math.Vector3) -> scl
    com.badlogic.gdx.math.Matrix3 transpose() -> transpose
    void mul(float[],float[]) -> mul
com.badlogic.gdx.math.Matrix4 -> com.badlogic.gdx.math.Matrix4:
    long serialVersionUID -> serialVersionUID
    int M00 -> M00
    int M01 -> M01
    int M02 -> M02
    int M03 -> M03
    int M10 -> M10
    int M11 -> M11
    int M12 -> M12
    int M13 -> M13
    int M20 -> M20
    int M21 -> M21
    int M22 -> M22
    int M23 -> M23
    int M30 -> M30
    int M31 -> M31
    int M32 -> M32
    int M33 -> M33
    float[] tmp -> tmp
    float[] val -> val
    com.badlogic.gdx.math.Quaternion quat -> quat
    com.badlogic.gdx.math.Quaternion quat2 -> quat2
    com.badlogic.gdx.math.Vector3 l_vez -> l_vez
    com.badlogic.gdx.math.Vector3 l_vex -> l_vex
    com.badlogic.gdx.math.Vector3 l_vey -> l_vey
    com.badlogic.gdx.math.Vector3 tmpVec -> tmpVec
    com.badlogic.gdx.math.Matrix4 tmpMat -> tmpMat
    com.badlogic.gdx.math.Vector3 right -> right
    com.badlogic.gdx.math.Vector3 tmpForward -> tmpForward
    com.badlogic.gdx.math.Vector3 tmpUp -> tmpUp
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4) -> set
    com.badlogic.gdx.math.Matrix4 set(float[]) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion) -> set
    com.badlogic.gdx.math.Matrix4 set(float,float,float,float) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion) -> set
    com.badlogic.gdx.math.Matrix4 set(float,float,float,float,float,float,float) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.Matrix4 set(float,float,float,float,float,float,float,float,float,float) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.Matrix4 cpy() -> cpy
    com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3) -> trn
    com.badlogic.gdx.math.Matrix4 trn(float,float,float) -> trn
    float[] getValues() -> getValues
    com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4) -> mul
    com.badlogic.gdx.math.Matrix4 mulLeft(com.badlogic.gdx.math.Matrix4) -> mulLeft
    com.badlogic.gdx.math.Matrix4 tra() -> tra
    com.badlogic.gdx.math.Matrix4 idt() -> idt
    com.badlogic.gdx.math.Matrix4 inv() -> inv
    float det() -> det
    float det3x3() -> det3x3
    com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float) -> setToProjection
    com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float) -> setToOrtho2D
    com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float) -> setToOrtho2D
    com.badlogic.gdx.math.Matrix4 setToOrtho(float,float,float,float,float,float) -> setToOrtho
    com.badlogic.gdx.math.Matrix4 setTranslation(com.badlogic.gdx.math.Vector3) -> setTranslation
    com.badlogic.gdx.math.Matrix4 setTranslation(float,float,float) -> setTranslation
    com.badlogic.gdx.math.Matrix4 setToTranslation(com.badlogic.gdx.math.Vector3) -> setToTranslation
    com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float) -> setToTranslation
    com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToTranslationAndScaling
    com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float) -> setToTranslationAndScaling
    com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setToRotationRad(com.badlogic.gdx.math.Vector3,float) -> setToRotationRad
    com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setToRotationRad(float,float,float,float) -> setToRotationRad
    com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setToRotation(float,float,float,float,float,float) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float) -> setFromEulerAngles
    com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3) -> setToScaling
    com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float) -> setToScaling
    com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToLookAt
    com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToLookAt
    com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToWorld
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Matrix4 lerp(com.badlogic.gdx.math.Matrix4,float) -> lerp
    com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4,float) -> avg
    com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4[]) -> avg
    com.badlogic.gdx.math.Matrix4 avg(com.badlogic.gdx.math.Matrix4[],float[]) -> avg
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3) -> set
    com.badlogic.gdx.math.Matrix4 scl(com.badlogic.gdx.math.Vector3) -> scl
    com.badlogic.gdx.math.Matrix4 scl(float,float,float) -> scl
    com.badlogic.gdx.math.Matrix4 scl(float) -> scl
    com.badlogic.gdx.math.Vector3 getTranslation(com.badlogic.gdx.math.Vector3) -> getTranslation
    com.badlogic.gdx.math.Quaternion getRotation(com.badlogic.gdx.math.Quaternion,boolean) -> getRotation
    com.badlogic.gdx.math.Quaternion getRotation(com.badlogic.gdx.math.Quaternion) -> getRotation
    float getScaleXSquared() -> getScaleXSquared
    float getScaleYSquared() -> getScaleYSquared
    float getScaleZSquared() -> getScaleZSquared
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    float getScaleZ() -> getScaleZ
    com.badlogic.gdx.math.Vector3 getScale(com.badlogic.gdx.math.Vector3) -> getScale
    com.badlogic.gdx.math.Matrix4 toNormalMatrix() -> toNormalMatrix
    void mul(float[],float[]) -> mul
    void mulVec(float[],float[]) -> mulVec
    void mulVec(float[],float[],int,int,int) -> mulVec
    void prj(float[],float[]) -> prj
    void prj(float[],float[],int,int,int) -> prj
    void rot(float[],float[]) -> rot
    void rot(float[],float[],int,int,int) -> rot
    boolean inv(float[]) -> inv
    float det(float[]) -> det
    com.badlogic.gdx.math.Matrix4 translate(com.badlogic.gdx.math.Vector3) -> translate
    com.badlogic.gdx.math.Matrix4 translate(float,float,float) -> translate
    com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,float) -> rotate
    com.badlogic.gdx.math.Matrix4 rotateRad(com.badlogic.gdx.math.Vector3,float) -> rotateRad
    com.badlogic.gdx.math.Matrix4 rotate(float,float,float,float) -> rotate
    com.badlogic.gdx.math.Matrix4 rotateRad(float,float,float,float) -> rotateRad
    com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Quaternion) -> rotate
    com.badlogic.gdx.math.Matrix4 rotate(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rotate
    com.badlogic.gdx.math.Matrix4 scale(float,float,float) -> scale
    void extract4x3Matrix(float[]) -> extract4x3Matrix
com.badlogic.gdx.math.Path -> com.badlogic.gdx.math.Path:
    java.lang.Object derivativeAt(java.lang.Object,float) -> derivativeAt
    java.lang.Object valueAt(java.lang.Object,float) -> valueAt
    float approximate(java.lang.Object) -> approximate
    float locate(java.lang.Object) -> locate
    float approxLength(int) -> approxLength
com.badlogic.gdx.math.Plane -> com.badlogic.gdx.math.Plane:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 normal -> normal
    float d -> d
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    void set(float,float,float,float) -> set
    float distance(com.badlogic.gdx.math.Vector3) -> distance
    com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3) -> testPoint
    com.badlogic.gdx.math.Plane$PlaneSide testPoint(float,float,float) -> testPoint
    boolean isFrontFacing(com.badlogic.gdx.math.Vector3) -> isFrontFacing
    com.badlogic.gdx.math.Vector3 getNormal() -> getNormal
    float getD() -> getD
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    void set(float,float,float,float,float,float) -> set
    void set(com.badlogic.gdx.math.Plane) -> set
    java.lang.String toString() -> toString
com.badlogic.gdx.math.Plane$PlaneSide -> com.badlogic.gdx.math.Plane$PlaneSide:
    com.badlogic.gdx.math.Plane$PlaneSide OnPlane -> OnPlane
    com.badlogic.gdx.math.Plane$PlaneSide Back -> Back
    com.badlogic.gdx.math.Plane$PlaneSide Front -> Front
    com.badlogic.gdx.math.Plane$PlaneSide[] $VALUES -> $VALUES
    com.badlogic.gdx.math.Plane$PlaneSide[] values() -> values
    com.badlogic.gdx.math.Plane$PlaneSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.math.Polygon -> com.badlogic.gdx.math.Polygon:
    float[] localVertices -> localVertices
    float[] worldVertices -> worldVertices
    float x -> x
    float y -> y
    float originX -> originX
    float originY -> originY
    float rotation -> rotation
    float scaleX -> scaleX
    float scaleY -> scaleY
    boolean dirty -> dirty
    com.badlogic.gdx.math.Rectangle bounds -> bounds
    float[] getVertices() -> getVertices
    float[] getTransformedVertices() -> getTransformedVertices
    void setOrigin(float,float) -> setOrigin
    void setPosition(float,float) -> setPosition
    void setVertices(float[]) -> setVertices
    void translate(float,float) -> translate
    void setRotation(float) -> setRotation
    void rotate(float) -> rotate
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    void dirty() -> dirty
    float area() -> area
    com.badlogic.gdx.math.Rectangle getBoundingRectangle() -> getBoundingRectangle
    boolean contains(float,float) -> contains
    float getX() -> getX
    float getY() -> getY
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getRotation() -> getRotation
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
com.badlogic.gdx.math.Polyline -> com.badlogic.gdx.math.Polyline:
    float[] localVertices -> localVertices
    float[] worldVertices -> worldVertices
    float x -> x
    float y -> y
    float originX -> originX
    float originY -> originY
    float rotation -> rotation
    float scaleX -> scaleX
    float scaleY -> scaleY
    float length -> length
    float scaledLength -> scaledLength
    boolean calculateScaledLength -> calculateScaledLength
    boolean calculateLength -> calculateLength
    boolean dirty -> dirty
    float[] getVertices() -> getVertices
    float[] getTransformedVertices() -> getTransformedVertices
    float getLength() -> getLength
    float getScaledLength() -> getScaledLength
    float getX() -> getX
    float getY() -> getY
    float getOriginX() -> getOriginX
    float getOriginY() -> getOriginY
    float getRotation() -> getRotation
    float getScaleX() -> getScaleX
    float getScaleY() -> getScaleY
    void setOrigin(float,float) -> setOrigin
    void setPosition(float,float) -> setPosition
    void setRotation(float) -> setRotation
    void rotate(float) -> rotate
    void setScale(float,float) -> setScale
    void scale(float) -> scale
    void calculateLength() -> calculateLength
    void calculateScaledLength() -> calculateScaledLength
    void dirty() -> dirty
    void translate(float,float) -> translate
com.badlogic.gdx.math.Quaternion -> com.badlogic.gdx.math.Quaternion:
    long serialVersionUID -> serialVersionUID
    float NORMALIZATION_TOLERANCE -> NORMALIZATION_TOLERANCE
    com.badlogic.gdx.math.Quaternion tmp1 -> tmp1
    com.badlogic.gdx.math.Quaternion tmp2 -> tmp2
    float x -> x
    float y -> y
    float z -> z
    float w -> w
    com.badlogic.gdx.math.Quaternion set(float,float,float,float) -> set
    com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion) -> set
    com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Vector3,float) -> set
    com.badlogic.gdx.math.Quaternion cpy() -> cpy
    float len(float,float,float,float) -> len
    float len() -> len
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float) -> setEulerAngles
    com.badlogic.gdx.math.Quaternion setEulerAnglesRad(float,float,float) -> setEulerAnglesRad
    int getGimbalPole() -> getGimbalPole
    float getRollRad() -> getRollRad
    float getRoll() -> getRoll
    float getPitchRad() -> getPitchRad
    float getPitch() -> getPitch
    float getYawRad() -> getYawRad
    float getYaw() -> getYaw
    float len2(float,float,float,float) -> len2
    float len2() -> len2
    com.badlogic.gdx.math.Quaternion nor() -> nor
    com.badlogic.gdx.math.Quaternion conjugate() -> conjugate
    com.badlogic.gdx.math.Vector3 transform(com.badlogic.gdx.math.Vector3) -> transform
    com.badlogic.gdx.math.Quaternion mul(com.badlogic.gdx.math.Quaternion) -> mul
    com.badlogic.gdx.math.Quaternion mul(float,float,float,float) -> mul
    com.badlogic.gdx.math.Quaternion mulLeft(com.badlogic.gdx.math.Quaternion) -> mulLeft
    com.badlogic.gdx.math.Quaternion mulLeft(float,float,float,float) -> mulLeft
    com.badlogic.gdx.math.Quaternion add(com.badlogic.gdx.math.Quaternion) -> add
    com.badlogic.gdx.math.Quaternion add(float,float,float,float) -> add
    void toMatrix(float[]) -> toMatrix
    com.badlogic.gdx.math.Quaternion idt() -> idt
    boolean isIdentity() -> isIdentity
    boolean isIdentity(float) -> isIdentity
    com.badlogic.gdx.math.Quaternion setFromAxis(com.badlogic.gdx.math.Vector3,float) -> setFromAxis
    com.badlogic.gdx.math.Quaternion setFromAxisRad(com.badlogic.gdx.math.Vector3,float) -> setFromAxisRad
    com.badlogic.gdx.math.Quaternion setFromAxis(float,float,float,float) -> setFromAxis
    com.badlogic.gdx.math.Quaternion setFromAxisRad(float,float,float,float) -> setFromAxisRad
    com.badlogic.gdx.math.Quaternion setFromMatrix(boolean,com.badlogic.gdx.math.Matrix4) -> setFromMatrix
    com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix4) -> setFromMatrix
    com.badlogic.gdx.math.Quaternion setFromMatrix(boolean,com.badlogic.gdx.math.Matrix3) -> setFromMatrix
    com.badlogic.gdx.math.Quaternion setFromMatrix(com.badlogic.gdx.math.Matrix3) -> setFromMatrix
    com.badlogic.gdx.math.Quaternion setFromAxes(float,float,float,float,float,float,float,float,float) -> setFromAxes
    com.badlogic.gdx.math.Quaternion setFromAxes(boolean,float,float,float,float,float,float,float,float,float) -> setFromAxes
    com.badlogic.gdx.math.Quaternion setFromCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setFromCross
    com.badlogic.gdx.math.Quaternion setFromCross(float,float,float,float,float,float) -> setFromCross
    com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float) -> slerp
    com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion[]) -> slerp
    com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion[],float[]) -> slerp
    com.badlogic.gdx.math.Quaternion exp(float) -> exp
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    float dot(float,float,float,float,float,float,float,float) -> dot
    float dot(com.badlogic.gdx.math.Quaternion) -> dot
    float dot(float,float,float,float) -> dot
    com.badlogic.gdx.math.Quaternion mul(float) -> mul
    float getAxisAngle(com.badlogic.gdx.math.Vector3) -> getAxisAngle
    float getAxisAngleRad(com.badlogic.gdx.math.Vector3) -> getAxisAngleRad
    float getAngleRad() -> getAngleRad
    float getAngle() -> getAngle
    void getSwingTwist(float,float,float,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion) -> getSwingTwist
    void getSwingTwist(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion) -> getSwingTwist
    float getAngleAroundRad(float,float,float) -> getAngleAroundRad
    float getAngleAroundRad(com.badlogic.gdx.math.Vector3) -> getAngleAroundRad
    float getAngleAround(float,float,float) -> getAngleAround
    float getAngleAround(com.badlogic.gdx.math.Vector3) -> getAngleAround
com.badlogic.gdx.math.RandomXS128 -> com.badlogic.gdx.math.RandomXS128:
    long seed0 -> seed0
    long seed1 -> seed1
    int next(int) -> next
com.badlogic.gdx.math.Rectangle -> com.badlogic.gdx.math.Rectangle:
    com.badlogic.gdx.math.Rectangle tmp -> tmp
    com.badlogic.gdx.math.Rectangle tmp2 -> tmp2
    long serialVersionUID -> serialVersionUID
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    com.badlogic.gdx.math.Rectangle set(float,float,float,float) -> set
    float getX() -> getX
    com.badlogic.gdx.math.Rectangle setX(float) -> setX
    float getY() -> getY
    com.badlogic.gdx.math.Rectangle setY(float) -> setY
    float getWidth() -> getWidth
    com.badlogic.gdx.math.Rectangle setWidth(float) -> setWidth
    float getHeight() -> getHeight
    com.badlogic.gdx.math.Rectangle setHeight(float) -> setHeight
    com.badlogic.gdx.math.Vector2 getPosition(com.badlogic.gdx.math.Vector2) -> getPosition
    com.badlogic.gdx.math.Rectangle setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
    com.badlogic.gdx.math.Rectangle setPosition(float,float) -> setPosition
    com.badlogic.gdx.math.Rectangle setSize(float,float) -> setSize
    com.badlogic.gdx.math.Rectangle setSize(float) -> setSize
    com.badlogic.gdx.math.Vector2 getSize(com.badlogic.gdx.math.Vector2) -> getSize
    boolean contains(float,float) -> contains
    boolean contains(com.badlogic.gdx.math.Vector2) -> contains
    boolean contains(com.badlogic.gdx.math.Rectangle) -> contains
    boolean overlaps(com.badlogic.gdx.math.Rectangle) -> overlaps
    com.badlogic.gdx.math.Rectangle set(com.badlogic.gdx.math.Rectangle) -> set
    com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Rectangle) -> merge
    com.badlogic.gdx.math.Rectangle merge(float,float) -> merge
    com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Vector2) -> merge
    com.badlogic.gdx.math.Rectangle merge(com.badlogic.gdx.math.Vector2[]) -> merge
    float getAspectRatio() -> getAspectRatio
    com.badlogic.gdx.math.Vector2 getCenter(com.badlogic.gdx.math.Vector2) -> getCenter
    com.badlogic.gdx.math.Rectangle setCenter(float,float) -> setCenter
    com.badlogic.gdx.math.Rectangle setCenter(com.badlogic.gdx.math.Vector2) -> setCenter
    com.badlogic.gdx.math.Rectangle fitOutside(com.badlogic.gdx.math.Rectangle) -> fitOutside
    com.badlogic.gdx.math.Rectangle fitInside(com.badlogic.gdx.math.Rectangle) -> fitInside
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.badlogic.gdx.math.Vector -> com.badlogic.gdx.math.Vector:
    com.badlogic.gdx.math.Vector cpy() -> cpy
    float len() -> len
    float len2() -> len2
    com.badlogic.gdx.math.Vector limit(float) -> limit
    com.badlogic.gdx.math.Vector clamp(float,float) -> clamp
    com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector) -> set
    com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector) -> sub
    com.badlogic.gdx.math.Vector nor() -> nor
    com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector) -> add
    float dot(com.badlogic.gdx.math.Vector) -> dot
    com.badlogic.gdx.math.Vector scl(float) -> scl
    com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector) -> scl
    float dst(com.badlogic.gdx.math.Vector) -> dst
    float dst2(com.badlogic.gdx.math.Vector) -> dst2
    com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float) -> lerp
    com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation) -> interpolate
    boolean isUnit() -> isUnit
    boolean isUnit(float) -> isUnit
    boolean isZero() -> isZero
    boolean isZero(float) -> isZero
    boolean isOnLine(com.badlogic.gdx.math.Vector,float) -> isOnLine
    boolean isOnLine(com.badlogic.gdx.math.Vector) -> isOnLine
    boolean isCollinear(com.badlogic.gdx.math.Vector,float) -> isCollinear
    boolean isCollinear(com.badlogic.gdx.math.Vector) -> isCollinear
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float) -> isCollinearOpposite
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector) -> isCollinearOpposite
    boolean isPerpendicular(com.badlogic.gdx.math.Vector) -> isPerpendicular
    boolean isPerpendicular(com.badlogic.gdx.math.Vector,float) -> isPerpendicular
    boolean hasSameDirection(com.badlogic.gdx.math.Vector) -> hasSameDirection
    boolean hasOppositeDirection(com.badlogic.gdx.math.Vector) -> hasOppositeDirection
    boolean epsilonEquals(com.badlogic.gdx.math.Vector,float) -> epsilonEquals
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float) -> mulAdd
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> mulAdd
    com.badlogic.gdx.math.Vector setZero() -> setZero
com.badlogic.gdx.math.Vector2 -> com.badlogic.gdx.math.Vector2:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector2 X -> X
    com.badlogic.gdx.math.Vector2 Y -> Y
    com.badlogic.gdx.math.Vector2 Zero -> Zero
    float x -> x
    float y -> y
    com.badlogic.gdx.math.Vector2 cpy() -> cpy
    float len(float,float) -> len
    float len() -> len
    float len2(float,float) -> len2
    float len2() -> len2
    com.badlogic.gdx.math.Vector2 set(com.badlogic.gdx.math.Vector2) -> set
    com.badlogic.gdx.math.Vector2 set(float,float) -> set
    com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2) -> sub
    com.badlogic.gdx.math.Vector2 sub(float,float) -> sub
    com.badlogic.gdx.math.Vector2 nor() -> nor
    com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2) -> add
    com.badlogic.gdx.math.Vector2 add(float,float) -> add
    float dot(float,float,float,float) -> dot
    float dot(com.badlogic.gdx.math.Vector2) -> dot
    float dot(float,float) -> dot
    com.badlogic.gdx.math.Vector2 scl(float) -> scl
    com.badlogic.gdx.math.Vector2 scl(float,float) -> scl
    com.badlogic.gdx.math.Vector2 scl(com.badlogic.gdx.math.Vector2) -> scl
    com.badlogic.gdx.math.Vector2 mulAdd(com.badlogic.gdx.math.Vector2,float) -> mulAdd
    com.badlogic.gdx.math.Vector2 mulAdd(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> mulAdd
    float dst(float,float,float,float) -> dst
    float dst(com.badlogic.gdx.math.Vector2) -> dst
    float dst(float,float) -> dst
    float dst2(float,float,float,float) -> dst2
    float dst2(com.badlogic.gdx.math.Vector2) -> dst2
    float dst2(float,float) -> dst2
    com.badlogic.gdx.math.Vector2 limit(float) -> limit
    com.badlogic.gdx.math.Vector2 clamp(float,float) -> clamp
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3) -> mul
    float crs(com.badlogic.gdx.math.Vector2) -> crs
    float crs(float,float) -> crs
    float angle() -> angle
    float angleRad() -> angleRad
    com.badlogic.gdx.math.Vector2 setAngle(float) -> setAngle
    com.badlogic.gdx.math.Vector2 setAngleRad(float) -> setAngleRad
    com.badlogic.gdx.math.Vector2 rotate(float) -> rotate
    com.badlogic.gdx.math.Vector2 rotateRad(float) -> rotateRad
    com.badlogic.gdx.math.Vector2 rotate90(int) -> rotate90
    com.badlogic.gdx.math.Vector2 lerp(com.badlogic.gdx.math.Vector2,float) -> lerp
    com.badlogic.gdx.math.Vector2 interpolate(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Interpolation) -> interpolate
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean epsilonEquals(com.badlogic.gdx.math.Vector2,float) -> epsilonEquals
    boolean epsilonEquals(float,float,float) -> epsilonEquals
    boolean isUnit() -> isUnit
    boolean isUnit(float) -> isUnit
    boolean isZero() -> isZero
    boolean isZero(float) -> isZero
    boolean isOnLine(com.badlogic.gdx.math.Vector2) -> isOnLine
    boolean isOnLine(com.badlogic.gdx.math.Vector2,float) -> isOnLine
    boolean isCollinear(com.badlogic.gdx.math.Vector2,float) -> isCollinear
    boolean isCollinear(com.badlogic.gdx.math.Vector2) -> isCollinear
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector2,float) -> isCollinearOpposite
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector2) -> isCollinearOpposite
    boolean isPerpendicular(com.badlogic.gdx.math.Vector2) -> isPerpendicular
    boolean isPerpendicular(com.badlogic.gdx.math.Vector2,float) -> isPerpendicular
    boolean hasSameDirection(com.badlogic.gdx.math.Vector2) -> hasSameDirection
    boolean hasOppositeDirection(com.badlogic.gdx.math.Vector2) -> hasOppositeDirection
    com.badlogic.gdx.math.Vector2 setZero() -> setZero
    com.badlogic.gdx.math.Vector setZero() -> setZero
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> mulAdd
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float) -> mulAdd
    boolean epsilonEquals(com.badlogic.gdx.math.Vector,float) -> epsilonEquals
    boolean hasOppositeDirection(com.badlogic.gdx.math.Vector) -> hasOppositeDirection
    boolean hasSameDirection(com.badlogic.gdx.math.Vector) -> hasSameDirection
    boolean isPerpendicular(com.badlogic.gdx.math.Vector,float) -> isPerpendicular
    boolean isPerpendicular(com.badlogic.gdx.math.Vector) -> isPerpendicular
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector) -> isCollinearOpposite
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float) -> isCollinearOpposite
    boolean isCollinear(com.badlogic.gdx.math.Vector) -> isCollinear
    boolean isCollinear(com.badlogic.gdx.math.Vector,float) -> isCollinear
    boolean isOnLine(com.badlogic.gdx.math.Vector) -> isOnLine
    boolean isOnLine(com.badlogic.gdx.math.Vector,float) -> isOnLine
    com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation) -> interpolate
    com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float) -> lerp
    float dst2(com.badlogic.gdx.math.Vector) -> dst2
    float dst(com.badlogic.gdx.math.Vector) -> dst
    com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector) -> scl
    com.badlogic.gdx.math.Vector scl(float) -> scl
    float dot(com.badlogic.gdx.math.Vector) -> dot
    com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector) -> add
    com.badlogic.gdx.math.Vector nor() -> nor
    com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector) -> sub
    com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector) -> set
    com.badlogic.gdx.math.Vector clamp(float,float) -> clamp
    com.badlogic.gdx.math.Vector limit(float) -> limit
    com.badlogic.gdx.math.Vector cpy() -> cpy
com.badlogic.gdx.math.Vector3 -> com.badlogic.gdx.math.Vector3:
    long serialVersionUID -> serialVersionUID
    float x -> x
    float y -> y
    float z -> z
    com.badlogic.gdx.math.Vector3 X -> X
    com.badlogic.gdx.math.Vector3 Y -> Y
    com.badlogic.gdx.math.Vector3 Z -> Z
    com.badlogic.gdx.math.Vector3 Zero -> Zero
    com.badlogic.gdx.math.Matrix4 tmpMat -> tmpMat
    com.badlogic.gdx.math.Vector3 set(float,float,float) -> set
    com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.Vector3 set(float[]) -> set
    com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector2,float) -> set
    com.badlogic.gdx.math.Vector3 cpy() -> cpy
    com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3) -> add
    com.badlogic.gdx.math.Vector3 add(float,float,float) -> add
    com.badlogic.gdx.math.Vector3 add(float) -> add
    com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3) -> sub
    com.badlogic.gdx.math.Vector3 sub(float,float,float) -> sub
    com.badlogic.gdx.math.Vector3 sub(float) -> sub
    com.badlogic.gdx.math.Vector3 scl(float) -> scl
    com.badlogic.gdx.math.Vector3 scl(com.badlogic.gdx.math.Vector3) -> scl
    com.badlogic.gdx.math.Vector3 scl(float,float,float) -> scl
    com.badlogic.gdx.math.Vector3 mulAdd(com.badlogic.gdx.math.Vector3,float) -> mulAdd
    com.badlogic.gdx.math.Vector3 mulAdd(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> mulAdd
    float len(float,float,float) -> len
    float len() -> len
    float len2(float,float,float) -> len2
    float len2() -> len2
    boolean idt(com.badlogic.gdx.math.Vector3) -> idt
    float dst(float,float,float,float,float,float) -> dst
    float dst(com.badlogic.gdx.math.Vector3) -> dst
    float dst(float,float,float) -> dst
    float dst2(float,float,float,float,float,float) -> dst2
    float dst2(com.badlogic.gdx.math.Vector3) -> dst2
    float dst2(float,float,float) -> dst2
    com.badlogic.gdx.math.Vector3 nor() -> nor
    float dot(float,float,float,float,float,float) -> dot
    float dot(com.badlogic.gdx.math.Vector3) -> dot
    float dot(float,float,float) -> dot
    com.badlogic.gdx.math.Vector3 crs(com.badlogic.gdx.math.Vector3) -> crs
    com.badlogic.gdx.math.Vector3 crs(float,float,float) -> crs
    com.badlogic.gdx.math.Vector3 mul4x3(float[]) -> mul4x3
    com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix4) -> mul
    com.badlogic.gdx.math.Vector3 traMul(com.badlogic.gdx.math.Matrix4) -> traMul
    com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix3) -> mul
    com.badlogic.gdx.math.Vector3 traMul(com.badlogic.gdx.math.Matrix3) -> traMul
    com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Quaternion) -> mul
    com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4) -> prj
    com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4) -> rot
    com.badlogic.gdx.math.Vector3 unrotate(com.badlogic.gdx.math.Matrix4) -> unrotate
    com.badlogic.gdx.math.Vector3 untransform(com.badlogic.gdx.math.Matrix4) -> untransform
    com.badlogic.gdx.math.Vector3 rotate(float,float,float,float) -> rotate
    com.badlogic.gdx.math.Vector3 rotateRad(float,float,float,float) -> rotateRad
    com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float) -> rotate
    com.badlogic.gdx.math.Vector3 rotateRad(com.badlogic.gdx.math.Vector3,float) -> rotateRad
    boolean isUnit() -> isUnit
    boolean isUnit(float) -> isUnit
    boolean isZero() -> isZero
    boolean isZero(float) -> isZero
    boolean isOnLine(com.badlogic.gdx.math.Vector3,float) -> isOnLine
    boolean isOnLine(com.badlogic.gdx.math.Vector3) -> isOnLine
    boolean isCollinear(com.badlogic.gdx.math.Vector3,float) -> isCollinear
    boolean isCollinear(com.badlogic.gdx.math.Vector3) -> isCollinear
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector3,float) -> isCollinearOpposite
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector3) -> isCollinearOpposite
    boolean isPerpendicular(com.badlogic.gdx.math.Vector3) -> isPerpendicular
    boolean isPerpendicular(com.badlogic.gdx.math.Vector3,float) -> isPerpendicular
    boolean hasSameDirection(com.badlogic.gdx.math.Vector3) -> hasSameDirection
    boolean hasOppositeDirection(com.badlogic.gdx.math.Vector3) -> hasOppositeDirection
    com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float) -> lerp
    com.badlogic.gdx.math.Vector3 interpolate(com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Interpolation) -> interpolate
    com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float) -> slerp
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Vector3 limit(float) -> limit
    com.badlogic.gdx.math.Vector3 clamp(float,float) -> clamp
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean epsilonEquals(com.badlogic.gdx.math.Vector3,float) -> epsilonEquals
    boolean epsilonEquals(float,float,float,float) -> epsilonEquals
    com.badlogic.gdx.math.Vector3 setZero() -> setZero
    com.badlogic.gdx.math.Vector setZero() -> setZero
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,com.badlogic.gdx.math.Vector) -> mulAdd
    com.badlogic.gdx.math.Vector mulAdd(com.badlogic.gdx.math.Vector,float) -> mulAdd
    boolean epsilonEquals(com.badlogic.gdx.math.Vector,float) -> epsilonEquals
    boolean hasOppositeDirection(com.badlogic.gdx.math.Vector) -> hasOppositeDirection
    boolean hasSameDirection(com.badlogic.gdx.math.Vector) -> hasSameDirection
    boolean isPerpendicular(com.badlogic.gdx.math.Vector,float) -> isPerpendicular
    boolean isPerpendicular(com.badlogic.gdx.math.Vector) -> isPerpendicular
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector) -> isCollinearOpposite
    boolean isCollinearOpposite(com.badlogic.gdx.math.Vector,float) -> isCollinearOpposite
    boolean isCollinear(com.badlogic.gdx.math.Vector) -> isCollinear
    boolean isCollinear(com.badlogic.gdx.math.Vector,float) -> isCollinear
    boolean isOnLine(com.badlogic.gdx.math.Vector) -> isOnLine
    boolean isOnLine(com.badlogic.gdx.math.Vector,float) -> isOnLine
    com.badlogic.gdx.math.Vector interpolate(com.badlogic.gdx.math.Vector,float,com.badlogic.gdx.math.Interpolation) -> interpolate
    com.badlogic.gdx.math.Vector lerp(com.badlogic.gdx.math.Vector,float) -> lerp
    float dst2(com.badlogic.gdx.math.Vector) -> dst2
    float dst(com.badlogic.gdx.math.Vector) -> dst
    com.badlogic.gdx.math.Vector scl(com.badlogic.gdx.math.Vector) -> scl
    com.badlogic.gdx.math.Vector scl(float) -> scl
    float dot(com.badlogic.gdx.math.Vector) -> dot
    com.badlogic.gdx.math.Vector add(com.badlogic.gdx.math.Vector) -> add
    com.badlogic.gdx.math.Vector nor() -> nor
    com.badlogic.gdx.math.Vector sub(com.badlogic.gdx.math.Vector) -> sub
    com.badlogic.gdx.math.Vector set(com.badlogic.gdx.math.Vector) -> set
    com.badlogic.gdx.math.Vector clamp(float,float) -> clamp
    com.badlogic.gdx.math.Vector limit(float) -> limit
    com.badlogic.gdx.math.Vector cpy() -> cpy
com.badlogic.gdx.math.WindowedMean -> com.badlogic.gdx.math.WindowedMean:
    float[] values -> values
    int added_values -> added_values
    int last_value -> last_value
    float mean -> mean
    boolean dirty -> dirty
    boolean hasEnoughData() -> hasEnoughData
    void clear() -> clear
    void addValue(float) -> addValue
    float getMean() -> getMean
    float getOldest() -> getOldest
    float getLatest() -> getLatest
    float standardDeviation() -> standardDeviation
com.badlogic.gdx.math.collision.BoundingBox -> com.badlogic.gdx.math.collision.BoundingBox:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3[] crn -> crn
    com.badlogic.gdx.math.Vector3 min -> min
    com.badlogic.gdx.math.Vector3 max -> max
    com.badlogic.gdx.math.Vector3 cnt -> cnt
    com.badlogic.gdx.math.Vector3 dim -> dim
    boolean crn_dirty -> crn_dirty
    com.badlogic.gdx.math.Vector3 getCenter() -> getCenter
    void updateCorners() -> updateCorners
    com.badlogic.gdx.math.Vector3[] getCorners() -> getCorners
    com.badlogic.gdx.math.Vector3 getDimensions() -> getDimensions
    com.badlogic.gdx.math.Vector3 getMin() -> getMin
    com.badlogic.gdx.math.Vector3 getMax() -> getMax
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.collision.BoundingBox) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3[]) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(java.util.List) -> set
    com.badlogic.gdx.math.collision.BoundingBox inf() -> inf
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.Vector3) -> ext
    com.badlogic.gdx.math.collision.BoundingBox clr() -> clr
    boolean isValid() -> isValid
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox) -> ext
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox,com.badlogic.gdx.math.Matrix4) -> ext
    com.badlogic.gdx.math.collision.BoundingBox mul(com.badlogic.gdx.math.Matrix4) -> mul
    boolean contains(com.badlogic.gdx.math.collision.BoundingBox) -> contains
    boolean intersects(com.badlogic.gdx.math.collision.BoundingBox) -> intersects
    boolean contains(com.badlogic.gdx.math.Vector3) -> contains
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.collision.BoundingBox ext(float,float,float) -> ext
    float min(float,float) -> min
    float max(float,float) -> max
com.badlogic.gdx.math.collision.Ray -> com.badlogic.gdx.math.collision.Ray:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 origin -> origin
    com.badlogic.gdx.math.Vector3 direction -> direction
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.collision.Ray cpy() -> cpy
    com.badlogic.gdx.math.Vector3 getEndPoint(float) -> getEndPoint
    com.badlogic.gdx.math.Vector3 getEndPoint(com.badlogic.gdx.math.Vector3,float) -> getEndPoint
    com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4) -> mul
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float) -> set
    com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray) -> set
com.badlogic.gdx.math.collision.Segment -> com.badlogic.gdx.math.collision.Segment:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3 a -> a
    com.badlogic.gdx.math.Vector3 b -> b
com.badlogic.gdx.math.collision.Sphere -> com.badlogic.gdx.math.collision.Sphere:
    long serialVersionUID -> serialVersionUID
    float radius -> radius
    com.badlogic.gdx.math.Vector3 center -> center
    boolean overlaps(com.badlogic.gdx.math.collision.Sphere) -> overlaps
com.badlogic.gdx.net.HttpParametersUtils -> com.badlogic.gdx.net.HttpParametersUtils:
    java.lang.String defaultEncoding -> defaultEncoding
    java.lang.String nameValueSeparator -> nameValueSeparator
    java.lang.String parameterSeparator -> parameterSeparator
    java.lang.String convertHttpParameters(java.util.Map) -> convertHttpParameters
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
com.badlogic.gdx.net.HttpStatus -> com.badlogic.gdx.net.HttpStatus:
    int statusCode -> statusCode
    int SC_CONTINUE -> SC_CONTINUE
    int SC_SWITCHING_PROTOCOLS -> SC_SWITCHING_PROTOCOLS
    int SC_PROCESSING -> SC_PROCESSING
    int SC_OK -> SC_OK
    int SC_CREATED -> SC_CREATED
    int SC_ACCEPTED -> SC_ACCEPTED
    int SC_NON_AUTHORITATIVE_INFORMATION -> SC_NON_AUTHORITATIVE_INFORMATION
    int SC_NO_CONTENT -> SC_NO_CONTENT
    int SC_RESET_CONTENT -> SC_RESET_CONTENT
    int SC_PARTIAL_CONTENT -> SC_PARTIAL_CONTENT
    int SC_MULTI_STATUS -> SC_MULTI_STATUS
    int SC_MULTIPLE_CHOICES -> SC_MULTIPLE_CHOICES
    int SC_MOVED_PERMANENTLY -> SC_MOVED_PERMANENTLY
    int SC_MOVED_TEMPORARILY -> SC_MOVED_TEMPORARILY
    int SC_SEE_OTHER -> SC_SEE_OTHER
    int SC_NOT_MODIFIED -> SC_NOT_MODIFIED
    int SC_USE_PROXY -> SC_USE_PROXY
    int SC_TEMPORARY_REDIRECT -> SC_TEMPORARY_REDIRECT
    int SC_BAD_REQUEST -> SC_BAD_REQUEST
    int SC_UNAUTHORIZED -> SC_UNAUTHORIZED
    int SC_PAYMENT_REQUIRED -> SC_PAYMENT_REQUIRED
    int SC_FORBIDDEN -> SC_FORBIDDEN
    int SC_NOT_FOUND -> SC_NOT_FOUND
    int SC_METHOD_NOT_ALLOWED -> SC_METHOD_NOT_ALLOWED
    int SC_NOT_ACCEPTABLE -> SC_NOT_ACCEPTABLE
    int SC_PROXY_AUTHENTICATION_REQUIRED -> SC_PROXY_AUTHENTICATION_REQUIRED
    int SC_REQUEST_TIMEOUT -> SC_REQUEST_TIMEOUT
    int SC_CONFLICT -> SC_CONFLICT
    int SC_GONE -> SC_GONE
    int SC_LENGTH_REQUIRED -> SC_LENGTH_REQUIRED
    int SC_PRECONDITION_FAILED -> SC_PRECONDITION_FAILED
    int SC_REQUEST_TOO_LONG -> SC_REQUEST_TOO_LONG
    int SC_REQUEST_URI_TOO_LONG -> SC_REQUEST_URI_TOO_LONG
    int SC_UNSUPPORTED_MEDIA_TYPE -> SC_UNSUPPORTED_MEDIA_TYPE
    int SC_REQUESTED_RANGE_NOT_SATISFIABLE -> SC_REQUESTED_RANGE_NOT_SATISFIABLE
    int SC_EXPECTATION_FAILED -> SC_EXPECTATION_FAILED
    int SC_INSUFFICIENT_SPACE_ON_RESOURCE -> SC_INSUFFICIENT_SPACE_ON_RESOURCE
    int SC_METHOD_FAILURE -> SC_METHOD_FAILURE
    int SC_UNPROCESSABLE_ENTITY -> SC_UNPROCESSABLE_ENTITY
    int SC_LOCKED -> SC_LOCKED
    int SC_FAILED_DEPENDENCY -> SC_FAILED_DEPENDENCY
    int SC_INTERNAL_SERVER_ERROR -> SC_INTERNAL_SERVER_ERROR
    int SC_NOT_IMPLEMENTED -> SC_NOT_IMPLEMENTED
    int SC_BAD_GATEWAY -> SC_BAD_GATEWAY
    int SC_SERVICE_UNAVAILABLE -> SC_SERVICE_UNAVAILABLE
    int SC_GATEWAY_TIMEOUT -> SC_GATEWAY_TIMEOUT
    int SC_HTTP_VERSION_NOT_SUPPORTED -> SC_HTTP_VERSION_NOT_SUPPORTED
    int SC_INSUFFICIENT_STORAGE -> SC_INSUFFICIENT_STORAGE
    int getStatusCode() -> getStatusCode
com.badlogic.gdx.net.NetJavaImpl -> com.badlogic.gdx.net.NetJavaImpl:
    java.util.concurrent.ExecutorService executorService -> executorService
    com.badlogic.gdx.utils.ObjectMap connections -> connections
    com.badlogic.gdx.utils.ObjectMap listeners -> listeners
    java.util.concurrent.locks.Lock lock -> lock
    void sendHttpRequest(com.badlogic.gdx.Net$HttpRequest,com.badlogic.gdx.Net$HttpResponseListener) -> sendHttpRequest
    void cancelHttpRequest(com.badlogic.gdx.Net$HttpRequest) -> cancelHttpRequest
com.badlogic.gdx.net.NetJavaImpl$1 -> com.badlogic.gdx.net.NetJavaImpl$1:
    boolean val$doingOutPut -> val$doingOutPut
    com.badlogic.gdx.Net$HttpRequest val$httpRequest -> val$httpRequest
    java.net.HttpURLConnection val$connection -> val$connection
    com.badlogic.gdx.Net$HttpResponseListener val$httpResponseListener -> val$httpResponseListener
    com.badlogic.gdx.net.NetJavaImpl this$0 -> this$0
    void run() -> run
com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse -> com.badlogic.gdx.net.NetJavaImpl$HttpClientResponse:
    java.net.HttpURLConnection connection -> connection
    com.badlogic.gdx.net.HttpStatus status -> status
    byte[] getResult() -> getResult
    java.lang.String getResultAsString() -> getResultAsString
    java.io.InputStream getResultAsStream() -> getResultAsStream
    com.badlogic.gdx.net.HttpStatus getStatus() -> getStatus
    java.lang.String getHeader(java.lang.String) -> getHeader
    java.util.Map getHeaders() -> getHeaders
    java.io.InputStream getInputStream() -> getInputStream
com.badlogic.gdx.net.NetJavaServerSocketImpl -> com.badlogic.gdx.net.NetJavaServerSocketImpl:
    com.badlogic.gdx.Net$Protocol protocol -> protocol
    java.net.ServerSocket server -> server
    com.badlogic.gdx.Net$Protocol getProtocol() -> getProtocol
    com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints) -> accept
    void dispose() -> dispose
com.badlogic.gdx.net.NetJavaSocketImpl -> com.badlogic.gdx.net.NetJavaSocketImpl:
    java.net.Socket socket -> socket
    void applyHints(com.badlogic.gdx.net.SocketHints) -> applyHints
    boolean isConnected() -> isConnected
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getRemoteAddress() -> getRemoteAddress
    void dispose() -> dispose
com.badlogic.gdx.net.ServerSocket -> com.badlogic.gdx.net.ServerSocket:
    com.badlogic.gdx.Net$Protocol getProtocol() -> getProtocol
    com.badlogic.gdx.net.Socket accept(com.badlogic.gdx.net.SocketHints) -> accept
com.badlogic.gdx.net.ServerSocketHints -> com.badlogic.gdx.net.ServerSocketHints:
    int backlog -> backlog
    int performancePrefConnectionTime -> performancePrefConnectionTime
    int performancePrefLatency -> performancePrefLatency
    int performancePrefBandwidth -> performancePrefBandwidth
    boolean reuseAddress -> reuseAddress
    int acceptTimeout -> acceptTimeout
    int receiveBufferSize -> receiveBufferSize
com.badlogic.gdx.net.Socket -> com.badlogic.gdx.net.Socket:
    boolean isConnected() -> isConnected
    java.io.InputStream getInputStream() -> getInputStream
    java.io.OutputStream getOutputStream() -> getOutputStream
    java.lang.String getRemoteAddress() -> getRemoteAddress
com.badlogic.gdx.net.SocketHints -> com.badlogic.gdx.net.SocketHints:
    int connectTimeout -> connectTimeout
    int performancePrefConnectionTime -> performancePrefConnectionTime
    int performancePrefLatency -> performancePrefLatency
    int performancePrefBandwidth -> performancePrefBandwidth
    int trafficClass -> trafficClass
    boolean keepAlive -> keepAlive
    boolean tcpNoDelay -> tcpNoDelay
    int sendBufferSize -> sendBufferSize
    int receiveBufferSize -> receiveBufferSize
    boolean linger -> linger
    int lingerDuration -> lingerDuration
    int socketTimeout -> socketTimeout
com.badlogic.gdx.physics.box2d.Body -> com.badlogic.gdx.physics.box2d.Body:
    long addr -> addr
    float[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.World world -> world
    com.badlogic.gdx.utils.Array fixtures -> fixtures
    com.badlogic.gdx.utils.Array joints -> joints
    java.lang.Object userData -> userData
    com.badlogic.gdx.physics.box2d.Transform transform -> transform
    com.badlogic.gdx.math.Vector2 position -> position
    com.badlogic.gdx.math.Vector2 worldCenter -> worldCenter
    com.badlogic.gdx.math.Vector2 localCenter -> localCenter
    com.badlogic.gdx.math.Vector2 linearVelocity -> linearVelocity
    com.badlogic.gdx.physics.box2d.MassData massData -> massData
    com.badlogic.gdx.math.Vector2 localPoint -> localPoint
    com.badlogic.gdx.math.Vector2 worldVector -> worldVector
    com.badlogic.gdx.math.Vector2 localPoint2 -> localPoint2
    com.badlogic.gdx.math.Vector2 localVector -> localVector
    com.badlogic.gdx.math.Vector2 linVelWorld -> linVelWorld
    com.badlogic.gdx.math.Vector2 linVelLoc -> linVelLoc
    void reset(long) -> reset
    com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.FixtureDef) -> createFixture
    long jniCreateFixture(long,long,float,float,float,boolean,short,short,short) -> jniCreateFixture
    com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float) -> createFixture
    long jniCreateFixture(long,long,float) -> jniCreateFixture
    void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture) -> destroyFixture
    void jniDestroyFixture(long,long) -> jniDestroyFixture
    void setTransform(com.badlogic.gdx.math.Vector2,float) -> setTransform
    void setTransform(float,float,float) -> setTransform
    void jniSetTransform(long,float,float,float) -> jniSetTransform
    com.badlogic.gdx.physics.box2d.Transform getTransform() -> getTransform
    void jniGetTransform(long,float[]) -> jniGetTransform
    com.badlogic.gdx.math.Vector2 getPosition() -> getPosition
    void jniGetPosition(long,float[]) -> jniGetPosition
    float getAngle() -> getAngle
    float jniGetAngle(long) -> jniGetAngle
    com.badlogic.gdx.math.Vector2 getWorldCenter() -> getWorldCenter
    void jniGetWorldCenter(long,float[]) -> jniGetWorldCenter
    com.badlogic.gdx.math.Vector2 getLocalCenter() -> getLocalCenter
    void jniGetLocalCenter(long,float[]) -> jniGetLocalCenter
    void setLinearVelocity(com.badlogic.gdx.math.Vector2) -> setLinearVelocity
    void setLinearVelocity(float,float) -> setLinearVelocity
    void jniSetLinearVelocity(long,float,float) -> jniSetLinearVelocity
    com.badlogic.gdx.math.Vector2 getLinearVelocity() -> getLinearVelocity
    void jniGetLinearVelocity(long,float[]) -> jniGetLinearVelocity
    void setAngularVelocity(float) -> setAngularVelocity
    void jniSetAngularVelocity(long,float) -> jniSetAngularVelocity
    float getAngularVelocity() -> getAngularVelocity
    float jniGetAngularVelocity(long) -> jniGetAngularVelocity
    void applyForce(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean) -> applyForce
    void applyForce(float,float,float,float,boolean) -> applyForce
    void jniApplyForce(long,float,float,float,float,boolean) -> jniApplyForce
    void applyForceToCenter(com.badlogic.gdx.math.Vector2,boolean) -> applyForceToCenter
    void applyForceToCenter(float,float,boolean) -> applyForceToCenter
    void jniApplyForceToCenter(long,float,float,boolean) -> jniApplyForceToCenter
    void applyTorque(float,boolean) -> applyTorque
    void jniApplyTorque(long,float,boolean) -> jniApplyTorque
    void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean) -> applyLinearImpulse
    void applyLinearImpulse(float,float,float,float,boolean) -> applyLinearImpulse
    void jniApplyLinearImpulse(long,float,float,float,float,boolean) -> jniApplyLinearImpulse
    void applyAngularImpulse(float,boolean) -> applyAngularImpulse
    void jniApplyAngularImpulse(long,float,boolean) -> jniApplyAngularImpulse
    float getMass() -> getMass
    float jniGetMass(long) -> jniGetMass
    float getInertia() -> getInertia
    float jniGetInertia(long) -> jniGetInertia
    com.badlogic.gdx.physics.box2d.MassData getMassData() -> getMassData
    void jniGetMassData(long,float[]) -> jniGetMassData
    void setMassData(com.badlogic.gdx.physics.box2d.MassData) -> setMassData
    void jniSetMassData(long,float,float,float,float) -> jniSetMassData
    void resetMassData() -> resetMassData
    void jniResetMassData(long) -> jniResetMassData
    com.badlogic.gdx.math.Vector2 getWorldPoint(com.badlogic.gdx.math.Vector2) -> getWorldPoint
    void jniGetWorldPoint(long,float,float,float[]) -> jniGetWorldPoint
    com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2) -> getWorldVector
    void jniGetWorldVector(long,float,float,float[]) -> jniGetWorldVector
    com.badlogic.gdx.math.Vector2 getLocalPoint(com.badlogic.gdx.math.Vector2) -> getLocalPoint
    void jniGetLocalPoint(long,float,float,float[]) -> jniGetLocalPoint
    com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2) -> getLocalVector
    void jniGetLocalVector(long,float,float,float[]) -> jniGetLocalVector
    com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2) -> getLinearVelocityFromWorldPoint
    void jniGetLinearVelocityFromWorldPoint(long,float,float,float[]) -> jniGetLinearVelocityFromWorldPoint
    com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2) -> getLinearVelocityFromLocalPoint
    void jniGetLinearVelocityFromLocalPoint(long,float,float,float[]) -> jniGetLinearVelocityFromLocalPoint
    float getLinearDamping() -> getLinearDamping
    float jniGetLinearDamping(long) -> jniGetLinearDamping
    void setLinearDamping(float) -> setLinearDamping
    void jniSetLinearDamping(long,float) -> jniSetLinearDamping
    float getAngularDamping() -> getAngularDamping
    float jniGetAngularDamping(long) -> jniGetAngularDamping
    void setAngularDamping(float) -> setAngularDamping
    void jniSetAngularDamping(long,float) -> jniSetAngularDamping
    void setType(com.badlogic.gdx.physics.box2d.BodyDef$BodyType) -> setType
    void jniSetType(long,int) -> jniSetType
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType getType() -> getType
    int jniGetType(long) -> jniGetType
    void setBullet(boolean) -> setBullet
    void jniSetBullet(long,boolean) -> jniSetBullet
    boolean isBullet() -> isBullet
    boolean jniIsBullet(long) -> jniIsBullet
    void setSleepingAllowed(boolean) -> setSleepingAllowed
    void jniSetSleepingAllowed(long,boolean) -> jniSetSleepingAllowed
    boolean isSleepingAllowed() -> isSleepingAllowed
    boolean jniIsSleepingAllowed(long) -> jniIsSleepingAllowed
    void setAwake(boolean) -> setAwake
    void jniSetAwake(long,boolean) -> jniSetAwake
    boolean isAwake() -> isAwake
    boolean jniIsAwake(long) -> jniIsAwake
    void setActive(boolean) -> setActive
    void jniSetActive(long,boolean) -> jniSetActive
    boolean isActive() -> isActive
    boolean jniIsActive(long) -> jniIsActive
    void setFixedRotation(boolean) -> setFixedRotation
    void jniSetFixedRotation(long,boolean) -> jniSetFixedRotation
    boolean isFixedRotation() -> isFixedRotation
    boolean jniIsFixedRotation(long) -> jniIsFixedRotation
    com.badlogic.gdx.utils.Array getFixtureList() -> getFixtureList
    com.badlogic.gdx.utils.Array getJointList() -> getJointList
    float getGravityScale() -> getGravityScale
    float jniGetGravityScale(long) -> jniGetGravityScale
    void setGravityScale(float) -> setGravityScale
    void jniSetGravityScale(long,float) -> jniSetGravityScale
    com.badlogic.gdx.physics.box2d.World getWorld() -> getWorld
    java.lang.Object getUserData() -> getUserData
    void setUserData(java.lang.Object) -> setUserData
com.badlogic.gdx.physics.box2d.BodyDef -> com.badlogic.gdx.physics.box2d.BodyDef:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType type -> type
    com.badlogic.gdx.math.Vector2 position -> position
    float angle -> angle
    com.badlogic.gdx.math.Vector2 linearVelocity -> linearVelocity
    float angularVelocity -> angularVelocity
    float linearDamping -> linearDamping
    float angularDamping -> angularDamping
    boolean allowSleep -> allowSleep
    boolean awake -> awake
    boolean fixedRotation -> fixedRotation
    boolean bullet -> bullet
    boolean active -> active
    float gravityScale -> gravityScale
com.badlogic.gdx.physics.box2d.BodyDef$BodyType -> com.badlogic.gdx.physics.box2d.BodyDef$BodyType:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType StaticBody -> StaticBody
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType KinematicBody -> KinematicBody
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType DynamicBody -> DynamicBody
    int value -> value
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] $VALUES -> $VALUES
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] values() -> values
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
com.badlogic.gdx.physics.box2d.Box2DDebugRenderer -> com.badlogic.gdx.physics.box2d.Box2DDebugRenderer:
    com.badlogic.gdx.graphics.glutils.ShapeRenderer renderer -> renderer
    com.badlogic.gdx.math.Vector2[] vertices -> vertices
    com.badlogic.gdx.math.Vector2 lower -> lower
    com.badlogic.gdx.math.Vector2 upper -> upper
    com.badlogic.gdx.utils.Array bodies -> bodies
    com.badlogic.gdx.utils.Array joints -> joints
    boolean drawBodies -> drawBodies
    boolean drawJoints -> drawJoints
    boolean drawAABBs -> drawAABBs
    boolean drawInactiveBodies -> drawInactiveBodies
    boolean drawVelocities -> drawVelocities
    boolean drawContacts -> drawContacts
    com.badlogic.gdx.graphics.Color SHAPE_NOT_ACTIVE -> SHAPE_NOT_ACTIVE
    com.badlogic.gdx.graphics.Color SHAPE_STATIC -> SHAPE_STATIC
    com.badlogic.gdx.graphics.Color SHAPE_KINEMATIC -> SHAPE_KINEMATIC
    com.badlogic.gdx.graphics.Color SHAPE_NOT_AWAKE -> SHAPE_NOT_AWAKE
    com.badlogic.gdx.graphics.Color SHAPE_AWAKE -> SHAPE_AWAKE
    com.badlogic.gdx.graphics.Color JOINT_COLOR -> JOINT_COLOR
    com.badlogic.gdx.graphics.Color AABB_COLOR -> AABB_COLOR
    com.badlogic.gdx.graphics.Color VELOCITY_COLOR -> VELOCITY_COLOR
    com.badlogic.gdx.math.Vector2 t -> t
    com.badlogic.gdx.math.Vector2 axis -> axis
    com.badlogic.gdx.math.Vector2 f -> f
    com.badlogic.gdx.math.Vector2 v -> v
    com.badlogic.gdx.math.Vector2 lv -> lv
    void render(com.badlogic.gdx.physics.box2d.World,com.badlogic.gdx.math.Matrix4) -> render
    void renderBodies(com.badlogic.gdx.physics.box2d.World) -> renderBodies
    void renderBody(com.badlogic.gdx.physics.box2d.Body) -> renderBody
    com.badlogic.gdx.graphics.Color getColorByBody(com.badlogic.gdx.physics.box2d.Body) -> getColorByBody
    void drawAABB(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform) -> drawAABB
    void drawShape(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Transform,com.badlogic.gdx.graphics.Color) -> drawShape
    void drawSolidCircle(com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color) -> drawSolidCircle
    void drawSolidPolygon(com.badlogic.gdx.math.Vector2[],int,com.badlogic.gdx.graphics.Color,boolean) -> drawSolidPolygon
    void drawJoint(com.badlogic.gdx.physics.box2d.Joint) -> drawJoint
    void drawSegment(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.graphics.Color) -> drawSegment
    void drawContact(com.badlogic.gdx.physics.box2d.Contact) -> drawContact
    boolean isDrawBodies() -> isDrawBodies
    void setDrawBodies(boolean) -> setDrawBodies
    boolean isDrawJoints() -> isDrawJoints
    void setDrawJoints(boolean) -> setDrawJoints
    boolean isDrawAABBs() -> isDrawAABBs
    void setDrawAABBs(boolean) -> setDrawAABBs
    boolean isDrawInactiveBodies() -> isDrawInactiveBodies
    void setDrawInactiveBodies(boolean) -> setDrawInactiveBodies
    boolean isDrawVelocities() -> isDrawVelocities
    void setDrawVelocities(boolean) -> setDrawVelocities
    boolean isDrawContacts() -> isDrawContacts
    void setDrawContacts(boolean) -> setDrawContacts
    com.badlogic.gdx.math.Vector2 getAxis() -> getAxis
    void setAxis(com.badlogic.gdx.math.Vector2) -> setAxis
    void dispose() -> dispose
com.badlogic.gdx.physics.box2d.ChainShape -> com.badlogic.gdx.physics.box2d.ChainShape:
    boolean isLooped -> isLooped
    float[] verts -> verts
    long newChainShape() -> newChainShape
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    void createLoop(float[]) -> createLoop
    void createLoop(com.badlogic.gdx.math.Vector2[]) -> createLoop
    void jniCreateLoop(long,float[],int) -> jniCreateLoop
    void createChain(float[]) -> createChain
    void createChain(com.badlogic.gdx.math.Vector2[]) -> createChain
    void jniCreateChain(long,float[],int) -> jniCreateChain
    void setPrevVertex(com.badlogic.gdx.math.Vector2) -> setPrevVertex
    void setPrevVertex(float,float) -> setPrevVertex
    void jniSetPrevVertex(long,float,float) -> jniSetPrevVertex
    void setNextVertex(com.badlogic.gdx.math.Vector2) -> setNextVertex
    void setNextVertex(float,float) -> setNextVertex
    void jniSetNextVertex(long,float,float) -> jniSetNextVertex
    int getVertexCount() -> getVertexCount
    int jniGetVertexCount(long) -> jniGetVertexCount
    void getVertex(int,com.badlogic.gdx.math.Vector2) -> getVertex
    void jniGetVertex(long,int,float[]) -> jniGetVertex
    boolean isLooped() -> isLooped
com.badlogic.gdx.physics.box2d.CircleShape -> com.badlogic.gdx.physics.box2d.CircleShape:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 position -> position
    long newCircleShape() -> newCircleShape
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    com.badlogic.gdx.math.Vector2 getPosition() -> getPosition
    void jniGetPosition(long,float[]) -> jniGetPosition
    void setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
    void jniSetPosition(long,float,float) -> jniSetPosition
com.badlogic.gdx.physics.box2d.Contact -> com.badlogic.gdx.physics.box2d.Contact:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.World world -> world
    com.badlogic.gdx.physics.box2d.WorldManifold worldManifold -> worldManifold
    float[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.WorldManifold getWorldManifold() -> getWorldManifold
    int jniGetWorldManifold(long,float[]) -> jniGetWorldManifold
    boolean isTouching() -> isTouching
    boolean jniIsTouching(long) -> jniIsTouching
    void setEnabled(boolean) -> setEnabled
    void jniSetEnabled(long,boolean) -> jniSetEnabled
    boolean isEnabled() -> isEnabled
    boolean jniIsEnabled(long) -> jniIsEnabled
    com.badlogic.gdx.physics.box2d.Fixture getFixtureA() -> getFixtureA
    long jniGetFixtureA(long) -> jniGetFixtureA
    com.badlogic.gdx.physics.box2d.Fixture getFixtureB() -> getFixtureB
    long jniGetFixtureB(long) -> jniGetFixtureB
    int getChildIndexA() -> getChildIndexA
    int jniGetChildIndexA(long) -> jniGetChildIndexA
    int getChildIndexB() -> getChildIndexB
    int jniGetChildIndexB(long) -> jniGetChildIndexB
    void setFriction(float) -> setFriction
    void jniSetFriction(long,float) -> jniSetFriction
    float getFriction() -> getFriction
    float jniGetFriction(long) -> jniGetFriction
    void resetFriction() -> resetFriction
    void jniResetFriction(long) -> jniResetFriction
    void setRestitution(float) -> setRestitution
    void jniSetRestitution(long,float) -> jniSetRestitution
    float getRestitution() -> getRestitution
    float jniGetRestitution(long) -> jniGetRestitution
    void ResetRestitution() -> ResetRestitution
    void jniResetRestitution(long) -> jniResetRestitution
    float getTangentSpeed() -> getTangentSpeed
    float jniGetTangentSpeed(long) -> jniGetTangentSpeed
    void setTangentSpeed(float) -> setTangentSpeed
    void jniSetTangentSpeed(long,float) -> jniSetTangentSpeed
com.badlogic.gdx.physics.box2d.ContactFilter -> com.badlogic.gdx.physics.box2d.ContactFilter:
    boolean shouldCollide(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.physics.box2d.Fixture) -> shouldCollide
com.badlogic.gdx.physics.box2d.ContactImpulse -> com.badlogic.gdx.physics.box2d.ContactImpulse:
    com.badlogic.gdx.physics.box2d.World world -> world
    long addr -> addr
    float[] tmp -> tmp
    float[] normalImpulses -> normalImpulses
    float[] tangentImpulses -> tangentImpulses
    float[] getNormalImpulses() -> getNormalImpulses
    void jniGetNormalImpulses(long,float[]) -> jniGetNormalImpulses
    float[] getTangentImpulses() -> getTangentImpulses
    void jniGetTangentImpulses(long,float[]) -> jniGetTangentImpulses
    int getCount() -> getCount
    int jniGetCount(long) -> jniGetCount
com.badlogic.gdx.physics.box2d.ContactListener -> com.badlogic.gdx.physics.box2d.ContactListener:
    void beginContact(com.badlogic.gdx.physics.box2d.Contact) -> beginContact
    void endContact(com.badlogic.gdx.physics.box2d.Contact) -> endContact
    void preSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.Manifold) -> preSolve
    void postSolve(com.badlogic.gdx.physics.box2d.Contact,com.badlogic.gdx.physics.box2d.ContactImpulse) -> postSolve
com.badlogic.gdx.physics.box2d.DestructionListener -> com.badlogic.gdx.physics.box2d.DestructionListener:
com.badlogic.gdx.physics.box2d.EdgeShape -> com.badlogic.gdx.physics.box2d.EdgeShape:
    float[] vertex -> vertex
    long newEdgeShape() -> newEdgeShape
    void set(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> set
    void set(float,float,float,float) -> set
    void jniSet(long,float,float,float,float) -> jniSet
    void getVertex1(com.badlogic.gdx.math.Vector2) -> getVertex1
    void jniGetVertex1(long,float[]) -> jniGetVertex1
    void getVertex2(com.badlogic.gdx.math.Vector2) -> getVertex2
    void jniGetVertex2(long,float[]) -> jniGetVertex2
    void getVertex0(com.badlogic.gdx.math.Vector2) -> getVertex0
    void jniGetVertex0(long,float[]) -> jniGetVertex0
    void setVertex0(com.badlogic.gdx.math.Vector2) -> setVertex0
    void setVertex0(float,float) -> setVertex0
    void jniSetVertex0(long,float,float) -> jniSetVertex0
    void getVertex3(com.badlogic.gdx.math.Vector2) -> getVertex3
    void jniGetVertex3(long,float[]) -> jniGetVertex3
    void setVertex3(com.badlogic.gdx.math.Vector2) -> setVertex3
    void setVertex3(float,float) -> setVertex3
    void jniSetVertex3(long,float,float) -> jniSetVertex3
    boolean hasVertex0() -> hasVertex0
    boolean jniHasVertex0(long) -> jniHasVertex0
    void setHasVertex0(boolean) -> setHasVertex0
    void jniSetHasVertex0(long,boolean) -> jniSetHasVertex0
    boolean hasVertex3() -> hasVertex3
    boolean jniHasVertex3(long) -> jniHasVertex3
    void setHasVertex3(boolean) -> setHasVertex3
    void jniSetHasVertex3(long,boolean) -> jniSetHasVertex3
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
com.badlogic.gdx.physics.box2d.Filter -> com.badlogic.gdx.physics.box2d.Filter:
    short categoryBits -> categoryBits
    short maskBits -> maskBits
    short groupIndex -> groupIndex
com.badlogic.gdx.physics.box2d.Fixture -> com.badlogic.gdx.physics.box2d.Fixture:
    com.badlogic.gdx.physics.box2d.Body body -> body
    long addr -> addr
    com.badlogic.gdx.physics.box2d.Shape shape -> shape
    java.lang.Object userData -> userData
    short[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.Filter filter -> filter
    void reset(com.badlogic.gdx.physics.box2d.Body,long) -> reset
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    int jniGetType(long) -> jniGetType
    com.badlogic.gdx.physics.box2d.Shape getShape() -> getShape
    long jniGetShape(long) -> jniGetShape
    void setSensor(boolean) -> setSensor
    void jniSetSensor(long,boolean) -> jniSetSensor
    boolean isSensor() -> isSensor
    boolean jniIsSensor(long) -> jniIsSensor
    void setFilterData(com.badlogic.gdx.physics.box2d.Filter) -> setFilterData
    void jniSetFilterData(long,short,short,short) -> jniSetFilterData
    com.badlogic.gdx.physics.box2d.Filter getFilterData() -> getFilterData
    void jniGetFilterData(long,short[]) -> jniGetFilterData
    void refilter() -> refilter
    void jniRefilter(long) -> jniRefilter
    com.badlogic.gdx.physics.box2d.Body getBody() -> getBody
    boolean testPoint(com.badlogic.gdx.math.Vector2) -> testPoint
    boolean testPoint(float,float) -> testPoint
    boolean jniTestPoint(long,float,float) -> jniTestPoint
    void setDensity(float) -> setDensity
    void jniSetDensity(long,float) -> jniSetDensity
    float getDensity() -> getDensity
    float jniGetDensity(long) -> jniGetDensity
    float getFriction() -> getFriction
    float jniGetFriction(long) -> jniGetFriction
    void setFriction(float) -> setFriction
    void jniSetFriction(long,float) -> jniSetFriction
    float getRestitution() -> getRestitution
    float jniGetRestitution(long) -> jniGetRestitution
    void setRestitution(float) -> setRestitution
    void jniSetRestitution(long,float) -> jniSetRestitution
    void setUserData(java.lang.Object) -> setUserData
    java.lang.Object getUserData() -> getUserData
com.badlogic.gdx.physics.box2d.FixtureDef -> com.badlogic.gdx.physics.box2d.FixtureDef:
    com.badlogic.gdx.physics.box2d.Shape shape -> shape
    float friction -> friction
    float restitution -> restitution
    float density -> density
    boolean isSensor -> isSensor
    com.badlogic.gdx.physics.box2d.Filter filter -> filter
com.badlogic.gdx.physics.box2d.Joint -> com.badlogic.gdx.physics.box2d.Joint:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.World world -> world
    float[] tmp -> tmp
    java.lang.Object userData -> userData
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeA -> jointEdgeA
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeB -> jointEdgeB
    com.badlogic.gdx.math.Vector2 anchorA -> anchorA
    com.badlogic.gdx.math.Vector2 anchorB -> anchorB
    com.badlogic.gdx.math.Vector2 reactionForce -> reactionForce
    com.badlogic.gdx.physics.box2d.JointDef$JointType getType() -> getType
    int jniGetType(long) -> jniGetType
    com.badlogic.gdx.physics.box2d.Body getBodyA() -> getBodyA
    long jniGetBodyA(long) -> jniGetBodyA
    com.badlogic.gdx.physics.box2d.Body getBodyB() -> getBodyB
    long jniGetBodyB(long) -> jniGetBodyB
    com.badlogic.gdx.math.Vector2 getAnchorA() -> getAnchorA
    void jniGetAnchorA(long,float[]) -> jniGetAnchorA
    com.badlogic.gdx.math.Vector2 getAnchorB() -> getAnchorB
    void jniGetAnchorB(long,float[]) -> jniGetAnchorB
    boolean getCollideConnected() -> getCollideConnected
    boolean jniGetCollideConnected(long) -> jniGetCollideConnected
    com.badlogic.gdx.math.Vector2 getReactionForce(float) -> getReactionForce
    void jniGetReactionForce(long,float,float[]) -> jniGetReactionForce
    float getReactionTorque(float) -> getReactionTorque
    float jniGetReactionTorque(long,float) -> jniGetReactionTorque
    java.lang.Object getUserData() -> getUserData
    void setUserData(java.lang.Object) -> setUserData
    boolean isActive() -> isActive
    boolean jniIsActive(long) -> jniIsActive
com.badlogic.gdx.physics.box2d.JointDef -> com.badlogic.gdx.physics.box2d.JointDef:
    com.badlogic.gdx.physics.box2d.JointDef$JointType type -> type
    com.badlogic.gdx.physics.box2d.Body bodyA -> bodyA
    com.badlogic.gdx.physics.box2d.Body bodyB -> bodyB
    boolean collideConnected -> collideConnected
com.badlogic.gdx.physics.box2d.JointDef$JointType -> com.badlogic.gdx.physics.box2d.JointDef$JointType:
    com.badlogic.gdx.physics.box2d.JointDef$JointType Unknown -> Unknown
    com.badlogic.gdx.physics.box2d.JointDef$JointType RevoluteJoint -> RevoluteJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType PrismaticJoint -> PrismaticJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType DistanceJoint -> DistanceJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType PulleyJoint -> PulleyJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType MouseJoint -> MouseJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType GearJoint -> GearJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType WheelJoint -> WheelJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType WeldJoint -> WeldJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType FrictionJoint -> FrictionJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType RopeJoint -> RopeJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType MotorJoint -> MotorJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] valueTypes -> valueTypes
    int value -> value
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] $VALUES -> $VALUES
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] values() -> values
    com.badlogic.gdx.physics.box2d.JointDef$JointType valueOf(java.lang.String) -> valueOf
    int getValue() -> getValue
com.badlogic.gdx.physics.box2d.JointEdge -> com.badlogic.gdx.physics.box2d.JointEdge:
    com.badlogic.gdx.physics.box2d.Body other -> other
    com.badlogic.gdx.physics.box2d.Joint joint -> joint
com.badlogic.gdx.physics.box2d.Manifold -> com.badlogic.gdx.physics.box2d.Manifold:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] points -> points
    com.badlogic.gdx.math.Vector2 localNormal -> localNormal
    com.badlogic.gdx.math.Vector2 localPoint -> localPoint
    int[] tmpInt -> tmpInt
    float[] tmpFloat -> tmpFloat
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType getType() -> getType
    int jniGetType(long) -> jniGetType
    int getPointCount() -> getPointCount
    int jniGetPointCount(long) -> jniGetPointCount
    com.badlogic.gdx.math.Vector2 getLocalNormal() -> getLocalNormal
    void jniGetLocalNormal(long,float[]) -> jniGetLocalNormal
    com.badlogic.gdx.math.Vector2 getLocalPoint() -> getLocalPoint
    void jniGetLocalPoint(long,float[]) -> jniGetLocalPoint
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint[] getPoints() -> getPoints
    int jniGetPoint(long,float[],int) -> jniGetPoint
com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint -> com.badlogic.gdx.physics.box2d.Manifold$ManifoldPoint:
    com.badlogic.gdx.math.Vector2 localPoint -> localPoint
    float normalImpulse -> normalImpulse
    float tangentImpulse -> tangentImpulse
    int contactID -> contactID
    com.badlogic.gdx.physics.box2d.Manifold this$0 -> this$0
    java.lang.String toString() -> toString
com.badlogic.gdx.physics.box2d.Manifold$ManifoldType -> com.badlogic.gdx.physics.box2d.Manifold$ManifoldType:
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType Circle -> Circle
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType FaceA -> FaceA
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType FaceB -> FaceB
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType[] $VALUES -> $VALUES
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType[] values() -> values
    com.badlogic.gdx.physics.box2d.Manifold$ManifoldType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.MassData -> com.badlogic.gdx.physics.box2d.MassData:
    float mass -> mass
    com.badlogic.gdx.math.Vector2 center -> center
    float I -> I
com.badlogic.gdx.physics.box2d.PolygonShape -> com.badlogic.gdx.physics.box2d.PolygonShape:
    float[] verts -> verts
    long newPolygonShape() -> newPolygonShape
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    void set(com.badlogic.gdx.math.Vector2[]) -> set
    void set(float[]) -> set
    void set(float[],int,int) -> set
    void jniSet(long,float[],int,int) -> jniSet
    void setAsBox(float,float) -> setAsBox
    void jniSetAsBox(long,float,float) -> jniSetAsBox
    void setAsBox(float,float,com.badlogic.gdx.math.Vector2,float) -> setAsBox
    void jniSetAsBox(long,float,float,float,float,float) -> jniSetAsBox
    int getVertexCount() -> getVertexCount
    int jniGetVertexCount(long) -> jniGetVertexCount
    void getVertex(int,com.badlogic.gdx.math.Vector2) -> getVertex
    void jniGetVertex(long,int,float[]) -> jniGetVertex
com.badlogic.gdx.physics.box2d.QueryCallback -> com.badlogic.gdx.physics.box2d.QueryCallback:
    boolean reportFixture(com.badlogic.gdx.physics.box2d.Fixture) -> reportFixture
com.badlogic.gdx.physics.box2d.RayCastCallback -> com.badlogic.gdx.physics.box2d.RayCastCallback:
    float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> reportRayFixture
com.badlogic.gdx.physics.box2d.Shape -> com.badlogic.gdx.physics.box2d.Shape:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    float getRadius() -> getRadius
    float jniGetRadius(long) -> jniGetRadius
    void setRadius(float) -> setRadius
    void jniSetRadius(long,float) -> jniSetRadius
    void dispose() -> dispose
    void jniDispose(long) -> jniDispose
    int jniGetType(long) -> jniGetType
    int getChildCount() -> getChildCount
    int jniGetChildCount(long) -> jniGetChildCount
com.badlogic.gdx.physics.box2d.Shape$Type -> com.badlogic.gdx.physics.box2d.Shape$Type:
    com.badlogic.gdx.physics.box2d.Shape$Type Circle -> Circle
    com.badlogic.gdx.physics.box2d.Shape$Type Edge -> Edge
    com.badlogic.gdx.physics.box2d.Shape$Type Polygon -> Polygon
    com.badlogic.gdx.physics.box2d.Shape$Type Chain -> Chain
    com.badlogic.gdx.physics.box2d.Shape$Type[] $VALUES -> $VALUES
    com.badlogic.gdx.physics.box2d.Shape$Type[] values() -> values
    com.badlogic.gdx.physics.box2d.Shape$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.Transform -> com.badlogic.gdx.physics.box2d.Transform:
    int POS_X -> POS_X
    int POS_Y -> POS_Y
    int COS -> COS
    int SIN -> SIN
    float[] vals -> vals
    com.badlogic.gdx.math.Vector2 position -> position
    com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2) -> mul
    com.badlogic.gdx.math.Vector2 getPosition() -> getPosition
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
com.badlogic.gdx.physics.box2d.World -> com.badlogic.gdx.physics.box2d.World:
    com.badlogic.gdx.utils.Pool freeBodies -> freeBodies
    com.badlogic.gdx.utils.Pool freeFixtures -> freeFixtures
    long addr -> addr
    com.badlogic.gdx.utils.LongMap bodies -> bodies
    com.badlogic.gdx.utils.LongMap fixtures -> fixtures
    com.badlogic.gdx.utils.LongMap joints -> joints
    com.badlogic.gdx.physics.box2d.ContactFilter contactFilter -> contactFilter
    com.badlogic.gdx.physics.box2d.ContactListener contactListener -> contactListener
    float[] tmpGravity -> tmpGravity
    com.badlogic.gdx.math.Vector2 gravity -> gravity
    com.badlogic.gdx.physics.box2d.QueryCallback queryCallback -> queryCallback
    long[] contactAddrs -> contactAddrs
    com.badlogic.gdx.utils.Array contacts -> contacts
    com.badlogic.gdx.utils.Array freeContacts -> freeContacts
    com.badlogic.gdx.physics.box2d.Contact contact -> contact
    com.badlogic.gdx.physics.box2d.Manifold manifold -> manifold
    com.badlogic.gdx.physics.box2d.ContactImpulse impulse -> impulse
    com.badlogic.gdx.physics.box2d.RayCastCallback rayCastCallback -> rayCastCallback
    com.badlogic.gdx.math.Vector2 rayPoint -> rayPoint
    com.badlogic.gdx.math.Vector2 rayNormal -> rayNormal
    long newWorld(float,float,boolean) -> newWorld
    void setDestructionListener(com.badlogic.gdx.physics.box2d.DestructionListener) -> setDestructionListener
    void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter) -> setContactFilter
    void setUseDefaultContactFilter(boolean) -> setUseDefaultContactFilter
    void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener) -> setContactListener
    com.badlogic.gdx.physics.box2d.Body createBody(com.badlogic.gdx.physics.box2d.BodyDef) -> createBody
    long jniCreateBody(long,int,float,float,float,float,float,float,float,float,boolean,boolean,boolean,boolean,boolean,float) -> jniCreateBody
    void destroyBody(com.badlogic.gdx.physics.box2d.Body) -> destroyBody
    void jniDestroyBody(long,long) -> jniDestroyBody
    com.badlogic.gdx.physics.box2d.Joint createJoint(com.badlogic.gdx.physics.box2d.JointDef) -> createJoint
    long createProperJoint(com.badlogic.gdx.physics.box2d.JointDef) -> createProperJoint
    long jniCreateWheelJoint(long,long,long,boolean,float,float,float,float,float,float,boolean,float,float,float,float) -> jniCreateWheelJoint
    long jniCreateRopeJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateRopeJoint
    long jniCreateDistanceJoint(long,long,long,boolean,float,float,float,float,float,float,float) -> jniCreateDistanceJoint
    long jniCreateFrictionJoint(long,long,long,boolean,float,float,float,float,float,float) -> jniCreateFrictionJoint
    long jniCreateGearJoint(long,long,long,boolean,long,long,float) -> jniCreateGearJoint
    long jniCreateMotorJoint(long,long,long,boolean,float,float,float,float,float,float) -> jniCreateMotorJoint
    long jniCreateMouseJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateMouseJoint
    long jniCreatePrismaticJoint(long,long,long,boolean,float,float,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreatePrismaticJoint
    long jniCreatePulleyJoint(long,long,long,boolean,float,float,float,float,float,float,float,float,float,float,float) -> jniCreatePulleyJoint
    long jniCreateRevoluteJoint(long,long,long,boolean,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreateRevoluteJoint
    long jniCreateWeldJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateWeldJoint
    void destroyJoint(com.badlogic.gdx.physics.box2d.Joint) -> destroyJoint
    void jniDestroyJoint(long,long) -> jniDestroyJoint
    void step(float,int,int) -> step
    void jniStep(long,float,int,int) -> jniStep
    void clearForces() -> clearForces
    void jniClearForces(long) -> jniClearForces
    void setWarmStarting(boolean) -> setWarmStarting
    void jniSetWarmStarting(long,boolean) -> jniSetWarmStarting
    void setContinuousPhysics(boolean) -> setContinuousPhysics
    void jniSetContiousPhysics(long,boolean) -> jniSetContiousPhysics
    int getProxyCount() -> getProxyCount
    int jniGetProxyCount(long) -> jniGetProxyCount
    int getBodyCount() -> getBodyCount
    int jniGetBodyCount(long) -> jniGetBodyCount
    int getJointCount() -> getJointCount
    int jniGetJointcount(long) -> jniGetJointcount
    int getContactCount() -> getContactCount
    int jniGetContactCount(long) -> jniGetContactCount
    void setGravity(com.badlogic.gdx.math.Vector2) -> setGravity
    void jniSetGravity(long,float,float) -> jniSetGravity
    com.badlogic.gdx.math.Vector2 getGravity() -> getGravity
    void jniGetGravity(long,float[]) -> jniGetGravity
    boolean isLocked() -> isLocked
    boolean jniIsLocked(long) -> jniIsLocked
    void setAutoClearForces(boolean) -> setAutoClearForces
    void jniSetAutoClearForces(long,boolean) -> jniSetAutoClearForces
    boolean getAutoClearForces() -> getAutoClearForces
    boolean jniGetAutoClearForces(long) -> jniGetAutoClearForces
    void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float) -> QueryAABB
    void jniQueryAABB(long,float,float,float,float) -> jniQueryAABB
    com.badlogic.gdx.utils.Array getContactList() -> getContactList
    void getBodies(com.badlogic.gdx.utils.Array) -> getBodies
    void getJoints(com.badlogic.gdx.utils.Array) -> getJoints
    void jniGetContactList(long,long[]) -> jniGetContactList
    void dispose() -> dispose
    void jniDispose(long) -> jniDispose
    boolean contactFilter(long,long) -> contactFilter
    void beginContact(long) -> beginContact
    void endContact(long) -> endContact
    void preSolve(long,long) -> preSolve
    void postSolve(long,long) -> postSolve
    boolean reportFixture(long) -> reportFixture
    void setVelocityThreshold(float) -> setVelocityThreshold
    float getVelocityThreshold() -> getVelocityThreshold
    void rayCast(com.badlogic.gdx.physics.box2d.RayCastCallback,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> rayCast
    void jniRayCast(long,float,float,float,float) -> jniRayCast
    float reportRayFixture(long,float,float,float,float,float) -> reportRayFixture
com.badlogic.gdx.physics.box2d.World$1 -> com.badlogic.gdx.physics.box2d.World$1:
    com.badlogic.gdx.physics.box2d.World this$0 -> this$0
    com.badlogic.gdx.physics.box2d.Body newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.box2d.World$2 -> com.badlogic.gdx.physics.box2d.World$2:
    com.badlogic.gdx.physics.box2d.World this$0 -> this$0
    com.badlogic.gdx.physics.box2d.Fixture newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.box2d.WorldManifold -> com.badlogic.gdx.physics.box2d.WorldManifold:
    com.badlogic.gdx.math.Vector2 normal -> normal
    com.badlogic.gdx.math.Vector2[] points -> points
    float[] separations -> separations
    int numContactPoints -> numContactPoints
    com.badlogic.gdx.math.Vector2 getNormal() -> getNormal
    com.badlogic.gdx.math.Vector2[] getPoints() -> getPoints
    float[] getSeparations() -> getSeparations
    int getNumberOfContactPoints() -> getNumberOfContactPoints
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D -> com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D:
    com.badlogic.gdx.physics.box2d.World world -> world
    com.badlogic.gdx.math.Vector2 startPoint -> startPoint
    com.badlogic.gdx.math.Vector2 endPoint -> endPoint
    boolean particleCollided -> particleCollided
    float normalAngle -> normalAngle
    float EPSILON -> EPSILON
    com.badlogic.gdx.physics.box2d.RayCastCallback rayCallBack -> rayCallBack
    com.badlogic.gdx.graphics.g2d.ParticleEmitter$Particle newParticle(com.badlogic.gdx.graphics.g2d.Sprite) -> newParticle
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D$1 -> com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D$1:
    com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D this$0 -> this$0
    float reportRayFixture(com.badlogic.gdx.physics.box2d.Fixture,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> reportRayFixture
com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D$ParticleBox2D -> com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D$ParticleBox2D:
    com.badlogic.gdx.physics.box2d.graphics.ParticleEmitterBox2D this$0 -> this$0
    void translate(float,float) -> translate
com.badlogic.gdx.physics.box2d.joints.DistanceJoint -> com.badlogic.gdx.physics.box2d.joints.DistanceJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 getLocalAnchorA() -> getLocalAnchorA
    void jniGetLocalAnchorA(long,float[]) -> jniGetLocalAnchorA
    com.badlogic.gdx.math.Vector2 getLocalAnchorB() -> getLocalAnchorB
    void jniGetLocalAnchorB(long,float[]) -> jniGetLocalAnchorB
    void setLength(float) -> setLength
    void jniSetLength(long,float) -> jniSetLength
    float getLength() -> getLength
    float jniGetLength(long) -> jniGetLength
    void setFrequency(float) -> setFrequency
    void jniSetFrequency(long,float) -> jniSetFrequency
    float getFrequency() -> getFrequency
    float jniGetFrequency(long) -> jniGetFrequency
    void setDampingRatio(float) -> setDampingRatio
    void jniSetDampingRatio(long,float) -> jniSetDampingRatio
    float getDampingRatio() -> getDampingRatio
    float jniGetDampingRatio(long) -> jniGetDampingRatio
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef -> com.badlogic.gdx.physics.box2d.joints.DistanceJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float length -> length
    float frequencyHz -> frequencyHz
    float dampingRatio -> dampingRatio
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.FrictionJoint -> com.badlogic.gdx.physics.box2d.joints.FrictionJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 getLocalAnchorA() -> getLocalAnchorA
    void jniGetLocalAnchorA(long,float[]) -> jniGetLocalAnchorA
    com.badlogic.gdx.math.Vector2 getLocalAnchorB() -> getLocalAnchorB
    void jniGetLocalAnchorB(long,float[]) -> jniGetLocalAnchorB
    void setMaxForce(float) -> setMaxForce
    void jniSetMaxForce(long,float) -> jniSetMaxForce
    float getMaxForce() -> getMaxForce
    float jniGetMaxForce(long) -> jniGetMaxForce
    void setMaxTorque(float) -> setMaxTorque
    void jniSetMaxTorque(long,float) -> jniSetMaxTorque
    float getMaxTorque() -> getMaxTorque
    float jniGetMaxTorque(long) -> jniGetMaxTorque
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef -> com.badlogic.gdx.physics.box2d.joints.FrictionJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float maxForce -> maxForce
    float maxTorque -> maxTorque
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.GearJoint -> com.badlogic.gdx.physics.box2d.joints.GearJoint:
    com.badlogic.gdx.physics.box2d.Joint joint1 -> joint1
    com.badlogic.gdx.physics.box2d.Joint joint2 -> joint2
    com.badlogic.gdx.physics.box2d.Joint getJoint1() -> getJoint1
    long jniGetJoint1(long) -> jniGetJoint1
    com.badlogic.gdx.physics.box2d.Joint getJoint2() -> getJoint2
    long jniGetJoint2(long) -> jniGetJoint2
    void setRatio(float) -> setRatio
    void jniSetRatio(long,float) -> jniSetRatio
    float getRatio() -> getRatio
    float jniGetRatio(long) -> jniGetRatio
com.badlogic.gdx.physics.box2d.joints.GearJointDef -> com.badlogic.gdx.physics.box2d.joints.GearJointDef:
    com.badlogic.gdx.physics.box2d.Joint joint1 -> joint1
    com.badlogic.gdx.physics.box2d.Joint joint2 -> joint2
    float ratio -> ratio
com.badlogic.gdx.physics.box2d.joints.MotorJoint -> com.badlogic.gdx.physics.box2d.joints.MotorJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 linearOffset -> linearOffset
    com.badlogic.gdx.math.Vector2 getLinearOffset() -> getLinearOffset
    void jniGetLinearOffset(long,float[]) -> jniGetLinearOffset
    void setLinearOffset(com.badlogic.gdx.math.Vector2) -> setLinearOffset
    void jniSetLinearOffset(long,float,float) -> jniSetLinearOffset
    float getAngularOffset() -> getAngularOffset
    float jniGetAngularOffset(long) -> jniGetAngularOffset
    void setAngularOffset(float) -> setAngularOffset
    void jniSetAngularOffset(long,float) -> jniSetAngularOffset
    float getMaxForce() -> getMaxForce
    float jniGetMaxForce(long) -> jniGetMaxForce
    void setMaxForce(float) -> setMaxForce
    void jniSetMaxForce(long,float) -> jniSetMaxForce
    float getMaxTorque() -> getMaxTorque
    float jniGetMaxTorque(long) -> jniGetMaxTorque
    void setMaxTorque(float) -> setMaxTorque
    void jniSetMaxTorque(long,float) -> jniSetMaxTorque
    float getCorrectionFactor() -> getCorrectionFactor
    float jniGetCorrectionFactor(long) -> jniGetCorrectionFactor
    void setCorrectionFactor(float) -> setCorrectionFactor
    void jniSetCorrectionFactor(long,float) -> jniSetCorrectionFactor
com.badlogic.gdx.physics.box2d.joints.MotorJointDef -> com.badlogic.gdx.physics.box2d.joints.MotorJointDef:
    com.badlogic.gdx.math.Vector2 linearOffset -> linearOffset
    float angularOffset -> angularOffset
    float maxForce -> maxForce
    float maxTorque -> maxTorque
    float correctionFactor -> correctionFactor
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body) -> initialize
com.badlogic.gdx.physics.box2d.joints.MouseJoint -> com.badlogic.gdx.physics.box2d.joints.MouseJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 target -> target
    void setTarget(com.badlogic.gdx.math.Vector2) -> setTarget
    void jniSetTarget(long,float,float) -> jniSetTarget
    com.badlogic.gdx.math.Vector2 getTarget() -> getTarget
    void jniGetTarget(long,float[]) -> jniGetTarget
    void setMaxForce(float) -> setMaxForce
    void jniSetMaxForce(long,float) -> jniSetMaxForce
    float getMaxForce() -> getMaxForce
    float jniGetMaxForce(long) -> jniGetMaxForce
    void setFrequency(float) -> setFrequency
    void jniSetFrequency(long,float) -> jniSetFrequency
    float getFrequency() -> getFrequency
    float jniGetFrequency(long) -> jniGetFrequency
    void setDampingRatio(float) -> setDampingRatio
    void jniSetDampingRatio(long,float) -> jniSetDampingRatio
    float getDampingRatio() -> getDampingRatio
    float jniGetDampingRatio(long) -> jniGetDampingRatio
com.badlogic.gdx.physics.box2d.joints.MouseJointDef -> com.badlogic.gdx.physics.box2d.joints.MouseJointDef:
    com.badlogic.gdx.math.Vector2 target -> target
    float maxForce -> maxForce
    float frequencyHz -> frequencyHz
    float dampingRatio -> dampingRatio
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint -> com.badlogic.gdx.physics.box2d.joints.PrismaticJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 localAxisA -> localAxisA
    com.badlogic.gdx.math.Vector2 getLocalAnchorA() -> getLocalAnchorA
    void jniGetLocalAnchorA(long,float[]) -> jniGetLocalAnchorA
    com.badlogic.gdx.math.Vector2 getLocalAnchorB() -> getLocalAnchorB
    void jniGetLocalAnchorB(long,float[]) -> jniGetLocalAnchorB
    com.badlogic.gdx.math.Vector2 getLocalAxisA() -> getLocalAxisA
    void jniGetLocalAxisA(long,float[]) -> jniGetLocalAxisA
    float getJointTranslation() -> getJointTranslation
    float jniGetJointTranslation(long) -> jniGetJointTranslation
    float getJointSpeed() -> getJointSpeed
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    boolean isLimitEnabled() -> isLimitEnabled
    boolean jniIsLimitEnabled(long) -> jniIsLimitEnabled
    void enableLimit(boolean) -> enableLimit
    void jniEnableLimit(long,boolean) -> jniEnableLimit
    float getLowerLimit() -> getLowerLimit
    float jniGetLowerLimit(long) -> jniGetLowerLimit
    float getUpperLimit() -> getUpperLimit
    float jniGetUpperLimit(long) -> jniGetUpperLimit
    void setLimits(float,float) -> setLimits
    void jniSetLimits(long,float,float) -> jniSetLimits
    boolean isMotorEnabled() -> isMotorEnabled
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    void enableMotor(boolean) -> enableMotor
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    void setMotorSpeed(float) -> setMotorSpeed
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    float getMotorSpeed() -> getMotorSpeed
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    void setMaxMotorForce(float) -> setMaxMotorForce
    void jniSetMaxMotorForce(long,float) -> jniSetMaxMotorForce
    float getMotorForce(float) -> getMotorForce
    float jniGetMotorForce(long,float) -> jniGetMotorForce
    float getMaxMotorForce() -> getMaxMotorForce
    float jniGetMaxMotorForce(long) -> jniGetMaxMotorForce
    float getReferenceAngle() -> getReferenceAngle
    float jniGetReferenceAngle(long) -> jniGetReferenceAngle
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef -> com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 localAxisA -> localAxisA
    float referenceAngle -> referenceAngle
    boolean enableLimit -> enableLimit
    float lowerTranslation -> lowerTranslation
    float upperTranslation -> upperTranslation
    boolean enableMotor -> enableMotor
    float maxMotorForce -> maxMotorForce
    float motorSpeed -> motorSpeed
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.PulleyJoint -> com.badlogic.gdx.physics.box2d.joints.PulleyJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 groundAnchorA -> groundAnchorA
    com.badlogic.gdx.math.Vector2 groundAnchorB -> groundAnchorB
    com.badlogic.gdx.math.Vector2 getGroundAnchorA() -> getGroundAnchorA
    void jniGetGroundAnchorA(long,float[]) -> jniGetGroundAnchorA
    com.badlogic.gdx.math.Vector2 getGroundAnchorB() -> getGroundAnchorB
    void jniGetGroundAnchorB(long,float[]) -> jniGetGroundAnchorB
    float getLength1() -> getLength1
    float jniGetLength1(long) -> jniGetLength1
    float getLength2() -> getLength2
    float jniGetLength2(long) -> jniGetLength2
    float getRatio() -> getRatio
    float jniGetRatio(long) -> jniGetRatio
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef -> com.badlogic.gdx.physics.box2d.joints.PulleyJointDef:
    float minPulleyLength -> minPulleyLength
    com.badlogic.gdx.math.Vector2 groundAnchorA -> groundAnchorA
    com.badlogic.gdx.math.Vector2 groundAnchorB -> groundAnchorB
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float lengthA -> lengthA
    float lengthB -> lengthB
    float ratio -> ratio
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> initialize
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint -> com.badlogic.gdx.physics.box2d.joints.RevoluteJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float getJointAngle() -> getJointAngle
    float jniGetJointAngle(long) -> jniGetJointAngle
    float getJointSpeed() -> getJointSpeed
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    boolean isLimitEnabled() -> isLimitEnabled
    boolean jniIsLimitEnabled(long) -> jniIsLimitEnabled
    void enableLimit(boolean) -> enableLimit
    void jniEnableLimit(long,boolean) -> jniEnableLimit
    float getLowerLimit() -> getLowerLimit
    float jniGetLowerLimit(long) -> jniGetLowerLimit
    float getUpperLimit() -> getUpperLimit
    float jniGetUpperLimit(long) -> jniGetUpperLimit
    void setLimits(float,float) -> setLimits
    void jniSetLimits(long,float,float) -> jniSetLimits
    boolean isMotorEnabled() -> isMotorEnabled
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    void enableMotor(boolean) -> enableMotor
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    void setMotorSpeed(float) -> setMotorSpeed
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    float getMotorSpeed() -> getMotorSpeed
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    void setMaxMotorTorque(float) -> setMaxMotorTorque
    void jniSetMaxMotorTorque(long,float) -> jniSetMaxMotorTorque
    float getMotorTorque(float) -> getMotorTorque
    float jniGetMotorTorque(long,float) -> jniGetMotorTorque
    com.badlogic.gdx.math.Vector2 getLocalAnchorA() -> getLocalAnchorA
    void jniGetLocalAnchorA(long,float[]) -> jniGetLocalAnchorA
    com.badlogic.gdx.math.Vector2 getLocalAnchorB() -> getLocalAnchorB
    void jniGetLocalAnchorB(long,float[]) -> jniGetLocalAnchorB
    float getReferenceAngle() -> getReferenceAngle
    float jniGetReferenceAngle(long) -> jniGetReferenceAngle
    float getMaxMotorTorque() -> getMaxMotorTorque
    float jniGetMaxMotorTorque(long) -> jniGetMaxMotorTorque
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef -> com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float referenceAngle -> referenceAngle
    boolean enableLimit -> enableLimit
    float lowerAngle -> lowerAngle
    float upperAngle -> upperAngle
    boolean enableMotor -> enableMotor
    float motorSpeed -> motorSpeed
    float maxMotorTorque -> maxMotorTorque
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.RopeJoint -> com.badlogic.gdx.physics.box2d.joints.RopeJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 getLocalAnchorA() -> getLocalAnchorA
    void jniGetLocalAnchorA(long,float[]) -> jniGetLocalAnchorA
    com.badlogic.gdx.math.Vector2 getLocalAnchorB() -> getLocalAnchorB
    void jniGetLocalAnchorB(long,float[]) -> jniGetLocalAnchorB
    float getMaxLength() -> getMaxLength
    float jniGetMaxLength(long) -> jniGetMaxLength
    void setMaxLength(float) -> setMaxLength
    float jniSetMaxLength(long,float) -> jniSetMaxLength
com.badlogic.gdx.physics.box2d.joints.RopeJointDef -> com.badlogic.gdx.physics.box2d.joints.RopeJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float maxLength -> maxLength
com.badlogic.gdx.physics.box2d.joints.WeldJoint -> com.badlogic.gdx.physics.box2d.joints.WeldJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 getLocalAnchorA() -> getLocalAnchorA
    void jniGetLocalAnchorA(long,float[]) -> jniGetLocalAnchorA
    com.badlogic.gdx.math.Vector2 getLocalAnchorB() -> getLocalAnchorB
    void jniGetLocalAnchorB(long,float[]) -> jniGetLocalAnchorB
    float getReferenceAngle() -> getReferenceAngle
    float jniGetReferenceAngle(long) -> jniGetReferenceAngle
com.badlogic.gdx.physics.box2d.joints.WeldJointDef -> com.badlogic.gdx.physics.box2d.joints.WeldJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float referenceAngle -> referenceAngle
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.WheelJoint -> com.badlogic.gdx.physics.box2d.joints.WheelJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 localAxisA -> localAxisA
    com.badlogic.gdx.math.Vector2 getLocalAnchorA() -> getLocalAnchorA
    void jniGetLocalAnchorA(long,float[]) -> jniGetLocalAnchorA
    com.badlogic.gdx.math.Vector2 getLocalAnchorB() -> getLocalAnchorB
    void jniGetLocalAnchorB(long,float[]) -> jniGetLocalAnchorB
    com.badlogic.gdx.math.Vector2 getLocalAxisA() -> getLocalAxisA
    void jniGetLocalAxisA(long,float[]) -> jniGetLocalAxisA
    float getJointTranslation() -> getJointTranslation
    float jniGetJointTranslation(long) -> jniGetJointTranslation
    float getJointSpeed() -> getJointSpeed
    float jniGetJointSpeed(long) -> jniGetJointSpeed
    boolean isMotorEnabled() -> isMotorEnabled
    boolean jniIsMotorEnabled(long) -> jniIsMotorEnabled
    void enableMotor(boolean) -> enableMotor
    void jniEnableMotor(long,boolean) -> jniEnableMotor
    void setMotorSpeed(float) -> setMotorSpeed
    void jniSetMotorSpeed(long,float) -> jniSetMotorSpeed
    float getMotorSpeed() -> getMotorSpeed
    float jniGetMotorSpeed(long) -> jniGetMotorSpeed
    void setMaxMotorTorque(float) -> setMaxMotorTorque
    void jniSetMaxMotorTorque(long,float) -> jniSetMaxMotorTorque
    float getMaxMotorTorque() -> getMaxMotorTorque
    float jniGetMaxMotorTorque(long) -> jniGetMaxMotorTorque
    float getMotorTorque(float) -> getMotorTorque
    float jniGetMotorTorque(long,float) -> jniGetMotorTorque
    void setSpringFrequencyHz(float) -> setSpringFrequencyHz
    void jniSetSpringFrequencyHz(long,float) -> jniSetSpringFrequencyHz
    float getSpringFrequencyHz() -> getSpringFrequencyHz
    float jniGetSpringFrequencyHz(long) -> jniGetSpringFrequencyHz
    void setSpringDampingRatio(float) -> setSpringDampingRatio
    void jniSetSpringDampingRatio(long,float) -> jniSetSpringDampingRatio
    float getSpringDampingRatio() -> getSpringDampingRatio
    float jniGetSpringDampingRatio(long) -> jniGetSpringDampingRatio
com.badlogic.gdx.physics.box2d.joints.WheelJointDef -> com.badlogic.gdx.physics.box2d.joints.WheelJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 localAxisA -> localAxisA
    boolean enableMotor -> enableMotor
    float maxMotorTorque -> maxMotorTorque
    float motorSpeed -> motorSpeed
    float frequencyHz -> frequencyHz
    float dampingRatio -> dampingRatio
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.utils.Box2DBuild -> com.badlogic.gdx.physics.box2d.utils.Box2DBuild:
    void main(java.lang.String[]) -> main
com.badlogic.gdx.physics.bullet.Bullet -> com.badlogic.gdx.physics.bullet.Bullet:
    boolean useRefCounting -> useRefCounting
    boolean enableLogging -> enableLogging
    com.badlogic.gdx.utils.Pool shapePartPool -> shapePartPool
    com.badlogic.gdx.utils.Array shapePartArray -> shapePartArray
    com.badlogic.gdx.math.Matrix4 idt -> idt
    com.badlogic.gdx.math.Matrix4 tmpM -> tmpM
    void init() -> init
    void init(boolean) -> init
    void init(boolean,boolean) -> init
    void getShapeParts(com.badlogic.gdx.graphics.g3d.model.Node,boolean,com.badlogic.gdx.utils.Array,int,com.badlogic.gdx.utils.Pool) -> getShapeParts
    void getShapeParts(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array,int,com.badlogic.gdx.utils.Pool) -> getShapeParts
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape obtainStaticNodeShape(com.badlogic.gdx.graphics.g3d.model.Node,boolean) -> obtainStaticNodeShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape obtainStaticNodeShape(com.badlogic.gdx.utils.Array) -> obtainStaticNodeShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape obtainStaticShape(com.badlogic.gdx.utils.Array) -> obtainStaticShape
com.badlogic.gdx.physics.bullet.Bullet$1 -> com.badlogic.gdx.physics.bullet.Bullet$1:
    com.badlogic.gdx.physics.bullet.Bullet$ShapePart newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.Bullet$ShapePart -> com.badlogic.gdx.physics.bullet.Bullet$ShapePart:
    com.badlogic.gdx.utils.Array parts -> parts
    com.badlogic.gdx.math.Matrix4 transform -> transform
com.badlogic.gdx.physics.bullet.BulletBase -> com.badlogic.gdx.physics.bullet.BulletBase:
    long cPointer -> cPointer
    boolean swigCMemOwn -> swigCMemOwn
    boolean disposed -> disposed
    boolean destroyed -> destroyed
    java.lang.String className -> className
    int refCount -> refCount
    void obtain() -> obtain
    void release() -> release
    boolean isObtained() -> isObtained
    void construct() -> construct
    void reset(long,boolean) -> reset
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    long getCPointer() -> getCPointer
    void takeOwnership() -> takeOwnership
    void releaseOwnership() -> releaseOwnership
    boolean hasOwnership() -> hasOwnership
    void delete() -> delete
    void dispose() -> dispose
    boolean isDisposed() -> isDisposed
    java.lang.String toString() -> toString
    void destroy() -> destroy
    void finalize() -> finalize
com.badlogic.gdx.physics.bullet.BulletBuild -> com.badlogic.gdx.physics.bullet.BulletBuild:
    void main(java.lang.String[]) -> main
com.badlogic.gdx.physics.bullet.DebugDrawer -> com.badlogic.gdx.physics.bullet.DebugDrawer:
    int debugMode -> debugMode
    com.badlogic.gdx.graphics.glutils.ShapeRenderer shapeRenderer -> shapeRenderer
    void drawLine(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> drawLine
    void drawContactPoint(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,int,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> drawContactPoint
    void reportErrorWarning(java.lang.String) -> reportErrorWarning
    void draw3dText(com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.lang.String) -> draw3dText
    void setDebugMode(int) -> setDebugMode
    int getDebugMode() -> getDebugMode
    void begin(com.badlogic.gdx.graphics.Camera) -> begin
    void end() -> end
com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback -> com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void setCollisionObjects(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray) -> setCollisionObjects
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray getCollisionObjects() -> getCollisionObjects
    void setRayFromWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setRayFromWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayFromWorld() -> getRayFromWorld
    void setRayToWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setRayToWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayToWorld() -> getRayToWorld
    void setHitNormalWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> setHitNormalWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getHitNormalWorld() -> getHitNormalWorld
    void setHitPointWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> setHitPointWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getHitPointWorld() -> getHitPointWorld
    void setHitFractions(com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> setHitFractions
    com.badlogic.gdx.physics.bullet.linearmath.btScalarArray getHitFractions() -> getHitFractions
    float addSingleResult(com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean) -> addSingleResult
com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes -> com.badlogic.gdx.physics.bullet.collision.BroadphaseNativeTypes:
    int BOX_SHAPE_PROXYTYPE -> BOX_SHAPE_PROXYTYPE
    int TRIANGLE_SHAPE_PROXYTYPE -> TRIANGLE_SHAPE_PROXYTYPE
    int TETRAHEDRAL_SHAPE_PROXYTYPE -> TETRAHEDRAL_SHAPE_PROXYTYPE
    int CONVEX_TRIANGLEMESH_SHAPE_PROXYTYPE -> CONVEX_TRIANGLEMESH_SHAPE_PROXYTYPE
    int CONVEX_HULL_SHAPE_PROXYTYPE -> CONVEX_HULL_SHAPE_PROXYTYPE
    int CONVEX_POINT_CLOUD_SHAPE_PROXYTYPE -> CONVEX_POINT_CLOUD_SHAPE_PROXYTYPE
    int CUSTOM_POLYHEDRAL_SHAPE_TYPE -> CUSTOM_POLYHEDRAL_SHAPE_TYPE
    int IMPLICIT_CONVEX_SHAPES_START_HERE -> IMPLICIT_CONVEX_SHAPES_START_HERE
    int SPHERE_SHAPE_PROXYTYPE -> SPHERE_SHAPE_PROXYTYPE
    int MULTI_SPHERE_SHAPE_PROXYTYPE -> MULTI_SPHERE_SHAPE_PROXYTYPE
    int CAPSULE_SHAPE_PROXYTYPE -> CAPSULE_SHAPE_PROXYTYPE
    int CONE_SHAPE_PROXYTYPE -> CONE_SHAPE_PROXYTYPE
    int CONVEX_SHAPE_PROXYTYPE -> CONVEX_SHAPE_PROXYTYPE
    int CYLINDER_SHAPE_PROXYTYPE -> CYLINDER_SHAPE_PROXYTYPE
    int UNIFORM_SCALING_SHAPE_PROXYTYPE -> UNIFORM_SCALING_SHAPE_PROXYTYPE
    int MINKOWSKI_SUM_SHAPE_PROXYTYPE -> MINKOWSKI_SUM_SHAPE_PROXYTYPE
    int MINKOWSKI_DIFFERENCE_SHAPE_PROXYTYPE -> MINKOWSKI_DIFFERENCE_SHAPE_PROXYTYPE
    int BOX_2D_SHAPE_PROXYTYPE -> BOX_2D_SHAPE_PROXYTYPE
    int CONVEX_2D_SHAPE_PROXYTYPE -> CONVEX_2D_SHAPE_PROXYTYPE
    int CUSTOM_CONVEX_SHAPE_TYPE -> CUSTOM_CONVEX_SHAPE_TYPE
    int CONCAVE_SHAPES_START_HERE -> CONCAVE_SHAPES_START_HERE
    int TRIANGLE_MESH_SHAPE_PROXYTYPE -> TRIANGLE_MESH_SHAPE_PROXYTYPE
    int SCALED_TRIANGLE_MESH_SHAPE_PROXYTYPE -> SCALED_TRIANGLE_MESH_SHAPE_PROXYTYPE
    int FAST_CONCAVE_MESH_PROXYTYPE -> FAST_CONCAVE_MESH_PROXYTYPE
    int TERRAIN_SHAPE_PROXYTYPE -> TERRAIN_SHAPE_PROXYTYPE
    int GIMPACT_SHAPE_PROXYTYPE -> GIMPACT_SHAPE_PROXYTYPE
    int MULTIMATERIAL_TRIANGLE_MESH_PROXYTYPE -> MULTIMATERIAL_TRIANGLE_MESH_PROXYTYPE
    int EMPTY_SHAPE_PROXYTYPE -> EMPTY_SHAPE_PROXYTYPE
    int STATIC_PLANE_PROXYTYPE -> STATIC_PLANE_PROXYTYPE
    int CUSTOM_CONCAVE_SHAPE_TYPE -> CUSTOM_CONCAVE_SHAPE_TYPE
    int CONCAVE_SHAPES_END_HERE -> CONCAVE_SHAPES_END_HERE
    int COMPOUND_SHAPE_PROXYTYPE -> COMPOUND_SHAPE_PROXYTYPE
    int SOFTBODY_SHAPE_PROXYTYPE -> SOFTBODY_SHAPE_PROXYTYPE
    int HFFLUID_SHAPE_PROXYTYPE -> HFFLUID_SHAPE_PROXYTYPE
    int HFFLUID_BUOYANT_CONVEX_SHAPE_PROXYTYPE -> HFFLUID_BUOYANT_CONVEX_SHAPE_PROXYTYPE
    int INVALID_SHAPE_PROXYTYPE -> INVALID_SHAPE_PROXYTYPE
    int MAX_BROADPHASE_COLLISION_TYPES -> MAX_BROADPHASE_COLLISION_TYPES
com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback -> com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void setConvexFromWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setConvexFromWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getConvexFromWorld() -> getConvexFromWorld
    void setConvexToWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setConvexToWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getConvexToWorld() -> getConvexToWorld
    void setHitNormalWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setHitNormalWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitNormalWorld() -> getHitNormalWorld
    void setHitPointWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setHitPointWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitPointWorld() -> getHitPointWorld
    void setHitCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> setHitCollisionObject
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getHitCollisionObject() -> getHitCollisionObject
    float addSingleResult(com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,boolean) -> addSingleResult
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback -> com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setMe(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> setMe
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getMe() -> getMe
    void setAllowedPenetration(float) -> setAllowedPenetration
    float getAllowedPenetration() -> getAllowedPenetration
    boolean needsCollision(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> needsCollision
com.badlogic.gdx.physics.bullet.collision.ClosestNotMeRayResultCallback -> com.badlogic.gdx.physics.bullet.collision.ClosestNotMeRayResultCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.ClosestNotMeRayResultCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback -> com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void setRayFromWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setRayFromWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayFromWorld() -> getRayFromWorld
    void setRayToWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setRayToWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayToWorld() -> getRayToWorld
    void setHitNormalWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setHitNormalWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitNormalWorld() -> getHitNormalWorld
    void setHitPointWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setHitPointWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitPointWorld() -> getHitPointWorld
    float addSingleResult(com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean) -> addSingleResult
com.badlogic.gdx.physics.bullet.collision.Collision -> com.badlogic.gdx.physics.bullet.collision.Collision:
    com.badlogic.gdx.math.Vector3 staticVector3 -> staticVector3
    com.badlogic.gdx.utils.Pool poolVector3 -> poolVector3
    com.badlogic.gdx.math.Quaternion staticQuaternion -> staticQuaternion
    com.badlogic.gdx.utils.Pool poolQuaternion -> poolQuaternion
    com.badlogic.gdx.math.Matrix3 staticMatrix3 -> staticMatrix3
    com.badlogic.gdx.utils.Pool poolMatrix3 -> poolMatrix3
    com.badlogic.gdx.math.Matrix4 staticMatrix4 -> staticMatrix4
    com.badlogic.gdx.utils.Pool poolMatrix4 -> poolMatrix4
    boolean Intersect(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> Intersect
    boolean Intersect(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3) -> Intersect
    float Proximity(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> Proximity
    int Select(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> Select
    void Merge(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> Merge
    boolean NotEqual(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> NotEqual
    void setGOverlappingPairs(int) -> setGOverlappingPairs
    int getGOverlappingPairs() -> getGOverlappingPairs
    void setGRemovePairs(int) -> setGRemovePairs
    int getGRemovePairs() -> getGRemovePairs
    void setGAddedPairs(int) -> setGAddedPairs
    int getGAddedPairs() -> getGAddedPairs
    void setGFindPairs(int) -> setGFindPairs
    int getGFindPairs() -> getGFindPairs
    int getBT_NULL_PAIR() -> getBT_NULL_PAIR
    boolean gdxCheckFilter(int,int) -> gdxCheckFilter
    boolean gdxCheckFilter(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> gdxCheckFilter
    void setGCompoundCompoundChildShapePairCallback(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool) -> setGCompoundCompoundChildShapePairCallback
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool getGCompoundCompoundChildShapePairCallback() -> getGCompoundCompoundChildShapePairCallback
    void setGContactAddedCallback(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool) -> setGContactAddedCallback
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool getGContactAddedCallback() -> getGContactAddedCallback
    int getBT_SIMPLE_NULL_PAIR() -> getBT_SIMPLE_NULL_PAIR
    void setGOverlappingSimplePairs(int) -> setGOverlappingSimplePairs
    int getGOverlappingSimplePairs() -> getGOverlappingSimplePairs
    void setGRemoveSimplePairs(int) -> setGRemoveSimplePairs
    int getGRemoveSimplePairs() -> getGRemoveSimplePairs
    void setGAddedSimplePairs(int) -> setGAddedSimplePairs
    int getGAddedSimplePairs() -> getGAddedSimplePairs
    void setGFindSimplePairs(int) -> setGFindSimplePairs
    int getGFindSimplePairs() -> getGFindSimplePairs
    void btGenerateInternalEdgeInfo(com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap) -> btGenerateInternalEdgeInfo
    void btAdjustInternalEdgeContacts(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,int) -> btAdjustInternalEdgeContacts
    void btAdjustInternalEdgeContacts(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int) -> btAdjustInternalEdgeContacts
    void setGCompoundChildShapePairCallback(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool) -> setGCompoundChildShapePairCallback
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool getGCompoundChildShapePairCallback() -> getGCompoundChildShapePairCallback
    void setGContactBreakingThreshold(float) -> setGContactBreakingThreshold
    float getGContactBreakingThreshold() -> getGContactBreakingThreshold
com.badlogic.gdx.physics.bullet.collision.Collision$1 -> com.badlogic.gdx.physics.bullet.collision.Collision$1:
    com.badlogic.gdx.math.Vector3 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.collision.Collision$2 -> com.badlogic.gdx.physics.bullet.collision.Collision$2:
    com.badlogic.gdx.math.Quaternion newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.collision.Collision$3 -> com.badlogic.gdx.physics.bullet.collision.Collision$3:
    com.badlogic.gdx.math.Matrix3 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.collision.Collision$4 -> com.badlogic.gdx.physics.bullet.collision.Collision$4:
    com.badlogic.gdx.math.Matrix4 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.collision.CollisionConstants -> com.badlogic.gdx.physics.bullet.collision.CollisionConstants:
    int DBVT_IMPL_GENERIC -> DBVT_IMPL_GENERIC
    int DBVT_IMPL_SSE -> DBVT_IMPL_SSE
    int DBVT_USE_TEMPLATE -> DBVT_USE_TEMPLATE
    int DBVT_USE_INTRINSIC_SSE -> DBVT_USE_INTRINSIC_SSE
    int DBVT_USE_MEMMOVE -> DBVT_USE_MEMMOVE
    int DBVT_ENABLE_BENCHMARK -> DBVT_ENABLE_BENCHMARK
    int DBVT_SELECT_IMPL -> DBVT_SELECT_IMPL
    int DBVT_MERGE_IMPL -> DBVT_MERGE_IMPL
    int DBVT_INT0_IMPL -> DBVT_INT0_IMPL
    java.lang.String btQuantizedBvhDataName -> btQuantizedBvhDataName
    int MAX_SUBTREE_SIZE_IN_BYTES -> MAX_SUBTREE_SIZE_IN_BYTES
    int MAX_NUM_PARTS_IN_BITS -> MAX_NUM_PARTS_IN_BITS
    int DBVT_BP_PROFILE -> DBVT_BP_PROFILE
    int DBVT_BP_PREVENTFALSEUPDATE -> DBVT_BP_PREVENTFALSEUPDATE
    int DBVT_BP_ACCURATESLEEPING -> DBVT_BP_ACCURATESLEEPING
    int DBVT_BP_ENABLE_BENCHMARK -> DBVT_BP_ENABLE_BENCHMARK
    int USE_OVERLAP_TEST_ON_REMOVES -> USE_OVERLAP_TEST_ON_REMOVES
    int MAX_PREFERRED_PENETRATION_DIRECTIONS -> MAX_PREFERRED_PENETRATION_DIRECTIONS
    int TRI_INFO_V0V1_CONVEX -> TRI_INFO_V0V1_CONVEX
    int TRI_INFO_V1V2_CONVEX -> TRI_INFO_V1V2_CONVEX
    int TRI_INFO_V2V0_CONVEX -> TRI_INFO_V2V0_CONVEX
    int TRI_INFO_V0V1_SWAP_NORMALB -> TRI_INFO_V0V1_SWAP_NORMALB
    int TRI_INFO_V1V2_SWAP_NORMALB -> TRI_INFO_V1V2_SWAP_NORMALB
    int TRI_INFO_V2V0_SWAP_NORMALB -> TRI_INFO_V2V0_SWAP_NORMALB
    int TEST_INTERNAL_OBJECTS -> TEST_INTERNAL_OBJECTS
    int ACTIVE_TAG -> ACTIVE_TAG
    int ISLAND_SLEEPING -> ISLAND_SLEEPING
    int WANTS_DEACTIVATION -> WANTS_DEACTIVATION
    int DISABLE_DEACTIVATION -> DISABLE_DEACTIVATION
    int DISABLE_SIMULATION -> DISABLE_SIMULATION
    java.lang.String btCollisionObjectDataName -> btCollisionObjectDataName
    int USE_PATH_COMPRESSION -> USE_PATH_COMPRESSION
    int STATIC_SIMULATION_ISLAND_OPTIMIZATION -> STATIC_SIMULATION_ISLAND_OPTIMIZATION
    int USE_DISPATCH_REGISTRY_ARRAY -> USE_DISPATCH_REGISTRY_ARRAY
    int MANIFOLD_CACHE_SIZE -> MANIFOLD_CACHE_SIZE
    int NO_VIRTUAL_INTERFACE -> NO_VIRTUAL_INTERFACE
    int VORONOI_SIMPLEX_MAX_VERTS -> VORONOI_SIMPLEX_MAX_VERTS
    double VORONOI_DEFAULT_EQUAL_VERTEX_THRESHOLD -> VORONOI_DEFAULT_EQUAL_VERTEX_THRESHOLD
com.badlogic.gdx.physics.bullet.collision.CollisionJNI -> com.badlogic.gdx.physics.bullet.collision.CollisionJNI:
    void delete_btDiscreteCollisionDetectorInterface_Result(long) -> delete_btDiscreteCollisionDetectorInterface_Result
    void btDiscreteCollisionDetectorInterface_Result_setShapeIdentifiersA(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,int,int) -> btDiscreteCollisionDetectorInterface_Result_setShapeIdentifiersA
    void btDiscreteCollisionDetectorInterface_Result_setShapeIdentifiersB(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,int,int) -> btDiscreteCollisionDetectorInterface_Result_setShapeIdentifiersB
    void btDiscreteCollisionDetectorInterface_Result_addContactPoint(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> btDiscreteCollisionDetectorInterface_Result_addContactPoint
    long new_btDiscreteCollisionDetectorInterface_ClosestPointInput() -> new_btDiscreteCollisionDetectorInterface_ClosestPointInput
    void btDiscreteCollisionDetectorInterface_ClosestPointInput_transformA_set(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btDiscreteCollisionDetectorInterface_ClosestPointInput_transformA_set
    long btDiscreteCollisionDetectorInterface_ClosestPointInput_transformA_get(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput) -> btDiscreteCollisionDetectorInterface_ClosestPointInput_transformA_get
    void btDiscreteCollisionDetectorInterface_ClosestPointInput_transformB_set(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btDiscreteCollisionDetectorInterface_ClosestPointInput_transformB_set
    long btDiscreteCollisionDetectorInterface_ClosestPointInput_transformB_get(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput) -> btDiscreteCollisionDetectorInterface_ClosestPointInput_transformB_get
    void btDiscreteCollisionDetectorInterface_ClosestPointInput_maximumDistanceSquared_set(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,float) -> btDiscreteCollisionDetectorInterface_ClosestPointInput_maximumDistanceSquared_set
    float btDiscreteCollisionDetectorInterface_ClosestPointInput_maximumDistanceSquared_get(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput) -> btDiscreteCollisionDetectorInterface_ClosestPointInput_maximumDistanceSquared_get
    void delete_btDiscreteCollisionDetectorInterface_ClosestPointInput(long) -> delete_btDiscreteCollisionDetectorInterface_ClosestPointInput
    void delete_btDiscreteCollisionDetectorInterface(long) -> delete_btDiscreteCollisionDetectorInterface
    void btDiscreteCollisionDetectorInterface_getClosestPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean) -> btDiscreteCollisionDetectorInterface_getClosestPoints__SWIG_0
    void btDiscreteCollisionDetectorInterface_getClosestPoints__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btDiscreteCollisionDetectorInterface_getClosestPoints__SWIG_1
    void btStorageResult_normalOnSurfaceB_set(long,com.badlogic.gdx.physics.bullet.collision.btStorageResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btStorageResult_normalOnSurfaceB_set
    long btStorageResult_normalOnSurfaceB_get(long,com.badlogic.gdx.physics.bullet.collision.btStorageResult) -> btStorageResult_normalOnSurfaceB_get
    void btStorageResult_closestPointInB_set(long,com.badlogic.gdx.physics.bullet.collision.btStorageResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btStorageResult_closestPointInB_set
    long btStorageResult_closestPointInB_get(long,com.badlogic.gdx.physics.bullet.collision.btStorageResult) -> btStorageResult_closestPointInB_get
    void btStorageResult_distance_set(long,com.badlogic.gdx.physics.bullet.collision.btStorageResult,float) -> btStorageResult_distance_set
    float btStorageResult_distance_get(long,com.badlogic.gdx.physics.bullet.collision.btStorageResult) -> btStorageResult_distance_get
    void delete_btStorageResult(long) -> delete_btStorageResult
    void btBroadphaseProxy_clientObject_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long) -> btBroadphaseProxy_clientObject_set
    long btBroadphaseProxy_clientObject_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btBroadphaseProxy_clientObject_get
    void btBroadphaseProxy_collisionFilterGroup_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,short) -> btBroadphaseProxy_collisionFilterGroup_set
    short btBroadphaseProxy_collisionFilterGroup_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btBroadphaseProxy_collisionFilterGroup_get
    void btBroadphaseProxy_collisionFilterMask_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,short) -> btBroadphaseProxy_collisionFilterMask_set
    short btBroadphaseProxy_collisionFilterMask_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btBroadphaseProxy_collisionFilterMask_get
    void btBroadphaseProxy_multiSapParentProxy_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long) -> btBroadphaseProxy_multiSapParentProxy_set
    long btBroadphaseProxy_multiSapParentProxy_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btBroadphaseProxy_multiSapParentProxy_get
    void btBroadphaseProxy_uniqueId_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,int) -> btBroadphaseProxy_uniqueId_set
    int btBroadphaseProxy_uniqueId_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btBroadphaseProxy_uniqueId_get
    void btBroadphaseProxy_aabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btBroadphaseProxy_aabbMin_set
    long btBroadphaseProxy_aabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btBroadphaseProxy_aabbMin_get
    void btBroadphaseProxy_aabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btBroadphaseProxy_aabbMax_set
    long btBroadphaseProxy_aabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btBroadphaseProxy_aabbMax_get
    int btBroadphaseProxy_getUid(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btBroadphaseProxy_getUid
    long new_btBroadphaseProxy__SWIG_0() -> new_btBroadphaseProxy__SWIG_0
    long new_btBroadphaseProxy__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short,long) -> new_btBroadphaseProxy__SWIG_1
    long new_btBroadphaseProxy__SWIG_2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short) -> new_btBroadphaseProxy__SWIG_2
    boolean btBroadphaseProxy_isPolyhedral(int) -> btBroadphaseProxy_isPolyhedral
    boolean btBroadphaseProxy_isConvex(int) -> btBroadphaseProxy_isConvex
    boolean btBroadphaseProxy_isNonMoving(int) -> btBroadphaseProxy_isNonMoving
    boolean btBroadphaseProxy_isConcave(int) -> btBroadphaseProxy_isConcave
    boolean btBroadphaseProxy_isCompound(int) -> btBroadphaseProxy_isCompound
    boolean btBroadphaseProxy_isSoftBody(int) -> btBroadphaseProxy_isSoftBody
    boolean btBroadphaseProxy_isInfinite(int) -> btBroadphaseProxy_isInfinite
    boolean btBroadphaseProxy_isConvex2d(int) -> btBroadphaseProxy_isConvex2d
    void delete_btBroadphaseProxy(long) -> delete_btBroadphaseProxy
    long new_btBroadphasePair__SWIG_0() -> new_btBroadphasePair__SWIG_0
    long new_btBroadphasePair__SWIG_1(com.badlogic.gdx.physics.bullet.collision.btBroadphasePair) -> new_btBroadphasePair__SWIG_1
    long new_btBroadphasePair__SWIG_2(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> new_btBroadphasePair__SWIG_2
    void btBroadphasePair_pProxy0_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btBroadphasePair_pProxy0_set
    long btBroadphasePair_pProxy0_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair) -> btBroadphasePair_pProxy0_get
    void btBroadphasePair_pProxy1_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btBroadphasePair_pProxy1_set
    long btBroadphasePair_pProxy1_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair) -> btBroadphasePair_pProxy1_get
    void btBroadphasePair_algorithm_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm) -> btBroadphasePair_algorithm_set
    long btBroadphasePair_algorithm_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair) -> btBroadphasePair_algorithm_get
    void btBroadphasePair_internalInfo1_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,long) -> btBroadphasePair_internalInfo1_set
    long btBroadphasePair_internalInfo1_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair) -> btBroadphasePair_internalInfo1_get
    void btBroadphasePair_internalTmpValue_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,int) -> btBroadphasePair_internalTmpValue_set
    int btBroadphasePair_internalTmpValue_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair) -> btBroadphasePair_internalTmpValue_get
    void delete_btBroadphasePair(long) -> delete_btBroadphasePair
    long new_btBroadphasePairSortPredicate() -> new_btBroadphasePairSortPredicate
    void delete_btBroadphasePairSortPredicate(long) -> delete_btBroadphasePairSortPredicate
    void delete_btBroadphaseAabbCallback(long) -> delete_btBroadphaseAabbCallback
    boolean btBroadphaseAabbCallback_process(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btBroadphaseAabbCallback_process
    long new_btBroadphaseAabbCallback() -> new_btBroadphaseAabbCallback
    void btBroadphaseAabbCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback,long,boolean,boolean) -> btBroadphaseAabbCallback_director_connect
    void btBroadphaseAabbCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback,long,boolean) -> btBroadphaseAabbCallback_change_ownership
    void btBroadphaseRayCallback_rayDirectionInverse_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btBroadphaseRayCallback_rayDirectionInverse_set
    long btBroadphaseRayCallback_rayDirectionInverse_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> btBroadphaseRayCallback_rayDirectionInverse_get
    void btBroadphaseRayCallback_signs_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,long[]) -> btBroadphaseRayCallback_signs_set
    long[] btBroadphaseRayCallback_signs_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> btBroadphaseRayCallback_signs_get
    void btBroadphaseRayCallback_lambda_max_set(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,float) -> btBroadphaseRayCallback_lambda_max_set
    float btBroadphaseRayCallback_lambda_max_get(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> btBroadphaseRayCallback_lambda_max_get
    void delete_btBroadphaseRayCallback(long) -> delete_btBroadphaseRayCallback
    long new_btBroadphaseRayCallback() -> new_btBroadphaseRayCallback
    void btBroadphaseRayCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,long,boolean,boolean) -> btBroadphaseRayCallback_director_connect
    void btBroadphaseRayCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,long,boolean) -> btBroadphaseRayCallback_change_ownership
    void delete_btBroadphaseInterface(long) -> delete_btBroadphaseInterface
    long btBroadphaseInterface_createProxy(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,long,short,short,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long) -> btBroadphaseInterface_createProxy
    void btBroadphaseInterface_destroyProxy(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btBroadphaseInterface_destroyProxy
    void btBroadphaseInterface_setAabb(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btBroadphaseInterface_setAabb
    void btBroadphaseInterface_getAabb(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btBroadphaseInterface_getAabb
    void btBroadphaseInterface_rayTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btBroadphaseInterface_rayTest__SWIG_0
    void btBroadphaseInterface_rayTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3) -> btBroadphaseInterface_rayTest__SWIG_1
    void btBroadphaseInterface_rayTest__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> btBroadphaseInterface_rayTest__SWIG_2
    void btBroadphaseInterface_aabbTest(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback) -> btBroadphaseInterface_aabbTest
    void btBroadphaseInterface_calculateOverlappingPairs(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btBroadphaseInterface_calculateOverlappingPairs
    long btBroadphaseInterface_getOverlappingPairCache__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface) -> btBroadphaseInterface_getOverlappingPairCache__SWIG_0
    void btBroadphaseInterface_getBroadphaseAabb(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btBroadphaseInterface_getBroadphaseAabb
    void btBroadphaseInterface_resetPool(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btBroadphaseInterface_resetPool
    void btBroadphaseInterface_printStats(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface) -> btBroadphaseInterface_printStats
    com.badlogic.gdx.math.Vector3 btDbvtAabbMm_Center(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> btDbvtAabbMm_Center
    com.badlogic.gdx.math.Vector3 btDbvtAabbMm_Lengths(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> btDbvtAabbMm_Lengths
    com.badlogic.gdx.math.Vector3 btDbvtAabbMm_Extents(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> btDbvtAabbMm_Extents
    com.badlogic.gdx.math.Vector3 btDbvtAabbMm_Mins(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> btDbvtAabbMm_Mins
    com.badlogic.gdx.math.Vector3 btDbvtAabbMm_Maxs(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> btDbvtAabbMm_Maxs
    long btDbvtAabbMm_FromCE(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btDbvtAabbMm_FromCE
    long btDbvtAabbMm_FromCR(com.badlogic.gdx.math.Vector3,float) -> btDbvtAabbMm_FromCR
    long btDbvtAabbMm_FromMM(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btDbvtAabbMm_FromMM
    long btDbvtAabbMm_FromPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int) -> btDbvtAabbMm_FromPoints__SWIG_0
    long btDbvtAabbMm_FromPoints__SWIG_1(long,int) -> btDbvtAabbMm_FromPoints__SWIG_1
    void btDbvtAabbMm_Expand(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3) -> btDbvtAabbMm_Expand
    void btDbvtAabbMm_SignedExpand(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3) -> btDbvtAabbMm_SignedExpand
    boolean btDbvtAabbMm_Contain(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> btDbvtAabbMm_Contain
    int btDbvtAabbMm_Classify(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3,float,int) -> btDbvtAabbMm_Classify
    float btDbvtAabbMm_ProjectMinimum(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3,long) -> btDbvtAabbMm_ProjectMinimum
    boolean Intersect__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> Intersect__SWIG_0
    boolean Intersect__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3) -> Intersect__SWIG_1
    float Proximity(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> Proximity
    int Select(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> Select
    void Merge(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> Merge
    boolean NotEqual(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> NotEqual
    com.badlogic.gdx.math.Vector3 btDbvtAabbMm_tMins(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> btDbvtAabbMm_tMins
    com.badlogic.gdx.math.Vector3 btDbvtAabbMm_tMaxs(long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> btDbvtAabbMm_tMaxs
    long new_btDbvtAabbMm() -> new_btDbvtAabbMm
    void delete_btDbvtAabbMm(long) -> delete_btDbvtAabbMm
    void btDbvtNode_volume_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> btDbvtNode_volume_set
    long btDbvtNode_volume_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvtNode_volume_get
    void btDbvtNode_parent_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvtNode_parent_set
    long btDbvtNode_parent_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvtNode_parent_get
    boolean btDbvtNode_isleaf(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvtNode_isleaf
    boolean btDbvtNode_isinternal(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvtNode_isinternal
    void btDbvtNode_childs_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long) -> btDbvtNode_childs_set
    long btDbvtNode_childs_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvtNode_childs_get
    void btDbvtNode_data_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long) -> btDbvtNode_data_set
    long btDbvtNode_data_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvtNode_data_get
    void btDbvtNode_dataAsInt_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int) -> btDbvtNode_dataAsInt_set
    int btDbvtNode_dataAsInt_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvtNode_dataAsInt_get
    long new_btDbvtNode() -> new_btDbvtNode
    void delete_btDbvtNode(long) -> delete_btDbvtNode
    void btDbvt_sStkNN_a_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_sStkNN_a_set
    long btDbvt_sStkNN_a_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN) -> btDbvt_sStkNN_a_get
    void btDbvt_sStkNN_b_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_sStkNN_b_set
    long btDbvt_sStkNN_b_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN) -> btDbvt_sStkNN_b_get
    long new_btDbvt_sStkNN__SWIG_0() -> new_btDbvt_sStkNN__SWIG_0
    long new_btDbvt_sStkNN__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> new_btDbvt_sStkNN__SWIG_1
    void delete_btDbvt_sStkNN(long) -> delete_btDbvt_sStkNN
    void btDbvt_sStkNP_node_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_sStkNP_node_set
    long btDbvt_sStkNP_node_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP) -> btDbvt_sStkNP_node_get
    void btDbvt_sStkNP_mask_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP,int) -> btDbvt_sStkNP_mask_set
    int btDbvt_sStkNP_mask_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP) -> btDbvt_sStkNP_mask_get
    long new_btDbvt_sStkNP(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long) -> new_btDbvt_sStkNP
    void delete_btDbvt_sStkNP(long) -> delete_btDbvt_sStkNP
    void btDbvt_sStkNPS_node_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_sStkNPS_node_set
    long btDbvt_sStkNPS_node_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS) -> btDbvt_sStkNPS_node_get
    void btDbvt_sStkNPS_mask_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS,int) -> btDbvt_sStkNPS_mask_set
    int btDbvt_sStkNPS_mask_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS) -> btDbvt_sStkNPS_mask_get
    void btDbvt_sStkNPS_value_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS,float) -> btDbvt_sStkNPS_value_set
    float btDbvt_sStkNPS_value_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS) -> btDbvt_sStkNPS_value_get
    long new_btDbvt_sStkNPS__SWIG_0() -> new_btDbvt_sStkNPS__SWIG_0
    long new_btDbvt_sStkNPS__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,float) -> new_btDbvt_sStkNPS__SWIG_1
    void delete_btDbvt_sStkNPS(long) -> delete_btDbvt_sStkNPS
    void btDbvt_sStkCLN_node_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_sStkCLN_node_set
    long btDbvt_sStkCLN_node_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN) -> btDbvt_sStkCLN_node_get
    void btDbvt_sStkCLN_parent_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_sStkCLN_parent_set
    long btDbvt_sStkCLN_parent_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN) -> btDbvt_sStkCLN_parent_get
    long new_btDbvt_sStkCLN(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> new_btDbvt_sStkCLN
    void delete_btDbvt_sStkCLN(long) -> delete_btDbvt_sStkCLN
    void delete_btDbvt_ICollide(long) -> delete_btDbvt_ICollide
    void btDbvt_ICollide_Process__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_ICollide_Process__SWIG_0
    void btDbvt_ICollide_Process__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_ICollide_Process__SWIG_1
    void btDbvt_ICollide_Process__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,float) -> btDbvt_ICollide_Process__SWIG_2
    boolean btDbvt_ICollide_Descent(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_ICollide_Descent
    boolean btDbvt_ICollide_AllLeaves(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_ICollide_AllLeaves
    long new_btDbvt_ICollide() -> new_btDbvt_ICollide
    void delete_btDbvt_IWriter(long) -> delete_btDbvt_IWriter
    void btDbvt_IWriter_Prepare(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int) -> btDbvt_IWriter_Prepare
    void btDbvt_IWriter_WriteNode(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int,int,int,int) -> btDbvt_IWriter_WriteNode
    void btDbvt_IWriter_WriteLeaf(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int,int) -> btDbvt_IWriter_WriteLeaf
    void delete_btDbvt_IClone(long) -> delete_btDbvt_IClone
    void btDbvt_IClone_CloneLeaf(long,com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_IClone_CloneLeaf
    long new_btDbvt_IClone() -> new_btDbvt_IClone
    void btDbvt_root_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_root_set
    long btDbvt_root_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btDbvt_root_get
    void btDbvt_free_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_free_set
    long btDbvt_free_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btDbvt_free_get
    void btDbvt_lkhd_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,int) -> btDbvt_lkhd_set
    int btDbvt_lkhd_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btDbvt_lkhd_get
    void btDbvt_leaves_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,int) -> btDbvt_leaves_set
    int btDbvt_leaves_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btDbvt_leaves_get
    void btDbvt_opath_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long) -> btDbvt_opath_set
    long btDbvt_opath_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btDbvt_opath_get
    void btDbvt_stkStack_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long) -> btDbvt_stkStack_set
    long btDbvt_stkStack_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btDbvt_stkStack_get
    void btDbvt_rayTestStack_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long) -> btDbvt_rayTestStack_set
    long btDbvt_rayTestStack_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btDbvt_rayTestStack_get
    long new_btDbvt() -> new_btDbvt
    void delete_btDbvt(long) -> delete_btDbvt
    void btDbvt_clear(long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btDbvt_clear
    boolean btDbvt_empty(long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btDbvt_empty
    void btDbvt_optimizeBottomUp(long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btDbvt_optimizeBottomUp
    void btDbvt_optimizeTopDown__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,int) -> btDbvt_optimizeTopDown__SWIG_0
    void btDbvt_optimizeTopDown__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btDbvt_optimizeTopDown__SWIG_1
    void btDbvt_optimizeIncremental(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,int) -> btDbvt_optimizeIncremental
    long btDbvt_insert(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long) -> btDbvt_insert
    void btDbvt_update__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int) -> btDbvt_update__SWIG_0
    void btDbvt_update__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_update__SWIG_1
    void btDbvt_update__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> btDbvt_update__SWIG_2
    boolean btDbvt_update__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3,float) -> btDbvt_update__SWIG_3
    boolean btDbvt_update__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3) -> btDbvt_update__SWIG_4
    boolean btDbvt_update__SWIG_5(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,float) -> btDbvt_update__SWIG_5
    void btDbvt_remove(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_remove
    void btDbvt_write(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter) -> btDbvt_write
    void btDbvt_clone__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone) -> btDbvt_clone__SWIG_0
    void btDbvt_clone__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btDbvt_clone__SWIG_1
    int btDbvt_maxdepth(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_maxdepth
    int btDbvt_countLeaves(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvt_countLeaves
    void btDbvt_extractLeaves(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long) -> btDbvt_extractLeaves
    void btDbvt_benchmark() -> btDbvt_benchmark
    void btDbvt_enumNodes(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> btDbvt_enumNodes
    void btDbvt_enumLeaves(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> btDbvt_enumLeaves
    void btDbvt_collideTT(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> btDbvt_collideTT
    void btDbvt_collideTTpersistentStack(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> btDbvt_collideTTpersistentStack
    void btDbvt_collideTV(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> btDbvt_collideTV
    void btDbvt_rayTest(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> btDbvt_rayTest
    void btDbvt_rayTestInternal(long,com.badlogic.gdx.physics.bullet.collision.btDbvt,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long[],float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> btDbvt_rayTestInternal
    void btDbvt_collideKDOP(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,int,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> btDbvt_collideKDOP
    void btDbvt_collideOCL__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,com.badlogic.gdx.math.Vector3,int,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide,boolean) -> btDbvt_collideOCL__SWIG_0
    void btDbvt_collideOCL__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,com.badlogic.gdx.math.Vector3,int,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> btDbvt_collideOCL__SWIG_1
    void btDbvt_collideTU(long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> btDbvt_collideTU
    int btDbvt_nearest(java.nio.IntBuffer,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS,float,int,int) -> btDbvt_nearest
    int btDbvt_allocate(long,long,long,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS) -> btDbvt_allocate
    void btQuantizedBvhNode_quantizedAabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode,int[]) -> btQuantizedBvhNode_quantizedAabbMin_set
    int[] btQuantizedBvhNode_quantizedAabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode) -> btQuantizedBvhNode_quantizedAabbMin_get
    void btQuantizedBvhNode_quantizedAabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode,int[]) -> btQuantizedBvhNode_quantizedAabbMax_set
    int[] btQuantizedBvhNode_quantizedAabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode) -> btQuantizedBvhNode_quantizedAabbMax_get
    void btQuantizedBvhNode_escapeIndexOrTriangleIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode,int) -> btQuantizedBvhNode_escapeIndexOrTriangleIndex_set
    int btQuantizedBvhNode_escapeIndexOrTriangleIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode) -> btQuantizedBvhNode_escapeIndexOrTriangleIndex_get
    boolean btQuantizedBvhNode_isLeafNode(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode) -> btQuantizedBvhNode_isLeafNode
    int btQuantizedBvhNode_getEscapeIndex(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode) -> btQuantizedBvhNode_getEscapeIndex
    int btQuantizedBvhNode_getTriangleIndex(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode) -> btQuantizedBvhNode_getTriangleIndex
    int btQuantizedBvhNode_getPartId(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode) -> btQuantizedBvhNode_getPartId
    long new_btQuantizedBvhNode() -> new_btQuantizedBvhNode
    void delete_btQuantizedBvhNode(long) -> delete_btQuantizedBvhNode
    void btOptimizedBvhNode_aabbMinOrg_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btOptimizedBvhNode_aabbMinOrg_set
    long btOptimizedBvhNode_aabbMinOrg_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode) -> btOptimizedBvhNode_aabbMinOrg_get
    void btOptimizedBvhNode_aabbMaxOrg_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btOptimizedBvhNode_aabbMaxOrg_set
    long btOptimizedBvhNode_aabbMaxOrg_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode) -> btOptimizedBvhNode_aabbMaxOrg_get
    void btOptimizedBvhNode_escapeIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode,int) -> btOptimizedBvhNode_escapeIndex_set
    int btOptimizedBvhNode_escapeIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode) -> btOptimizedBvhNode_escapeIndex_get
    void btOptimizedBvhNode_subPart_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode,int) -> btOptimizedBvhNode_subPart_set
    int btOptimizedBvhNode_subPart_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode) -> btOptimizedBvhNode_subPart_get
    void btOptimizedBvhNode_triangleIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode,int) -> btOptimizedBvhNode_triangleIndex_set
    int btOptimizedBvhNode_triangleIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode) -> btOptimizedBvhNode_triangleIndex_get
    void btOptimizedBvhNode_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode,java.lang.String) -> btOptimizedBvhNode_padding_set
    java.lang.String btOptimizedBvhNode_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode) -> btOptimizedBvhNode_padding_get
    long new_btOptimizedBvhNode() -> new_btOptimizedBvhNode
    void delete_btOptimizedBvhNode(long) -> delete_btOptimizedBvhNode
    void btBvhSubtreeInfo_quantizedAabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo,int[]) -> btBvhSubtreeInfo_quantizedAabbMin_set
    int[] btBvhSubtreeInfo_quantizedAabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo) -> btBvhSubtreeInfo_quantizedAabbMin_get
    void btBvhSubtreeInfo_quantizedAabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo,int[]) -> btBvhSubtreeInfo_quantizedAabbMax_set
    int[] btBvhSubtreeInfo_quantizedAabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo) -> btBvhSubtreeInfo_quantizedAabbMax_get
    void btBvhSubtreeInfo_rootNodeIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo,int) -> btBvhSubtreeInfo_rootNodeIndex_set
    int btBvhSubtreeInfo_rootNodeIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo) -> btBvhSubtreeInfo_rootNodeIndex_get
    void btBvhSubtreeInfo_subtreeSize_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo,int) -> btBvhSubtreeInfo_subtreeSize_set
    int btBvhSubtreeInfo_subtreeSize_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo) -> btBvhSubtreeInfo_subtreeSize_get
    void btBvhSubtreeInfo_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo,int[]) -> btBvhSubtreeInfo_padding_set
    int[] btBvhSubtreeInfo_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo) -> btBvhSubtreeInfo_padding_get
    long new_btBvhSubtreeInfo() -> new_btBvhSubtreeInfo
    void btBvhSubtreeInfo_setAabbFromQuantizeNode(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo,long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode) -> btBvhSubtreeInfo_setAabbFromQuantizeNode
    void delete_btBvhSubtreeInfo(long) -> delete_btBvhSubtreeInfo
    void delete_btNodeOverlapCallback(long) -> delete_btNodeOverlapCallback
    void btNodeOverlapCallback_processNode(long,com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,int,int) -> btNodeOverlapCallback_processNode
    long new_btNodeOverlapCallback() -> new_btNodeOverlapCallback
    void btNodeOverlapCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,long,boolean,boolean) -> btNodeOverlapCallback_director_connect
    void btNodeOverlapCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,long,boolean) -> btNodeOverlapCallback_change_ownership
    long new_btQuantizedBvh() -> new_btQuantizedBvh
    void delete_btQuantizedBvh(long) -> delete_btQuantizedBvh
    void btQuantizedBvh_setQuantizationValues__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> btQuantizedBvh_setQuantizationValues__SWIG_0
    void btQuantizedBvh_setQuantizationValues__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btQuantizedBvh_setQuantizationValues__SWIG_1
    long btQuantizedBvh_getLeafNodeArray(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh) -> btQuantizedBvh_getLeafNodeArray
    void btQuantizedBvh_buildInternal(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh) -> btQuantizedBvh_buildInternal
    void btQuantizedBvh_reportAabbOverlappingNodex(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btQuantizedBvh_reportAabbOverlappingNodex
    void btQuantizedBvh_reportRayOverlappingNodex(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btQuantizedBvh_reportRayOverlappingNodex
    void btQuantizedBvh_reportBoxCastOverlappingNodex(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btQuantizedBvh_reportBoxCastOverlappingNodex
    void btQuantizedBvh_quantize(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,java.nio.IntBuffer,com.badlogic.gdx.math.Vector3,int) -> btQuantizedBvh_quantize
    void btQuantizedBvh_quantizeWithClamp(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,java.nio.IntBuffer,com.badlogic.gdx.math.Vector3,int) -> btQuantizedBvh_quantizeWithClamp
    com.badlogic.gdx.math.Vector3 btQuantizedBvh_unQuantize(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,java.nio.IntBuffer) -> btQuantizedBvh_unQuantize
    void btQuantizedBvh_setTraversalMode(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,int) -> btQuantizedBvh_setTraversalMode
    long btQuantizedBvh_getQuantizedNodeArray(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh) -> btQuantizedBvh_getQuantizedNodeArray
    long btQuantizedBvh_getSubtreeInfoArray(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh) -> btQuantizedBvh_getSubtreeInfoArray
    long btQuantizedBvh_calculateSerializeBufferSize(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh) -> btQuantizedBvh_calculateSerializeBufferSize
    boolean btQuantizedBvh_serialize__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,long,long,boolean) -> btQuantizedBvh_serialize__SWIG_0
    long btQuantizedBvh_deSerializeInPlace(long,long,boolean) -> btQuantizedBvh_deSerializeInPlace
    long btQuantizedBvh_getAlignmentSerializationPadding() -> btQuantizedBvh_getAlignmentSerializationPadding
    int btQuantizedBvh_calculateSerializeBufferSizeNew(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh) -> btQuantizedBvh_calculateSerializeBufferSizeNew
    java.lang.String btQuantizedBvh_serialize__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,long,long) -> btQuantizedBvh_serialize__SWIG_1
    void btQuantizedBvh_deSerializeFloat(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> btQuantizedBvh_deSerializeFloat
    void btQuantizedBvh_deSerializeDouble(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> btQuantizedBvh_deSerializeDouble
    boolean btQuantizedBvh_isQuantized(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh) -> btQuantizedBvh_isQuantized
    void btBvhSubtreeInfoData_rootNodeIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData,int) -> btBvhSubtreeInfoData_rootNodeIndex_set
    int btBvhSubtreeInfoData_rootNodeIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData) -> btBvhSubtreeInfoData_rootNodeIndex_get
    void btBvhSubtreeInfoData_subtreeSize_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData,int) -> btBvhSubtreeInfoData_subtreeSize_set
    int btBvhSubtreeInfoData_subtreeSize_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData) -> btBvhSubtreeInfoData_subtreeSize_get
    void btBvhSubtreeInfoData_quantizedAabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData,int[]) -> btBvhSubtreeInfoData_quantizedAabbMin_set
    int[] btBvhSubtreeInfoData_quantizedAabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData) -> btBvhSubtreeInfoData_quantizedAabbMin_get
    void btBvhSubtreeInfoData_quantizedAabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData,int[]) -> btBvhSubtreeInfoData_quantizedAabbMax_set
    int[] btBvhSubtreeInfoData_quantizedAabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData) -> btBvhSubtreeInfoData_quantizedAabbMax_get
    long new_btBvhSubtreeInfoData() -> new_btBvhSubtreeInfoData
    void delete_btBvhSubtreeInfoData(long) -> delete_btBvhSubtreeInfoData
    void btOptimizedBvhNodeFloatData_aabbMinOrg_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btOptimizedBvhNodeFloatData_aabbMinOrg_set
    long btOptimizedBvhNodeFloatData_aabbMinOrg_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData) -> btOptimizedBvhNodeFloatData_aabbMinOrg_get
    void btOptimizedBvhNodeFloatData_aabbMaxOrg_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btOptimizedBvhNodeFloatData_aabbMaxOrg_set
    long btOptimizedBvhNodeFloatData_aabbMaxOrg_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData) -> btOptimizedBvhNodeFloatData_aabbMaxOrg_get
    void btOptimizedBvhNodeFloatData_escapeIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData,int) -> btOptimizedBvhNodeFloatData_escapeIndex_set
    int btOptimizedBvhNodeFloatData_escapeIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData) -> btOptimizedBvhNodeFloatData_escapeIndex_get
    void btOptimizedBvhNodeFloatData_subPart_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData,int) -> btOptimizedBvhNodeFloatData_subPart_set
    int btOptimizedBvhNodeFloatData_subPart_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData) -> btOptimizedBvhNodeFloatData_subPart_get
    void btOptimizedBvhNodeFloatData_triangleIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData,int) -> btOptimizedBvhNodeFloatData_triangleIndex_set
    int btOptimizedBvhNodeFloatData_triangleIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData) -> btOptimizedBvhNodeFloatData_triangleIndex_get
    void btOptimizedBvhNodeFloatData_pad_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData,java.lang.String) -> btOptimizedBvhNodeFloatData_pad_set
    java.lang.String btOptimizedBvhNodeFloatData_pad_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData) -> btOptimizedBvhNodeFloatData_pad_get
    long new_btOptimizedBvhNodeFloatData() -> new_btOptimizedBvhNodeFloatData
    void delete_btOptimizedBvhNodeFloatData(long) -> delete_btOptimizedBvhNodeFloatData
    void btOptimizedBvhNodeDoubleData_aabbMinOrg_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btOptimizedBvhNodeDoubleData_aabbMinOrg_set
    long btOptimizedBvhNodeDoubleData_aabbMinOrg_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData) -> btOptimizedBvhNodeDoubleData_aabbMinOrg_get
    void btOptimizedBvhNodeDoubleData_aabbMaxOrg_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btOptimizedBvhNodeDoubleData_aabbMaxOrg_set
    long btOptimizedBvhNodeDoubleData_aabbMaxOrg_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData) -> btOptimizedBvhNodeDoubleData_aabbMaxOrg_get
    void btOptimizedBvhNodeDoubleData_escapeIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData,int) -> btOptimizedBvhNodeDoubleData_escapeIndex_set
    int btOptimizedBvhNodeDoubleData_escapeIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData) -> btOptimizedBvhNodeDoubleData_escapeIndex_get
    void btOptimizedBvhNodeDoubleData_subPart_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData,int) -> btOptimizedBvhNodeDoubleData_subPart_set
    int btOptimizedBvhNodeDoubleData_subPart_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData) -> btOptimizedBvhNodeDoubleData_subPart_get
    void btOptimizedBvhNodeDoubleData_triangleIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData,int) -> btOptimizedBvhNodeDoubleData_triangleIndex_set
    int btOptimizedBvhNodeDoubleData_triangleIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData) -> btOptimizedBvhNodeDoubleData_triangleIndex_get
    void btOptimizedBvhNodeDoubleData_pad_set(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData,java.lang.String) -> btOptimizedBvhNodeDoubleData_pad_set
    java.lang.String btOptimizedBvhNodeDoubleData_pad_get(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData) -> btOptimizedBvhNodeDoubleData_pad_get
    long new_btOptimizedBvhNodeDoubleData() -> new_btOptimizedBvhNodeDoubleData
    void delete_btOptimizedBvhNodeDoubleData(long) -> delete_btOptimizedBvhNodeDoubleData
    void btQuantizedBvhNodeData_quantizedAabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData,int[]) -> btQuantizedBvhNodeData_quantizedAabbMin_set
    int[] btQuantizedBvhNodeData_quantizedAabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData) -> btQuantizedBvhNodeData_quantizedAabbMin_get
    void btQuantizedBvhNodeData_quantizedAabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData,int[]) -> btQuantizedBvhNodeData_quantizedAabbMax_set
    int[] btQuantizedBvhNodeData_quantizedAabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData) -> btQuantizedBvhNodeData_quantizedAabbMax_get
    void btQuantizedBvhNodeData_escapeIndexOrTriangleIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData,int) -> btQuantizedBvhNodeData_escapeIndexOrTriangleIndex_set
    int btQuantizedBvhNodeData_escapeIndexOrTriangleIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData) -> btQuantizedBvhNodeData_escapeIndexOrTriangleIndex_get
    long new_btQuantizedBvhNodeData() -> new_btQuantizedBvhNodeData
    void delete_btQuantizedBvhNodeData(long) -> delete_btQuantizedBvhNodeData
    void btQuantizedBvhFloatData_bvhAabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btQuantizedBvhFloatData_bvhAabbMin_set
    long btQuantizedBvhFloatData_bvhAabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> btQuantizedBvhFloatData_bvhAabbMin_get
    void btQuantizedBvhFloatData_bvhAabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btQuantizedBvhFloatData_bvhAabbMax_set
    long btQuantizedBvhFloatData_bvhAabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> btQuantizedBvhFloatData_bvhAabbMax_get
    void btQuantizedBvhFloatData_bvhQuantization_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btQuantizedBvhFloatData_bvhQuantization_set
    long btQuantizedBvhFloatData_bvhQuantization_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> btQuantizedBvhFloatData_bvhQuantization_get
    void btQuantizedBvhFloatData_curNodeIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,int) -> btQuantizedBvhFloatData_curNodeIndex_set
    int btQuantizedBvhFloatData_curNodeIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> btQuantizedBvhFloatData_curNodeIndex_get
    void btQuantizedBvhFloatData_useQuantization_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,int) -> btQuantizedBvhFloatData_useQuantization_set
    int btQuantizedBvhFloatData_useQuantization_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> btQuantizedBvhFloatData_useQuantization_get
    void btQuantizedBvhFloatData_numContiguousLeafNodes_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,int) -> btQuantizedBvhFloatData_numContiguousLeafNodes_set
    int btQuantizedBvhFloatData_numContiguousLeafNodes_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> btQuantizedBvhFloatData_numContiguousLeafNodes_get
    void btQuantizedBvhFloatData_numQuantizedContiguousNodes_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,int) -> btQuantizedBvhFloatData_numQuantizedContiguousNodes_set
    int btQuantizedBvhFloatData_numQuantizedContiguousNodes_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> btQuantizedBvhFloatData_numQuantizedContiguousNodes_get
    void btQuantizedBvhFloatData_contiguousNodesPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData) -> btQuantizedBvhFloatData_contiguousNodesPtr_set
    long btQuantizedBvhFloatData_contiguousNodesPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> btQuantizedBvhFloatData_contiguousNodesPtr_get
    void btQuantizedBvhFloatData_quantizedContiguousNodesPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData) -> btQuantizedBvhFloatData_quantizedContiguousNodesPtr_set
    long btQuantizedBvhFloatData_quantizedContiguousNodesPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> btQuantizedBvhFloatData_quantizedContiguousNodesPtr_get
    void btQuantizedBvhFloatData_subTreeInfoPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData) -> btQuantizedBvhFloatData_subTreeInfoPtr_set
    long btQuantizedBvhFloatData_subTreeInfoPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> btQuantizedBvhFloatData_subTreeInfoPtr_get
    void btQuantizedBvhFloatData_traversalMode_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,int) -> btQuantizedBvhFloatData_traversalMode_set
    int btQuantizedBvhFloatData_traversalMode_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> btQuantizedBvhFloatData_traversalMode_get
    void btQuantizedBvhFloatData_numSubtreeHeaders_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData,int) -> btQuantizedBvhFloatData_numSubtreeHeaders_set
    int btQuantizedBvhFloatData_numSubtreeHeaders_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> btQuantizedBvhFloatData_numSubtreeHeaders_get
    long new_btQuantizedBvhFloatData() -> new_btQuantizedBvhFloatData
    void delete_btQuantizedBvhFloatData(long) -> delete_btQuantizedBvhFloatData
    void btQuantizedBvhDoubleData_bvhAabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btQuantizedBvhDoubleData_bvhAabbMin_set
    long btQuantizedBvhDoubleData_bvhAabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> btQuantizedBvhDoubleData_bvhAabbMin_get
    void btQuantizedBvhDoubleData_bvhAabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btQuantizedBvhDoubleData_bvhAabbMax_set
    long btQuantizedBvhDoubleData_bvhAabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> btQuantizedBvhDoubleData_bvhAabbMax_get
    void btQuantizedBvhDoubleData_bvhQuantization_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btQuantizedBvhDoubleData_bvhQuantization_set
    long btQuantizedBvhDoubleData_bvhQuantization_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> btQuantizedBvhDoubleData_bvhQuantization_get
    void btQuantizedBvhDoubleData_curNodeIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,int) -> btQuantizedBvhDoubleData_curNodeIndex_set
    int btQuantizedBvhDoubleData_curNodeIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> btQuantizedBvhDoubleData_curNodeIndex_get
    void btQuantizedBvhDoubleData_useQuantization_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,int) -> btQuantizedBvhDoubleData_useQuantization_set
    int btQuantizedBvhDoubleData_useQuantization_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> btQuantizedBvhDoubleData_useQuantization_get
    void btQuantizedBvhDoubleData_numContiguousLeafNodes_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,int) -> btQuantizedBvhDoubleData_numContiguousLeafNodes_set
    int btQuantizedBvhDoubleData_numContiguousLeafNodes_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> btQuantizedBvhDoubleData_numContiguousLeafNodes_get
    void btQuantizedBvhDoubleData_numQuantizedContiguousNodes_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,int) -> btQuantizedBvhDoubleData_numQuantizedContiguousNodes_set
    int btQuantizedBvhDoubleData_numQuantizedContiguousNodes_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> btQuantizedBvhDoubleData_numQuantizedContiguousNodes_get
    void btQuantizedBvhDoubleData_contiguousNodesPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData) -> btQuantizedBvhDoubleData_contiguousNodesPtr_set
    long btQuantizedBvhDoubleData_contiguousNodesPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> btQuantizedBvhDoubleData_contiguousNodesPtr_get
    void btQuantizedBvhDoubleData_quantizedContiguousNodesPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData) -> btQuantizedBvhDoubleData_quantizedContiguousNodesPtr_set
    long btQuantizedBvhDoubleData_quantizedContiguousNodesPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> btQuantizedBvhDoubleData_quantizedContiguousNodesPtr_get
    void btQuantizedBvhDoubleData_traversalMode_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,int) -> btQuantizedBvhDoubleData_traversalMode_set
    int btQuantizedBvhDoubleData_traversalMode_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> btQuantizedBvhDoubleData_traversalMode_get
    void btQuantizedBvhDoubleData_numSubtreeHeaders_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,int) -> btQuantizedBvhDoubleData_numSubtreeHeaders_set
    int btQuantizedBvhDoubleData_numSubtreeHeaders_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> btQuantizedBvhDoubleData_numSubtreeHeaders_get
    void btQuantizedBvhDoubleData_subTreeInfoPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData,long,com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData) -> btQuantizedBvhDoubleData_subTreeInfoPtr_set
    long btQuantizedBvhDoubleData_subTreeInfoPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> btQuantizedBvhDoubleData_subTreeInfoPtr_get
    long new_btQuantizedBvhDoubleData() -> new_btQuantizedBvhDoubleData
    void delete_btQuantizedBvhDoubleData(long) -> delete_btQuantizedBvhDoubleData
    void btDbvtProxy_leaf_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtProxy,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btDbvtProxy_leaf_set
    long btDbvtProxy_leaf_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtProxy) -> btDbvtProxy_leaf_get
    void btDbvtProxy_links_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtProxy,long) -> btDbvtProxy_links_set
    long btDbvtProxy_links_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtProxy) -> btDbvtProxy_links_get
    void btDbvtProxy_stage_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtProxy,int) -> btDbvtProxy_stage_set
    int btDbvtProxy_stage_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtProxy) -> btDbvtProxy_stage_get
    long new_btDbvtProxy(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short) -> new_btDbvtProxy
    void delete_btDbvtProxy(long) -> delete_btDbvtProxy
    void btDbvtBroadphase_sets_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btDbvtBroadphase_sets_set
    long btDbvtBroadphase_sets_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_sets_get
    void btDbvtBroadphase_stageRoots_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long) -> btDbvtBroadphase_stageRoots_set
    long btDbvtBroadphase_stageRoots_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_stageRoots_get
    void btDbvtBroadphase_paircache_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache) -> btDbvtBroadphase_paircache_set
    long btDbvtBroadphase_paircache_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_paircache_get
    void btDbvtBroadphase_prediction_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,float) -> btDbvtBroadphase_prediction_set
    float btDbvtBroadphase_prediction_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_prediction_get
    void btDbvtBroadphase_stageCurrent_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int) -> btDbvtBroadphase_stageCurrent_set
    int btDbvtBroadphase_stageCurrent_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_stageCurrent_get
    void btDbvtBroadphase_fupdates_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int) -> btDbvtBroadphase_fupdates_set
    int btDbvtBroadphase_fupdates_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_fupdates_get
    void btDbvtBroadphase_dupdates_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int) -> btDbvtBroadphase_dupdates_set
    int btDbvtBroadphase_dupdates_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_dupdates_get
    void btDbvtBroadphase_cupdates_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int) -> btDbvtBroadphase_cupdates_set
    int btDbvtBroadphase_cupdates_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_cupdates_get
    void btDbvtBroadphase_newpairs_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int) -> btDbvtBroadphase_newpairs_set
    int btDbvtBroadphase_newpairs_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_newpairs_get
    void btDbvtBroadphase_fixedleft_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int) -> btDbvtBroadphase_fixedleft_set
    int btDbvtBroadphase_fixedleft_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_fixedleft_get
    void btDbvtBroadphase_updates_call_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long) -> btDbvtBroadphase_updates_call_set
    long btDbvtBroadphase_updates_call_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_updates_call_get
    void btDbvtBroadphase_updates_done_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long) -> btDbvtBroadphase_updates_done_set
    long btDbvtBroadphase_updates_done_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_updates_done_get
    void btDbvtBroadphase_updates_ratio_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,float) -> btDbvtBroadphase_updates_ratio_set
    float btDbvtBroadphase_updates_ratio_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_updates_ratio_get
    void btDbvtBroadphase_pid_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int) -> btDbvtBroadphase_pid_set
    int btDbvtBroadphase_pid_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_pid_get
    void btDbvtBroadphase_cid_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int) -> btDbvtBroadphase_cid_set
    int btDbvtBroadphase_cid_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_cid_get
    void btDbvtBroadphase_gid_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,int) -> btDbvtBroadphase_gid_set
    int btDbvtBroadphase_gid_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_gid_get
    void btDbvtBroadphase_releasepaircache_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,boolean) -> btDbvtBroadphase_releasepaircache_set
    boolean btDbvtBroadphase_releasepaircache_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_releasepaircache_get
    void btDbvtBroadphase_deferedcollide_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,boolean) -> btDbvtBroadphase_deferedcollide_set
    boolean btDbvtBroadphase_deferedcollide_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_deferedcollide_get
    void btDbvtBroadphase_needcleanup_set(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,boolean) -> btDbvtBroadphase_needcleanup_set
    boolean btDbvtBroadphase_needcleanup_get(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_needcleanup_get
    long new_btDbvtBroadphase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache) -> new_btDbvtBroadphase__SWIG_0
    long new_btDbvtBroadphase__SWIG_1() -> new_btDbvtBroadphase__SWIG_1
    void delete_btDbvtBroadphase(long) -> delete_btDbvtBroadphase
    void btDbvtBroadphase_collide(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btDbvtBroadphase_collide
    void btDbvtBroadphase_optimize(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_optimize
    void btDbvtBroadphase_rayTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btDbvtBroadphase_rayTest__SWIG_0
    void btDbvtBroadphase_rayTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3) -> btDbvtBroadphase_rayTest__SWIG_1
    void btDbvtBroadphase_rayTest__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> btDbvtBroadphase_rayTest__SWIG_2
    long btDbvtBroadphase_getOverlappingPairCache__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_getOverlappingPairCache__SWIG_0
    void btDbvtBroadphase_performDeferredRemoval(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btDbvtBroadphase_performDeferredRemoval
    void btDbvtBroadphase_setVelocityPrediction(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,float) -> btDbvtBroadphase_setVelocityPrediction
    float btDbvtBroadphase_getVelocityPrediction(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> btDbvtBroadphase_getVelocityPrediction
    void btDbvtBroadphase_setAabbForceUpdate(long,com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btDbvtBroadphase_setAabbForceUpdate
    void btDbvtBroadphase_benchmark(long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface) -> btDbvtBroadphase_benchmark
    void btSimpleBroadphaseProxy_nextFree_set(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy,int) -> btSimpleBroadphaseProxy_nextFree_set
    int btSimpleBroadphaseProxy_nextFree_get(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy) -> btSimpleBroadphaseProxy_nextFree_get
    long new_btSimpleBroadphaseProxy__SWIG_0() -> new_btSimpleBroadphaseProxy__SWIG_0
    long new_btSimpleBroadphaseProxy__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,long,short,short,long) -> new_btSimpleBroadphaseProxy__SWIG_1
    void btSimpleBroadphaseProxy_SetNextFree(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy,int) -> btSimpleBroadphaseProxy_SetNextFree
    int btSimpleBroadphaseProxy_GetNextFree(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy) -> btSimpleBroadphaseProxy_GetNextFree
    void delete_btSimpleBroadphaseProxy(long) -> delete_btSimpleBroadphaseProxy
    long new_btSimpleBroadphase__SWIG_0(int,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache) -> new_btSimpleBroadphase__SWIG_0
    long new_btSimpleBroadphase__SWIG_1(int) -> new_btSimpleBroadphase__SWIG_1
    long new_btSimpleBroadphase__SWIG_2() -> new_btSimpleBroadphase__SWIG_2
    void delete_btSimpleBroadphase(long) -> delete_btSimpleBroadphase
    boolean btSimpleBroadphase_aabbOverlap(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy) -> btSimpleBroadphase_aabbOverlap
    void btSimpleBroadphase_rayTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btSimpleBroadphase_rayTest__SWIG_0
    void btSimpleBroadphase_rayTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3) -> btSimpleBroadphase_rayTest__SWIG_1
    void btSimpleBroadphase_rayTest__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> btSimpleBroadphase_rayTest__SWIG_2
    long btSimpleBroadphase_getOverlappingPairCache__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase) -> btSimpleBroadphase_getOverlappingPairCache__SWIG_0
    boolean btSimpleBroadphase_testAabbOverlap(long,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btSimpleBroadphase_testAabbOverlap
    void btMultiSapBroadphase_btMultiSapProxy_aabbMin_set(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btMultiSapBroadphase_btMultiSapProxy_aabbMin_set
    long btMultiSapBroadphase_btMultiSapProxy_aabbMin_get(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy) -> btMultiSapBroadphase_btMultiSapProxy_aabbMin_get
    void btMultiSapBroadphase_btMultiSapProxy_aabbMax_set(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btMultiSapBroadphase_btMultiSapProxy_aabbMax_set
    long btMultiSapBroadphase_btMultiSapProxy_aabbMax_get(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy) -> btMultiSapBroadphase_btMultiSapProxy_aabbMax_get
    void btMultiSapBroadphase_btMultiSapProxy_shapeType_set(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy,int) -> btMultiSapBroadphase_btMultiSapProxy_shapeType_set
    int btMultiSapBroadphase_btMultiSapProxy_shapeType_get(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy) -> btMultiSapBroadphase_btMultiSapProxy_shapeType_get
    long new_btMultiSapBroadphase_btMultiSapProxy(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,long,short,short) -> new_btMultiSapBroadphase_btMultiSapProxy
    void delete_btMultiSapBroadphase_btMultiSapProxy(long) -> delete_btMultiSapBroadphase_btMultiSapProxy
    long btMultiSapBroadphase_getBroadphaseArray__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase) -> btMultiSapBroadphase_getBroadphaseArray__SWIG_0
    void delete_btMultiSapBroadphase(long) -> delete_btMultiSapBroadphase
    void btMultiSapBroadphase_rayTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btMultiSapBroadphase_rayTest__SWIG_0
    void btMultiSapBroadphase_rayTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3) -> btMultiSapBroadphase_rayTest__SWIG_1
    void btMultiSapBroadphase_rayTest__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> btMultiSapBroadphase_rayTest__SWIG_2
    void btMultiSapBroadphase_addToChildBroadphase(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface) -> btMultiSapBroadphase_addToChildBroadphase
    boolean btMultiSapBroadphase_testAabbOverlap(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btMultiSapBroadphase_testAabbOverlap
    long btMultiSapBroadphase_getOverlappingPairCache__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase) -> btMultiSapBroadphase_getOverlappingPairCache__SWIG_0
    void btMultiSapBroadphase_buildTree(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btMultiSapBroadphase_buildTree
    void btMultiSapBroadphase_quicksort(long,com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase,long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray,int,int) -> btMultiSapBroadphase_quicksort
    long new_btCollisionAlgorithmConstructionInfo__SWIG_0() -> new_btCollisionAlgorithmConstructionInfo__SWIG_0
    long new_btCollisionAlgorithmConstructionInfo__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,int) -> new_btCollisionAlgorithmConstructionInfo__SWIG_1
    void btCollisionAlgorithmConstructionInfo_dispatcher1_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btCollisionAlgorithmConstructionInfo_dispatcher1_set
    long btCollisionAlgorithmConstructionInfo_dispatcher1_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo) -> btCollisionAlgorithmConstructionInfo_dispatcher1_get
    void btCollisionAlgorithmConstructionInfo_manifold_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btCollisionAlgorithmConstructionInfo_manifold_set
    long btCollisionAlgorithmConstructionInfo_manifold_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo) -> btCollisionAlgorithmConstructionInfo_manifold_get
    void delete_btCollisionAlgorithmConstructionInfo(long) -> delete_btCollisionAlgorithmConstructionInfo
    void delete_btCollisionAlgorithm(long) -> delete_btCollisionAlgorithm
    void btCollisionAlgorithm_processCollision(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> btCollisionAlgorithm_processCollision
    float btCollisionAlgorithm_calculateTimeOfImpact(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> btCollisionAlgorithm_calculateTimeOfImpact
    void btCollisionAlgorithm_getAllContactManifolds(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray) -> btCollisionAlgorithm_getAllContactManifolds
    void delete_btOverlappingPairCallback(long) -> delete_btOverlappingPairCallback
    long btOverlappingPairCallback_addOverlappingPair(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btOverlappingPairCallback_addOverlappingPair
    long btOverlappingPairCallback_removeOverlappingPair(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btOverlappingPairCallback_removeOverlappingPair
    void btOverlappingPairCallback_removeOverlappingPairsContainingProxy(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btOverlappingPairCallback_removeOverlappingPairsContainingProxy
    long new_btOverlappingPairCallback() -> new_btOverlappingPairCallback
    void btOverlappingPairCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,boolean,boolean) -> btOverlappingPairCallback_director_connect
    void btOverlappingPairCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,boolean) -> btOverlappingPairCallback_change_ownership
    void gOverlappingPairs_set(int) -> gOverlappingPairs_set
    int gOverlappingPairs_get() -> gOverlappingPairs_get
    void btAxisSweep3InternalShort_Edge_pos_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge,int) -> btAxisSweep3InternalShort_Edge_pos_set
    int btAxisSweep3InternalShort_Edge_pos_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge) -> btAxisSweep3InternalShort_Edge_pos_get
    void btAxisSweep3InternalShort_Edge_handle_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge,int) -> btAxisSweep3InternalShort_Edge_handle_set
    int btAxisSweep3InternalShort_Edge_handle_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge) -> btAxisSweep3InternalShort_Edge_handle_get
    int btAxisSweep3InternalShort_Edge_IsMax(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge) -> btAxisSweep3InternalShort_Edge_IsMax
    long new_btAxisSweep3InternalShort_Edge() -> new_btAxisSweep3InternalShort_Edge
    void delete_btAxisSweep3InternalShort_Edge(long) -> delete_btAxisSweep3InternalShort_Edge
    void btAxisSweep3InternalShort_Handle_minEdges_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle,int[]) -> btAxisSweep3InternalShort_Handle_minEdges_set
    int[] btAxisSweep3InternalShort_Handle_minEdges_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle) -> btAxisSweep3InternalShort_Handle_minEdges_get
    void btAxisSweep3InternalShort_Handle_maxEdges_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle,int[]) -> btAxisSweep3InternalShort_Handle_maxEdges_set
    int[] btAxisSweep3InternalShort_Handle_maxEdges_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle) -> btAxisSweep3InternalShort_Handle_maxEdges_get
    void btAxisSweep3InternalShort_Handle_dbvtProxy_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btAxisSweep3InternalShort_Handle_dbvtProxy_set
    long btAxisSweep3InternalShort_Handle_dbvtProxy_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle) -> btAxisSweep3InternalShort_Handle_dbvtProxy_get
    void btAxisSweep3InternalShort_Handle_SetNextFree(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle,int) -> btAxisSweep3InternalShort_Handle_SetNextFree
    int btAxisSweep3InternalShort_Handle_GetNextFree(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle) -> btAxisSweep3InternalShort_Handle_GetNextFree
    long new_btAxisSweep3InternalShort_Handle() -> new_btAxisSweep3InternalShort_Handle
    void delete_btAxisSweep3InternalShort_Handle(long) -> delete_btAxisSweep3InternalShort_Handle
    long new_btAxisSweep3InternalShort__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,boolean) -> new_btAxisSweep3InternalShort__SWIG_0
    long new_btAxisSweep3InternalShort__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache) -> new_btAxisSweep3InternalShort__SWIG_1
    long new_btAxisSweep3InternalShort__SWIG_2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int) -> new_btAxisSweep3InternalShort__SWIG_2
    long new_btAxisSweep3InternalShort__SWIG_3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int) -> new_btAxisSweep3InternalShort__SWIG_3
    void delete_btAxisSweep3InternalShort(long) -> delete_btAxisSweep3InternalShort
    int btAxisSweep3InternalShort_getNumHandles(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort) -> btAxisSweep3InternalShort_getNumHandles
    int btAxisSweep3InternalShort_addHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long) -> btAxisSweep3InternalShort_addHandle
    void btAxisSweep3InternalShort_removeHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,int,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btAxisSweep3InternalShort_removeHandle
    void btAxisSweep3InternalShort_updateHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btAxisSweep3InternalShort_updateHandle
    long btAxisSweep3InternalShort_getHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,int) -> btAxisSweep3InternalShort_getHandle
    void btAxisSweep3InternalShort_rayTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btAxisSweep3InternalShort_rayTest__SWIG_0
    void btAxisSweep3InternalShort_rayTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3) -> btAxisSweep3InternalShort_rayTest__SWIG_1
    void btAxisSweep3InternalShort_rayTest__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> btAxisSweep3InternalShort_rayTest__SWIG_2
    void btAxisSweep3InternalShort_quantize(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,java.nio.IntBuffer,com.badlogic.gdx.math.Vector3,int) -> btAxisSweep3InternalShort_quantize
    void btAxisSweep3InternalShort_unQuantize(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btAxisSweep3InternalShort_unQuantize
    boolean btAxisSweep3InternalShort_testAabbOverlap(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btAxisSweep3InternalShort_testAabbOverlap
    long btAxisSweep3InternalShort_getOverlappingPairCache__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort) -> btAxisSweep3InternalShort_getOverlappingPairCache__SWIG_0
    void btAxisSweep3InternalShort_setOverlappingPairUserCallback(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback) -> btAxisSweep3InternalShort_setOverlappingPairUserCallback
    long btAxisSweep3InternalShort_getOverlappingPairUserCallback(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort) -> btAxisSweep3InternalShort_getOverlappingPairUserCallback
    void btAxisSweep3InternalInt_Edge_pos_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge,long) -> btAxisSweep3InternalInt_Edge_pos_set
    long btAxisSweep3InternalInt_Edge_pos_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge) -> btAxisSweep3InternalInt_Edge_pos_get
    void btAxisSweep3InternalInt_Edge_handle_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge,long) -> btAxisSweep3InternalInt_Edge_handle_set
    long btAxisSweep3InternalInt_Edge_handle_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge) -> btAxisSweep3InternalInt_Edge_handle_get
    long btAxisSweep3InternalInt_Edge_IsMax(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge) -> btAxisSweep3InternalInt_Edge_IsMax
    long new_btAxisSweep3InternalInt_Edge() -> new_btAxisSweep3InternalInt_Edge
    void delete_btAxisSweep3InternalInt_Edge(long) -> delete_btAxisSweep3InternalInt_Edge
    void btAxisSweep3InternalInt_Handle_minEdges_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle,long[]) -> btAxisSweep3InternalInt_Handle_minEdges_set
    long[] btAxisSweep3InternalInt_Handle_minEdges_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle) -> btAxisSweep3InternalInt_Handle_minEdges_get
    void btAxisSweep3InternalInt_Handle_maxEdges_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle,long[]) -> btAxisSweep3InternalInt_Handle_maxEdges_set
    long[] btAxisSweep3InternalInt_Handle_maxEdges_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle) -> btAxisSweep3InternalInt_Handle_maxEdges_get
    void btAxisSweep3InternalInt_Handle_dbvtProxy_set(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btAxisSweep3InternalInt_Handle_dbvtProxy_set
    long btAxisSweep3InternalInt_Handle_dbvtProxy_get(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle) -> btAxisSweep3InternalInt_Handle_dbvtProxy_get
    void btAxisSweep3InternalInt_Handle_SetNextFree(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle,long) -> btAxisSweep3InternalInt_Handle_SetNextFree
    long btAxisSweep3InternalInt_Handle_GetNextFree(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle) -> btAxisSweep3InternalInt_Handle_GetNextFree
    long new_btAxisSweep3InternalInt_Handle() -> new_btAxisSweep3InternalInt_Handle
    void delete_btAxisSweep3InternalInt_Handle(long) -> delete_btAxisSweep3InternalInt_Handle
    long new_btAxisSweep3InternalInt__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,long,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,boolean) -> new_btAxisSweep3InternalInt__SWIG_0
    long new_btAxisSweep3InternalInt__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,long,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache) -> new_btAxisSweep3InternalInt__SWIG_1
    long new_btAxisSweep3InternalInt__SWIG_2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,long) -> new_btAxisSweep3InternalInt__SWIG_2
    long new_btAxisSweep3InternalInt__SWIG_3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long) -> new_btAxisSweep3InternalInt__SWIG_3
    void delete_btAxisSweep3InternalInt(long) -> delete_btAxisSweep3InternalInt
    long btAxisSweep3InternalInt_getNumHandles(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt) -> btAxisSweep3InternalInt_getNumHandles
    long btAxisSweep3InternalInt_addHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long) -> btAxisSweep3InternalInt_addHandle
    void btAxisSweep3InternalInt_removeHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,long,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btAxisSweep3InternalInt_removeHandle
    void btAxisSweep3InternalInt_updateHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,long,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btAxisSweep3InternalInt_updateHandle
    long btAxisSweep3InternalInt_getHandle(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,long) -> btAxisSweep3InternalInt_getHandle
    void btAxisSweep3InternalInt_rayTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btAxisSweep3InternalInt_rayTest__SWIG_0
    void btAxisSweep3InternalInt_rayTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3) -> btAxisSweep3InternalInt_rayTest__SWIG_1
    void btAxisSweep3InternalInt_rayTest__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> btAxisSweep3InternalInt_rayTest__SWIG_2
    void btAxisSweep3InternalInt_quantize(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,java.nio.LongBuffer,com.badlogic.gdx.math.Vector3,int) -> btAxisSweep3InternalInt_quantize
    void btAxisSweep3InternalInt_unQuantize(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btAxisSweep3InternalInt_unQuantize
    boolean btAxisSweep3InternalInt_testAabbOverlap(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btAxisSweep3InternalInt_testAabbOverlap
    long btAxisSweep3InternalInt_getOverlappingPairCache__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt) -> btAxisSweep3InternalInt_getOverlappingPairCache__SWIG_0
    void btAxisSweep3InternalInt_setOverlappingPairUserCallback(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback) -> btAxisSweep3InternalInt_setOverlappingPairUserCallback
    long btAxisSweep3InternalInt_getOverlappingPairUserCallback(long,com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt) -> btAxisSweep3InternalInt_getOverlappingPairUserCallback
    long new_btAxisSweep3__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,boolean) -> new_btAxisSweep3__SWIG_0
    long new_btAxisSweep3__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache) -> new_btAxisSweep3__SWIG_1
    long new_btAxisSweep3__SWIG_2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int) -> new_btAxisSweep3__SWIG_2
    long new_btAxisSweep3__SWIG_3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_btAxisSweep3__SWIG_3
    void delete_btAxisSweep3(long) -> delete_btAxisSweep3
    long new_bt32BitAxisSweep3__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,boolean) -> new_bt32BitAxisSweep3__SWIG_0
    long new_bt32BitAxisSweep3__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache) -> new_bt32BitAxisSweep3__SWIG_1
    long new_bt32BitAxisSweep3__SWIG_2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long) -> new_bt32BitAxisSweep3__SWIG_2
    long new_bt32BitAxisSweep3__SWIG_3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_bt32BitAxisSweep3__SWIG_3
    void delete_bt32BitAxisSweep3(long) -> delete_bt32BitAxisSweep3
    long new_btDispatcherInfo() -> new_btDispatcherInfo
    void btDispatcherInfo_timeStep_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,float) -> btDispatcherInfo_timeStep_set
    float btDispatcherInfo_timeStep_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo) -> btDispatcherInfo_timeStep_get
    void btDispatcherInfo_stepCount_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,int) -> btDispatcherInfo_stepCount_set
    int btDispatcherInfo_stepCount_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo) -> btDispatcherInfo_stepCount_get
    void btDispatcherInfo_dispatchFunc_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,int) -> btDispatcherInfo_dispatchFunc_set
    int btDispatcherInfo_dispatchFunc_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo) -> btDispatcherInfo_dispatchFunc_get
    void btDispatcherInfo_timeOfImpact_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,float) -> btDispatcherInfo_timeOfImpact_set
    float btDispatcherInfo_timeOfImpact_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo) -> btDispatcherInfo_timeOfImpact_get
    void btDispatcherInfo_useContinuous_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,boolean) -> btDispatcherInfo_useContinuous_set
    boolean btDispatcherInfo_useContinuous_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo) -> btDispatcherInfo_useContinuous_get
    void btDispatcherInfo_debugDraw_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btDispatcherInfo_debugDraw_set
    long btDispatcherInfo_debugDraw_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo) -> btDispatcherInfo_debugDraw_get
    void btDispatcherInfo_enableSatConvex_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,boolean) -> btDispatcherInfo_enableSatConvex_set
    boolean btDispatcherInfo_enableSatConvex_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo) -> btDispatcherInfo_enableSatConvex_get
    void btDispatcherInfo_enableSPU_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,boolean) -> btDispatcherInfo_enableSPU_set
    boolean btDispatcherInfo_enableSPU_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo) -> btDispatcherInfo_enableSPU_get
    void btDispatcherInfo_useEpa_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,boolean) -> btDispatcherInfo_useEpa_set
    boolean btDispatcherInfo_useEpa_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo) -> btDispatcherInfo_useEpa_get
    void btDispatcherInfo_allowedCcdPenetration_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,float) -> btDispatcherInfo_allowedCcdPenetration_set
    float btDispatcherInfo_allowedCcdPenetration_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo) -> btDispatcherInfo_allowedCcdPenetration_get
    void btDispatcherInfo_useConvexConservativeDistanceUtil_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,boolean) -> btDispatcherInfo_useConvexConservativeDistanceUtil_set
    boolean btDispatcherInfo_useConvexConservativeDistanceUtil_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo) -> btDispatcherInfo_useConvexConservativeDistanceUtil_get
    void btDispatcherInfo_convexConservativeDistanceThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,float) -> btDispatcherInfo_convexConservativeDistanceThreshold_set
    float btDispatcherInfo_convexConservativeDistanceThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo) -> btDispatcherInfo_convexConservativeDistanceThreshold_get
    void delete_btDispatcherInfo(long) -> delete_btDispatcherInfo
    void delete_btDispatcher(long) -> delete_btDispatcher
    long btDispatcher_findAlgorithm__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btDispatcher_findAlgorithm__SWIG_0
    long btDispatcher_findAlgorithm__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btDispatcher_findAlgorithm__SWIG_1
    long btDispatcher_getNewManifold(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btDispatcher_getNewManifold
    void btDispatcher_releaseManifold(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btDispatcher_releaseManifold
    void btDispatcher_clearManifold(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btDispatcher_clearManifold
    boolean btDispatcher_needsCollision(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btDispatcher_needsCollision
    boolean btDispatcher_needsResponse(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btDispatcher_needsResponse
    void btDispatcher_dispatchAllCollisionPairs(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btDispatcher_dispatchAllCollisionPairs
    int btDispatcher_getNumManifolds(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btDispatcher_getNumManifolds
    long btDispatcher_getManifoldByIndexInternal(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,int) -> btDispatcher_getManifoldByIndexInternal
    long btDispatcher_getInternalManifoldPointer(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btDispatcher_getInternalManifoldPointer
    long btDispatcher_getInternalManifoldPool__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btDispatcher_getInternalManifoldPool__SWIG_0
    long btDispatcher_allocateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,int) -> btDispatcher_allocateCollisionAlgorithm
    void btDispatcher_freeCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long) -> btDispatcher_freeCollisionAlgorithm
    void delete_btOverlapCallback(long) -> delete_btOverlapCallback
    boolean btOverlapCallback_processOverlap(long,com.badlogic.gdx.physics.bullet.collision.btOverlapCallback,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair) -> btOverlapCallback_processOverlap
    long new_btOverlapCallback() -> new_btOverlapCallback
    void btOverlapCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btOverlapCallback,long,boolean,boolean) -> btOverlapCallback_director_connect
    void btOverlapCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btOverlapCallback,long,boolean) -> btOverlapCallback_change_ownership
    void delete_btOverlapFilterCallback(long) -> delete_btOverlapFilterCallback
    boolean btOverlapFilterCallback_needBroadphaseCollision(long,com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btOverlapFilterCallback_needBroadphaseCollision
    long new_btOverlapFilterCallback() -> new_btOverlapFilterCallback
    void btOverlapFilterCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback,long,boolean,boolean) -> btOverlapFilterCallback_director_connect
    void btOverlapFilterCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback,long,boolean) -> btOverlapFilterCallback_change_ownership
    void gRemovePairs_set(int) -> gRemovePairs_set
    int gRemovePairs_get() -> gRemovePairs_get
    void gAddedPairs_set(int) -> gAddedPairs_set
    int gAddedPairs_get() -> gAddedPairs_get
    void gFindPairs_set(int) -> gFindPairs_set
    int gFindPairs_get() -> gFindPairs_get
    int BT_NULL_PAIR_get() -> BT_NULL_PAIR_get
    void delete_btOverlappingPairCache(long) -> delete_btOverlappingPairCache
    long btOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache) -> btOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0
    long btOverlappingPairCache_getOverlappingPairArray(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache) -> btOverlappingPairCache_getOverlappingPairArray
    void btOverlappingPairCache_cleanOverlappingPair(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btOverlappingPairCache_cleanOverlappingPair
    int btOverlappingPairCache_getNumOverlappingPairs(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache) -> btOverlappingPairCache_getNumOverlappingPairs
    void btOverlappingPairCache_cleanProxyFromPairs(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btOverlappingPairCache_cleanProxyFromPairs
    void btOverlappingPairCache_setOverlapFilterCallback(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback) -> btOverlappingPairCache_setOverlapFilterCallback
    void btOverlappingPairCache_processAllOverlappingPairs(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btOverlapCallback,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btOverlappingPairCache_processAllOverlappingPairs
    long btOverlappingPairCache_findPair(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btOverlappingPairCache_findPair
    boolean btOverlappingPairCache_hasDeferredRemoval(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache) -> btOverlappingPairCache_hasDeferredRemoval
    void btOverlappingPairCache_setInternalGhostPairCallback(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback) -> btOverlappingPairCache_setInternalGhostPairCallback
    void btOverlappingPairCache_sortOverlappingPairs(long,com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btOverlappingPairCache_sortOverlappingPairs
    long new_btHashedOverlappingPairCache() -> new_btHashedOverlappingPairCache
    void delete_btHashedOverlappingPairCache(long) -> delete_btHashedOverlappingPairCache
    boolean btHashedOverlappingPairCache_needsBroadphaseCollision(long,com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btHashedOverlappingPairCache_needsBroadphaseCollision
    long btHashedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache) -> btHashedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0
    long btHashedOverlappingPairCache_getOverlappingPairArray__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache) -> btHashedOverlappingPairCache_getOverlappingPairArray__SWIG_0
    int btHashedOverlappingPairCache_GetCount(long,com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache) -> btHashedOverlappingPairCache_GetCount
    long btHashedOverlappingPairCache_getOverlapFilterCallback(long,com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache) -> btHashedOverlappingPairCache_getOverlapFilterCallback
    long new_btSortedOverlappingPairCache() -> new_btSortedOverlappingPairCache
    void delete_btSortedOverlappingPairCache(long) -> delete_btSortedOverlappingPairCache
    boolean btSortedOverlappingPairCache_needsBroadphaseCollision(long,com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btSortedOverlappingPairCache_needsBroadphaseCollision
    long btSortedOverlappingPairCache_getOverlappingPairArray__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache) -> btSortedOverlappingPairCache_getOverlappingPairArray__SWIG_0
    long btSortedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache) -> btSortedOverlappingPairCache_getOverlappingPairArrayPtr__SWIG_0
    long btSortedOverlappingPairCache_getOverlapFilterCallback(long,com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache) -> btSortedOverlappingPairCache_getOverlapFilterCallback
    long btNullPairCache_getOverlappingPairArrayPtr__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btNullPairCache) -> btNullPairCache_getOverlappingPairArrayPtr__SWIG_0
    long new_btNullPairCache() -> new_btNullPairCache
    void delete_btNullPairCache(long) -> delete_btNullPairCache
    void delete_btCollisionShape(long) -> delete_btCollisionShape
    void btCollisionShape_getAabb(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btCollisionShape_getAabb
    void btCollisionShape_getBoundingSphere(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3,long) -> btCollisionShape_getBoundingSphere
    float btCollisionShape_getAngularMotionDisc(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_getAngularMotionDisc
    float btCollisionShape_getContactBreakingThreshold(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,float) -> btCollisionShape_getContactBreakingThreshold
    void btCollisionShape_calculateTemporalAabb(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btCollisionShape_calculateTemporalAabb
    boolean btCollisionShape_isPolyhedral(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_isPolyhedral
    boolean btCollisionShape_isConvex2d(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_isConvex2d
    boolean btCollisionShape_isConvex(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_isConvex
    boolean btCollisionShape_isNonMoving(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_isNonMoving
    boolean btCollisionShape_isConcave(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_isConcave
    boolean btCollisionShape_isCompound(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_isCompound
    boolean btCollisionShape_isSoftBody(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_isSoftBody
    boolean btCollisionShape_isInfinite(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_isInfinite
    void btCollisionShape_setLocalScaling(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3) -> btCollisionShape_setLocalScaling
    com.badlogic.gdx.math.Vector3 btCollisionShape_getLocalScaling(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_getLocalScaling
    void btCollisionShape_calculateLocalInertia(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,float,com.badlogic.gdx.math.Vector3) -> btCollisionShape_calculateLocalInertia
    java.lang.String btCollisionShape_getName(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_getName
    int btCollisionShape_getShapeType(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_getShapeType
    com.badlogic.gdx.math.Vector3 btCollisionShape_getAnisotropicRollingFrictionDirection(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_getAnisotropicRollingFrictionDirection
    void btCollisionShape_setMargin(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,float) -> btCollisionShape_setMargin
    float btCollisionShape_getMargin(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_getMargin
    void btCollisionShape_setUserPointer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long) -> btCollisionShape_setUserPointer
    long btCollisionShape_getUserPointer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_getUserPointer
    int btCollisionShape_calculateSerializeBufferSize(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionShape_calculateSerializeBufferSize
    java.lang.String btCollisionShape_serialize(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long,long) -> btCollisionShape_serialize
    void btCollisionShape_serializeSingleShape(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long) -> btCollisionShape_serializeSingleShape
    void btCollisionShapeData_name_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData,java.lang.String) -> btCollisionShapeData_name_set
    java.lang.String btCollisionShapeData_name_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> btCollisionShapeData_name_get
    void btCollisionShapeData_shapeType_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData,int) -> btCollisionShapeData_shapeType_set
    int btCollisionShapeData_shapeType_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> btCollisionShapeData_shapeType_get
    void btCollisionShapeData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData,java.lang.String) -> btCollisionShapeData_padding_set
    java.lang.String btCollisionShapeData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> btCollisionShapeData_padding_get
    long new_btCollisionShapeData() -> new_btCollisionShapeData
    void delete_btCollisionShapeData(long) -> delete_btCollisionShapeData
    void delete_btConvexShape(long) -> delete_btConvexShape
    com.badlogic.gdx.math.Vector3 btConvexShape_localGetSupportingVertex(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Vector3) -> btConvexShape_localGetSupportingVertex
    com.badlogic.gdx.math.Vector3 btConvexShape_localGetSupportingVertexWithoutMargin(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Vector3) -> btConvexShape_localGetSupportingVertexWithoutMargin
    com.badlogic.gdx.math.Vector3 btConvexShape_localGetSupportVertexWithoutMarginNonVirtual(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Vector3) -> btConvexShape_localGetSupportVertexWithoutMarginNonVirtual
    com.badlogic.gdx.math.Vector3 btConvexShape_localGetSupportVertexNonVirtual(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Vector3) -> btConvexShape_localGetSupportVertexNonVirtual
    float btConvexShape_getMarginNonVirtual(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape) -> btConvexShape_getMarginNonVirtual
    void btConvexShape_getAabbNonVirtual(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btConvexShape_getAabbNonVirtual
    void btConvexShape_project(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,long) -> btConvexShape_project
    void btConvexShape_batchedUnitVectorGetSupportingVertexWithoutMargin(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int) -> btConvexShape_batchedUnitVectorGetSupportingVertexWithoutMargin
    void btConvexShape_getAabbSlow(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btConvexShape_getAabbSlow
    int btConvexShape_getNumPreferredPenetrationDirections(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape) -> btConvexShape_getNumPreferredPenetrationDirections
    void btConvexShape_getPreferredPenetrationDirection(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,int,com.badlogic.gdx.math.Vector3) -> btConvexShape_getPreferredPenetrationDirection
    void delete_btConvexInternalShape(long) -> delete_btConvexInternalShape
    com.badlogic.gdx.math.Vector3 btConvexInternalShape_getImplicitShapeDimensions(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape) -> btConvexInternalShape_getImplicitShapeDimensions
    void btConvexInternalShape_setImplicitShapeDimensions(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape,com.badlogic.gdx.math.Vector3) -> btConvexInternalShape_setImplicitShapeDimensions
    void btConvexInternalShape_setSafeMargin__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape,float,float) -> btConvexInternalShape_setSafeMargin__SWIG_0
    void btConvexInternalShape_setSafeMargin__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape,float) -> btConvexInternalShape_setSafeMargin__SWIG_1
    void btConvexInternalShape_setSafeMargin__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape,com.badlogic.gdx.math.Vector3,float) -> btConvexInternalShape_setSafeMargin__SWIG_2
    void btConvexInternalShape_setSafeMargin__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape,com.badlogic.gdx.math.Vector3) -> btConvexInternalShape_setSafeMargin__SWIG_3
    com.badlogic.gdx.math.Vector3 btConvexInternalShape_getLocalScalingNV(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape) -> btConvexInternalShape_getLocalScalingNV
    float btConvexInternalShape_getMarginNV(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape) -> btConvexInternalShape_getMarginNV
    void btConvexInternalShapeData_collisionShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> btConvexInternalShapeData_collisionShapeData_set
    long btConvexInternalShapeData_collisionShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> btConvexInternalShapeData_collisionShapeData_get
    void btConvexInternalShapeData_localScaling_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btConvexInternalShapeData_localScaling_set
    long btConvexInternalShapeData_localScaling_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> btConvexInternalShapeData_localScaling_get
    void btConvexInternalShapeData_implicitShapeDimensions_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btConvexInternalShapeData_implicitShapeDimensions_set
    long btConvexInternalShapeData_implicitShapeDimensions_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> btConvexInternalShapeData_implicitShapeDimensions_get
    void btConvexInternalShapeData_collisionMargin_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData,float) -> btConvexInternalShapeData_collisionMargin_set
    float btConvexInternalShapeData_collisionMargin_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> btConvexInternalShapeData_collisionMargin_get
    void btConvexInternalShapeData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData,int) -> btConvexInternalShapeData_padding_set
    int btConvexInternalShapeData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> btConvexInternalShapeData_padding_get
    long new_btConvexInternalShapeData() -> new_btConvexInternalShapeData
    void delete_btConvexInternalShapeData(long) -> delete_btConvexInternalShapeData
    void btConvexInternalAabbCachingShape_recalcLocalAabb(long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalAabbCachingShape) -> btConvexInternalAabbCachingShape_recalcLocalAabb
    void delete_btConvexInternalAabbCachingShape(long) -> delete_btConvexInternalAabbCachingShape
    void delete_btPolyhedralConvexShape(long) -> delete_btPolyhedralConvexShape
    boolean btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape,int) -> btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_0
    boolean btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape) -> btPolyhedralConvexShape_initializePolyhedralFeatures__SWIG_1
    long btPolyhedralConvexShape_getConvexPolyhedron(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape) -> btPolyhedralConvexShape_getConvexPolyhedron
    int btPolyhedralConvexShape_getNumVertices(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape) -> btPolyhedralConvexShape_getNumVertices
    int btPolyhedralConvexShape_getNumEdges(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape) -> btPolyhedralConvexShape_getNumEdges
    void btPolyhedralConvexShape_getEdge(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btPolyhedralConvexShape_getEdge
    void btPolyhedralConvexShape_getVertex(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape,int,com.badlogic.gdx.math.Vector3) -> btPolyhedralConvexShape_getVertex
    int btPolyhedralConvexShape_getNumPlanes(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape) -> btPolyhedralConvexShape_getNumPlanes
    void btPolyhedralConvexShape_getPlane(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int) -> btPolyhedralConvexShape_getPlane
    boolean btPolyhedralConvexShape_isInside(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape,com.badlogic.gdx.math.Vector3,float) -> btPolyhedralConvexShape_isInside
    void btPolyhedralConvexAabbCachingShape_getNonvirtualAabb(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> btPolyhedralConvexAabbCachingShape_getNonvirtualAabb
    void btPolyhedralConvexAabbCachingShape_recalcLocalAabb(long,com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape) -> btPolyhedralConvexAabbCachingShape_recalcLocalAabb
    void delete_btPolyhedralConvexAabbCachingShape(long) -> delete_btPolyhedralConvexAabbCachingShape
    void delete_btConcaveShape(long) -> delete_btConcaveShape
    void btConcaveShape_processAllTriangles(long,com.badlogic.gdx.physics.bullet.collision.btConcaveShape,long,com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btConcaveShape_processAllTriangles
    void delete_btTriangleCallback(long) -> delete_btTriangleCallback
    void btTriangleCallback_processTriangle(long,com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int) -> btTriangleCallback_processTriangle
    long new_btTriangleCallback() -> new_btTriangleCallback
    void btTriangleCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,long,boolean,boolean) -> btTriangleCallback_director_connect
    void btTriangleCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,long,boolean) -> btTriangleCallback_change_ownership
    void delete_btInternalTriangleIndexCallback(long) -> delete_btInternalTriangleIndexCallback
    void btInternalTriangleIndexCallback_internalProcessTriangleIndex(long,com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int) -> btInternalTriangleIndexCallback_internalProcessTriangleIndex
    long new_btInternalTriangleIndexCallback() -> new_btInternalTriangleIndexCallback
    void btInternalTriangleIndexCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback,long,boolean,boolean) -> btInternalTriangleIndexCallback_director_connect
    void btInternalTriangleIndexCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback,long,boolean) -> btInternalTriangleIndexCallback_change_ownership
    long new_btTriangleInfo() -> new_btTriangleInfo
    void btTriangleInfo_flags_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo,int) -> btTriangleInfo_flags_set
    int btTriangleInfo_flags_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo) -> btTriangleInfo_flags_get
    void btTriangleInfo_edgeV0V1Angle_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo,float) -> btTriangleInfo_edgeV0V1Angle_set
    float btTriangleInfo_edgeV0V1Angle_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo) -> btTriangleInfo_edgeV0V1Angle_get
    void btTriangleInfo_edgeV1V2Angle_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo,float) -> btTriangleInfo_edgeV1V2Angle_set
    float btTriangleInfo_edgeV1V2Angle_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo) -> btTriangleInfo_edgeV1V2Angle_get
    void btTriangleInfo_edgeV2V0Angle_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo,float) -> btTriangleInfo_edgeV2V0Angle_set
    float btTriangleInfo_edgeV2V0Angle_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfo) -> btTriangleInfo_edgeV2V0Angle_get
    void delete_btTriangleInfo(long) -> delete_btTriangleInfo
    void btTriangleInfoMap_convexEpsilon_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,float) -> btTriangleInfoMap_convexEpsilon_set
    float btTriangleInfoMap_convexEpsilon_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap) -> btTriangleInfoMap_convexEpsilon_get
    void btTriangleInfoMap_planarEpsilon_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,float) -> btTriangleInfoMap_planarEpsilon_set
    float btTriangleInfoMap_planarEpsilon_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap) -> btTriangleInfoMap_planarEpsilon_get
    void btTriangleInfoMap_equalVertexThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,float) -> btTriangleInfoMap_equalVertexThreshold_set
    float btTriangleInfoMap_equalVertexThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap) -> btTriangleInfoMap_equalVertexThreshold_get
    void btTriangleInfoMap_edgeDistanceThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,float) -> btTriangleInfoMap_edgeDistanceThreshold_set
    float btTriangleInfoMap_edgeDistanceThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap) -> btTriangleInfoMap_edgeDistanceThreshold_get
    void btTriangleInfoMap_maxEdgeAngleThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,float) -> btTriangleInfoMap_maxEdgeAngleThreshold_set
    float btTriangleInfoMap_maxEdgeAngleThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap) -> btTriangleInfoMap_maxEdgeAngleThreshold_get
    void btTriangleInfoMap_zeroAreaThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,float) -> btTriangleInfoMap_zeroAreaThreshold_set
    float btTriangleInfoMap_zeroAreaThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap) -> btTriangleInfoMap_zeroAreaThreshold_get
    long new_btTriangleInfoMap() -> new_btTriangleInfoMap
    void delete_btTriangleInfoMap(long) -> delete_btTriangleInfoMap
    int btTriangleInfoMap_calculateSerializeBufferSize(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap) -> btTriangleInfoMap_calculateSerializeBufferSize
    java.lang.String btTriangleInfoMap_serialize(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,long,long) -> btTriangleInfoMap_serialize
    void btTriangleInfoMap_deSerialize(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap,long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleInfoMap_deSerialize
    void btTriangleInfoData_flags_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData,int) -> btTriangleInfoData_flags_set
    int btTriangleInfoData_flags_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData) -> btTriangleInfoData_flags_get
    void btTriangleInfoData_edgeV0V1Angle_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData,float) -> btTriangleInfoData_edgeV0V1Angle_set
    float btTriangleInfoData_edgeV0V1Angle_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData) -> btTriangleInfoData_edgeV0V1Angle_get
    void btTriangleInfoData_edgeV1V2Angle_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData,float) -> btTriangleInfoData_edgeV1V2Angle_set
    float btTriangleInfoData_edgeV1V2Angle_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData) -> btTriangleInfoData_edgeV1V2Angle_get
    void btTriangleInfoData_edgeV2V0Angle_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData,float) -> btTriangleInfoData_edgeV2V0Angle_set
    float btTriangleInfoData_edgeV2V0Angle_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData) -> btTriangleInfoData_edgeV2V0Angle_get
    long new_btTriangleInfoData() -> new_btTriangleInfoData
    void delete_btTriangleInfoData(long) -> delete_btTriangleInfoData
    void btTriangleInfoMapData_hashTablePtr_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,java.nio.IntBuffer) -> btTriangleInfoMapData_hashTablePtr_set
    java.nio.IntBuffer btTriangleInfoMapData_hashTablePtr_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleInfoMapData_hashTablePtr_get
    void btTriangleInfoMapData_nextPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,java.nio.IntBuffer) -> btTriangleInfoMapData_nextPtr_set
    java.nio.IntBuffer btTriangleInfoMapData_nextPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleInfoMapData_nextPtr_get
    void btTriangleInfoMapData_valueArrayPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData) -> btTriangleInfoMapData_valueArrayPtr_set
    long btTriangleInfoMapData_valueArrayPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleInfoMapData_valueArrayPtr_get
    void btTriangleInfoMapData_keyArrayPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,java.nio.IntBuffer) -> btTriangleInfoMapData_keyArrayPtr_set
    java.nio.IntBuffer btTriangleInfoMapData_keyArrayPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleInfoMapData_keyArrayPtr_get
    void btTriangleInfoMapData_convexEpsilon_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,float) -> btTriangleInfoMapData_convexEpsilon_set
    float btTriangleInfoMapData_convexEpsilon_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleInfoMapData_convexEpsilon_get
    void btTriangleInfoMapData_planarEpsilon_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,float) -> btTriangleInfoMapData_planarEpsilon_set
    float btTriangleInfoMapData_planarEpsilon_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleInfoMapData_planarEpsilon_get
    void btTriangleInfoMapData_equalVertexThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,float) -> btTriangleInfoMapData_equalVertexThreshold_set
    float btTriangleInfoMapData_equalVertexThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleInfoMapData_equalVertexThreshold_get
    void btTriangleInfoMapData_edgeDistanceThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,float) -> btTriangleInfoMapData_edgeDistanceThreshold_set
    float btTriangleInfoMapData_edgeDistanceThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleInfoMapData_edgeDistanceThreshold_get
    void btTriangleInfoMapData_zeroAreaThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,float) -> btTriangleInfoMapData_zeroAreaThreshold_set
    float btTriangleInfoMapData_zeroAreaThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleInfoMapData_zeroAreaThreshold_get
    void btTriangleInfoMapData_nextSize_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,int) -> btTriangleInfoMapData_nextSize_set
    int btTriangleInfoMapData_nextSize_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleInfoMapData_nextSize_get
    void btTriangleInfoMapData_hashTableSize_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,int) -> btTriangleInfoMapData_hashTableSize_set
    int btTriangleInfoMapData_hashTableSize_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleInfoMapData_hashTableSize_get
    void btTriangleInfoMapData_numValues_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,int) -> btTriangleInfoMapData_numValues_set
    int btTriangleInfoMapData_numValues_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleInfoMapData_numValues_get
    void btTriangleInfoMapData_numKeys_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,int) -> btTriangleInfoMapData_numKeys_set
    int btTriangleInfoMapData_numKeys_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleInfoMapData_numKeys_get
    void btTriangleInfoMapData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData,java.lang.String) -> btTriangleInfoMapData_padding_set
    java.lang.String btTriangleInfoMapData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleInfoMapData_padding_get
    long new_btTriangleInfoMapData() -> new_btTriangleInfoMapData
    void delete_btTriangleInfoMapData(long) -> delete_btTriangleInfoMapData
    long new_btStaticPlaneShape(com.badlogic.gdx.math.Vector3,float) -> new_btStaticPlaneShape
    void delete_btStaticPlaneShape(long) -> delete_btStaticPlaneShape
    com.badlogic.gdx.math.Vector3 btStaticPlaneShape_getPlaneNormal(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape) -> btStaticPlaneShape_getPlaneNormal
    float btStaticPlaneShape_getPlaneConstant(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape) -> btStaticPlaneShape_getPlaneConstant
    void btStaticPlaneShapeData_collisionShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> btStaticPlaneShapeData_collisionShapeData_set
    long btStaticPlaneShapeData_collisionShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData) -> btStaticPlaneShapeData_collisionShapeData_get
    void btStaticPlaneShapeData_localScaling_set(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btStaticPlaneShapeData_localScaling_set
    long btStaticPlaneShapeData_localScaling_get(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData) -> btStaticPlaneShapeData_localScaling_get
    void btStaticPlaneShapeData_planeNormal_set(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btStaticPlaneShapeData_planeNormal_set
    long btStaticPlaneShapeData_planeNormal_get(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData) -> btStaticPlaneShapeData_planeNormal_get
    void btStaticPlaneShapeData_planeConstant_set(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData,float) -> btStaticPlaneShapeData_planeConstant_set
    float btStaticPlaneShapeData_planeConstant_get(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData) -> btStaticPlaneShapeData_planeConstant_get
    void btStaticPlaneShapeData_pad_set(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData,java.lang.String) -> btStaticPlaneShapeData_pad_set
    java.lang.String btStaticPlaneShapeData_pad_get(long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData) -> btStaticPlaneShapeData_pad_get
    long new_btStaticPlaneShapeData() -> new_btStaticPlaneShapeData
    void delete_btStaticPlaneShapeData(long) -> delete_btStaticPlaneShapeData
    void delete_btHeightfieldTerrainShape(long) -> delete_btHeightfieldTerrainShape
    void btHeightfieldTerrainShape_setUseDiamondSubdivision__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape,boolean) -> btHeightfieldTerrainShape_setUseDiamondSubdivision__SWIG_0
    void btHeightfieldTerrainShape_setUseDiamondSubdivision__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape) -> btHeightfieldTerrainShape_setUseDiamondSubdivision__SWIG_1
    void btHeightfieldTerrainShape_setUseZigzagSubdivision__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape,boolean) -> btHeightfieldTerrainShape_setUseZigzagSubdivision__SWIG_0
    void btHeightfieldTerrainShape_setUseZigzagSubdivision__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape) -> btHeightfieldTerrainShape_setUseZigzagSubdivision__SWIG_1
    long new_btHeightfieldTerrainShape__SWIG_0(int,int,java.nio.FloatBuffer,float,float,float,int,boolean) -> new_btHeightfieldTerrainShape__SWIG_0
    long new_btHeightfieldTerrainShape__SWIG_1(int,int,java.nio.ShortBuffer,float,float,float,int,boolean) -> new_btHeightfieldTerrainShape__SWIG_1
    void delete_btTriangleMeshShape(long) -> delete_btTriangleMeshShape
    com.badlogic.gdx.math.Vector3 btTriangleMeshShape_localGetSupportingVertex(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape,com.badlogic.gdx.math.Vector3) -> btTriangleMeshShape_localGetSupportingVertex
    com.badlogic.gdx.math.Vector3 btTriangleMeshShape_localGetSupportingVertexWithoutMargin(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape,com.badlogic.gdx.math.Vector3) -> btTriangleMeshShape_localGetSupportingVertexWithoutMargin
    void btTriangleMeshShape_recalcLocalAabb(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape) -> btTriangleMeshShape_recalcLocalAabb
    long btTriangleMeshShape_getMeshInterface__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape) -> btTriangleMeshShape_getMeshInterface__SWIG_0
    com.badlogic.gdx.math.Vector3 btTriangleMeshShape_getLocalAabbMin(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape) -> btTriangleMeshShape_getLocalAabbMin
    com.badlogic.gdx.math.Vector3 btTriangleMeshShape_getLocalAabbMax(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape) -> btTriangleMeshShape_getLocalAabbMax
    void delete_btBvhTriangleMeshShape(long) -> delete_btBvhTriangleMeshShape
    boolean btBvhTriangleMeshShape_getOwnsBvh(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape) -> btBvhTriangleMeshShape_getOwnsBvh
    void btBvhTriangleMeshShape_performRaycast(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long,com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btBvhTriangleMeshShape_performRaycast
    void btBvhTriangleMeshShape_performConvexcast(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long,com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btBvhTriangleMeshShape_performConvexcast
    void btBvhTriangleMeshShape_refitTree(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btBvhTriangleMeshShape_refitTree
    void btBvhTriangleMeshShape_partialRefitTree(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btBvhTriangleMeshShape_partialRefitTree
    long btBvhTriangleMeshShape_getOptimizedBvh(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape) -> btBvhTriangleMeshShape_getOptimizedBvh
    void btBvhTriangleMeshShape_setOptimizedBvh__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh,com.badlogic.gdx.math.Vector3) -> btBvhTriangleMeshShape_setOptimizedBvh__SWIG_0
    void btBvhTriangleMeshShape_setOptimizedBvh__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh) -> btBvhTriangleMeshShape_setOptimizedBvh__SWIG_1
    void btBvhTriangleMeshShape_buildOptimizedBvh(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape) -> btBvhTriangleMeshShape_buildOptimizedBvh
    boolean btBvhTriangleMeshShape_usesQuantizedAabbCompression(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape) -> btBvhTriangleMeshShape_usesQuantizedAabbCompression
    void btBvhTriangleMeshShape_setTriangleInfoMap(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap) -> btBvhTriangleMeshShape_setTriangleInfoMap
    long btBvhTriangleMeshShape_getTriangleInfoMap__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape) -> btBvhTriangleMeshShape_getTriangleInfoMap__SWIG_0
    void btBvhTriangleMeshShape_serializeSingleBvh(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long) -> btBvhTriangleMeshShape_serializeSingleBvh
    void btBvhTriangleMeshShape_serializeSingleTriangleInfoMap(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long) -> btBvhTriangleMeshShape_serializeSingleTriangleInfoMap
    long new_btBvhTriangleMeshShape__SWIG_0(boolean,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,boolean) -> new_btBvhTriangleMeshShape__SWIG_0
    long new_btBvhTriangleMeshShape__SWIG_1(boolean,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean) -> new_btBvhTriangleMeshShape__SWIG_1
    long new_btBvhTriangleMeshShape__SWIG_2(boolean,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean) -> new_btBvhTriangleMeshShape__SWIG_2
    long new_btBvhTriangleMeshShape__SWIG_3(boolean,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_btBvhTriangleMeshShape__SWIG_3
    void btTriangleMeshShapeData_collisionShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> btTriangleMeshShapeData_collisionShapeData_set
    long btTriangleMeshShapeData_collisionShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData) -> btTriangleMeshShapeData_collisionShapeData_get
    void btTriangleMeshShapeData_meshInterface_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData) -> btTriangleMeshShapeData_meshInterface_set
    long btTriangleMeshShapeData_meshInterface_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData) -> btTriangleMeshShapeData_meshInterface_get
    void btTriangleMeshShapeData_quantizedFloatBvh_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData,long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> btTriangleMeshShapeData_quantizedFloatBvh_set
    long btTriangleMeshShapeData_quantizedFloatBvh_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData) -> btTriangleMeshShapeData_quantizedFloatBvh_get
    void btTriangleMeshShapeData_quantizedDoubleBvh_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData,long,com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> btTriangleMeshShapeData_quantizedDoubleBvh_set
    long btTriangleMeshShapeData_quantizedDoubleBvh_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData) -> btTriangleMeshShapeData_quantizedDoubleBvh_get
    void btTriangleMeshShapeData_triangleInfoMap_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData,long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> btTriangleMeshShapeData_triangleInfoMap_set
    long btTriangleMeshShapeData_triangleInfoMap_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData) -> btTriangleMeshShapeData_triangleInfoMap_get
    void btTriangleMeshShapeData_collisionMargin_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData,float) -> btTriangleMeshShapeData_collisionMargin_set
    float btTriangleMeshShapeData_collisionMargin_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData) -> btTriangleMeshShapeData_collisionMargin_get
    void btTriangleMeshShapeData_pad3_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData,java.lang.String) -> btTriangleMeshShapeData_pad3_set
    java.lang.String btTriangleMeshShapeData_pad3_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData) -> btTriangleMeshShapeData_pad3_get
    long new_btTriangleMeshShapeData() -> new_btTriangleMeshShapeData
    void delete_btTriangleMeshShapeData(long) -> delete_btTriangleMeshShapeData
    com.badlogic.gdx.math.Vector3 btBoxShape_getHalfExtentsWithMargin(long,com.badlogic.gdx.physics.bullet.collision.btBoxShape) -> btBoxShape_getHalfExtentsWithMargin
    com.badlogic.gdx.math.Vector3 btBoxShape_getHalfExtentsWithoutMargin(long,com.badlogic.gdx.physics.bullet.collision.btBoxShape) -> btBoxShape_getHalfExtentsWithoutMargin
    long new_btBoxShape(com.badlogic.gdx.math.Vector3) -> new_btBoxShape
    void btBoxShape_getPlaneEquation(long,com.badlogic.gdx.physics.bullet.collision.btBoxShape,long,com.badlogic.gdx.physics.bullet.linearmath.btVector4,int) -> btBoxShape_getPlaneEquation
    void delete_btBoxShape(long) -> delete_btBoxShape
    long new_btCapsuleShape__SWIG_1(float,float) -> new_btCapsuleShape__SWIG_1
    int btCapsuleShape_getUpAxis(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShape) -> btCapsuleShape_getUpAxis
    float btCapsuleShape_getRadius(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShape) -> btCapsuleShape_getRadius
    float btCapsuleShape_getHalfHeight(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShape) -> btCapsuleShape_getHalfHeight
    void delete_btCapsuleShape(long) -> delete_btCapsuleShape
    long new_btCapsuleShapeX(float,float) -> new_btCapsuleShapeX
    void delete_btCapsuleShapeX(long) -> delete_btCapsuleShapeX
    long new_btCapsuleShapeZ(float,float) -> new_btCapsuleShapeZ
    void delete_btCapsuleShapeZ(long) -> delete_btCapsuleShapeZ
    void btCapsuleShapeData_convexInternalShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData,long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> btCapsuleShapeData_convexInternalShapeData_set
    long btCapsuleShapeData_convexInternalShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData) -> btCapsuleShapeData_convexInternalShapeData_get
    void btCapsuleShapeData_upAxis_set(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData,int) -> btCapsuleShapeData_upAxis_set
    int btCapsuleShapeData_upAxis_get(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData) -> btCapsuleShapeData_upAxis_get
    void btCapsuleShapeData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData,java.lang.String) -> btCapsuleShapeData_padding_set
    java.lang.String btCapsuleShapeData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData) -> btCapsuleShapeData_padding_get
    long new_btCapsuleShapeData() -> new_btCapsuleShapeData
    void delete_btCapsuleShapeData(long) -> delete_btCapsuleShapeData
    com.badlogic.gdx.math.Vector3 btBox2dShape_getHalfExtentsWithMargin(long,com.badlogic.gdx.physics.bullet.collision.btBox2dShape) -> btBox2dShape_getHalfExtentsWithMargin
    com.badlogic.gdx.math.Vector3 btBox2dShape_getHalfExtentsWithoutMargin(long,com.badlogic.gdx.physics.bullet.collision.btBox2dShape) -> btBox2dShape_getHalfExtentsWithoutMargin
    long new_btBox2dShape(com.badlogic.gdx.math.Vector3) -> new_btBox2dShape
    int btBox2dShape_getVertexCount(long,com.badlogic.gdx.physics.bullet.collision.btBox2dShape) -> btBox2dShape_getVertexCount
    long btBox2dShape_getVertices(long,com.badlogic.gdx.physics.bullet.collision.btBox2dShape) -> btBox2dShape_getVertices
    long btBox2dShape_getNormals(long,com.badlogic.gdx.physics.bullet.collision.btBox2dShape) -> btBox2dShape_getNormals
    com.badlogic.gdx.math.Vector3 btBox2dShape_getCentroid(long,com.badlogic.gdx.physics.bullet.collision.btBox2dShape) -> btBox2dShape_getCentroid
    void btBox2dShape_getPlaneEquation(long,com.badlogic.gdx.physics.bullet.collision.btBox2dShape,long,com.badlogic.gdx.physics.bullet.linearmath.btVector4,int) -> btBox2dShape_getPlaneEquation
    void delete_btBox2dShape(long) -> delete_btBox2dShape
    void btTriangleShape_vertices1_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleShape,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTriangleShape_vertices1_set
    long btTriangleShape_vertices1_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleShape) -> btTriangleShape_vertices1_get
    com.badlogic.gdx.math.Vector3 btTriangleShape_getVertexPtr__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleShape,int) -> btTriangleShape_getVertexPtr__SWIG_0
    long new_btTriangleShape__SWIG_0() -> new_btTriangleShape__SWIG_0
    long new_btTriangleShape__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_btTriangleShape__SWIG_1
    void btTriangleShape_calcNormal(long,com.badlogic.gdx.physics.bullet.collision.btTriangleShape,com.badlogic.gdx.math.Vector3) -> btTriangleShape_calcNormal
    void btTriangleShape_getPlaneEquation(long,com.badlogic.gdx.physics.bullet.collision.btTriangleShape,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btTriangleShape_getPlaneEquation
    void delete_btTriangleShape(long) -> delete_btTriangleShape
    long new_btSphereShape(float) -> new_btSphereShape
    float btSphereShape_getRadius(long,com.badlogic.gdx.physics.bullet.collision.btSphereShape) -> btSphereShape_getRadius
    void btSphereShape_setUnscaledRadius(long,com.badlogic.gdx.physics.bullet.collision.btSphereShape,float) -> btSphereShape_setUnscaledRadius
    void delete_btSphereShape(long) -> delete_btSphereShape
    void delete_btStridingMeshInterface(long) -> delete_btStridingMeshInterface
    void btStridingMeshInterface_InternalProcessAllTriangles(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btStridingMeshInterface_InternalProcessAllTriangles
    void btStridingMeshInterface_calculateAabbBruteForce(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btStridingMeshInterface_calculateAabbBruteForce
    void btStridingMeshInterface_getLockedVertexIndexBase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,long,long,long,long,long,long,long,int) -> btStridingMeshInterface_getLockedVertexIndexBase__SWIG_0
    void btStridingMeshInterface_getLockedVertexIndexBase__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,long,long,long,long,long,long,long) -> btStridingMeshInterface_getLockedVertexIndexBase__SWIG_1
    void btStridingMeshInterface_getLockedReadOnlyVertexIndexBase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,long,long,long,long,long,long,long,int) -> btStridingMeshInterface_getLockedReadOnlyVertexIndexBase__SWIG_0
    void btStridingMeshInterface_getLockedReadOnlyVertexIndexBase__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,long,long,long,long,long,long,long) -> btStridingMeshInterface_getLockedReadOnlyVertexIndexBase__SWIG_1
    void btStridingMeshInterface_unLockVertexBase(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,int) -> btStridingMeshInterface_unLockVertexBase
    void btStridingMeshInterface_unLockReadOnlyVertexBase(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,int) -> btStridingMeshInterface_unLockReadOnlyVertexBase
    int btStridingMeshInterface_getNumSubParts(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface) -> btStridingMeshInterface_getNumSubParts
    void btStridingMeshInterface_preallocateVertices(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,int) -> btStridingMeshInterface_preallocateVertices
    void btStridingMeshInterface_preallocateIndices(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,int) -> btStridingMeshInterface_preallocateIndices
    boolean btStridingMeshInterface_hasPremadeAabb(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface) -> btStridingMeshInterface_hasPremadeAabb
    void btStridingMeshInterface_setPremadeAabb(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btStridingMeshInterface_setPremadeAabb
    void btStridingMeshInterface_getPremadeAabb(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btStridingMeshInterface_getPremadeAabb
    com.badlogic.gdx.math.Vector3 btStridingMeshInterface_getScaling(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface) -> btStridingMeshInterface_getScaling
    void btStridingMeshInterface_setScaling(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.math.Vector3) -> btStridingMeshInterface_setScaling
    int btStridingMeshInterface_calculateSerializeBufferSize(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface) -> btStridingMeshInterface_calculateSerializeBufferSize
    java.lang.String btStridingMeshInterface_serialize(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,long) -> btStridingMeshInterface_serialize
    void btIntIndexData_value_set(long,com.badlogic.gdx.physics.bullet.collision.btIntIndexData,int) -> btIntIndexData_value_set
    int btIntIndexData_value_get(long,com.badlogic.gdx.physics.bullet.collision.btIntIndexData) -> btIntIndexData_value_get
    long new_btIntIndexData() -> new_btIntIndexData
    void delete_btIntIndexData(long) -> delete_btIntIndexData
    void btShortIntIndexData_value_set(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData,short) -> btShortIntIndexData_value_set
    short btShortIntIndexData_value_get(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData) -> btShortIntIndexData_value_get
    void btShortIntIndexData_pad_set(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData,java.lang.String) -> btShortIntIndexData_pad_set
    java.lang.String btShortIntIndexData_pad_get(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData) -> btShortIntIndexData_pad_get
    long new_btShortIntIndexData() -> new_btShortIntIndexData
    void delete_btShortIntIndexData(long) -> delete_btShortIntIndexData
    void btShortIntIndexTripletData_values_set(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData,short[]) -> btShortIntIndexTripletData_values_set
    short[] btShortIntIndexTripletData_values_get(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData) -> btShortIntIndexTripletData_values_get
    void btShortIntIndexTripletData_pad_set(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData,java.lang.String) -> btShortIntIndexTripletData_pad_set
    java.lang.String btShortIntIndexTripletData_pad_get(long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData) -> btShortIntIndexTripletData_pad_get
    long new_btShortIntIndexTripletData() -> new_btShortIntIndexTripletData
    void delete_btShortIntIndexTripletData(long) -> delete_btShortIntIndexTripletData
    void btCharIndexTripletData_values_set(long,com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData,short[]) -> btCharIndexTripletData_values_set
    short[] btCharIndexTripletData_values_get(long,com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData) -> btCharIndexTripletData_values_get
    void btCharIndexTripletData_pad_set(long,com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData,char) -> btCharIndexTripletData_pad_set
    char btCharIndexTripletData_pad_get(long,com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData) -> btCharIndexTripletData_pad_get
    long new_btCharIndexTripletData() -> new_btCharIndexTripletData
    void delete_btCharIndexTripletData(long) -> delete_btCharIndexTripletData
    void btMeshPartData_vertices3f_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btMeshPartData_vertices3f_set
    long btMeshPartData_vertices3f_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData) -> btMeshPartData_vertices3f_get
    void btMeshPartData_vertices3d_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btMeshPartData_vertices3d_set
    long btMeshPartData_vertices3d_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData) -> btMeshPartData_vertices3d_get
    void btMeshPartData_indices32_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,long,com.badlogic.gdx.physics.bullet.collision.btIntIndexData) -> btMeshPartData_indices32_set
    long btMeshPartData_indices32_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData) -> btMeshPartData_indices32_get
    void btMeshPartData_3indices16_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData) -> btMeshPartData_3indices16_set
    long btMeshPartData_3indices16_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData) -> btMeshPartData_3indices16_get
    void btMeshPartData_3indices8_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,long,com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData) -> btMeshPartData_3indices8_set
    long btMeshPartData_3indices8_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData) -> btMeshPartData_3indices8_get
    void btMeshPartData_indices16_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,long,com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData) -> btMeshPartData_indices16_set
    long btMeshPartData_indices16_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData) -> btMeshPartData_indices16_get
    void btMeshPartData_numTriangles_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,int) -> btMeshPartData_numTriangles_set
    int btMeshPartData_numTriangles_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData) -> btMeshPartData_numTriangles_get
    void btMeshPartData_numVertices_set(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData,int) -> btMeshPartData_numVertices_set
    int btMeshPartData_numVertices_get(long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData) -> btMeshPartData_numVertices_get
    long new_btMeshPartData() -> new_btMeshPartData
    void delete_btMeshPartData(long) -> delete_btMeshPartData
    void btStridingMeshInterfaceData_meshPartsPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData,long,com.badlogic.gdx.physics.bullet.collision.btMeshPartData) -> btStridingMeshInterfaceData_meshPartsPtr_set
    long btStridingMeshInterfaceData_meshPartsPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData) -> btStridingMeshInterfaceData_meshPartsPtr_get
    void btStridingMeshInterfaceData_scaling_set(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btStridingMeshInterfaceData_scaling_set
    long btStridingMeshInterfaceData_scaling_get(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData) -> btStridingMeshInterfaceData_scaling_get
    void btStridingMeshInterfaceData_numMeshParts_set(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData,int) -> btStridingMeshInterfaceData_numMeshParts_set
    int btStridingMeshInterfaceData_numMeshParts_get(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData) -> btStridingMeshInterfaceData_numMeshParts_get
    void btStridingMeshInterfaceData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData,java.lang.String) -> btStridingMeshInterfaceData_padding_set
    java.lang.String btStridingMeshInterfaceData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData) -> btStridingMeshInterfaceData_padding_get
    long new_btStridingMeshInterfaceData() -> new_btStridingMeshInterfaceData
    void delete_btStridingMeshInterfaceData(long) -> delete_btStridingMeshInterfaceData
    long new_btMinkowskiSumShape(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape) -> new_btMinkowskiSumShape
    void btMinkowskiSumShape_setTransformA(long,com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape,com.badlogic.gdx.math.Matrix4) -> btMinkowskiSumShape_setTransformA
    void btMinkowskiSumShape_setTransformB(long,com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape,com.badlogic.gdx.math.Matrix4) -> btMinkowskiSumShape_setTransformB
    com.badlogic.gdx.math.Matrix4 btMinkowskiSumShape_getTransformA(long,com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape) -> btMinkowskiSumShape_getTransformA
    com.badlogic.gdx.math.Matrix4 btMinkowskiSumShape_GetTransformB(long,com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape) -> btMinkowskiSumShape_GetTransformB
    long btMinkowskiSumShape_getShapeA(long,com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape) -> btMinkowskiSumShape_getShapeA
    long btMinkowskiSumShape_getShapeB(long,com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape) -> btMinkowskiSumShape_getShapeB
    void delete_btMinkowskiSumShape(long) -> delete_btMinkowskiSumShape
    void btFace_indices_set(long,com.badlogic.gdx.physics.bullet.collision.btFace,long) -> btFace_indices_set
    long btFace_indices_get(long,com.badlogic.gdx.physics.bullet.collision.btFace) -> btFace_indices_get
    void btFace_plane_set(long,com.badlogic.gdx.physics.bullet.collision.btFace,float[]) -> btFace_plane_set
    float[] btFace_plane_get(long,com.badlogic.gdx.physics.bullet.collision.btFace) -> btFace_plane_get
    long new_btFace() -> new_btFace
    void delete_btFace(long) -> delete_btFace
    long new_btConvexPolyhedron() -> new_btConvexPolyhedron
    void delete_btConvexPolyhedron(long) -> delete_btConvexPolyhedron
    void btConvexPolyhedron_vertices_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> btConvexPolyhedron_vertices_set
    long btConvexPolyhedron_vertices_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron) -> btConvexPolyhedron_vertices_get
    void btConvexPolyhedron_faces_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long) -> btConvexPolyhedron_faces_set
    long btConvexPolyhedron_faces_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron) -> btConvexPolyhedron_faces_get
    void btConvexPolyhedron_uniqueEdges_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> btConvexPolyhedron_uniqueEdges_set
    long btConvexPolyhedron_uniqueEdges_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron) -> btConvexPolyhedron_uniqueEdges_get
    void btConvexPolyhedron_localCenter_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btConvexPolyhedron_localCenter_set
    long btConvexPolyhedron_localCenter_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron) -> btConvexPolyhedron_localCenter_get
    void btConvexPolyhedron_extents_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btConvexPolyhedron_extents_set
    long btConvexPolyhedron_extents_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron) -> btConvexPolyhedron_extents_get
    void btConvexPolyhedron_radius_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,float) -> btConvexPolyhedron_radius_set
    float btConvexPolyhedron_radius_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron) -> btConvexPolyhedron_radius_get
    void btConvexPolyhedron_mC_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btConvexPolyhedron_mC_set
    long btConvexPolyhedron_mC_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron) -> btConvexPolyhedron_mC_get
    void btConvexPolyhedron_mE_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btConvexPolyhedron_mE_set
    long btConvexPolyhedron_mE_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron) -> btConvexPolyhedron_mE_get
    void btConvexPolyhedron_initialize(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron) -> btConvexPolyhedron_initialize
    boolean btConvexPolyhedron_testContainment(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron) -> btConvexPolyhedron_testContainment
    void btConvexPolyhedron_project(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,long,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btConvexPolyhedron_project
    long new_btOptimizedBvh() -> new_btOptimizedBvh
    void delete_btOptimizedBvh(long) -> delete_btOptimizedBvh
    void btOptimizedBvh_build(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btOptimizedBvh_build
    void btOptimizedBvh_refit(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btOptimizedBvh_refit
    void btOptimizedBvh_refitPartial(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btOptimizedBvh_refitPartial
    void btOptimizedBvh_updateBvhNodes(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,int,int,int) -> btOptimizedBvh_updateBvhNodes
    boolean btOptimizedBvh_serializeInPlace(long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh,long,long,boolean) -> btOptimizedBvh_serializeInPlace
    long btOptimizedBvh_deSerializeInPlace(long,long,boolean) -> btOptimizedBvh_deSerializeInPlace
    void btTriangle_vertex0_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangle,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTriangle_vertex0_set
    long btTriangle_vertex0_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangle) -> btTriangle_vertex0_get
    void btTriangle_vertex1_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangle,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTriangle_vertex1_set
    long btTriangle_vertex1_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangle) -> btTriangle_vertex1_get
    void btTriangle_vertex2_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangle,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTriangle_vertex2_set
    long btTriangle_vertex2_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangle) -> btTriangle_vertex2_get
    void btTriangle_partId_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangle,int) -> btTriangle_partId_set
    int btTriangle_partId_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangle) -> btTriangle_partId_get
    void btTriangle_triangleIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangle,int) -> btTriangle_triangleIndex_set
    int btTriangle_triangleIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangle) -> btTriangle_triangleIndex_get
    long new_btTriangle() -> new_btTriangle
    void delete_btTriangle(long) -> delete_btTriangle
    int btTriangleBuffer_getNumTriangles(long,com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer) -> btTriangleBuffer_getNumTriangles
    long btTriangleBuffer_getTriangle(long,com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer,int) -> btTriangleBuffer_getTriangle
    void btTriangleBuffer_clearBuffer(long,com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer) -> btTriangleBuffer_clearBuffer
    long new_btTriangleBuffer() -> new_btTriangleBuffer
    void delete_btTriangleBuffer(long) -> delete_btTriangleBuffer
    void btIndexedMesh_numTriangles_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int) -> btIndexedMesh_numTriangles_set
    int btIndexedMesh_numTriangles_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh) -> btIndexedMesh_numTriangles_get
    void btIndexedMesh_triangleIndexBase_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,java.nio.ByteBuffer) -> btIndexedMesh_triangleIndexBase_set
    java.nio.ByteBuffer btIndexedMesh_triangleIndexBase_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh) -> btIndexedMesh_triangleIndexBase_get
    void btIndexedMesh_triangleIndexStride_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int) -> btIndexedMesh_triangleIndexStride_set
    int btIndexedMesh_triangleIndexStride_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh) -> btIndexedMesh_triangleIndexStride_get
    void btIndexedMesh_numVertices_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int) -> btIndexedMesh_numVertices_set
    int btIndexedMesh_numVertices_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh) -> btIndexedMesh_numVertices_get
    void btIndexedMesh_vertexBase_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,java.nio.ByteBuffer) -> btIndexedMesh_vertexBase_set
    java.nio.ByteBuffer btIndexedMesh_vertexBase_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh) -> btIndexedMesh_vertexBase_get
    void btIndexedMesh_vertexStride_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int) -> btIndexedMesh_vertexStride_set
    int btIndexedMesh_vertexStride_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh) -> btIndexedMesh_vertexStride_get
    void btIndexedMesh_indexType_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int) -> btIndexedMesh_indexType_set
    int btIndexedMesh_indexType_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh) -> btIndexedMesh_indexType_get
    void btIndexedMesh_vertexType_set(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int) -> btIndexedMesh_vertexType_set
    int btIndexedMesh_vertexType_get(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh) -> btIndexedMesh_vertexType_get
    long new_btIndexedMesh() -> new_btIndexedMesh
    void btIndexedMesh_setTriangleIndexBase(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,java.nio.ShortBuffer) -> btIndexedMesh_setTriangleIndexBase
    void btIndexedMesh_setVertexBase(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,java.nio.FloatBuffer) -> btIndexedMesh_setVertexBase
    void btIndexedMesh_setVertices(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,java.nio.FloatBuffer,int,int,int) -> btIndexedMesh_setVertices
    void btIndexedMesh_setIndices(long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,java.nio.ShortBuffer,int,int) -> btIndexedMesh_setIndices
    void delete_btIndexedMesh(long) -> delete_btIndexedMesh
    long new_btTriangleIndexVertexArray() -> new_btTriangleIndexVertexArray
    void delete_btTriangleIndexVertexArray(long) -> delete_btTriangleIndexVertexArray
    void btTriangleIndexVertexArray_internalAddIndexedMesh__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray,long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int) -> btTriangleIndexVertexArray_internalAddIndexedMesh__SWIG_0
    void btTriangleIndexVertexArray_internalAddIndexedMesh__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray,long,com.badlogic.gdx.physics.bullet.collision.btIndexedMesh) -> btTriangleIndexVertexArray_internalAddIndexedMesh__SWIG_1
    void btTriangleIndexVertexArray_getLockedVertexIndexBase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray,long,long,long,long,long,long,long,long,int) -> btTriangleIndexVertexArray_getLockedVertexIndexBase__SWIG_0
    void btTriangleIndexVertexArray_getLockedVertexIndexBase__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray,long,long,long,long,long,long,long,long) -> btTriangleIndexVertexArray_getLockedVertexIndexBase__SWIG_1
    void btTriangleIndexVertexArray_getLockedReadOnlyVertexIndexBase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray,long,long,long,long,long,long,long,long,int) -> btTriangleIndexVertexArray_getLockedReadOnlyVertexIndexBase__SWIG_0
    void btTriangleIndexVertexArray_getLockedReadOnlyVertexIndexBase__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray,long,long,long,long,long,long,long,long) -> btTriangleIndexVertexArray_getLockedReadOnlyVertexIndexBase__SWIG_1
    long btTriangleIndexVertexArray_getIndexedMeshArray(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray) -> btTriangleIndexVertexArray_getIndexedMeshArray
    void btMaterial_friction_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterial,float) -> btMaterial_friction_set
    float btMaterial_friction_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterial) -> btMaterial_friction_get
    void btMaterial_restitution_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterial,float) -> btMaterial_restitution_set
    float btMaterial_restitution_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterial) -> btMaterial_restitution_get
    void btMaterial_pad_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterial,int[]) -> btMaterial_pad_set
    int[] btMaterial_pad_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterial) -> btMaterial_pad_get
    long new_btMaterial__SWIG_0() -> new_btMaterial__SWIG_0
    long new_btMaterial__SWIG_1(float,float) -> new_btMaterial__SWIG_1
    void delete_btMaterial(long) -> delete_btMaterial
    long new_btScaledBvhTriangleMeshShape(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,com.badlogic.gdx.math.Vector3) -> new_btScaledBvhTriangleMeshShape
    void delete_btScaledBvhTriangleMeshShape(long) -> delete_btScaledBvhTriangleMeshShape
    long btScaledBvhTriangleMeshShape_getChildShape__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape) -> btScaledBvhTriangleMeshShape_getChildShape__SWIG_0
    void btScaledTriangleMeshShapeData_trimeshShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData,long,com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData) -> btScaledTriangleMeshShapeData_trimeshShapeData_set
    long btScaledTriangleMeshShapeData_trimeshShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData) -> btScaledTriangleMeshShapeData_trimeshShapeData_get
    void btScaledTriangleMeshShapeData_localScaling_set(long,com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btScaledTriangleMeshShapeData_localScaling_set
    long btScaledTriangleMeshShapeData_localScaling_get(long,com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData) -> btScaledTriangleMeshShapeData_localScaling_get
    long new_btScaledTriangleMeshShapeData() -> new_btScaledTriangleMeshShapeData
    void delete_btScaledTriangleMeshShapeData(long) -> delete_btScaledTriangleMeshShapeData
    long new_btShapeHull(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape) -> new_btShapeHull
    void delete_btShapeHull(long) -> delete_btShapeHull
    boolean btShapeHull_buildHull(long,com.badlogic.gdx.physics.bullet.collision.btShapeHull,float) -> btShapeHull_buildHull
    int btShapeHull_numTriangles(long,com.badlogic.gdx.physics.bullet.collision.btShapeHull) -> btShapeHull_numTriangles
    int btShapeHull_numVertices(long,com.badlogic.gdx.physics.bullet.collision.btShapeHull) -> btShapeHull_numVertices
    int btShapeHull_numIndices(long,com.badlogic.gdx.physics.bullet.collision.btShapeHull) -> btShapeHull_numIndices
    long btShapeHull_getVertexPointer(long,com.badlogic.gdx.physics.bullet.collision.btShapeHull) -> btShapeHull_getVertexPointer
    java.nio.LongBuffer btShapeHull_getIndexPointer(long,com.badlogic.gdx.physics.bullet.collision.btShapeHull) -> btShapeHull_getIndexPointer
    long new_btConvexHullShape__SWIG_0(java.nio.FloatBuffer,int,int) -> new_btConvexHullShape__SWIG_0
    long new_btConvexHullShape__SWIG_1(java.nio.FloatBuffer,int) -> new_btConvexHullShape__SWIG_1
    long new_btConvexHullShape__SWIG_2(java.nio.FloatBuffer) -> new_btConvexHullShape__SWIG_2
    long new_btConvexHullShape__SWIG_3() -> new_btConvexHullShape__SWIG_3
    void btConvexHullShape_addPoint__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShape,com.badlogic.gdx.math.Vector3,boolean) -> btConvexHullShape_addPoint__SWIG_0
    void btConvexHullShape_addPoint__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShape,com.badlogic.gdx.math.Vector3) -> btConvexHullShape_addPoint__SWIG_1
    long btConvexHullShape_getUnscaledPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShape) -> btConvexHullShape_getUnscaledPoints__SWIG_0
    long btConvexHullShape_getPoints(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShape) -> btConvexHullShape_getPoints
    com.badlogic.gdx.math.Vector3 btConvexHullShape_getScaledPoint(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShape,int) -> btConvexHullShape_getScaledPoint
    int btConvexHullShape_getNumPoints(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShape) -> btConvexHullShape_getNumPoints
    void btConvexHullShape_project(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,long,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btConvexHullShape_project
    long new_btConvexHullShape__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.btShapeHull) -> new_btConvexHullShape__SWIG_4
    void delete_btConvexHullShape(long) -> delete_btConvexHullShape
    void btConvexHullShapeData_convexInternalShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData,long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> btConvexHullShapeData_convexInternalShapeData_set
    long btConvexHullShapeData_convexInternalShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData) -> btConvexHullShapeData_convexInternalShapeData_get
    void btConvexHullShapeData_unscaledPointsFloatPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btConvexHullShapeData_unscaledPointsFloatPtr_set
    long btConvexHullShapeData_unscaledPointsFloatPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData) -> btConvexHullShapeData_unscaledPointsFloatPtr_get
    void btConvexHullShapeData_unscaledPointsDoublePtr_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btConvexHullShapeData_unscaledPointsDoublePtr_set
    long btConvexHullShapeData_unscaledPointsDoublePtr_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData) -> btConvexHullShapeData_unscaledPointsDoublePtr_get
    void btConvexHullShapeData_numUnscaledPoints_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData,int) -> btConvexHullShapeData_numUnscaledPoints_set
    int btConvexHullShapeData_numUnscaledPoints_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData) -> btConvexHullShapeData_numUnscaledPoints_get
    void btConvexHullShapeData_padding3_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData,java.lang.String) -> btConvexHullShapeData_padding3_set
    java.lang.String btConvexHullShapeData_padding3_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData) -> btConvexHullShapeData_padding3_get
    long new_btConvexHullShapeData() -> new_btConvexHullShapeData
    void delete_btConvexHullShapeData(long) -> delete_btConvexHullShapeData
    void btMaterialProperties_numMaterials_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int) -> btMaterialProperties_numMaterials_set
    int btMaterialProperties_numMaterials_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties) -> btMaterialProperties_numMaterials_get
    void btMaterialProperties_materialBase_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,java.nio.ByteBuffer) -> btMaterialProperties_materialBase_set
    java.nio.ByteBuffer btMaterialProperties_materialBase_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties) -> btMaterialProperties_materialBase_get
    void btMaterialProperties_materialStride_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int) -> btMaterialProperties_materialStride_set
    int btMaterialProperties_materialStride_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties) -> btMaterialProperties_materialStride_get
    void btMaterialProperties_materialType_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int) -> btMaterialProperties_materialType_set
    int btMaterialProperties_materialType_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties) -> btMaterialProperties_materialType_get
    void btMaterialProperties_numTriangles_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int) -> btMaterialProperties_numTriangles_set
    int btMaterialProperties_numTriangles_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties) -> btMaterialProperties_numTriangles_get
    void btMaterialProperties_triangleMaterialsBase_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,java.nio.ByteBuffer) -> btMaterialProperties_triangleMaterialsBase_set
    java.nio.ByteBuffer btMaterialProperties_triangleMaterialsBase_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties) -> btMaterialProperties_triangleMaterialsBase_get
    void btMaterialProperties_triangleMaterialStride_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int) -> btMaterialProperties_triangleMaterialStride_set
    int btMaterialProperties_triangleMaterialStride_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties) -> btMaterialProperties_triangleMaterialStride_get
    void btMaterialProperties_triangleType_set(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int) -> btMaterialProperties_triangleType_set
    int btMaterialProperties_triangleType_get(long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties) -> btMaterialProperties_triangleType_get
    long new_btMaterialProperties() -> new_btMaterialProperties
    void delete_btMaterialProperties(long) -> delete_btMaterialProperties
    long new_btTriangleIndexVertexMaterialArray__SWIG_0() -> new_btTriangleIndexVertexMaterialArray__SWIG_0
    long new_btTriangleIndexVertexMaterialArray__SWIG_1(int,java.nio.IntBuffer,int,int,java.nio.FloatBuffer,int,int,java.nio.ByteBuffer,int,java.nio.IntBuffer,int) -> new_btTriangleIndexVertexMaterialArray__SWIG_1
    void delete_btTriangleIndexVertexMaterialArray(long) -> delete_btTriangleIndexVertexMaterialArray
    void btTriangleIndexVertexMaterialArray_addMaterialProperties__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray,long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int) -> btTriangleIndexVertexMaterialArray_addMaterialProperties__SWIG_0
    void btTriangleIndexVertexMaterialArray_addMaterialProperties__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray,long,com.badlogic.gdx.physics.bullet.collision.btMaterialProperties) -> btTriangleIndexVertexMaterialArray_addMaterialProperties__SWIG_1
    void btTriangleIndexVertexMaterialArray_getLockedMaterialBase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray,long,long,long,long,long,long,long,long,int) -> btTriangleIndexVertexMaterialArray_getLockedMaterialBase__SWIG_0
    void btTriangleIndexVertexMaterialArray_getLockedMaterialBase__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray,long,long,long,long,long,long,long,long) -> btTriangleIndexVertexMaterialArray_getLockedMaterialBase__SWIG_1
    void btTriangleIndexVertexMaterialArray_getLockedReadOnlyMaterialBase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray,long,long,long,long,long,long,long,long,int) -> btTriangleIndexVertexMaterialArray_getLockedReadOnlyMaterialBase__SWIG_0
    void btTriangleIndexVertexMaterialArray_getLockedReadOnlyMaterialBase__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray,long,long,long,long,long,long,long,long) -> btTriangleIndexVertexMaterialArray_getLockedReadOnlyMaterialBase__SWIG_1
    com.badlogic.gdx.math.Vector3 btCylinderShape_getHalfExtentsWithMargin(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShape) -> btCylinderShape_getHalfExtentsWithMargin
    com.badlogic.gdx.math.Vector3 btCylinderShape_getHalfExtentsWithoutMargin(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShape) -> btCylinderShape_getHalfExtentsWithoutMargin
    long new_btCylinderShape(com.badlogic.gdx.math.Vector3) -> new_btCylinderShape
    int btCylinderShape_getUpAxis(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShape) -> btCylinderShape_getUpAxis
    float btCylinderShape_getRadius(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShape) -> btCylinderShape_getRadius
    void delete_btCylinderShape(long) -> delete_btCylinderShape
    long new_btCylinderShapeX(com.badlogic.gdx.math.Vector3) -> new_btCylinderShapeX
    void delete_btCylinderShapeX(long) -> delete_btCylinderShapeX
    long new_btCylinderShapeZ(com.badlogic.gdx.math.Vector3) -> new_btCylinderShapeZ
    void delete_btCylinderShapeZ(long) -> delete_btCylinderShapeZ
    void btCylinderShapeData_convexInternalShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData,long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> btCylinderShapeData_convexInternalShapeData_set
    long btCylinderShapeData_convexInternalShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData) -> btCylinderShapeData_convexInternalShapeData_get
    void btCylinderShapeData_upAxis_set(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData,int) -> btCylinderShapeData_upAxis_set
    int btCylinderShapeData_upAxis_get(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData) -> btCylinderShapeData_upAxis_get
    void btCylinderShapeData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData,java.lang.String) -> btCylinderShapeData_padding_set
    java.lang.String btCylinderShapeData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData) -> btCylinderShapeData_padding_get
    long new_btCylinderShapeData() -> new_btCylinderShapeData
    void delete_btCylinderShapeData(long) -> delete_btCylinderShapeData
    void btTriangleMesh_weldingThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh,float) -> btTriangleMesh_weldingThreshold_set
    float btTriangleMesh_weldingThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh) -> btTriangleMesh_weldingThreshold_get
    long new_btTriangleMesh__SWIG_0(boolean,boolean) -> new_btTriangleMesh__SWIG_0
    long new_btTriangleMesh__SWIG_1(boolean) -> new_btTriangleMesh__SWIG_1
    long new_btTriangleMesh__SWIG_2() -> new_btTriangleMesh__SWIG_2
    boolean btTriangleMesh_getUse32bitIndices(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh) -> btTriangleMesh_getUse32bitIndices
    boolean btTriangleMesh_getUse4componentVertices(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh) -> btTriangleMesh_getUse4componentVertices
    void btTriangleMesh_addTriangle__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean) -> btTriangleMesh_addTriangle__SWIG_0
    void btTriangleMesh_addTriangle__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btTriangleMesh_addTriangle__SWIG_1
    int btTriangleMesh_getNumTriangles(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh) -> btTriangleMesh_getNumTriangles
    int btTriangleMesh_findOrAddVertex(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh,com.badlogic.gdx.math.Vector3,boolean) -> btTriangleMesh_findOrAddVertex
    void btTriangleMesh_addIndex(long,com.badlogic.gdx.physics.bullet.collision.btTriangleMesh,int) -> btTriangleMesh_addIndex
    void delete_btTriangleMesh(long) -> delete_btTriangleMesh
    long new_btConeShape(float,float) -> new_btConeShape
    float btConeShape_getRadius(long,com.badlogic.gdx.physics.bullet.collision.btConeShape) -> btConeShape_getRadius
    float btConeShape_getHeight(long,com.badlogic.gdx.physics.bullet.collision.btConeShape) -> btConeShape_getHeight
    void btConeShape_setConeUpIndex(long,com.badlogic.gdx.physics.bullet.collision.btConeShape,int) -> btConeShape_setConeUpIndex
    int btConeShape_getConeUpIndex(long,com.badlogic.gdx.physics.bullet.collision.btConeShape) -> btConeShape_getConeUpIndex
    void delete_btConeShape(long) -> delete_btConeShape
    long new_btConeShapeX(float,float) -> new_btConeShapeX
    void delete_btConeShapeX(long) -> delete_btConeShapeX
    long new_btConeShapeZ(float,float) -> new_btConeShapeZ
    void delete_btConeShapeZ(long) -> delete_btConeShapeZ
    void btConeShapeData_convexInternalShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btConeShapeData,long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> btConeShapeData_convexInternalShapeData_set
    long btConeShapeData_convexInternalShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btConeShapeData) -> btConeShapeData_convexInternalShapeData_get
    void btConeShapeData_upIndex_set(long,com.badlogic.gdx.physics.bullet.collision.btConeShapeData,int) -> btConeShapeData_upIndex_set
    int btConeShapeData_upIndex_get(long,com.badlogic.gdx.physics.bullet.collision.btConeShapeData) -> btConeShapeData_upIndex_get
    void btConeShapeData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btConeShapeData,java.lang.String) -> btConeShapeData_padding_set
    java.lang.String btConeShapeData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btConeShapeData) -> btConeShapeData_padding_get
    long new_btConeShapeData() -> new_btConeShapeData
    void delete_btConeShapeData(long) -> delete_btConeShapeData
    long new_btConvexTriangleMeshShape__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean) -> new_btConvexTriangleMeshShape__SWIG_0
    long new_btConvexTriangleMeshShape__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface) -> new_btConvexTriangleMeshShape__SWIG_1
    long btConvexTriangleMeshShape_getMeshInterface__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape) -> btConvexTriangleMeshShape_getMeshInterface__SWIG_0
    void btConvexTriangleMeshShape_calculatePrincipalAxisTransform(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long) -> btConvexTriangleMeshShape_calculatePrincipalAxisTransform
    void delete_btConvexTriangleMeshShape(long) -> delete_btConvexTriangleMeshShape
    long new_btEmptyShape() -> new_btEmptyShape
    void delete_btEmptyShape(long) -> delete_btEmptyShape
    long new_btMultimaterialTriangleMeshShape__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,boolean) -> new_btMultimaterialTriangleMeshShape__SWIG_0
    long new_btMultimaterialTriangleMeshShape__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean) -> new_btMultimaterialTriangleMeshShape__SWIG_1
    long new_btMultimaterialTriangleMeshShape__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean) -> new_btMultimaterialTriangleMeshShape__SWIG_2
    long new_btMultimaterialTriangleMeshShape__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_btMultimaterialTriangleMeshShape__SWIG_3
    void delete_btMultimaterialTriangleMeshShape(long) -> delete_btMultimaterialTriangleMeshShape
    long btMultimaterialTriangleMeshShape_getMaterialProperties(long,com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape,int,int) -> btMultimaterialTriangleMeshShape_getMaterialProperties
    long new_btBU_Simplex1to4__SWIG_0() -> new_btBU_Simplex1to4__SWIG_0
    long new_btBU_Simplex1to4__SWIG_1(com.badlogic.gdx.math.Vector3) -> new_btBU_Simplex1to4__SWIG_1
    long new_btBU_Simplex1to4__SWIG_2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_btBU_Simplex1to4__SWIG_2
    long new_btBU_Simplex1to4__SWIG_3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_btBU_Simplex1to4__SWIG_3
    long new_btBU_Simplex1to4__SWIG_4(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_btBU_Simplex1to4__SWIG_4
    void btBU_Simplex1to4_reset(long,com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4) -> btBU_Simplex1to4_reset
    void btBU_Simplex1to4_addVertex(long,com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4,com.badlogic.gdx.math.Vector3) -> btBU_Simplex1to4_addVertex
    int btBU_Simplex1to4_getIndex(long,com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4,int) -> btBU_Simplex1to4_getIndex
    void delete_btBU_Simplex1to4(long) -> delete_btBU_Simplex1to4
    long new_btUniformScalingShape(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,float) -> new_btUniformScalingShape
    void delete_btUniformScalingShape(long) -> delete_btUniformScalingShape
    float btUniformScalingShape_getUniformScalingFactor(long,com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape) -> btUniformScalingShape_getUniformScalingFactor
    long btUniformScalingShape_getChildShape__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape) -> btUniformScalingShape_getChildShape__SWIG_0
    void btCompoundShapeChild_transform_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btCompoundShapeChild_transform_set
    long btCompoundShapeChild_transform_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild) -> btCompoundShapeChild_transform_get
    void btCompoundShapeChild_childShape_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCompoundShapeChild_childShape_set
    long btCompoundShapeChild_childShape_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild) -> btCompoundShapeChild_childShape_get
    void btCompoundShapeChild_childShapeType_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild,int) -> btCompoundShapeChild_childShapeType_set
    int btCompoundShapeChild_childShapeType_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild) -> btCompoundShapeChild_childShapeType_get
    void btCompoundShapeChild_childMargin_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild,float) -> btCompoundShapeChild_childMargin_set
    float btCompoundShapeChild_childMargin_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild) -> btCompoundShapeChild_childMargin_get
    void btCompoundShapeChild_node_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btCompoundShapeChild_node_set
    long btCompoundShapeChild_node_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild) -> btCompoundShapeChild_node_get
    long new_btCompoundShapeChild() -> new_btCompoundShapeChild
    void delete_btCompoundShapeChild(long) -> delete_btCompoundShapeChild
    long new_btCompoundShape__SWIG_0(boolean) -> new_btCompoundShape__SWIG_0
    long new_btCompoundShape__SWIG_1() -> new_btCompoundShape__SWIG_1
    void delete_btCompoundShape(long) -> delete_btCompoundShape
    void btCompoundShape_internalAddChildShape(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCompoundShape_internalAddChildShape
    void btCompoundShape_internalRemoveChildShape(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCompoundShape_internalRemoveChildShape
    void btCompoundShape_internalRemoveChildShapeByIndex(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape,int) -> btCompoundShape_internalRemoveChildShapeByIndex
    int btCompoundShape_getNumChildShapes(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape) -> btCompoundShape_getNumChildShapes
    com.badlogic.gdx.math.Matrix4 btCompoundShape_getChildTransform__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape,int) -> btCompoundShape_getChildTransform__SWIG_0
    void btCompoundShape_updateChildTransform__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape,int,com.badlogic.gdx.math.Matrix4,boolean) -> btCompoundShape_updateChildTransform__SWIG_0
    void btCompoundShape_updateChildTransform__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape,int,com.badlogic.gdx.math.Matrix4) -> btCompoundShape_updateChildTransform__SWIG_1
    long btCompoundShape_getChildList(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape) -> btCompoundShape_getChildList
    void btCompoundShape_recalculateLocalAabb(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape) -> btCompoundShape_recalculateLocalAabb
    long btCompoundShape_getDynamicAabbTree__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape) -> btCompoundShape_getDynamicAabbTree__SWIG_0
    void btCompoundShape_createAabbTreeFromChildren(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape) -> btCompoundShape_createAabbTreeFromChildren
    void btCompoundShape_calculatePrincipalAxisTransform(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape,java.nio.FloatBuffer,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3) -> btCompoundShape_calculatePrincipalAxisTransform
    int btCompoundShape_getUpdateRevision(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShape) -> btCompoundShape_getUpdateRevision
    void btCompoundShapeChildData_transform_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btCompoundShapeChildData_transform_set
    long btCompoundShapeChildData_transform_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData) -> btCompoundShapeChildData_transform_get
    void btCompoundShapeChildData_childShape_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> btCompoundShapeChildData_childShape_set
    long btCompoundShapeChildData_childShape_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData) -> btCompoundShapeChildData_childShape_get
    void btCompoundShapeChildData_childShapeType_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData,int) -> btCompoundShapeChildData_childShapeType_set
    int btCompoundShapeChildData_childShapeType_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData) -> btCompoundShapeChildData_childShapeType_get
    void btCompoundShapeChildData_childMargin_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData,float) -> btCompoundShapeChildData_childMargin_set
    float btCompoundShapeChildData_childMargin_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData) -> btCompoundShapeChildData_childMargin_get
    long new_btCompoundShapeChildData() -> new_btCompoundShapeChildData
    void delete_btCompoundShapeChildData(long) -> delete_btCompoundShapeChildData
    void btCompoundShapeData_collisionShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> btCompoundShapeData_collisionShapeData_set
    long btCompoundShapeData_collisionShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData) -> btCompoundShapeData_collisionShapeData_get
    void btCompoundShapeData_childShapePtr_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData,long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData) -> btCompoundShapeData_childShapePtr_set
    long btCompoundShapeData_childShapePtr_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData) -> btCompoundShapeData_childShapePtr_get
    void btCompoundShapeData_numChildShapes_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData,int) -> btCompoundShapeData_numChildShapes_set
    int btCompoundShapeData_numChildShapes_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData) -> btCompoundShapeData_numChildShapes_get
    void btCompoundShapeData_collisionMargin_set(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData,float) -> btCompoundShapeData_collisionMargin_set
    float btCompoundShapeData_collisionMargin_get(long,com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData) -> btCompoundShapeData_collisionMargin_get
    long new_btCompoundShapeData() -> new_btCompoundShapeData
    void delete_btCompoundShapeData(long) -> delete_btCompoundShapeData
    long new_btConvexPointCloudShape__SWIG_0() -> new_btConvexPointCloudShape__SWIG_0
    long new_btConvexPointCloudShape__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,com.badlogic.gdx.math.Vector3,boolean) -> new_btConvexPointCloudShape__SWIG_1
    long new_btConvexPointCloudShape__SWIG_2(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,com.badlogic.gdx.math.Vector3) -> new_btConvexPointCloudShape__SWIG_2
    void btConvexPointCloudShape_setPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,boolean,com.badlogic.gdx.math.Vector3) -> btConvexPointCloudShape_setPoints__SWIG_0
    void btConvexPointCloudShape_setPoints__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,boolean) -> btConvexPointCloudShape_setPoints__SWIG_1
    void btConvexPointCloudShape_setPoints__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int) -> btConvexPointCloudShape_setPoints__SWIG_2
    long btConvexPointCloudShape_getUnscaledPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape) -> btConvexPointCloudShape_getUnscaledPoints__SWIG_0
    int btConvexPointCloudShape_getNumPoints(long,com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape) -> btConvexPointCloudShape_getNumPoints
    com.badlogic.gdx.math.Vector3 btConvexPointCloudShape_getScaledPoint(long,com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape,int) -> btConvexPointCloudShape_getScaledPoint
    void delete_btConvexPointCloudShape(long) -> delete_btConvexPointCloudShape
    long new_btConvex2dShape(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape) -> new_btConvex2dShape
    void delete_btConvex2dShape(long) -> delete_btConvex2dShape
    long btConvex2dShape_getChildShape__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dShape) -> btConvex2dShape_getChildShape__SWIG_0
    boolean btCollisionObject_mergesSimulationIslands(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_mergesSimulationIslands
    com.badlogic.gdx.math.Vector3 btCollisionObject_getAnisotropicFriction__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getAnisotropicFriction__SWIG_0
    void btCollisionObject_setAnisotropicFriction__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3,int) -> btCollisionObject_setAnisotropicFriction__SWIG_0
    void btCollisionObject_setAnisotropicFriction__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3) -> btCollisionObject_setAnisotropicFriction__SWIG_1
    boolean btCollisionObject_hasAnisotropicFriction__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int) -> btCollisionObject_hasAnisotropicFriction__SWIG_0
    boolean btCollisionObject_hasAnisotropicFriction__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_hasAnisotropicFriction__SWIG_1
    void btCollisionObject_setContactProcessingThreshold(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float) -> btCollisionObject_setContactProcessingThreshold
    float btCollisionObject_getContactProcessingThreshold(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getContactProcessingThreshold
    boolean btCollisionObject_isStaticObject(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_isStaticObject
    boolean btCollisionObject_isKinematicObject(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_isKinematicObject
    boolean btCollisionObject_isStaticOrKinematicObject(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_isStaticOrKinematicObject
    boolean btCollisionObject_hasContactResponse(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_hasContactResponse
    long new_btCollisionObject() -> new_btCollisionObject
    void delete_btCollisionObject(long) -> delete_btCollisionObject
    void btCollisionObject_internalSetCollisionShape(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionObject_internalSetCollisionShape
    long btCollisionObject_internalGetCollisionShape__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_internalGetCollisionShape__SWIG_0
    long btCollisionObject_internalGetExtensionPointer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_internalGetExtensionPointer
    void btCollisionObject_internalSetExtensionPointer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long) -> btCollisionObject_internalSetExtensionPointer
    int btCollisionObject_getActivationState(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getActivationState
    void btCollisionObject_setActivationState(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int) -> btCollisionObject_setActivationState
    void btCollisionObject_setDeactivationTime(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float) -> btCollisionObject_setDeactivationTime
    float btCollisionObject_getDeactivationTime(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getDeactivationTime
    void btCollisionObject_forceActivationState(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int) -> btCollisionObject_forceActivationState
    void btCollisionObject_activate__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean) -> btCollisionObject_activate__SWIG_0
    void btCollisionObject_activate__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_activate__SWIG_1
    boolean btCollisionObject_isActive(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_isActive
    void btCollisionObject_setRestitution(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float) -> btCollisionObject_setRestitution
    float btCollisionObject_getRestitution(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getRestitution
    void btCollisionObject_setFriction(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float) -> btCollisionObject_setFriction
    float btCollisionObject_getFriction(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getFriction
    void btCollisionObject_setRollingFriction(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float) -> btCollisionObject_setRollingFriction
    float btCollisionObject_getRollingFriction(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getRollingFriction
    int btCollisionObject_getInternalType(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getInternalType
    com.badlogic.gdx.math.Matrix4 btCollisionObject_getWorldTransform__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getWorldTransform__SWIG_0
    void btCollisionObject_setWorldTransform(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4) -> btCollisionObject_setWorldTransform
    long btCollisionObject_getBroadphaseHandle__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getBroadphaseHandle__SWIG_0
    void btCollisionObject_setBroadphaseHandle(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btCollisionObject_setBroadphaseHandle
    com.badlogic.gdx.math.Matrix4 btCollisionObject_getInterpolationWorldTransform__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getInterpolationWorldTransform__SWIG_0
    void btCollisionObject_setInterpolationWorldTransform(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4) -> btCollisionObject_setInterpolationWorldTransform
    void btCollisionObject_setInterpolationLinearVelocity(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3) -> btCollisionObject_setInterpolationLinearVelocity
    void btCollisionObject_setInterpolationAngularVelocity(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3) -> btCollisionObject_setInterpolationAngularVelocity
    com.badlogic.gdx.math.Vector3 btCollisionObject_getInterpolationLinearVelocity__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getInterpolationLinearVelocity__SWIG_0
    com.badlogic.gdx.math.Vector3 btCollisionObject_getInterpolationAngularVelocity__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getInterpolationAngularVelocity__SWIG_0
    int btCollisionObject_getIslandTag(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getIslandTag
    void btCollisionObject_setIslandTag(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int) -> btCollisionObject_setIslandTag
    int btCollisionObject_getCompanionId(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getCompanionId
    void btCollisionObject_setCompanionId(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int) -> btCollisionObject_setCompanionId
    float btCollisionObject_getHitFraction(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getHitFraction
    void btCollisionObject_setHitFraction(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float) -> btCollisionObject_setHitFraction
    int btCollisionObject_getCollisionFlags(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getCollisionFlags
    void btCollisionObject_setCollisionFlags(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int) -> btCollisionObject_setCollisionFlags
    float btCollisionObject_getCcdSweptSphereRadius(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getCcdSweptSphereRadius
    void btCollisionObject_setCcdSweptSphereRadius(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float) -> btCollisionObject_setCcdSweptSphereRadius
    float btCollisionObject_getCcdMotionThreshold(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getCcdMotionThreshold
    float btCollisionObject_getCcdSquareMotionThreshold(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getCcdSquareMotionThreshold
    void btCollisionObject_setCcdMotionThreshold(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,float) -> btCollisionObject_setCcdMotionThreshold
    long btCollisionObject_getUserPointer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getUserPointer
    int btCollisionObject_getUserIndex(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getUserIndex
    void btCollisionObject_setUserPointer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long) -> btCollisionObject_setUserPointer
    void btCollisionObject_setUserIndex(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int) -> btCollisionObject_setUserIndex
    int btCollisionObject_getUpdateRevisionInternal(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_getUpdateRevisionInternal
    boolean btCollisionObject_checkCollideWith(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_checkCollideWith
    int btCollisionObject_calculateSerializeBufferSize(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_calculateSerializeBufferSize
    java.lang.String btCollisionObject_serialize(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,long) -> btCollisionObject_serialize
    void btCollisionObject_serializeSingleObject(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long) -> btCollisionObject_serializeSingleObject
    void btCollisionObject_internalSetGdxBridge(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge) -> btCollisionObject_internalSetGdxBridge
    long btCollisionObject_internalGetGdxBridge(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObject_internalGetGdxBridge
    void btCollisionObject_getAnisotropicFriction__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3) -> btCollisionObject_getAnisotropicFriction__SWIG_1
    void btCollisionObject_getWorldTransform__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4) -> btCollisionObject_getWorldTransform__SWIG_2
    void btCollisionObject_getInterpolationWorldTransform__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4) -> btCollisionObject_getInterpolationWorldTransform__SWIG_2
    void btCollisionObject_getInterpolationLinearVelocity__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3) -> btCollisionObject_getInterpolationLinearVelocity__SWIG_1
    void btCollisionObject_getInterpolationAngularVelocity__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3) -> btCollisionObject_getInterpolationAngularVelocity__SWIG_1
    void btCollisionObjectDoubleData_broadphaseHandle_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long) -> btCollisionObjectDoubleData_broadphaseHandle_set
    long btCollisionObjectDoubleData_broadphaseHandle_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_broadphaseHandle_get
    void btCollisionObjectDoubleData_collisionShape_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long) -> btCollisionObjectDoubleData_collisionShape_set
    long btCollisionObjectDoubleData_collisionShape_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_collisionShape_get
    void btCollisionObjectDoubleData_rootCollisionShape_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> btCollisionObjectDoubleData_rootCollisionShape_set
    long btCollisionObjectDoubleData_rootCollisionShape_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_rootCollisionShape_get
    void btCollisionObjectDoubleData_name_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,java.lang.String) -> btCollisionObjectDoubleData_name_set
    java.lang.String btCollisionObjectDoubleData_name_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_name_get
    void btCollisionObjectDoubleData_worldTransform_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> btCollisionObjectDoubleData_worldTransform_set
    long btCollisionObjectDoubleData_worldTransform_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_worldTransform_get
    void btCollisionObjectDoubleData_interpolationWorldTransform_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> btCollisionObjectDoubleData_interpolationWorldTransform_set
    long btCollisionObjectDoubleData_interpolationWorldTransform_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_interpolationWorldTransform_get
    void btCollisionObjectDoubleData_interpolationLinearVelocity_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btCollisionObjectDoubleData_interpolationLinearVelocity_set
    long btCollisionObjectDoubleData_interpolationLinearVelocity_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_interpolationLinearVelocity_get
    void btCollisionObjectDoubleData_interpolationAngularVelocity_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btCollisionObjectDoubleData_interpolationAngularVelocity_set
    long btCollisionObjectDoubleData_interpolationAngularVelocity_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_interpolationAngularVelocity_get
    void btCollisionObjectDoubleData_anisotropicFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btCollisionObjectDoubleData_anisotropicFriction_set
    long btCollisionObjectDoubleData_anisotropicFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_anisotropicFriction_get
    void btCollisionObjectDoubleData_contactProcessingThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double) -> btCollisionObjectDoubleData_contactProcessingThreshold_set
    double btCollisionObjectDoubleData_contactProcessingThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_contactProcessingThreshold_get
    void btCollisionObjectDoubleData_deactivationTime_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double) -> btCollisionObjectDoubleData_deactivationTime_set
    double btCollisionObjectDoubleData_deactivationTime_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_deactivationTime_get
    void btCollisionObjectDoubleData_friction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double) -> btCollisionObjectDoubleData_friction_set
    double btCollisionObjectDoubleData_friction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_friction_get
    void btCollisionObjectDoubleData_rollingFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double) -> btCollisionObjectDoubleData_rollingFriction_set
    double btCollisionObjectDoubleData_rollingFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_rollingFriction_get
    void btCollisionObjectDoubleData_restitution_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double) -> btCollisionObjectDoubleData_restitution_set
    double btCollisionObjectDoubleData_restitution_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_restitution_get
    void btCollisionObjectDoubleData_hitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double) -> btCollisionObjectDoubleData_hitFraction_set
    double btCollisionObjectDoubleData_hitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_hitFraction_get
    void btCollisionObjectDoubleData_ccdSweptSphereRadius_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double) -> btCollisionObjectDoubleData_ccdSweptSphereRadius_set
    double btCollisionObjectDoubleData_ccdSweptSphereRadius_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_ccdSweptSphereRadius_get
    void btCollisionObjectDoubleData_ccdMotionThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,double) -> btCollisionObjectDoubleData_ccdMotionThreshold_set
    double btCollisionObjectDoubleData_ccdMotionThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_ccdMotionThreshold_get
    void btCollisionObjectDoubleData_hasAnisotropicFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,int) -> btCollisionObjectDoubleData_hasAnisotropicFriction_set
    int btCollisionObjectDoubleData_hasAnisotropicFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_hasAnisotropicFriction_get
    void btCollisionObjectDoubleData_collisionFlags_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,int) -> btCollisionObjectDoubleData_collisionFlags_set
    int btCollisionObjectDoubleData_collisionFlags_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_collisionFlags_get
    void btCollisionObjectDoubleData_islandTag1_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,int) -> btCollisionObjectDoubleData_islandTag1_set
    int btCollisionObjectDoubleData_islandTag1_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_islandTag1_get
    void btCollisionObjectDoubleData_companionId_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,int) -> btCollisionObjectDoubleData_companionId_set
    int btCollisionObjectDoubleData_companionId_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_companionId_get
    void btCollisionObjectDoubleData_activationState1_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,int) -> btCollisionObjectDoubleData_activationState1_set
    int btCollisionObjectDoubleData_activationState1_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_activationState1_get
    void btCollisionObjectDoubleData_internalType_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,int) -> btCollisionObjectDoubleData_internalType_set
    int btCollisionObjectDoubleData_internalType_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_internalType_get
    void btCollisionObjectDoubleData_checkCollideWith_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,int) -> btCollisionObjectDoubleData_checkCollideWith_set
    int btCollisionObjectDoubleData_checkCollideWith_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_checkCollideWith_get
    void btCollisionObjectDoubleData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData,java.lang.String) -> btCollisionObjectDoubleData_padding_set
    java.lang.String btCollisionObjectDoubleData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btCollisionObjectDoubleData_padding_get
    long new_btCollisionObjectDoubleData() -> new_btCollisionObjectDoubleData
    void delete_btCollisionObjectDoubleData(long) -> delete_btCollisionObjectDoubleData
    void btCollisionObjectFloatData_broadphaseHandle_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long) -> btCollisionObjectFloatData_broadphaseHandle_set
    long btCollisionObjectFloatData_broadphaseHandle_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_broadphaseHandle_get
    void btCollisionObjectFloatData_collisionShape_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long) -> btCollisionObjectFloatData_collisionShape_set
    long btCollisionObjectFloatData_collisionShape_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_collisionShape_get
    void btCollisionObjectFloatData_rootCollisionShape_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> btCollisionObjectFloatData_rootCollisionShape_set
    long btCollisionObjectFloatData_rootCollisionShape_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_rootCollisionShape_get
    void btCollisionObjectFloatData_name_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,java.lang.String) -> btCollisionObjectFloatData_name_set
    java.lang.String btCollisionObjectFloatData_name_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_name_get
    void btCollisionObjectFloatData_worldTransform_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btCollisionObjectFloatData_worldTransform_set
    long btCollisionObjectFloatData_worldTransform_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_worldTransform_get
    void btCollisionObjectFloatData_interpolationWorldTransform_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btCollisionObjectFloatData_interpolationWorldTransform_set
    long btCollisionObjectFloatData_interpolationWorldTransform_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_interpolationWorldTransform_get
    void btCollisionObjectFloatData_interpolationLinearVelocity_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btCollisionObjectFloatData_interpolationLinearVelocity_set
    long btCollisionObjectFloatData_interpolationLinearVelocity_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_interpolationLinearVelocity_get
    void btCollisionObjectFloatData_interpolationAngularVelocity_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btCollisionObjectFloatData_interpolationAngularVelocity_set
    long btCollisionObjectFloatData_interpolationAngularVelocity_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_interpolationAngularVelocity_get
    void btCollisionObjectFloatData_anisotropicFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btCollisionObjectFloatData_anisotropicFriction_set
    long btCollisionObjectFloatData_anisotropicFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_anisotropicFriction_get
    void btCollisionObjectFloatData_contactProcessingThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float) -> btCollisionObjectFloatData_contactProcessingThreshold_set
    float btCollisionObjectFloatData_contactProcessingThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_contactProcessingThreshold_get
    void btCollisionObjectFloatData_deactivationTime_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float) -> btCollisionObjectFloatData_deactivationTime_set
    float btCollisionObjectFloatData_deactivationTime_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_deactivationTime_get
    void btCollisionObjectFloatData_friction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float) -> btCollisionObjectFloatData_friction_set
    float btCollisionObjectFloatData_friction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_friction_get
    void btCollisionObjectFloatData_rollingFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float) -> btCollisionObjectFloatData_rollingFriction_set
    float btCollisionObjectFloatData_rollingFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_rollingFriction_get
    void btCollisionObjectFloatData_restitution_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float) -> btCollisionObjectFloatData_restitution_set
    float btCollisionObjectFloatData_restitution_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_restitution_get
    void btCollisionObjectFloatData_hitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float) -> btCollisionObjectFloatData_hitFraction_set
    float btCollisionObjectFloatData_hitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_hitFraction_get
    void btCollisionObjectFloatData_ccdSweptSphereRadius_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float) -> btCollisionObjectFloatData_ccdSweptSphereRadius_set
    float btCollisionObjectFloatData_ccdSweptSphereRadius_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_ccdSweptSphereRadius_get
    void btCollisionObjectFloatData_ccdMotionThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,float) -> btCollisionObjectFloatData_ccdMotionThreshold_set
    float btCollisionObjectFloatData_ccdMotionThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_ccdMotionThreshold_get
    void btCollisionObjectFloatData_hasAnisotropicFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,int) -> btCollisionObjectFloatData_hasAnisotropicFriction_set
    int btCollisionObjectFloatData_hasAnisotropicFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_hasAnisotropicFriction_get
    void btCollisionObjectFloatData_collisionFlags_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,int) -> btCollisionObjectFloatData_collisionFlags_set
    int btCollisionObjectFloatData_collisionFlags_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_collisionFlags_get
    void btCollisionObjectFloatData_islandTag1_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,int) -> btCollisionObjectFloatData_islandTag1_set
    int btCollisionObjectFloatData_islandTag1_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_islandTag1_get
    void btCollisionObjectFloatData_companionId_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,int) -> btCollisionObjectFloatData_companionId_set
    int btCollisionObjectFloatData_companionId_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_companionId_get
    void btCollisionObjectFloatData_activationState1_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,int) -> btCollisionObjectFloatData_activationState1_set
    int btCollisionObjectFloatData_activationState1_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_activationState1_get
    void btCollisionObjectFloatData_internalType_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,int) -> btCollisionObjectFloatData_internalType_set
    int btCollisionObjectFloatData_internalType_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_internalType_get
    void btCollisionObjectFloatData_checkCollideWith_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,int) -> btCollisionObjectFloatData_checkCollideWith_set
    int btCollisionObjectFloatData_checkCollideWith_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_checkCollideWith_get
    void btCollisionObjectFloatData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData,java.lang.String) -> btCollisionObjectFloatData_padding_set
    java.lang.String btCollisionObjectFloatData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btCollisionObjectFloatData_padding_get
    long new_btCollisionObjectFloatData() -> new_btCollisionObjectFloatData
    void delete_btCollisionObjectFloatData(long) -> delete_btCollisionObjectFloatData
    void GdxCollisionObjectBridge_userValue_set(long,com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge,int) -> GdxCollisionObjectBridge_userValue_set
    int GdxCollisionObjectBridge_userValue_get(long,com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge) -> GdxCollisionObjectBridge_userValue_get
    void GdxCollisionObjectBridge_contactCallbackFlag_set(long,com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge,int) -> GdxCollisionObjectBridge_contactCallbackFlag_set
    int GdxCollisionObjectBridge_contactCallbackFlag_get(long,com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge) -> GdxCollisionObjectBridge_contactCallbackFlag_get
    void GdxCollisionObjectBridge_contactCallbackFilter_set(long,com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge,int) -> GdxCollisionObjectBridge_contactCallbackFilter_set
    int GdxCollisionObjectBridge_contactCallbackFilter_get(long,com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge) -> GdxCollisionObjectBridge_contactCallbackFilter_get
    long new_GdxCollisionObjectBridge() -> new_GdxCollisionObjectBridge
    void delete_GdxCollisionObjectBridge(long) -> delete_GdxCollisionObjectBridge
    boolean gdxCheckFilter__SWIG_0(int,int) -> gdxCheckFilter__SWIG_0
    boolean gdxCheckFilter__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> gdxCheckFilter__SWIG_1
    long new_btCollisionObjectArray__SWIG_0() -> new_btCollisionObjectArray__SWIG_0
    void delete_btCollisionObjectArray(long) -> delete_btCollisionObjectArray
    long new_btCollisionObjectArray__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray) -> new_btCollisionObjectArray__SWIG_1
    int btCollisionObjectArray_size(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray) -> btCollisionObjectArray_size
    long btCollisionObjectArray_at__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,int) -> btCollisionObjectArray_at__SWIG_0
    void btCollisionObjectArray_clear(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray) -> btCollisionObjectArray_clear
    void btCollisionObjectArray_pop_back(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray) -> btCollisionObjectArray_pop_back
    void btCollisionObjectArray_resizeNoInitialize(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,int) -> btCollisionObjectArray_resizeNoInitialize
    void btCollisionObjectArray_resize__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObjectArray_resize__SWIG_0
    void btCollisionObjectArray_resize__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,int) -> btCollisionObjectArray_resize__SWIG_1
    long btCollisionObjectArray_expandNonInitializing(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray) -> btCollisionObjectArray_expandNonInitializing
    long btCollisionObjectArray_expand__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObjectArray_expand__SWIG_0
    long btCollisionObjectArray_expand__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray) -> btCollisionObjectArray_expand__SWIG_1
    void btCollisionObjectArray_push_back(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObjectArray_push_back
    int btCollisionObjectArray_capacity(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray) -> btCollisionObjectArray_capacity
    void btCollisionObjectArray_reserve(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,int) -> btCollisionObjectArray_reserve
    long new_btCollisionObjectArray_less() -> new_btCollisionObjectArray_less
    void delete_btCollisionObjectArray_less(long) -> delete_btCollisionObjectArray_less
    void btCollisionObjectArray_swap(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,int,int) -> btCollisionObjectArray_swap
    int btCollisionObjectArray_findBinarySearch(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObjectArray_findBinarySearch
    int btCollisionObjectArray_findLinearSearch(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObjectArray_findLinearSearch
    void btCollisionObjectArray_remove(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObjectArray_remove
    void btCollisionObjectArray_initializeFromBuffer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,long,int,int) -> btCollisionObjectArray_initializeFromBuffer
    void btCollisionObjectArray_copyFromArray(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray) -> btCollisionObjectArray_copyFromArray
    long new_btCollisionObjectConstArray__SWIG_0() -> new_btCollisionObjectConstArray__SWIG_0
    void delete_btCollisionObjectConstArray(long) -> delete_btCollisionObjectConstArray
    long new_btCollisionObjectConstArray__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray) -> new_btCollisionObjectConstArray__SWIG_1
    int btCollisionObjectConstArray_size(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray) -> btCollisionObjectConstArray_size
    long btCollisionObjectConstArray_at__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,int) -> btCollisionObjectConstArray_at__SWIG_0
    void btCollisionObjectConstArray_clear(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray) -> btCollisionObjectConstArray_clear
    void btCollisionObjectConstArray_pop_back(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray) -> btCollisionObjectConstArray_pop_back
    void btCollisionObjectConstArray_resizeNoInitialize(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,int) -> btCollisionObjectConstArray_resizeNoInitialize
    void btCollisionObjectConstArray_resize__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObjectConstArray_resize__SWIG_0
    void btCollisionObjectConstArray_resize__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,int) -> btCollisionObjectConstArray_resize__SWIG_1
    long btCollisionObjectConstArray_expandNonInitializing(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray) -> btCollisionObjectConstArray_expandNonInitializing
    long btCollisionObjectConstArray_expand__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObjectConstArray_expand__SWIG_0
    long btCollisionObjectConstArray_expand__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray) -> btCollisionObjectConstArray_expand__SWIG_1
    void btCollisionObjectConstArray_push_back(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObjectConstArray_push_back
    int btCollisionObjectConstArray_capacity(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray) -> btCollisionObjectConstArray_capacity
    void btCollisionObjectConstArray_reserve(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,int) -> btCollisionObjectConstArray_reserve
    long new_btCollisionObjectConstArray_less() -> new_btCollisionObjectConstArray_less
    void delete_btCollisionObjectConstArray_less(long) -> delete_btCollisionObjectConstArray_less
    void btCollisionObjectConstArray_swap(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,int,int) -> btCollisionObjectConstArray_swap
    int btCollisionObjectConstArray_findBinarySearch(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObjectConstArray_findBinarySearch
    int btCollisionObjectConstArray_findLinearSearch(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObjectConstArray_findLinearSearch
    void btCollisionObjectConstArray_remove(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObjectConstArray_remove
    void btCollisionObjectConstArray_initializeFromBuffer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,long,int,int) -> btCollisionObjectConstArray_initializeFromBuffer
    void btCollisionObjectConstArray_copyFromArray(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray) -> btCollisionObjectConstArray_copyFromArray
    void btCollisionObjectWrapper_parent_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btCollisionObjectWrapper_parent_set
    long btCollisionObjectWrapper_parent_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btCollisionObjectWrapper_parent_get
    void btCollisionObjectWrapper_shape_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btCollisionObjectWrapper_shape_set
    long btCollisionObjectWrapper_shape_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btCollisionObjectWrapper_shape_get
    void btCollisionObjectWrapper_collisionObject_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionObjectWrapper_collisionObject_set
    long btCollisionObjectWrapper_collisionObject_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btCollisionObjectWrapper_collisionObject_get
    com.badlogic.gdx.math.Matrix4 btCollisionObjectWrapper_worldTransform_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btCollisionObjectWrapper_worldTransform_get
    void btCollisionObjectWrapper_partId_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int) -> btCollisionObjectWrapper_partId_set
    int btCollisionObjectWrapper_partId_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btCollisionObjectWrapper_partId_get
    void btCollisionObjectWrapper_index_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int) -> btCollisionObjectWrapper_index_set
    int btCollisionObjectWrapper_index_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btCollisionObjectWrapper_index_get
    long btCollisionObjectWrapper_getCollisionShape(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btCollisionObjectWrapper_getCollisionShape
    long new_CollisionObjectWrapper__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4,int,int) -> new_CollisionObjectWrapper__SWIG_0
    long new_CollisionObjectWrapper__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4,int) -> new_CollisionObjectWrapper__SWIG_1
    long new_CollisionObjectWrapper__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4) -> new_CollisionObjectWrapper__SWIG_2
    long new_CollisionObjectWrapper__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4,int,int) -> new_CollisionObjectWrapper__SWIG_3
    long new_CollisionObjectWrapper__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4,int) -> new_CollisionObjectWrapper__SWIG_4
    long new_CollisionObjectWrapper__SWIG_5(long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Matrix4) -> new_CollisionObjectWrapper__SWIG_5
    long new_CollisionObjectWrapper__SWIG_6(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int) -> new_CollisionObjectWrapper__SWIG_6
    long new_CollisionObjectWrapper__SWIG_7(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int) -> new_CollisionObjectWrapper__SWIG_7
    long new_CollisionObjectWrapper__SWIG_8(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> new_CollisionObjectWrapper__SWIG_8
    long new_CollisionObjectWrapper__SWIG_9(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int) -> new_CollisionObjectWrapper__SWIG_9
    long new_CollisionObjectWrapper__SWIG_10(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int) -> new_CollisionObjectWrapper__SWIG_10
    long new_CollisionObjectWrapper__SWIG_11(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> new_CollisionObjectWrapper__SWIG_11
    long CollisionObjectWrapper_getWrapper(long,com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper) -> CollisionObjectWrapper_getWrapper
    void delete_CollisionObjectWrapper(long) -> delete_CollisionObjectWrapper
    long new_btEmptyAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo) -> new_btEmptyAlgorithm
    long btEmptyAlgorithm_CreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btEmptyAlgorithm_CreateFunc_CreateCollisionAlgorithm
    long new_btEmptyAlgorithm_CreateFunc() -> new_btEmptyAlgorithm_CreateFunc
    void delete_btEmptyAlgorithm_CreateFunc(long) -> delete_btEmptyAlgorithm_CreateFunc
    void delete_btEmptyAlgorithm(long) -> delete_btEmptyAlgorithm
    void delete_btActivatingCollisionAlgorithm(long) -> delete_btActivatingCollisionAlgorithm
    void btConvexTriangleCallback_triangleCount_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,int) -> btConvexTriangleCallback_triangleCount_set
    int btConvexTriangleCallback_triangleCount_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback) -> btConvexTriangleCallback_triangleCount_get
    void btConvexTriangleCallback_manifoldPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btConvexTriangleCallback_manifoldPtr_set
    long btConvexTriangleCallback_manifoldPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback) -> btConvexTriangleCallback_manifoldPtr_get
    long new_btConvexTriangleCallback(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean) -> new_btConvexTriangleCallback
    void btConvexTriangleCallback_setTimeStepAndCounters(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,float,long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> btConvexTriangleCallback_setTimeStepAndCounters
    void btConvexTriangleCallback_clearWrapperData(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback) -> btConvexTriangleCallback_clearWrapperData
    void delete_btConvexTriangleCallback(long) -> delete_btConvexTriangleCallback
    void btConvexTriangleCallback_processTriangle(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int) -> btConvexTriangleCallback_processTriangle
    void btConvexTriangleCallback_processTriangleSwigExplicitbtConvexTriangleCallback(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int) -> btConvexTriangleCallback_processTriangleSwigExplicitbtConvexTriangleCallback
    void btConvexTriangleCallback_clearCache(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback) -> btConvexTriangleCallback_clearCache
    com.badlogic.gdx.math.Vector3 btConvexTriangleCallback_getAabbMin(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback) -> btConvexTriangleCallback_getAabbMin
    com.badlogic.gdx.math.Vector3 btConvexTriangleCallback_getAabbMax(long,com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback) -> btConvexTriangleCallback_getAabbMax
    void btConvexTriangleCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,long,boolean,boolean) -> btConvexTriangleCallback_director_connect
    void btConvexTriangleCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,long,boolean) -> btConvexTriangleCallback_change_ownership
    long new_btConvexConcaveCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean) -> new_btConvexConcaveCollisionAlgorithm
    void delete_btConvexConcaveCollisionAlgorithm(long) -> delete_btConvexConcaveCollisionAlgorithm
    void btConvexConcaveCollisionAlgorithm_clearCache(long,com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm) -> btConvexConcaveCollisionAlgorithm_clearCache
    long btConvexConcaveCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btConvexConcaveCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm
    long new_btConvexConcaveCollisionAlgorithm_CreateFunc() -> new_btConvexConcaveCollisionAlgorithm_CreateFunc
    void delete_btConvexConcaveCollisionAlgorithm_CreateFunc(long) -> delete_btConvexConcaveCollisionAlgorithm_CreateFunc
    long btConvexConcaveCollisionAlgorithm_SwappedCreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btConvexConcaveCollisionAlgorithm_SwappedCreateFunc_CreateCollisionAlgorithm
    long new_btConvexConcaveCollisionAlgorithm_SwappedCreateFunc() -> new_btConvexConcaveCollisionAlgorithm_SwappedCreateFunc
    void delete_btConvexConcaveCollisionAlgorithm_SwappedCreateFunc(long) -> delete_btConvexConcaveCollisionAlgorithm_SwappedCreateFunc
    long new_btConvexPlaneCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean,int,int) -> new_btConvexPlaneCollisionAlgorithm
    void delete_btConvexPlaneCollisionAlgorithm(long) -> delete_btConvexPlaneCollisionAlgorithm
    void btConvexPlaneCollisionAlgorithm_collideSingleContact(long,com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm,com.badlogic.gdx.math.Quaternion,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> btConvexPlaneCollisionAlgorithm_collideSingleContact
    void btConvexPlaneCollisionAlgorithm_CreateFunc_numPerturbationIterations_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc,int) -> btConvexPlaneCollisionAlgorithm_CreateFunc_numPerturbationIterations_set
    int btConvexPlaneCollisionAlgorithm_CreateFunc_numPerturbationIterations_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc) -> btConvexPlaneCollisionAlgorithm_CreateFunc_numPerturbationIterations_get
    void btConvexPlaneCollisionAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc,int) -> btConvexPlaneCollisionAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_set
    int btConvexPlaneCollisionAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc) -> btConvexPlaneCollisionAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_get
    long new_btConvexPlaneCollisionAlgorithm_CreateFunc() -> new_btConvexPlaneCollisionAlgorithm_CreateFunc
    long btConvexPlaneCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btConvexPlaneCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm
    void delete_btConvexPlaneCollisionAlgorithm_CreateFunc(long) -> delete_btConvexPlaneCollisionAlgorithm_CreateFunc
    void gCompoundCompoundChildShapePairCallback_set(long) -> gCompoundCompoundChildShapePairCallback_set
    long gCompoundCompoundChildShapePairCallback_get() -> gCompoundCompoundChildShapePairCallback_get
    long new_btCompoundCompoundCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean) -> new_btCompoundCompoundCollisionAlgorithm
    void delete_btCompoundCompoundCollisionAlgorithm(long) -> delete_btCompoundCompoundCollisionAlgorithm
    long btCompoundCompoundCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btCompoundCompoundCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm
    long new_btCompoundCompoundCollisionAlgorithm_CreateFunc() -> new_btCompoundCompoundCollisionAlgorithm_CreateFunc
    void delete_btCompoundCompoundCollisionAlgorithm_CreateFunc(long) -> delete_btCompoundCompoundCollisionAlgorithm_CreateFunc
    long btCompoundCompoundCollisionAlgorithm_SwappedCreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btCompoundCompoundCollisionAlgorithm_SwappedCreateFunc_CreateCollisionAlgorithm
    long new_btCompoundCompoundCollisionAlgorithm_SwappedCreateFunc() -> new_btCompoundCompoundCollisionAlgorithm_SwappedCreateFunc
    void delete_btCompoundCompoundCollisionAlgorithm_SwappedCreateFunc(long) -> delete_btCompoundCompoundCollisionAlgorithm_SwappedCreateFunc
    void delete_btCollisionConfiguration(long) -> delete_btCollisionConfiguration
    long btCollisionConfiguration_getPersistentManifoldPool(long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration) -> btCollisionConfiguration_getPersistentManifoldPool
    long btCollisionConfiguration_getCollisionAlgorithmPool(long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration) -> btCollisionConfiguration_getCollisionAlgorithmPool
    long btCollisionConfiguration_getCollisionAlgorithmCreateFunc(long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration,int,int) -> btCollisionConfiguration_getCollisionAlgorithmCreateFunc
    void btDefaultCollisionConstructionInfo_persistentManifoldPool_set(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator) -> btDefaultCollisionConstructionInfo_persistentManifoldPool_set
    long btDefaultCollisionConstructionInfo_persistentManifoldPool_get(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo) -> btDefaultCollisionConstructionInfo_persistentManifoldPool_get
    void btDefaultCollisionConstructionInfo_collisionAlgorithmPool_set(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator) -> btDefaultCollisionConstructionInfo_collisionAlgorithmPool_set
    long btDefaultCollisionConstructionInfo_collisionAlgorithmPool_get(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo) -> btDefaultCollisionConstructionInfo_collisionAlgorithmPool_get
    void btDefaultCollisionConstructionInfo_defaultMaxPersistentManifoldPoolSize_set(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo,int) -> btDefaultCollisionConstructionInfo_defaultMaxPersistentManifoldPoolSize_set
    int btDefaultCollisionConstructionInfo_defaultMaxPersistentManifoldPoolSize_get(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo) -> btDefaultCollisionConstructionInfo_defaultMaxPersistentManifoldPoolSize_get
    void btDefaultCollisionConstructionInfo_defaultMaxCollisionAlgorithmPoolSize_set(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo,int) -> btDefaultCollisionConstructionInfo_defaultMaxCollisionAlgorithmPoolSize_set
    int btDefaultCollisionConstructionInfo_defaultMaxCollisionAlgorithmPoolSize_get(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo) -> btDefaultCollisionConstructionInfo_defaultMaxCollisionAlgorithmPoolSize_get
    void btDefaultCollisionConstructionInfo_customCollisionAlgorithmMaxElementSize_set(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo,int) -> btDefaultCollisionConstructionInfo_customCollisionAlgorithmMaxElementSize_set
    int btDefaultCollisionConstructionInfo_customCollisionAlgorithmMaxElementSize_get(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo) -> btDefaultCollisionConstructionInfo_customCollisionAlgorithmMaxElementSize_get
    void btDefaultCollisionConstructionInfo_useEpaPenetrationAlgorithm_set(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo,int) -> btDefaultCollisionConstructionInfo_useEpaPenetrationAlgorithm_set
    int btDefaultCollisionConstructionInfo_useEpaPenetrationAlgorithm_get(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo) -> btDefaultCollisionConstructionInfo_useEpaPenetrationAlgorithm_get
    long new_btDefaultCollisionConstructionInfo() -> new_btDefaultCollisionConstructionInfo
    void delete_btDefaultCollisionConstructionInfo(long) -> delete_btDefaultCollisionConstructionInfo
    long new_btDefaultCollisionConfiguration__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo) -> new_btDefaultCollisionConfiguration__SWIG_0
    long new_btDefaultCollisionConfiguration__SWIG_1() -> new_btDefaultCollisionConfiguration__SWIG_1
    void delete_btDefaultCollisionConfiguration(long) -> delete_btDefaultCollisionConfiguration
    long btDefaultCollisionConfiguration_getSimplexSolver(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration) -> btDefaultCollisionConfiguration_getSimplexSolver
    void btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration,int,int) -> btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_0
    void btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration,int) -> btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_1
    void btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration) -> btDefaultCollisionConfiguration_setConvexConvexMultipointIterations__SWIG_2
    void btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration,int,int) -> btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_0
    void btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration,int) -> btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_1
    void btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration) -> btDefaultCollisionConfiguration_setPlaneConvexMultipointIterations__SWIG_2
    void gContactAddedCallback_set(long) -> gContactAddedCallback_set
    long gContactAddedCallback_get() -> gContactAddedCallback_get
    long new_btManifoldResult__SWIG_0() -> new_btManifoldResult__SWIG_0
    long new_btManifoldResult__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> new_btManifoldResult__SWIG_1
    void delete_btManifoldResult(long) -> delete_btManifoldResult
    void btManifoldResult_setPersistentManifold(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btManifoldResult_setPersistentManifold
    long btManifoldResult_getPersistentManifold__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> btManifoldResult_getPersistentManifold__SWIG_0
    void btManifoldResult_refreshContactPoints(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> btManifoldResult_refreshContactPoints
    long btManifoldResult_getBody0Wrap(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> btManifoldResult_getBody0Wrap
    long btManifoldResult_getBody1Wrap(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> btManifoldResult_getBody1Wrap
    void btManifoldResult_setBody0Wrap(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btManifoldResult_setBody0Wrap
    void btManifoldResult_setBody1Wrap(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btManifoldResult_setBody1Wrap
    long btManifoldResult_getBody0Internal(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> btManifoldResult_getBody0Internal
    long btManifoldResult_getBody1Internal(long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> btManifoldResult_getBody1Internal
    float btManifoldResult_calculateCombinedRestitution(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btManifoldResult_calculateCombinedRestitution
    float btManifoldResult_calculateCombinedFriction(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btManifoldResult_calculateCombinedFriction
    int BT_SIMPLE_NULL_PAIR_get() -> BT_SIMPLE_NULL_PAIR_get
    long new_btSimplePair(int,int) -> new_btSimplePair
    void btSimplePair_indexA_set(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair,int) -> btSimplePair_indexA_set
    int btSimplePair_indexA_get(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair) -> btSimplePair_indexA_get
    void btSimplePair_indexB_set(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair,int) -> btSimplePair_indexB_set
    int btSimplePair_indexB_get(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair) -> btSimplePair_indexB_get
    void btSimplePair_userPointer_set(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair,long) -> btSimplePair_userPointer_set
    long btSimplePair_userPointer_get(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair) -> btSimplePair_userPointer_get
    void btSimplePair_userValue_set(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair,int) -> btSimplePair_userValue_set
    int btSimplePair_userValue_get(long,com.badlogic.gdx.physics.bullet.collision.btSimplePair) -> btSimplePair_userValue_get
    void delete_btSimplePair(long) -> delete_btSimplePair
    void gOverlappingSimplePairs_set(int) -> gOverlappingSimplePairs_set
    int gOverlappingSimplePairs_get() -> gOverlappingSimplePairs_get
    void gRemoveSimplePairs_set(int) -> gRemoveSimplePairs_set
    int gRemoveSimplePairs_get() -> gRemoveSimplePairs_get
    void gAddedSimplePairs_set(int) -> gAddedSimplePairs_set
    int gAddedSimplePairs_get() -> gAddedSimplePairs_get
    void gFindSimplePairs_set(int) -> gFindSimplePairs_set
    int gFindSimplePairs_get() -> gFindSimplePairs_get
    long new_btHashedSimplePairCache() -> new_btHashedSimplePairCache
    void delete_btHashedSimplePairCache(long) -> delete_btHashedSimplePairCache
    void btHashedSimplePairCache_removeAllPairs(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache) -> btHashedSimplePairCache_removeAllPairs
    long btHashedSimplePairCache_removeOverlappingPair(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache,int,int) -> btHashedSimplePairCache_removeOverlappingPair
    long btHashedSimplePairCache_addOverlappingPair(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache,int,int) -> btHashedSimplePairCache_addOverlappingPair
    long btHashedSimplePairCache_getOverlappingPairArrayPtr__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache) -> btHashedSimplePairCache_getOverlappingPairArrayPtr__SWIG_0
    long btHashedSimplePairCache_getOverlappingPairArray__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache) -> btHashedSimplePairCache_getOverlappingPairArray__SWIG_0
    long btHashedSimplePairCache_findPair(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache,int,int) -> btHashedSimplePairCache_findPair
    int btHashedSimplePairCache_GetCount(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache) -> btHashedSimplePairCache_GetCount
    int btHashedSimplePairCache_getNumOverlappingPairs(long,com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache) -> btHashedSimplePairCache_getNumOverlappingPairs
    long new_btSphereSphereCollisionAlgorithm__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> new_btSphereSphereCollisionAlgorithm__SWIG_0
    long new_btSphereSphereCollisionAlgorithm__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo) -> new_btSphereSphereCollisionAlgorithm__SWIG_1
    void delete_btSphereSphereCollisionAlgorithm(long) -> delete_btSphereSphereCollisionAlgorithm
    long btSphereSphereCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btSphereSphereCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm
    long new_btSphereSphereCollisionAlgorithm_CreateFunc() -> new_btSphereSphereCollisionAlgorithm_CreateFunc
    void delete_btSphereSphereCollisionAlgorithm_CreateFunc(long) -> delete_btSphereSphereCollisionAlgorithm_CreateFunc
    long new_btBoxBoxCollisionAlgorithm__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo) -> new_btBoxBoxCollisionAlgorithm__SWIG_0
    long new_btBoxBoxCollisionAlgorithm__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> new_btBoxBoxCollisionAlgorithm__SWIG_1
    void delete_btBoxBoxCollisionAlgorithm(long) -> delete_btBoxBoxCollisionAlgorithm
    long btBoxBoxCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btBoxBoxCollisionAlgorithm_CreateFunc_CreateCollisionAlgorithm
    long new_btBoxBoxCollisionAlgorithm_CreateFunc() -> new_btBoxBoxCollisionAlgorithm_CreateFunc
    void delete_btBoxBoxCollisionAlgorithm_CreateFunc(long) -> delete_btBoxBoxCollisionAlgorithm_CreateFunc
    void btCollisionAlgorithmCreateFunc_swapped_set(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc,boolean) -> btCollisionAlgorithmCreateFunc_swapped_set
    boolean btCollisionAlgorithmCreateFunc_swapped_get(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc) -> btCollisionAlgorithmCreateFunc_swapped_get
    long new_btCollisionAlgorithmCreateFunc() -> new_btCollisionAlgorithmCreateFunc
    void delete_btCollisionAlgorithmCreateFunc(long) -> delete_btCollisionAlgorithmCreateFunc
    long btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btCollisionAlgorithmCreateFunc_CreateCollisionAlgorithm
    long new_btBox2dBox2dCollisionAlgorithm__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo) -> new_btBox2dBox2dCollisionAlgorithm__SWIG_0
    long new_btBox2dBox2dCollisionAlgorithm__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> new_btBox2dBox2dCollisionAlgorithm__SWIG_1
    void delete_btBox2dBox2dCollisionAlgorithm(long) -> delete_btBox2dBox2dCollisionAlgorithm
    long new_btBox2dBox2dCollisionAlgorithm_CreateFunc() -> new_btBox2dBox2dCollisionAlgorithm_CreateFunc
    void delete_btBox2dBox2dCollisionAlgorithm_CreateFunc(long) -> delete_btBox2dBox2dCollisionAlgorithm_CreateFunc
    void btElement_id_set(long,com.badlogic.gdx.physics.bullet.collision.btElement,int) -> btElement_id_set
    int btElement_id_get(long,com.badlogic.gdx.physics.bullet.collision.btElement) -> btElement_id_get
    void btElement_sz_set(long,com.badlogic.gdx.physics.bullet.collision.btElement,int) -> btElement_sz_set
    int btElement_sz_get(long,com.badlogic.gdx.physics.bullet.collision.btElement) -> btElement_sz_get
    long new_btElement() -> new_btElement
    void delete_btElement(long) -> delete_btElement
    long new_btUnionFind() -> new_btUnionFind
    void delete_btUnionFind(long) -> delete_btUnionFind
    void btUnionFind_sortIslands(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind) -> btUnionFind_sortIslands
    void btUnionFind_reset(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind,int) -> btUnionFind_reset
    int btUnionFind_getNumElements(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind) -> btUnionFind_getNumElements
    boolean btUnionFind_isRoot(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind,int) -> btUnionFind_isRoot
    long btUnionFind_getElement__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind,int) -> btUnionFind_getElement__SWIG_0
    void btUnionFind_allocate(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind,int) -> btUnionFind_allocate
    void btUnionFind_Free(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind) -> btUnionFind_Free
    int btUnionFind_find__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind,int,int) -> btUnionFind_find__SWIG_0
    void btUnionFind_unite(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind,int,int) -> btUnionFind_unite
    int btUnionFind_find__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btUnionFind,int) -> btUnionFind_find__SWIG_1
    long new_btSphereTriangleCollisionAlgorithm__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean) -> new_btSphereTriangleCollisionAlgorithm__SWIG_0
    long new_btSphereTriangleCollisionAlgorithm__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo) -> new_btSphereTriangleCollisionAlgorithm__SWIG_1
    void delete_btSphereTriangleCollisionAlgorithm(long) -> delete_btSphereTriangleCollisionAlgorithm
    long new_btSphereTriangleCollisionAlgorithm_CreateFunc() -> new_btSphereTriangleCollisionAlgorithm_CreateFunc
    void delete_btSphereTriangleCollisionAlgorithm_CreateFunc(long) -> delete_btSphereTriangleCollisionAlgorithm_CreateFunc
    long new_btSimulationIslandManager() -> new_btSimulationIslandManager
    void delete_btSimulationIslandManager(long) -> delete_btSimulationIslandManager
    void btSimulationIslandManager_initUnionFind(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager,int) -> btSimulationIslandManager_initUnionFind
    long btSimulationIslandManager_getUnionFind(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager) -> btSimulationIslandManager_getUnionFind
    void btSimulationIslandManager_updateActivationState(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btSimulationIslandManager_updateActivationState
    void btSimulationIslandManager_storeIslandActivationState(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btSimulationIslandManager_storeIslandActivationState
    void btSimulationIslandManager_findUnions(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btSimulationIslandManager_findUnions
    void delete_btSimulationIslandManager_IslandCallback(long) -> delete_btSimulationIslandManager_IslandCallback
    void btSimulationIslandManager_IslandCallback_processIsland(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback,long,int,long,int,int) -> btSimulationIslandManager_IslandCallback_processIsland
    void btSimulationIslandManager_buildAndProcessIslands(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback) -> btSimulationIslandManager_buildAndProcessIslands
    void btSimulationIslandManager_buildIslands(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btSimulationIslandManager_buildIslands
    boolean btSimulationIslandManager_getSplitIslands(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager) -> btSimulationIslandManager_getSplitIslands
    void btSimulationIslandManager_setSplitIslands(long,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager,boolean) -> btSimulationIslandManager_setSplitIslands
    long new_btGhostObject() -> new_btGhostObject
    void delete_btGhostObject(long) -> delete_btGhostObject
    void btGhostObject_convexSweepTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float) -> btGhostObject_convexSweepTest__SWIG_0
    void btGhostObject_convexSweepTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback) -> btGhostObject_convexSweepTest__SWIG_1
    void btGhostObject_rayTest(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> btGhostObject_rayTest
    void btGhostObject_addOverlappingObjectInternal__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btGhostObject_addOverlappingObjectInternal__SWIG_0
    void btGhostObject_addOverlappingObjectInternal__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btGhostObject_addOverlappingObjectInternal__SWIG_1
    void btGhostObject_removeOverlappingObjectInternal__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btGhostObject_removeOverlappingObjectInternal__SWIG_0
    void btGhostObject_removeOverlappingObjectInternal__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btGhostObject_removeOverlappingObjectInternal__SWIG_1
    int btGhostObject_getNumOverlappingObjects(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject) -> btGhostObject_getNumOverlappingObjects
    long btGhostObject_getOverlappingObject__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject,int) -> btGhostObject_getOverlappingObject__SWIG_0
    long btGhostObject_getOverlappingPairs__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btGhostObject) -> btGhostObject_getOverlappingPairs__SWIG_0
    long btGhostObject_upcast__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btGhostObject_upcast__SWIG_0
    long new_btPairCachingGhostObject() -> new_btPairCachingGhostObject
    void delete_btPairCachingGhostObject(long) -> delete_btPairCachingGhostObject
    void btPairCachingGhostObject_addOverlappingObjectInternal__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btPairCachingGhostObject_addOverlappingObjectInternal__SWIG_0
    void btPairCachingGhostObject_addOverlappingObjectInternal__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btPairCachingGhostObject_addOverlappingObjectInternal__SWIG_1
    void btPairCachingGhostObject_removeOverlappingObjectInternal__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btPairCachingGhostObject_removeOverlappingObjectInternal__SWIG_0
    void btPairCachingGhostObject_removeOverlappingObjectInternal__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btPairCachingGhostObject_removeOverlappingObjectInternal__SWIG_1
    long btPairCachingGhostObject_getOverlappingPairCache(long,com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject) -> btPairCachingGhostObject_getOverlappingPairCache
    long new_btGhostPairCallback() -> new_btGhostPairCallback
    void delete_btGhostPairCallback(long) -> delete_btGhostPairCallback
    long btGhostPairCallback_addOverlappingPair(long,com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btGhostPairCallback_addOverlappingPair
    long btGhostPairCallback_addOverlappingPairSwigExplicitbtGhostPairCallback(long,com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btGhostPairCallback_addOverlappingPairSwigExplicitbtGhostPairCallback
    long btGhostPairCallback_removeOverlappingPair(long,com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btGhostPairCallback_removeOverlappingPair
    long btGhostPairCallback_removeOverlappingPairSwigExplicitbtGhostPairCallback(long,com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btGhostPairCallback_removeOverlappingPairSwigExplicitbtGhostPairCallback
    void btGhostPairCallback_removeOverlappingPairsContainingProxy(long,com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btGhostPairCallback_removeOverlappingPairsContainingProxy
    void btGhostPairCallback_removeOverlappingPairsContainingProxySwigExplicitbtGhostPairCallback(long,com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btGhostPairCallback_removeOverlappingPairsContainingProxySwigExplicitbtGhostPairCallback
    void btGhostPairCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,boolean,boolean) -> btGhostPairCallback_director_connect
    void btGhostPairCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,boolean) -> btGhostPairCallback_change_ownership
    long new_btCollisionWorld(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration) -> new_btCollisionWorld
    void delete_btCollisionWorld(long) -> delete_btCollisionWorld
    void btCollisionWorld_setBroadphase(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface) -> btCollisionWorld_setBroadphase
    long btCollisionWorld_getBroadphase__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btCollisionWorld_getBroadphase__SWIG_0
    long btCollisionWorld_getPairCache(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btCollisionWorld_getPairCache
    long btCollisionWorld_getDispatcher__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btCollisionWorld_getDispatcher__SWIG_0
    void btCollisionWorld_updateSingleAabb(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionWorld_updateSingleAabb
    void btCollisionWorld_updateAabbs(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btCollisionWorld_updateAabbs
    void btCollisionWorld_computeOverlappingPairs(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btCollisionWorld_computeOverlappingPairs
    void btCollisionWorld_setDebugDrawer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btCollisionWorld_setDebugDrawer
    long btCollisionWorld_getDebugDrawer(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btCollisionWorld_getDebugDrawer
    void btCollisionWorld_debugDrawWorld(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btCollisionWorld_debugDrawWorld
    void btCollisionWorld_debugDrawObject(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3) -> btCollisionWorld_debugDrawObject
    int btCollisionWorld_getNumCollisionObjects(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btCollisionWorld_getNumCollisionObjects
    void btCollisionWorld_rayTest(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> btCollisionWorld_rayTest
    void btCollisionWorld_convexSweepTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float) -> btCollisionWorld_convexSweepTest__SWIG_0
    void btCollisionWorld_convexSweepTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback) -> btCollisionWorld_convexSweepTest__SWIG_1
    void btCollisionWorld_contactTest(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback) -> btCollisionWorld_contactTest
    void btCollisionWorld_contactPairTest(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback) -> btCollisionWorld_contactPairTest
    void btCollisionWorld_rayTestSingle(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> btCollisionWorld_rayTestSingle
    void btCollisionWorld_rayTestSingleInternal(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> btCollisionWorld_rayTestSingleInternal
    void btCollisionWorld_objectQuerySingle(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float) -> btCollisionWorld_objectQuerySingle
    void btCollisionWorld_objectQuerySingleInternal(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float) -> btCollisionWorld_objectQuerySingleInternal
    void btCollisionWorld_addCollisionObject__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short,short) -> btCollisionWorld_addCollisionObject__SWIG_0
    void btCollisionWorld_addCollisionObject__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short) -> btCollisionWorld_addCollisionObject__SWIG_1
    void btCollisionWorld_addCollisionObject__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionWorld_addCollisionObject__SWIG_2
    long btCollisionWorld_getCollisionObjectArray__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btCollisionWorld_getCollisionObjectArray__SWIG_0
    void btCollisionWorld_removeCollisionObject(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btCollisionWorld_removeCollisionObject
    void btCollisionWorld_performDiscreteCollisionDetection(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btCollisionWorld_performDiscreteCollisionDetection
    long btCollisionWorld_getDispatchInfo__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btCollisionWorld_getDispatchInfo__SWIG_0
    boolean btCollisionWorld_getForceUpdateAllAabbs(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btCollisionWorld_getForceUpdateAllAabbs
    void btCollisionWorld_setForceUpdateAllAabbs(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,boolean) -> btCollisionWorld_setForceUpdateAllAabbs
    void btCollisionWorld_serialize(long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,long) -> btCollisionWorld_serialize
    void LocalShapeInfo_shapePart_set(long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo,int) -> LocalShapeInfo_shapePart_set
    int LocalShapeInfo_shapePart_get(long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo) -> LocalShapeInfo_shapePart_get
    void LocalShapeInfo_triangleIndex_set(long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo,int) -> LocalShapeInfo_triangleIndex_set
    int LocalShapeInfo_triangleIndex_get(long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo) -> LocalShapeInfo_triangleIndex_get
    long new_LocalShapeInfo() -> new_LocalShapeInfo
    void delete_LocalShapeInfo(long) -> delete_LocalShapeInfo
    long new_LocalRayResult(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo,com.badlogic.gdx.math.Vector3,float) -> new_LocalRayResult
    void LocalRayResult_collisionObject_set(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> LocalRayResult_collisionObject_set
    long LocalRayResult_collisionObject_get(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult) -> LocalRayResult_collisionObject_get
    void LocalRayResult_localShapeInfo_set(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo) -> LocalRayResult_localShapeInfo_set
    long LocalRayResult_localShapeInfo_get(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult) -> LocalRayResult_localShapeInfo_get
    void LocalRayResult_hitNormalLocal_set(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> LocalRayResult_hitNormalLocal_set
    long LocalRayResult_hitNormalLocal_get(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult) -> LocalRayResult_hitNormalLocal_get
    void LocalRayResult_hitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,float) -> LocalRayResult_hitFraction_set
    float LocalRayResult_hitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult) -> LocalRayResult_hitFraction_get
    void delete_LocalRayResult(long) -> delete_LocalRayResult
    void RayResultCallback_closestHitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,float) -> RayResultCallback_closestHitFraction_set
    float RayResultCallback_closestHitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> RayResultCallback_closestHitFraction_get
    void RayResultCallback_collisionObject_set(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> RayResultCallback_collisionObject_set
    long RayResultCallback_collisionObject_get(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> RayResultCallback_collisionObject_get
    void RayResultCallback_collisionFilterGroup_set(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,short) -> RayResultCallback_collisionFilterGroup_set
    short RayResultCallback_collisionFilterGroup_get(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> RayResultCallback_collisionFilterGroup_get
    void RayResultCallback_collisionFilterMask_set(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,short) -> RayResultCallback_collisionFilterMask_set
    short RayResultCallback_collisionFilterMask_get(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> RayResultCallback_collisionFilterMask_get
    void RayResultCallback_flags_set(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long) -> RayResultCallback_flags_set
    long RayResultCallback_flags_get(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> RayResultCallback_flags_get
    void delete_RayResultCallback(long) -> delete_RayResultCallback
    boolean RayResultCallback_hasHit(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> RayResultCallback_hasHit
    long new_RayResultCallback() -> new_RayResultCallback
    boolean RayResultCallback_needsCollision(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> RayResultCallback_needsCollision
    boolean RayResultCallback_needsCollisionSwigExplicitRayResultCallback(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> RayResultCallback_needsCollisionSwigExplicitRayResultCallback
    float RayResultCallback_addSingleResult(long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean) -> RayResultCallback_addSingleResult
    void RayResultCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long,boolean,boolean) -> RayResultCallback_director_connect
    void RayResultCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long,boolean) -> RayResultCallback_change_ownership
    long new_ClosestRayResultCallback(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_ClosestRayResultCallback
    void ClosestRayResultCallback_rayFromWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> ClosestRayResultCallback_rayFromWorld_set
    long ClosestRayResultCallback_rayFromWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback) -> ClosestRayResultCallback_rayFromWorld_get
    void ClosestRayResultCallback_rayToWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> ClosestRayResultCallback_rayToWorld_set
    long ClosestRayResultCallback_rayToWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback) -> ClosestRayResultCallback_rayToWorld_get
    void ClosestRayResultCallback_hitNormalWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> ClosestRayResultCallback_hitNormalWorld_set
    long ClosestRayResultCallback_hitNormalWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback) -> ClosestRayResultCallback_hitNormalWorld_get
    void ClosestRayResultCallback_hitPointWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> ClosestRayResultCallback_hitPointWorld_set
    long ClosestRayResultCallback_hitPointWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback) -> ClosestRayResultCallback_hitPointWorld_get
    float ClosestRayResultCallback_addSingleResult(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean) -> ClosestRayResultCallback_addSingleResult
    float ClosestRayResultCallback_addSingleResultSwigExplicitClosestRayResultCallback(long,com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean) -> ClosestRayResultCallback_addSingleResultSwigExplicitClosestRayResultCallback
    void delete_ClosestRayResultCallback(long) -> delete_ClosestRayResultCallback
    void ClosestRayResultCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,boolean,boolean) -> ClosestRayResultCallback_director_connect
    void ClosestRayResultCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,boolean) -> ClosestRayResultCallback_change_ownership
    long new_AllHitsRayResultCallback(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_AllHitsRayResultCallback
    void AllHitsRayResultCallback_collisionObjects_set(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray) -> AllHitsRayResultCallback_collisionObjects_set
    long AllHitsRayResultCallback_collisionObjects_get(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback) -> AllHitsRayResultCallback_collisionObjects_get
    void AllHitsRayResultCallback_rayFromWorld_set(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> AllHitsRayResultCallback_rayFromWorld_set
    long AllHitsRayResultCallback_rayFromWorld_get(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback) -> AllHitsRayResultCallback_rayFromWorld_get
    void AllHitsRayResultCallback_rayToWorld_set(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> AllHitsRayResultCallback_rayToWorld_set
    long AllHitsRayResultCallback_rayToWorld_get(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback) -> AllHitsRayResultCallback_rayToWorld_get
    void AllHitsRayResultCallback_hitNormalWorld_set(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> AllHitsRayResultCallback_hitNormalWorld_set
    long AllHitsRayResultCallback_hitNormalWorld_get(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback) -> AllHitsRayResultCallback_hitNormalWorld_get
    void AllHitsRayResultCallback_hitPointWorld_set(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> AllHitsRayResultCallback_hitPointWorld_set
    long AllHitsRayResultCallback_hitPointWorld_get(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback) -> AllHitsRayResultCallback_hitPointWorld_get
    void AllHitsRayResultCallback_hitFractions_set(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> AllHitsRayResultCallback_hitFractions_set
    long AllHitsRayResultCallback_hitFractions_get(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback) -> AllHitsRayResultCallback_hitFractions_get
    float AllHitsRayResultCallback_addSingleResult(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean) -> AllHitsRayResultCallback_addSingleResult
    float AllHitsRayResultCallback_addSingleResultSwigExplicitAllHitsRayResultCallback(long,com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean) -> AllHitsRayResultCallback_addSingleResultSwigExplicitAllHitsRayResultCallback
    void delete_AllHitsRayResultCallback(long) -> delete_AllHitsRayResultCallback
    void AllHitsRayResultCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,boolean,boolean) -> AllHitsRayResultCallback_director_connect
    void AllHitsRayResultCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,boolean) -> AllHitsRayResultCallback_change_ownership
    long new_LocalConvexResult(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> new_LocalConvexResult
    void LocalConvexResult_hitCollisionObject_set(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> LocalConvexResult_hitCollisionObject_set
    long LocalConvexResult_hitCollisionObject_get(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult) -> LocalConvexResult_hitCollisionObject_get
    void LocalConvexResult_localShapeInfo_set(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,long,com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo) -> LocalConvexResult_localShapeInfo_set
    long LocalConvexResult_localShapeInfo_get(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult) -> LocalConvexResult_localShapeInfo_get
    void LocalConvexResult_hitNormalLocal_set(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> LocalConvexResult_hitNormalLocal_set
    long LocalConvexResult_hitNormalLocal_get(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult) -> LocalConvexResult_hitNormalLocal_get
    void LocalConvexResult_hitPointLocal_set(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> LocalConvexResult_hitPointLocal_set
    long LocalConvexResult_hitPointLocal_get(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult) -> LocalConvexResult_hitPointLocal_get
    void LocalConvexResult_hitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,float) -> LocalConvexResult_hitFraction_set
    float LocalConvexResult_hitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult) -> LocalConvexResult_hitFraction_get
    void delete_LocalConvexResult(long) -> delete_LocalConvexResult
    void ConvexResultCallback_closestHitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float) -> ConvexResultCallback_closestHitFraction_set
    float ConvexResultCallback_closestHitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback) -> ConvexResultCallback_closestHitFraction_get
    void ConvexResultCallback_collisionFilterGroup_set(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,short) -> ConvexResultCallback_collisionFilterGroup_set
    short ConvexResultCallback_collisionFilterGroup_get(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback) -> ConvexResultCallback_collisionFilterGroup_get
    void ConvexResultCallback_collisionFilterMask_set(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,short) -> ConvexResultCallback_collisionFilterMask_set
    short ConvexResultCallback_collisionFilterMask_get(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback) -> ConvexResultCallback_collisionFilterMask_get
    long new_ConvexResultCallback() -> new_ConvexResultCallback
    void delete_ConvexResultCallback(long) -> delete_ConvexResultCallback
    boolean ConvexResultCallback_hasHit(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback) -> ConvexResultCallback_hasHit
    boolean ConvexResultCallback_needsCollision(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> ConvexResultCallback_needsCollision
    boolean ConvexResultCallback_needsCollisionSwigExplicitConvexResultCallback(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> ConvexResultCallback_needsCollisionSwigExplicitConvexResultCallback
    float ConvexResultCallback_addSingleResult(long,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,boolean) -> ConvexResultCallback_addSingleResult
    void ConvexResultCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,long,boolean,boolean) -> ConvexResultCallback_director_connect
    void ConvexResultCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,long,boolean) -> ConvexResultCallback_change_ownership
    long new_ClosestConvexResultCallback(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_ClosestConvexResultCallback
    void ClosestConvexResultCallback_convexFromWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> ClosestConvexResultCallback_convexFromWorld_set
    long ClosestConvexResultCallback_convexFromWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback) -> ClosestConvexResultCallback_convexFromWorld_get
    void ClosestConvexResultCallback_convexToWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> ClosestConvexResultCallback_convexToWorld_set
    long ClosestConvexResultCallback_convexToWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback) -> ClosestConvexResultCallback_convexToWorld_get
    void ClosestConvexResultCallback_hitNormalWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> ClosestConvexResultCallback_hitNormalWorld_set
    long ClosestConvexResultCallback_hitNormalWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback) -> ClosestConvexResultCallback_hitNormalWorld_get
    void ClosestConvexResultCallback_hitPointWorld_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> ClosestConvexResultCallback_hitPointWorld_set
    long ClosestConvexResultCallback_hitPointWorld_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback) -> ClosestConvexResultCallback_hitPointWorld_get
    void ClosestConvexResultCallback_hitCollisionObject_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> ClosestConvexResultCallback_hitCollisionObject_set
    long ClosestConvexResultCallback_hitCollisionObject_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback) -> ClosestConvexResultCallback_hitCollisionObject_get
    float ClosestConvexResultCallback_addSingleResult(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,boolean) -> ClosestConvexResultCallback_addSingleResult
    float ClosestConvexResultCallback_addSingleResultSwigExplicitClosestConvexResultCallback(long,com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,boolean) -> ClosestConvexResultCallback_addSingleResultSwigExplicitClosestConvexResultCallback
    void delete_ClosestConvexResultCallback(long) -> delete_ClosestConvexResultCallback
    void ClosestConvexResultCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,boolean,boolean) -> ClosestConvexResultCallback_director_connect
    void ClosestConvexResultCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,boolean) -> ClosestConvexResultCallback_change_ownership
    void ContactResultCallback_collisionFilterGroup_set(long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,short) -> ContactResultCallback_collisionFilterGroup_set
    short ContactResultCallback_collisionFilterGroup_get(long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback) -> ContactResultCallback_collisionFilterGroup_get
    void ContactResultCallback_collisionFilterMask_set(long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,short) -> ContactResultCallback_collisionFilterMask_set
    short ContactResultCallback_collisionFilterMask_get(long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback) -> ContactResultCallback_collisionFilterMask_get
    long new_ContactResultCallback() -> new_ContactResultCallback
    void delete_ContactResultCallback(long) -> delete_ContactResultCallback
    boolean ContactResultCallback_needsCollision(long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> ContactResultCallback_needsCollision
    boolean ContactResultCallback_needsCollisionSwigExplicitContactResultCallback(long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> ContactResultCallback_needsCollisionSwigExplicitContactResultCallback
    float ContactResultCallback_addSingleResult(long,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int) -> ContactResultCallback_addSingleResult
    void ContactResultCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,long,boolean,boolean) -> ContactResultCallback_director_connect
    void ContactResultCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,long,boolean) -> ContactResultCallback_change_ownership
    void ClosestNotMeConvexResultCallback_me_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> ClosestNotMeConvexResultCallback_me_set
    long ClosestNotMeConvexResultCallback_me_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback) -> ClosestNotMeConvexResultCallback_me_get
    void ClosestNotMeConvexResultCallback_allowedPenetration_set(long,com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback,float) -> ClosestNotMeConvexResultCallback_allowedPenetration_set
    float ClosestNotMeConvexResultCallback_allowedPenetration_get(long,com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback) -> ClosestNotMeConvexResultCallback_allowedPenetration_get
    long new_ClosestNotMeConvexResultCallback(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_ClosestNotMeConvexResultCallback
    boolean ClosestNotMeConvexResultCallback_needsCollision(long,com.badlogic.gdx.physics.bullet.collision.ClosestNotMeConvexResultCallback,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> ClosestNotMeConvexResultCallback_needsCollision
    void delete_ClosestNotMeConvexResultCallback(long) -> delete_ClosestNotMeConvexResultCallback
    long new_ClosestNotMeRayResultCallback(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> new_ClosestNotMeRayResultCallback
    void delete_ClosestNotMeRayResultCallback(long) -> delete_ClosestNotMeRayResultCallback
    long new_btConvex2dConvex2dAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver,int,int) -> new_btConvex2dConvex2dAlgorithm
    void delete_btConvex2dConvex2dAlgorithm(long) -> delete_btConvex2dConvex2dAlgorithm
    void btConvex2dConvex2dAlgorithm_setLowLevelOfDetail(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm,boolean) -> btConvex2dConvex2dAlgorithm_setLowLevelOfDetail
    long btConvex2dConvex2dAlgorithm_getManifold(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm) -> btConvex2dConvex2dAlgorithm_getManifold
    void btConvex2dConvex2dAlgorithm_CreateFunc_pdSolver_set(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver) -> btConvex2dConvex2dAlgorithm_CreateFunc_pdSolver_set
    long btConvex2dConvex2dAlgorithm_CreateFunc_pdSolver_get(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc) -> btConvex2dConvex2dAlgorithm_CreateFunc_pdSolver_get
    void btConvex2dConvex2dAlgorithm_CreateFunc_simplexSolver_set(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btConvex2dConvex2dAlgorithm_CreateFunc_simplexSolver_set
    long btConvex2dConvex2dAlgorithm_CreateFunc_simplexSolver_get(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc) -> btConvex2dConvex2dAlgorithm_CreateFunc_simplexSolver_get
    void btConvex2dConvex2dAlgorithm_CreateFunc_numPerturbationIterations_set(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc,int) -> btConvex2dConvex2dAlgorithm_CreateFunc_numPerturbationIterations_set
    int btConvex2dConvex2dAlgorithm_CreateFunc_numPerturbationIterations_get(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc) -> btConvex2dConvex2dAlgorithm_CreateFunc_numPerturbationIterations_get
    void btConvex2dConvex2dAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc,int) -> btConvex2dConvex2dAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_set
    int btConvex2dConvex2dAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc) -> btConvex2dConvex2dAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_get
    long new_btConvex2dConvex2dAlgorithm_CreateFunc(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver) -> new_btConvex2dConvex2dAlgorithm_CreateFunc
    void delete_btConvex2dConvex2dAlgorithm_CreateFunc(long) -> delete_btConvex2dConvex2dAlgorithm_CreateFunc
    void btBoxBoxDetector_box1_set(long,com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector,long,com.badlogic.gdx.physics.bullet.collision.btBoxShape) -> btBoxBoxDetector_box1_set
    long btBoxBoxDetector_box1_get(long,com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector) -> btBoxBoxDetector_box1_get
    void btBoxBoxDetector_box2_set(long,com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector,long,com.badlogic.gdx.physics.bullet.collision.btBoxShape) -> btBoxBoxDetector_box2_set
    long btBoxBoxDetector_box2_get(long,com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector) -> btBoxBoxDetector_box2_get
    long new_btBoxBoxDetector(long,com.badlogic.gdx.physics.bullet.collision.btBoxShape,long,com.badlogic.gdx.physics.bullet.collision.btBoxShape) -> new_btBoxBoxDetector
    void delete_btBoxBoxDetector(long) -> delete_btBoxBoxDetector
    void btBoxBoxDetector_getClosestPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean) -> btBoxBoxDetector_getClosestPoints__SWIG_0
    void btBoxBoxDetector_getClosestPoints__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btBoxBoxDetector_getClosestPoints__SWIG_1
    long new_btSphereBoxCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean) -> new_btSphereBoxCollisionAlgorithm
    void delete_btSphereBoxCollisionAlgorithm(long) -> delete_btSphereBoxCollisionAlgorithm
    boolean btSphereBoxCollisionAlgorithm_getSphereDistance(long,com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.math.Vector3,float,float) -> btSphereBoxCollisionAlgorithm_getSphereDistance
    float btSphereBoxCollisionAlgorithm_getSpherePenetration(long,com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btSphereBoxCollisionAlgorithm_getSpherePenetration
    long new_btSphereBoxCollisionAlgorithm_CreateFunc() -> new_btSphereBoxCollisionAlgorithm_CreateFunc
    void delete_btSphereBoxCollisionAlgorithm_CreateFunc(long) -> delete_btSphereBoxCollisionAlgorithm_CreateFunc
    int btCollisionDispatcher_getDispatcherFlags(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher) -> btCollisionDispatcher_getDispatcherFlags
    void btCollisionDispatcher_setDispatcherFlags(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,int) -> btCollisionDispatcher_setDispatcherFlags
    void btCollisionDispatcher_registerCollisionCreateFunc(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,int,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc) -> btCollisionDispatcher_registerCollisionCreateFunc
    long btCollisionDispatcher_getManifoldByIndexInternal__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,int) -> btCollisionDispatcher_getManifoldByIndexInternal__SWIG_0
    long new_btCollisionDispatcher(long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration) -> new_btCollisionDispatcher
    void delete_btCollisionDispatcher(long) -> delete_btCollisionDispatcher
    long btCollisionDispatcher_findAlgorithm__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btCollisionDispatcher_findAlgorithm__SWIG_0
    long btCollisionDispatcher_findAlgorithm__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btCollisionDispatcher_findAlgorithm__SWIG_1
    void btCollisionDispatcher_setNearCallback(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,long) -> btCollisionDispatcher_setNearCallback
    long btCollisionDispatcher_getNearCallback(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher) -> btCollisionDispatcher_getNearCallback
    void btCollisionDispatcher_defaultNearCallback(com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo) -> btCollisionDispatcher_defaultNearCallback
    long btCollisionDispatcher_getCollisionConfiguration__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher) -> btCollisionDispatcher_getCollisionConfiguration__SWIG_0
    void btCollisionDispatcher_setCollisionConfiguration(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration) -> btCollisionDispatcher_setCollisionConfiguration
    long btCollisionDispatcher_getInternalManifoldPool__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher) -> btCollisionDispatcher_getInternalManifoldPool__SWIG_0
    long new_btConvexConvexAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver,int,int) -> new_btConvexConvexAlgorithm
    void delete_btConvexConvexAlgorithm(long) -> delete_btConvexConvexAlgorithm
    void btConvexConvexAlgorithm_setLowLevelOfDetail(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm,boolean) -> btConvexConvexAlgorithm_setLowLevelOfDetail
    long btConvexConvexAlgorithm_getManifold(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm) -> btConvexConvexAlgorithm_getManifold
    void btConvexConvexAlgorithm_CreateFunc_pdSolver_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver) -> btConvexConvexAlgorithm_CreateFunc_pdSolver_set
    long btConvexConvexAlgorithm_CreateFunc_pdSolver_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc) -> btConvexConvexAlgorithm_CreateFunc_pdSolver_get
    void btConvexConvexAlgorithm_CreateFunc_simplexSolver_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btConvexConvexAlgorithm_CreateFunc_simplexSolver_set
    long btConvexConvexAlgorithm_CreateFunc_simplexSolver_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc) -> btConvexConvexAlgorithm_CreateFunc_simplexSolver_get
    void btConvexConvexAlgorithm_CreateFunc_numPerturbationIterations_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc,int) -> btConvexConvexAlgorithm_CreateFunc_numPerturbationIterations_set
    int btConvexConvexAlgorithm_CreateFunc_numPerturbationIterations_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc) -> btConvexConvexAlgorithm_CreateFunc_numPerturbationIterations_get
    void btConvexConvexAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc,int) -> btConvexConvexAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_set
    int btConvexConvexAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc) -> btConvexConvexAlgorithm_CreateFunc_minimumPointsPerturbationThreshold_get
    long new_btConvexConvexAlgorithm_CreateFunc(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver) -> new_btConvexConvexAlgorithm_CreateFunc
    void delete_btConvexConvexAlgorithm_CreateFunc(long) -> delete_btConvexConvexAlgorithm_CreateFunc
    void SphereTriangleDetector_getClosestPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean) -> SphereTriangleDetector_getClosestPoints__SWIG_0
    void SphereTriangleDetector_getClosestPoints__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> SphereTriangleDetector_getClosestPoints__SWIG_1
    long new_SphereTriangleDetector(long,com.badlogic.gdx.physics.bullet.collision.btSphereShape,long,com.badlogic.gdx.physics.bullet.collision.btTriangleShape,float) -> new_SphereTriangleDetector
    void delete_SphereTriangleDetector(long) -> delete_SphereTriangleDetector
    boolean SphereTriangleDetector_collide(long,com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,float) -> SphereTriangleDetector_collide
    void btGenerateInternalEdgeInfo(long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,long,com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap) -> btGenerateInternalEdgeInfo
    void btAdjustInternalEdgeContacts__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,int) -> btAdjustInternalEdgeContacts__SWIG_0
    void btAdjustInternalEdgeContacts__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int) -> btAdjustInternalEdgeContacts__SWIG_1
    void gCompoundChildShapePairCallback_set(long) -> gCompoundChildShapePairCallback_set
    long gCompoundChildShapePairCallback_get() -> gCompoundChildShapePairCallback_get
    long new_btCompoundCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean) -> new_btCompoundCollisionAlgorithm
    void delete_btCompoundCollisionAlgorithm(long) -> delete_btCompoundCollisionAlgorithm
    long btCompoundCollisionAlgorithm_getChildAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm,int) -> btCompoundCollisionAlgorithm_getChildAlgorithm
    long new_btCompoundCollisionAlgorithm_CreateFunc() -> new_btCompoundCollisionAlgorithm_CreateFunc
    void delete_btCompoundCollisionAlgorithm_CreateFunc(long) -> delete_btCompoundCollisionAlgorithm_CreateFunc
    long new_btCompoundCollisionAlgorithm_SwappedCreateFunc() -> new_btCompoundCollisionAlgorithm_SwappedCreateFunc
    void delete_btCompoundCollisionAlgorithm_SwappedCreateFunc(long) -> delete_btCompoundCollisionAlgorithm_SwappedCreateFunc
    void delete_btConvexCast(long) -> delete_btConvexCast
    void btConvexCast_CastResult_DebugDraw(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,float) -> btConvexCast_CastResult_DebugDraw
    void btConvexCast_CastResult_drawCoordSystem(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,com.badlogic.gdx.math.Matrix4) -> btConvexCast_CastResult_drawCoordSystem
    void btConvexCast_CastResult_reportFailure(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,int,int) -> btConvexCast_CastResult_reportFailure
    long new_btConvexCast_CastResult() -> new_btConvexCast_CastResult
    void delete_btConvexCast_CastResult(long) -> delete_btConvexCast_CastResult
    void btConvexCast_CastResult_hitTransformA_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btConvexCast_CastResult_hitTransformA_set
    long btConvexCast_CastResult_hitTransformA_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult) -> btConvexCast_CastResult_hitTransformA_get
    void btConvexCast_CastResult_hitTransformB_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btConvexCast_CastResult_hitTransformB_set
    long btConvexCast_CastResult_hitTransformB_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult) -> btConvexCast_CastResult_hitTransformB_get
    void btConvexCast_CastResult_normal_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btConvexCast_CastResult_normal_set
    long btConvexCast_CastResult_normal_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult) -> btConvexCast_CastResult_normal_get
    void btConvexCast_CastResult_hitPoint_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btConvexCast_CastResult_hitPoint_set
    long btConvexCast_CastResult_hitPoint_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult) -> btConvexCast_CastResult_hitPoint_get
    void btConvexCast_CastResult_fraction_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,float) -> btConvexCast_CastResult_fraction_set
    float btConvexCast_CastResult_fraction_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult) -> btConvexCast_CastResult_fraction_get
    void btConvexCast_CastResult_debugDrawer_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btConvexCast_CastResult_debugDrawer_set
    long btConvexCast_CastResult_debugDrawer_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult) -> btConvexCast_CastResult_debugDrawer_get
    void btConvexCast_CastResult_allowedPenetration_set(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult,float) -> btConvexCast_CastResult_allowedPenetration_set
    float btConvexCast_CastResult_allowedPenetration_get(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult) -> btConvexCast_CastResult_allowedPenetration_get
    boolean btConvexCast_calcTimeOfImpact(long,com.badlogic.gdx.physics.bullet.collision.btConvexCast,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult) -> btConvexCast_calcTimeOfImpact
    long new_btSubsimplexConvexCast(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> new_btSubsimplexConvexCast
    void delete_btSubsimplexConvexCast(long) -> delete_btSubsimplexConvexCast
    void btPolyhedralContactClipping_clipHullAgainstHull(com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,float,float,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result) -> btPolyhedralContactClipping_clipHullAgainstHull
    void btPolyhedralContactClipping_clipFaceAgainstHull(com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,float,float,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result) -> btPolyhedralContactClipping_clipFaceAgainstHull
    boolean btPolyhedralContactClipping_findSeparatingAxis(long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,long,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result) -> btPolyhedralContactClipping_findSeparatingAxis
    void btPolyhedralContactClipping_clipFace(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3,float) -> btPolyhedralContactClipping_clipFace
    long new_btPolyhedralContactClipping() -> new_btPolyhedralContactClipping
    void delete_btPolyhedralContactClipping(long) -> delete_btPolyhedralContactClipping
    void gContactBreakingThreshold_set(float) -> gContactBreakingThreshold_set
    float gContactBreakingThreshold_get() -> gContactBreakingThreshold_get
    void btPersistentManifold_companionIdA_set(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,int) -> btPersistentManifold_companionIdA_set
    int btPersistentManifold_companionIdA_get(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btPersistentManifold_companionIdA_get
    void btPersistentManifold_companionIdB_set(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,int) -> btPersistentManifold_companionIdB_set
    int btPersistentManifold_companionIdB_get(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btPersistentManifold_companionIdB_get
    void btPersistentManifold_index1a_set(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,int) -> btPersistentManifold_index1a_set
    int btPersistentManifold_index1a_get(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btPersistentManifold_index1a_get
    long new_btPersistentManifold__SWIG_0() -> new_btPersistentManifold__SWIG_0
    long new_btPersistentManifold__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,float,float) -> new_btPersistentManifold__SWIG_1
    long btPersistentManifold_getBody0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btPersistentManifold_getBody0
    long btPersistentManifold_getBody1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btPersistentManifold_getBody1
    void btPersistentManifold_setBodies(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btPersistentManifold_setBodies
    void btPersistentManifold_clearUserCache(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btPersistentManifold_clearUserCache
    int btPersistentManifold_getNumContacts(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btPersistentManifold_getNumContacts
    void btPersistentManifold_setNumContacts(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,int) -> btPersistentManifold_setNumContacts
    long btPersistentManifold_getContactPoint__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,int) -> btPersistentManifold_getContactPoint__SWIG_0
    float btPersistentManifold_getContactBreakingThreshold(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btPersistentManifold_getContactBreakingThreshold
    float btPersistentManifold_getContactProcessingThreshold(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btPersistentManifold_getContactProcessingThreshold
    void btPersistentManifold_setContactBreakingThreshold(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,float) -> btPersistentManifold_setContactBreakingThreshold
    void btPersistentManifold_setContactProcessingThreshold(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,float) -> btPersistentManifold_setContactProcessingThreshold
    int btPersistentManifold_getCacheEntry(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btPersistentManifold_getCacheEntry
    int btPersistentManifold_addManifoldPoint__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,boolean) -> btPersistentManifold_addManifoldPoint__SWIG_0
    int btPersistentManifold_addManifoldPoint__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btPersistentManifold_addManifoldPoint__SWIG_1
    void btPersistentManifold_removeContactPoint(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,int) -> btPersistentManifold_removeContactPoint
    void btPersistentManifold_replaceContactPoint(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int) -> btPersistentManifold_replaceContactPoint
    boolean btPersistentManifold_validContactDistance(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btPersistentManifold_validContactDistance
    void btPersistentManifold_refreshContactPoints(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> btPersistentManifold_refreshContactPoints
    void btPersistentManifold_clearManifold(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btPersistentManifold_clearManifold
    void delete_btPersistentManifold(long) -> delete_btPersistentManifold
    long new_btPersistentManifoldArray__SWIG_0() -> new_btPersistentManifoldArray__SWIG_0
    void delete_btPersistentManifoldArray(long) -> delete_btPersistentManifoldArray
    long new_btPersistentManifoldArray__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray) -> new_btPersistentManifoldArray__SWIG_1
    int btPersistentManifoldArray_size(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray) -> btPersistentManifoldArray_size
    long btPersistentManifoldArray_at__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,int) -> btPersistentManifoldArray_at__SWIG_0
    void btPersistentManifoldArray_clear(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray) -> btPersistentManifoldArray_clear
    void btPersistentManifoldArray_pop_back(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray) -> btPersistentManifoldArray_pop_back
    void btPersistentManifoldArray_resizeNoInitialize(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,int) -> btPersistentManifoldArray_resizeNoInitialize
    void btPersistentManifoldArray_resize__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,int,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btPersistentManifoldArray_resize__SWIG_0
    void btPersistentManifoldArray_resize__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,int) -> btPersistentManifoldArray_resize__SWIG_1
    long btPersistentManifoldArray_expandNonInitializing(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray) -> btPersistentManifoldArray_expandNonInitializing
    long btPersistentManifoldArray_expand__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btPersistentManifoldArray_expand__SWIG_0
    long btPersistentManifoldArray_expand__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray) -> btPersistentManifoldArray_expand__SWIG_1
    void btPersistentManifoldArray_push_back(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btPersistentManifoldArray_push_back
    int btPersistentManifoldArray_capacity(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray) -> btPersistentManifoldArray_capacity
    void btPersistentManifoldArray_reserve(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,int) -> btPersistentManifoldArray_reserve
    long new_btPersistentManifoldArray_less() -> new_btPersistentManifoldArray_less
    void delete_btPersistentManifoldArray_less(long) -> delete_btPersistentManifoldArray_less
    void btPersistentManifoldArray_swap(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,int,int) -> btPersistentManifoldArray_swap
    int btPersistentManifoldArray_findBinarySearch(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btPersistentManifoldArray_findBinarySearch
    int btPersistentManifoldArray_findLinearSearch(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btPersistentManifoldArray_findLinearSearch
    void btPersistentManifoldArray_remove(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btPersistentManifoldArray_remove
    void btPersistentManifoldArray_initializeFromBuffer(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,long,int,int) -> btPersistentManifoldArray_initializeFromBuffer
    void btPersistentManifoldArray_copyFromArray(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray) -> btPersistentManifoldArray_copyFromArray
    void btGjkPairDetector_lastUsedMethod_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,int) -> btGjkPairDetector_lastUsedMethod_set
    int btGjkPairDetector_lastUsedMethod_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector) -> btGjkPairDetector_lastUsedMethod_get
    void btGjkPairDetector_curIter_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,int) -> btGjkPairDetector_curIter_set
    int btGjkPairDetector_curIter_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector) -> btGjkPairDetector_curIter_get
    void btGjkPairDetector_degenerateSimplex_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,int) -> btGjkPairDetector_degenerateSimplex_set
    int btGjkPairDetector_degenerateSimplex_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector) -> btGjkPairDetector_degenerateSimplex_get
    void btGjkPairDetector_catchDegeneracies_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,int) -> btGjkPairDetector_catchDegeneracies_set
    int btGjkPairDetector_catchDegeneracies_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector) -> btGjkPairDetector_catchDegeneracies_get
    void btGjkPairDetector_fixContactNormalDirection_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,int) -> btGjkPairDetector_fixContactNormalDirection_set
    int btGjkPairDetector_fixContactNormalDirection_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector) -> btGjkPairDetector_fixContactNormalDirection_get
    long new_btGjkPairDetector__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver) -> new_btGjkPairDetector__SWIG_0
    long new_btGjkPairDetector__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,int,int,float,float,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver) -> new_btGjkPairDetector__SWIG_1
    void delete_btGjkPairDetector(long) -> delete_btGjkPairDetector
    void btGjkPairDetector_getClosestPoints__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean) -> btGjkPairDetector_getClosestPoints__SWIG_0
    void btGjkPairDetector_getClosestPoints__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btGjkPairDetector_getClosestPoints__SWIG_1
    void btGjkPairDetector_getClosestPointsNonVirtual(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,long,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btGjkPairDetector_getClosestPointsNonVirtual
    void btGjkPairDetector_setMinkowskiA(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape) -> btGjkPairDetector_setMinkowskiA
    void btGjkPairDetector_setMinkowskiB(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape) -> btGjkPairDetector_setMinkowskiB
    void btGjkPairDetector_setCachedSeperatingAxis(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,com.badlogic.gdx.math.Vector3) -> btGjkPairDetector_setCachedSeperatingAxis
    com.badlogic.gdx.math.Vector3 btGjkPairDetector_getCachedSeparatingAxis(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector) -> btGjkPairDetector_getCachedSeparatingAxis
    float btGjkPairDetector_getCachedSeparatingDistance(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector) -> btGjkPairDetector_getCachedSeparatingDistance
    void btGjkPairDetector_setPenetrationDepthSolver(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver) -> btGjkPairDetector_setPenetrationDepthSolver
    void btGjkPairDetector_setIgnoreMargin(long,com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector,boolean) -> btGjkPairDetector_setIgnoreMargin
    void delete_btConvexPenetrationDepthSolver(long) -> delete_btConvexPenetrationDepthSolver
    boolean btConvexPenetrationDepthSolver_calcPenDepth(long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btConvexPenetrationDepthSolver_calcPenDepth
    long new_btMinkowskiPenetrationDepthSolver() -> new_btMinkowskiPenetrationDepthSolver
    void delete_btMinkowskiPenetrationDepthSolver(long) -> delete_btMinkowskiPenetrationDepthSolver
    long new_btGjkConvexCast(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> new_btGjkConvexCast
    void delete_btGjkConvexCast(long) -> delete_btGjkConvexCast
    void btConstraintRow_normal_set(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow,float[]) -> btConstraintRow_normal_set
    float[] btConstraintRow_normal_get(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow) -> btConstraintRow_normal_get
    void btConstraintRow_rhs_set(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow,float) -> btConstraintRow_rhs_set
    float btConstraintRow_rhs_get(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow) -> btConstraintRow_rhs_get
    void btConstraintRow_jacDiagInv_set(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow,float) -> btConstraintRow_jacDiagInv_set
    float btConstraintRow_jacDiagInv_get(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow) -> btConstraintRow_jacDiagInv_get
    void btConstraintRow_lowerLimit_set(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow,float) -> btConstraintRow_lowerLimit_set
    float btConstraintRow_lowerLimit_get(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow) -> btConstraintRow_lowerLimit_get
    void btConstraintRow_upperLimit_set(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow,float) -> btConstraintRow_upperLimit_set
    float btConstraintRow_upperLimit_get(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow) -> btConstraintRow_upperLimit_get
    void btConstraintRow_accumImpulse_set(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow,float) -> btConstraintRow_accumImpulse_set
    float btConstraintRow_accumImpulse_get(long,com.badlogic.gdx.physics.bullet.collision.btConstraintRow) -> btConstraintRow_accumImpulse_get
    long new_btConstraintRow() -> new_btConstraintRow
    void delete_btConstraintRow(long) -> delete_btConstraintRow
    long new_btManifoldPoint__SWIG_0() -> new_btManifoldPoint__SWIG_0
    long new_btManifoldPoint__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> new_btManifoldPoint__SWIG_1
    void btManifoldPoint_localPointA_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btManifoldPoint_localPointA_set
    long btManifoldPoint_localPointA_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_localPointA_get
    void btManifoldPoint_localPointB_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btManifoldPoint_localPointB_set
    long btManifoldPoint_localPointB_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_localPointB_get
    void btManifoldPoint_positionWorldOnB_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btManifoldPoint_positionWorldOnB_set
    long btManifoldPoint_positionWorldOnB_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_positionWorldOnB_get
    void btManifoldPoint_positionWorldOnA_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btManifoldPoint_positionWorldOnA_set
    long btManifoldPoint_positionWorldOnA_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_positionWorldOnA_get
    void btManifoldPoint_normalWorldOnB_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btManifoldPoint_normalWorldOnB_set
    long btManifoldPoint_normalWorldOnB_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_normalWorldOnB_get
    void btManifoldPoint_distance1_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float) -> btManifoldPoint_distance1_set
    float btManifoldPoint_distance1_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_distance1_get
    void btManifoldPoint_combinedFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float) -> btManifoldPoint_combinedFriction_set
    float btManifoldPoint_combinedFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_combinedFriction_get
    void btManifoldPoint_combinedRollingFriction_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float) -> btManifoldPoint_combinedRollingFriction_set
    float btManifoldPoint_combinedRollingFriction_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_combinedRollingFriction_get
    void btManifoldPoint_combinedRestitution_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float) -> btManifoldPoint_combinedRestitution_set
    float btManifoldPoint_combinedRestitution_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_combinedRestitution_get
    void btManifoldPoint_partId0_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int) -> btManifoldPoint_partId0_set
    int btManifoldPoint_partId0_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_partId0_get
    void btManifoldPoint_partId1_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int) -> btManifoldPoint_partId1_set
    int btManifoldPoint_partId1_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_partId1_get
    void btManifoldPoint_index0_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int) -> btManifoldPoint_index0_set
    int btManifoldPoint_index0_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_index0_get
    void btManifoldPoint_index1_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int) -> btManifoldPoint_index1_set
    int btManifoldPoint_index1_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_index1_get
    void btManifoldPoint_userPersistentData_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long) -> btManifoldPoint_userPersistentData_set
    long btManifoldPoint_userPersistentData_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_userPersistentData_get
    void btManifoldPoint_lateralFrictionInitialized_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,boolean) -> btManifoldPoint_lateralFrictionInitialized_set
    boolean btManifoldPoint_lateralFrictionInitialized_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_lateralFrictionInitialized_get
    void btManifoldPoint_appliedImpulse_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float) -> btManifoldPoint_appliedImpulse_set
    float btManifoldPoint_appliedImpulse_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_appliedImpulse_get
    void btManifoldPoint_appliedImpulseLateral1_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float) -> btManifoldPoint_appliedImpulseLateral1_set
    float btManifoldPoint_appliedImpulseLateral1_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_appliedImpulseLateral1_get
    void btManifoldPoint_appliedImpulseLateral2_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float) -> btManifoldPoint_appliedImpulseLateral2_set
    float btManifoldPoint_appliedImpulseLateral2_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_appliedImpulseLateral2_get
    void btManifoldPoint_contactMotion1_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float) -> btManifoldPoint_contactMotion1_set
    float btManifoldPoint_contactMotion1_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_contactMotion1_get
    void btManifoldPoint_contactMotion2_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float) -> btManifoldPoint_contactMotion2_set
    float btManifoldPoint_contactMotion2_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_contactMotion2_get
    void btManifoldPoint_contactCFM1_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float) -> btManifoldPoint_contactCFM1_set
    float btManifoldPoint_contactCFM1_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_contactCFM1_get
    void btManifoldPoint_contactCFM2_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float) -> btManifoldPoint_contactCFM2_set
    float btManifoldPoint_contactCFM2_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_contactCFM2_get
    void btManifoldPoint_lifeTime_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int) -> btManifoldPoint_lifeTime_set
    int btManifoldPoint_lifeTime_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_lifeTime_get
    void btManifoldPoint_lateralFrictionDir1_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btManifoldPoint_lateralFrictionDir1_set
    long btManifoldPoint_lateralFrictionDir1_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_lateralFrictionDir1_get
    void btManifoldPoint_lateralFrictionDir2_set(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btManifoldPoint_lateralFrictionDir2_set
    long btManifoldPoint_lateralFrictionDir2_get(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_lateralFrictionDir2_get
    float btManifoldPoint_getDistance(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_getDistance
    void btManifoldPoint_setDistance(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,float) -> btManifoldPoint_setDistance
    int btManifoldPoint_getUserValue(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> btManifoldPoint_getUserValue
    void btManifoldPoint_setUserValue(long,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int) -> btManifoldPoint_setUserValue
    void delete_btManifoldPoint(long) -> delete_btManifoldPoint
    long new_btContinuousConvexCollision__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver) -> new_btContinuousConvexCollision__SWIG_0
    long new_btContinuousConvexCollision__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,long,com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape) -> new_btContinuousConvexCollision__SWIG_1
    void delete_btContinuousConvexCollision(long) -> delete_btContinuousConvexCollision
    void btTriangleRaycastCallback_from_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTriangleRaycastCallback_from_set
    long btTriangleRaycastCallback_from_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback) -> btTriangleRaycastCallback_from_get
    void btTriangleRaycastCallback_to_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTriangleRaycastCallback_to_set
    long btTriangleRaycastCallback_to_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback) -> btTriangleRaycastCallback_to_get
    void btTriangleRaycastCallback_flags_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long) -> btTriangleRaycastCallback_flags_set
    long btTriangleRaycastCallback_flags_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback) -> btTriangleRaycastCallback_flags_get
    void btTriangleRaycastCallback_hitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,float) -> btTriangleRaycastCallback_hitFraction_set
    float btTriangleRaycastCallback_hitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback) -> btTriangleRaycastCallback_hitFraction_get
    long new_btTriangleRaycastCallback__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long) -> new_btTriangleRaycastCallback__SWIG_0
    long new_btTriangleRaycastCallback__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_btTriangleRaycastCallback__SWIG_1
    void btTriangleRaycastCallback_processTriangle(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int) -> btTriangleRaycastCallback_processTriangle
    void btTriangleRaycastCallback_processTriangleSwigExplicitbtTriangleRaycastCallback(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int) -> btTriangleRaycastCallback_processTriangleSwigExplicitbtTriangleRaycastCallback
    float btTriangleRaycastCallback_reportHit(long,com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,com.badlogic.gdx.math.Vector3,float,int,int) -> btTriangleRaycastCallback_reportHit
    void delete_btTriangleRaycastCallback(long) -> delete_btTriangleRaycastCallback
    void btTriangleRaycastCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long,boolean,boolean) -> btTriangleRaycastCallback_director_connect
    void btTriangleRaycastCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long,boolean) -> btTriangleRaycastCallback_change_ownership
    void btTriangleConvexcastCallback_convexShape_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape) -> btTriangleConvexcastCallback_convexShape_set
    long btTriangleConvexcastCallback_convexShape_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback) -> btTriangleConvexcastCallback_convexShape_get
    void btTriangleConvexcastCallback_convexShapeFrom_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btTriangleConvexcastCallback_convexShapeFrom_set
    long btTriangleConvexcastCallback_convexShapeFrom_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback) -> btTriangleConvexcastCallback_convexShapeFrom_get
    void btTriangleConvexcastCallback_convexShapeTo_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btTriangleConvexcastCallback_convexShapeTo_set
    long btTriangleConvexcastCallback_convexShapeTo_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback) -> btTriangleConvexcastCallback_convexShapeTo_get
    void btTriangleConvexcastCallback_triangleToWorld_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btTriangleConvexcastCallback_triangleToWorld_set
    long btTriangleConvexcastCallback_triangleToWorld_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback) -> btTriangleConvexcastCallback_triangleToWorld_get
    void btTriangleConvexcastCallback_hitFraction_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,float) -> btTriangleConvexcastCallback_hitFraction_set
    float btTriangleConvexcastCallback_hitFraction_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback) -> btTriangleConvexcastCallback_hitFraction_get
    void btTriangleConvexcastCallback_triangleCollisionMargin_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,float) -> btTriangleConvexcastCallback_triangleCollisionMargin_set
    float btTriangleConvexcastCallback_triangleCollisionMargin_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback) -> btTriangleConvexcastCallback_triangleCollisionMargin_get
    void btTriangleConvexcastCallback_allowedPenetration_set(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,float) -> btTriangleConvexcastCallback_allowedPenetration_set
    float btTriangleConvexcastCallback_allowedPenetration_get(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback) -> btTriangleConvexcastCallback_allowedPenetration_get
    long new_btTriangleConvexcastCallback(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,float) -> new_btTriangleConvexcastCallback
    void btTriangleConvexcastCallback_processTriangle(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int) -> btTriangleConvexcastCallback_processTriangle
    void btTriangleConvexcastCallback_processTriangleSwigExplicitbtTriangleConvexcastCallback(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int) -> btTriangleConvexcastCallback_processTriangleSwigExplicitbtTriangleConvexcastCallback
    float btTriangleConvexcastCallback_reportHit(long,com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,int,int) -> btTriangleConvexcastCallback_reportHit
    void delete_btTriangleConvexcastCallback(long) -> delete_btTriangleConvexcastCallback
    void btTriangleConvexcastCallback_director_connect(com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,boolean,boolean) -> btTriangleConvexcastCallback_director_connect
    void btTriangleConvexcastCallback_change_ownership(com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,boolean) -> btTriangleConvexcastCallback_change_ownership
    void btGjkEpaSolver2_sResults_status_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,int) -> btGjkEpaSolver2_sResults_status_set
    int btGjkEpaSolver2_sResults_status_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults) -> btGjkEpaSolver2_sResults_status_get
    void btGjkEpaSolver2_sResults_witnesses_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btGjkEpaSolver2_sResults_witnesses_set
    long btGjkEpaSolver2_sResults_witnesses_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults) -> btGjkEpaSolver2_sResults_witnesses_get
    void btGjkEpaSolver2_sResults_normal_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btGjkEpaSolver2_sResults_normal_set
    long btGjkEpaSolver2_sResults_normal_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults) -> btGjkEpaSolver2_sResults_normal_get
    void btGjkEpaSolver2_sResults_distance_set(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,float) -> btGjkEpaSolver2_sResults_distance_set
    float btGjkEpaSolver2_sResults_distance_get(long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults) -> btGjkEpaSolver2_sResults_distance_get
    long new_btGjkEpaSolver2_sResults() -> new_btGjkEpaSolver2_sResults
    void delete_btGjkEpaSolver2_sResults(long) -> delete_btGjkEpaSolver2_sResults
    int btGjkEpaSolver2_StackSizeRequirement() -> btGjkEpaSolver2_StackSizeRequirement
    boolean btGjkEpaSolver2_Distance(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults) -> btGjkEpaSolver2_Distance
    boolean btGjkEpaSolver2_Penetration__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,boolean) -> btGjkEpaSolver2_Penetration__SWIG_0
    boolean btGjkEpaSolver2_Penetration__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults) -> btGjkEpaSolver2_Penetration__SWIG_1
    float btGjkEpaSolver2_SignedDistance__SWIG_0(com.badlogic.gdx.math.Vector3,float,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults) -> btGjkEpaSolver2_SignedDistance__SWIG_0
    boolean btGjkEpaSolver2_SignedDistance__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults) -> btGjkEpaSolver2_SignedDistance__SWIG_1
    long new_btGjkEpaSolver2() -> new_btGjkEpaSolver2
    void delete_btGjkEpaSolver2(long) -> delete_btGjkEpaSolver2
    long new_btGjkEpaPenetrationDepthSolver() -> new_btGjkEpaPenetrationDepthSolver
    void delete_btGjkEpaPenetrationDepthSolver(long) -> delete_btGjkEpaPenetrationDepthSolver
    void btPointCollector_normalOnBInWorld_set(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btPointCollector_normalOnBInWorld_set
    long btPointCollector_normalOnBInWorld_get(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector) -> btPointCollector_normalOnBInWorld_get
    void btPointCollector_pointInWorld_set(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btPointCollector_pointInWorld_set
    long btPointCollector_pointInWorld_get(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector) -> btPointCollector_pointInWorld_get
    void btPointCollector_distance_set(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector,float) -> btPointCollector_distance_set
    float btPointCollector_distance_get(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector) -> btPointCollector_distance_get
    void btPointCollector_hasResult_set(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector,boolean) -> btPointCollector_hasResult_set
    boolean btPointCollector_hasResult_get(long,com.badlogic.gdx.physics.bullet.collision.btPointCollector) -> btPointCollector_hasResult_get
    long new_btPointCollector() -> new_btPointCollector
    void delete_btPointCollector(long) -> delete_btPointCollector
    long new_btUsageBitfield() -> new_btUsageBitfield
    void btUsageBitfield_reset(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield) -> btUsageBitfield_reset
    void btUsageBitfield_usedVertexA_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int) -> btUsageBitfield_usedVertexA_set
    int btUsageBitfield_usedVertexA_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield) -> btUsageBitfield_usedVertexA_get
    void btUsageBitfield_usedVertexB_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int) -> btUsageBitfield_usedVertexB_set
    int btUsageBitfield_usedVertexB_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield) -> btUsageBitfield_usedVertexB_get
    void btUsageBitfield_usedVertexC_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int) -> btUsageBitfield_usedVertexC_set
    int btUsageBitfield_usedVertexC_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield) -> btUsageBitfield_usedVertexC_get
    void btUsageBitfield_usedVertexD_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int) -> btUsageBitfield_usedVertexD_set
    int btUsageBitfield_usedVertexD_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield) -> btUsageBitfield_usedVertexD_get
    void btUsageBitfield_unused1_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int) -> btUsageBitfield_unused1_set
    int btUsageBitfield_unused1_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield) -> btUsageBitfield_unused1_get
    void btUsageBitfield_unused2_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int) -> btUsageBitfield_unused2_set
    int btUsageBitfield_unused2_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield) -> btUsageBitfield_unused2_get
    void btUsageBitfield_unused3_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int) -> btUsageBitfield_unused3_set
    int btUsageBitfield_unused3_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield) -> btUsageBitfield_unused3_get
    void btUsageBitfield_unused4_set(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield,int) -> btUsageBitfield_unused4_set
    int btUsageBitfield_unused4_get(long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield) -> btUsageBitfield_unused4_get
    void delete_btUsageBitfield(long) -> delete_btUsageBitfield
    void btSubSimplexClosestResult_closestPointOnSimplex_set(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSubSimplexClosestResult_closestPointOnSimplex_set
    long btSubSimplexClosestResult_closestPointOnSimplex_get(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult) -> btSubSimplexClosestResult_closestPointOnSimplex_get
    void btSubSimplexClosestResult_usedVertices_set(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield) -> btSubSimplexClosestResult_usedVertices_set
    long btSubSimplexClosestResult_usedVertices_get(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult) -> btSubSimplexClosestResult_usedVertices_get
    void btSubSimplexClosestResult_barycentricCoords_set(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,float[]) -> btSubSimplexClosestResult_barycentricCoords_set
    float[] btSubSimplexClosestResult_barycentricCoords_get(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult) -> btSubSimplexClosestResult_barycentricCoords_get
    void btSubSimplexClosestResult_degenerate_set(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,boolean) -> btSubSimplexClosestResult_degenerate_set
    boolean btSubSimplexClosestResult_degenerate_get(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult) -> btSubSimplexClosestResult_degenerate_get
    void btSubSimplexClosestResult_reset(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult) -> btSubSimplexClosestResult_reset
    boolean btSubSimplexClosestResult_isValid(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult) -> btSubSimplexClosestResult_isValid
    void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,float,float,float,float) -> btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_0
    void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,float,float,float) -> btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_1
    void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,float,float) -> btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_2
    void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult,float) -> btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_3
    void btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult) -> btSubSimplexClosestResult_setBarycentricCoordinates__SWIG_4
    long new_btSubSimplexClosestResult() -> new_btSubSimplexClosestResult
    void delete_btSubSimplexClosestResult(long) -> delete_btSubSimplexClosestResult
    void btVoronoiSimplexSolver_numVertices_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,int) -> btVoronoiSimplexSolver_numVertices_set
    int btVoronoiSimplexSolver_numVertices_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_numVertices_get
    void btVoronoiSimplexSolver_simplexVectorW_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVoronoiSimplexSolver_simplexVectorW_set
    long btVoronoiSimplexSolver_simplexVectorW_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_simplexVectorW_get
    void btVoronoiSimplexSolver_simplexPointsP_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVoronoiSimplexSolver_simplexPointsP_set
    long btVoronoiSimplexSolver_simplexPointsP_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_simplexPointsP_get
    void btVoronoiSimplexSolver_simplexPointsQ_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVoronoiSimplexSolver_simplexPointsQ_set
    long btVoronoiSimplexSolver_simplexPointsQ_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_simplexPointsQ_get
    void btVoronoiSimplexSolver_cachedP1_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVoronoiSimplexSolver_cachedP1_set
    long btVoronoiSimplexSolver_cachedP1_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_cachedP1_get
    void btVoronoiSimplexSolver_cachedP2_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVoronoiSimplexSolver_cachedP2_set
    long btVoronoiSimplexSolver_cachedP2_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_cachedP2_get
    void btVoronoiSimplexSolver_cachedV_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVoronoiSimplexSolver_cachedV_set
    long btVoronoiSimplexSolver_cachedV_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_cachedV_get
    void btVoronoiSimplexSolver_lastW_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVoronoiSimplexSolver_lastW_set
    long btVoronoiSimplexSolver_lastW_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_lastW_get
    void btVoronoiSimplexSolver_equalVertexThreshold_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,float) -> btVoronoiSimplexSolver_equalVertexThreshold_set
    float btVoronoiSimplexSolver_equalVertexThreshold_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_equalVertexThreshold_get
    void btVoronoiSimplexSolver_cachedValidClosest_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,boolean) -> btVoronoiSimplexSolver_cachedValidClosest_set
    boolean btVoronoiSimplexSolver_cachedValidClosest_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_cachedValidClosest_get
    void btVoronoiSimplexSolver_cachedBC_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult) -> btVoronoiSimplexSolver_cachedBC_set
    long btVoronoiSimplexSolver_cachedBC_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_cachedBC_get
    void btVoronoiSimplexSolver_needsUpdate_set(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,boolean) -> btVoronoiSimplexSolver_needsUpdate_set
    boolean btVoronoiSimplexSolver_needsUpdate_get(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_needsUpdate_get
    void btVoronoiSimplexSolver_removeVertex(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,int) -> btVoronoiSimplexSolver_removeVertex
    void btVoronoiSimplexSolver_reduceVertices(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.collision.btUsageBitfield) -> btVoronoiSimplexSolver_reduceVertices
    boolean btVoronoiSimplexSolver_updateClosestVectorAndPoints(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_updateClosestVectorAndPoints
    boolean btVoronoiSimplexSolver_closestPtPointTetrahedron(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult) -> btVoronoiSimplexSolver_closestPtPointTetrahedron
    int btVoronoiSimplexSolver_pointOutsideOfPlane(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btVoronoiSimplexSolver_pointOutsideOfPlane
    boolean btVoronoiSimplexSolver_closestPtPointTriangle(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult) -> btVoronoiSimplexSolver_closestPtPointTriangle
    long new_btVoronoiSimplexSolver() -> new_btVoronoiSimplexSolver
    void btVoronoiSimplexSolver_reset(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_reset
    void btVoronoiSimplexSolver_addVertex(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btVoronoiSimplexSolver_addVertex
    boolean btVoronoiSimplexSolver_closest(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3) -> btVoronoiSimplexSolver_closest
    float btVoronoiSimplexSolver_maxVertex(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_maxVertex
    boolean btVoronoiSimplexSolver_fullSimplex(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_fullSimplex
    int btVoronoiSimplexSolver_getSimplex(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVoronoiSimplexSolver_getSimplex
    boolean btVoronoiSimplexSolver_inSimplex(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3) -> btVoronoiSimplexSolver_inSimplex
    void btVoronoiSimplexSolver_backup_closest(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3) -> btVoronoiSimplexSolver_backup_closest
    boolean btVoronoiSimplexSolver_emptySimplex(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> btVoronoiSimplexSolver_emptySimplex
    void btVoronoiSimplexSolver_compute_points(long,com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btVoronoiSimplexSolver_compute_points
    void delete_btVoronoiSimplexSolver(long) -> delete_btVoronoiSimplexSolver
    long new_btMultiSphereShape(com.badlogic.gdx.math.Vector3[],float[],int) -> new_btMultiSphereShape
    int btMultiSphereShape_getSphereCount(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape) -> btMultiSphereShape_getSphereCount
    com.badlogic.gdx.math.Vector3 btMultiSphereShape_getSpherePosition(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape,int) -> btMultiSphereShape_getSpherePosition
    float btMultiSphereShape_getSphereRadius(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape,int) -> btMultiSphereShape_getSphereRadius
    void delete_btMultiSphereShape(long) -> delete_btMultiSphereShape
    void btPositionAndRadius_pos_set(long,com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btPositionAndRadius_pos_set
    long btPositionAndRadius_pos_get(long,com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius) -> btPositionAndRadius_pos_get
    void btPositionAndRadius_radius_set(long,com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius,float) -> btPositionAndRadius_radius_set
    float btPositionAndRadius_radius_get(long,com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius) -> btPositionAndRadius_radius_get
    long new_btPositionAndRadius() -> new_btPositionAndRadius
    void delete_btPositionAndRadius(long) -> delete_btPositionAndRadius
    void btMultiSphereShapeData_convexInternalShapeData_set(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData,long,com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> btMultiSphereShapeData_convexInternalShapeData_set
    long btMultiSphereShapeData_convexInternalShapeData_get(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData) -> btMultiSphereShapeData_convexInternalShapeData_get
    void btMultiSphereShapeData_localPositionArrayPtr_set(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData,long,com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius) -> btMultiSphereShapeData_localPositionArrayPtr_set
    long btMultiSphereShapeData_localPositionArrayPtr_get(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData) -> btMultiSphereShapeData_localPositionArrayPtr_get
    void btMultiSphereShapeData_localPositionArraySize_set(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData,int) -> btMultiSphereShapeData_localPositionArraySize_set
    int btMultiSphereShapeData_localPositionArraySize_get(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData) -> btMultiSphereShapeData_localPositionArraySize_get
    void btMultiSphereShapeData_padding_set(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData,java.lang.String) -> btMultiSphereShapeData_padding_set
    java.lang.String btMultiSphereShapeData_padding_get(long,com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData) -> btMultiSphereShapeData_padding_get
    long new_btMultiSphereShapeData() -> new_btMultiSphereShapeData
    void delete_btMultiSphereShapeData(long) -> delete_btMultiSphereShapeData
    long new_CustomCollisionDispatcher(long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration) -> new_CustomCollisionDispatcher
    boolean CustomCollisionDispatcher_needsCollision(long,com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> CustomCollisionDispatcher_needsCollision
    boolean CustomCollisionDispatcher_needsCollisionSwigExplicitCustomCollisionDispatcher(long,com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> CustomCollisionDispatcher_needsCollisionSwigExplicitCustomCollisionDispatcher
    boolean CustomCollisionDispatcher_needsResponse(long,com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> CustomCollisionDispatcher_needsResponse
    boolean CustomCollisionDispatcher_needsResponseSwigExplicitCustomCollisionDispatcher(long,com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> CustomCollisionDispatcher_needsResponseSwigExplicitCustomCollisionDispatcher
    void delete_CustomCollisionDispatcher(long) -> delete_CustomCollisionDispatcher
    void CustomCollisionDispatcher_director_connect(com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,boolean,boolean) -> CustomCollisionDispatcher_director_connect
    void CustomCollisionDispatcher_change_ownership(com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,boolean) -> CustomCollisionDispatcher_change_ownership
    long new_ContactListener(boolean) -> new_ContactListener
    void delete_ContactListener(long) -> delete_ContactListener
    void ContactListener_enable(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_enable
    void ContactListener_disable(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_disable
    void ContactListener_enableOnAdded(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_enableOnAdded
    void ContactListener_disableOnAdded(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_disableOnAdded
    boolean ContactListener_isOnAddedEnabled(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_isOnAddedEnabled
    boolean ContactListener_onContactAdded__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int) -> ContactListener_onContactAdded__SWIG_0
    boolean ContactListener_onContactAdded__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int) -> ContactListener_onContactAdded__SWIG_1
    boolean ContactListener_onContactAdded__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int,int,int,int,int) -> ContactListener_onContactAdded__SWIG_2
    boolean ContactListener_onContactAdded__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean) -> ContactListener_onContactAdded__SWIG_3
    boolean ContactListener_onContactAdded__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean) -> ContactListener_onContactAdded__SWIG_4
    boolean ContactListener_onContactAdded__SWIG_5(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int,int,boolean,int,int,int,boolean) -> ContactListener_onContactAdded__SWIG_5
    boolean ContactListener_onContactAdded__SWIG_6(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int) -> ContactListener_onContactAdded__SWIG_6
    boolean ContactListener_onContactAdded__SWIG_7(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int) -> ContactListener_onContactAdded__SWIG_7
    boolean ContactListener_onContactAdded__SWIG_8(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int,int,int,int,int) -> ContactListener_onContactAdded__SWIG_8
    boolean ContactListener_onContactAdded__SWIG_9(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean) -> ContactListener_onContactAdded__SWIG_9
    boolean ContactListener_onContactAdded__SWIG_10(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean) -> ContactListener_onContactAdded__SWIG_10
    boolean ContactListener_onContactAdded__SWIG_11(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int,int,boolean,int,int,int,boolean) -> ContactListener_onContactAdded__SWIG_11
    void ContactListener_enableOnProcessed(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_enableOnProcessed
    void ContactListener_disableOnProcessed(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_disableOnProcessed
    boolean ContactListener_isOnProcessedEnabled(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_isOnProcessedEnabled
    void ContactListener_onContactProcessed__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> ContactListener_onContactProcessed__SWIG_0
    void ContactListener_onContactProcessed__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int) -> ContactListener_onContactProcessed__SWIG_1
    void ContactListener_onContactProcessed__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean) -> ContactListener_onContactProcessed__SWIG_2
    void ContactListener_onContactProcessed__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,boolean,int,boolean) -> ContactListener_onContactProcessed__SWIG_3
    void ContactListener_onContactProcessed__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> ContactListener_onContactProcessed__SWIG_4
    void ContactListener_onContactProcessed__SWIG_5(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int) -> ContactListener_onContactProcessed__SWIG_5
    void ContactListener_onContactProcessed__SWIG_6(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean) -> ContactListener_onContactProcessed__SWIG_6
    void ContactListener_onContactProcessed__SWIG_7(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,boolean,int,boolean) -> ContactListener_onContactProcessed__SWIG_7
    void ContactListener_enableOnDestroyed(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_enableOnDestroyed
    void ContactListener_disableOnDestroyed(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_disableOnDestroyed
    boolean ContactListener_isOnDestroyedEnabled(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_isOnDestroyedEnabled
    void ContactListener_onContactDestroyed(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int) -> ContactListener_onContactDestroyed
    void ContactListener_enableOnStarted(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_enableOnStarted
    void ContactListener_disableOnStarted(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_disableOnStarted
    boolean ContactListener_isOnStartedEnabled(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_isOnStartedEnabled
    void ContactListener_onContactStarted__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> ContactListener_onContactStarted__SWIG_0
    void ContactListener_onContactStarted__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> ContactListener_onContactStarted__SWIG_1
    void ContactListener_onContactStarted__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int) -> ContactListener_onContactStarted__SWIG_2
    void ContactListener_onContactStarted__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,boolean,boolean) -> ContactListener_onContactStarted__SWIG_3
    void ContactListener_onContactStarted__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean) -> ContactListener_onContactStarted__SWIG_4
    void ContactListener_onContactStarted__SWIG_5(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,boolean,int,boolean) -> ContactListener_onContactStarted__SWIG_5
    void ContactListener_enableOnEnded(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_enableOnEnded
    void ContactListener_disableOnEnded(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_disableOnEnded
    boolean ContactListener_isOnEndedEnabled(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_isOnEndedEnabled
    void ContactListener_onContactEnded__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> ContactListener_onContactEnded__SWIG_0
    void ContactListener_onContactEnded__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> ContactListener_onContactEnded__SWIG_1
    void ContactListener_onContactEnded__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int) -> ContactListener_onContactEnded__SWIG_2
    void ContactListener_onContactEnded__SWIG_3(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,boolean,boolean) -> ContactListener_onContactEnded__SWIG_3
    void ContactListener_onContactEnded__SWIG_4(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean) -> ContactListener_onContactEnded__SWIG_4
    void ContactListener_onContactEnded__SWIG_5(long,com.badlogic.gdx.physics.bullet.collision.ContactListener,int,boolean,int,boolean) -> ContactListener_onContactEnded__SWIG_5
    boolean ContactListener_setEvents(long,com.badlogic.gdx.physics.bullet.collision.ContactListener) -> ContactListener_setEvents
    void ContactListener_director_connect(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,boolean,boolean) -> ContactListener_director_connect
    void ContactListener_change_ownership(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,boolean) -> ContactListener_change_ownership
    void ContactCache_cacheTime_set(long,com.badlogic.gdx.physics.bullet.collision.ContactCache,float) -> ContactCache_cacheTime_set
    float ContactCache_cacheTime_get(long,com.badlogic.gdx.physics.bullet.collision.ContactCache) -> ContactCache_cacheTime_get
    long new_ContactCache(boolean) -> new_ContactCache
    void delete_ContactCache(long) -> delete_ContactCache
    void ContactCache_enable(long,com.badlogic.gdx.physics.bullet.collision.ContactCache) -> ContactCache_enable
    void ContactCache_disable(long,com.badlogic.gdx.physics.bullet.collision.ContactCache) -> ContactCache_disable
    boolean ContactCache_isEnabled(long,com.badlogic.gdx.physics.bullet.collision.ContactCache) -> ContactCache_isEnabled
    void ContactCache_onContactStarted(long,com.badlogic.gdx.physics.bullet.collision.ContactCache,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,boolean,boolean) -> ContactCache_onContactStarted
    void ContactCache_onContactEnded(long,com.badlogic.gdx.physics.bullet.collision.ContactCache,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean) -> ContactCache_onContactEnded
    void ContactCache_clear(long,com.badlogic.gdx.physics.bullet.collision.ContactCache) -> ContactCache_clear
    void ContactCache_update(long,com.badlogic.gdx.physics.bullet.collision.ContactCache,float) -> ContactCache_update
    void ContactCache_director_connect(com.badlogic.gdx.physics.bullet.collision.ContactCache,long,boolean,boolean) -> ContactCache_director_connect
    void ContactCache_change_ownership(com.badlogic.gdx.physics.bullet.collision.ContactCache,long,boolean) -> ContactCache_change_ownership
    int btBroadphasePairArray_size(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray) -> btBroadphasePairArray_size
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePair btBroadphasePairArray_at(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray,int) -> btBroadphasePairArray_at
    int btBroadphasePairArray_getCollisionObjects(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray,int[],int,int) -> btBroadphasePairArray_getCollisionObjects
    int btBroadphasePairArray_getCollisionObjectsValue(long,com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray,int[],int,int) -> btBroadphasePairArray_getCollisionObjectsValue
    long new_btBroadphasePairArray() -> new_btBroadphasePairArray
    void delete_btBroadphasePairArray(long) -> delete_btBroadphasePairArray
    long btStorageResult_SWIGUpcast(long) -> btStorageResult_SWIGUpcast
    long btBroadphaseRayCallback_SWIGUpcast(long) -> btBroadphaseRayCallback_SWIGUpcast
    long btDbvtProxy_SWIGUpcast(long) -> btDbvtProxy_SWIGUpcast
    long btDbvtBroadphase_SWIGUpcast(long) -> btDbvtBroadphase_SWIGUpcast
    long btSimpleBroadphaseProxy_SWIGUpcast(long) -> btSimpleBroadphaseProxy_SWIGUpcast
    long btSimpleBroadphase_SWIGUpcast(long) -> btSimpleBroadphase_SWIGUpcast
    long btMultiSapBroadphase_btMultiSapProxy_SWIGUpcast(long) -> btMultiSapBroadphase_btMultiSapProxy_SWIGUpcast
    long btMultiSapBroadphase_SWIGUpcast(long) -> btMultiSapBroadphase_SWIGUpcast
    long btAxisSweep3InternalShort_Handle_SWIGUpcast(long) -> btAxisSweep3InternalShort_Handle_SWIGUpcast
    long btAxisSweep3InternalShort_SWIGUpcast(long) -> btAxisSweep3InternalShort_SWIGUpcast
    long btAxisSweep3InternalInt_Handle_SWIGUpcast(long) -> btAxisSweep3InternalInt_Handle_SWIGUpcast
    long btAxisSweep3InternalInt_SWIGUpcast(long) -> btAxisSweep3InternalInt_SWIGUpcast
    long btAxisSweep3_SWIGUpcast(long) -> btAxisSweep3_SWIGUpcast
    long bt32BitAxisSweep3_SWIGUpcast(long) -> bt32BitAxisSweep3_SWIGUpcast
    long btOverlappingPairCache_SWIGUpcast(long) -> btOverlappingPairCache_SWIGUpcast
    long btHashedOverlappingPairCache_SWIGUpcast(long) -> btHashedOverlappingPairCache_SWIGUpcast
    long btSortedOverlappingPairCache_SWIGUpcast(long) -> btSortedOverlappingPairCache_SWIGUpcast
    long btNullPairCache_SWIGUpcast(long) -> btNullPairCache_SWIGUpcast
    long btConvexShape_SWIGUpcast(long) -> btConvexShape_SWIGUpcast
    long btConvexInternalShape_SWIGUpcast(long) -> btConvexInternalShape_SWIGUpcast
    long btConvexInternalAabbCachingShape_SWIGUpcast(long) -> btConvexInternalAabbCachingShape_SWIGUpcast
    long btPolyhedralConvexShape_SWIGUpcast(long) -> btPolyhedralConvexShape_SWIGUpcast
    long btPolyhedralConvexAabbCachingShape_SWIGUpcast(long) -> btPolyhedralConvexAabbCachingShape_SWIGUpcast
    long btConcaveShape_SWIGUpcast(long) -> btConcaveShape_SWIGUpcast
    long btStaticPlaneShape_SWIGUpcast(long) -> btStaticPlaneShape_SWIGUpcast
    long btHeightfieldTerrainShape_SWIGUpcast(long) -> btHeightfieldTerrainShape_SWIGUpcast
    long btTriangleMeshShape_SWIGUpcast(long) -> btTriangleMeshShape_SWIGUpcast
    long btBvhTriangleMeshShape_SWIGUpcast(long) -> btBvhTriangleMeshShape_SWIGUpcast
    long btBoxShape_SWIGUpcast(long) -> btBoxShape_SWIGUpcast
    long btCapsuleShape_SWIGUpcast(long) -> btCapsuleShape_SWIGUpcast
    long btCapsuleShapeX_SWIGUpcast(long) -> btCapsuleShapeX_SWIGUpcast
    long btCapsuleShapeZ_SWIGUpcast(long) -> btCapsuleShapeZ_SWIGUpcast
    long btBox2dShape_SWIGUpcast(long) -> btBox2dShape_SWIGUpcast
    long btTriangleShape_SWIGUpcast(long) -> btTriangleShape_SWIGUpcast
    long btSphereShape_SWIGUpcast(long) -> btSphereShape_SWIGUpcast
    long btMinkowskiSumShape_SWIGUpcast(long) -> btMinkowskiSumShape_SWIGUpcast
    long btOptimizedBvh_SWIGUpcast(long) -> btOptimizedBvh_SWIGUpcast
    long btTriangleBuffer_SWIGUpcast(long) -> btTriangleBuffer_SWIGUpcast
    long btTriangleIndexVertexArray_SWIGUpcast(long) -> btTriangleIndexVertexArray_SWIGUpcast
    long btScaledBvhTriangleMeshShape_SWIGUpcast(long) -> btScaledBvhTriangleMeshShape_SWIGUpcast
    long btConvexHullShape_SWIGUpcast(long) -> btConvexHullShape_SWIGUpcast
    long btTriangleIndexVertexMaterialArray_SWIGUpcast(long) -> btTriangleIndexVertexMaterialArray_SWIGUpcast
    long btCylinderShape_SWIGUpcast(long) -> btCylinderShape_SWIGUpcast
    long btCylinderShapeX_SWIGUpcast(long) -> btCylinderShapeX_SWIGUpcast
    long btCylinderShapeZ_SWIGUpcast(long) -> btCylinderShapeZ_SWIGUpcast
    long btTriangleMesh_SWIGUpcast(long) -> btTriangleMesh_SWIGUpcast
    long btConeShape_SWIGUpcast(long) -> btConeShape_SWIGUpcast
    long btConeShapeX_SWIGUpcast(long) -> btConeShapeX_SWIGUpcast
    long btConeShapeZ_SWIGUpcast(long) -> btConeShapeZ_SWIGUpcast
    long btConvexTriangleMeshShape_SWIGUpcast(long) -> btConvexTriangleMeshShape_SWIGUpcast
    long btEmptyShape_SWIGUpcast(long) -> btEmptyShape_SWIGUpcast
    long btMultimaterialTriangleMeshShape_SWIGUpcast(long) -> btMultimaterialTriangleMeshShape_SWIGUpcast
    long btBU_Simplex1to4_SWIGUpcast(long) -> btBU_Simplex1to4_SWIGUpcast
    long btUniformScalingShape_SWIGUpcast(long) -> btUniformScalingShape_SWIGUpcast
    long btCompoundShape_SWIGUpcast(long) -> btCompoundShape_SWIGUpcast
    long btConvexPointCloudShape_SWIGUpcast(long) -> btConvexPointCloudShape_SWIGUpcast
    long btConvex2dShape_SWIGUpcast(long) -> btConvex2dShape_SWIGUpcast
    long btEmptyAlgorithm_SWIGUpcast(long) -> btEmptyAlgorithm_SWIGUpcast
    long btActivatingCollisionAlgorithm_SWIGUpcast(long) -> btActivatingCollisionAlgorithm_SWIGUpcast
    long btConvexTriangleCallback_SWIGUpcast(long) -> btConvexTriangleCallback_SWIGUpcast
    long btConvexConcaveCollisionAlgorithm_SWIGUpcast(long) -> btConvexConcaveCollisionAlgorithm_SWIGUpcast
    long btConvexPlaneCollisionAlgorithm_SWIGUpcast(long) -> btConvexPlaneCollisionAlgorithm_SWIGUpcast
    long btCompoundCompoundCollisionAlgorithm_SWIGUpcast(long) -> btCompoundCompoundCollisionAlgorithm_SWIGUpcast
    long btDefaultCollisionConfiguration_SWIGUpcast(long) -> btDefaultCollisionConfiguration_SWIGUpcast
    long btManifoldResult_SWIGUpcast(long) -> btManifoldResult_SWIGUpcast
    long btSphereSphereCollisionAlgorithm_SWIGUpcast(long) -> btSphereSphereCollisionAlgorithm_SWIGUpcast
    long btBoxBoxCollisionAlgorithm_SWIGUpcast(long) -> btBoxBoxCollisionAlgorithm_SWIGUpcast
    long btBox2dBox2dCollisionAlgorithm_CreateFunc_SWIGUpcast(long) -> btBox2dBox2dCollisionAlgorithm_CreateFunc_SWIGUpcast
    long btBox2dBox2dCollisionAlgorithm_SWIGUpcast(long) -> btBox2dBox2dCollisionAlgorithm_SWIGUpcast
    long btSphereTriangleCollisionAlgorithm_CreateFunc_SWIGUpcast(long) -> btSphereTriangleCollisionAlgorithm_CreateFunc_SWIGUpcast
    long btSphereTriangleCollisionAlgorithm_SWIGUpcast(long) -> btSphereTriangleCollisionAlgorithm_SWIGUpcast
    long btGhostObject_SWIGUpcast(long) -> btGhostObject_SWIGUpcast
    long btPairCachingGhostObject_SWIGUpcast(long) -> btPairCachingGhostObject_SWIGUpcast
    long btGhostPairCallback_SWIGUpcast(long) -> btGhostPairCallback_SWIGUpcast
    long ClosestRayResultCallback_SWIGUpcast(long) -> ClosestRayResultCallback_SWIGUpcast
    long AllHitsRayResultCallback_SWIGUpcast(long) -> AllHitsRayResultCallback_SWIGUpcast
    long ClosestConvexResultCallback_SWIGUpcast(long) -> ClosestConvexResultCallback_SWIGUpcast
    long ClosestNotMeConvexResultCallback_SWIGUpcast(long) -> ClosestNotMeConvexResultCallback_SWIGUpcast
    long ClosestNotMeRayResultCallback_SWIGUpcast(long) -> ClosestNotMeRayResultCallback_SWIGUpcast
    long btConvex2dConvex2dAlgorithm_CreateFunc_SWIGUpcast(long) -> btConvex2dConvex2dAlgorithm_CreateFunc_SWIGUpcast
    long btConvex2dConvex2dAlgorithm_SWIGUpcast(long) -> btConvex2dConvex2dAlgorithm_SWIGUpcast
    long btBoxBoxDetector_SWIGUpcast(long) -> btBoxBoxDetector_SWIGUpcast
    long btSphereBoxCollisionAlgorithm_CreateFunc_SWIGUpcast(long) -> btSphereBoxCollisionAlgorithm_CreateFunc_SWIGUpcast
    long btSphereBoxCollisionAlgorithm_SWIGUpcast(long) -> btSphereBoxCollisionAlgorithm_SWIGUpcast
    long btCollisionDispatcher_SWIGUpcast(long) -> btCollisionDispatcher_SWIGUpcast
    long btConvexConvexAlgorithm_CreateFunc_SWIGUpcast(long) -> btConvexConvexAlgorithm_CreateFunc_SWIGUpcast
    long btConvexConvexAlgorithm_SWIGUpcast(long) -> btConvexConvexAlgorithm_SWIGUpcast
    long SphereTriangleDetector_SWIGUpcast(long) -> SphereTriangleDetector_SWIGUpcast
    long btCompoundCollisionAlgorithm_CreateFunc_SWIGUpcast(long) -> btCompoundCollisionAlgorithm_CreateFunc_SWIGUpcast
    long btCompoundCollisionAlgorithm_SwappedCreateFunc_SWIGUpcast(long) -> btCompoundCollisionAlgorithm_SwappedCreateFunc_SWIGUpcast
    long btCompoundCollisionAlgorithm_SWIGUpcast(long) -> btCompoundCollisionAlgorithm_SWIGUpcast
    long btSubsimplexConvexCast_SWIGUpcast(long) -> btSubsimplexConvexCast_SWIGUpcast
    long btPersistentManifold_SWIGUpcast(long) -> btPersistentManifold_SWIGUpcast
    long btGjkPairDetector_SWIGUpcast(long) -> btGjkPairDetector_SWIGUpcast
    long btMinkowskiPenetrationDepthSolver_SWIGUpcast(long) -> btMinkowskiPenetrationDepthSolver_SWIGUpcast
    long btGjkConvexCast_SWIGUpcast(long) -> btGjkConvexCast_SWIGUpcast
    long btContinuousConvexCollision_SWIGUpcast(long) -> btContinuousConvexCollision_SWIGUpcast
    long btTriangleRaycastCallback_SWIGUpcast(long) -> btTriangleRaycastCallback_SWIGUpcast
    long btTriangleConvexcastCallback_SWIGUpcast(long) -> btTriangleConvexcastCallback_SWIGUpcast
    long btGjkEpaPenetrationDepthSolver_SWIGUpcast(long) -> btGjkEpaPenetrationDepthSolver_SWIGUpcast
    long btPointCollector_SWIGUpcast(long) -> btPointCollector_SWIGUpcast
    long btMultiSphereShape_SWIGUpcast(long) -> btMultiSphereShape_SWIGUpcast
    long CustomCollisionDispatcher_SWIGUpcast(long) -> CustomCollisionDispatcher_SWIGUpcast
    boolean SwigDirector_btBroadphaseAabbCallback_process(com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback,long) -> SwigDirector_btBroadphaseAabbCallback_process
    boolean SwigDirector_btBroadphaseRayCallback_process(com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,long) -> SwigDirector_btBroadphaseRayCallback_process
    void SwigDirector_btNodeOverlapCallback_processNode(com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,int,int) -> SwigDirector_btNodeOverlapCallback_processNode
    long SwigDirector_btOverlappingPairCallback_addOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,long) -> SwigDirector_btOverlappingPairCallback_addOverlappingPair
    long SwigDirector_btOverlappingPairCallback_removeOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,long,long) -> SwigDirector_btOverlappingPairCallback_removeOverlappingPair
    void SwigDirector_btOverlappingPairCallback_removeOverlappingPairsContainingProxy(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback,long,long) -> SwigDirector_btOverlappingPairCallback_removeOverlappingPairsContainingProxy
    boolean SwigDirector_btOverlapCallback_processOverlap(com.badlogic.gdx.physics.bullet.collision.btOverlapCallback,com.badlogic.gdx.physics.bullet.collision.btBroadphasePair) -> SwigDirector_btOverlapCallback_processOverlap
    boolean SwigDirector_btOverlapFilterCallback_needBroadphaseCollision(com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback,long,long) -> SwigDirector_btOverlapFilterCallback_needBroadphaseCollision
    void SwigDirector_btTriangleCallback_processTriangle(com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,long,int,int) -> SwigDirector_btTriangleCallback_processTriangle
    void SwigDirector_btInternalTriangleIndexCallback_internalProcessTriangleIndex(com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback,long,int,int) -> SwigDirector_btInternalTriangleIndexCallback_internalProcessTriangleIndex
    void SwigDirector_btConvexTriangleCallback_processTriangle(com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback,long,int,int) -> SwigDirector_btConvexTriangleCallback_processTriangle
    long SwigDirector_btGhostPairCallback_addOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,long) -> SwigDirector_btGhostPairCallback_addOverlappingPair
    long SwigDirector_btGhostPairCallback_removeOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,long,long) -> SwigDirector_btGhostPairCallback_removeOverlappingPair
    void SwigDirector_btGhostPairCallback_removeOverlappingPairsContainingProxy(com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback,long,long) -> SwigDirector_btGhostPairCallback_removeOverlappingPairsContainingProxy
    boolean SwigDirector_RayResultCallback_needsCollision(com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long) -> SwigDirector_RayResultCallback_needsCollision
    float SwigDirector_RayResultCallback_addSingleResult(com.badlogic.gdx.physics.bullet.collision.RayResultCallback,long,boolean) -> SwigDirector_RayResultCallback_addSingleResult
    boolean SwigDirector_ClosestRayResultCallback_needsCollision(com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long) -> SwigDirector_ClosestRayResultCallback_needsCollision
    float SwigDirector_ClosestRayResultCallback_addSingleResult(com.badlogic.gdx.physics.bullet.collision.ClosestRayResultCallback,long,boolean) -> SwigDirector_ClosestRayResultCallback_addSingleResult
    boolean SwigDirector_AllHitsRayResultCallback_needsCollision(com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long) -> SwigDirector_AllHitsRayResultCallback_needsCollision
    float SwigDirector_AllHitsRayResultCallback_addSingleResult(com.badlogic.gdx.physics.bullet.collision.AllHitsRayResultCallback,long,boolean) -> SwigDirector_AllHitsRayResultCallback_addSingleResult
    boolean SwigDirector_ConvexResultCallback_needsCollision(com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,long) -> SwigDirector_ConvexResultCallback_needsCollision
    float SwigDirector_ConvexResultCallback_addSingleResult(com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,long,boolean) -> SwigDirector_ConvexResultCallback_addSingleResult
    boolean SwigDirector_ClosestConvexResultCallback_needsCollision(com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long) -> SwigDirector_ClosestConvexResultCallback_needsCollision
    float SwigDirector_ClosestConvexResultCallback_addSingleResult(com.badlogic.gdx.physics.bullet.collision.ClosestConvexResultCallback,long,boolean) -> SwigDirector_ClosestConvexResultCallback_addSingleResult
    boolean SwigDirector_ContactResultCallback_needsCollision(com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,long) -> SwigDirector_ContactResultCallback_needsCollision
    float SwigDirector_ContactResultCallback_addSingleResult(com.badlogic.gdx.physics.bullet.collision.ContactResultCallback,long,long,int,int,long,int,int) -> SwigDirector_ContactResultCallback_addSingleResult
    void SwigDirector_btTriangleRaycastCallback_processTriangle(com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,long,int,int) -> SwigDirector_btTriangleRaycastCallback_processTriangle
    float SwigDirector_btTriangleRaycastCallback_reportHit(com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback,com.badlogic.gdx.math.Vector3,float,int,int) -> SwigDirector_btTriangleRaycastCallback_reportHit
    void SwigDirector_btTriangleConvexcastCallback_processTriangle(com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,long,int,int) -> SwigDirector_btTriangleConvexcastCallback_processTriangle
    float SwigDirector_btTriangleConvexcastCallback_reportHit(com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,int,int) -> SwigDirector_btTriangleConvexcastCallback_reportHit
    boolean SwigDirector_CustomCollisionDispatcher_needsCollision(com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,long) -> SwigDirector_CustomCollisionDispatcher_needsCollision
    boolean SwigDirector_CustomCollisionDispatcher_needsResponse(com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher,long,long) -> SwigDirector_CustomCollisionDispatcher_needsResponse
    boolean SwigDirector_ContactListener_onContactAdded__SWIG_0(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int) -> SwigDirector_ContactListener_onContactAdded__SWIG_0
    boolean SwigDirector_ContactListener_onContactAdded__SWIG_1(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,int,int,long,int,int) -> SwigDirector_ContactListener_onContactAdded__SWIG_1
    boolean SwigDirector_ContactListener_onContactAdded__SWIG_2(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int,int,int,int,int) -> SwigDirector_ContactListener_onContactAdded__SWIG_2
    boolean SwigDirector_ContactListener_onContactAdded__SWIG_3(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean) -> SwigDirector_ContactListener_onContactAdded__SWIG_3
    boolean SwigDirector_ContactListener_onContactAdded__SWIG_4(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,int,int,boolean,long,int,int,boolean) -> SwigDirector_ContactListener_onContactAdded__SWIG_4
    boolean SwigDirector_ContactListener_onContactAdded__SWIG_5(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int,int,boolean,int,int,int,boolean) -> SwigDirector_ContactListener_onContactAdded__SWIG_5
    boolean SwigDirector_ContactListener_onContactAdded__SWIG_6(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int) -> SwigDirector_ContactListener_onContactAdded__SWIG_6
    boolean SwigDirector_ContactListener_onContactAdded__SWIG_7(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,int,int,long,int,int) -> SwigDirector_ContactListener_onContactAdded__SWIG_7
    boolean SwigDirector_ContactListener_onContactAdded__SWIG_8(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int,int,int,int,int) -> SwigDirector_ContactListener_onContactAdded__SWIG_8
    boolean SwigDirector_ContactListener_onContactAdded__SWIG_9(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean) -> SwigDirector_ContactListener_onContactAdded__SWIG_9
    boolean SwigDirector_ContactListener_onContactAdded__SWIG_10(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,int,int,boolean,long,int,int,boolean) -> SwigDirector_ContactListener_onContactAdded__SWIG_10
    boolean SwigDirector_ContactListener_onContactAdded__SWIG_11(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int,int,boolean,int,int,int,boolean) -> SwigDirector_ContactListener_onContactAdded__SWIG_11
    void SwigDirector_ContactListener_onContactProcessed__SWIG_0(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,long) -> SwigDirector_ContactListener_onContactProcessed__SWIG_0
    void SwigDirector_ContactListener_onContactProcessed__SWIG_1(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int) -> SwigDirector_ContactListener_onContactProcessed__SWIG_1
    void SwigDirector_ContactListener_onContactProcessed__SWIG_2(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,long,boolean,long,boolean) -> SwigDirector_ContactListener_onContactProcessed__SWIG_2
    void SwigDirector_ContactListener_onContactProcessed__SWIG_3(com.badlogic.gdx.physics.bullet.collision.ContactListener,com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,boolean,int,boolean) -> SwigDirector_ContactListener_onContactProcessed__SWIG_3
    void SwigDirector_ContactListener_onContactProcessed__SWIG_4(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,long) -> SwigDirector_ContactListener_onContactProcessed__SWIG_4
    void SwigDirector_ContactListener_onContactProcessed__SWIG_5(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int) -> SwigDirector_ContactListener_onContactProcessed__SWIG_5
    void SwigDirector_ContactListener_onContactProcessed__SWIG_6(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,boolean,long,boolean) -> SwigDirector_ContactListener_onContactProcessed__SWIG_6
    void SwigDirector_ContactListener_onContactProcessed__SWIG_7(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,boolean,int,boolean) -> SwigDirector_ContactListener_onContactProcessed__SWIG_7
    void SwigDirector_ContactListener_onContactDestroyed(com.badlogic.gdx.physics.bullet.collision.ContactListener,int) -> SwigDirector_ContactListener_onContactDestroyed
    void SwigDirector_ContactListener_onContactStarted__SWIG_0(com.badlogic.gdx.physics.bullet.collision.ContactListener,long) -> SwigDirector_ContactListener_onContactStarted__SWIG_0
    void SwigDirector_ContactListener_onContactStarted__SWIG_1(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,long) -> SwigDirector_ContactListener_onContactStarted__SWIG_1
    void SwigDirector_ContactListener_onContactStarted__SWIG_2(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int) -> SwigDirector_ContactListener_onContactStarted__SWIG_2
    void SwigDirector_ContactListener_onContactStarted__SWIG_3(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,boolean,boolean) -> SwigDirector_ContactListener_onContactStarted__SWIG_3
    void SwigDirector_ContactListener_onContactStarted__SWIG_4(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,boolean,long,boolean) -> SwigDirector_ContactListener_onContactStarted__SWIG_4
    void SwigDirector_ContactListener_onContactStarted__SWIG_5(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,boolean,int,boolean) -> SwigDirector_ContactListener_onContactStarted__SWIG_5
    void SwigDirector_ContactListener_onContactEnded__SWIG_0(com.badlogic.gdx.physics.bullet.collision.ContactListener,long) -> SwigDirector_ContactListener_onContactEnded__SWIG_0
    void SwigDirector_ContactListener_onContactEnded__SWIG_1(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,long) -> SwigDirector_ContactListener_onContactEnded__SWIG_1
    void SwigDirector_ContactListener_onContactEnded__SWIG_2(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,int) -> SwigDirector_ContactListener_onContactEnded__SWIG_2
    void SwigDirector_ContactListener_onContactEnded__SWIG_3(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,boolean,boolean) -> SwigDirector_ContactListener_onContactEnded__SWIG_3
    void SwigDirector_ContactListener_onContactEnded__SWIG_4(com.badlogic.gdx.physics.bullet.collision.ContactListener,long,boolean,long,boolean) -> SwigDirector_ContactListener_onContactEnded__SWIG_4
    void SwigDirector_ContactListener_onContactEnded__SWIG_5(com.badlogic.gdx.physics.bullet.collision.ContactListener,int,boolean,int,boolean) -> SwigDirector_ContactListener_onContactEnded__SWIG_5
    void SwigDirector_ContactCache_onContactStarted(com.badlogic.gdx.physics.bullet.collision.ContactCache,long,boolean,boolean) -> SwigDirector_ContactCache_onContactStarted
    void SwigDirector_ContactCache_onContactEnded(com.badlogic.gdx.physics.bullet.collision.ContactCache,long,boolean,long,boolean) -> SwigDirector_ContactCache_onContactEnded
    void swig_module_init() -> swig_module_init
com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper -> com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper:
    long swigCPtr -> swigCPtr
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper wrapper -> wrapper
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.CollisionObjectWrapper) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void construct() -> construct
    void dispose() -> dispose
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper getWrapper() -> getWrapper
com.badlogic.gdx.physics.bullet.collision.ContactCache -> com.badlogic.gdx.physics.bullet.collision.ContactCache:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.ContactCache) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void setCacheTime(float) -> setCacheTime
    float getCacheTime() -> getCacheTime
    void enable() -> enable
    void disable() -> disable
    boolean isEnabled() -> isEnabled
    void onContactStarted(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,boolean,boolean) -> onContactStarted
    void onContactEnded(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean) -> onContactEnded
    void clear() -> clear
    void update(float) -> update
com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent -> com.badlogic.gdx.physics.bullet.collision.ContactCallbackEvent:
    int TYPE_MASK -> TYPE_MASK
    int BY_MASK -> BY_MASK
    int FILTERED -> FILTERED
    int INCLUDE_POINT -> INCLUDE_POINT
    int BY_WRAPPER -> BY_WRAPPER
    int BY_MANIFOLD -> BY_MANIFOLD
    int BY_OBJECT -> BY_OBJECT
    int BY_VALUE -> BY_VALUE
    int SHIFT_ON_ADDED -> SHIFT_ON_ADDED
    int SHIFT_ON_PROCESSED -> SHIFT_ON_PROCESSED
    int SHIFT_ON_DESTROYED -> SHIFT_ON_DESTROYED
    int SHIFT_ON_STARTED -> SHIFT_ON_STARTED
    int SHIFT_ON_ENDED -> SHIFT_ON_ENDED
    int ON_ADDED_UNFILTERED_WRAPPER -> ON_ADDED_UNFILTERED_WRAPPER
    int ON_ADDED_UNFILTERED_OBJECT -> ON_ADDED_UNFILTERED_OBJECT
    int ON_ADDED_UNFILTERED_VALUE -> ON_ADDED_UNFILTERED_VALUE
    int ON_ADDED_UNFILTERED_WRAPPER_INCLUDEPOINT -> ON_ADDED_UNFILTERED_WRAPPER_INCLUDEPOINT
    int ON_ADDED_UNFILTERED_OBJECT_INCLUDEPOINT -> ON_ADDED_UNFILTERED_OBJECT_INCLUDEPOINT
    int ON_ADDED_UNFILTERED_VALUE_INCLUDEPOINT -> ON_ADDED_UNFILTERED_VALUE_INCLUDEPOINT
    int ON_ADDED_FILTERED_WRAPPER -> ON_ADDED_FILTERED_WRAPPER
    int ON_ADDED_FILTERED_OBJECT -> ON_ADDED_FILTERED_OBJECT
    int ON_ADDED_FILTERED_VALUE -> ON_ADDED_FILTERED_VALUE
    int ON_ADDED_FILTERED_WRAPPER_INCLUDEPOINT -> ON_ADDED_FILTERED_WRAPPER_INCLUDEPOINT
    int ON_ADDED_FILTERED_OBJECT_INCLUDEPOINT -> ON_ADDED_FILTERED_OBJECT_INCLUDEPOINT
    int ON_ADDED_FILTERED_VALUE_INCLUDEPOINT -> ON_ADDED_FILTERED_VALUE_INCLUDEPOINT
    int ON_PROCESSED_UNFILTERED_OBJECT -> ON_PROCESSED_UNFILTERED_OBJECT
    int ON_PROCESSED_UNFILTERED_VALUE -> ON_PROCESSED_UNFILTERED_VALUE
    int ON_PROCESSED_UNFILTERED_OBJECT_INCLUDEPOINT -> ON_PROCESSED_UNFILTERED_OBJECT_INCLUDEPOINT
    int ON_PROCESSED_UNFILTERED_VALUE_INCLUDEPOINT -> ON_PROCESSED_UNFILTERED_VALUE_INCLUDEPOINT
    int ON_PROCESSED_FILTERED_OBJECT -> ON_PROCESSED_FILTERED_OBJECT
    int ON_PROCESSED_FILTERED_VALUE -> ON_PROCESSED_FILTERED_VALUE
    int ON_PROCESSED_FILTERED_OBJECT_INCLUDEPOINT -> ON_PROCESSED_FILTERED_OBJECT_INCLUDEPOINT
    int ON_PROCESSED_FILTERED_VALUE_INCLUDEPOINT -> ON_PROCESSED_FILTERED_VALUE_INCLUDEPOINT
    int ON_DESTROYED -> ON_DESTROYED
    int ON_STARTED_UNFILTERED_MANIFOLD -> ON_STARTED_UNFILTERED_MANIFOLD
    int ON_STARTED_UNFILTERED_OBJECT -> ON_STARTED_UNFILTERED_OBJECT
    int ON_STARTED_UNFILTERED_VALUE -> ON_STARTED_UNFILTERED_VALUE
    int ON_STARTED_FILTERED_MANIFOLD -> ON_STARTED_FILTERED_MANIFOLD
    int ON_STARTED_FILTERED_OBJECT -> ON_STARTED_FILTERED_OBJECT
    int ON_STARTED_FILTERED_VALUE -> ON_STARTED_FILTERED_VALUE
    int ON_ENDED_UNFILTERED_MANIFOLD -> ON_ENDED_UNFILTERED_MANIFOLD
    int ON_ENDED_UNFILTERED_OBJECT -> ON_ENDED_UNFILTERED_OBJECT
    int ON_ENDED_UNFILTERED_VALUE -> ON_ENDED_UNFILTERED_VALUE
    int ON_ENDED_FILTERED_MANIFOLD -> ON_ENDED_FILTERED_MANIFOLD
    int ON_ENDED_FILTERED_OBJECT -> ON_ENDED_FILTERED_OBJECT
    int ON_ENDED_FILTERED_VALUE -> ON_ENDED_FILTERED_VALUE
com.badlogic.gdx.physics.bullet.collision.ContactListener -> com.badlogic.gdx.physics.bullet.collision.ContactListener:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.ContactListener) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void enable() -> enable
    void disable() -> disable
    void enableOnAdded() -> enableOnAdded
    void disableOnAdded() -> disableOnAdded
    boolean isOnAddedEnabled() -> isOnAddedEnabled
    boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int) -> onContactAdded
    boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int) -> onContactAdded
    boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int,int,int,int,int) -> onContactAdded
    boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean) -> onContactAdded
    boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean) -> onContactAdded
    boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int,int,boolean,int,int,int,boolean) -> onContactAdded
    boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int) -> onContactAdded
    boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int) -> onContactAdded
    boolean onContactAdded(int,int,int,int,int,int) -> onContactAdded
    boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,boolean) -> onContactAdded
    boolean onContactAdded(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int,int,boolean) -> onContactAdded
    boolean onContactAdded(int,int,int,boolean,int,int,int,boolean) -> onContactAdded
    void enableOnProcessed() -> enableOnProcessed
    void disableOnProcessed() -> disableOnProcessed
    boolean isOnProcessedEnabled() -> isOnProcessedEnabled
    void onContactProcessed(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> onContactProcessed
    void onContactProcessed(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,int) -> onContactProcessed
    void onContactProcessed(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean) -> onContactProcessed
    void onContactProcessed(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int,boolean,int,boolean) -> onContactProcessed
    void onContactProcessed(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> onContactProcessed
    void onContactProcessed(int,int) -> onContactProcessed
    void onContactProcessed(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean) -> onContactProcessed
    void onContactProcessed(int,boolean,int,boolean) -> onContactProcessed
    void enableOnDestroyed() -> enableOnDestroyed
    void disableOnDestroyed() -> disableOnDestroyed
    boolean isOnDestroyedEnabled() -> isOnDestroyedEnabled
    void onContactDestroyed(int) -> onContactDestroyed
    void enableOnStarted() -> enableOnStarted
    void disableOnStarted() -> disableOnStarted
    boolean isOnStartedEnabled() -> isOnStartedEnabled
    void onContactStarted(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> onContactStarted
    void onContactStarted(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> onContactStarted
    void onContactStarted(int,int) -> onContactStarted
    void onContactStarted(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,boolean,boolean) -> onContactStarted
    void onContactStarted(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean) -> onContactStarted
    void onContactStarted(int,boolean,int,boolean) -> onContactStarted
    void enableOnEnded() -> enableOnEnded
    void disableOnEnded() -> disableOnEnded
    boolean isOnEndedEnabled() -> isOnEndedEnabled
    void onContactEnded(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> onContactEnded
    void onContactEnded(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> onContactEnded
    void onContactEnded(int,int) -> onContactEnded
    void onContactEnded(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,boolean,boolean) -> onContactEnded
    void onContactEnded(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,boolean) -> onContactEnded
    void onContactEnded(int,boolean,int,boolean) -> onContactEnded
    boolean setEvents() -> setEvents
com.badlogic.gdx.physics.bullet.collision.ContactResultCallback -> com.badlogic.gdx.physics.bullet.collision.ContactResultCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.ContactResultCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void setCollisionFilterGroup(short) -> setCollisionFilterGroup
    short getCollisionFilterGroup() -> getCollisionFilterGroup
    void setCollisionFilterMask(short) -> setCollisionFilterMask
    short getCollisionFilterMask() -> getCollisionFilterMask
    boolean needsCollision(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> needsCollision
    float addSingleResult(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,int,int) -> addSingleResult
com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback -> com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void setClosestHitFraction(float) -> setClosestHitFraction
    float getClosestHitFraction() -> getClosestHitFraction
    void setCollisionFilterGroup(short) -> setCollisionFilterGroup
    short getCollisionFilterGroup() -> getCollisionFilterGroup
    void setCollisionFilterMask(short) -> setCollisionFilterMask
    short getCollisionFilterMask() -> getCollisionFilterMask
    boolean hasHit() -> hasHit
    boolean needsCollision(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> needsCollision
    float addSingleResult(com.badlogic.gdx.physics.bullet.collision.LocalConvexResult,boolean) -> addSingleResult
com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher -> com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.CustomCollisionDispatcher) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    boolean needsCollision(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> needsCollision
    boolean needsResponse(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> needsResponse
com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge -> com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setUserValue(int) -> setUserValue
    int getUserValue() -> getUserValue
    void setContactCallbackFlag(int) -> setContactCallbackFlag
    int getContactCallbackFlag() -> getContactCallbackFlag
    void setContactCallbackFilter(int) -> setContactCallbackFilter
    int getContactCallbackFilter() -> getContactCallbackFilter
com.badlogic.gdx.physics.bullet.collision.LocalConvexResult -> com.badlogic.gdx.physics.bullet.collision.LocalConvexResult:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.LocalConvexResult) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setHitCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> setHitCollisionObject
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getHitCollisionObject() -> getHitCollisionObject
    void setLocalShapeInfo(com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo) -> setLocalShapeInfo
    com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo getLocalShapeInfo() -> getLocalShapeInfo
    void setHitNormalLocal(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setHitNormalLocal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitNormalLocal() -> getHitNormalLocal
    void setHitPointLocal(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setHitPointLocal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitPointLocal() -> getHitPointLocal
    void setHitFraction(float) -> setHitFraction
    float getHitFraction() -> getHitFraction
com.badlogic.gdx.physics.bullet.collision.LocalRayResult -> com.badlogic.gdx.physics.bullet.collision.LocalRayResult:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.LocalRayResult) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> setCollisionObject
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getCollisionObject() -> getCollisionObject
    void setLocalShapeInfo(com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo) -> setLocalShapeInfo
    com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo getLocalShapeInfo() -> getLocalShapeInfo
    void setHitNormalLocal(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setHitNormalLocal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitNormalLocal() -> getHitNormalLocal
    void setHitFraction(float) -> setHitFraction
    float getHitFraction() -> getHitFraction
com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo -> com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.LocalShapeInfo) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setShapePart(int) -> setShapePart
    int getShapePart() -> getShapePart
    void setTriangleIndex(int) -> setTriangleIndex
    int getTriangleIndex() -> getTriangleIndex
com.badlogic.gdx.physics.bullet.collision.PHY_ScalarType -> com.badlogic.gdx.physics.bullet.collision.PHY_ScalarType:
    int PHY_FLOAT -> PHY_FLOAT
    int PHY_DOUBLE -> PHY_DOUBLE
    int PHY_INTEGER -> PHY_INTEGER
    int PHY_SHORT -> PHY_SHORT
    int PHY_FIXEDPOINT88 -> PHY_FIXEDPOINT88
    int PHY_UCHAR -> PHY_UCHAR
com.badlogic.gdx.physics.bullet.collision.RayResultCallback -> com.badlogic.gdx.physics.bullet.collision.RayResultCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void setClosestHitFraction(float) -> setClosestHitFraction
    float getClosestHitFraction() -> getClosestHitFraction
    void setCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> setCollisionObject
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getCollisionObject() -> getCollisionObject
    void setCollisionFilterGroup(short) -> setCollisionFilterGroup
    short getCollisionFilterGroup() -> getCollisionFilterGroup
    void setCollisionFilterMask(short) -> setCollisionFilterMask
    short getCollisionFilterMask() -> getCollisionFilterMask
    void setFlags(long) -> setFlags
    long getFlags() -> getFlags
    boolean hasHit() -> hasHit
    boolean needsCollision(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> needsCollision
    float addSingleResult(com.badlogic.gdx.physics.bullet.collision.LocalRayResult,boolean) -> addSingleResult
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btFace_t -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btFace_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btFace_t) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_int_t -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_int_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_int_t) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_p_q_const__btCollisionShape_p_q_const__btCollisionShape__bool) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btManifoldPoint_p_q_const__btCollisionObjectWrapper_int_int_p_q_const__btCollisionObjectWrapper_int_int__bool) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtNode -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtNode:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtNode) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btVector3 -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btVector3:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btVector3) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char -> com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char) -> getCPtr
com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector -> com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.SphereTriangleDetector) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean) -> getClosestPoints
    void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> getClosestPoints
    boolean collide(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,float) -> collide
com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3 -> com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.bt32BitAxisSweep3) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btActivatingCollisionAlgorithm -> com.badlogic.gdx.physics.bullet.collision.btActivatingCollisionAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btActivatingCollisionAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3 -> com.badlogic.gdx.physics.bullet.collision.btAxisSweep3:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btAxisSweep3) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt -> com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    long getNumHandles() -> getNumHandles
    long addHandle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long) -> addHandle
    void removeHandle(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> removeHandle
    void updateHandle(long,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> updateHandle
    com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle getHandle(long) -> getHandle
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rayTest
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3) -> rayTest
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> rayTest
    void quantize(java.nio.LongBuffer,com.badlogic.gdx.math.Vector3,int) -> quantize
    void unQuantize(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> unQuantize
    boolean testAabbOverlap(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> testAabbOverlap
    com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getOverlappingPairCache() -> getOverlappingPairCache
    void setOverlappingPairUserCallback(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback) -> setOverlappingPairUserCallback
    com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback getOverlappingPairUserCallback() -> getOverlappingPairUserCallback
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge -> com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Edge) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setPos(long) -> setPos
    long getPos() -> getPos
    void setHandle(long) -> setHandle
    long getHandle() -> getHandle
    long IsMax() -> IsMax
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle -> com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalInt$Handle) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setMinEdges(long[]) -> setMinEdges
    long[] getMinEdges() -> getMinEdges
    void setMaxEdges(long[]) -> setMaxEdges
    long[] getMaxEdges() -> getMaxEdges
    void setDbvtProxy(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> setDbvtProxy
    com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy getDbvtProxy() -> getDbvtProxy
    void SetNextFree(long) -> SetNextFree
    long GetNextFree() -> GetNextFree
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort -> com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int getNumHandles() -> getNumHandles
    int addHandle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,short,short,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long) -> addHandle
    void removeHandle(int,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> removeHandle
    void updateHandle(int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> updateHandle
    com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle getHandle(int) -> getHandle
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rayTest
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3) -> rayTest
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> rayTest
    void quantize(java.nio.IntBuffer,com.badlogic.gdx.math.Vector3,int) -> quantize
    void unQuantize(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> unQuantize
    boolean testAabbOverlap(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> testAabbOverlap
    com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getOverlappingPairCache() -> getOverlappingPairCache
    void setOverlappingPairUserCallback(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback) -> setOverlappingPairUserCallback
    com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback getOverlappingPairUserCallback() -> getOverlappingPairUserCallback
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge -> com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Edge) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setPos(int) -> setPos
    int getPos() -> getPos
    void setHandle(int) -> setHandle
    int getHandle() -> getHandle
    int IsMax() -> IsMax
com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle -> com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btAxisSweep3InternalShort$Handle) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setMinEdges(int[]) -> setMinEdges
    int[] getMinEdges() -> getMinEdges
    void setMaxEdges(int[]) -> setMaxEdges
    int[] getMaxEdges() -> getMaxEdges
    void setDbvtProxy(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> setDbvtProxy
    com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy getDbvtProxy() -> getDbvtProxy
    void SetNextFree(int) -> SetNextFree
    int GetNextFree() -> GetNextFree
com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4 -> com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBU_Simplex1to4) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void reset() -> reset
    void addVertex(com.badlogic.gdx.math.Vector3) -> addVertex
    int getIndex(int) -> getIndex
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm -> com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm$CreateFunc -> com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm$CreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBox2dBox2dCollisionAlgorithm$CreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btBox2dShape -> com.badlogic.gdx.physics.bullet.collision.btBox2dShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBox2dShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.math.Vector3 getHalfExtentsWithMargin() -> getHalfExtentsWithMargin
    com.badlogic.gdx.math.Vector3 getHalfExtentsWithoutMargin() -> getHalfExtentsWithoutMargin
    int getVertexCount() -> getVertexCount
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVertices() -> getVertices
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormals() -> getNormals
    com.badlogic.gdx.math.Vector3 getCentroid() -> getCentroid
    void getPlaneEquation(com.badlogic.gdx.physics.bullet.linearmath.btVector4,int) -> getPlaneEquation
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm -> com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc -> com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBoxBoxCollisionAlgorithm$CreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> CreateCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector -> com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBoxBoxDetector) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setBox1(com.badlogic.gdx.physics.bullet.collision.btBoxShape) -> setBox1
    com.badlogic.gdx.physics.bullet.collision.btBoxShape getBox1() -> getBox1
    void setBox2(com.badlogic.gdx.physics.bullet.collision.btBoxShape) -> setBox2
    com.badlogic.gdx.physics.bullet.collision.btBoxShape getBox2() -> getBox2
    void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean) -> getClosestPoints
    void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> getClosestPoints
com.badlogic.gdx.physics.bullet.collision.btBoxShape -> com.badlogic.gdx.physics.bullet.collision.btBoxShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBoxShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.math.Vector3 getHalfExtentsWithMargin() -> getHalfExtentsWithMargin
    com.badlogic.gdx.math.Vector3 getHalfExtentsWithoutMargin() -> getHalfExtentsWithoutMargin
    void getPlaneEquation(com.badlogic.gdx.physics.bullet.linearmath.btVector4,int) -> getPlaneEquation
com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback -> com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    boolean process(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> process
com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface -> com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy createProxy(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,long,short,short,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long) -> createProxy
    void destroyProxy(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> destroyProxy
    void setAabb(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> setAabb
    void getAabb(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getAabb
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rayTest
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3) -> rayTest
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> rayTest
    void aabbTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseAabbCallback) -> aabbTest
    void calculateOverlappingPairs(com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> calculateOverlappingPairs
    com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getOverlappingPairCache() -> getOverlappingPairCache
    void getBroadphaseAabb(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getBroadphaseAabb
    void resetPool(com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> resetPool
    void printStats() -> printStats
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair -> com.badlogic.gdx.physics.bullet.collision.btBroadphasePair:
    long swigCPtr -> swigCPtr
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePair temp -> temp
    com.badlogic.gdx.utils.Pool pool -> pool
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBroadphasePair) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePair internalTemp(long,boolean) -> internalTemp
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePair obtain(long,boolean) -> obtain
    void free(com.badlogic.gdx.physics.bullet.collision.btBroadphasePair) -> free
    void setPProxy0(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> setPProxy0
    com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy getPProxy0() -> getPProxy0
    void setPProxy1(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> setPProxy1
    com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy getPProxy1() -> getPProxy1
    void setAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm) -> setAlgorithm
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm getAlgorithm() -> getAlgorithm
    void setInternalInfo1(long) -> setInternalInfo1
    long getInternalInfo1() -> getInternalInfo1
    void setInternalTmpValue(int) -> setInternalTmpValue
    int getInternalTmpValue() -> getInternalTmpValue
com.badlogic.gdx.physics.bullet.collision.btBroadphasePair$1 -> com.badlogic.gdx.physics.bullet.collision.btBroadphasePair$1:
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePair newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray -> com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.utils.Array getCollisionObjects(com.badlogic.gdx.utils.Array,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,int[]) -> getCollisionObjects
    int getCollisionObjectsValue(int[],com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> getCollisionObjectsValue
    int size() -> size
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePair at(int) -> at
    int getCollisionObjects(int[],int,int) -> getCollisionObjects
    int getCollisionObjectsValue(int[],int,int) -> getCollisionObjectsValue
com.badlogic.gdx.physics.bullet.collision.btBroadphasePairSortPredicate -> com.badlogic.gdx.physics.bullet.collision.btBroadphasePairSortPredicate:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBroadphasePairSortPredicate) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy -> com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy:
    long swigCPtr -> swigCPtr
    com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy temp -> temp
    com.badlogic.gdx.utils.Pool pool -> pool
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy internalTemp(long,boolean) -> internalTemp
    com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy obtain(long,boolean) -> obtain
    void free(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> free
    void setClientObject(long) -> setClientObject
    long getClientObject() -> getClientObject
    void setCollisionFilterGroup(short) -> setCollisionFilterGroup
    short getCollisionFilterGroup() -> getCollisionFilterGroup
    void setCollisionFilterMask(short) -> setCollisionFilterMask
    short getCollisionFilterMask() -> getCollisionFilterMask
    void setMultiSapParentProxy(long) -> setMultiSapParentProxy
    long getMultiSapParentProxy() -> getMultiSapParentProxy
    void setUniqueId(int) -> setUniqueId
    int getUniqueId() -> getUniqueId
    void setAabbMin(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAabbMin
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAabbMin() -> getAabbMin
    void setAabbMax(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAabbMax
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAabbMax() -> getAabbMax
    int getUid() -> getUid
    boolean isPolyhedral(int) -> isPolyhedral
    boolean isConvex(int) -> isConvex
    boolean isNonMoving(int) -> isNonMoving
    boolean isConcave(int) -> isConcave
    boolean isCompound(int) -> isCompound
    boolean isSoftBody(int) -> isSoftBody
    boolean isInfinite(int) -> isInfinite
    boolean isConvex2d(int) -> isConvex2d
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$1 -> com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$1:
    com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$CollisionFilterGroups -> com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy$CollisionFilterGroups:
    int DefaultFilter -> DefaultFilter
    int StaticFilter -> StaticFilter
    int KinematicFilter -> KinematicFilter
    int DebrisFilter -> DebrisFilter
    int SensorTrigger -> SensorTrigger
    int CharacterFilter -> CharacterFilter
    int AllFilter -> AllFilter
com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback -> com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void setRayDirectionInverse(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setRayDirectionInverse
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayDirectionInverse() -> getRayDirectionInverse
    void setSigns(long[]) -> setSigns
    long[] getSigns() -> getSigns
    void setLambda_max(float) -> setLambda_max
    float getLambda_max() -> getLambda_max
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo -> com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfo) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setQuantizedAabbMin(int[]) -> setQuantizedAabbMin
    int[] getQuantizedAabbMin() -> getQuantizedAabbMin
    void setQuantizedAabbMax(int[]) -> setQuantizedAabbMax
    int[] getQuantizedAabbMax() -> getQuantizedAabbMax
    void setRootNodeIndex(int) -> setRootNodeIndex
    int getRootNodeIndex() -> getRootNodeIndex
    void setSubtreeSize(int) -> setSubtreeSize
    int getSubtreeSize() -> getSubtreeSize
    void setPadding(int[]) -> setPadding
    int[] getPadding() -> getPadding
    void setAabbFromQuantizeNode(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode) -> setAabbFromQuantizeNode
com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData -> com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setRootNodeIndex(int) -> setRootNodeIndex
    int getRootNodeIndex() -> getRootNodeIndex
    void setSubtreeSize(int) -> setSubtreeSize
    int getSubtreeSize() -> getSubtreeSize
    void setQuantizedAabbMin(int[]) -> setQuantizedAabbMin
    int[] getQuantizedAabbMin() -> getQuantizedAabbMin
    void setQuantizedAabbMax(int[]) -> setQuantizedAabbMax
    int[] getQuantizedAabbMax() -> getQuantizedAabbMax
com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape -> com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape:
    long swigCPtr -> swigCPtr
    com.badlogic.gdx.utils.Array instances -> instances
    com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface meshInterface -> meshInterface
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape getInstance(com.badlogic.gdx.utils.Array) -> getInstance
    com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape obtain(com.badlogic.gdx.utils.Array) -> obtain
    com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface getMeshInterface() -> getMeshInterface
    void dispose() -> dispose
    boolean getOwnsBvh() -> getOwnsBvh
    void performRaycast(com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> performRaycast
    void performConvexcast(com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> performConvexcast
    void refitTree(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> refitTree
    void partialRefitTree(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> partialRefitTree
    com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh getOptimizedBvh() -> getOptimizedBvh
    void setOptimizedBvh(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh,com.badlogic.gdx.math.Vector3) -> setOptimizedBvh
    void setOptimizedBvh(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh) -> setOptimizedBvh
    void buildOptimizedBvh() -> buildOptimizedBvh
    boolean usesQuantizedAabbCompression() -> usesQuantizedAabbCompression
    void setTriangleInfoMap(com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap) -> setTriangleInfoMap
    com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap getTriangleInfoMap() -> getTriangleInfoMap
    void serializeSingleBvh(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer) -> serializeSingleBvh
    void serializeSingleTriangleInfoMap(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer) -> serializeSingleTriangleInfoMap
com.badlogic.gdx.physics.bullet.collision.btCapsuleShape -> com.badlogic.gdx.physics.bullet.collision.btCapsuleShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCapsuleShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int getUpAxis() -> getUpAxis
    float getRadius() -> getRadius
    float getHalfHeight() -> getHalfHeight
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData -> com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setConvexInternalShapeData(com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> setConvexInternalShapeData
    com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData getConvexInternalShapeData() -> getConvexInternalShapeData
    void setUpAxis(int) -> setUpAxis
    int getUpAxis() -> getUpAxis
    void setPadding(java.lang.String) -> setPadding
    java.lang.String getPadding() -> getPadding
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeX -> com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeX:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeX) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeZ -> com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeZ:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCapsuleShapeZ) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData -> com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setValues(short[]) -> setValues
    short[] getValues() -> getValues
    void setPad(char) -> setPad
    char getPad() -> getPad
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm -> com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void processCollision(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> processCollision
    float calculateTimeOfImpact(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> calculateTimeOfImpact
    void getAllContactManifolds(com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray) -> getAllContactManifolds
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo -> com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setDispatcher1(com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> setDispatcher1
    com.badlogic.gdx.physics.bullet.collision.btDispatcher getDispatcher1() -> getDispatcher1
    void setManifold(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> setManifold
    com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getManifold() -> getManifold
com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc -> com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setSwapped(boolean) -> setSwapped
    boolean getSwapped() -> getSwapped
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> CreateCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration -> com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator getPersistentManifoldPool() -> getPersistentManifoldPool
    com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator getCollisionAlgorithmPool() -> getCollisionAlgorithmPool
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc getCollisionAlgorithmCreateFunc(int,int) -> getCollisionAlgorithmCreateFunc
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher -> com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int getDispatcherFlags() -> getDispatcherFlags
    void setDispatcherFlags(int) -> setDispatcherFlags
    void registerCollisionCreateFunc(int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmCreateFunc) -> registerCollisionCreateFunc
    com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getManifoldByIndexInternal(int) -> getManifoldByIndexInternal
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm findAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> findAlgorithm
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm findAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> findAlgorithm
    void setNearCallback(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void) -> setNearCallback
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_f_r_btBroadphasePair_r_btCollisionDispatcher_r_q_const__btDispatcherInfo__void getNearCallback() -> getNearCallback
    void defaultNearCallback(com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo) -> defaultNearCallback
    com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration getCollisionConfiguration() -> getCollisionConfiguration
    void setCollisionConfiguration(com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration) -> setCollisionConfiguration
    com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator getInternalManifoldPool() -> getInternalManifoldPool
com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher$DispatcherFlags -> com.badlogic.gdx.physics.bullet.collision.btCollisionDispatcher$DispatcherFlags:
    int CD_STATIC_STATIC_REPORTED -> CD_STATIC_STATIC_REPORTED
    int CD_USE_RELATIVE_CONTACT_BREAKING_THRESHOLD -> CD_USE_RELATIVE_CONTACT_BREAKING_THRESHOLD
    int CD_DISABLE_CONTACTPOOL_DYNAMIC_ALLOCATION -> CD_DISABLE_CONTACTPOOL_DYNAMIC_ALLOCATION
com.badlogic.gdx.physics.bullet.collision.btCollisionObject -> com.badlogic.gdx.physics.bullet.collision.btCollisionObject:
    long swigCPtr -> swigCPtr
    com.badlogic.gdx.utils.LongMap instances -> instances
    com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge gdxBridge -> gdxBridge
    int userValue -> userValue
    int contactCallbackFlag -> contactCallbackFlag
    int contactCallbackFilter -> contactCallbackFilter
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape collisionShape -> collisionShape
    java.lang.Object userData -> userData
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getInstance(long) -> getInstance
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getInstance(long,boolean) -> getInstance
    void addInstance(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> addInstance
    void removeInstance(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> removeInstance
    void construct() -> construct
    void dispose() -> dispose
    int getUserValue() -> getUserValue
    void setUserValue(int) -> setUserValue
    int getContactCallbackFlag() -> getContactCallbackFlag
    void setContactCallbackFlag(int) -> setContactCallbackFlag
    int getContactCallbackFilter() -> getContactCallbackFilter
    void setContactCallbackFilter(int) -> setContactCallbackFilter
    void setCollisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> setCollisionShape
    void refCollisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> refCollisionShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape getCollisionShape() -> getCollisionShape
    boolean mergesSimulationIslands() -> mergesSimulationIslands
    com.badlogic.gdx.math.Vector3 getAnisotropicFriction() -> getAnisotropicFriction
    void setAnisotropicFriction(com.badlogic.gdx.math.Vector3,int) -> setAnisotropicFriction
    void setAnisotropicFriction(com.badlogic.gdx.math.Vector3) -> setAnisotropicFriction
    boolean hasAnisotropicFriction(int) -> hasAnisotropicFriction
    boolean hasAnisotropicFriction() -> hasAnisotropicFriction
    void setContactProcessingThreshold(float) -> setContactProcessingThreshold
    float getContactProcessingThreshold() -> getContactProcessingThreshold
    boolean isStaticObject() -> isStaticObject
    boolean isKinematicObject() -> isKinematicObject
    boolean isStaticOrKinematicObject() -> isStaticOrKinematicObject
    boolean hasContactResponse() -> hasContactResponse
    void internalSetCollisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> internalSetCollisionShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape internalGetCollisionShape() -> internalGetCollisionShape
    long internalGetExtensionPointer() -> internalGetExtensionPointer
    void internalSetExtensionPointer(long) -> internalSetExtensionPointer
    int getActivationState() -> getActivationState
    void setActivationState(int) -> setActivationState
    void setDeactivationTime(float) -> setDeactivationTime
    float getDeactivationTime() -> getDeactivationTime
    void forceActivationState(int) -> forceActivationState
    void activate(boolean) -> activate
    void activate() -> activate
    boolean isActive() -> isActive
    void setRestitution(float) -> setRestitution
    float getRestitution() -> getRestitution
    void setFriction(float) -> setFriction
    float getFriction() -> getFriction
    void setRollingFriction(float) -> setRollingFriction
    float getRollingFriction() -> getRollingFriction
    int getInternalType() -> getInternalType
    com.badlogic.gdx.math.Matrix4 getWorldTransform() -> getWorldTransform
    void setWorldTransform(com.badlogic.gdx.math.Matrix4) -> setWorldTransform
    com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy getBroadphaseHandle() -> getBroadphaseHandle
    void setBroadphaseHandle(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> setBroadphaseHandle
    com.badlogic.gdx.math.Matrix4 getInterpolationWorldTransform() -> getInterpolationWorldTransform
    void setInterpolationWorldTransform(com.badlogic.gdx.math.Matrix4) -> setInterpolationWorldTransform
    void setInterpolationLinearVelocity(com.badlogic.gdx.math.Vector3) -> setInterpolationLinearVelocity
    void setInterpolationAngularVelocity(com.badlogic.gdx.math.Vector3) -> setInterpolationAngularVelocity
    com.badlogic.gdx.math.Vector3 getInterpolationLinearVelocity() -> getInterpolationLinearVelocity
    com.badlogic.gdx.math.Vector3 getInterpolationAngularVelocity() -> getInterpolationAngularVelocity
    int getIslandTag() -> getIslandTag
    void setIslandTag(int) -> setIslandTag
    int getCompanionId() -> getCompanionId
    void setCompanionId(int) -> setCompanionId
    float getHitFraction() -> getHitFraction
    void setHitFraction(float) -> setHitFraction
    int getCollisionFlags() -> getCollisionFlags
    void setCollisionFlags(int) -> setCollisionFlags
    float getCcdSweptSphereRadius() -> getCcdSweptSphereRadius
    void setCcdSweptSphereRadius(float) -> setCcdSweptSphereRadius
    float getCcdMotionThreshold() -> getCcdMotionThreshold
    float getCcdSquareMotionThreshold() -> getCcdSquareMotionThreshold
    void setCcdMotionThreshold(float) -> setCcdMotionThreshold
    long getUserPointer() -> getUserPointer
    int getUserIndex() -> getUserIndex
    void setUserPointer(long) -> setUserPointer
    void setUserIndex(int) -> setUserIndex
    int getUpdateRevisionInternal() -> getUpdateRevisionInternal
    boolean checkCollideWith(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> checkCollideWith
    int calculateSerializeBufferSize() -> calculateSerializeBufferSize
    java.lang.String serialize(long,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer) -> serialize
    void serializeSingleObject(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer) -> serializeSingleObject
    void internalSetGdxBridge(com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge) -> internalSetGdxBridge
    com.badlogic.gdx.physics.bullet.collision.GdxCollisionObjectBridge internalGetGdxBridge() -> internalGetGdxBridge
    void getAnisotropicFriction(com.badlogic.gdx.math.Vector3) -> getAnisotropicFriction
    void getWorldTransform(com.badlogic.gdx.math.Matrix4) -> getWorldTransform
    void getInterpolationWorldTransform(com.badlogic.gdx.math.Matrix4) -> getInterpolationWorldTransform
    void getInterpolationLinearVelocity(com.badlogic.gdx.math.Vector3) -> getInterpolationLinearVelocity
    void getInterpolationAngularVelocity(com.badlogic.gdx.math.Vector3) -> getInterpolationAngularVelocity
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$AnisotropicFrictionFlags -> com.badlogic.gdx.physics.bullet.collision.btCollisionObject$AnisotropicFrictionFlags:
    int CF_ANISOTROPIC_FRICTION_DISABLED -> CF_ANISOTROPIC_FRICTION_DISABLED
    int CF_ANISOTROPIC_FRICTION -> CF_ANISOTROPIC_FRICTION
    int CF_ANISOTROPIC_ROLLING_FRICTION -> CF_ANISOTROPIC_ROLLING_FRICTION
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionFlags -> com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionFlags:
    int CF_STATIC_OBJECT -> CF_STATIC_OBJECT
    int CF_KINEMATIC_OBJECT -> CF_KINEMATIC_OBJECT
    int CF_NO_CONTACT_RESPONSE -> CF_NO_CONTACT_RESPONSE
    int CF_CUSTOM_MATERIAL_CALLBACK -> CF_CUSTOM_MATERIAL_CALLBACK
    int CF_CHARACTER_OBJECT -> CF_CHARACTER_OBJECT
    int CF_DISABLE_VISUALIZE_OBJECT -> CF_DISABLE_VISUALIZE_OBJECT
    int CF_DISABLE_SPU_COLLISION_PROCESSING -> CF_DISABLE_SPU_COLLISION_PROCESSING
com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionObjectTypes -> com.badlogic.gdx.physics.bullet.collision.btCollisionObject$CollisionObjectTypes:
    int CO_COLLISION_OBJECT -> CO_COLLISION_OBJECT
    int CO_RIGID_BODY -> CO_RIGID_BODY
    int CO_GHOST_OBJECT -> CO_GHOST_OBJECT
    int CO_SOFT_BODY -> CO_SOFT_BODY
    int CO_HF_FLUID -> CO_HF_FLUID
    int CO_USER_TYPE -> CO_USER_TYPE
    int CO_FEATHERSTONE_LINK -> CO_FEATHERSTONE_LINK
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray -> com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int size() -> size
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject at(int) -> at
    void clear() -> clear
    void pop_back() -> pop_back
    void resizeNoInitialize(int) -> resizeNoInitialize
    void resize(int,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> resize
    void resize(int) -> resize
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject expandNonInitializing() -> expandNonInitializing
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject expand(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> expand
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject expand() -> expand
    void push_back(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> push_back
    int capacity() -> capacity
    void reserve(int) -> reserve
    void swap(int,int) -> swap
    int findBinarySearch(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> findBinarySearch
    int findLinearSearch(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> findLinearSearch
    void remove(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> remove
    void initializeFromBuffer(long,int,int) -> initializeFromBuffer
    void copyFromArray(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray) -> copyFromArray
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray$less -> com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray$less:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray$less) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray -> com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int size() -> size
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject at(int) -> at
    void clear() -> clear
    void pop_back() -> pop_back
    void resizeNoInitialize(int) -> resizeNoInitialize
    void resize(int,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> resize
    void resize(int) -> resize
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject expandNonInitializing() -> expandNonInitializing
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject expand(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> expand
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject expand() -> expand
    void push_back(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> push_back
    int capacity() -> capacity
    void reserve(int) -> reserve
    void swap(int,int) -> swap
    int findBinarySearch(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> findBinarySearch
    int findLinearSearch(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> findLinearSearch
    void remove(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> remove
    void initializeFromBuffer(long,int,int) -> initializeFromBuffer
    void copyFromArray(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray) -> copyFromArray
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray$less -> com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray$less:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray$less) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData -> com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setBroadphaseHandle(long) -> setBroadphaseHandle
    long getBroadphaseHandle() -> getBroadphaseHandle
    void setCollisionShape(long) -> setCollisionShape
    long getCollisionShape() -> getCollisionShape
    void setRootCollisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> setRootCollisionShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData getRootCollisionShape() -> getRootCollisionShape
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> setWorldTransform
    com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getWorldTransform() -> getWorldTransform
    void setInterpolationWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> setInterpolationWorldTransform
    com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getInterpolationWorldTransform() -> getInterpolationWorldTransform
    void setInterpolationLinearVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setInterpolationLinearVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getInterpolationLinearVelocity() -> getInterpolationLinearVelocity
    void setInterpolationAngularVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setInterpolationAngularVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getInterpolationAngularVelocity() -> getInterpolationAngularVelocity
    void setAnisotropicFriction(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setAnisotropicFriction
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getAnisotropicFriction() -> getAnisotropicFriction
    void setContactProcessingThreshold(double) -> setContactProcessingThreshold
    double getContactProcessingThreshold() -> getContactProcessingThreshold
    void setDeactivationTime(double) -> setDeactivationTime
    double getDeactivationTime() -> getDeactivationTime
    void setFriction(double) -> setFriction
    double getFriction() -> getFriction
    void setRollingFriction(double) -> setRollingFriction
    double getRollingFriction() -> getRollingFriction
    void setRestitution(double) -> setRestitution
    double getRestitution() -> getRestitution
    void setHitFraction(double) -> setHitFraction
    double getHitFraction() -> getHitFraction
    void setCcdSweptSphereRadius(double) -> setCcdSweptSphereRadius
    double getCcdSweptSphereRadius() -> getCcdSweptSphereRadius
    void setCcdMotionThreshold(double) -> setCcdMotionThreshold
    double getCcdMotionThreshold() -> getCcdMotionThreshold
    void setHasAnisotropicFriction(int) -> setHasAnisotropicFriction
    int getHasAnisotropicFriction() -> getHasAnisotropicFriction
    void setCollisionFlags(int) -> setCollisionFlags
    int getCollisionFlags() -> getCollisionFlags
    void setIslandTag1(int) -> setIslandTag1
    int getIslandTag1() -> getIslandTag1
    void setCompanionId(int) -> setCompanionId
    int getCompanionId() -> getCompanionId
    void setActivationState1(int) -> setActivationState1
    int getActivationState1() -> getActivationState1
    void setInternalType(int) -> setInternalType
    int getInternalType() -> getInternalType
    void setCheckCollideWith(int) -> setCheckCollideWith
    int getCheckCollideWith() -> getCheckCollideWith
    void setPadding(java.lang.String) -> setPadding
    java.lang.String getPadding() -> getPadding
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData -> com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setBroadphaseHandle(long) -> setBroadphaseHandle
    long getBroadphaseHandle() -> getBroadphaseHandle
    void setCollisionShape(long) -> setCollisionShape
    long getCollisionShape() -> getCollisionShape
    void setRootCollisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> setRootCollisionShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData getRootCollisionShape() -> getRootCollisionShape
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> setWorldTransform
    com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getWorldTransform() -> getWorldTransform
    void setInterpolationWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> setInterpolationWorldTransform
    com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getInterpolationWorldTransform() -> getInterpolationWorldTransform
    void setInterpolationLinearVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setInterpolationLinearVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getInterpolationLinearVelocity() -> getInterpolationLinearVelocity
    void setInterpolationAngularVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setInterpolationAngularVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getInterpolationAngularVelocity() -> getInterpolationAngularVelocity
    void setAnisotropicFriction(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setAnisotropicFriction
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAnisotropicFriction() -> getAnisotropicFriction
    void setContactProcessingThreshold(float) -> setContactProcessingThreshold
    float getContactProcessingThreshold() -> getContactProcessingThreshold
    void setDeactivationTime(float) -> setDeactivationTime
    float getDeactivationTime() -> getDeactivationTime
    void setFriction(float) -> setFriction
    float getFriction() -> getFriction
    void setRollingFriction(float) -> setRollingFriction
    float getRollingFriction() -> getRollingFriction
    void setRestitution(float) -> setRestitution
    float getRestitution() -> getRestitution
    void setHitFraction(float) -> setHitFraction
    float getHitFraction() -> getHitFraction
    void setCcdSweptSphereRadius(float) -> setCcdSweptSphereRadius
    float getCcdSweptSphereRadius() -> getCcdSweptSphereRadius
    void setCcdMotionThreshold(float) -> setCcdMotionThreshold
    float getCcdMotionThreshold() -> getCcdMotionThreshold
    void setHasAnisotropicFriction(int) -> setHasAnisotropicFriction
    int getHasAnisotropicFriction() -> getHasAnisotropicFriction
    void setCollisionFlags(int) -> setCollisionFlags
    int getCollisionFlags() -> getCollisionFlags
    void setIslandTag1(int) -> setIslandTag1
    int getIslandTag1() -> getIslandTag1
    void setCompanionId(int) -> setCompanionId
    int getCompanionId() -> getCompanionId
    void setActivationState1(int) -> setActivationState1
    int getActivationState1() -> getActivationState1
    void setInternalType(int) -> setInternalType
    int getInternalType() -> getInternalType
    void setCheckCollideWith(int) -> setCheckCollideWith
    int getCheckCollideWith() -> getCheckCollideWith
    void setPadding(java.lang.String) -> setPadding
    java.lang.String getPadding() -> getPadding
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper -> com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper:
    long swigCPtr -> swigCPtr
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper temp -> temp
    com.badlogic.gdx.utils.Pool pool -> pool
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> getCPtr
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper internalTemp(long,boolean) -> internalTemp
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper obtain(long,boolean) -> obtain
    void free(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> free
    void finalize() -> finalize
    void setParent(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> setParent
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper getParent() -> getParent
    void setShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> setShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape getShape() -> getShape
    void setCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> setCollisionObject
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getCollisionObject() -> getCollisionObject
    com.badlogic.gdx.math.Matrix4 getWorldTransform() -> getWorldTransform
    void setPartId(int) -> setPartId
    int getPartId() -> getPartId
    void setIndex(int) -> setIndex
    int getIndex() -> getIndex
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape getCollisionShape() -> getCollisionShape
com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper$1 -> com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper$1:
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.collision.btCollisionShape -> com.badlogic.gdx.physics.bullet.collision.btCollisionShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape newDerivedObject(long,boolean) -> newDerivedObject
    void getAabb(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getAabb
    void getBoundingSphere(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float) -> getBoundingSphere
    float getAngularMotionDisc() -> getAngularMotionDisc
    float getContactBreakingThreshold(float) -> getContactBreakingThreshold
    void calculateTemporalAabb(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> calculateTemporalAabb
    boolean isPolyhedral() -> isPolyhedral
    boolean isConvex2d() -> isConvex2d
    boolean isConvex() -> isConvex
    boolean isNonMoving() -> isNonMoving
    boolean isConcave() -> isConcave
    boolean isCompound() -> isCompound
    boolean isSoftBody() -> isSoftBody
    boolean isInfinite() -> isInfinite
    void setLocalScaling(com.badlogic.gdx.math.Vector3) -> setLocalScaling
    com.badlogic.gdx.math.Vector3 getLocalScaling() -> getLocalScaling
    void calculateLocalInertia(float,com.badlogic.gdx.math.Vector3) -> calculateLocalInertia
    java.lang.String getName() -> getName
    int getShapeType() -> getShapeType
    com.badlogic.gdx.math.Vector3 getAnisotropicRollingFrictionDirection() -> getAnisotropicRollingFrictionDirection
    void setMargin(float) -> setMargin
    float getMargin() -> getMargin
    void setUserPointer(long) -> setUserPointer
    long getUserPointer() -> getUserPointer
    int calculateSerializeBufferSize() -> calculateSerializeBufferSize
    java.lang.String serialize(long,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer) -> serialize
    void serializeSingleShape(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer) -> serializeSingleShape
com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData -> com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setShapeType(int) -> setShapeType
    int getShapeType() -> getShapeType
    void setPadding(java.lang.String) -> setPadding
    java.lang.String getPadding() -> getPadding
com.badlogic.gdx.physics.bullet.collision.btCollisionWorld -> com.badlogic.gdx.physics.bullet.collision.btCollisionWorld:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setBroadphase(com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface) -> setBroadphase
    com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface getBroadphase() -> getBroadphase
    com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getPairCache() -> getPairCache
    com.badlogic.gdx.physics.bullet.collision.btDispatcher getDispatcher() -> getDispatcher
    void updateSingleAabb(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> updateSingleAabb
    void updateAabbs() -> updateAabbs
    void computeOverlappingPairs() -> computeOverlappingPairs
    void setDebugDrawer(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> setDebugDrawer
    com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw getDebugDrawer() -> getDebugDrawer
    void debugDrawWorld() -> debugDrawWorld
    void debugDrawObject(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3) -> debugDrawObject
    int getNumCollisionObjects() -> getNumCollisionObjects
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> rayTest
    void convexSweepTest(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float) -> convexSweepTest
    void convexSweepTest(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback) -> convexSweepTest
    void contactTest(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback) -> contactTest
    void contactPairTest(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.ContactResultCallback) -> contactPairTest
    void rayTestSingle(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> rayTestSingle
    void rayTestSingleInternal(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> rayTestSingleInternal
    void objectQuerySingle(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float) -> objectQuerySingle
    void objectQuerySingleInternal(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float) -> objectQuerySingleInternal
    void addCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short,short) -> addCollisionObject
    void addCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short) -> addCollisionObject
    void addCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> addCollisionObject
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray getCollisionObjectArray() -> getCollisionObjectArray
    void removeCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> removeCollisionObject
    void performDiscreteCollisionDetection() -> performDiscreteCollisionDetection
    com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo getDispatchInfo() -> getDispatchInfo
    boolean getForceUpdateAllAabbs() -> getForceUpdateAllAabbs
    void setForceUpdateAllAabbs(boolean) -> setForceUpdateAllAabbs
    void serialize(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer) -> serialize
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm -> com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm getChildAlgorithm(int) -> getChildAlgorithm
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$CreateFunc -> com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$CreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$CreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$SwappedCreateFunc -> com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$SwappedCreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundCollisionAlgorithm$SwappedCreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm -> com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc -> com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$CreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> CreateCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc -> com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundCompoundCollisionAlgorithm$SwappedCreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> CreateCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btCompoundShape -> com.badlogic.gdx.physics.bullet.collision.btCompoundShape:
    long swigCPtr -> swigCPtr
    com.badlogic.gdx.utils.Array children -> children
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void addChildShape(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> addChildShape
    void removeChildShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> removeChildShape
    void removeChildShapeByIndex(int) -> removeChildShapeByIndex
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape getChildShape(int) -> getChildShape
    void dispose() -> dispose
    void internalAddChildShape(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> internalAddChildShape
    void internalRemoveChildShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> internalRemoveChildShape
    void internalRemoveChildShapeByIndex(int) -> internalRemoveChildShapeByIndex
    int getNumChildShapes() -> getNumChildShapes
    com.badlogic.gdx.math.Matrix4 getChildTransform(int) -> getChildTransform
    void updateChildTransform(int,com.badlogic.gdx.math.Matrix4,boolean) -> updateChildTransform
    void updateChildTransform(int,com.badlogic.gdx.math.Matrix4) -> updateChildTransform
    com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild getChildList() -> getChildList
    void recalculateLocalAabb() -> recalculateLocalAabb
    com.badlogic.gdx.physics.bullet.collision.btDbvt getDynamicAabbTree() -> getDynamicAabbTree
    void createAabbTreeFromChildren() -> createAabbTreeFromChildren
    void calculatePrincipalAxisTransform(java.nio.FloatBuffer,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3) -> calculatePrincipalAxisTransform
    int getUpdateRevision() -> getUpdateRevision
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild -> com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChild) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setTransform
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getTransform() -> getTransform
    void setChildShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> setChildShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape getChildShape() -> getChildShape
    void setChildShapeType(int) -> setChildShapeType
    int getChildShapeType() -> getChildShapeType
    void setChildMargin(float) -> setChildMargin
    float getChildMargin() -> getChildMargin
    void setNode(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> setNode
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode getNode() -> getNode
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData -> com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> setTransform
    com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getTransform() -> getTransform
    void setChildShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> setChildShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData getChildShape() -> getChildShape
    void setChildShapeType(int) -> setChildShapeType
    int getChildShapeType() -> getChildShapeType
    void setChildMargin(float) -> setChildMargin
    float getChildMargin() -> getChildMargin
com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData -> com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCompoundShapeData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setCollisionShapeData(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> setCollisionShapeData
    com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData getCollisionShapeData() -> getCollisionShapeData
    void setChildShapePtr(com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData) -> setChildShapePtr
    com.badlogic.gdx.physics.bullet.collision.btCompoundShapeChildData getChildShapePtr() -> getChildShapePtr
    void setNumChildShapes(int) -> setNumChildShapes
    int getNumChildShapes() -> getNumChildShapes
    void setCollisionMargin(float) -> setCollisionMargin
    float getCollisionMargin() -> getCollisionMargin
com.badlogic.gdx.physics.bullet.collision.btConcaveShape -> com.badlogic.gdx.physics.bullet.collision.btConcaveShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConcaveShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void processAllTriangles(com.badlogic.gdx.physics.bullet.collision.btTriangleCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> processAllTriangles
com.badlogic.gdx.physics.bullet.collision.btConeShape -> com.badlogic.gdx.physics.bullet.collision.btConeShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConeShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    float getRadius() -> getRadius
    float getHeight() -> getHeight
    void setConeUpIndex(int) -> setConeUpIndex
    int getConeUpIndex() -> getConeUpIndex
com.badlogic.gdx.physics.bullet.collision.btConeShapeData -> com.badlogic.gdx.physics.bullet.collision.btConeShapeData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConeShapeData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setConvexInternalShapeData(com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> setConvexInternalShapeData
    com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData getConvexInternalShapeData() -> getConvexInternalShapeData
    void setUpIndex(int) -> setUpIndex
    int getUpIndex() -> getUpIndex
    void setPadding(java.lang.String) -> setPadding
    java.lang.String getPadding() -> getPadding
com.badlogic.gdx.physics.bullet.collision.btConeShapeX -> com.badlogic.gdx.physics.bullet.collision.btConeShapeX:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConeShapeX) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btConeShapeZ -> com.badlogic.gdx.physics.bullet.collision.btConeShapeZ:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConeShapeZ) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btConstraintRow -> com.badlogic.gdx.physics.bullet.collision.btConstraintRow:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConstraintRow) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setNormal(float[]) -> setNormal
    float[] getNormal() -> getNormal
    void setRhs(float) -> setRhs
    float getRhs() -> getRhs
    void setJacDiagInv(float) -> setJacDiagInv
    float getJacDiagInv() -> getJacDiagInv
    void setLowerLimit(float) -> setLowerLimit
    float getLowerLimit() -> getLowerLimit
    void setUpperLimit(float) -> setUpperLimit
    float getUpperLimit() -> getUpperLimit
    void setAccumImpulse(float) -> setAccumImpulse
    float getAccumImpulse() -> getAccumImpulse
com.badlogic.gdx.physics.bullet.collision.btContactManifoldTypes -> com.badlogic.gdx.physics.bullet.collision.btContactManifoldTypes:
    int MIN_CONTACT_MANIFOLD_TYPE -> MIN_CONTACT_MANIFOLD_TYPE
    int BT_PERSISTENT_MANIFOLD_TYPE -> BT_PERSISTENT_MANIFOLD_TYPE
com.badlogic.gdx.physics.bullet.collision.btContinuousConvexCollision -> com.badlogic.gdx.physics.bullet.collision.btContinuousConvexCollision:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btContinuousConvexCollision) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm -> com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setLowLevelOfDetail(boolean) -> setLowLevelOfDetail
    com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getManifold() -> getManifold
com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc -> com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvex2dConvex2dAlgorithm$CreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setPdSolver(com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver) -> setPdSolver
    com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver getPdSolver() -> getPdSolver
    void setSimplexSolver(com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> setSimplexSolver
    com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver getSimplexSolver() -> getSimplexSolver
    void setNumPerturbationIterations(int) -> setNumPerturbationIterations
    int getNumPerturbationIterations() -> getNumPerturbationIterations
    void setMinimumPointsPerturbationThreshold(int) -> setMinimumPointsPerturbationThreshold
    int getMinimumPointsPerturbationThreshold() -> getMinimumPointsPerturbationThreshold
com.badlogic.gdx.physics.bullet.collision.btConvex2dShape -> com.badlogic.gdx.physics.bullet.collision.btConvex2dShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvex2dShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btConvexShape getChildShape() -> getChildShape
com.badlogic.gdx.physics.bullet.collision.btConvexCast -> com.badlogic.gdx.physics.bullet.collision.btConvexCast:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexCast) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    boolean calcTimeOfImpact(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult) -> calcTimeOfImpact
com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult -> com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexCast$CastResult) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void DebugDraw(float) -> DebugDraw
    void drawCoordSystem(com.badlogic.gdx.math.Matrix4) -> drawCoordSystem
    void reportFailure(int,int) -> reportFailure
    void setHitTransformA(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setHitTransformA
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getHitTransformA() -> getHitTransformA
    void setHitTransformB(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setHitTransformB
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getHitTransformB() -> getHitTransformB
    void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setNormal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormal() -> getNormal
    void setHitPoint(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setHitPoint
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitPoint() -> getHitPoint
    void setFraction(float) -> setFraction
    float getFraction() -> getFraction
    void setDebugDrawer(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> setDebugDrawer
    com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw getDebugDrawer() -> getDebugDrawer
    void setAllowedPenetration(float) -> setAllowedPenetration
    float getAllowedPenetration() -> getAllowedPenetration
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm -> com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void clearCache() -> clearCache
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc -> com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$CreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> CreateCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc -> com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexConcaveCollisionAlgorithm$SwappedCreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> CreateCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm -> com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setLowLevelOfDetail(boolean) -> setLowLevelOfDetail
    com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getManifold() -> getManifold
com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc -> com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexConvexAlgorithm$CreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setPdSolver(com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver) -> setPdSolver
    com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver getPdSolver() -> getPdSolver
    void setSimplexSolver(com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> setSimplexSolver
    com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver getSimplexSolver() -> getSimplexSolver
    void setNumPerturbationIterations(int) -> setNumPerturbationIterations
    int getNumPerturbationIterations() -> getNumPerturbationIterations
    void setMinimumPointsPerturbationThreshold(int) -> setMinimumPointsPerturbationThreshold
    int getMinimumPointsPerturbationThreshold() -> getMinimumPointsPerturbationThreshold
com.badlogic.gdx.physics.bullet.collision.btConvexHullShape -> com.badlogic.gdx.physics.bullet.collision.btConvexHullShape:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexHullShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    long SwigConstructbtConvexHullShape(java.nio.FloatBuffer,int,int) -> SwigConstructbtConvexHullShape
    long SwigConstructbtConvexHullShape(java.nio.FloatBuffer,int) -> SwigConstructbtConvexHullShape
    long SwigConstructbtConvexHullShape(java.nio.FloatBuffer) -> SwigConstructbtConvexHullShape
    void addPoint(com.badlogic.gdx.math.Vector3,boolean) -> addPoint
    void addPoint(com.badlogic.gdx.math.Vector3) -> addPoint
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getUnscaledPoints() -> getUnscaledPoints
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getPoints() -> getPoints
    com.badlogic.gdx.math.Vector3 getScaledPoint(int) -> getScaledPoint
    int getNumPoints() -> getNumPoints
    void project(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> project
com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData -> com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexHullShapeData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setConvexInternalShapeData(com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> setConvexInternalShapeData
    com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData getConvexInternalShapeData() -> getConvexInternalShapeData
    void setUnscaledPointsFloatPtr(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setUnscaledPointsFloatPtr
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getUnscaledPointsFloatPtr() -> getUnscaledPointsFloatPtr
    void setUnscaledPointsDoublePtr(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setUnscaledPointsDoublePtr
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getUnscaledPointsDoublePtr() -> getUnscaledPointsDoublePtr
    void setNumUnscaledPoints(int) -> setNumUnscaledPoints
    int getNumUnscaledPoints() -> getNumUnscaledPoints
    void setPadding3(java.lang.String) -> setPadding3
    java.lang.String getPadding3() -> getPadding3
com.badlogic.gdx.physics.bullet.collision.btConvexInternalAabbCachingShape -> com.badlogic.gdx.physics.bullet.collision.btConvexInternalAabbCachingShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexInternalAabbCachingShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void recalcLocalAabb() -> recalcLocalAabb
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape -> com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexInternalShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.math.Vector3 getImplicitShapeDimensions() -> getImplicitShapeDimensions
    void setImplicitShapeDimensions(com.badlogic.gdx.math.Vector3) -> setImplicitShapeDimensions
    void setSafeMargin(float,float) -> setSafeMargin
    void setSafeMargin(float) -> setSafeMargin
    void setSafeMargin(com.badlogic.gdx.math.Vector3,float) -> setSafeMargin
    void setSafeMargin(com.badlogic.gdx.math.Vector3) -> setSafeMargin
    com.badlogic.gdx.math.Vector3 getLocalScalingNV() -> getLocalScalingNV
    float getMarginNV() -> getMarginNV
com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData -> com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setCollisionShapeData(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> setCollisionShapeData
    com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData getCollisionShapeData() -> getCollisionShapeData
    void setLocalScaling(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setLocalScaling
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLocalScaling() -> getLocalScaling
    void setImplicitShapeDimensions(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setImplicitShapeDimensions
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getImplicitShapeDimensions() -> getImplicitShapeDimensions
    void setCollisionMargin(float) -> setCollisionMargin
    float getCollisionMargin() -> getCollisionMargin
    void setPadding(int) -> setPadding
    int getPadding() -> getPadding
com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver -> com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    boolean calcPenDepth(com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> calcPenDepth
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm -> com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void collideSingleContact(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> collideSingleContact
com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc -> com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexPlaneCollisionAlgorithm$CreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setNumPerturbationIterations(int) -> setNumPerturbationIterations
    int getNumPerturbationIterations() -> getNumPerturbationIterations
    void setMinimumPointsPerturbationThreshold(int) -> setMinimumPointsPerturbationThreshold
    int getMinimumPointsPerturbationThreshold() -> getMinimumPointsPerturbationThreshold
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> CreateCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape -> com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexPointCloudShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setPoints(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,boolean,com.badlogic.gdx.math.Vector3) -> setPoints
    void setPoints(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,boolean) -> setPoints
    void setPoints(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int) -> setPoints
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getUnscaledPoints() -> getUnscaledPoints
    int getNumPoints() -> getNumPoints
    com.badlogic.gdx.math.Vector3 getScaledPoint(int) -> getScaledPoint
com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron -> com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setVertices(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> setVertices
    com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getVertices() -> getVertices
    void setFaces(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btFace_t) -> setFaces
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btFace_t getFaces() -> getFaces
    void setUniqueEdges(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> setUniqueEdges
    com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getUniqueEdges() -> getUniqueEdges
    void setLocalCenter(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setLocalCenter
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLocalCenter() -> getLocalCenter
    void setExtents(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setExtents
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getExtents() -> getExtents
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setMC(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setMC
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getMC() -> getMC
    void setME(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setME
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getME() -> getME
    void initialize() -> initialize
    boolean testContainment() -> testContainment
    void project(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> project
com.badlogic.gdx.physics.bullet.collision.btConvexShape -> com.badlogic.gdx.physics.bullet.collision.btConvexShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.math.Vector3 localGetSupportingVertex(com.badlogic.gdx.math.Vector3) -> localGetSupportingVertex
    com.badlogic.gdx.math.Vector3 localGetSupportingVertexWithoutMargin(com.badlogic.gdx.math.Vector3) -> localGetSupportingVertexWithoutMargin
    com.badlogic.gdx.math.Vector3 localGetSupportVertexWithoutMarginNonVirtual(com.badlogic.gdx.math.Vector3) -> localGetSupportVertexWithoutMarginNonVirtual
    com.badlogic.gdx.math.Vector3 localGetSupportVertexNonVirtual(com.badlogic.gdx.math.Vector3) -> localGetSupportVertexNonVirtual
    float getMarginNonVirtual() -> getMarginNonVirtual
    void getAabbNonVirtual(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getAabbNonVirtual
    void project(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float) -> project
    void batchedUnitVectorGetSupportingVertexWithoutMargin(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int) -> batchedUnitVectorGetSupportingVertexWithoutMargin
    void getAabbSlow(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getAabbSlow
    int getNumPreferredPenetrationDirections() -> getNumPreferredPenetrationDirections
    void getPreferredPenetrationDirection(int,com.badlogic.gdx.math.Vector3) -> getPreferredPenetrationDirection
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback -> com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexTriangleCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void setTriangleCount(int) -> setTriangleCount
    int getTriangleCount() -> getTriangleCount
    void setManifoldPtr(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> setManifoldPtr
    com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getManifoldPtr() -> getManifoldPtr
    void setTimeStepAndCounters(float,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> setTimeStepAndCounters
    void clearWrapperData() -> clearWrapperData
    void processTriangle(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int) -> processTriangle
    void clearCache() -> clearCache
    com.badlogic.gdx.math.Vector3 getAabbMin() -> getAabbMin
    com.badlogic.gdx.math.Vector3 getAabbMax() -> getAabbMax
com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape -> com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btConvexTriangleMeshShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface getMeshInterface() -> getMeshInterface
    void calculatePrincipalAxisTransform(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float) -> calculatePrincipalAxisTransform
com.badlogic.gdx.physics.bullet.collision.btCylinderShape -> com.badlogic.gdx.physics.bullet.collision.btCylinderShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCylinderShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.math.Vector3 getHalfExtentsWithMargin() -> getHalfExtentsWithMargin
    com.badlogic.gdx.math.Vector3 getHalfExtentsWithoutMargin() -> getHalfExtentsWithoutMargin
    int getUpAxis() -> getUpAxis
    float getRadius() -> getRadius
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData -> com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCylinderShapeData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setConvexInternalShapeData(com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> setConvexInternalShapeData
    com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData getConvexInternalShapeData() -> getConvexInternalShapeData
    void setUpAxis(int) -> setUpAxis
    int getUpAxis() -> getUpAxis
    void setPadding(java.lang.String) -> setPadding
    java.lang.String getPadding() -> getPadding
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeX -> com.badlogic.gdx.physics.bullet.collision.btCylinderShapeX:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCylinderShapeX) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btCylinderShapeZ -> com.badlogic.gdx.physics.bullet.collision.btCylinderShapeZ:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btCylinderShapeZ) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btDbvt -> com.badlogic.gdx.physics.bullet.collision.btDbvt:
    long swigCPtr -> swigCPtr
    int SIMPLE_STACKSIZE -> SIMPLE_STACKSIZE
    int DOUBLE_STACKSIZE -> DOUBLE_STACKSIZE
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setRoot(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> setRoot
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode getRoot() -> getRoot
    void setFree(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> setFree
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode getFree() -> getFree
    void setLkhd(int) -> setLkhd
    int getLkhd() -> getLkhd
    void setLeaves(int) -> setLeaves
    int getLeaves() -> getLeaves
    void setOpath(long) -> setOpath
    long getOpath() -> getOpath
    void setStkStack(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t) -> setStkStack
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNN_t getStkStack() -> getStkStack
    void setRayTestStack(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t) -> setRayTestStack
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t getRayTestStack() -> getRayTestStack
    void clear() -> clear
    boolean empty() -> empty
    void optimizeBottomUp() -> optimizeBottomUp
    void optimizeTopDown(int) -> optimizeTopDown
    void optimizeTopDown() -> optimizeTopDown
    void optimizeIncremental(int) -> optimizeIncremental
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode insert(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,long) -> insert
    void update(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int) -> update
    void update(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> update
    void update(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> update
    boolean update(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3,float) -> update
    boolean update(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.math.Vector3) -> update
    boolean update(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,float) -> update
    void remove(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> remove
    void write(com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter) -> write
    void clone(com.badlogic.gdx.physics.bullet.collision.btDbvt,com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone) -> clone
    void clone(com.badlogic.gdx.physics.bullet.collision.btDbvt) -> clone
    int maxdepth(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> maxdepth
    int countLeaves(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> countLeaves
    void extractLeaves(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvtNode_const_p_t) -> extractLeaves
    void benchmark() -> benchmark
    void enumNodes(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> enumNodes
    void enumLeaves(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> enumLeaves
    void collideTT(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> collideTT
    void collideTTpersistentStack(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> collideTTpersistentStack
    void collideTV(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> collideTV
    void rayTest(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> rayTest
    void rayTestInternal(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long[],float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> rayTestInternal
    void collideKDOP(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,int,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> collideKDOP
    void collideOCL(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,com.badlogic.gdx.math.Vector3,int,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide,boolean) -> collideOCL
    void collideOCL(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,com.badlogic.gdx.math.Vector3,int,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> collideOCL
    void collideTU(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> collideTU
    int nearest(java.nio.IntBuffer,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS,float,int,int) -> nearest
    int allocate(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_int_t,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btDbvt__sStkNPS_t,com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS) -> allocate
com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone -> com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt$IClone) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void CloneLeaf(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> CloneLeaf
com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide -> com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt$ICollide) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void Process(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> Process
    void Process(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> Process
    void Process(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,float) -> Process
    boolean Descent(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> Descent
    boolean AllLeaves(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> AllLeaves
com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter -> com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt$IWriter) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void Prepare(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int) -> Prepare
    void WriteNode(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int,int,int,int) -> WriteNode
    void WriteLeaf(com.badlogic.gdx.physics.bullet.collision.btDbvtNode,int,int) -> WriteLeaf
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN -> com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkCLN) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setNode(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> setNode
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode getNode() -> getNode
    void setParent(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> setParent
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode getParent() -> getParent
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN -> com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNN) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setA(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> setA
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode getA() -> getA
    void setB(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> setB
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode getB() -> getB
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP -> com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNP) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setNode(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> setNode
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode getNode() -> getNode
    void setMask(int) -> setMask
    int getMask() -> getMask
com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS -> com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvt$sStkNPS) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setNode(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> setNode
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode getNode() -> getNode
    void setMask(int) -> setMask
    int getMask() -> getMask
    void setValue(float) -> setValue
    float getValue() -> getValue
com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm -> com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.math.Vector3 Center() -> Center
    com.badlogic.gdx.math.Vector3 Lengths() -> Lengths
    com.badlogic.gdx.math.Vector3 Extents() -> Extents
    com.badlogic.gdx.math.Vector3 Mins() -> Mins
    com.badlogic.gdx.math.Vector3 Maxs() -> Maxs
    com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm FromCE(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> FromCE
    com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm FromCR(com.badlogic.gdx.math.Vector3,float) -> FromCR
    com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm FromMM(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> FromMM
    com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm FromPoints(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int) -> FromPoints
    com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm FromPoints(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btVector3,int) -> FromPoints
    void Expand(com.badlogic.gdx.math.Vector3) -> Expand
    void SignedExpand(com.badlogic.gdx.math.Vector3) -> SignedExpand
    boolean Contain(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> Contain
    int Classify(com.badlogic.gdx.math.Vector3,float,int) -> Classify
    float ProjectMinimum(com.badlogic.gdx.math.Vector3,long) -> ProjectMinimum
    com.badlogic.gdx.math.Vector3 tMins() -> tMins
    com.badlogic.gdx.math.Vector3 tMaxs() -> tMaxs
com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase -> com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase:
    long swigCPtr -> swigCPtr
    int DYNAMIC_SET -> DYNAMIC_SET
    int FIXED_SET -> FIXED_SET
    int STAGECOUNT -> STAGECOUNT
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvtBroadphase) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setSets(com.badlogic.gdx.physics.bullet.collision.btDbvt) -> setSets
    com.badlogic.gdx.physics.bullet.collision.btDbvt getSets() -> getSets
    void setStageRoots(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy) -> setStageRoots
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy getStageRoots() -> getStageRoots
    void setPaircache(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache) -> setPaircache
    com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getPaircache() -> getPaircache
    void setPrediction(float) -> setPrediction
    float getPrediction() -> getPrediction
    void setStageCurrent(int) -> setStageCurrent
    int getStageCurrent() -> getStageCurrent
    void setFupdates(int) -> setFupdates
    int getFupdates() -> getFupdates
    void setDupdates(int) -> setDupdates
    int getDupdates() -> getDupdates
    void setCupdates(int) -> setCupdates
    int getCupdates() -> getCupdates
    void setNewpairs(int) -> setNewpairs
    int getNewpairs() -> getNewpairs
    void setFixedleft(int) -> setFixedleft
    int getFixedleft() -> getFixedleft
    void setUpdates_call(long) -> setUpdates_call
    long getUpdates_call() -> getUpdates_call
    void setUpdates_done(long) -> setUpdates_done
    long getUpdates_done() -> getUpdates_done
    void setUpdates_ratio(float) -> setUpdates_ratio
    float getUpdates_ratio() -> getUpdates_ratio
    void setPid(int) -> setPid
    int getPid() -> getPid
    void setCid(int) -> setCid
    int getCid() -> getCid
    void setGid(int) -> setGid
    int getGid() -> getGid
    void setReleasepaircache(boolean) -> setReleasepaircache
    boolean getReleasepaircache() -> getReleasepaircache
    void setDeferedcollide(boolean) -> setDeferedcollide
    boolean getDeferedcollide() -> getDeferedcollide
    void setNeedcleanup(boolean) -> setNeedcleanup
    boolean getNeedcleanup() -> getNeedcleanup
    void collide(com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> collide
    void optimize() -> optimize
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rayTest
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3) -> rayTest
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> rayTest
    com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getOverlappingPairCache() -> getOverlappingPairCache
    void performDeferredRemoval(com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> performDeferredRemoval
    void setVelocityPrediction(float) -> setVelocityPrediction
    float getVelocityPrediction() -> getVelocityPrediction
    void setAabbForceUpdate(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> setAabbForceUpdate
    void benchmark(com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface) -> benchmark
com.badlogic.gdx.physics.bullet.collision.btDbvtNode -> com.badlogic.gdx.physics.bullet.collision.btDbvtNode:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setVolume(com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm) -> setVolume
    com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm getVolume() -> getVolume
    void setParent(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> setParent
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode getParent() -> getParent
    boolean isleaf() -> isleaf
    boolean isinternal() -> isinternal
    void setChilds(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtNode) -> setChilds
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtNode getChilds() -> getChilds
    void setData(long) -> setData
    long getData() -> getData
    void setDataAsInt(int) -> setDataAsInt
    int getDataAsInt() -> getDataAsInt
com.badlogic.gdx.physics.bullet.collision.btDbvtProxy -> com.badlogic.gdx.physics.bullet.collision.btDbvtProxy:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDbvtProxy) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setLeaf(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> setLeaf
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode getLeaf() -> getLeaf
    void setLinks(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy) -> setLinks
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btDbvtProxy getLinks() -> getLinks
    void setStage(int) -> setStage
    int getStage() -> getStage
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration -> com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConfiguration) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver getSimplexSolver() -> getSimplexSolver
    void setConvexConvexMultipointIterations(int,int) -> setConvexConvexMultipointIterations
    void setConvexConvexMultipointIterations(int) -> setConvexConvexMultipointIterations
    void setConvexConvexMultipointIterations() -> setConvexConvexMultipointIterations
    void setPlaneConvexMultipointIterations(int,int) -> setPlaneConvexMultipointIterations
    void setPlaneConvexMultipointIterations(int) -> setPlaneConvexMultipointIterations
    void setPlaneConvexMultipointIterations() -> setPlaneConvexMultipointIterations
com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo -> com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setPersistentManifoldPool(com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator) -> setPersistentManifoldPool
    com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator getPersistentManifoldPool() -> getPersistentManifoldPool
    void setCollisionAlgorithmPool(com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator) -> setCollisionAlgorithmPool
    com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator getCollisionAlgorithmPool() -> getCollisionAlgorithmPool
    void setDefaultMaxPersistentManifoldPoolSize(int) -> setDefaultMaxPersistentManifoldPoolSize
    int getDefaultMaxPersistentManifoldPoolSize() -> getDefaultMaxPersistentManifoldPoolSize
    void setDefaultMaxCollisionAlgorithmPoolSize(int) -> setDefaultMaxCollisionAlgorithmPoolSize
    int getDefaultMaxCollisionAlgorithmPoolSize() -> getDefaultMaxCollisionAlgorithmPoolSize
    void setCustomCollisionAlgorithmMaxElementSize(int) -> setCustomCollisionAlgorithmMaxElementSize
    int getCustomCollisionAlgorithmMaxElementSize() -> getCustomCollisionAlgorithmMaxElementSize
    void setUseEpaPenetrationAlgorithm(int) -> setUseEpaPenetrationAlgorithm
    int getUseEpaPenetrationAlgorithm() -> getUseEpaPenetrationAlgorithm
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface -> com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean) -> getClosestPoints
    void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> getClosestPoints
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput -> com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTransformA(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setTransformA
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getTransformA() -> getTransformA
    void setTransformB(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setTransformB
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getTransformB() -> getTransformB
    void setMaximumDistanceSquared(float) -> setMaximumDistanceSquared
    float getMaximumDistanceSquared() -> getMaximumDistanceSquared
com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result -> com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setShapeIdentifiersA(int,int) -> setShapeIdentifiersA
    void setShapeIdentifiersB(int,int) -> setShapeIdentifiersB
    void addContactPoint(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> addContactPoint
com.badlogic.gdx.physics.bullet.collision.btDispatcher -> com.badlogic.gdx.physics.bullet.collision.btDispatcher:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm findAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> findAlgorithm
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm findAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> findAlgorithm
    com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getNewManifold(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> getNewManifold
    void releaseManifold(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> releaseManifold
    void clearManifold(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> clearManifold
    boolean needsCollision(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> needsCollision
    boolean needsResponse(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> needsResponse
    void dispatchAllCollisionPairs(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> dispatchAllCollisionPairs
    int getNumManifolds() -> getNumManifolds
    com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getManifoldByIndexInternal(int) -> getManifoldByIndexInternal
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold getInternalManifoldPointer() -> getInternalManifoldPointer
    com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator getInternalManifoldPool() -> getInternalManifoldPool
    long allocateCollisionAlgorithm(int) -> allocateCollisionAlgorithm
    void freeCollisionAlgorithm(long) -> freeCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo -> com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTimeStep(float) -> setTimeStep
    float getTimeStep() -> getTimeStep
    void setStepCount(int) -> setStepCount
    int getStepCount() -> getStepCount
    void setDispatchFunc(int) -> setDispatchFunc
    int getDispatchFunc() -> getDispatchFunc
    void setTimeOfImpact(float) -> setTimeOfImpact
    float getTimeOfImpact() -> getTimeOfImpact
    void setUseContinuous(boolean) -> setUseContinuous
    boolean getUseContinuous() -> getUseContinuous
    void setDebugDraw(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> setDebugDraw
    com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw getDebugDraw() -> getDebugDraw
    void setEnableSatConvex(boolean) -> setEnableSatConvex
    boolean getEnableSatConvex() -> getEnableSatConvex
    void setEnableSPU(boolean) -> setEnableSPU
    boolean getEnableSPU() -> getEnableSPU
    void setUseEpa(boolean) -> setUseEpa
    boolean getUseEpa() -> getUseEpa
    void setAllowedCcdPenetration(float) -> setAllowedCcdPenetration
    float getAllowedCcdPenetration() -> getAllowedCcdPenetration
    void setUseConvexConservativeDistanceUtil(boolean) -> setUseConvexConservativeDistanceUtil
    boolean getUseConvexConservativeDistanceUtil() -> getUseConvexConservativeDistanceUtil
    void setConvexConservativeDistanceThreshold(float) -> setConvexConservativeDistanceThreshold
    float getConvexConservativeDistanceThreshold() -> getConvexConservativeDistanceThreshold
com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo$DispatchFunc -> com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo$DispatchFunc:
    int DISPATCH_DISCRETE -> DISPATCH_DISCRETE
    int DISPATCH_CONTINUOUS -> DISPATCH_CONTINUOUS
com.badlogic.gdx.physics.bullet.collision.btElement -> com.badlogic.gdx.physics.bullet.collision.btElement:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btElement) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setId(int) -> setId
    int getId() -> getId
    void setSz(int) -> setSz
    int getSz() -> getSz
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm -> com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc -> com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btEmptyAlgorithm$CreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> CreateCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btEmptyShape -> com.badlogic.gdx.physics.bullet.collision.btEmptyShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btEmptyShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btFace -> com.badlogic.gdx.physics.bullet.collision.btFace:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btFace) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setIndices(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_int_t) -> setIndices
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_int_t getIndices() -> getIndices
    void setPlane(float[]) -> setPlane
    float[] getPlane() -> getPlane
com.badlogic.gdx.physics.bullet.collision.btGhostObject -> com.badlogic.gdx.physics.bullet.collision.btGhostObject:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btGhostObject) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void convexSweepTest(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback,float) -> convexSweepTest
    void convexSweepTest(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.ConvexResultCallback) -> convexSweepTest
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> rayTest
    void addOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> addOverlappingObjectInternal
    void addOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> addOverlappingObjectInternal
    void removeOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> removeOverlappingObjectInternal
    void removeOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> removeOverlappingObjectInternal
    int getNumOverlappingObjects() -> getNumOverlappingObjects
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getOverlappingObject(int) -> getOverlappingObject
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectArray getOverlappingPairs() -> getOverlappingPairs
    com.badlogic.gdx.physics.bullet.collision.btGhostObject upcast(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> upcast
com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback -> com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btGhostPairCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePair addOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> addOverlappingPair
    long removeOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> removeOverlappingPair
    void removeOverlappingPairsContainingProxy(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> removeOverlappingPairsContainingProxy
com.badlogic.gdx.physics.bullet.collision.btGjkConvexCast -> com.badlogic.gdx.physics.bullet.collision.btGjkConvexCast:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btGjkConvexCast) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btGjkEpaPenetrationDepthSolver -> com.badlogic.gdx.physics.bullet.collision.btGjkEpaPenetrationDepthSolver:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btGjkEpaPenetrationDepthSolver) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2 -> com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int StackSizeRequirement() -> StackSizeRequirement
    boolean Distance(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults) -> Distance
    boolean Penetration(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,boolean) -> Penetration
    boolean Penetration(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults) -> Penetration
    float SignedDistance(com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults) -> SignedDistance
    boolean SignedDistance(com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btConvexShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults) -> SignedDistance
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults -> com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setStatus(int) -> setStatus
    int getStatus() -> getStatus
    void setWitnesses(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setWitnesses
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWitnesses() -> getWitnesses
    void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setNormal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormal() -> getNormal
    void setDistance(float) -> setDistance
    float getDistance() -> getDistance
com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults$eStatus -> com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults$eStatus:
    int Separated -> Separated
    int Penetrating -> Penetrating
    int GJK_Failed -> GJK_Failed
    int EPA_Failed -> EPA_Failed
com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector -> com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btGjkPairDetector) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setLastUsedMethod(int) -> setLastUsedMethod
    int getLastUsedMethod() -> getLastUsedMethod
    void setCurIter(int) -> setCurIter
    int getCurIter() -> getCurIter
    void setDegenerateSimplex(int) -> setDegenerateSimplex
    int getDegenerateSimplex() -> getDegenerateSimplex
    void setCatchDegeneracies(int) -> setCatchDegeneracies
    int getCatchDegeneracies() -> getCatchDegeneracies
    void setFixContactNormalDirection(int) -> setFixContactNormalDirection
    int getFixContactNormalDirection() -> getFixContactNormalDirection
    void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean) -> getClosestPoints
    void getClosestPoints(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> getClosestPoints
    void getClosestPointsNonVirtual(com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$ClosestPointInput,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> getClosestPointsNonVirtual
    void setMinkowskiA(com.badlogic.gdx.physics.bullet.collision.btConvexShape) -> setMinkowskiA
    void setMinkowskiB(com.badlogic.gdx.physics.bullet.collision.btConvexShape) -> setMinkowskiB
    void setCachedSeperatingAxis(com.badlogic.gdx.math.Vector3) -> setCachedSeperatingAxis
    com.badlogic.gdx.math.Vector3 getCachedSeparatingAxis() -> getCachedSeparatingAxis
    float getCachedSeparatingDistance() -> getCachedSeparatingDistance
    void setPenetrationDepthSolver(com.badlogic.gdx.physics.bullet.collision.btConvexPenetrationDepthSolver) -> setPenetrationDepthSolver
    void setIgnoreMargin(boolean) -> setIgnoreMargin
com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache -> com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    boolean needsBroadphaseCollision(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> needsBroadphaseCollision
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePair getOverlappingPairArrayPtr() -> getOverlappingPairArrayPtr
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray getOverlappingPairArray() -> getOverlappingPairArray
    int GetCount() -> GetCount
    com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback getOverlapFilterCallback() -> getOverlapFilterCallback
com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache -> com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btHashedSimplePairCache) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void removeAllPairs() -> removeAllPairs
    long removeOverlappingPair(int,int) -> removeOverlappingPair
    com.badlogic.gdx.physics.bullet.collision.btSimplePair addOverlappingPair(int,int) -> addOverlappingPair
    com.badlogic.gdx.physics.bullet.collision.btSimplePair getOverlappingPairArrayPtr() -> getOverlappingPairArrayPtr
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btSimplePair_t getOverlappingPairArray() -> getOverlappingPairArray
    com.badlogic.gdx.physics.bullet.collision.btSimplePair findPair(int,int) -> findPair
    int GetCount() -> GetCount
    int getNumOverlappingPairs() -> getNumOverlappingPairs
com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape -> com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btHeightfieldTerrainShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setUseDiamondSubdivision(boolean) -> setUseDiamondSubdivision
    void setUseDiamondSubdivision() -> setUseDiamondSubdivision
    void setUseZigzagSubdivision(boolean) -> setUseZigzagSubdivision
    void setUseZigzagSubdivision() -> setUseZigzagSubdivision
    long SwigConstructbtHeightfieldTerrainShape(int,int,java.nio.FloatBuffer,float,float,float,int,boolean) -> SwigConstructbtHeightfieldTerrainShape
    long SwigConstructbtHeightfieldTerrainShape(int,int,java.nio.ShortBuffer,float,float,float,int,boolean) -> SwigConstructbtHeightfieldTerrainShape
com.badlogic.gdx.physics.bullet.collision.btIndexedMesh -> com.badlogic.gdx.physics.bullet.collision.btIndexedMesh:
    long swigCPtr -> swigCPtr
    com.badlogic.gdx.utils.Array instances -> instances
    com.badlogic.gdx.graphics.g3d.model.MeshPart meshPart -> meshPart
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btIndexedMesh) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btIndexedMesh getInstance(com.badlogic.gdx.graphics.g3d.model.MeshPart) -> getInstance
    com.badlogic.gdx.physics.bullet.collision.btIndexedMesh obtain(com.badlogic.gdx.graphics.g3d.model.MeshPart) -> obtain
    com.badlogic.gdx.graphics.g3d.model.MeshPart getMeshPart() -> getMeshPart
    void set(com.badlogic.gdx.graphics.Mesh) -> set
    void set(com.badlogic.gdx.graphics.g3d.model.MeshPart) -> set
    void set(com.badlogic.gdx.graphics.Mesh,int,int) -> set
    void setNumTriangles(int) -> setNumTriangles
    int getNumTriangles() -> getNumTriangles
    void setTriangleIndexBase(java.nio.ByteBuffer) -> setTriangleIndexBase
    java.nio.ByteBuffer getTriangleIndexBase() -> getTriangleIndexBase
    void setTriangleIndexStride(int) -> setTriangleIndexStride
    int getTriangleIndexStride() -> getTriangleIndexStride
    void setNumVertices(int) -> setNumVertices
    int getNumVertices() -> getNumVertices
    void setVertexBase(java.nio.ByteBuffer) -> setVertexBase
    java.nio.ByteBuffer getVertexBase() -> getVertexBase
    void setVertexStride(int) -> setVertexStride
    int getVertexStride() -> getVertexStride
    void setIndexType(int) -> setIndexType
    int getIndexType() -> getIndexType
    void setVertexType(int) -> setVertexType
    int getVertexType() -> getVertexType
    void setTriangleIndexBase(java.nio.ShortBuffer) -> setTriangleIndexBase
    void setVertexBase(java.nio.FloatBuffer) -> setVertexBase
    void setVertices(java.nio.FloatBuffer,int,int,int) -> setVertices
    void setIndices(java.nio.ShortBuffer,int,int) -> setIndices
com.badlogic.gdx.physics.bullet.collision.btIntIndexData -> com.badlogic.gdx.physics.bullet.collision.btIntIndexData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btIntIndexData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setValue(int) -> setValue
    int getValue() -> getValue
com.badlogic.gdx.physics.bullet.collision.btInternalEdgeAdjustFlags -> com.badlogic.gdx.physics.bullet.collision.btInternalEdgeAdjustFlags:
    int BT_TRIANGLE_CONVEX_BACKFACE_MODE -> BT_TRIANGLE_CONVEX_BACKFACE_MODE
    int BT_TRIANGLE_CONCAVE_DOUBLE_SIDED -> BT_TRIANGLE_CONCAVE_DOUBLE_SIDED
    int BT_TRIANGLE_CONVEX_DOUBLE_SIDED -> BT_TRIANGLE_CONVEX_DOUBLE_SIDED
com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback -> com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void internalProcessTriangleIndex(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int) -> internalProcessTriangleIndex
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint -> com.badlogic.gdx.physics.bullet.collision.btManifoldPoint:
    long swigCPtr -> swigCPtr
    com.badlogic.gdx.physics.bullet.collision.btManifoldPoint temp -> temp
    com.badlogic.gdx.utils.Pool pool -> pool
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btManifoldPoint internalTemp(long,boolean) -> internalTemp
    com.badlogic.gdx.physics.bullet.collision.btManifoldPoint obtain(long,boolean) -> obtain
    void free(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> free
    void setLocalPointA(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setLocalPointA
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLocalPointA() -> getLocalPointA
    void setLocalPointB(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setLocalPointB
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLocalPointB() -> getLocalPointB
    void setPositionWorldOnB(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setPositionWorldOnB
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getPositionWorldOnB() -> getPositionWorldOnB
    void setPositionWorldOnA(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setPositionWorldOnA
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getPositionWorldOnA() -> getPositionWorldOnA
    void setNormalWorldOnB(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setNormalWorldOnB
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormalWorldOnB() -> getNormalWorldOnB
    void setDistance1(float) -> setDistance1
    float getDistance1() -> getDistance1
    void setCombinedFriction(float) -> setCombinedFriction
    float getCombinedFriction() -> getCombinedFriction
    void setCombinedRollingFriction(float) -> setCombinedRollingFriction
    float getCombinedRollingFriction() -> getCombinedRollingFriction
    void setCombinedRestitution(float) -> setCombinedRestitution
    float getCombinedRestitution() -> getCombinedRestitution
    void setPartId0(int) -> setPartId0
    int getPartId0() -> getPartId0
    void setPartId1(int) -> setPartId1
    int getPartId1() -> getPartId1
    void setIndex0(int) -> setIndex0
    int getIndex0() -> getIndex0
    void setIndex1(int) -> setIndex1
    int getIndex1() -> getIndex1
    void setUserPersistentData(long) -> setUserPersistentData
    long getUserPersistentData() -> getUserPersistentData
    void setLateralFrictionInitialized(boolean) -> setLateralFrictionInitialized
    boolean getLateralFrictionInitialized() -> getLateralFrictionInitialized
    void setAppliedImpulse(float) -> setAppliedImpulse
    float getAppliedImpulse() -> getAppliedImpulse
    void setAppliedImpulseLateral1(float) -> setAppliedImpulseLateral1
    float getAppliedImpulseLateral1() -> getAppliedImpulseLateral1
    void setAppliedImpulseLateral2(float) -> setAppliedImpulseLateral2
    float getAppliedImpulseLateral2() -> getAppliedImpulseLateral2
    void setContactMotion1(float) -> setContactMotion1
    float getContactMotion1() -> getContactMotion1
    void setContactMotion2(float) -> setContactMotion2
    float getContactMotion2() -> getContactMotion2
    void setContactCFM1(float) -> setContactCFM1
    float getContactCFM1() -> getContactCFM1
    void setContactCFM2(float) -> setContactCFM2
    float getContactCFM2() -> getContactCFM2
    void setLifeTime(int) -> setLifeTime
    int getLifeTime() -> getLifeTime
    void setLateralFrictionDir1(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setLateralFrictionDir1
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLateralFrictionDir1() -> getLateralFrictionDir1
    void setLateralFrictionDir2(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setLateralFrictionDir2
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLateralFrictionDir2() -> getLateralFrictionDir2
    float getDistance() -> getDistance
    void setDistance(float) -> setDistance
    int getUserValue() -> getUserValue
    void setUserValue(int) -> setUserValue
com.badlogic.gdx.physics.bullet.collision.btManifoldPoint$1 -> com.badlogic.gdx.physics.bullet.collision.btManifoldPoint$1:
    com.badlogic.gdx.physics.bullet.collision.btManifoldPoint newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.collision.btManifoldResult -> com.badlogic.gdx.physics.bullet.collision.btManifoldResult:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setPersistentManifold(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> setPersistentManifold
    com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getPersistentManifold() -> getPersistentManifold
    void refreshContactPoints() -> refreshContactPoints
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper getBody0Wrap() -> getBody0Wrap
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper getBody1Wrap() -> getBody1Wrap
    void setBody0Wrap(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> setBody0Wrap
    void setBody1Wrap(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> setBody1Wrap
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getBody0Internal() -> getBody0Internal
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getBody1Internal() -> getBody1Internal
    float calculateCombinedRestitution(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> calculateCombinedRestitution
    float calculateCombinedFriction(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> calculateCombinedFriction
com.badlogic.gdx.physics.bullet.collision.btMaterial -> com.badlogic.gdx.physics.bullet.collision.btMaterial:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMaterial) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setFriction(float) -> setFriction
    float getFriction() -> getFriction
    void setRestitution(float) -> setRestitution
    float getRestitution() -> getRestitution
    void setPad(int[]) -> setPad
    int[] getPad() -> getPad
com.badlogic.gdx.physics.bullet.collision.btMaterialProperties -> com.badlogic.gdx.physics.bullet.collision.btMaterialProperties:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMaterialProperties) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setNumMaterials(int) -> setNumMaterials
    int getNumMaterials() -> getNumMaterials
    void setMaterialBase(java.nio.ByteBuffer) -> setMaterialBase
    java.nio.ByteBuffer getMaterialBase() -> getMaterialBase
    void setMaterialStride(int) -> setMaterialStride
    int getMaterialStride() -> getMaterialStride
    void setMaterialType(int) -> setMaterialType
    int getMaterialType() -> getMaterialType
    void setNumTriangles(int) -> setNumTriangles
    int getNumTriangles() -> getNumTriangles
    void setTriangleMaterialsBase(java.nio.ByteBuffer) -> setTriangleMaterialsBase
    java.nio.ByteBuffer getTriangleMaterialsBase() -> getTriangleMaterialsBase
    void setTriangleMaterialStride(int) -> setTriangleMaterialStride
    int getTriangleMaterialStride() -> getTriangleMaterialStride
    void setTriangleType(int) -> setTriangleType
    int getTriangleType() -> getTriangleType
com.badlogic.gdx.physics.bullet.collision.btMeshPartData -> com.badlogic.gdx.physics.bullet.collision.btMeshPartData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMeshPartData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setVertices3f(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setVertices3f
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getVertices3f() -> getVertices3f
    void setVertices3d(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setVertices3d
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getVertices3d() -> getVertices3d
    void setIndices32(com.badlogic.gdx.physics.bullet.collision.btIntIndexData) -> setIndices32
    com.badlogic.gdx.physics.bullet.collision.btIntIndexData getIndices32() -> getIndices32
    void set3indices16(com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData) -> set3indices16
    com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData get3indices16() -> get3indices16
    void set3indices8(com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData) -> set3indices8
    com.badlogic.gdx.physics.bullet.collision.btCharIndexTripletData get3indices8() -> get3indices8
    void setIndices16(com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData) -> setIndices16
    com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData getIndices16() -> getIndices16
    void setNumTriangles(int) -> setNumTriangles
    int getNumTriangles() -> getNumTriangles
    void setNumVertices(int) -> setNumVertices
    int getNumVertices() -> getNumVertices
com.badlogic.gdx.physics.bullet.collision.btMinkowskiPenetrationDepthSolver -> com.badlogic.gdx.physics.bullet.collision.btMinkowskiPenetrationDepthSolver:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMinkowskiPenetrationDepthSolver) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape -> com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMinkowskiSumShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTransformA(com.badlogic.gdx.math.Matrix4) -> setTransformA
    void setTransformB(com.badlogic.gdx.math.Matrix4) -> setTransformB
    com.badlogic.gdx.math.Matrix4 getTransformA() -> getTransformA
    com.badlogic.gdx.math.Matrix4 GetTransformB() -> GetTransformB
    com.badlogic.gdx.physics.bullet.collision.btConvexShape getShapeA() -> getShapeA
    com.badlogic.gdx.physics.bullet.collision.btConvexShape getShapeB() -> getShapeB
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase -> com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBroadphaseInterface_p_t getBroadphaseArray() -> getBroadphaseArray
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rayTest
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3) -> rayTest
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> rayTest
    void addToChildBroadphase(com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface) -> addToChildBroadphase
    boolean testAabbOverlap(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> testAabbOverlap
    com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getOverlappingPairCache() -> getOverlappingPairCache
    void buildTree(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> buildTree
    void quicksort(com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray,int,int) -> quicksort
com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy -> com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMultiSapBroadphase$btMultiSapProxy) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setAabbMin(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAabbMin
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAabbMin() -> getAabbMin
    void setAabbMax(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAabbMax
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAabbMax() -> getAabbMax
    void setShapeType(int) -> setShapeType
    int getShapeType() -> getShapeType
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape -> com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int getSphereCount() -> getSphereCount
    com.badlogic.gdx.math.Vector3 getSpherePosition(int) -> getSpherePosition
    float getSphereRadius(int) -> getSphereRadius
com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData -> com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMultiSphereShapeData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setConvexInternalShapeData(com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData) -> setConvexInternalShapeData
    com.badlogic.gdx.physics.bullet.collision.btConvexInternalShapeData getConvexInternalShapeData() -> getConvexInternalShapeData
    void setLocalPositionArrayPtr(com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius) -> setLocalPositionArrayPtr
    com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius getLocalPositionArrayPtr() -> getLocalPositionArrayPtr
    void setLocalPositionArraySize(int) -> setLocalPositionArraySize
    int getLocalPositionArraySize() -> getLocalPositionArraySize
    void setPadding(java.lang.String) -> setPadding
    java.lang.String getPadding() -> getPadding
com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape -> com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btMultimaterialTriangleMeshShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btMaterial getMaterialProperties(int,int) -> getMaterialProperties
com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback -> com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void processNode(int,int) -> processNode
com.badlogic.gdx.physics.bullet.collision.btNullPairCache -> com.badlogic.gdx.physics.bullet.collision.btNullPairCache:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btNullPairCache) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePair getOverlappingPairArrayPtr() -> getOverlappingPairArrayPtr
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh -> com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void build(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,boolean,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> build
    void refit(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> refit
    void refitPartial(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> refitPartial
    void updateBvhNodes(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,int,int,int) -> updateBvhNodes
    boolean serializeInPlace(long,long,boolean) -> serializeInPlace
    com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh deSerializeInPlace(long,long,boolean) -> deSerializeInPlace
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode -> com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNode) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setAabbMinOrg(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAabbMinOrg
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAabbMinOrg() -> getAabbMinOrg
    void setAabbMaxOrg(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAabbMaxOrg
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAabbMaxOrg() -> getAabbMaxOrg
    void setEscapeIndex(int) -> setEscapeIndex
    int getEscapeIndex() -> getEscapeIndex
    void setSubPart(int) -> setSubPart
    int getSubPart() -> getSubPart
    void setTriangleIndex(int) -> setTriangleIndex
    int getTriangleIndex() -> getTriangleIndex
    void setPadding(java.lang.String) -> setPadding
    java.lang.String getPadding() -> getPadding
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData -> com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setAabbMinOrg(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setAabbMinOrg
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getAabbMinOrg() -> getAabbMinOrg
    void setAabbMaxOrg(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setAabbMaxOrg
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getAabbMaxOrg() -> getAabbMaxOrg
    void setEscapeIndex(int) -> setEscapeIndex
    int getEscapeIndex() -> getEscapeIndex
    void setSubPart(int) -> setSubPart
    int getSubPart() -> getSubPart
    void setTriangleIndex(int) -> setTriangleIndex
    int getTriangleIndex() -> getTriangleIndex
    void setPad(java.lang.String) -> setPad
    java.lang.String getPad() -> getPad
com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData -> com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setAabbMinOrg(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setAabbMinOrg
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAabbMinOrg() -> getAabbMinOrg
    void setAabbMaxOrg(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setAabbMaxOrg
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAabbMaxOrg() -> getAabbMaxOrg
    void setEscapeIndex(int) -> setEscapeIndex
    int getEscapeIndex() -> getEscapeIndex
    void setSubPart(int) -> setSubPart
    int getSubPart() -> getSubPart
    void setTriangleIndex(int) -> setTriangleIndex
    int getTriangleIndex() -> getTriangleIndex
    void setPad(java.lang.String) -> setPad
    java.lang.String getPad() -> getPad
com.badlogic.gdx.physics.bullet.collision.btOverlapCallback -> com.badlogic.gdx.physics.bullet.collision.btOverlapCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOverlapCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    boolean processOverlap(com.badlogic.gdx.physics.bullet.collision.btBroadphasePair) -> processOverlap
com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback -> com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    boolean needBroadphaseCollision(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> needBroadphaseCollision
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache -> com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePair getOverlappingPairArrayPtr() -> getOverlappingPairArrayPtr
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray getOverlappingPairArray() -> getOverlappingPairArray
    void cleanOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btBroadphasePair,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> cleanOverlappingPair
    int getNumOverlappingPairs() -> getNumOverlappingPairs
    void cleanProxyFromPairs(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> cleanProxyFromPairs
    void setOverlapFilterCallback(com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback) -> setOverlapFilterCallback
    void processAllOverlappingPairs(com.badlogic.gdx.physics.bullet.collision.btOverlapCallback,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> processAllOverlappingPairs
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePair findPair(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> findPair
    boolean hasDeferredRemoval() -> hasDeferredRemoval
    void setInternalGhostPairCallback(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback) -> setInternalGhostPairCallback
    void sortOverlappingPairs(com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> sortOverlappingPairs
com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback -> com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePair addOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> addOverlappingPair
    long removeOverlappingPair(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> removeOverlappingPair
    void removeOverlappingPairsContainingProxy(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> removeOverlappingPairsContainingProxy
com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject -> com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void addOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> addOverlappingObjectInternal
    void addOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> addOverlappingObjectInternal
    void removeOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> removeOverlappingObjectInternal
    void removeOverlappingObjectInternal(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> removeOverlappingObjectInternal
    com.badlogic.gdx.physics.bullet.collision.btHashedOverlappingPairCache getOverlappingPairCache() -> getOverlappingPairCache
com.badlogic.gdx.physics.bullet.collision.btPersistentManifold -> com.badlogic.gdx.physics.bullet.collision.btPersistentManifold:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setCompanionIdA(int) -> setCompanionIdA
    int getCompanionIdA() -> getCompanionIdA
    void setCompanionIdB(int) -> setCompanionIdB
    int getCompanionIdB() -> getCompanionIdB
    void setIndex1a(int) -> setIndex1a
    int getIndex1a() -> getIndex1a
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getBody0() -> getBody0
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getBody1() -> getBody1
    void setBodies(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> setBodies
    void clearUserCache(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> clearUserCache
    int getNumContacts() -> getNumContacts
    void setNumContacts(int) -> setNumContacts
    com.badlogic.gdx.physics.bullet.collision.btManifoldPoint getContactPoint(int) -> getContactPoint
    float getContactBreakingThreshold() -> getContactBreakingThreshold
    float getContactProcessingThreshold() -> getContactProcessingThreshold
    void setContactBreakingThreshold(float) -> setContactBreakingThreshold
    void setContactProcessingThreshold(float) -> setContactProcessingThreshold
    int getCacheEntry(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> getCacheEntry
    int addManifoldPoint(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,boolean) -> addManifoldPoint
    int addManifoldPoint(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> addManifoldPoint
    void removeContactPoint(int) -> removeContactPoint
    void replaceContactPoint(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint,int) -> replaceContactPoint
    boolean validContactDistance(com.badlogic.gdx.physics.bullet.collision.btManifoldPoint) -> validContactDistance
    void refreshContactPoints(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> refreshContactPoints
    void clearManifold() -> clearManifold
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray -> com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int size() -> size
    com.badlogic.gdx.physics.bullet.collision.btPersistentManifold at(int) -> at
    void clear() -> clear
    void pop_back() -> pop_back
    void resizeNoInitialize(int) -> resizeNoInitialize
    void resize(int,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> resize
    void resize(int) -> resize
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold expandNonInitializing() -> expandNonInitializing
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold expand(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> expand
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold expand() -> expand
    void push_back(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> push_back
    int capacity() -> capacity
    void reserve(int) -> reserve
    void swap(int,int) -> swap
    int findBinarySearch(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> findBinarySearch
    int findLinearSearch(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> findLinearSearch
    void remove(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> remove
    void initializeFromBuffer(long,int,int) -> initializeFromBuffer
    void copyFromArray(com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray) -> copyFromArray
com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray$less -> com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray$less:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPersistentManifoldArray$less) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btPointCollector -> com.badlogic.gdx.physics.bullet.collision.btPointCollector:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPointCollector) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setNormalOnBInWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setNormalOnBInWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormalOnBInWorld() -> getNormalOnBInWorld
    void setPointInWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setPointInWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getPointInWorld() -> getPointInWorld
    void setDistance(float) -> setDistance
    float getDistance() -> getDistance
    void setHasResult(boolean) -> setHasResult
    boolean getHasResult() -> getHasResult
com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping -> com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPolyhedralContactClipping) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void clipHullAgainstHull(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,float,float,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result) -> clipHullAgainstHull
    void clipFaceAgainstHull(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,float,float,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result) -> clipFaceAgainstHull
    boolean findSeparatingAxis(com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btDiscreteCollisionDetectorInterface$Result) -> findSeparatingAxis
    void clipFace(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3,float) -> clipFace
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape -> com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexAabbCachingShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void getNonvirtualAabb(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> getNonvirtualAabb
    void recalcLocalAabb() -> recalcLocalAabb
com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape -> com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPolyhedralConvexShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    boolean initializePolyhedralFeatures(int) -> initializePolyhedralFeatures
    boolean initializePolyhedralFeatures() -> initializePolyhedralFeatures
    com.badlogic.gdx.physics.bullet.collision.btConvexPolyhedron getConvexPolyhedron() -> getConvexPolyhedron
    int getNumVertices() -> getNumVertices
    int getNumEdges() -> getNumEdges
    void getEdge(int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getEdge
    void getVertex(int,com.badlogic.gdx.math.Vector3) -> getVertex
    int getNumPlanes() -> getNumPlanes
    void getPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int) -> getPlane
    boolean isInside(com.badlogic.gdx.math.Vector3,float) -> isInside
com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius -> com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btPositionAndRadius) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setPos(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setPos
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getPos() -> getPos
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh -> com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setQuantizationValues(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> setQuantizationValues
    void setQuantizationValues(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setQuantizationValues
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t getLeafNodeArray() -> getLeafNodeArray
    void buildInternal() -> buildInternal
    void reportAabbOverlappingNodex(com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> reportAabbOverlappingNodex
    void reportRayOverlappingNodex(com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> reportRayOverlappingNodex
    void reportBoxCastOverlappingNodex(com.badlogic.gdx.physics.bullet.collision.btNodeOverlapCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> reportBoxCastOverlappingNodex
    void quantize(java.nio.IntBuffer,com.badlogic.gdx.math.Vector3,int) -> quantize
    void quantizeWithClamp(java.nio.IntBuffer,com.badlogic.gdx.math.Vector3,int) -> quantizeWithClamp
    com.badlogic.gdx.math.Vector3 unQuantize(java.nio.IntBuffer) -> unQuantize
    void setTraversalMode(int) -> setTraversalMode
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btQuantizedBvhNode_t getQuantizedNodeArray() -> getQuantizedNodeArray
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btBvhSubtreeInfo_t getSubtreeInfoArray() -> getSubtreeInfoArray
    long calculateSerializeBufferSize() -> calculateSerializeBufferSize
    boolean serialize(long,long,boolean) -> serialize
    com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh deSerializeInPlace(long,long,boolean) -> deSerializeInPlace
    long getAlignmentSerializationPadding() -> getAlignmentSerializationPadding
    int calculateSerializeBufferSizeNew() -> calculateSerializeBufferSizeNew
    java.lang.String serialize(long,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer) -> serialize
    void deSerializeFloat(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> deSerializeFloat
    void deSerializeDouble(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> deSerializeDouble
    boolean isQuantized() -> isQuantized
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh$btTraversalMode -> com.badlogic.gdx.physics.bullet.collision.btQuantizedBvh$btTraversalMode:
    int TRAVERSAL_STACKLESS -> TRAVERSAL_STACKLESS
    int TRAVERSAL_STACKLESS_CACHE_FRIENDLY -> TRAVERSAL_STACKLESS_CACHE_FRIENDLY
    int TRAVERSAL_RECURSIVE -> TRAVERSAL_RECURSIVE
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData -> com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setBvhAabbMin(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setBvhAabbMin
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getBvhAabbMin() -> getBvhAabbMin
    void setBvhAabbMax(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setBvhAabbMax
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getBvhAabbMax() -> getBvhAabbMax
    void setBvhQuantization(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setBvhQuantization
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getBvhQuantization() -> getBvhQuantization
    void setCurNodeIndex(int) -> setCurNodeIndex
    int getCurNodeIndex() -> getCurNodeIndex
    void setUseQuantization(int) -> setUseQuantization
    int getUseQuantization() -> getUseQuantization
    void setNumContiguousLeafNodes(int) -> setNumContiguousLeafNodes
    int getNumContiguousLeafNodes() -> getNumContiguousLeafNodes
    void setNumQuantizedContiguousNodes(int) -> setNumQuantizedContiguousNodes
    int getNumQuantizedContiguousNodes() -> getNumQuantizedContiguousNodes
    void setContiguousNodesPtr(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData) -> setContiguousNodesPtr
    com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeDoubleData getContiguousNodesPtr() -> getContiguousNodesPtr
    void setQuantizedContiguousNodesPtr(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData) -> setQuantizedContiguousNodesPtr
    com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData getQuantizedContiguousNodesPtr() -> getQuantizedContiguousNodesPtr
    void setTraversalMode(int) -> setTraversalMode
    int getTraversalMode() -> getTraversalMode
    void setNumSubtreeHeaders(int) -> setNumSubtreeHeaders
    int getNumSubtreeHeaders() -> getNumSubtreeHeaders
    void setSubTreeInfoPtr(com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData) -> setSubTreeInfoPtr
    com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData getSubTreeInfoPtr() -> getSubTreeInfoPtr
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData -> com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setBvhAabbMin(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setBvhAabbMin
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getBvhAabbMin() -> getBvhAabbMin
    void setBvhAabbMax(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setBvhAabbMax
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getBvhAabbMax() -> getBvhAabbMax
    void setBvhQuantization(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setBvhQuantization
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getBvhQuantization() -> getBvhQuantization
    void setCurNodeIndex(int) -> setCurNodeIndex
    int getCurNodeIndex() -> getCurNodeIndex
    void setUseQuantization(int) -> setUseQuantization
    int getUseQuantization() -> getUseQuantization
    void setNumContiguousLeafNodes(int) -> setNumContiguousLeafNodes
    int getNumContiguousLeafNodes() -> getNumContiguousLeafNodes
    void setNumQuantizedContiguousNodes(int) -> setNumQuantizedContiguousNodes
    int getNumQuantizedContiguousNodes() -> getNumQuantizedContiguousNodes
    void setContiguousNodesPtr(com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData) -> setContiguousNodesPtr
    com.badlogic.gdx.physics.bullet.collision.btOptimizedBvhNodeFloatData getContiguousNodesPtr() -> getContiguousNodesPtr
    void setQuantizedContiguousNodesPtr(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData) -> setQuantizedContiguousNodesPtr
    com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData getQuantizedContiguousNodesPtr() -> getQuantizedContiguousNodesPtr
    void setSubTreeInfoPtr(com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData) -> setSubTreeInfoPtr
    com.badlogic.gdx.physics.bullet.collision.btBvhSubtreeInfoData getSubTreeInfoPtr() -> getSubTreeInfoPtr
    void setTraversalMode(int) -> setTraversalMode
    int getTraversalMode() -> getTraversalMode
    void setNumSubtreeHeaders(int) -> setNumSubtreeHeaders
    int getNumSubtreeHeaders() -> getNumSubtreeHeaders
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode -> com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNode) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setQuantizedAabbMin(int[]) -> setQuantizedAabbMin
    int[] getQuantizedAabbMin() -> getQuantizedAabbMin
    void setQuantizedAabbMax(int[]) -> setQuantizedAabbMax
    int[] getQuantizedAabbMax() -> getQuantizedAabbMax
    void setEscapeIndexOrTriangleIndex(int) -> setEscapeIndexOrTriangleIndex
    int getEscapeIndexOrTriangleIndex() -> getEscapeIndexOrTriangleIndex
    boolean isLeafNode() -> isLeafNode
    int getEscapeIndex() -> getEscapeIndex
    int getTriangleIndex() -> getTriangleIndex
    int getPartId() -> getPartId
com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData -> com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhNodeData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setQuantizedAabbMin(int[]) -> setQuantizedAabbMin
    int[] getQuantizedAabbMin() -> getQuantizedAabbMin
    void setQuantizedAabbMax(int[]) -> setQuantizedAabbMax
    int[] getQuantizedAabbMax() -> getQuantizedAabbMax
    void setEscapeIndexOrTriangleIndex(int) -> setEscapeIndexOrTriangleIndex
    int getEscapeIndexOrTriangleIndex() -> getEscapeIndexOrTriangleIndex
com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape -> com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape getChildShape() -> getChildShape
com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData -> com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btScaledTriangleMeshShapeData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTrimeshShapeData(com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData) -> setTrimeshShapeData
    com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData getTrimeshShapeData() -> getTrimeshShapeData
    void setLocalScaling(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setLocalScaling
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLocalScaling() -> getLocalScaling
com.badlogic.gdx.physics.bullet.collision.btShapeHull -> com.badlogic.gdx.physics.bullet.collision.btShapeHull:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btShapeHull) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    boolean buildHull(float) -> buildHull
    int numTriangles() -> numTriangles
    int numVertices() -> numVertices
    int numIndices() -> numIndices
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVertexPointer() -> getVertexPointer
    java.nio.LongBuffer getIndexPointer() -> getIndexPointer
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData -> com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btShortIntIndexData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setValue(short) -> setValue
    short getValue() -> getValue
    void setPad(java.lang.String) -> setPad
    java.lang.String getPad() -> getPad
com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData -> com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btShortIntIndexTripletData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setValues(short[]) -> setValues
    short[] getValues() -> getValues
    void setPad(java.lang.String) -> setPad
    java.lang.String getPad() -> getPad
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase -> com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphase) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    boolean aabbOverlap(com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy) -> aabbOverlap
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rayTest
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback,com.badlogic.gdx.math.Vector3) -> rayTest
    void rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btBroadphaseRayCallback) -> rayTest
    com.badlogic.gdx.physics.bullet.collision.btOverlappingPairCache getOverlappingPairCache() -> getOverlappingPairCache
    boolean testAabbOverlap(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> testAabbOverlap
com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy -> com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSimpleBroadphaseProxy) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setNextFree(int) -> setNextFree
    int getNextFree() -> getNextFree
    void SetNextFree(int) -> SetNextFree
    int GetNextFree() -> GetNextFree
com.badlogic.gdx.physics.bullet.collision.btSimplePair -> com.badlogic.gdx.physics.bullet.collision.btSimplePair:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSimplePair) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setIndexA(int) -> setIndexA
    int getIndexA() -> getIndexA
    void setIndexB(int) -> setIndexB
    int getIndexB() -> getIndexB
    void setUserPointer(long) -> setUserPointer
    long getUserPointer() -> getUserPointer
    void setUserValue(int) -> setUserValue
    int getUserValue() -> getUserValue
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager -> com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void initUnionFind(int) -> initUnionFind
    com.badlogic.gdx.physics.bullet.collision.btUnionFind getUnionFind() -> getUnionFind
    void updateActivationState(com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> updateActivationState
    void storeIslandActivationState(com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> storeIslandActivationState
    void findUnions(com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> findUnions
    void buildAndProcessIslands(com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback) -> buildAndProcessIslands
    void buildIslands(com.badlogic.gdx.physics.bullet.collision.btDispatcher,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> buildIslands
    boolean getSplitIslands() -> getSplitIslands
    void setSplitIslands(boolean) -> setSplitIslands
com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback -> com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager$IslandCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void processIsland(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btCollisionObject,int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_btPersistentManifold,int,int) -> processIsland
com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache -> com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSortedOverlappingPairCache) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    boolean needsBroadphaseCollision(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> needsBroadphaseCollision
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePairArray getOverlappingPairArray() -> getOverlappingPairArray
    com.badlogic.gdx.physics.bullet.collision.btBroadphasePair getOverlappingPairArrayPtr() -> getOverlappingPairArrayPtr
    com.badlogic.gdx.physics.bullet.collision.btOverlapFilterCallback getOverlapFilterCallback() -> getOverlapFilterCallback
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm -> com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    boolean getSphereDistance(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_float,com.badlogic.gdx.math.Vector3,float,float) -> getSphereDistance
    float getSpherePenetration(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getSpherePenetration
com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm$CreateFunc -> com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm$CreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSphereBoxCollisionAlgorithm$CreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btSphereShape -> com.badlogic.gdx.physics.bullet.collision.btSphereShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSphereShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    float getRadius() -> getRadius
    void setUnscaledRadius(float) -> setUnscaledRadius
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm -> com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc -> com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSphereSphereCollisionAlgorithm$CreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithm CreateCollisionAlgorithm(com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> CreateCollisionAlgorithm
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm -> com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm$CreateFunc -> com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm$CreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSphereTriangleCollisionAlgorithm$CreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape -> com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.math.Vector3 getPlaneNormal() -> getPlaneNormal
    float getPlaneConstant() -> getPlaneConstant
com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData -> com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btStaticPlaneShapeData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setCollisionShapeData(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> setCollisionShapeData
    com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData getCollisionShapeData() -> getCollisionShapeData
    void setLocalScaling(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setLocalScaling
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLocalScaling() -> getLocalScaling
    void setPlaneNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setPlaneNormal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getPlaneNormal() -> getPlaneNormal
    void setPlaneConstant(float) -> setPlaneConstant
    float getPlaneConstant() -> getPlaneConstant
    void setPad(java.lang.String) -> setPad
    java.lang.String getPad() -> getPad
com.badlogic.gdx.physics.bullet.collision.btStorageResult -> com.badlogic.gdx.physics.bullet.collision.btStorageResult:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btStorageResult) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setNormalOnSurfaceB(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setNormalOnSurfaceB
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormalOnSurfaceB() -> getNormalOnSurfaceB
    void setClosestPointInB(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setClosestPointInB
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getClosestPointInB() -> getClosestPointInB
    void setDistance(float) -> setDistance
    float getDistance() -> getDistance
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface -> com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void InternalProcessAllTriangles(com.badlogic.gdx.physics.bullet.collision.btInternalTriangleIndexCallback,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> InternalProcessAllTriangles
    void calculateAabbBruteForce(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> calculateAabbBruteForce
    void getLockedVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,int) -> getLockedVertexIndexBase
    void getLockedVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType) -> getLockedVertexIndexBase
    void getLockedReadOnlyVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,int) -> getLockedReadOnlyVertexIndexBase
    void getLockedReadOnlyVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType) -> getLockedReadOnlyVertexIndexBase
    void unLockVertexBase(int) -> unLockVertexBase
    void unLockReadOnlyVertexBase(int) -> unLockReadOnlyVertexBase
    int getNumSubParts() -> getNumSubParts
    void preallocateVertices(int) -> preallocateVertices
    void preallocateIndices(int) -> preallocateIndices
    boolean hasPremadeAabb() -> hasPremadeAabb
    void setPremadeAabb(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setPremadeAabb
    void getPremadeAabb(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> getPremadeAabb
    com.badlogic.gdx.math.Vector3 getScaling() -> getScaling
    void setScaling(com.badlogic.gdx.math.Vector3) -> setScaling
    int calculateSerializeBufferSize() -> calculateSerializeBufferSize
    java.lang.String serialize(long,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer) -> serialize
com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData -> com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setMeshPartsPtr(com.badlogic.gdx.physics.bullet.collision.btMeshPartData) -> setMeshPartsPtr
    com.badlogic.gdx.physics.bullet.collision.btMeshPartData getMeshPartsPtr() -> getMeshPartsPtr
    void setScaling(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setScaling
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getScaling() -> getScaling
    void setNumMeshParts(int) -> setNumMeshParts
    int getNumMeshParts() -> getNumMeshParts
    void setPadding(java.lang.String) -> setPadding
    java.lang.String getPadding() -> getPadding
com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult -> com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setClosestPointOnSimplex(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setClosestPointOnSimplex
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getClosestPointOnSimplex() -> getClosestPointOnSimplex
    void setUsedVertices(com.badlogic.gdx.physics.bullet.collision.btUsageBitfield) -> setUsedVertices
    com.badlogic.gdx.physics.bullet.collision.btUsageBitfield getUsedVertices() -> getUsedVertices
    void setBarycentricCoords(float[]) -> setBarycentricCoords
    float[] getBarycentricCoords() -> getBarycentricCoords
    void setDegenerate(boolean) -> setDegenerate
    boolean getDegenerate() -> getDegenerate
    void reset() -> reset
    boolean isValid() -> isValid
    void setBarycentricCoordinates(float,float,float,float) -> setBarycentricCoordinates
    void setBarycentricCoordinates(float,float,float) -> setBarycentricCoordinates
    void setBarycentricCoordinates(float,float) -> setBarycentricCoordinates
    void setBarycentricCoordinates(float) -> setBarycentricCoordinates
    void setBarycentricCoordinates() -> setBarycentricCoordinates
com.badlogic.gdx.physics.bullet.collision.btSubsimplexConvexCast -> com.badlogic.gdx.physics.bullet.collision.btSubsimplexConvexCast:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btSubsimplexConvexCast) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.collision.btTriangle -> com.badlogic.gdx.physics.bullet.collision.btTriangle:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangle) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setVertex0(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setVertex0
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVertex0() -> getVertex0
    void setVertex1(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setVertex1
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVertex1() -> getVertex1
    void setVertex2(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setVertex2
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVertex2() -> getVertex2
    void setPartId(int) -> setPartId
    int getPartId() -> getPartId
    void setTriangleIndex(int) -> setTriangleIndex
    int getTriangleIndex() -> getTriangleIndex
com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer -> com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleBuffer) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int getNumTriangles() -> getNumTriangles
    com.badlogic.gdx.physics.bullet.collision.btTriangle getTriangle(int) -> getTriangle
    void clearBuffer() -> clearBuffer
com.badlogic.gdx.physics.bullet.collision.btTriangleCallback -> com.badlogic.gdx.physics.bullet.collision.btTriangleCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void processTriangle(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int) -> processTriangle
com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback -> com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleConvexcastCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void setConvexShape(com.badlogic.gdx.physics.bullet.collision.btConvexShape) -> setConvexShape
    com.badlogic.gdx.physics.bullet.collision.btConvexShape getConvexShape() -> getConvexShape
    void setConvexShapeFrom(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setConvexShapeFrom
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getConvexShapeFrom() -> getConvexShapeFrom
    void setConvexShapeTo(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setConvexShapeTo
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getConvexShapeTo() -> getConvexShapeTo
    void setTriangleToWorld(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setTriangleToWorld
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getTriangleToWorld() -> getTriangleToWorld
    void setHitFraction(float) -> setHitFraction
    float getHitFraction() -> getHitFraction
    void setTriangleCollisionMargin(float) -> setTriangleCollisionMargin
    float getTriangleCollisionMargin() -> getTriangleCollisionMargin
    void setAllowedPenetration(float) -> setAllowedPenetration
    float getAllowedPenetration() -> getAllowedPenetration
    void processTriangle(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int) -> processTriangle
    float reportHit(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,int,int) -> reportHit
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray -> com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray:
    long swigCPtr -> swigCPtr
    com.badlogic.gdx.utils.Array instances -> instances
    com.badlogic.gdx.utils.Array meshes -> meshes
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    boolean compare(com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray,com.badlogic.gdx.utils.Array) -> compare
    com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray getInstance(com.badlogic.gdx.utils.Array) -> getInstance
    com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray obtain(com.badlogic.gdx.utils.Array) -> obtain
    int getIndexedMeshCount() -> getIndexedMeshCount
    com.badlogic.gdx.physics.bullet.collision.btIndexedMesh getIndexedMesh(int) -> getIndexedMesh
    com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray addMeshPart(com.badlogic.gdx.graphics.g3d.model.MeshPart) -> addMeshPart
    com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray addMeshParts(com.badlogic.gdx.graphics.g3d.model.MeshPart[]) -> addMeshParts
    com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray addMeshParts(java.lang.Iterable) -> addMeshParts
    com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray addNodeParts(java.lang.Iterable) -> addNodeParts
    com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray addIndexedMesh(com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int) -> addIndexedMesh
    com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray addIndexedMesh(com.badlogic.gdx.physics.bullet.collision.btIndexedMesh) -> addIndexedMesh
    void dispose() -> dispose
    void internalAddIndexedMesh(com.badlogic.gdx.physics.bullet.collision.btIndexedMesh,int) -> internalAddIndexedMesh
    void internalAddIndexedMesh(com.badlogic.gdx.physics.bullet.collision.btIndexedMesh) -> internalAddIndexedMesh
    void getLockedVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,int) -> getLockedVertexIndexBase
    void getLockedVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType) -> getLockedVertexIndexBase
    void getLockedReadOnlyVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,int) -> getLockedReadOnlyVertexIndexBase
    void getLockedReadOnlyVertexIndexBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType) -> getLockedReadOnlyVertexIndexBase
    com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btAlignedObjectArrayT_btIndexedMesh_t getIndexedMeshArray() -> getIndexedMeshArray
com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray -> com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexMaterialArray) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    long SwigConstructbtTriangleIndexVertexMaterialArray(int,java.nio.IntBuffer,int,int,java.nio.FloatBuffer,int,int,java.nio.ByteBuffer,int,java.nio.IntBuffer,int) -> SwigConstructbtTriangleIndexVertexMaterialArray
    void addMaterialProperties(com.badlogic.gdx.physics.bullet.collision.btMaterialProperties,int) -> addMaterialProperties
    void addMaterialProperties(com.badlogic.gdx.physics.bullet.collision.btMaterialProperties) -> addMaterialProperties
    void getLockedMaterialBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,int) -> getLockedMaterialBase
    void getLockedMaterialBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType) -> getLockedMaterialBase
    void getLockedReadOnlyMaterialBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,int) -> getLockedReadOnlyMaterialBase
    void getLockedReadOnlyMaterialBase(com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_p_unsigned_char,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_int,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_PHY_ScalarType) -> getLockedReadOnlyMaterialBase
com.badlogic.gdx.physics.bullet.collision.btTriangleInfo -> com.badlogic.gdx.physics.bullet.collision.btTriangleInfo:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleInfo) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setFlags(int) -> setFlags
    int getFlags() -> getFlags
    void setEdgeV0V1Angle(float) -> setEdgeV0V1Angle
    float getEdgeV0V1Angle() -> getEdgeV0V1Angle
    void setEdgeV1V2Angle(float) -> setEdgeV1V2Angle
    float getEdgeV1V2Angle() -> getEdgeV1V2Angle
    void setEdgeV2V0Angle(float) -> setEdgeV2V0Angle
    float getEdgeV2V0Angle() -> getEdgeV2V0Angle
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData -> com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setFlags(int) -> setFlags
    int getFlags() -> getFlags
    void setEdgeV0V1Angle(float) -> setEdgeV0V1Angle
    float getEdgeV0V1Angle() -> getEdgeV0V1Angle
    void setEdgeV1V2Angle(float) -> setEdgeV1V2Angle
    float getEdgeV1V2Angle() -> getEdgeV1V2Angle
    void setEdgeV2V0Angle(float) -> setEdgeV2V0Angle
    float getEdgeV2V0Angle() -> getEdgeV2V0Angle
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap -> com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setConvexEpsilon(float) -> setConvexEpsilon
    float getConvexEpsilon() -> getConvexEpsilon
    void setPlanarEpsilon(float) -> setPlanarEpsilon
    float getPlanarEpsilon() -> getPlanarEpsilon
    void setEqualVertexThreshold(float) -> setEqualVertexThreshold
    float getEqualVertexThreshold() -> getEqualVertexThreshold
    void setEdgeDistanceThreshold(float) -> setEdgeDistanceThreshold
    float getEdgeDistanceThreshold() -> getEdgeDistanceThreshold
    void setMaxEdgeAngleThreshold(float) -> setMaxEdgeAngleThreshold
    float getMaxEdgeAngleThreshold() -> getMaxEdgeAngleThreshold
    void setZeroAreaThreshold(float) -> setZeroAreaThreshold
    float getZeroAreaThreshold() -> getZeroAreaThreshold
    int calculateSerializeBufferSize() -> calculateSerializeBufferSize
    java.lang.String serialize(long,com.badlogic.gdx.physics.bullet.collision.SWIGTYPE_p_btSerializer) -> serialize
    void deSerialize(com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> deSerialize
com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData -> com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setHashTablePtr(java.nio.IntBuffer) -> setHashTablePtr
    java.nio.IntBuffer getHashTablePtr() -> getHashTablePtr
    void setNextPtr(java.nio.IntBuffer) -> setNextPtr
    java.nio.IntBuffer getNextPtr() -> getNextPtr
    void setValueArrayPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData) -> setValueArrayPtr
    com.badlogic.gdx.physics.bullet.collision.btTriangleInfoData getValueArrayPtr() -> getValueArrayPtr
    void setKeyArrayPtr(java.nio.IntBuffer) -> setKeyArrayPtr
    java.nio.IntBuffer getKeyArrayPtr() -> getKeyArrayPtr
    void setConvexEpsilon(float) -> setConvexEpsilon
    float getConvexEpsilon() -> getConvexEpsilon
    void setPlanarEpsilon(float) -> setPlanarEpsilon
    float getPlanarEpsilon() -> getPlanarEpsilon
    void setEqualVertexThreshold(float) -> setEqualVertexThreshold
    float getEqualVertexThreshold() -> getEqualVertexThreshold
    void setEdgeDistanceThreshold(float) -> setEdgeDistanceThreshold
    float getEdgeDistanceThreshold() -> getEdgeDistanceThreshold
    void setZeroAreaThreshold(float) -> setZeroAreaThreshold
    float getZeroAreaThreshold() -> getZeroAreaThreshold
    void setNextSize(int) -> setNextSize
    int getNextSize() -> getNextSize
    void setHashTableSize(int) -> setHashTableSize
    int getHashTableSize() -> getHashTableSize
    void setNumValues(int) -> setNumValues
    int getNumValues() -> getNumValues
    void setNumKeys(int) -> setNumKeys
    int getNumKeys() -> getNumKeys
    void setPadding(java.lang.String) -> setPadding
    java.lang.String getPadding() -> getPadding
com.badlogic.gdx.physics.bullet.collision.btTriangleMesh -> com.badlogic.gdx.physics.bullet.collision.btTriangleMesh:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleMesh) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setWeldingThreshold(float) -> setWeldingThreshold
    float getWeldingThreshold() -> getWeldingThreshold
    boolean getUse32bitIndices() -> getUse32bitIndices
    boolean getUse4componentVertices() -> getUse4componentVertices
    void addTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean) -> addTriangle
    void addTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> addTriangle
    int getNumTriangles() -> getNumTriangles
    int findOrAddVertex(com.badlogic.gdx.math.Vector3,boolean) -> findOrAddVertex
    void addIndex(int) -> addIndex
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape -> com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.math.Vector3 localGetSupportingVertex(com.badlogic.gdx.math.Vector3) -> localGetSupportingVertex
    com.badlogic.gdx.math.Vector3 localGetSupportingVertexWithoutMargin(com.badlogic.gdx.math.Vector3) -> localGetSupportingVertexWithoutMargin
    void recalcLocalAabb() -> recalcLocalAabb
    com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface getMeshInterface() -> getMeshInterface
    com.badlogic.gdx.math.Vector3 getLocalAabbMin() -> getLocalAabbMin
    com.badlogic.gdx.math.Vector3 getLocalAabbMax() -> getLocalAabbMax
com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData -> com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleMeshShapeData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setCollisionShapeData(com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData) -> setCollisionShapeData
    com.badlogic.gdx.physics.bullet.collision.btCollisionShapeData getCollisionShapeData() -> getCollisionShapeData
    void setMeshInterface(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData) -> setMeshInterface
    com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData getMeshInterface() -> getMeshInterface
    void setQuantizedFloatBvh(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData) -> setQuantizedFloatBvh
    com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhFloatData getQuantizedFloatBvh() -> getQuantizedFloatBvh
    void setQuantizedDoubleBvh(com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData) -> setQuantizedDoubleBvh
    com.badlogic.gdx.physics.bullet.collision.btQuantizedBvhDoubleData getQuantizedDoubleBvh() -> getQuantizedDoubleBvh
    void setTriangleInfoMap(com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData) -> setTriangleInfoMap
    com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMapData getTriangleInfoMap() -> getTriangleInfoMap
    void setCollisionMargin(float) -> setCollisionMargin
    float getCollisionMargin() -> getCollisionMargin
    void setPad3(java.lang.String) -> setPad3
    java.lang.String getPad3() -> getPad3
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback -> com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void setFrom(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setFrom
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getFrom() -> getFrom
    void setTo(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setTo
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getTo() -> getTo
    void setFlags(long) -> setFlags
    long getFlags() -> getFlags
    void setHitFraction(float) -> setHitFraction
    float getHitFraction() -> getHitFraction
    void processTriangle(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,int) -> processTriangle
    float reportHit(com.badlogic.gdx.math.Vector3,float,int,int) -> reportHit
com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback$EFlags -> com.badlogic.gdx.physics.bullet.collision.btTriangleRaycastCallback$EFlags:
    int kF_None -> kF_None
    int kF_FilterBackfaces -> kF_FilterBackfaces
    int kF_KeepUnflippedNormal -> kF_KeepUnflippedNormal
    int kF_UseSubSimplexConvexCastRaytest -> kF_UseSubSimplexConvexCastRaytest
    int kF_Terminator -> kF_Terminator
com.badlogic.gdx.physics.bullet.collision.btTriangleShape -> com.badlogic.gdx.physics.bullet.collision.btTriangleShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btTriangleShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setVertices1(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setVertices1
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVertices1() -> getVertices1
    com.badlogic.gdx.math.Vector3 getVertexPtr(int) -> getVertexPtr
    void calcNormal(com.badlogic.gdx.math.Vector3) -> calcNormal
    void getPlaneEquation(int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getPlaneEquation
com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape -> com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btUniformScalingShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    float getUniformScalingFactor() -> getUniformScalingFactor
    com.badlogic.gdx.physics.bullet.collision.btConvexShape getChildShape() -> getChildShape
com.badlogic.gdx.physics.bullet.collision.btUnionFind -> com.badlogic.gdx.physics.bullet.collision.btUnionFind:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btUnionFind) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void sortIslands() -> sortIslands
    void reset(int) -> reset
    int getNumElements() -> getNumElements
    boolean isRoot(int) -> isRoot
    com.badlogic.gdx.physics.bullet.collision.btElement getElement(int) -> getElement
    void allocate(int) -> allocate
    void Free() -> Free
    int find(int,int) -> find
    void unite(int,int) -> unite
    int find(int) -> find
com.badlogic.gdx.physics.bullet.collision.btUsageBitfield -> com.badlogic.gdx.physics.bullet.collision.btUsageBitfield:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btUsageBitfield) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void reset() -> reset
    void setUsedVertexA(int) -> setUsedVertexA
    int getUsedVertexA() -> getUsedVertexA
    void setUsedVertexB(int) -> setUsedVertexB
    int getUsedVertexB() -> getUsedVertexB
    void setUsedVertexC(int) -> setUsedVertexC
    int getUsedVertexC() -> getUsedVertexC
    void setUsedVertexD(int) -> setUsedVertexD
    int getUsedVertexD() -> getUsedVertexD
    void setUnused1(int) -> setUnused1
    int getUnused1() -> getUnused1
    void setUnused2(int) -> setUnused2
    int getUnused2() -> getUnused2
    void setUnused3(int) -> setUnused3
    int getUnused3() -> getUnused3
    void setUnused4(int) -> setUnused4
    int getUnused4() -> getUnused4
com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver -> com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.collision.btVoronoiSimplexSolver) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setNumVertices(int) -> setNumVertices
    int getNumVertices() -> getNumVertices
    void setSimplexVectorW(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setSimplexVectorW
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getSimplexVectorW() -> getSimplexVectorW
    void setSimplexPointsP(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setSimplexPointsP
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getSimplexPointsP() -> getSimplexPointsP
    void setSimplexPointsQ(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setSimplexPointsQ
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getSimplexPointsQ() -> getSimplexPointsQ
    void setCachedP1(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setCachedP1
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getCachedP1() -> getCachedP1
    void setCachedP2(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setCachedP2
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getCachedP2() -> getCachedP2
    void setCachedV(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setCachedV
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getCachedV() -> getCachedV
    void setLastW(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setLastW
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLastW() -> getLastW
    void setEqualVertexThreshold(float) -> setEqualVertexThreshold
    float getEqualVertexThreshold() -> getEqualVertexThreshold
    void setCachedValidClosest(boolean) -> setCachedValidClosest
    boolean getCachedValidClosest() -> getCachedValidClosest
    void setCachedBC(com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult) -> setCachedBC
    com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult getCachedBC() -> getCachedBC
    void setNeedsUpdate(boolean) -> setNeedsUpdate
    boolean getNeedsUpdate() -> getNeedsUpdate
    void removeVertex(int) -> removeVertex
    void reduceVertices(com.badlogic.gdx.physics.bullet.collision.btUsageBitfield) -> reduceVertices
    boolean updateClosestVectorAndPoints() -> updateClosestVectorAndPoints
    boolean closestPtPointTetrahedron(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult) -> closestPtPointTetrahedron
    int pointOutsideOfPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> pointOutsideOfPlane
    boolean closestPtPointTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btSubSimplexClosestResult) -> closestPtPointTriangle
    void reset() -> reset
    void addVertex(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> addVertex
    boolean closest(com.badlogic.gdx.math.Vector3) -> closest
    float maxVertex() -> maxVertex
    boolean fullSimplex() -> fullSimplex
    int getSimplex(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> getSimplex
    boolean inSimplex(com.badlogic.gdx.math.Vector3) -> inSimplex
    void backup_closest(com.badlogic.gdx.math.Vector3) -> backup_closest
    boolean emptySimplex() -> emptySimplex
    void compute_points(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> compute_points
com.badlogic.gdx.physics.bullet.dynamics.Dynamics -> com.badlogic.gdx.physics.bullet.dynamics.Dynamics:
    com.badlogic.gdx.math.Vector3 staticVector3 -> staticVector3
    com.badlogic.gdx.utils.Pool poolVector3 -> poolVector3
    com.badlogic.gdx.math.Quaternion staticQuaternion -> staticQuaternion
    com.badlogic.gdx.utils.Pool poolQuaternion -> poolQuaternion
    com.badlogic.gdx.math.Matrix3 staticMatrix3 -> staticMatrix3
    com.badlogic.gdx.utils.Pool poolMatrix3 -> poolMatrix3
    com.badlogic.gdx.math.Matrix4 staticMatrix4 -> staticMatrix4
    com.badlogic.gdx.utils.Pool poolMatrix4 -> poolMatrix4
    void setGDeactivationTime(float) -> setGDeactivationTime
    float getGDeactivationTime() -> getGDeactivationTime
    void setGDisableDeactivation(boolean) -> setGDisableDeactivation
    boolean getGDisableDeactivation() -> getGDisableDeactivation
    float btAdjustAngleToLimits(float,float,float) -> btAdjustAngleToLimits
    void InternalTickCallback_CB(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float) -> InternalTickCallback_CB
    float resolveSingleCollision(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo,float) -> resolveSingleCollision
    void resolveSingleBilateral(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float,float) -> resolveSingleBilateral
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$1 -> com.badlogic.gdx.physics.bullet.dynamics.Dynamics$1:
    com.badlogic.gdx.math.Vector3 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$2 -> com.badlogic.gdx.physics.bullet.dynamics.Dynamics$2:
    com.badlogic.gdx.math.Quaternion newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$3 -> com.badlogic.gdx.physics.bullet.dynamics.Dynamics$3:
    com.badlogic.gdx.math.Matrix3 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.dynamics.Dynamics$4 -> com.badlogic.gdx.physics.bullet.dynamics.Dynamics$4:
    com.badlogic.gdx.math.Matrix4 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.dynamics.DynamicsConstants -> com.badlogic.gdx.physics.bullet.dynamics.DynamicsConstants:
    java.lang.String btRigidBodyDataName -> btRigidBodyDataName
    java.lang.String btTypedConstraintDataName -> btTypedConstraintDataName
    java.lang.String btSliderConstraintDataName -> btSliderConstraintDataName
    java.lang.String btPoint2PointConstraintDataName -> btPoint2PointConstraintDataName
    java.lang.String btGeneric6DofConstraintDataName -> btGeneric6DofConstraintDataName
    int BT_6DOF_FLAGS_AXIS_SHIFT -> BT_6DOF_FLAGS_AXIS_SHIFT
    java.lang.String btConeTwistConstraintDataName -> btConeTwistConstraintDataName
    java.lang.String btGeneric6DofSpringConstraintDataName -> btGeneric6DofSpringConstraintDataName
    int _BT_USE_CENTER_LIMIT_ -> _BT_USE_CENTER_LIMIT_
    java.lang.String btHingeConstraintDataName -> btHingeConstraintDataName
com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI -> com.badlogic.gdx.physics.bullet.dynamics.DynamicsJNI:
    void gDeactivationTime_set(float) -> gDeactivationTime_set
    float gDeactivationTime_get() -> gDeactivationTime_get
    void gDisableDeactivation_set(boolean) -> gDisableDeactivation_set
    boolean gDisableDeactivation_get() -> gDisableDeactivation_get
    void btRigidBody_btRigidBodyConstructionInfo_mass_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float) -> btRigidBody_btRigidBodyConstructionInfo_mass_set
    float btRigidBody_btRigidBodyConstructionInfo_mass_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_mass_get
    void btRigidBody_btRigidBodyConstructionInfo_i_motionState_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState) -> btRigidBody_btRigidBodyConstructionInfo_i_motionState_set
    long btRigidBody_btRigidBodyConstructionInfo_i_motionState_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_i_motionState_get
    void btRigidBody_btRigidBodyConstructionInfo_startWorldTransform_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btRigidBody_btRigidBodyConstructionInfo_startWorldTransform_set
    long btRigidBody_btRigidBodyConstructionInfo_startWorldTransform_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_startWorldTransform_get
    void btRigidBody_btRigidBodyConstructionInfo_i_collisionShape_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btRigidBody_btRigidBodyConstructionInfo_i_collisionShape_set
    long btRigidBody_btRigidBodyConstructionInfo_i_collisionShape_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_i_collisionShape_get
    void btRigidBody_btRigidBodyConstructionInfo_localInertia_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btRigidBody_btRigidBodyConstructionInfo_localInertia_set
    long btRigidBody_btRigidBodyConstructionInfo_localInertia_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_localInertia_get
    void btRigidBody_btRigidBodyConstructionInfo_linearDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float) -> btRigidBody_btRigidBodyConstructionInfo_linearDamping_set
    float btRigidBody_btRigidBodyConstructionInfo_linearDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_linearDamping_get
    void btRigidBody_btRigidBodyConstructionInfo_angularDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float) -> btRigidBody_btRigidBodyConstructionInfo_angularDamping_set
    float btRigidBody_btRigidBodyConstructionInfo_angularDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_angularDamping_get
    void btRigidBody_btRigidBodyConstructionInfo_friction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float) -> btRigidBody_btRigidBodyConstructionInfo_friction_set
    float btRigidBody_btRigidBodyConstructionInfo_friction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_friction_get
    void btRigidBody_btRigidBodyConstructionInfo_rollingFriction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float) -> btRigidBody_btRigidBodyConstructionInfo_rollingFriction_set
    float btRigidBody_btRigidBodyConstructionInfo_rollingFriction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_rollingFriction_get
    void btRigidBody_btRigidBodyConstructionInfo_restitution_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float) -> btRigidBody_btRigidBodyConstructionInfo_restitution_set
    float btRigidBody_btRigidBodyConstructionInfo_restitution_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_restitution_get
    void btRigidBody_btRigidBodyConstructionInfo_linearSleepingThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float) -> btRigidBody_btRigidBodyConstructionInfo_linearSleepingThreshold_set
    float btRigidBody_btRigidBodyConstructionInfo_linearSleepingThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_linearSleepingThreshold_get
    void btRigidBody_btRigidBodyConstructionInfo_angularSleepingThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float) -> btRigidBody_btRigidBodyConstructionInfo_angularSleepingThreshold_set
    float btRigidBody_btRigidBodyConstructionInfo_angularSleepingThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_angularSleepingThreshold_get
    void btRigidBody_btRigidBodyConstructionInfo_additionalDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,boolean) -> btRigidBody_btRigidBodyConstructionInfo_additionalDamping_set
    boolean btRigidBody_btRigidBodyConstructionInfo_additionalDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_additionalDamping_get
    void btRigidBody_btRigidBodyConstructionInfo_additionalDampingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float) -> btRigidBody_btRigidBodyConstructionInfo_additionalDampingFactor_set
    float btRigidBody_btRigidBodyConstructionInfo_additionalDampingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_additionalDampingFactor_get
    void btRigidBody_btRigidBodyConstructionInfo_additionalLinearDampingThresholdSqr_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float) -> btRigidBody_btRigidBodyConstructionInfo_additionalLinearDampingThresholdSqr_set
    float btRigidBody_btRigidBodyConstructionInfo_additionalLinearDampingThresholdSqr_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_additionalLinearDampingThresholdSqr_get
    void btRigidBody_btRigidBodyConstructionInfo_additionalAngularDampingThresholdSqr_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float) -> btRigidBody_btRigidBodyConstructionInfo_additionalAngularDampingThresholdSqr_set
    float btRigidBody_btRigidBodyConstructionInfo_additionalAngularDampingThresholdSqr_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_additionalAngularDampingThresholdSqr_get
    void btRigidBody_btRigidBodyConstructionInfo_additionalAngularDampingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo,float) -> btRigidBody_btRigidBodyConstructionInfo_additionalAngularDampingFactor_set
    float btRigidBody_btRigidBodyConstructionInfo_additionalAngularDampingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> btRigidBody_btRigidBodyConstructionInfo_additionalAngularDampingFactor_get
    long new_btRigidBody_btRigidBodyConstructionInfo__SWIG_0(boolean,float,long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3) -> new_btRigidBody_btRigidBodyConstructionInfo__SWIG_0
    long new_btRigidBody_btRigidBodyConstructionInfo__SWIG_1(boolean,float,long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> new_btRigidBody_btRigidBodyConstructionInfo__SWIG_1
    void delete_btRigidBody_btRigidBodyConstructionInfo(long) -> delete_btRigidBody_btRigidBodyConstructionInfo
    void delete_btRigidBody(long) -> delete_btRigidBody
    void btRigidBody_proceedToTransform(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4) -> btRigidBody_proceedToTransform
    void btRigidBody_predictIntegratedTransform(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float,com.badlogic.gdx.math.Matrix4) -> btRigidBody_predictIntegratedTransform
    void btRigidBody_saveKinematicState(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float) -> btRigidBody_saveKinematicState
    void btRigidBody_applyGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_applyGravity
    void btRigidBody_setGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> btRigidBody_setGravity
    com.badlogic.gdx.math.Vector3 btRigidBody_getGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getGravity
    void btRigidBody_setDamping(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float,float) -> btRigidBody_setDamping
    float btRigidBody_getLinearDamping(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getLinearDamping
    float btRigidBody_getAngularDamping(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getAngularDamping
    float btRigidBody_getLinearSleepingThreshold(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getLinearSleepingThreshold
    float btRigidBody_getAngularSleepingThreshold(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getAngularSleepingThreshold
    void btRigidBody_applyDamping(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float) -> btRigidBody_applyDamping
    void btRigidBody_setMassProps(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float,com.badlogic.gdx.math.Vector3) -> btRigidBody_setMassProps
    com.badlogic.gdx.math.Vector3 btRigidBody_getLinearFactor(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getLinearFactor
    void btRigidBody_setLinearFactor(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> btRigidBody_setLinearFactor
    float btRigidBody_getInvMass(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getInvMass
    com.badlogic.gdx.math.Matrix3 btRigidBody_getInvInertiaTensorWorld(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getInvInertiaTensorWorld
    void btRigidBody_integrateVelocities(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float) -> btRigidBody_integrateVelocities
    void btRigidBody_setCenterOfMassTransform(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4) -> btRigidBody_setCenterOfMassTransform
    void btRigidBody_applyCentralForce(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> btRigidBody_applyCentralForce
    com.badlogic.gdx.math.Vector3 btRigidBody_getTotalForce(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getTotalForce
    com.badlogic.gdx.math.Vector3 btRigidBody_getTotalTorque(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getTotalTorque
    com.badlogic.gdx.math.Vector3 btRigidBody_getInvInertiaDiagLocal(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getInvInertiaDiagLocal
    void btRigidBody_setInvInertiaDiagLocal(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> btRigidBody_setInvInertiaDiagLocal
    void btRigidBody_setSleepingThresholds(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float,float) -> btRigidBody_setSleepingThresholds
    void btRigidBody_applyTorque(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> btRigidBody_applyTorque
    void btRigidBody_applyForce(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btRigidBody_applyForce
    void btRigidBody_applyCentralImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> btRigidBody_applyCentralImpulse
    void btRigidBody_applyTorqueImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> btRigidBody_applyTorqueImpulse
    void btRigidBody_applyImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btRigidBody_applyImpulse
    void btRigidBody_clearForces(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_clearForces
    void btRigidBody_updateInertiaTensor(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_updateInertiaTensor
    com.badlogic.gdx.math.Vector3 btRigidBody_getCenterOfMassPosition(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getCenterOfMassPosition
    com.badlogic.gdx.math.Quaternion btRigidBody_getOrientation(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getOrientation
    com.badlogic.gdx.math.Matrix4 btRigidBody_getCenterOfMassTransform(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getCenterOfMassTransform
    com.badlogic.gdx.math.Vector3 btRigidBody_getLinearVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getLinearVelocity
    com.badlogic.gdx.math.Vector3 btRigidBody_getAngularVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getAngularVelocity
    void btRigidBody_setLinearVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> btRigidBody_setLinearVelocity
    void btRigidBody_setAngularVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> btRigidBody_setAngularVelocity
    com.badlogic.gdx.math.Vector3 btRigidBody_getVelocityInLocalPoint(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> btRigidBody_getVelocityInLocalPoint
    void btRigidBody_translate(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> btRigidBody_translate
    void btRigidBody_getAabb(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btRigidBody_getAabb
    float btRigidBody_computeImpulseDenominator(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btRigidBody_computeImpulseDenominator
    float btRigidBody_computeAngularImpulseDenominator(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> btRigidBody_computeAngularImpulseDenominator
    void btRigidBody_updateDeactivation(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float) -> btRigidBody_updateDeactivation
    boolean btRigidBody_wantsSleeping(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_wantsSleeping
    long btRigidBody_getBroadphaseProxy__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getBroadphaseProxy__SWIG_0
    void btRigidBody_setNewBroadphaseProxy(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> btRigidBody_setNewBroadphaseProxy
    long btRigidBody_internalGetMotionState__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_internalGetMotionState__SWIG_0
    void btRigidBody_internalSetMotionState(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState) -> btRigidBody_internalSetMotionState
    void btRigidBody_contactSolverType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,int) -> btRigidBody_contactSolverType_set
    int btRigidBody_contactSolverType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_contactSolverType_get
    void btRigidBody_frictionSolverType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,int) -> btRigidBody_frictionSolverType_set
    int btRigidBody_frictionSolverType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_frictionSolverType_get
    void btRigidBody_setAngularFactor__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> btRigidBody_setAngularFactor__SWIG_0
    void btRigidBody_setAngularFactor__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float) -> btRigidBody_setAngularFactor__SWIG_1
    com.badlogic.gdx.math.Vector3 btRigidBody_getAngularFactor(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getAngularFactor
    boolean btRigidBody_isInWorld(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_isInWorld
    boolean btRigidBody_checkCollideWithOverride(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btRigidBody_checkCollideWithOverride
    void btRigidBody_addConstraintRef(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btRigidBody_addConstraintRef
    void btRigidBody_removeConstraintRef(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btRigidBody_removeConstraintRef
    long btRigidBody_getConstraintRef(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,int) -> btRigidBody_getConstraintRef
    int btRigidBody_getNumConstraintRefs(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getNumConstraintRefs
    void btRigidBody_setFlags(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,int) -> btRigidBody_setFlags
    int btRigidBody_getFlags(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRigidBody_getFlags
    com.badlogic.gdx.math.Vector3 btRigidBody_computeGyroscopicForce(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,float) -> btRigidBody_computeGyroscopicForce
    long new_btRigidBody__SWIG_0(boolean,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> new_btRigidBody__SWIG_0
    long new_btRigidBody__SWIG_1(boolean,float,long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3) -> new_btRigidBody__SWIG_1
    long new_btRigidBody__SWIG_2(boolean,float,long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> new_btRigidBody__SWIG_2
    void btRigidBodyFloatData_collisionObjectData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btRigidBodyFloatData_collisionObjectData_set
    long btRigidBodyFloatData_collisionObjectData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_collisionObjectData_get
    void btRigidBodyFloatData_invInertiaTensorWorld_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long) -> btRigidBodyFloatData_invInertiaTensorWorld_set
    long btRigidBodyFloatData_invInertiaTensorWorld_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_invInertiaTensorWorld_get
    void btRigidBodyFloatData_linearVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btRigidBodyFloatData_linearVelocity_set
    long btRigidBodyFloatData_linearVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_linearVelocity_get
    void btRigidBodyFloatData_angularVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btRigidBodyFloatData_angularVelocity_set
    long btRigidBodyFloatData_angularVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_angularVelocity_get
    void btRigidBodyFloatData_angularFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btRigidBodyFloatData_angularFactor_set
    long btRigidBodyFloatData_angularFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_angularFactor_get
    void btRigidBodyFloatData_linearFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btRigidBodyFloatData_linearFactor_set
    long btRigidBodyFloatData_linearFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_linearFactor_get
    void btRigidBodyFloatData_gravity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btRigidBodyFloatData_gravity_set
    long btRigidBodyFloatData_gravity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_gravity_get
    void btRigidBodyFloatData_gravity_acceleration_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btRigidBodyFloatData_gravity_acceleration_set
    long btRigidBodyFloatData_gravity_acceleration_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_gravity_acceleration_get
    void btRigidBodyFloatData_invInertiaLocal_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btRigidBodyFloatData_invInertiaLocal_set
    long btRigidBodyFloatData_invInertiaLocal_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_invInertiaLocal_get
    void btRigidBodyFloatData_totalForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btRigidBodyFloatData_totalForce_set
    long btRigidBodyFloatData_totalForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_totalForce_get
    void btRigidBodyFloatData_totalTorque_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btRigidBodyFloatData_totalTorque_set
    long btRigidBodyFloatData_totalTorque_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_totalTorque_get
    void btRigidBodyFloatData_inverseMass_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float) -> btRigidBodyFloatData_inverseMass_set
    float btRigidBodyFloatData_inverseMass_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_inverseMass_get
    void btRigidBodyFloatData_linearDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float) -> btRigidBodyFloatData_linearDamping_set
    float btRigidBodyFloatData_linearDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_linearDamping_get
    void btRigidBodyFloatData_angularDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float) -> btRigidBodyFloatData_angularDamping_set
    float btRigidBodyFloatData_angularDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_angularDamping_get
    void btRigidBodyFloatData_additionalDampingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float) -> btRigidBodyFloatData_additionalDampingFactor_set
    float btRigidBodyFloatData_additionalDampingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_additionalDampingFactor_get
    void btRigidBodyFloatData_additionalLinearDampingThresholdSqr_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float) -> btRigidBodyFloatData_additionalLinearDampingThresholdSqr_set
    float btRigidBodyFloatData_additionalLinearDampingThresholdSqr_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_additionalLinearDampingThresholdSqr_get
    void btRigidBodyFloatData_additionalAngularDampingThresholdSqr_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float) -> btRigidBodyFloatData_additionalAngularDampingThresholdSqr_set
    float btRigidBodyFloatData_additionalAngularDampingThresholdSqr_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_additionalAngularDampingThresholdSqr_get
    void btRigidBodyFloatData_additionalAngularDampingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float) -> btRigidBodyFloatData_additionalAngularDampingFactor_set
    float btRigidBodyFloatData_additionalAngularDampingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_additionalAngularDampingFactor_get
    void btRigidBodyFloatData_linearSleepingThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float) -> btRigidBodyFloatData_linearSleepingThreshold_set
    float btRigidBodyFloatData_linearSleepingThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_linearSleepingThreshold_get
    void btRigidBodyFloatData_angularSleepingThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,float) -> btRigidBodyFloatData_angularSleepingThreshold_set
    float btRigidBodyFloatData_angularSleepingThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_angularSleepingThreshold_get
    void btRigidBodyFloatData_additionalDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData,int) -> btRigidBodyFloatData_additionalDamping_set
    int btRigidBodyFloatData_additionalDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btRigidBodyFloatData_additionalDamping_get
    long new_btRigidBodyFloatData() -> new_btRigidBodyFloatData
    void delete_btRigidBodyFloatData(long) -> delete_btRigidBodyFloatData
    void btRigidBodyDoubleData_collisionObjectData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> btRigidBodyDoubleData_collisionObjectData_set
    long btRigidBodyDoubleData_collisionObjectData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_collisionObjectData_get
    void btRigidBodyDoubleData_invInertiaTensorWorld_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long) -> btRigidBodyDoubleData_invInertiaTensorWorld_set
    long btRigidBodyDoubleData_invInertiaTensorWorld_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_invInertiaTensorWorld_get
    void btRigidBodyDoubleData_linearVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btRigidBodyDoubleData_linearVelocity_set
    long btRigidBodyDoubleData_linearVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_linearVelocity_get
    void btRigidBodyDoubleData_angularVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btRigidBodyDoubleData_angularVelocity_set
    long btRigidBodyDoubleData_angularVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_angularVelocity_get
    void btRigidBodyDoubleData_angularFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btRigidBodyDoubleData_angularFactor_set
    long btRigidBodyDoubleData_angularFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_angularFactor_get
    void btRigidBodyDoubleData_linearFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btRigidBodyDoubleData_linearFactor_set
    long btRigidBodyDoubleData_linearFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_linearFactor_get
    void btRigidBodyDoubleData_gravity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btRigidBodyDoubleData_gravity_set
    long btRigidBodyDoubleData_gravity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_gravity_get
    void btRigidBodyDoubleData_gravity_acceleration_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btRigidBodyDoubleData_gravity_acceleration_set
    long btRigidBodyDoubleData_gravity_acceleration_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_gravity_acceleration_get
    void btRigidBodyDoubleData_invInertiaLocal_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btRigidBodyDoubleData_invInertiaLocal_set
    long btRigidBodyDoubleData_invInertiaLocal_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_invInertiaLocal_get
    void btRigidBodyDoubleData_totalForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btRigidBodyDoubleData_totalForce_set
    long btRigidBodyDoubleData_totalForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_totalForce_get
    void btRigidBodyDoubleData_totalTorque_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btRigidBodyDoubleData_totalTorque_set
    long btRigidBodyDoubleData_totalTorque_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_totalTorque_get
    void btRigidBodyDoubleData_inverseMass_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double) -> btRigidBodyDoubleData_inverseMass_set
    double btRigidBodyDoubleData_inverseMass_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_inverseMass_get
    void btRigidBodyDoubleData_linearDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double) -> btRigidBodyDoubleData_linearDamping_set
    double btRigidBodyDoubleData_linearDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_linearDamping_get
    void btRigidBodyDoubleData_angularDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double) -> btRigidBodyDoubleData_angularDamping_set
    double btRigidBodyDoubleData_angularDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_angularDamping_get
    void btRigidBodyDoubleData_additionalDampingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double) -> btRigidBodyDoubleData_additionalDampingFactor_set
    double btRigidBodyDoubleData_additionalDampingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_additionalDampingFactor_get
    void btRigidBodyDoubleData_additionalLinearDampingThresholdSqr_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double) -> btRigidBodyDoubleData_additionalLinearDampingThresholdSqr_set
    double btRigidBodyDoubleData_additionalLinearDampingThresholdSqr_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_additionalLinearDampingThresholdSqr_get
    void btRigidBodyDoubleData_additionalAngularDampingThresholdSqr_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double) -> btRigidBodyDoubleData_additionalAngularDampingThresholdSqr_set
    double btRigidBodyDoubleData_additionalAngularDampingThresholdSqr_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_additionalAngularDampingThresholdSqr_get
    void btRigidBodyDoubleData_additionalAngularDampingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double) -> btRigidBodyDoubleData_additionalAngularDampingFactor_set
    double btRigidBodyDoubleData_additionalAngularDampingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_additionalAngularDampingFactor_get
    void btRigidBodyDoubleData_linearSleepingThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double) -> btRigidBodyDoubleData_linearSleepingThreshold_set
    double btRigidBodyDoubleData_linearSleepingThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_linearSleepingThreshold_get
    void btRigidBodyDoubleData_angularSleepingThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,double) -> btRigidBodyDoubleData_angularSleepingThreshold_set
    double btRigidBodyDoubleData_angularSleepingThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_angularSleepingThreshold_get
    void btRigidBodyDoubleData_additionalDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,int) -> btRigidBodyDoubleData_additionalDamping_set
    int btRigidBodyDoubleData_additionalDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_additionalDamping_get
    void btRigidBodyDoubleData_padding_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData,java.lang.String) -> btRigidBodyDoubleData_padding_set
    java.lang.String btRigidBodyDoubleData_padding_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btRigidBodyDoubleData_padding_get
    long new_btRigidBodyDoubleData() -> new_btRigidBodyDoubleData
    void delete_btRigidBodyDoubleData(long) -> delete_btRigidBodyDoubleData
    void btJointFeedback_appliedForceBodyA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btJointFeedback_appliedForceBodyA_set
    long btJointFeedback_appliedForceBodyA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback) -> btJointFeedback_appliedForceBodyA_get
    void btJointFeedback_appliedTorqueBodyA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btJointFeedback_appliedTorqueBodyA_set
    long btJointFeedback_appliedTorqueBodyA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback) -> btJointFeedback_appliedTorqueBodyA_get
    void btJointFeedback_appliedForceBodyB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btJointFeedback_appliedForceBodyB_set
    long btJointFeedback_appliedForceBodyB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback) -> btJointFeedback_appliedForceBodyB_get
    void btJointFeedback_appliedTorqueBodyB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btJointFeedback_appliedTorqueBodyB_set
    long btJointFeedback_appliedTorqueBodyB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback) -> btJointFeedback_appliedTorqueBodyB_get
    long new_btJointFeedback() -> new_btJointFeedback
    void delete_btJointFeedback(long) -> delete_btJointFeedback
    void delete_btTypedConstraint(long) -> delete_btTypedConstraint
    void btTypedConstraint_btConstraintInfo1_numConstraintRows_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1,int) -> btTypedConstraint_btConstraintInfo1_numConstraintRows_set
    int btTypedConstraint_btConstraintInfo1_numConstraintRows_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1) -> btTypedConstraint_btConstraintInfo1_numConstraintRows_get
    void btTypedConstraint_btConstraintInfo1_nub_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1,int) -> btTypedConstraint_btConstraintInfo1_nub_set
    int btTypedConstraint_btConstraintInfo1_nub_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1) -> btTypedConstraint_btConstraintInfo1_nub_get
    long new_btTypedConstraint_btConstraintInfo1() -> new_btTypedConstraint_btConstraintInfo1
    void delete_btTypedConstraint_btConstraintInfo1(long) -> delete_btTypedConstraint_btConstraintInfo1
    long btTypedConstraint_getFixedBody() -> btTypedConstraint_getFixedBody
    void btTypedConstraint_btConstraintInfo2_fps_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,float) -> btTypedConstraint_btConstraintInfo2_fps_set
    float btTypedConstraint_btConstraintInfo2_fps_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> btTypedConstraint_btConstraintInfo2_fps_get
    void btTypedConstraint_btConstraintInfo2_erp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,float) -> btTypedConstraint_btConstraintInfo2_erp_set
    float btTypedConstraint_btConstraintInfo2_erp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> btTypedConstraint_btConstraintInfo2_erp_get
    void btTypedConstraint_btConstraintInfo2_J1linearAxis_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long) -> btTypedConstraint_btConstraintInfo2_J1linearAxis_set
    long btTypedConstraint_btConstraintInfo2_J1linearAxis_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> btTypedConstraint_btConstraintInfo2_J1linearAxis_get
    void btTypedConstraint_btConstraintInfo2_J1angularAxis_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long) -> btTypedConstraint_btConstraintInfo2_J1angularAxis_set
    long btTypedConstraint_btConstraintInfo2_J1angularAxis_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> btTypedConstraint_btConstraintInfo2_J1angularAxis_get
    void btTypedConstraint_btConstraintInfo2_J2linearAxis_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long) -> btTypedConstraint_btConstraintInfo2_J2linearAxis_set
    long btTypedConstraint_btConstraintInfo2_J2linearAxis_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> btTypedConstraint_btConstraintInfo2_J2linearAxis_get
    void btTypedConstraint_btConstraintInfo2_J2angularAxis_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long) -> btTypedConstraint_btConstraintInfo2_J2angularAxis_set
    long btTypedConstraint_btConstraintInfo2_J2angularAxis_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> btTypedConstraint_btConstraintInfo2_J2angularAxis_get
    void btTypedConstraint_btConstraintInfo2_rowskip_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,int) -> btTypedConstraint_btConstraintInfo2_rowskip_set
    int btTypedConstraint_btConstraintInfo2_rowskip_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> btTypedConstraint_btConstraintInfo2_rowskip_get
    void btTypedConstraint_btConstraintInfo2_constraintError_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long) -> btTypedConstraint_btConstraintInfo2_constraintError_set
    long btTypedConstraint_btConstraintInfo2_constraintError_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> btTypedConstraint_btConstraintInfo2_constraintError_get
    void btTypedConstraint_btConstraintInfo2_cfm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long) -> btTypedConstraint_btConstraintInfo2_cfm_set
    long btTypedConstraint_btConstraintInfo2_cfm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> btTypedConstraint_btConstraintInfo2_cfm_get
    void btTypedConstraint_btConstraintInfo2_lowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long) -> btTypedConstraint_btConstraintInfo2_lowerLimit_set
    long btTypedConstraint_btConstraintInfo2_lowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> btTypedConstraint_btConstraintInfo2_lowerLimit_get
    void btTypedConstraint_btConstraintInfo2_upperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long) -> btTypedConstraint_btConstraintInfo2_upperLimit_set
    long btTypedConstraint_btConstraintInfo2_upperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> btTypedConstraint_btConstraintInfo2_upperLimit_get
    void btTypedConstraint_btConstraintInfo2_findex_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,long) -> btTypedConstraint_btConstraintInfo2_findex_set
    long btTypedConstraint_btConstraintInfo2_findex_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> btTypedConstraint_btConstraintInfo2_findex_get
    void btTypedConstraint_btConstraintInfo2_numIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,int) -> btTypedConstraint_btConstraintInfo2_numIterations_set
    int btTypedConstraint_btConstraintInfo2_numIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> btTypedConstraint_btConstraintInfo2_numIterations_get
    void btTypedConstraint_btConstraintInfo2_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,float) -> btTypedConstraint_btConstraintInfo2_damping_set
    float btTypedConstraint_btConstraintInfo2_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> btTypedConstraint_btConstraintInfo2_damping_get
    long new_btTypedConstraint_btConstraintInfo2() -> new_btTypedConstraint_btConstraintInfo2
    void delete_btTypedConstraint_btConstraintInfo2(long) -> delete_btTypedConstraint_btConstraintInfo2
    int btTypedConstraint_getOverrideNumSolverIterations(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_getOverrideNumSolverIterations
    void btTypedConstraint_setOverrideNumSolverIterations(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,int) -> btTypedConstraint_setOverrideNumSolverIterations
    void btTypedConstraint_buildJacobian(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_buildJacobian
    void btTypedConstraint_setupSolverConstraint(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,long,int,int,float) -> btTypedConstraint_setupSolverConstraint
    void btTypedConstraint_getInfo1(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1) -> btTypedConstraint_getInfo1
    void btTypedConstraint_getInfo2(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> btTypedConstraint_getInfo2
    void btTypedConstraint_internalSetAppliedImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,float) -> btTypedConstraint_internalSetAppliedImpulse
    float btTypedConstraint_internalGetAppliedImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_internalGetAppliedImpulse
    float btTypedConstraint_getBreakingImpulseThreshold(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_getBreakingImpulseThreshold
    void btTypedConstraint_setBreakingImpulseThreshold(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,float) -> btTypedConstraint_setBreakingImpulseThreshold
    boolean btTypedConstraint_isEnabled(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_isEnabled
    void btTypedConstraint_setEnabled(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,boolean) -> btTypedConstraint_setEnabled
    void btTypedConstraint_solveConstraintObsolete(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,float) -> btTypedConstraint_solveConstraintObsolete
    long btTypedConstraint_getRigidBodyA__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_getRigidBodyA__SWIG_0
    long btTypedConstraint_getRigidBodyB__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_getRigidBodyB__SWIG_0
    int btTypedConstraint_getUserConstraintType(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_getUserConstraintType
    void btTypedConstraint_setUserConstraintType(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,int) -> btTypedConstraint_setUserConstraintType
    void btTypedConstraint_setUserConstraintId(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,int) -> btTypedConstraint_setUserConstraintId
    int btTypedConstraint_getUserConstraintId(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_getUserConstraintId
    void btTypedConstraint_setUserConstraintPtr(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,long) -> btTypedConstraint_setUserConstraintPtr
    long btTypedConstraint_getUserConstraintPtr(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_getUserConstraintPtr
    void btTypedConstraint_setJointFeedback(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback) -> btTypedConstraint_setJointFeedback
    long btTypedConstraint_getJointFeedback__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_getJointFeedback__SWIG_0
    int btTypedConstraint_getUid(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_getUid
    boolean btTypedConstraint_needsFeedback(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_needsFeedback
    void btTypedConstraint_enableFeedback(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,boolean) -> btTypedConstraint_enableFeedback
    float btTypedConstraint_getAppliedImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_getAppliedImpulse
    int btTypedConstraint_getConstraintType(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_getConstraintType
    void btTypedConstraint_setDbgDrawSize(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,float) -> btTypedConstraint_setDbgDrawSize
    float btTypedConstraint_getDbgDrawSize(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_getDbgDrawSize
    void btTypedConstraint_setParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,int,float,int) -> btTypedConstraint_setParam__SWIG_0
    void btTypedConstraint_setParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,int,float) -> btTypedConstraint_setParam__SWIG_1
    float btTypedConstraint_getParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,int,int) -> btTypedConstraint_getParam__SWIG_0
    float btTypedConstraint_getParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,int) -> btTypedConstraint_getParam__SWIG_1
    int btTypedConstraint_calculateSerializeBufferSize(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btTypedConstraint_calculateSerializeBufferSize
    java.lang.String btTypedConstraint_serialize(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,long,long) -> btTypedConstraint_serialize
    float btAdjustAngleToLimits(float,float,float) -> btAdjustAngleToLimits
    void btTypedConstraintFloatData_rbA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btTypedConstraintFloatData_rbA_set
    long btTypedConstraintFloatData_rbA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData) -> btTypedConstraintFloatData_rbA_get
    void btTypedConstraintFloatData_rbB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btTypedConstraintFloatData_rbB_set
    long btTypedConstraintFloatData_rbB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData) -> btTypedConstraintFloatData_rbB_get
    void btTypedConstraintFloatData_name_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,java.lang.String) -> btTypedConstraintFloatData_name_set
    java.lang.String btTypedConstraintFloatData_name_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData) -> btTypedConstraintFloatData_name_get
    void btTypedConstraintFloatData_objectType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,int) -> btTypedConstraintFloatData_objectType_set
    int btTypedConstraintFloatData_objectType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData) -> btTypedConstraintFloatData_objectType_get
    void btTypedConstraintFloatData_userConstraintType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,int) -> btTypedConstraintFloatData_userConstraintType_set
    int btTypedConstraintFloatData_userConstraintType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData) -> btTypedConstraintFloatData_userConstraintType_get
    void btTypedConstraintFloatData_userConstraintId_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,int) -> btTypedConstraintFloatData_userConstraintId_set
    int btTypedConstraintFloatData_userConstraintId_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData) -> btTypedConstraintFloatData_userConstraintId_get
    void btTypedConstraintFloatData_needsFeedback_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,int) -> btTypedConstraintFloatData_needsFeedback_set
    int btTypedConstraintFloatData_needsFeedback_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData) -> btTypedConstraintFloatData_needsFeedback_get
    void btTypedConstraintFloatData_appliedImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,float) -> btTypedConstraintFloatData_appliedImpulse_set
    float btTypedConstraintFloatData_appliedImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData) -> btTypedConstraintFloatData_appliedImpulse_get
    void btTypedConstraintFloatData_dbgDrawSize_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,float) -> btTypedConstraintFloatData_dbgDrawSize_set
    float btTypedConstraintFloatData_dbgDrawSize_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData) -> btTypedConstraintFloatData_dbgDrawSize_get
    void btTypedConstraintFloatData_disableCollisionsBetweenLinkedBodies_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,int) -> btTypedConstraintFloatData_disableCollisionsBetweenLinkedBodies_set
    int btTypedConstraintFloatData_disableCollisionsBetweenLinkedBodies_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData) -> btTypedConstraintFloatData_disableCollisionsBetweenLinkedBodies_get
    void btTypedConstraintFloatData_overrideNumSolverIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,int) -> btTypedConstraintFloatData_overrideNumSolverIterations_set
    int btTypedConstraintFloatData_overrideNumSolverIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData) -> btTypedConstraintFloatData_overrideNumSolverIterations_get
    void btTypedConstraintFloatData_breakingImpulseThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,float) -> btTypedConstraintFloatData_breakingImpulseThreshold_set
    float btTypedConstraintFloatData_breakingImpulseThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData) -> btTypedConstraintFloatData_breakingImpulseThreshold_get
    void btTypedConstraintFloatData_isEnabled_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData,int) -> btTypedConstraintFloatData_isEnabled_set
    int btTypedConstraintFloatData_isEnabled_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData) -> btTypedConstraintFloatData_isEnabled_get
    long new_btTypedConstraintFloatData() -> new_btTypedConstraintFloatData
    void delete_btTypedConstraintFloatData(long) -> delete_btTypedConstraintFloatData
    void btTypedConstraintData_rbA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btTypedConstraintData_rbA_set
    long btTypedConstraintData_rbA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btTypedConstraintData_rbA_get
    void btTypedConstraintData_rbB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> btTypedConstraintData_rbB_set
    long btTypedConstraintData_rbB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btTypedConstraintData_rbB_get
    void btTypedConstraintData_name_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,java.lang.String) -> btTypedConstraintData_name_set
    java.lang.String btTypedConstraintData_name_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btTypedConstraintData_name_get
    void btTypedConstraintData_objectType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,int) -> btTypedConstraintData_objectType_set
    int btTypedConstraintData_objectType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btTypedConstraintData_objectType_get
    void btTypedConstraintData_userConstraintType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,int) -> btTypedConstraintData_userConstraintType_set
    int btTypedConstraintData_userConstraintType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btTypedConstraintData_userConstraintType_get
    void btTypedConstraintData_userConstraintId_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,int) -> btTypedConstraintData_userConstraintId_set
    int btTypedConstraintData_userConstraintId_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btTypedConstraintData_userConstraintId_get
    void btTypedConstraintData_needsFeedback_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,int) -> btTypedConstraintData_needsFeedback_set
    int btTypedConstraintData_needsFeedback_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btTypedConstraintData_needsFeedback_get
    void btTypedConstraintData_appliedImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,float) -> btTypedConstraintData_appliedImpulse_set
    float btTypedConstraintData_appliedImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btTypedConstraintData_appliedImpulse_get
    void btTypedConstraintData_dbgDrawSize_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,float) -> btTypedConstraintData_dbgDrawSize_set
    float btTypedConstraintData_dbgDrawSize_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btTypedConstraintData_dbgDrawSize_get
    void btTypedConstraintData_disableCollisionsBetweenLinkedBodies_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,int) -> btTypedConstraintData_disableCollisionsBetweenLinkedBodies_set
    int btTypedConstraintData_disableCollisionsBetweenLinkedBodies_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btTypedConstraintData_disableCollisionsBetweenLinkedBodies_get
    void btTypedConstraintData_overrideNumSolverIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,int) -> btTypedConstraintData_overrideNumSolverIterations_set
    int btTypedConstraintData_overrideNumSolverIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btTypedConstraintData_overrideNumSolverIterations_get
    void btTypedConstraintData_breakingImpulseThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,float) -> btTypedConstraintData_breakingImpulseThreshold_set
    float btTypedConstraintData_breakingImpulseThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btTypedConstraintData_breakingImpulseThreshold_get
    void btTypedConstraintData_isEnabled_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData,int) -> btTypedConstraintData_isEnabled_set
    int btTypedConstraintData_isEnabled_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btTypedConstraintData_isEnabled_get
    long new_btTypedConstraintData() -> new_btTypedConstraintData
    void delete_btTypedConstraintData(long) -> delete_btTypedConstraintData
    void btTypedConstraintDoubleData_rbA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btTypedConstraintDoubleData_rbA_set
    long btTypedConstraintDoubleData_rbA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btTypedConstraintDoubleData_rbA_get
    void btTypedConstraintDoubleData_rbB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> btTypedConstraintDoubleData_rbB_set
    long btTypedConstraintDoubleData_rbB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btTypedConstraintDoubleData_rbB_get
    void btTypedConstraintDoubleData_name_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,java.lang.String) -> btTypedConstraintDoubleData_name_set
    java.lang.String btTypedConstraintDoubleData_name_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btTypedConstraintDoubleData_name_get
    void btTypedConstraintDoubleData_objectType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,int) -> btTypedConstraintDoubleData_objectType_set
    int btTypedConstraintDoubleData_objectType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btTypedConstraintDoubleData_objectType_get
    void btTypedConstraintDoubleData_userConstraintType_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,int) -> btTypedConstraintDoubleData_userConstraintType_set
    int btTypedConstraintDoubleData_userConstraintType_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btTypedConstraintDoubleData_userConstraintType_get
    void btTypedConstraintDoubleData_userConstraintId_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,int) -> btTypedConstraintDoubleData_userConstraintId_set
    int btTypedConstraintDoubleData_userConstraintId_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btTypedConstraintDoubleData_userConstraintId_get
    void btTypedConstraintDoubleData_needsFeedback_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,int) -> btTypedConstraintDoubleData_needsFeedback_set
    int btTypedConstraintDoubleData_needsFeedback_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btTypedConstraintDoubleData_needsFeedback_get
    void btTypedConstraintDoubleData_appliedImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,double) -> btTypedConstraintDoubleData_appliedImpulse_set
    double btTypedConstraintDoubleData_appliedImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btTypedConstraintDoubleData_appliedImpulse_get
    void btTypedConstraintDoubleData_dbgDrawSize_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,double) -> btTypedConstraintDoubleData_dbgDrawSize_set
    double btTypedConstraintDoubleData_dbgDrawSize_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btTypedConstraintDoubleData_dbgDrawSize_get
    void btTypedConstraintDoubleData_disableCollisionsBetweenLinkedBodies_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,int) -> btTypedConstraintDoubleData_disableCollisionsBetweenLinkedBodies_set
    int btTypedConstraintDoubleData_disableCollisionsBetweenLinkedBodies_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btTypedConstraintDoubleData_disableCollisionsBetweenLinkedBodies_get
    void btTypedConstraintDoubleData_overrideNumSolverIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,int) -> btTypedConstraintDoubleData_overrideNumSolverIterations_set
    int btTypedConstraintDoubleData_overrideNumSolverIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btTypedConstraintDoubleData_overrideNumSolverIterations_get
    void btTypedConstraintDoubleData_breakingImpulseThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,double) -> btTypedConstraintDoubleData_breakingImpulseThreshold_set
    double btTypedConstraintDoubleData_breakingImpulseThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btTypedConstraintDoubleData_breakingImpulseThreshold_get
    void btTypedConstraintDoubleData_isEnabled_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,int) -> btTypedConstraintDoubleData_isEnabled_set
    int btTypedConstraintDoubleData_isEnabled_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btTypedConstraintDoubleData_isEnabled_get
    void btTypedConstraintDoubleData_padding_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData,java.lang.String) -> btTypedConstraintDoubleData_padding_set
    java.lang.String btTypedConstraintDoubleData_padding_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btTypedConstraintDoubleData_padding_get
    long new_btTypedConstraintDoubleData() -> new_btTypedConstraintDoubleData
    void delete_btTypedConstraintDoubleData(long) -> delete_btTypedConstraintDoubleData
    long new_btAngularLimit() -> new_btAngularLimit
    void btAngularLimit_set__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit,float,float,float,float,float) -> btAngularLimit_set__SWIG_0
    void btAngularLimit_set__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit,float,float,float,float) -> btAngularLimit_set__SWIG_1
    void btAngularLimit_set__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit,float,float,float) -> btAngularLimit_set__SWIG_2
    void btAngularLimit_set__SWIG_3(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit,float,float) -> btAngularLimit_set__SWIG_3
    void btAngularLimit_test(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit,float) -> btAngularLimit_test
    float btAngularLimit_getSoftness(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit) -> btAngularLimit_getSoftness
    float btAngularLimit_getBiasFactor(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit) -> btAngularLimit_getBiasFactor
    float btAngularLimit_getRelaxationFactor(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit) -> btAngularLimit_getRelaxationFactor
    float btAngularLimit_getCorrection(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit) -> btAngularLimit_getCorrection
    float btAngularLimit_getSign(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit) -> btAngularLimit_getSign
    float btAngularLimit_getHalfRange(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit) -> btAngularLimit_getHalfRange
    boolean btAngularLimit_isLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit) -> btAngularLimit_isLimit
    void btAngularLimit_fit(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit,long) -> btAngularLimit_fit
    float btAngularLimit_getError(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit) -> btAngularLimit_getError
    float btAngularLimit_getLow(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit) -> btAngularLimit_getLow
    float btAngularLimit_getHigh(long,com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit) -> btAngularLimit_getHigh
    void delete_btAngularLimit(long) -> delete_btAngularLimit
    void delete_btDynamicsWorld(long) -> delete_btDynamicsWorld
    int btDynamicsWorld_stepSimulation__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float,int,float) -> btDynamicsWorld_stepSimulation__SWIG_0
    int btDynamicsWorld_stepSimulation__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float,int) -> btDynamicsWorld_stepSimulation__SWIG_1
    int btDynamicsWorld_stepSimulation__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float) -> btDynamicsWorld_stepSimulation__SWIG_2
    void btDynamicsWorld_addConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,boolean) -> btDynamicsWorld_addConstraint__SWIG_0
    void btDynamicsWorld_addConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btDynamicsWorld_addConstraint__SWIG_1
    void btDynamicsWorld_removeConstraint(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btDynamicsWorld_removeConstraint
    void btDynamicsWorld_addAction(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface) -> btDynamicsWorld_addAction
    void btDynamicsWorld_removeAction(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface) -> btDynamicsWorld_removeAction
    void btDynamicsWorld_setGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,com.badlogic.gdx.math.Vector3) -> btDynamicsWorld_setGravity
    com.badlogic.gdx.math.Vector3 btDynamicsWorld_getGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld) -> btDynamicsWorld_getGravity
    void btDynamicsWorld_synchronizeMotionStates(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld) -> btDynamicsWorld_synchronizeMotionStates
    void btDynamicsWorld_addRigidBody__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btDynamicsWorld_addRigidBody__SWIG_0
    void btDynamicsWorld_addRigidBody__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,short,short) -> btDynamicsWorld_addRigidBody__SWIG_1
    void btDynamicsWorld_removeRigidBody(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btDynamicsWorld_removeRigidBody
    void btDynamicsWorld_setConstraintSolver(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver) -> btDynamicsWorld_setConstraintSolver
    long btDynamicsWorld_getConstraintSolver(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld) -> btDynamicsWorld_getConstraintSolver
    int btDynamicsWorld_getNumConstraints(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld) -> btDynamicsWorld_getNumConstraints
    long btDynamicsWorld_getConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,int) -> btDynamicsWorld_getConstraint__SWIG_0
    int btDynamicsWorld_getWorldType(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld) -> btDynamicsWorld_getWorldType
    void btDynamicsWorld_clearForces(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld) -> btDynamicsWorld_clearForces
    void btDynamicsWorld_setInternalTickCallback__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,long,boolean) -> btDynamicsWorld_setInternalTickCallback__SWIG_0
    void btDynamicsWorld_setInternalTickCallback__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,long) -> btDynamicsWorld_setInternalTickCallback__SWIG_1
    void btDynamicsWorld_setInternalTickCallback__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long) -> btDynamicsWorld_setInternalTickCallback__SWIG_2
    void btDynamicsWorld_setWorldUserInfo(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long) -> btDynamicsWorld_setWorldUserInfo
    long btDynamicsWorld_getWorldUserInfo(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld) -> btDynamicsWorld_getWorldUserInfo
    long btDynamicsWorld_getSolverInfo(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld) -> btDynamicsWorld_getSolverInfo
    void btDynamicsWorld_addVehicle(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface) -> btDynamicsWorld_addVehicle
    void btDynamicsWorld_removeVehicle(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface) -> btDynamicsWorld_removeVehicle
    void btDynamicsWorld_addCharacter(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface) -> btDynamicsWorld_addCharacter
    void btDynamicsWorld_removeCharacter(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface) -> btDynamicsWorld_removeCharacter
    void btDynamicsWorldDoubleData_solverInfo_set(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData,long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btDynamicsWorldDoubleData_solverInfo_set
    long btDynamicsWorldDoubleData_solverInfo_get(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData) -> btDynamicsWorldDoubleData_solverInfo_get
    void btDynamicsWorldDoubleData_gravity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btDynamicsWorldDoubleData_gravity_set
    long btDynamicsWorldDoubleData_gravity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData) -> btDynamicsWorldDoubleData_gravity_get
    long new_btDynamicsWorldDoubleData() -> new_btDynamicsWorldDoubleData
    void delete_btDynamicsWorldDoubleData(long) -> delete_btDynamicsWorldDoubleData
    void btDynamicsWorldFloatData_solverInfo_set(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData,long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btDynamicsWorldFloatData_solverInfo_set
    long btDynamicsWorldFloatData_solverInfo_get(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData) -> btDynamicsWorldFloatData_solverInfo_get
    void btDynamicsWorldFloatData_gravity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btDynamicsWorldFloatData_gravity_set
    long btDynamicsWorldFloatData_gravity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData) -> btDynamicsWorldFloatData_gravity_get
    long new_btDynamicsWorldFloatData() -> new_btDynamicsWorldFloatData
    void delete_btDynamicsWorldFloatData(long) -> delete_btDynamicsWorldFloatData
    void InternalTickCallback_CB(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float) -> InternalTickCallback_CB
    long new_InternalTickCallback__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,boolean) -> new_InternalTickCallback__SWIG_0
    long new_InternalTickCallback__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld) -> new_InternalTickCallback__SWIG_1
    long new_InternalTickCallback__SWIG_2() -> new_InternalTickCallback__SWIG_2
    void InternalTickCallback_onInternalTick(long,com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback,long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float) -> InternalTickCallback_onInternalTick
    void InternalTickCallback_onInternalTickSwigExplicitInternalTickCallback(long,com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback,long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float) -> InternalTickCallback_onInternalTickSwigExplicitInternalTickCallback
    void InternalTickCallback_detach__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback) -> InternalTickCallback_detach__SWIG_0
    void InternalTickCallback_attach__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback,long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,boolean) -> InternalTickCallback_attach__SWIG_0
    void InternalTickCallback_attach__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback) -> InternalTickCallback_attach__SWIG_1
    void InternalTickCallback_detach__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,boolean) -> InternalTickCallback_detach__SWIG_1
    void delete_InternalTickCallback(long) -> delete_InternalTickCallback
    void InternalTickCallback_director_connect(com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback,long,boolean,boolean) -> InternalTickCallback_director_connect
    void InternalTickCallback_change_ownership(com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback,long,boolean) -> InternalTickCallback_change_ownership
    long new_btSimpleDynamicsWorld(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration) -> new_btSimpleDynamicsWorld
    void delete_btSimpleDynamicsWorld(long) -> delete_btSimpleDynamicsWorld
    int btSimpleDynamicsWorld_stepSimulation__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld,float,int,float) -> btSimpleDynamicsWorld_stepSimulation__SWIG_0
    int btSimpleDynamicsWorld_stepSimulation__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld,float,int) -> btSimpleDynamicsWorld_stepSimulation__SWIG_1
    int btSimpleDynamicsWorld_stepSimulation__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld,float) -> btSimpleDynamicsWorld_stepSimulation__SWIG_2
    void btSimpleDynamicsWorld_addRigidBody__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btSimpleDynamicsWorld_addRigidBody__SWIG_0
    void btSimpleDynamicsWorld_addRigidBody__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,short,short) -> btSimpleDynamicsWorld_addRigidBody__SWIG_1
    void delete_btActionInterface(long) -> delete_btActionInterface
    void btActionInterface_updateAction(long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,float) -> btActionInterface_updateAction
    void btActionInterface_debugDraw(long,com.badlogic.gdx.physics.bullet.dynamics.btActionInterface,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btActionInterface_debugDraw
    long new_btDiscreteDynamicsWorld(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration) -> new_btDiscreteDynamicsWorld
    void delete_btDiscreteDynamicsWorld(long) -> delete_btDiscreteDynamicsWorld
    int btDiscreteDynamicsWorld_stepSimulation__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,float,int,float) -> btDiscreteDynamicsWorld_stepSimulation__SWIG_0
    int btDiscreteDynamicsWorld_stepSimulation__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,float,int) -> btDiscreteDynamicsWorld_stepSimulation__SWIG_1
    int btDiscreteDynamicsWorld_stepSimulation__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,float) -> btDiscreteDynamicsWorld_stepSimulation__SWIG_2
    void btDiscreteDynamicsWorld_synchronizeSingleMotionState(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btDiscreteDynamicsWorld_synchronizeSingleMotionState
    void btDiscreteDynamicsWorld_addConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,boolean) -> btDiscreteDynamicsWorld_addConstraint__SWIG_0
    void btDiscreteDynamicsWorld_addConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btDiscreteDynamicsWorld_addConstraint__SWIG_1
    long btDiscreteDynamicsWorld_getSimulationIslandManager__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld) -> btDiscreteDynamicsWorld_getSimulationIslandManager__SWIG_0
    long btDiscreteDynamicsWorld_getCollisionWorld(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld) -> btDiscreteDynamicsWorld_getCollisionWorld
    void btDiscreteDynamicsWorld_addCollisionObject__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short,short) -> btDiscreteDynamicsWorld_addCollisionObject__SWIG_0
    void btDiscreteDynamicsWorld_addCollisionObject__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short) -> btDiscreteDynamicsWorld_addCollisionObject__SWIG_1
    void btDiscreteDynamicsWorld_addCollisionObject__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btDiscreteDynamicsWorld_addCollisionObject__SWIG_2
    void btDiscreteDynamicsWorld_addRigidBody__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btDiscreteDynamicsWorld_addRigidBody__SWIG_0
    void btDiscreteDynamicsWorld_addRigidBody__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,short,short) -> btDiscreteDynamicsWorld_addRigidBody__SWIG_1
    void btDiscreteDynamicsWorld_debugDrawConstraint(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> btDiscreteDynamicsWorld_debugDrawConstraint
    long btDiscreteDynamicsWorld_getConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,int) -> btDiscreteDynamicsWorld_getConstraint__SWIG_0
    void btDiscreteDynamicsWorld_applyGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld) -> btDiscreteDynamicsWorld_applyGravity
    void btDiscreteDynamicsWorld_setNumTasks(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,int) -> btDiscreteDynamicsWorld_setNumTasks
    void btDiscreteDynamicsWorld_updateVehicles(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,float) -> btDiscreteDynamicsWorld_updateVehicles
    void btDiscreteDynamicsWorld_setSynchronizeAllMotionStates(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,boolean) -> btDiscreteDynamicsWorld_setSynchronizeAllMotionStates
    boolean btDiscreteDynamicsWorld_getSynchronizeAllMotionStates(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld) -> btDiscreteDynamicsWorld_getSynchronizeAllMotionStates
    void btDiscreteDynamicsWorld_setApplySpeculativeContactRestitution(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,boolean) -> btDiscreteDynamicsWorld_setApplySpeculativeContactRestitution
    boolean btDiscreteDynamicsWorld_getApplySpeculativeContactRestitution(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld) -> btDiscreteDynamicsWorld_getApplySpeculativeContactRestitution
    void btDiscreteDynamicsWorld_setLatencyMotionStateInterpolation(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld,boolean) -> btDiscreteDynamicsWorld_setLatencyMotionStateInterpolation
    boolean btDiscreteDynamicsWorld_getLatencyMotionStateInterpolation(long,com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld) -> btDiscreteDynamicsWorld_getLatencyMotionStateInterpolation
    void delete_btCharacterControllerInterface(long) -> delete_btCharacterControllerInterface
    void btCharacterControllerInterface_setWalkDirection(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface,com.badlogic.gdx.math.Vector3) -> btCharacterControllerInterface_setWalkDirection
    void btCharacterControllerInterface_setVelocityForTimeInterval(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface,com.badlogic.gdx.math.Vector3,float) -> btCharacterControllerInterface_setVelocityForTimeInterval
    void btCharacterControllerInterface_reset(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btCharacterControllerInterface_reset
    void btCharacterControllerInterface_warp(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface,com.badlogic.gdx.math.Vector3) -> btCharacterControllerInterface_warp
    void btCharacterControllerInterface_preStep(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> btCharacterControllerInterface_preStep
    void btCharacterControllerInterface_playerStep(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface,long,com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,float) -> btCharacterControllerInterface_playerStep
    boolean btCharacterControllerInterface_canJump(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface) -> btCharacterControllerInterface_canJump
    void btCharacterControllerInterface_jump(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface) -> btCharacterControllerInterface_jump
    boolean btCharacterControllerInterface_onGround(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface) -> btCharacterControllerInterface_onGround
    void btCharacterControllerInterface_setUpInterpolate(long,com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface,boolean) -> btCharacterControllerInterface_setUpInterpolate
    long new_btKinematicCharacterController__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,float,int) -> new_btKinematicCharacterController__SWIG_0
    long new_btKinematicCharacterController__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject,long,com.badlogic.gdx.physics.bullet.collision.btConvexShape,float) -> new_btKinematicCharacterController__SWIG_1
    void delete_btKinematicCharacterController(long) -> delete_btKinematicCharacterController
    void btKinematicCharacterController_setUpAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController,int) -> btKinematicCharacterController_setUpAxis
    void btKinematicCharacterController_setFallSpeed(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController,float) -> btKinematicCharacterController_setFallSpeed
    void btKinematicCharacterController_setJumpSpeed(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController,float) -> btKinematicCharacterController_setJumpSpeed
    void btKinematicCharacterController_setMaxJumpHeight(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController,float) -> btKinematicCharacterController_setMaxJumpHeight
    void btKinematicCharacterController_setGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController,float) -> btKinematicCharacterController_setGravity
    float btKinematicCharacterController_getGravity(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController) -> btKinematicCharacterController_getGravity
    void btKinematicCharacterController_setMaxSlope(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController,float) -> btKinematicCharacterController_setMaxSlope
    float btKinematicCharacterController_getMaxSlope(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController) -> btKinematicCharacterController_getMaxSlope
    long btKinematicCharacterController_getGhostObject(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController) -> btKinematicCharacterController_getGhostObject
    void btKinematicCharacterController_setUseGhostSweepTest(long,com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController,boolean) -> btKinematicCharacterController_setUseGhostSweepTest
    void btContactSolverInfoData_tau_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_tau_set
    float btContactSolverInfoData_tau_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_tau_get
    void btContactSolverInfoData_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_damping_set
    float btContactSolverInfoData_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_damping_get
    void btContactSolverInfoData_friction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_friction_set
    float btContactSolverInfoData_friction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_friction_get
    void btContactSolverInfoData_timeStep_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_timeStep_set
    float btContactSolverInfoData_timeStep_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_timeStep_get
    void btContactSolverInfoData_restitution_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_restitution_set
    float btContactSolverInfoData_restitution_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_restitution_get
    void btContactSolverInfoData_numIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,int) -> btContactSolverInfoData_numIterations_set
    int btContactSolverInfoData_numIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_numIterations_get
    void btContactSolverInfoData_maxErrorReduction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_maxErrorReduction_set
    float btContactSolverInfoData_maxErrorReduction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_maxErrorReduction_get
    void btContactSolverInfoData_sor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_sor_set
    float btContactSolverInfoData_sor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_sor_get
    void btContactSolverInfoData_erp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_erp_set
    float btContactSolverInfoData_erp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_erp_get
    void btContactSolverInfoData_erp2_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_erp2_set
    float btContactSolverInfoData_erp2_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_erp2_get
    void btContactSolverInfoData_globalCfm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_globalCfm_set
    float btContactSolverInfoData_globalCfm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_globalCfm_get
    void btContactSolverInfoData_splitImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,int) -> btContactSolverInfoData_splitImpulse_set
    int btContactSolverInfoData_splitImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_splitImpulse_get
    void btContactSolverInfoData_splitImpulsePenetrationThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_splitImpulsePenetrationThreshold_set
    float btContactSolverInfoData_splitImpulsePenetrationThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_splitImpulsePenetrationThreshold_get
    void btContactSolverInfoData_splitImpulseTurnErp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_splitImpulseTurnErp_set
    float btContactSolverInfoData_splitImpulseTurnErp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_splitImpulseTurnErp_get
    void btContactSolverInfoData_linearSlop_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_linearSlop_set
    float btContactSolverInfoData_linearSlop_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_linearSlop_get
    void btContactSolverInfoData_warmstartingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_warmstartingFactor_set
    float btContactSolverInfoData_warmstartingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_warmstartingFactor_get
    void btContactSolverInfoData_solverMode_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,int) -> btContactSolverInfoData_solverMode_set
    int btContactSolverInfoData_solverMode_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_solverMode_get
    void btContactSolverInfoData_restingContactRestitutionThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,int) -> btContactSolverInfoData_restingContactRestitutionThreshold_set
    int btContactSolverInfoData_restingContactRestitutionThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_restingContactRestitutionThreshold_get
    void btContactSolverInfoData_minimumSolverBatchSize_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,int) -> btContactSolverInfoData_minimumSolverBatchSize_set
    int btContactSolverInfoData_minimumSolverBatchSize_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_minimumSolverBatchSize_get
    void btContactSolverInfoData_maxGyroscopicForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_maxGyroscopicForce_set
    float btContactSolverInfoData_maxGyroscopicForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_maxGyroscopicForce_get
    void btContactSolverInfoData_singleAxisRollingFrictionThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData,float) -> btContactSolverInfoData_singleAxisRollingFrictionThreshold_set
    float btContactSolverInfoData_singleAxisRollingFrictionThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> btContactSolverInfoData_singleAxisRollingFrictionThreshold_get
    long new_btContactSolverInfoData() -> new_btContactSolverInfoData
    void delete_btContactSolverInfoData(long) -> delete_btContactSolverInfoData
    long new_btContactSolverInfo() -> new_btContactSolverInfo
    void delete_btContactSolverInfo(long) -> delete_btContactSolverInfo
    void btContactSolverInfoDoubleData_tau_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_tau_set
    double btContactSolverInfoDoubleData_tau_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_tau_get
    void btContactSolverInfoDoubleData_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_damping_set
    double btContactSolverInfoDoubleData_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_damping_get
    void btContactSolverInfoDoubleData_friction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_friction_set
    double btContactSolverInfoDoubleData_friction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_friction_get
    void btContactSolverInfoDoubleData_timeStep_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_timeStep_set
    double btContactSolverInfoDoubleData_timeStep_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_timeStep_get
    void btContactSolverInfoDoubleData_restitution_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_restitution_set
    double btContactSolverInfoDoubleData_restitution_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_restitution_get
    void btContactSolverInfoDoubleData_maxErrorReduction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_maxErrorReduction_set
    double btContactSolverInfoDoubleData_maxErrorReduction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_maxErrorReduction_get
    void btContactSolverInfoDoubleData_sor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_sor_set
    double btContactSolverInfoDoubleData_sor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_sor_get
    void btContactSolverInfoDoubleData_erp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_erp_set
    double btContactSolverInfoDoubleData_erp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_erp_get
    void btContactSolverInfoDoubleData_erp2_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_erp2_set
    double btContactSolverInfoDoubleData_erp2_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_erp2_get
    void btContactSolverInfoDoubleData_globalCfm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_globalCfm_set
    double btContactSolverInfoDoubleData_globalCfm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_globalCfm_get
    void btContactSolverInfoDoubleData_splitImpulsePenetrationThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_splitImpulsePenetrationThreshold_set
    double btContactSolverInfoDoubleData_splitImpulsePenetrationThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_splitImpulsePenetrationThreshold_get
    void btContactSolverInfoDoubleData_splitImpulseTurnErp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_splitImpulseTurnErp_set
    double btContactSolverInfoDoubleData_splitImpulseTurnErp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_splitImpulseTurnErp_get
    void btContactSolverInfoDoubleData_linearSlop_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_linearSlop_set
    double btContactSolverInfoDoubleData_linearSlop_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_linearSlop_get
    void btContactSolverInfoDoubleData_warmstartingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_warmstartingFactor_set
    double btContactSolverInfoDoubleData_warmstartingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_warmstartingFactor_get
    void btContactSolverInfoDoubleData_maxGyroscopicForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_maxGyroscopicForce_set
    double btContactSolverInfoDoubleData_maxGyroscopicForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_maxGyroscopicForce_get
    void btContactSolverInfoDoubleData_singleAxisRollingFrictionThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,double) -> btContactSolverInfoDoubleData_singleAxisRollingFrictionThreshold_set
    double btContactSolverInfoDoubleData_singleAxisRollingFrictionThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_singleAxisRollingFrictionThreshold_get
    void btContactSolverInfoDoubleData_numIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,int) -> btContactSolverInfoDoubleData_numIterations_set
    int btContactSolverInfoDoubleData_numIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_numIterations_get
    void btContactSolverInfoDoubleData_solverMode_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,int) -> btContactSolverInfoDoubleData_solverMode_set
    int btContactSolverInfoDoubleData_solverMode_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_solverMode_get
    void btContactSolverInfoDoubleData_restingContactRestitutionThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,int) -> btContactSolverInfoDoubleData_restingContactRestitutionThreshold_set
    int btContactSolverInfoDoubleData_restingContactRestitutionThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_restingContactRestitutionThreshold_get
    void btContactSolverInfoDoubleData_minimumSolverBatchSize_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,int) -> btContactSolverInfoDoubleData_minimumSolverBatchSize_set
    int btContactSolverInfoDoubleData_minimumSolverBatchSize_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_minimumSolverBatchSize_get
    void btContactSolverInfoDoubleData_splitImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,int) -> btContactSolverInfoDoubleData_splitImpulse_set
    int btContactSolverInfoDoubleData_splitImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_splitImpulse_get
    void btContactSolverInfoDoubleData_padding_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData,java.lang.String) -> btContactSolverInfoDoubleData_padding_set
    java.lang.String btContactSolverInfoDoubleData_padding_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> btContactSolverInfoDoubleData_padding_get
    long new_btContactSolverInfoDoubleData() -> new_btContactSolverInfoDoubleData
    void delete_btContactSolverInfoDoubleData(long) -> delete_btContactSolverInfoDoubleData
    void btContactSolverInfoFloatData_tau_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_tau_set
    float btContactSolverInfoFloatData_tau_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_tau_get
    void btContactSolverInfoFloatData_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_damping_set
    float btContactSolverInfoFloatData_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_damping_get
    void btContactSolverInfoFloatData_friction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_friction_set
    float btContactSolverInfoFloatData_friction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_friction_get
    void btContactSolverInfoFloatData_timeStep_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_timeStep_set
    float btContactSolverInfoFloatData_timeStep_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_timeStep_get
    void btContactSolverInfoFloatData_restitution_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_restitution_set
    float btContactSolverInfoFloatData_restitution_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_restitution_get
    void btContactSolverInfoFloatData_maxErrorReduction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_maxErrorReduction_set
    float btContactSolverInfoFloatData_maxErrorReduction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_maxErrorReduction_get
    void btContactSolverInfoFloatData_sor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_sor_set
    float btContactSolverInfoFloatData_sor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_sor_get
    void btContactSolverInfoFloatData_erp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_erp_set
    float btContactSolverInfoFloatData_erp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_erp_get
    void btContactSolverInfoFloatData_erp2_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_erp2_set
    float btContactSolverInfoFloatData_erp2_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_erp2_get
    void btContactSolverInfoFloatData_globalCfm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_globalCfm_set
    float btContactSolverInfoFloatData_globalCfm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_globalCfm_get
    void btContactSolverInfoFloatData_splitImpulsePenetrationThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_splitImpulsePenetrationThreshold_set
    float btContactSolverInfoFloatData_splitImpulsePenetrationThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_splitImpulsePenetrationThreshold_get
    void btContactSolverInfoFloatData_splitImpulseTurnErp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_splitImpulseTurnErp_set
    float btContactSolverInfoFloatData_splitImpulseTurnErp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_splitImpulseTurnErp_get
    void btContactSolverInfoFloatData_linearSlop_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_linearSlop_set
    float btContactSolverInfoFloatData_linearSlop_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_linearSlop_get
    void btContactSolverInfoFloatData_warmstartingFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_warmstartingFactor_set
    float btContactSolverInfoFloatData_warmstartingFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_warmstartingFactor_get
    void btContactSolverInfoFloatData_maxGyroscopicForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_maxGyroscopicForce_set
    float btContactSolverInfoFloatData_maxGyroscopicForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_maxGyroscopicForce_get
    void btContactSolverInfoFloatData_singleAxisRollingFrictionThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,float) -> btContactSolverInfoFloatData_singleAxisRollingFrictionThreshold_set
    float btContactSolverInfoFloatData_singleAxisRollingFrictionThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_singleAxisRollingFrictionThreshold_get
    void btContactSolverInfoFloatData_numIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,int) -> btContactSolverInfoFloatData_numIterations_set
    int btContactSolverInfoFloatData_numIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_numIterations_get
    void btContactSolverInfoFloatData_solverMode_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,int) -> btContactSolverInfoFloatData_solverMode_set
    int btContactSolverInfoFloatData_solverMode_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_solverMode_get
    void btContactSolverInfoFloatData_restingContactRestitutionThreshold_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,int) -> btContactSolverInfoFloatData_restingContactRestitutionThreshold_set
    int btContactSolverInfoFloatData_restingContactRestitutionThreshold_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_restingContactRestitutionThreshold_get
    void btContactSolverInfoFloatData_minimumSolverBatchSize_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,int) -> btContactSolverInfoFloatData_minimumSolverBatchSize_set
    int btContactSolverInfoFloatData_minimumSolverBatchSize_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_minimumSolverBatchSize_get
    void btContactSolverInfoFloatData_splitImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,int) -> btContactSolverInfoFloatData_splitImpulse_set
    int btContactSolverInfoFloatData_splitImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_splitImpulse_get
    void btContactSolverInfoFloatData_padding_set(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData,java.lang.String) -> btContactSolverInfoFloatData_padding_set
    java.lang.String btContactSolverInfoFloatData_padding_get(long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> btContactSolverInfoFloatData_padding_get
    long new_btContactSolverInfoFloatData() -> new_btContactSolverInfoFloatData
    void delete_btContactSolverInfoFloatData(long) -> delete_btContactSolverInfoFloatData
    void delete_btConstraintSolver(long) -> delete_btConstraintSolver
    void btConstraintSolver_prepareSolve(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,int,int) -> btConstraintSolver_prepareSolve
    float btConstraintSolver_solveGroup(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,long,int,long,int,long,int,long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btConstraintSolver_solveGroup
    void btConstraintSolver_allSolved(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btConstraintSolver_allSolved
    void btConstraintSolver_reset(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver) -> btConstraintSolver_reset
    int btConstraintSolver_getSolverType(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver) -> btConstraintSolver_getSolverType
    long new_btSequentialImpulseConstraintSolver() -> new_btSequentialImpulseConstraintSolver
    void delete_btSequentialImpulseConstraintSolver(long) -> delete_btSequentialImpulseConstraintSolver
    long btSequentialImpulseConstraintSolver_btRand2(long,com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver) -> btSequentialImpulseConstraintSolver_btRand2
    int btSequentialImpulseConstraintSolver_btRandInt2(long,com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver,int) -> btSequentialImpulseConstraintSolver_btRandInt2
    void btSequentialImpulseConstraintSolver_setRandSeed(long,com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver,long) -> btSequentialImpulseConstraintSolver_setRandSeed
    long btSequentialImpulseConstraintSolver_getRandSeed(long,com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver) -> btSequentialImpulseConstraintSolver_getRandSeed
    void btSolverBody_worldTransform_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btSolverBody_worldTransform_set
    long btSolverBody_worldTransform_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_worldTransform_get
    void btSolverBody_deltaLinearVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverBody_deltaLinearVelocity_set
    long btSolverBody_deltaLinearVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_deltaLinearVelocity_get
    void btSolverBody_deltaAngularVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverBody_deltaAngularVelocity_set
    long btSolverBody_deltaAngularVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_deltaAngularVelocity_get
    void btSolverBody_angularFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverBody_angularFactor_set
    long btSolverBody_angularFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_angularFactor_get
    void btSolverBody_linearFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverBody_linearFactor_set
    long btSolverBody_linearFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_linearFactor_get
    void btSolverBody_invMass_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverBody_invMass_set
    long btSolverBody_invMass_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_invMass_get
    void btSolverBody_pushVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverBody_pushVelocity_set
    long btSolverBody_pushVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_pushVelocity_get
    void btSolverBody_turnVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverBody_turnVelocity_set
    long btSolverBody_turnVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_turnVelocity_get
    void btSolverBody_linearVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverBody_linearVelocity_set
    long btSolverBody_linearVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_linearVelocity_get
    void btSolverBody_angularVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverBody_angularVelocity_set
    long btSolverBody_angularVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_angularVelocity_get
    void btSolverBody_externalForceImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverBody_externalForceImpulse_set
    long btSolverBody_externalForceImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_externalForceImpulse_get
    void btSolverBody_externalTorqueImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverBody_externalTorqueImpulse_set
    long btSolverBody_externalTorqueImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_externalTorqueImpulse_get
    void btSolverBody_originalBody_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btSolverBody_originalBody_set
    long btSolverBody_originalBody_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_originalBody_get
    void btSolverBody_getVelocityInLocalPointNoDelta(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btSolverBody_getVelocityInLocalPointNoDelta
    void btSolverBody_getVelocityInLocalPointObsolete(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btSolverBody_getVelocityInLocalPointObsolete
    void btSolverBody_getAngularVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3) -> btSolverBody_getAngularVelocity
    void btSolverBody_applyImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> btSolverBody_applyImpulse
    void btSolverBody_internalApplyPushImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> btSolverBody_internalApplyPushImpulse
    com.badlogic.gdx.math.Vector3 btSolverBody_internalGetDeltaLinearVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_internalGetDeltaLinearVelocity
    com.badlogic.gdx.math.Vector3 btSolverBody_internalGetDeltaAngularVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_internalGetDeltaAngularVelocity
    com.badlogic.gdx.math.Vector3 btSolverBody_internalGetAngularFactor(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_internalGetAngularFactor
    com.badlogic.gdx.math.Vector3 btSolverBody_internalGetInvMass(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_internalGetInvMass
    void btSolverBody_internalSetInvMass(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3) -> btSolverBody_internalSetInvMass
    com.badlogic.gdx.math.Vector3 btSolverBody_internalGetPushVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_internalGetPushVelocity
    com.badlogic.gdx.math.Vector3 btSolverBody_internalGetTurnVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_internalGetTurnVelocity
    void btSolverBody_internalGetVelocityInLocalPointObsolete(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btSolverBody_internalGetVelocityInLocalPointObsolete
    void btSolverBody_internalGetAngularVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3) -> btSolverBody_internalGetAngularVelocity
    void btSolverBody_internalApplyImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> btSolverBody_internalApplyImpulse
    void btSolverBody_writebackVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> btSolverBody_writebackVelocity
    void btSolverBody_writebackVelocityAndTransform(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,float,float) -> btSolverBody_writebackVelocityAndTransform
    long new_btSolverBody() -> new_btSolverBody
    void delete_btSolverBody(long) -> delete_btSolverBody
    long new_btSliderConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> new_btSliderConstraint__SWIG_0
    long new_btSliderConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean) -> new_btSliderConstraint__SWIG_1
    void btSliderConstraint_getInfo1NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1) -> btSliderConstraint_getInfo1NonVirtual
    void btSliderConstraint_getInfo2NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> btSliderConstraint_getInfo2NonVirtual
    long btSliderConstraint_getRigidBodyA(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getRigidBodyA
    long btSliderConstraint_getRigidBodyB(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getRigidBodyB
    com.badlogic.gdx.math.Matrix4 btSliderConstraint_getCalculatedTransformA(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getCalculatedTransformA
    com.badlogic.gdx.math.Matrix4 btSliderConstraint_getCalculatedTransformB(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getCalculatedTransformB
    com.badlogic.gdx.math.Matrix4 btSliderConstraint_getFrameOffsetA__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getFrameOffsetA__SWIG_0
    com.badlogic.gdx.math.Matrix4 btSliderConstraint_getFrameOffsetB__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getFrameOffsetB__SWIG_0
    float btSliderConstraint_getLowerLinLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getLowerLinLimit
    void btSliderConstraint_setLowerLinLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setLowerLinLimit
    float btSliderConstraint_getUpperLinLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getUpperLinLimit
    void btSliderConstraint_setUpperLinLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setUpperLinLimit
    float btSliderConstraint_getLowerAngLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getLowerAngLimit
    void btSliderConstraint_setLowerAngLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setLowerAngLimit
    float btSliderConstraint_getUpperAngLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getUpperAngLimit
    void btSliderConstraint_setUpperAngLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setUpperAngLimit
    boolean btSliderConstraint_getUseLinearReferenceFrameA(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getUseLinearReferenceFrameA
    float btSliderConstraint_getSoftnessDirLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getSoftnessDirLin
    float btSliderConstraint_getRestitutionDirLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getRestitutionDirLin
    float btSliderConstraint_getDampingDirLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getDampingDirLin
    float btSliderConstraint_getSoftnessDirAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getSoftnessDirAng
    float btSliderConstraint_getRestitutionDirAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getRestitutionDirAng
    float btSliderConstraint_getDampingDirAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getDampingDirAng
    float btSliderConstraint_getSoftnessLimLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getSoftnessLimLin
    float btSliderConstraint_getRestitutionLimLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getRestitutionLimLin
    float btSliderConstraint_getDampingLimLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getDampingLimLin
    float btSliderConstraint_getSoftnessLimAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getSoftnessLimAng
    float btSliderConstraint_getRestitutionLimAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getRestitutionLimAng
    float btSliderConstraint_getDampingLimAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getDampingLimAng
    float btSliderConstraint_getSoftnessOrthoLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getSoftnessOrthoLin
    float btSliderConstraint_getRestitutionOrthoLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getRestitutionOrthoLin
    float btSliderConstraint_getDampingOrthoLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getDampingOrthoLin
    float btSliderConstraint_getSoftnessOrthoAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getSoftnessOrthoAng
    float btSliderConstraint_getRestitutionOrthoAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getRestitutionOrthoAng
    float btSliderConstraint_getDampingOrthoAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getDampingOrthoAng
    void btSliderConstraint_setSoftnessDirLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setSoftnessDirLin
    void btSliderConstraint_setRestitutionDirLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setRestitutionDirLin
    void btSliderConstraint_setDampingDirLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setDampingDirLin
    void btSliderConstraint_setSoftnessDirAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setSoftnessDirAng
    void btSliderConstraint_setRestitutionDirAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setRestitutionDirAng
    void btSliderConstraint_setDampingDirAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setDampingDirAng
    void btSliderConstraint_setSoftnessLimLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setSoftnessLimLin
    void btSliderConstraint_setRestitutionLimLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setRestitutionLimLin
    void btSliderConstraint_setDampingLimLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setDampingLimLin
    void btSliderConstraint_setSoftnessLimAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setSoftnessLimAng
    void btSliderConstraint_setRestitutionLimAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setRestitutionLimAng
    void btSliderConstraint_setDampingLimAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setDampingLimAng
    void btSliderConstraint_setSoftnessOrthoLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setSoftnessOrthoLin
    void btSliderConstraint_setRestitutionOrthoLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setRestitutionOrthoLin
    void btSliderConstraint_setDampingOrthoLin(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setDampingOrthoLin
    void btSliderConstraint_setSoftnessOrthoAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setSoftnessOrthoAng
    void btSliderConstraint_setRestitutionOrthoAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setRestitutionOrthoAng
    void btSliderConstraint_setDampingOrthoAng(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setDampingOrthoAng
    void btSliderConstraint_setPoweredLinMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,boolean) -> btSliderConstraint_setPoweredLinMotor
    boolean btSliderConstraint_getPoweredLinMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getPoweredLinMotor
    void btSliderConstraint_setTargetLinMotorVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setTargetLinMotorVelocity
    float btSliderConstraint_getTargetLinMotorVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getTargetLinMotorVelocity
    void btSliderConstraint_setMaxLinMotorForce(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setMaxLinMotorForce
    float btSliderConstraint_getMaxLinMotorForce(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getMaxLinMotorForce
    void btSliderConstraint_setPoweredAngMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,boolean) -> btSliderConstraint_setPoweredAngMotor
    boolean btSliderConstraint_getPoweredAngMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getPoweredAngMotor
    void btSliderConstraint_setTargetAngMotorVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setTargetAngMotorVelocity
    float btSliderConstraint_getTargetAngMotorVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getTargetAngMotorVelocity
    void btSliderConstraint_setMaxAngMotorForce(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,float) -> btSliderConstraint_setMaxAngMotorForce
    float btSliderConstraint_getMaxAngMotorForce(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getMaxAngMotorForce
    float btSliderConstraint_getLinearPos(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getLinearPos
    float btSliderConstraint_getAngularPos(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getAngularPos
    boolean btSliderConstraint_getSolveLinLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getSolveLinLimit
    float btSliderConstraint_getLinDepth(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getLinDepth
    boolean btSliderConstraint_getSolveAngLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getSolveAngLimit
    float btSliderConstraint_getAngDepth(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getAngDepth
    void btSliderConstraint_calculateTransforms(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> btSliderConstraint_calculateTransforms
    void btSliderConstraint_testLinLimits(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_testLinLimits
    void btSliderConstraint_testAngLimits(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_testAngLimits
    com.badlogic.gdx.math.Vector3 btSliderConstraint_getAncorInA(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getAncorInA
    com.badlogic.gdx.math.Vector3 btSliderConstraint_getAncorInB(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getAncorInB
    boolean btSliderConstraint_getUseFrameOffset(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> btSliderConstraint_getUseFrameOffset
    void btSliderConstraint_setUseFrameOffset(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,boolean) -> btSliderConstraint_setUseFrameOffset
    void btSliderConstraint_setFrames(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> btSliderConstraint_setFrames
    void btSliderConstraint_setParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,int,float,int) -> btSliderConstraint_setParam__SWIG_0
    void btSliderConstraint_setParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,int,float) -> btSliderConstraint_setParam__SWIG_1
    float btSliderConstraint_getParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,int,int) -> btSliderConstraint_getParam__SWIG_0
    float btSliderConstraint_getParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint,int) -> btSliderConstraint_getParam__SWIG_1
    void delete_btSliderConstraint(long) -> delete_btSliderConstraint
    void btSliderConstraintData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btSliderConstraintData_typeConstraintData_set
    long btSliderConstraintData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData) -> btSliderConstraintData_typeConstraintData_get
    void btSliderConstraintData_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btSliderConstraintData_rbAFrame_set
    long btSliderConstraintData_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData) -> btSliderConstraintData_rbAFrame_get
    void btSliderConstraintData_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btSliderConstraintData_rbBFrame_set
    long btSliderConstraintData_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData) -> btSliderConstraintData_rbBFrame_get
    void btSliderConstraintData_linearUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,float) -> btSliderConstraintData_linearUpperLimit_set
    float btSliderConstraintData_linearUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData) -> btSliderConstraintData_linearUpperLimit_get
    void btSliderConstraintData_linearLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,float) -> btSliderConstraintData_linearLowerLimit_set
    float btSliderConstraintData_linearLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData) -> btSliderConstraintData_linearLowerLimit_get
    void btSliderConstraintData_angularUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,float) -> btSliderConstraintData_angularUpperLimit_set
    float btSliderConstraintData_angularUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData) -> btSliderConstraintData_angularUpperLimit_get
    void btSliderConstraintData_angularLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,float) -> btSliderConstraintData_angularLowerLimit_set
    float btSliderConstraintData_angularLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData) -> btSliderConstraintData_angularLowerLimit_get
    void btSliderConstraintData_useLinearReferenceFrameA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,int) -> btSliderConstraintData_useLinearReferenceFrameA_set
    int btSliderConstraintData_useLinearReferenceFrameA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData) -> btSliderConstraintData_useLinearReferenceFrameA_get
    void btSliderConstraintData_useOffsetForConstraintFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData,int) -> btSliderConstraintData_useOffsetForConstraintFrame_set
    int btSliderConstraintData_useOffsetForConstraintFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData) -> btSliderConstraintData_useOffsetForConstraintFrame_get
    long new_btSliderConstraintData() -> new_btSliderConstraintData
    void delete_btSliderConstraintData(long) -> delete_btSliderConstraintData
    void btSliderConstraintDoubleData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btSliderConstraintDoubleData_typeConstraintData_set
    long btSliderConstraintDoubleData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData) -> btSliderConstraintDoubleData_typeConstraintData_get
    void btSliderConstraintDoubleData_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> btSliderConstraintDoubleData_rbAFrame_set
    long btSliderConstraintDoubleData_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData) -> btSliderConstraintDoubleData_rbAFrame_get
    void btSliderConstraintDoubleData_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> btSliderConstraintDoubleData_rbBFrame_set
    long btSliderConstraintDoubleData_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData) -> btSliderConstraintDoubleData_rbBFrame_get
    void btSliderConstraintDoubleData_linearUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,double) -> btSliderConstraintDoubleData_linearUpperLimit_set
    double btSliderConstraintDoubleData_linearUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData) -> btSliderConstraintDoubleData_linearUpperLimit_get
    void btSliderConstraintDoubleData_linearLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,double) -> btSliderConstraintDoubleData_linearLowerLimit_set
    double btSliderConstraintDoubleData_linearLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData) -> btSliderConstraintDoubleData_linearLowerLimit_get
    void btSliderConstraintDoubleData_angularUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,double) -> btSliderConstraintDoubleData_angularUpperLimit_set
    double btSliderConstraintDoubleData_angularUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData) -> btSliderConstraintDoubleData_angularUpperLimit_get
    void btSliderConstraintDoubleData_angularLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,double) -> btSliderConstraintDoubleData_angularLowerLimit_set
    double btSliderConstraintDoubleData_angularLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData) -> btSliderConstraintDoubleData_angularLowerLimit_get
    void btSliderConstraintDoubleData_useLinearReferenceFrameA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,int) -> btSliderConstraintDoubleData_useLinearReferenceFrameA_set
    int btSliderConstraintDoubleData_useLinearReferenceFrameA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData) -> btSliderConstraintDoubleData_useLinearReferenceFrameA_get
    void btSliderConstraintDoubleData_useOffsetForConstraintFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData,int) -> btSliderConstraintDoubleData_useOffsetForConstraintFrame_set
    int btSliderConstraintDoubleData_useOffsetForConstraintFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData) -> btSliderConstraintDoubleData_useOffsetForConstraintFrame_get
    long new_btSliderConstraintDoubleData() -> new_btSliderConstraintDoubleData
    void delete_btSliderConstraintDoubleData(long) -> delete_btSliderConstraintDoubleData
    long new_btConstraintSetting() -> new_btConstraintSetting
    void btConstraintSetting_tau_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting,float) -> btConstraintSetting_tau_set
    float btConstraintSetting_tau_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting) -> btConstraintSetting_tau_get
    void btConstraintSetting_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting,float) -> btConstraintSetting_damping_set
    float btConstraintSetting_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting) -> btConstraintSetting_damping_get
    void btConstraintSetting_impulseClamp_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting,float) -> btConstraintSetting_impulseClamp_set
    float btConstraintSetting_impulseClamp_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting) -> btConstraintSetting_impulseClamp_get
    void delete_btConstraintSetting(long) -> delete_btConstraintSetting
    void btPoint2PointConstraint_useSolveConstraintObsolete_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,boolean) -> btPoint2PointConstraint_useSolveConstraintObsolete_set
    boolean btPoint2PointConstraint_useSolveConstraintObsolete_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint) -> btPoint2PointConstraint_useSolveConstraintObsolete_get
    void btPoint2PointConstraint_setting_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting) -> btPoint2PointConstraint_setting_set
    long btPoint2PointConstraint_setting_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint) -> btPoint2PointConstraint_setting_get
    long new_btPoint2PointConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_btPoint2PointConstraint__SWIG_0
    long new_btPoint2PointConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> new_btPoint2PointConstraint__SWIG_1
    void btPoint2PointConstraint_getInfo1NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1) -> btPoint2PointConstraint_getInfo1NonVirtual
    void btPoint2PointConstraint_getInfo2NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> btPoint2PointConstraint_getInfo2NonVirtual
    void btPoint2PointConstraint_updateRHS(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,float) -> btPoint2PointConstraint_updateRHS
    void btPoint2PointConstraint_setPivotA(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,com.badlogic.gdx.math.Vector3) -> btPoint2PointConstraint_setPivotA
    void btPoint2PointConstraint_setPivotB(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,com.badlogic.gdx.math.Vector3) -> btPoint2PointConstraint_setPivotB
    com.badlogic.gdx.math.Vector3 btPoint2PointConstraint_getPivotInA(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint) -> btPoint2PointConstraint_getPivotInA
    com.badlogic.gdx.math.Vector3 btPoint2PointConstraint_getPivotInB(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint) -> btPoint2PointConstraint_getPivotInB
    void btPoint2PointConstraint_setParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,int,float,int) -> btPoint2PointConstraint_setParam__SWIG_0
    void btPoint2PointConstraint_setParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,int,float) -> btPoint2PointConstraint_setParam__SWIG_1
    float btPoint2PointConstraint_getParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,int,int) -> btPoint2PointConstraint_getParam__SWIG_0
    float btPoint2PointConstraint_getParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint,int) -> btPoint2PointConstraint_getParam__SWIG_1
    void delete_btPoint2PointConstraint(long) -> delete_btPoint2PointConstraint
    void btPoint2PointConstraintFloatData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btPoint2PointConstraintFloatData_typeConstraintData_set
    long btPoint2PointConstraintFloatData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData) -> btPoint2PointConstraintFloatData_typeConstraintData_get
    void btPoint2PointConstraintFloatData_pivotInA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btPoint2PointConstraintFloatData_pivotInA_set
    long btPoint2PointConstraintFloatData_pivotInA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData) -> btPoint2PointConstraintFloatData_pivotInA_get
    void btPoint2PointConstraintFloatData_pivotInB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btPoint2PointConstraintFloatData_pivotInB_set
    long btPoint2PointConstraintFloatData_pivotInB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData) -> btPoint2PointConstraintFloatData_pivotInB_get
    long new_btPoint2PointConstraintFloatData() -> new_btPoint2PointConstraintFloatData
    void delete_btPoint2PointConstraintFloatData(long) -> delete_btPoint2PointConstraintFloatData
    void btPoint2PointConstraintDoubleData2_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btPoint2PointConstraintDoubleData2_typeConstraintData_set
    long btPoint2PointConstraintDoubleData2_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2) -> btPoint2PointConstraintDoubleData2_typeConstraintData_get
    void btPoint2PointConstraintDoubleData2_pivotInA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btPoint2PointConstraintDoubleData2_pivotInA_set
    long btPoint2PointConstraintDoubleData2_pivotInA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2) -> btPoint2PointConstraintDoubleData2_pivotInA_get
    void btPoint2PointConstraintDoubleData2_pivotInB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btPoint2PointConstraintDoubleData2_pivotInB_set
    long btPoint2PointConstraintDoubleData2_pivotInB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2) -> btPoint2PointConstraintDoubleData2_pivotInB_get
    long new_btPoint2PointConstraintDoubleData2() -> new_btPoint2PointConstraintDoubleData2
    void delete_btPoint2PointConstraintDoubleData2(long) -> delete_btPoint2PointConstraintDoubleData2
    void btPoint2PointConstraintDoubleData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btPoint2PointConstraintDoubleData_typeConstraintData_set
    long btPoint2PointConstraintDoubleData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData) -> btPoint2PointConstraintDoubleData_typeConstraintData_get
    void btPoint2PointConstraintDoubleData_pivotInA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btPoint2PointConstraintDoubleData_pivotInA_set
    long btPoint2PointConstraintDoubleData_pivotInA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData) -> btPoint2PointConstraintDoubleData_pivotInA_get
    void btPoint2PointConstraintDoubleData_pivotInB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btPoint2PointConstraintDoubleData_pivotInB_set
    long btPoint2PointConstraintDoubleData_pivotInB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData) -> btPoint2PointConstraintDoubleData_pivotInB_get
    long new_btPoint2PointConstraintDoubleData() -> new_btPoint2PointConstraintDoubleData
    void delete_btPoint2PointConstraintDoubleData(long) -> delete_btPoint2PointConstraintDoubleData
    long new_btJacobianEntry__SWIG_0() -> new_btJacobianEntry__SWIG_0
    long new_btJacobianEntry__SWIG_1(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,float) -> new_btJacobianEntry__SWIG_1
    long new_btJacobianEntry__SWIG_2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_btJacobianEntry__SWIG_2
    long new_btJacobianEntry__SWIG_3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_btJacobianEntry__SWIG_3
    long new_btJacobianEntry__SWIG_4(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> new_btJacobianEntry__SWIG_4
    float btJacobianEntry_getDiagonal(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry) -> btJacobianEntry_getDiagonal
    float btJacobianEntry_getNonDiagonal__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,float) -> btJacobianEntry_getNonDiagonal__SWIG_0
    float btJacobianEntry_getNonDiagonal__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,float,float) -> btJacobianEntry_getNonDiagonal__SWIG_1
    float btJacobianEntry_getRelativeVelocity(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btJacobianEntry_getRelativeVelocity
    void btJacobianEntry_linearJointAxis_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btJacobianEntry_linearJointAxis_set
    long btJacobianEntry_linearJointAxis_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry) -> btJacobianEntry_linearJointAxis_get
    void btJacobianEntry_aJ_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btJacobianEntry_aJ_set
    long btJacobianEntry_aJ_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry) -> btJacobianEntry_aJ_get
    void btJacobianEntry_bJ_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btJacobianEntry_bJ_set
    long btJacobianEntry_bJ_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry) -> btJacobianEntry_bJ_get
    void btJacobianEntry_0MinvJt_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btJacobianEntry_0MinvJt_set
    long btJacobianEntry_0MinvJt_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry) -> btJacobianEntry_0MinvJt_get
    void btJacobianEntry_1MinvJt_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btJacobianEntry_1MinvJt_set
    long btJacobianEntry_1MinvJt_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry) -> btJacobianEntry_1MinvJt_get
    void btJacobianEntry_Adiag_set(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,float) -> btJacobianEntry_Adiag_set
    float btJacobianEntry_Adiag_get(long,com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry) -> btJacobianEntry_Adiag_get
    void delete_btJacobianEntry(long) -> delete_btJacobianEntry
    long new_btSolve2LinearConstraint(float,float) -> new_btSolve2LinearConstraint
    void btSolve2LinearConstraint_resolveUnilateralPairConstraint(long,com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,long,long) -> btSolve2LinearConstraint_resolveUnilateralPairConstraint
    void btSolve2LinearConstraint_resolveBilateralPairConstraint(long,com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,long,long) -> btSolve2LinearConstraint_resolveBilateralPairConstraint
    void delete_btSolve2LinearConstraint(long) -> delete_btSolve2LinearConstraint
    void btRotationalLimitMotor_loLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float) -> btRotationalLimitMotor_loLimit_set
    float btRotationalLimitMotor_loLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_loLimit_get
    void btRotationalLimitMotor_hiLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float) -> btRotationalLimitMotor_hiLimit_set
    float btRotationalLimitMotor_hiLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_hiLimit_get
    void btRotationalLimitMotor_targetVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float) -> btRotationalLimitMotor_targetVelocity_set
    float btRotationalLimitMotor_targetVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_targetVelocity_get
    void btRotationalLimitMotor_maxMotorForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float) -> btRotationalLimitMotor_maxMotorForce_set
    float btRotationalLimitMotor_maxMotorForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_maxMotorForce_get
    void btRotationalLimitMotor_maxLimitForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float) -> btRotationalLimitMotor_maxLimitForce_set
    float btRotationalLimitMotor_maxLimitForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_maxLimitForce_get
    void btRotationalLimitMotor_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float) -> btRotationalLimitMotor_damping_set
    float btRotationalLimitMotor_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_damping_get
    void btRotationalLimitMotor_limitSoftness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float) -> btRotationalLimitMotor_limitSoftness_set
    float btRotationalLimitMotor_limitSoftness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_limitSoftness_get
    void btRotationalLimitMotor_normalCFM_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float) -> btRotationalLimitMotor_normalCFM_set
    float btRotationalLimitMotor_normalCFM_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_normalCFM_get
    void btRotationalLimitMotor_stopERP_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float) -> btRotationalLimitMotor_stopERP_set
    float btRotationalLimitMotor_stopERP_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_stopERP_get
    void btRotationalLimitMotor_stopCFM_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float) -> btRotationalLimitMotor_stopCFM_set
    float btRotationalLimitMotor_stopCFM_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_stopCFM_get
    void btRotationalLimitMotor_bounce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float) -> btRotationalLimitMotor_bounce_set
    float btRotationalLimitMotor_bounce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_bounce_get
    void btRotationalLimitMotor_enableMotor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,boolean) -> btRotationalLimitMotor_enableMotor_set
    boolean btRotationalLimitMotor_enableMotor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_enableMotor_get
    void btRotationalLimitMotor_currentLimitError_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float) -> btRotationalLimitMotor_currentLimitError_set
    float btRotationalLimitMotor_currentLimitError_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_currentLimitError_get
    void btRotationalLimitMotor_currentPosition_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float) -> btRotationalLimitMotor_currentPosition_set
    float btRotationalLimitMotor_currentPosition_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_currentPosition_get
    void btRotationalLimitMotor_currentLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,int) -> btRotationalLimitMotor_currentLimit_set
    int btRotationalLimitMotor_currentLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_currentLimit_get
    void btRotationalLimitMotor_accumulatedImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float) -> btRotationalLimitMotor_accumulatedImpulse_set
    float btRotationalLimitMotor_accumulatedImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_accumulatedImpulse_get
    long new_btRotationalLimitMotor__SWIG_0() -> new_btRotationalLimitMotor__SWIG_0
    long new_btRotationalLimitMotor__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> new_btRotationalLimitMotor__SWIG_1
    boolean btRotationalLimitMotor_isLimited(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_isLimited
    boolean btRotationalLimitMotor_needApplyTorques(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> btRotationalLimitMotor_needApplyTorques
    int btRotationalLimitMotor_testLimitValue(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float) -> btRotationalLimitMotor_testLimitValue
    float btRotationalLimitMotor_solveAngularLimits(long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,float,com.badlogic.gdx.math.Vector3,float,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btRotationalLimitMotor_solveAngularLimits
    void delete_btRotationalLimitMotor(long) -> delete_btRotationalLimitMotor
    void btTranslationalLimitMotor_lowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTranslationalLimitMotor_lowerLimit_set
    long btTranslationalLimitMotor_lowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> btTranslationalLimitMotor_lowerLimit_get
    void btTranslationalLimitMotor_upperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTranslationalLimitMotor_upperLimit_set
    long btTranslationalLimitMotor_upperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> btTranslationalLimitMotor_upperLimit_get
    void btTranslationalLimitMotor_accumulatedImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTranslationalLimitMotor_accumulatedImpulse_set
    long btTranslationalLimitMotor_accumulatedImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> btTranslationalLimitMotor_accumulatedImpulse_get
    void btTranslationalLimitMotor_limitSoftness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,float) -> btTranslationalLimitMotor_limitSoftness_set
    float btTranslationalLimitMotor_limitSoftness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> btTranslationalLimitMotor_limitSoftness_get
    void btTranslationalLimitMotor_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,float) -> btTranslationalLimitMotor_damping_set
    float btTranslationalLimitMotor_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> btTranslationalLimitMotor_damping_get
    void btTranslationalLimitMotor_restitution_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,float) -> btTranslationalLimitMotor_restitution_set
    float btTranslationalLimitMotor_restitution_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> btTranslationalLimitMotor_restitution_get
    void btTranslationalLimitMotor_normalCFM_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTranslationalLimitMotor_normalCFM_set
    long btTranslationalLimitMotor_normalCFM_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> btTranslationalLimitMotor_normalCFM_get
    void btTranslationalLimitMotor_stopERP_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTranslationalLimitMotor_stopERP_set
    long btTranslationalLimitMotor_stopERP_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> btTranslationalLimitMotor_stopERP_get
    void btTranslationalLimitMotor_stopCFM_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTranslationalLimitMotor_stopCFM_set
    long btTranslationalLimitMotor_stopCFM_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> btTranslationalLimitMotor_stopCFM_get
    void btTranslationalLimitMotor_enableMotor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,boolean[]) -> btTranslationalLimitMotor_enableMotor_set
    boolean[] btTranslationalLimitMotor_enableMotor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> btTranslationalLimitMotor_enableMotor_get
    void btTranslationalLimitMotor_targetVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTranslationalLimitMotor_targetVelocity_set
    long btTranslationalLimitMotor_targetVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> btTranslationalLimitMotor_targetVelocity_get
    void btTranslationalLimitMotor_maxMotorForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTranslationalLimitMotor_maxMotorForce_set
    long btTranslationalLimitMotor_maxMotorForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> btTranslationalLimitMotor_maxMotorForce_get
    void btTranslationalLimitMotor_currentLimitError_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTranslationalLimitMotor_currentLimitError_set
    long btTranslationalLimitMotor_currentLimitError_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> btTranslationalLimitMotor_currentLimitError_get
    void btTranslationalLimitMotor_currentLinearDiff_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btTranslationalLimitMotor_currentLinearDiff_set
    long btTranslationalLimitMotor_currentLinearDiff_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> btTranslationalLimitMotor_currentLinearDiff_get
    void btTranslationalLimitMotor_currentLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,int[]) -> btTranslationalLimitMotor_currentLimit_set
    int[] btTranslationalLimitMotor_currentLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> btTranslationalLimitMotor_currentLimit_get
    long new_btTranslationalLimitMotor__SWIG_0() -> new_btTranslationalLimitMotor__SWIG_0
    long new_btTranslationalLimitMotor__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> new_btTranslationalLimitMotor__SWIG_1
    boolean btTranslationalLimitMotor_isLimited(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,int) -> btTranslationalLimitMotor_isLimited
    boolean btTranslationalLimitMotor_needApplyForce(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,int) -> btTranslationalLimitMotor_needApplyForce
    int btTranslationalLimitMotor_testLimitValue(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,int,float) -> btTranslationalLimitMotor_testLimitValue
    float btTranslationalLimitMotor_solveLinearAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor,float,float,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btTranslationalLimitMotor_solveLinearAxis
    void delete_btTranslationalLimitMotor(long) -> delete_btTranslationalLimitMotor
    void btGeneric6DofConstraint_useSolveConstraintObsolete_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,boolean) -> btGeneric6DofConstraint_useSolveConstraintObsolete_set
    boolean btGeneric6DofConstraint_useSolveConstraintObsolete_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint) -> btGeneric6DofConstraint_useSolveConstraintObsolete_get
    long new_btGeneric6DofConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> new_btGeneric6DofConstraint__SWIG_0
    long new_btGeneric6DofConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean) -> new_btGeneric6DofConstraint__SWIG_1
    void btGeneric6DofConstraint_calculateTransforms__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> btGeneric6DofConstraint_calculateTransforms__SWIG_0
    void btGeneric6DofConstraint_calculateTransforms__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint) -> btGeneric6DofConstraint_calculateTransforms__SWIG_1
    com.badlogic.gdx.math.Matrix4 btGeneric6DofConstraint_getCalculatedTransformA(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint) -> btGeneric6DofConstraint_getCalculatedTransformA
    com.badlogic.gdx.math.Matrix4 btGeneric6DofConstraint_getCalculatedTransformB(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint) -> btGeneric6DofConstraint_getCalculatedTransformB
    com.badlogic.gdx.math.Matrix4 btGeneric6DofConstraint_getFrameOffsetA__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint) -> btGeneric6DofConstraint_getFrameOffsetA__SWIG_0
    com.badlogic.gdx.math.Matrix4 btGeneric6DofConstraint_getFrameOffsetB__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint) -> btGeneric6DofConstraint_getFrameOffsetB__SWIG_0
    void btGeneric6DofConstraint_getInfo1NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1) -> btGeneric6DofConstraint_getInfo1NonVirtual
    void btGeneric6DofConstraint_getInfo2NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btGeneric6DofConstraint_getInfo2NonVirtual
    void btGeneric6DofConstraint_updateRHS(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,float) -> btGeneric6DofConstraint_updateRHS
    com.badlogic.gdx.math.Vector3 btGeneric6DofConstraint_getAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int) -> btGeneric6DofConstraint_getAxis
    float btGeneric6DofConstraint_getAngle(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int) -> btGeneric6DofConstraint_getAngle
    float btGeneric6DofConstraint_getRelativePivotPosition(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int) -> btGeneric6DofConstraint_getRelativePivotPosition
    void btGeneric6DofConstraint_setFrames(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> btGeneric6DofConstraint_setFrames
    boolean btGeneric6DofConstraint_testAngularLimitMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int) -> btGeneric6DofConstraint_testAngularLimitMotor
    void btGeneric6DofConstraint_setLinearLowerLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3) -> btGeneric6DofConstraint_setLinearLowerLimit
    void btGeneric6DofConstraint_getLinearLowerLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3) -> btGeneric6DofConstraint_getLinearLowerLimit
    void btGeneric6DofConstraint_setLinearUpperLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3) -> btGeneric6DofConstraint_setLinearUpperLimit
    void btGeneric6DofConstraint_getLinearUpperLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3) -> btGeneric6DofConstraint_getLinearUpperLimit
    void btGeneric6DofConstraint_setAngularLowerLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3) -> btGeneric6DofConstraint_setAngularLowerLimit
    void btGeneric6DofConstraint_getAngularLowerLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3) -> btGeneric6DofConstraint_getAngularLowerLimit
    void btGeneric6DofConstraint_setAngularUpperLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3) -> btGeneric6DofConstraint_setAngularUpperLimit
    void btGeneric6DofConstraint_getAngularUpperLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3) -> btGeneric6DofConstraint_getAngularUpperLimit
    long btGeneric6DofConstraint_getRotationalLimitMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int) -> btGeneric6DofConstraint_getRotationalLimitMotor
    long btGeneric6DofConstraint_getTranslationalLimitMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint) -> btGeneric6DofConstraint_getTranslationalLimitMotor
    void btGeneric6DofConstraint_setLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int,float,float) -> btGeneric6DofConstraint_setLimit
    boolean btGeneric6DofConstraint_isLimited(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int) -> btGeneric6DofConstraint_isLimited
    void btGeneric6DofConstraint_calcAnchorPos(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint) -> btGeneric6DofConstraint_calcAnchorPos
    int btGeneric6DofConstraint_get_limit_motor_info2__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,int,com.badlogic.gdx.math.Vector3,int,int) -> btGeneric6DofConstraint_get_limit_motor_info2__SWIG_0
    int btGeneric6DofConstraint_get_limit_motor_info2__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,int,com.badlogic.gdx.math.Vector3,int) -> btGeneric6DofConstraint_get_limit_motor_info2__SWIG_1
    boolean btGeneric6DofConstraint_getUseFrameOffset(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint) -> btGeneric6DofConstraint_getUseFrameOffset
    void btGeneric6DofConstraint_setUseFrameOffset(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,boolean) -> btGeneric6DofConstraint_setUseFrameOffset
    void btGeneric6DofConstraint_setParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int,float,int) -> btGeneric6DofConstraint_setParam__SWIG_0
    void btGeneric6DofConstraint_setParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int,float) -> btGeneric6DofConstraint_setParam__SWIG_1
    float btGeneric6DofConstraint_getParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int,int) -> btGeneric6DofConstraint_getParam__SWIG_0
    float btGeneric6DofConstraint_getParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,int) -> btGeneric6DofConstraint_getParam__SWIG_1
    void btGeneric6DofConstraint_setAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btGeneric6DofConstraint_setAxis
    void delete_btGeneric6DofConstraint(long) -> delete_btGeneric6DofConstraint
    void btGeneric6DofConstraintData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btGeneric6DofConstraintData_typeConstraintData_set
    long btGeneric6DofConstraintData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData) -> btGeneric6DofConstraintData_typeConstraintData_get
    void btGeneric6DofConstraintData_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btGeneric6DofConstraintData_rbAFrame_set
    long btGeneric6DofConstraintData_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData) -> btGeneric6DofConstraintData_rbAFrame_get
    void btGeneric6DofConstraintData_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btGeneric6DofConstraintData_rbBFrame_set
    long btGeneric6DofConstraintData_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData) -> btGeneric6DofConstraintData_rbBFrame_get
    void btGeneric6DofConstraintData_linearUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btGeneric6DofConstraintData_linearUpperLimit_set
    long btGeneric6DofConstraintData_linearUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData) -> btGeneric6DofConstraintData_linearUpperLimit_get
    void btGeneric6DofConstraintData_linearLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btGeneric6DofConstraintData_linearLowerLimit_set
    long btGeneric6DofConstraintData_linearLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData) -> btGeneric6DofConstraintData_linearLowerLimit_get
    void btGeneric6DofConstraintData_angularUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btGeneric6DofConstraintData_angularUpperLimit_set
    long btGeneric6DofConstraintData_angularUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData) -> btGeneric6DofConstraintData_angularUpperLimit_get
    void btGeneric6DofConstraintData_angularLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btGeneric6DofConstraintData_angularLowerLimit_set
    long btGeneric6DofConstraintData_angularLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData) -> btGeneric6DofConstraintData_angularLowerLimit_get
    void btGeneric6DofConstraintData_useLinearReferenceFrameA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,int) -> btGeneric6DofConstraintData_useLinearReferenceFrameA_set
    int btGeneric6DofConstraintData_useLinearReferenceFrameA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData) -> btGeneric6DofConstraintData_useLinearReferenceFrameA_get
    void btGeneric6DofConstraintData_useOffsetForConstraintFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData,int) -> btGeneric6DofConstraintData_useOffsetForConstraintFrame_set
    int btGeneric6DofConstraintData_useOffsetForConstraintFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData) -> btGeneric6DofConstraintData_useOffsetForConstraintFrame_get
    long new_btGeneric6DofConstraintData() -> new_btGeneric6DofConstraintData
    void delete_btGeneric6DofConstraintData(long) -> delete_btGeneric6DofConstraintData
    void btGeneric6DofConstraintDoubleData2_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btGeneric6DofConstraintDoubleData2_typeConstraintData_set
    long btGeneric6DofConstraintDoubleData2_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2) -> btGeneric6DofConstraintDoubleData2_typeConstraintData_get
    void btGeneric6DofConstraintDoubleData2_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> btGeneric6DofConstraintDoubleData2_rbAFrame_set
    long btGeneric6DofConstraintDoubleData2_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2) -> btGeneric6DofConstraintDoubleData2_rbAFrame_get
    void btGeneric6DofConstraintDoubleData2_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> btGeneric6DofConstraintDoubleData2_rbBFrame_set
    long btGeneric6DofConstraintDoubleData2_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2) -> btGeneric6DofConstraintDoubleData2_rbBFrame_get
    void btGeneric6DofConstraintDoubleData2_linearUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btGeneric6DofConstraintDoubleData2_linearUpperLimit_set
    long btGeneric6DofConstraintDoubleData2_linearUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2) -> btGeneric6DofConstraintDoubleData2_linearUpperLimit_get
    void btGeneric6DofConstraintDoubleData2_linearLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btGeneric6DofConstraintDoubleData2_linearLowerLimit_set
    long btGeneric6DofConstraintDoubleData2_linearLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2) -> btGeneric6DofConstraintDoubleData2_linearLowerLimit_get
    void btGeneric6DofConstraintDoubleData2_angularUpperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btGeneric6DofConstraintDoubleData2_angularUpperLimit_set
    long btGeneric6DofConstraintDoubleData2_angularUpperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2) -> btGeneric6DofConstraintDoubleData2_angularUpperLimit_get
    void btGeneric6DofConstraintDoubleData2_angularLowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btGeneric6DofConstraintDoubleData2_angularLowerLimit_set
    long btGeneric6DofConstraintDoubleData2_angularLowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2) -> btGeneric6DofConstraintDoubleData2_angularLowerLimit_get
    void btGeneric6DofConstraintDoubleData2_useLinearReferenceFrameA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,int) -> btGeneric6DofConstraintDoubleData2_useLinearReferenceFrameA_set
    int btGeneric6DofConstraintDoubleData2_useLinearReferenceFrameA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2) -> btGeneric6DofConstraintDoubleData2_useLinearReferenceFrameA_get
    void btGeneric6DofConstraintDoubleData2_useOffsetForConstraintFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2,int) -> btGeneric6DofConstraintDoubleData2_useOffsetForConstraintFrame_set
    int btGeneric6DofConstraintDoubleData2_useOffsetForConstraintFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2) -> btGeneric6DofConstraintDoubleData2_useOffsetForConstraintFrame_get
    long new_btGeneric6DofConstraintDoubleData2() -> new_btGeneric6DofConstraintDoubleData2
    void delete_btGeneric6DofConstraintDoubleData2(long) -> delete_btGeneric6DofConstraintDoubleData2
    long new_btUniversalConstraint(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_btUniversalConstraint
    com.badlogic.gdx.math.Vector3 btUniversalConstraint_getAnchor(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint) -> btUniversalConstraint_getAnchor
    com.badlogic.gdx.math.Vector3 btUniversalConstraint_getAnchor2(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint) -> btUniversalConstraint_getAnchor2
    com.badlogic.gdx.math.Vector3 btUniversalConstraint_getAxis1(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint) -> btUniversalConstraint_getAxis1
    com.badlogic.gdx.math.Vector3 btUniversalConstraint_getAxis2(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint) -> btUniversalConstraint_getAxis2
    float btUniversalConstraint_getAngle1(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint) -> btUniversalConstraint_getAngle1
    float btUniversalConstraint_getAngle2(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint) -> btUniversalConstraint_getAngle2
    void btUniversalConstraint_setUpperLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint,float,float) -> btUniversalConstraint_setUpperLimit
    void btUniversalConstraint_setLowerLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint,float,float) -> btUniversalConstraint_setLowerLimit
    void btUniversalConstraint_setAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btUniversalConstraint_setAxis
    void delete_btUniversalConstraint(long) -> delete_btUniversalConstraint
    void btContactConstraint_setContactManifold(long,com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint,long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> btContactConstraint_setContactManifold
    long btContactConstraint_getContactManifold__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint) -> btContactConstraint_getContactManifold__SWIG_0
    void delete_btContactConstraint(long) -> delete_btContactConstraint
    float resolveSingleCollision(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo,float) -> resolveSingleCollision
    void resolveSingleBilateral(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,long,float) -> resolveSingleBilateral
    long new_btConeTwistConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> new_btConeTwistConstraint__SWIG_0
    long new_btConeTwistConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4) -> new_btConeTwistConstraint__SWIG_1
    void btConeTwistConstraint_getInfo1NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1) -> btConeTwistConstraint_getInfo1NonVirtual
    void btConeTwistConstraint_getInfo2NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3) -> btConeTwistConstraint_getInfo2NonVirtual
    void btConeTwistConstraint_updateRHS(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float) -> btConeTwistConstraint_updateRHS
    long btConeTwistConstraint_getRigidBodyA(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_getRigidBodyA
    long btConeTwistConstraint_getRigidBodyB(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_getRigidBodyB
    void btConeTwistConstraint_setAngularOnly(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,boolean) -> btConeTwistConstraint_setAngularOnly
    void btConeTwistConstraint_setLimit__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,int,float) -> btConeTwistConstraint_setLimit__SWIG_0
    void btConeTwistConstraint_setLimit__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float,float,float,float,float,float) -> btConeTwistConstraint_setLimit__SWIG_1
    void btConeTwistConstraint_setLimit__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float,float,float,float,float) -> btConeTwistConstraint_setLimit__SWIG_2
    void btConeTwistConstraint_setLimit__SWIG_3(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float,float,float,float) -> btConeTwistConstraint_setLimit__SWIG_3
    void btConeTwistConstraint_setLimit__SWIG_4(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float,float,float) -> btConeTwistConstraint_setLimit__SWIG_4
    com.badlogic.gdx.math.Matrix4 btConeTwistConstraint_getAFrame(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_getAFrame
    com.badlogic.gdx.math.Matrix4 btConeTwistConstraint_getBFrame(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_getBFrame
    int btConeTwistConstraint_getSolveTwistLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_getSolveTwistLimit
    int btConeTwistConstraint_getSolveSwingLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_getSolveSwingLimit
    float btConeTwistConstraint_getTwistLimitSign(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_getTwistLimitSign
    void btConeTwistConstraint_calcAngleInfo(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_calcAngleInfo
    void btConeTwistConstraint_calcAngleInfo2(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3) -> btConeTwistConstraint_calcAngleInfo2
    float btConeTwistConstraint_getSwingSpan1(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_getSwingSpan1
    float btConeTwistConstraint_getSwingSpan2(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_getSwingSpan2
    float btConeTwistConstraint_getTwistSpan(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_getTwistSpan
    float btConeTwistConstraint_getTwistAngle(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_getTwistAngle
    boolean btConeTwistConstraint_isPastSwingLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_isPastSwingLimit
    void btConeTwistConstraint_setDamping(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float) -> btConeTwistConstraint_setDamping
    void btConeTwistConstraint_enableMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,boolean) -> btConeTwistConstraint_enableMotor
    void btConeTwistConstraint_setMaxMotorImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float) -> btConeTwistConstraint_setMaxMotorImpulse
    void btConeTwistConstraint_setMaxMotorImpulseNormalized(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float) -> btConeTwistConstraint_setMaxMotorImpulseNormalized
    float btConeTwistConstraint_getFixThresh(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_getFixThresh
    void btConeTwistConstraint_setFixThresh(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float) -> btConeTwistConstraint_setFixThresh
    void btConeTwistConstraint_setMotorTarget(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,com.badlogic.gdx.math.Quaternion) -> btConeTwistConstraint_setMotorTarget
    void btConeTwistConstraint_setMotorTargetInConstraintSpace(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,com.badlogic.gdx.math.Quaternion) -> btConeTwistConstraint_setMotorTargetInConstraintSpace
    com.badlogic.gdx.math.Vector3 btConeTwistConstraint_GetPointForAngle(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,float,float) -> btConeTwistConstraint_GetPointForAngle
    void btConeTwistConstraint_setParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,int,float,int) -> btConeTwistConstraint_setParam__SWIG_0
    void btConeTwistConstraint_setParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,int,float) -> btConeTwistConstraint_setParam__SWIG_1
    void btConeTwistConstraint_setFrames(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> btConeTwistConstraint_setFrames
    com.badlogic.gdx.math.Matrix4 btConeTwistConstraint_getFrameOffsetA(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_getFrameOffsetA
    com.badlogic.gdx.math.Matrix4 btConeTwistConstraint_getFrameOffsetB(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> btConeTwistConstraint_getFrameOffsetB
    float btConeTwistConstraint_getParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,int,int) -> btConeTwistConstraint_getParam__SWIG_0
    float btConeTwistConstraint_getParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint,int) -> btConeTwistConstraint_getParam__SWIG_1
    void delete_btConeTwistConstraint(long) -> delete_btConeTwistConstraint
    void btConeTwistConstraintDoubleData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btConeTwistConstraintDoubleData_typeConstraintData_set
    long btConeTwistConstraintDoubleData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData) -> btConeTwistConstraintDoubleData_typeConstraintData_get
    void btConeTwistConstraintDoubleData_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> btConeTwistConstraintDoubleData_rbAFrame_set
    long btConeTwistConstraintDoubleData_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData) -> btConeTwistConstraintDoubleData_rbAFrame_get
    void btConeTwistConstraintDoubleData_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> btConeTwistConstraintDoubleData_rbBFrame_set
    long btConeTwistConstraintDoubleData_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData) -> btConeTwistConstraintDoubleData_rbBFrame_get
    void btConeTwistConstraintDoubleData_swingSpan1_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,double) -> btConeTwistConstraintDoubleData_swingSpan1_set
    double btConeTwistConstraintDoubleData_swingSpan1_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData) -> btConeTwistConstraintDoubleData_swingSpan1_get
    void btConeTwistConstraintDoubleData_swingSpan2_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,double) -> btConeTwistConstraintDoubleData_swingSpan2_set
    double btConeTwistConstraintDoubleData_swingSpan2_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData) -> btConeTwistConstraintDoubleData_swingSpan2_get
    void btConeTwistConstraintDoubleData_twistSpan_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,double) -> btConeTwistConstraintDoubleData_twistSpan_set
    double btConeTwistConstraintDoubleData_twistSpan_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData) -> btConeTwistConstraintDoubleData_twistSpan_get
    void btConeTwistConstraintDoubleData_limitSoftness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,double) -> btConeTwistConstraintDoubleData_limitSoftness_set
    double btConeTwistConstraintDoubleData_limitSoftness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData) -> btConeTwistConstraintDoubleData_limitSoftness_get
    void btConeTwistConstraintDoubleData_biasFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,double) -> btConeTwistConstraintDoubleData_biasFactor_set
    double btConeTwistConstraintDoubleData_biasFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData) -> btConeTwistConstraintDoubleData_biasFactor_get
    void btConeTwistConstraintDoubleData_relaxationFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,double) -> btConeTwistConstraintDoubleData_relaxationFactor_set
    double btConeTwistConstraintDoubleData_relaxationFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData) -> btConeTwistConstraintDoubleData_relaxationFactor_get
    void btConeTwistConstraintDoubleData_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData,double) -> btConeTwistConstraintDoubleData_damping_set
    double btConeTwistConstraintDoubleData_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData) -> btConeTwistConstraintDoubleData_damping_get
    long new_btConeTwistConstraintDoubleData() -> new_btConeTwistConstraintDoubleData
    void delete_btConeTwistConstraintDoubleData(long) -> delete_btConeTwistConstraintDoubleData
    void btConeTwistConstraintData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btConeTwistConstraintData_typeConstraintData_set
    long btConeTwistConstraintData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData) -> btConeTwistConstraintData_typeConstraintData_get
    void btConeTwistConstraintData_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btConeTwistConstraintData_rbAFrame_set
    long btConeTwistConstraintData_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData) -> btConeTwistConstraintData_rbAFrame_get
    void btConeTwistConstraintData_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btConeTwistConstraintData_rbBFrame_set
    long btConeTwistConstraintData_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData) -> btConeTwistConstraintData_rbBFrame_get
    void btConeTwistConstraintData_swingSpan1_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,float) -> btConeTwistConstraintData_swingSpan1_set
    float btConeTwistConstraintData_swingSpan1_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData) -> btConeTwistConstraintData_swingSpan1_get
    void btConeTwistConstraintData_swingSpan2_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,float) -> btConeTwistConstraintData_swingSpan2_set
    float btConeTwistConstraintData_swingSpan2_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData) -> btConeTwistConstraintData_swingSpan2_get
    void btConeTwistConstraintData_twistSpan_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,float) -> btConeTwistConstraintData_twistSpan_set
    float btConeTwistConstraintData_twistSpan_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData) -> btConeTwistConstraintData_twistSpan_get
    void btConeTwistConstraintData_limitSoftness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,float) -> btConeTwistConstraintData_limitSoftness_set
    float btConeTwistConstraintData_limitSoftness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData) -> btConeTwistConstraintData_limitSoftness_get
    void btConeTwistConstraintData_biasFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,float) -> btConeTwistConstraintData_biasFactor_set
    float btConeTwistConstraintData_biasFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData) -> btConeTwistConstraintData_biasFactor_get
    void btConeTwistConstraintData_relaxationFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,float) -> btConeTwistConstraintData_relaxationFactor_set
    float btConeTwistConstraintData_relaxationFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData) -> btConeTwistConstraintData_relaxationFactor_get
    void btConeTwistConstraintData_damping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,float) -> btConeTwistConstraintData_damping_set
    float btConeTwistConstraintData_damping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData) -> btConeTwistConstraintData_damping_get
    void btConeTwistConstraintData_pad_set(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData,java.lang.String) -> btConeTwistConstraintData_pad_set
    java.lang.String btConeTwistConstraintData_pad_get(long,com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData) -> btConeTwistConstraintData_pad_get
    long new_btConeTwistConstraintData() -> new_btConeTwistConstraintData
    void delete_btConeTwistConstraintData(long) -> delete_btConeTwistConstraintData
    long new_btGeneric6DofSpringConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> new_btGeneric6DofSpringConstraint__SWIG_0
    long new_btGeneric6DofSpringConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean) -> new_btGeneric6DofSpringConstraint__SWIG_1
    void btGeneric6DofSpringConstraint_enableSpring(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint,int,boolean) -> btGeneric6DofSpringConstraint_enableSpring
    void btGeneric6DofSpringConstraint_setStiffness(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint,int,float) -> btGeneric6DofSpringConstraint_setStiffness
    void btGeneric6DofSpringConstraint_setDamping(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint,int,float) -> btGeneric6DofSpringConstraint_setDamping
    void btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint) -> btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_0
    void btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint,int) -> btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_1
    void btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint,int,float) -> btGeneric6DofSpringConstraint_setEquilibriumPoint__SWIG_2
    void btGeneric6DofSpringConstraint_setAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btGeneric6DofSpringConstraint_setAxis
    void delete_btGeneric6DofSpringConstraint(long) -> delete_btGeneric6DofSpringConstraint
    void btGeneric6DofSpringConstraintData_6dofData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData,long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData) -> btGeneric6DofSpringConstraintData_6dofData_set
    long btGeneric6DofSpringConstraintData_6dofData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData) -> btGeneric6DofSpringConstraintData_6dofData_get
    void btGeneric6DofSpringConstraintData_springEnabled_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData,int[]) -> btGeneric6DofSpringConstraintData_springEnabled_set
    int[] btGeneric6DofSpringConstraintData_springEnabled_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData) -> btGeneric6DofSpringConstraintData_springEnabled_get
    void btGeneric6DofSpringConstraintData_equilibriumPoint_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData,float[]) -> btGeneric6DofSpringConstraintData_equilibriumPoint_set
    float[] btGeneric6DofSpringConstraintData_equilibriumPoint_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData) -> btGeneric6DofSpringConstraintData_equilibriumPoint_get
    void btGeneric6DofSpringConstraintData_springStiffness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData,float[]) -> btGeneric6DofSpringConstraintData_springStiffness_set
    float[] btGeneric6DofSpringConstraintData_springStiffness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData) -> btGeneric6DofSpringConstraintData_springStiffness_get
    void btGeneric6DofSpringConstraintData_springDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData,float[]) -> btGeneric6DofSpringConstraintData_springDamping_set
    float[] btGeneric6DofSpringConstraintData_springDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData) -> btGeneric6DofSpringConstraintData_springDamping_get
    long new_btGeneric6DofSpringConstraintData() -> new_btGeneric6DofSpringConstraintData
    void delete_btGeneric6DofSpringConstraintData(long) -> delete_btGeneric6DofSpringConstraintData
    void btGeneric6DofSpringConstraintDoubleData2_6dofData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2) -> btGeneric6DofSpringConstraintDoubleData2_6dofData_set
    long btGeneric6DofSpringConstraintDoubleData2_6dofData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2) -> btGeneric6DofSpringConstraintDoubleData2_6dofData_get
    void btGeneric6DofSpringConstraintDoubleData2_springEnabled_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2,int[]) -> btGeneric6DofSpringConstraintDoubleData2_springEnabled_set
    int[] btGeneric6DofSpringConstraintDoubleData2_springEnabled_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2) -> btGeneric6DofSpringConstraintDoubleData2_springEnabled_get
    void btGeneric6DofSpringConstraintDoubleData2_equilibriumPoint_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2,double[]) -> btGeneric6DofSpringConstraintDoubleData2_equilibriumPoint_set
    double[] btGeneric6DofSpringConstraintDoubleData2_equilibriumPoint_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2) -> btGeneric6DofSpringConstraintDoubleData2_equilibriumPoint_get
    void btGeneric6DofSpringConstraintDoubleData2_springStiffness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2,double[]) -> btGeneric6DofSpringConstraintDoubleData2_springStiffness_set
    double[] btGeneric6DofSpringConstraintDoubleData2_springStiffness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2) -> btGeneric6DofSpringConstraintDoubleData2_springStiffness_get
    void btGeneric6DofSpringConstraintDoubleData2_springDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2,double[]) -> btGeneric6DofSpringConstraintDoubleData2_springDamping_set
    double[] btGeneric6DofSpringConstraintDoubleData2_springDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2) -> btGeneric6DofSpringConstraintDoubleData2_springDamping_get
    long new_btGeneric6DofSpringConstraintDoubleData2() -> new_btGeneric6DofSpringConstraintDoubleData2
    void delete_btGeneric6DofSpringConstraintDoubleData2(long) -> delete_btGeneric6DofSpringConstraintDoubleData2
    long new_btHingeConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean) -> new_btHingeConstraint__SWIG_0
    long new_btHingeConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_btHingeConstraint__SWIG_1
    long new_btHingeConstraint__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,boolean) -> new_btHingeConstraint__SWIG_2
    long new_btHingeConstraint__SWIG_3(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_btHingeConstraint__SWIG_3
    long new_btHingeConstraint__SWIG_4(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> new_btHingeConstraint__SWIG_4
    long new_btHingeConstraint__SWIG_5(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> new_btHingeConstraint__SWIG_5
    long new_btHingeConstraint__SWIG_6(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean) -> new_btHingeConstraint__SWIG_6
    long new_btHingeConstraint__SWIG_7(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4) -> new_btHingeConstraint__SWIG_7
    void btHingeConstraint_getInfo1NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1) -> btHingeConstraint_getInfo1NonVirtual
    void btHingeConstraint_getInfo2NonVirtual(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btHingeConstraint_getInfo2NonVirtual
    void btHingeConstraint_getInfo2Internal(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btHingeConstraint_getInfo2Internal
    void btHingeConstraint_getInfo2InternalUsingFrameOffset(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btHingeConstraint_getInfo2InternalUsingFrameOffset
    void btHingeConstraint_updateRHS(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,float) -> btHingeConstraint_updateRHS
    long btHingeConstraint_getRigidBodyA__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getRigidBodyA__SWIG_0
    long btHingeConstraint_getRigidBodyB__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getRigidBodyB__SWIG_0
    com.badlogic.gdx.math.Matrix4 btHingeConstraint_getFrameOffsetA(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getFrameOffsetA
    com.badlogic.gdx.math.Matrix4 btHingeConstraint_getFrameOffsetB(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getFrameOffsetB
    void btHingeConstraint_setFrames(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> btHingeConstraint_setFrames
    void btHingeConstraint_setAngularOnly(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,boolean) -> btHingeConstraint_setAngularOnly
    void btHingeConstraint_enableAngularMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,boolean,float,float) -> btHingeConstraint_enableAngularMotor
    void btHingeConstraint_enableMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,boolean) -> btHingeConstraint_enableMotor
    void btHingeConstraint_setMaxMotorImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,float) -> btHingeConstraint_setMaxMotorImpulse
    void btHingeConstraint_setMotorTarget__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,com.badlogic.gdx.math.Quaternion,float) -> btHingeConstraint_setMotorTarget__SWIG_0
    void btHingeConstraint_setMotorTarget__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,float,float) -> btHingeConstraint_setMotorTarget__SWIG_1
    void btHingeConstraint_setLimit__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,float,float,float,float,float) -> btHingeConstraint_setLimit__SWIG_0
    void btHingeConstraint_setLimit__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,float,float,float,float) -> btHingeConstraint_setLimit__SWIG_1
    void btHingeConstraint_setLimit__SWIG_2(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,float,float,float) -> btHingeConstraint_setLimit__SWIG_2
    void btHingeConstraint_setLimit__SWIG_3(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,float,float) -> btHingeConstraint_setLimit__SWIG_3
    void btHingeConstraint_setAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,com.badlogic.gdx.math.Vector3) -> btHingeConstraint_setAxis
    float btHingeConstraint_getLowerLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getLowerLimit
    float btHingeConstraint_getUpperLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getUpperLimit
    float btHingeConstraint_getHingeAngle__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getHingeAngle__SWIG_0
    float btHingeConstraint_getHingeAngle__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> btHingeConstraint_getHingeAngle__SWIG_1
    void btHingeConstraint_testLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> btHingeConstraint_testLimit
    com.badlogic.gdx.math.Matrix4 btHingeConstraint_getAFrame__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getAFrame__SWIG_0
    com.badlogic.gdx.math.Matrix4 btHingeConstraint_getBFrame__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getBFrame__SWIG_0
    int btHingeConstraint_getSolveLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getSolveLimit
    float btHingeConstraint_getLimitSign(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getLimitSign
    boolean btHingeConstraint_getAngularOnly(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getAngularOnly
    boolean btHingeConstraint_getEnableAngularMotor(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getEnableAngularMotor
    float btHingeConstraint_getMotorTargetVelosity(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getMotorTargetVelosity
    float btHingeConstraint_getMaxMotorImpulse(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getMaxMotorImpulse
    boolean btHingeConstraint_getUseFrameOffset(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> btHingeConstraint_getUseFrameOffset
    void btHingeConstraint_setUseFrameOffset(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,boolean) -> btHingeConstraint_setUseFrameOffset
    void btHingeConstraint_setParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,int,float,int) -> btHingeConstraint_setParam__SWIG_0
    void btHingeConstraint_setParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,int,float) -> btHingeConstraint_setParam__SWIG_1
    float btHingeConstraint_getParam__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,int,int) -> btHingeConstraint_getParam__SWIG_0
    float btHingeConstraint_getParam__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint,int) -> btHingeConstraint_getParam__SWIG_1
    void delete_btHingeConstraint(long) -> delete_btHingeConstraint
    void btHingeConstraintDoubleData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btHingeConstraintDoubleData_typeConstraintData_set
    long btHingeConstraintDoubleData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData) -> btHingeConstraintDoubleData_typeConstraintData_get
    void btHingeConstraintDoubleData_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> btHingeConstraintDoubleData_rbAFrame_set
    long btHingeConstraintDoubleData_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData) -> btHingeConstraintDoubleData_rbAFrame_get
    void btHingeConstraintDoubleData_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> btHingeConstraintDoubleData_rbBFrame_set
    long btHingeConstraintDoubleData_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData) -> btHingeConstraintDoubleData_rbBFrame_get
    void btHingeConstraintDoubleData_useReferenceFrameA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,int) -> btHingeConstraintDoubleData_useReferenceFrameA_set
    int btHingeConstraintDoubleData_useReferenceFrameA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData) -> btHingeConstraintDoubleData_useReferenceFrameA_get
    void btHingeConstraintDoubleData_angularOnly_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,int) -> btHingeConstraintDoubleData_angularOnly_set
    int btHingeConstraintDoubleData_angularOnly_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData) -> btHingeConstraintDoubleData_angularOnly_get
    void btHingeConstraintDoubleData_enableAngularMotor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,int) -> btHingeConstraintDoubleData_enableAngularMotor_set
    int btHingeConstraintDoubleData_enableAngularMotor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData) -> btHingeConstraintDoubleData_enableAngularMotor_get
    void btHingeConstraintDoubleData_motorTargetVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,float) -> btHingeConstraintDoubleData_motorTargetVelocity_set
    float btHingeConstraintDoubleData_motorTargetVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData) -> btHingeConstraintDoubleData_motorTargetVelocity_get
    void btHingeConstraintDoubleData_maxMotorImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,float) -> btHingeConstraintDoubleData_maxMotorImpulse_set
    float btHingeConstraintDoubleData_maxMotorImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData) -> btHingeConstraintDoubleData_maxMotorImpulse_get
    void btHingeConstraintDoubleData_lowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,float) -> btHingeConstraintDoubleData_lowerLimit_set
    float btHingeConstraintDoubleData_lowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData) -> btHingeConstraintDoubleData_lowerLimit_get
    void btHingeConstraintDoubleData_upperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,float) -> btHingeConstraintDoubleData_upperLimit_set
    float btHingeConstraintDoubleData_upperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData) -> btHingeConstraintDoubleData_upperLimit_get
    void btHingeConstraintDoubleData_limitSoftness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,float) -> btHingeConstraintDoubleData_limitSoftness_set
    float btHingeConstraintDoubleData_limitSoftness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData) -> btHingeConstraintDoubleData_limitSoftness_get
    void btHingeConstraintDoubleData_biasFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,float) -> btHingeConstraintDoubleData_biasFactor_set
    float btHingeConstraintDoubleData_biasFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData) -> btHingeConstraintDoubleData_biasFactor_get
    void btHingeConstraintDoubleData_relaxationFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData,float) -> btHingeConstraintDoubleData_relaxationFactor_set
    float btHingeConstraintDoubleData_relaxationFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData) -> btHingeConstraintDoubleData_relaxationFactor_get
    long new_btHingeConstraintDoubleData() -> new_btHingeConstraintDoubleData
    void delete_btHingeConstraintDoubleData(long) -> delete_btHingeConstraintDoubleData
    void btHingeConstraintFloatData_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> btHingeConstraintFloatData_typeConstraintData_set
    long btHingeConstraintFloatData_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData) -> btHingeConstraintFloatData_typeConstraintData_get
    void btHingeConstraintFloatData_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btHingeConstraintFloatData_rbAFrame_set
    long btHingeConstraintFloatData_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData) -> btHingeConstraintFloatData_rbAFrame_get
    void btHingeConstraintFloatData_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btHingeConstraintFloatData_rbBFrame_set
    long btHingeConstraintFloatData_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData) -> btHingeConstraintFloatData_rbBFrame_get
    void btHingeConstraintFloatData_useReferenceFrameA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,int) -> btHingeConstraintFloatData_useReferenceFrameA_set
    int btHingeConstraintFloatData_useReferenceFrameA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData) -> btHingeConstraintFloatData_useReferenceFrameA_get
    void btHingeConstraintFloatData_angularOnly_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,int) -> btHingeConstraintFloatData_angularOnly_set
    int btHingeConstraintFloatData_angularOnly_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData) -> btHingeConstraintFloatData_angularOnly_get
    void btHingeConstraintFloatData_enableAngularMotor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,int) -> btHingeConstraintFloatData_enableAngularMotor_set
    int btHingeConstraintFloatData_enableAngularMotor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData) -> btHingeConstraintFloatData_enableAngularMotor_get
    void btHingeConstraintFloatData_motorTargetVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,float) -> btHingeConstraintFloatData_motorTargetVelocity_set
    float btHingeConstraintFloatData_motorTargetVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData) -> btHingeConstraintFloatData_motorTargetVelocity_get
    void btHingeConstraintFloatData_maxMotorImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,float) -> btHingeConstraintFloatData_maxMotorImpulse_set
    float btHingeConstraintFloatData_maxMotorImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData) -> btHingeConstraintFloatData_maxMotorImpulse_get
    void btHingeConstraintFloatData_lowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,float) -> btHingeConstraintFloatData_lowerLimit_set
    float btHingeConstraintFloatData_lowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData) -> btHingeConstraintFloatData_lowerLimit_get
    void btHingeConstraintFloatData_upperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,float) -> btHingeConstraintFloatData_upperLimit_set
    float btHingeConstraintFloatData_upperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData) -> btHingeConstraintFloatData_upperLimit_get
    void btHingeConstraintFloatData_limitSoftness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,float) -> btHingeConstraintFloatData_limitSoftness_set
    float btHingeConstraintFloatData_limitSoftness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData) -> btHingeConstraintFloatData_limitSoftness_get
    void btHingeConstraintFloatData_biasFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,float) -> btHingeConstraintFloatData_biasFactor_set
    float btHingeConstraintFloatData_biasFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData) -> btHingeConstraintFloatData_biasFactor_get
    void btHingeConstraintFloatData_relaxationFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData,float) -> btHingeConstraintFloatData_relaxationFactor_set
    float btHingeConstraintFloatData_relaxationFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData) -> btHingeConstraintFloatData_relaxationFactor_get
    long new_btHingeConstraintFloatData() -> new_btHingeConstraintFloatData
    void delete_btHingeConstraintFloatData(long) -> delete_btHingeConstraintFloatData
    void btHingeConstraintDoubleData2_typeConstraintData_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> btHingeConstraintDoubleData2_typeConstraintData_set
    long btHingeConstraintDoubleData2_typeConstraintData_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2) -> btHingeConstraintDoubleData2_typeConstraintData_get
    void btHingeConstraintDoubleData2_rbAFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> btHingeConstraintDoubleData2_rbAFrame_set
    long btHingeConstraintDoubleData2_rbAFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2) -> btHingeConstraintDoubleData2_rbAFrame_get
    void btHingeConstraintDoubleData2_rbBFrame_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> btHingeConstraintDoubleData2_rbBFrame_set
    long btHingeConstraintDoubleData2_rbBFrame_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2) -> btHingeConstraintDoubleData2_rbBFrame_get
    void btHingeConstraintDoubleData2_useReferenceFrameA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,int) -> btHingeConstraintDoubleData2_useReferenceFrameA_set
    int btHingeConstraintDoubleData2_useReferenceFrameA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2) -> btHingeConstraintDoubleData2_useReferenceFrameA_get
    void btHingeConstraintDoubleData2_angularOnly_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,int) -> btHingeConstraintDoubleData2_angularOnly_set
    int btHingeConstraintDoubleData2_angularOnly_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2) -> btHingeConstraintDoubleData2_angularOnly_get
    void btHingeConstraintDoubleData2_enableAngularMotor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,int) -> btHingeConstraintDoubleData2_enableAngularMotor_set
    int btHingeConstraintDoubleData2_enableAngularMotor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2) -> btHingeConstraintDoubleData2_enableAngularMotor_get
    void btHingeConstraintDoubleData2_motorTargetVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,double) -> btHingeConstraintDoubleData2_motorTargetVelocity_set
    double btHingeConstraintDoubleData2_motorTargetVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2) -> btHingeConstraintDoubleData2_motorTargetVelocity_get
    void btHingeConstraintDoubleData2_maxMotorImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,double) -> btHingeConstraintDoubleData2_maxMotorImpulse_set
    double btHingeConstraintDoubleData2_maxMotorImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2) -> btHingeConstraintDoubleData2_maxMotorImpulse_get
    void btHingeConstraintDoubleData2_lowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,double) -> btHingeConstraintDoubleData2_lowerLimit_set
    double btHingeConstraintDoubleData2_lowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2) -> btHingeConstraintDoubleData2_lowerLimit_get
    void btHingeConstraintDoubleData2_upperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,double) -> btHingeConstraintDoubleData2_upperLimit_set
    double btHingeConstraintDoubleData2_upperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2) -> btHingeConstraintDoubleData2_upperLimit_get
    void btHingeConstraintDoubleData2_limitSoftness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,double) -> btHingeConstraintDoubleData2_limitSoftness_set
    double btHingeConstraintDoubleData2_limitSoftness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2) -> btHingeConstraintDoubleData2_limitSoftness_get
    void btHingeConstraintDoubleData2_biasFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,double) -> btHingeConstraintDoubleData2_biasFactor_set
    double btHingeConstraintDoubleData2_biasFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2) -> btHingeConstraintDoubleData2_biasFactor_get
    void btHingeConstraintDoubleData2_relaxationFactor_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,double) -> btHingeConstraintDoubleData2_relaxationFactor_set
    double btHingeConstraintDoubleData2_relaxationFactor_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2) -> btHingeConstraintDoubleData2_relaxationFactor_get
    void btHingeConstraintDoubleData2_padding1_set(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2,java.lang.String) -> btHingeConstraintDoubleData2_padding1_set
    java.lang.String btHingeConstraintDoubleData2_padding1_get(long,com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2) -> btHingeConstraintDoubleData2_padding1_get
    long new_btHingeConstraintDoubleData2() -> new_btHingeConstraintDoubleData2
    void delete_btHingeConstraintDoubleData2(long) -> delete_btHingeConstraintDoubleData2
    void btSolverConstraint_relpos1CrossNormal_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverConstraint_relpos1CrossNormal_set
    long btSolverConstraint_relpos1CrossNormal_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_relpos1CrossNormal_get
    void btSolverConstraint_contactNormal1_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverConstraint_contactNormal1_set
    long btSolverConstraint_contactNormal1_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_contactNormal1_get
    void btSolverConstraint_relpos2CrossNormal_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverConstraint_relpos2CrossNormal_set
    long btSolverConstraint_relpos2CrossNormal_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_relpos2CrossNormal_get
    void btSolverConstraint_contactNormal2_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverConstraint_contactNormal2_set
    long btSolverConstraint_contactNormal2_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_contactNormal2_get
    void btSolverConstraint_angularComponentA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverConstraint_angularComponentA_set
    long btSolverConstraint_angularComponentA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_angularComponentA_get
    void btSolverConstraint_angularComponentB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSolverConstraint_angularComponentB_set
    long btSolverConstraint_angularComponentB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_angularComponentB_get
    void btSolverConstraint_appliedPushImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float) -> btSolverConstraint_appliedPushImpulse_set
    float btSolverConstraint_appliedPushImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_appliedPushImpulse_get
    void btSolverConstraint_appliedImpulse_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float) -> btSolverConstraint_appliedImpulse_set
    float btSolverConstraint_appliedImpulse_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_appliedImpulse_get
    void btSolverConstraint_friction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float) -> btSolverConstraint_friction_set
    float btSolverConstraint_friction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_friction_get
    void btSolverConstraint_jacDiagABInv_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float) -> btSolverConstraint_jacDiagABInv_set
    float btSolverConstraint_jacDiagABInv_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_jacDiagABInv_get
    void btSolverConstraint_rhs_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float) -> btSolverConstraint_rhs_set
    float btSolverConstraint_rhs_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_rhs_get
    void btSolverConstraint_cfm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float) -> btSolverConstraint_cfm_set
    float btSolverConstraint_cfm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_cfm_get
    void btSolverConstraint_lowerLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float) -> btSolverConstraint_lowerLimit_set
    float btSolverConstraint_lowerLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_lowerLimit_get
    void btSolverConstraint_upperLimit_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float) -> btSolverConstraint_upperLimit_set
    float btSolverConstraint_upperLimit_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_upperLimit_get
    void btSolverConstraint_rhsPenetration_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float) -> btSolverConstraint_rhsPenetration_set
    float btSolverConstraint_rhsPenetration_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_rhsPenetration_get
    void btSolverConstraint_originalContactPoint_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,long) -> btSolverConstraint_originalContactPoint_set
    long btSolverConstraint_originalContactPoint_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_originalContactPoint_get
    void btSolverConstraint_unusedPadding4_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,float) -> btSolverConstraint_unusedPadding4_set
    float btSolverConstraint_unusedPadding4_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_unusedPadding4_get
    void btSolverConstraint_numRowsForNonContactConstraint_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,int) -> btSolverConstraint_numRowsForNonContactConstraint_set
    int btSolverConstraint_numRowsForNonContactConstraint_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_numRowsForNonContactConstraint_get
    void btSolverConstraint_overrideNumSolverIterations_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,int) -> btSolverConstraint_overrideNumSolverIterations_set
    int btSolverConstraint_overrideNumSolverIterations_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_overrideNumSolverIterations_get
    void btSolverConstraint_frictionIndex_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,int) -> btSolverConstraint_frictionIndex_set
    int btSolverConstraint_frictionIndex_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_frictionIndex_get
    void btSolverConstraint_solverBodyIdA_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,int) -> btSolverConstraint_solverBodyIdA_set
    int btSolverConstraint_solverBodyIdA_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_solverBodyIdA_get
    void btSolverConstraint_solverBodyIdB_set(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint,int) -> btSolverConstraint_solverBodyIdB_set
    int btSolverConstraint_solverBodyIdB_get(long,com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> btSolverConstraint_solverBodyIdB_get
    long new_btSolverConstraint() -> new_btSolverConstraint
    void delete_btSolverConstraint(long) -> delete_btSolverConstraint
    long new_btHinge2Constraint(long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> new_btHinge2Constraint
    com.badlogic.gdx.math.Vector3 btHinge2Constraint_getAnchor(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint) -> btHinge2Constraint_getAnchor
    com.badlogic.gdx.math.Vector3 btHinge2Constraint_getAnchor2(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint) -> btHinge2Constraint_getAnchor2
    com.badlogic.gdx.math.Vector3 btHinge2Constraint_getAxis1(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint) -> btHinge2Constraint_getAxis1
    com.badlogic.gdx.math.Vector3 btHinge2Constraint_getAxis2(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint) -> btHinge2Constraint_getAxis2
    float btHinge2Constraint_getAngle1(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint) -> btHinge2Constraint_getAngle1
    float btHinge2Constraint_getAngle2(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint) -> btHinge2Constraint_getAngle2
    void btHinge2Constraint_setUpperLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint,float) -> btHinge2Constraint_setUpperLimit
    void btHinge2Constraint_setLowerLimit(long,com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint,float) -> btHinge2Constraint_setLowerLimit
    void delete_btHinge2Constraint(long) -> delete_btHinge2Constraint
    void delete_btVehicleRaycaster(long) -> delete_btVehicleRaycaster
    long new_btVehicleRaycaster_btVehicleRaycasterResult() -> new_btVehicleRaycaster_btVehicleRaycasterResult
    void btVehicleRaycaster_btVehicleRaycasterResult_hitPointInWorld_set(long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVehicleRaycaster_btVehicleRaycasterResult_hitPointInWorld_set
    long btVehicleRaycaster_btVehicleRaycasterResult_hitPointInWorld_get(long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult) -> btVehicleRaycaster_btVehicleRaycasterResult_hitPointInWorld_get
    void btVehicleRaycaster_btVehicleRaycasterResult_hitNormalInWorld_set(long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVehicleRaycaster_btVehicleRaycasterResult_hitNormalInWorld_set
    long btVehicleRaycaster_btVehicleRaycasterResult_hitNormalInWorld_get(long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult) -> btVehicleRaycaster_btVehicleRaycasterResult_hitNormalInWorld_get
    void btVehicleRaycaster_btVehicleRaycasterResult_distFraction_set(long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult,float) -> btVehicleRaycaster_btVehicleRaycasterResult_distFraction_set
    float btVehicleRaycaster_btVehicleRaycasterResult_distFraction_get(long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult) -> btVehicleRaycaster_btVehicleRaycasterResult_distFraction_get
    void delete_btVehicleRaycaster_btVehicleRaycasterResult(long) -> delete_btVehicleRaycaster_btVehicleRaycasterResult
    long btVehicleRaycaster_castRay(long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult) -> btVehicleRaycaster_castRay
    void btWheelInfoConstructionInfo_chassisConnectionCS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btWheelInfoConstructionInfo_chassisConnectionCS_set
    long btWheelInfoConstructionInfo_chassisConnectionCS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo) -> btWheelInfoConstructionInfo_chassisConnectionCS_get
    void btWheelInfoConstructionInfo_wheelDirectionCS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btWheelInfoConstructionInfo_wheelDirectionCS_set
    long btWheelInfoConstructionInfo_wheelDirectionCS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo) -> btWheelInfoConstructionInfo_wheelDirectionCS_get
    void btWheelInfoConstructionInfo_wheelAxleCS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btWheelInfoConstructionInfo_wheelAxleCS_set
    long btWheelInfoConstructionInfo_wheelAxleCS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo) -> btWheelInfoConstructionInfo_wheelAxleCS_get
    void btWheelInfoConstructionInfo_suspensionRestLength_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float) -> btWheelInfoConstructionInfo_suspensionRestLength_set
    float btWheelInfoConstructionInfo_suspensionRestLength_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo) -> btWheelInfoConstructionInfo_suspensionRestLength_get
    void btWheelInfoConstructionInfo_maxSuspensionTravelCm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float) -> btWheelInfoConstructionInfo_maxSuspensionTravelCm_set
    float btWheelInfoConstructionInfo_maxSuspensionTravelCm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo) -> btWheelInfoConstructionInfo_maxSuspensionTravelCm_get
    void btWheelInfoConstructionInfo_wheelRadius_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float) -> btWheelInfoConstructionInfo_wheelRadius_set
    float btWheelInfoConstructionInfo_wheelRadius_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo) -> btWheelInfoConstructionInfo_wheelRadius_get
    void btWheelInfoConstructionInfo_suspensionStiffness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float) -> btWheelInfoConstructionInfo_suspensionStiffness_set
    float btWheelInfoConstructionInfo_suspensionStiffness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo) -> btWheelInfoConstructionInfo_suspensionStiffness_get
    void btWheelInfoConstructionInfo_wheelsDampingCompression_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float) -> btWheelInfoConstructionInfo_wheelsDampingCompression_set
    float btWheelInfoConstructionInfo_wheelsDampingCompression_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo) -> btWheelInfoConstructionInfo_wheelsDampingCompression_get
    void btWheelInfoConstructionInfo_wheelsDampingRelaxation_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float) -> btWheelInfoConstructionInfo_wheelsDampingRelaxation_set
    float btWheelInfoConstructionInfo_wheelsDampingRelaxation_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo) -> btWheelInfoConstructionInfo_wheelsDampingRelaxation_get
    void btWheelInfoConstructionInfo_frictionSlip_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float) -> btWheelInfoConstructionInfo_frictionSlip_set
    float btWheelInfoConstructionInfo_frictionSlip_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo) -> btWheelInfoConstructionInfo_frictionSlip_get
    void btWheelInfoConstructionInfo_maxSuspensionForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,float) -> btWheelInfoConstructionInfo_maxSuspensionForce_set
    float btWheelInfoConstructionInfo_maxSuspensionForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo) -> btWheelInfoConstructionInfo_maxSuspensionForce_get
    void btWheelInfoConstructionInfo_bIsFrontWheel_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo,boolean) -> btWheelInfoConstructionInfo_bIsFrontWheel_set
    boolean btWheelInfoConstructionInfo_bIsFrontWheel_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo) -> btWheelInfoConstructionInfo_bIsFrontWheel_get
    long new_btWheelInfoConstructionInfo() -> new_btWheelInfoConstructionInfo
    void delete_btWheelInfoConstructionInfo(long) -> delete_btWheelInfoConstructionInfo
    void btWheelInfo_RaycastInfo_contactNormalWS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btWheelInfo_RaycastInfo_contactNormalWS_set
    long btWheelInfo_RaycastInfo_contactNormalWS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo) -> btWheelInfo_RaycastInfo_contactNormalWS_get
    void btWheelInfo_RaycastInfo_contactPointWS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btWheelInfo_RaycastInfo_contactPointWS_set
    long btWheelInfo_RaycastInfo_contactPointWS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo) -> btWheelInfo_RaycastInfo_contactPointWS_get
    void btWheelInfo_RaycastInfo_suspensionLength_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,float) -> btWheelInfo_RaycastInfo_suspensionLength_set
    float btWheelInfo_RaycastInfo_suspensionLength_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo) -> btWheelInfo_RaycastInfo_suspensionLength_get
    void btWheelInfo_RaycastInfo_hardPointWS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btWheelInfo_RaycastInfo_hardPointWS_set
    long btWheelInfo_RaycastInfo_hardPointWS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo) -> btWheelInfo_RaycastInfo_hardPointWS_get
    void btWheelInfo_RaycastInfo_wheelDirectionWS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btWheelInfo_RaycastInfo_wheelDirectionWS_set
    long btWheelInfo_RaycastInfo_wheelDirectionWS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo) -> btWheelInfo_RaycastInfo_wheelDirectionWS_get
    void btWheelInfo_RaycastInfo_wheelAxleWS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btWheelInfo_RaycastInfo_wheelAxleWS_set
    long btWheelInfo_RaycastInfo_wheelAxleWS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo) -> btWheelInfo_RaycastInfo_wheelAxleWS_get
    void btWheelInfo_RaycastInfo_isInContact_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,boolean) -> btWheelInfo_RaycastInfo_isInContact_set
    boolean btWheelInfo_RaycastInfo_isInContact_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo) -> btWheelInfo_RaycastInfo_isInContact_get
    void btWheelInfo_RaycastInfo_groundObject_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo,long) -> btWheelInfo_RaycastInfo_groundObject_set
    long btWheelInfo_RaycastInfo_groundObject_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo) -> btWheelInfo_RaycastInfo_groundObject_get
    long new_btWheelInfo_RaycastInfo() -> new_btWheelInfo_RaycastInfo
    void delete_btWheelInfo_RaycastInfo(long) -> delete_btWheelInfo_RaycastInfo
    void btWheelInfo_raycastInfo_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo) -> btWheelInfo_raycastInfo_set
    long btWheelInfo_raycastInfo_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_raycastInfo_get
    void btWheelInfo_worldTransform_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btWheelInfo_worldTransform_set
    long btWheelInfo_worldTransform_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_worldTransform_get
    void btWheelInfo_chassisConnectionPointCS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btWheelInfo_chassisConnectionPointCS_set
    long btWheelInfo_chassisConnectionPointCS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_chassisConnectionPointCS_get
    void btWheelInfo_wheelDirectionCS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btWheelInfo_wheelDirectionCS_set
    long btWheelInfo_wheelDirectionCS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_wheelDirectionCS_get
    void btWheelInfo_wheelAxleCS_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btWheelInfo_wheelAxleCS_set
    long btWheelInfo_wheelAxleCS_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_wheelAxleCS_get
    void btWheelInfo_suspensionRestLength1_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_suspensionRestLength1_set
    float btWheelInfo_suspensionRestLength1_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_suspensionRestLength1_get
    void btWheelInfo_maxSuspensionTravelCm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_maxSuspensionTravelCm_set
    float btWheelInfo_maxSuspensionTravelCm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_maxSuspensionTravelCm_get
    float btWheelInfo_getSuspensionRestLength(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_getSuspensionRestLength
    void btWheelInfo_wheelsRadius_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_wheelsRadius_set
    float btWheelInfo_wheelsRadius_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_wheelsRadius_get
    void btWheelInfo_suspensionStiffness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_suspensionStiffness_set
    float btWheelInfo_suspensionStiffness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_suspensionStiffness_get
    void btWheelInfo_wheelsDampingCompression_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_wheelsDampingCompression_set
    float btWheelInfo_wheelsDampingCompression_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_wheelsDampingCompression_get
    void btWheelInfo_wheelsDampingRelaxation_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_wheelsDampingRelaxation_set
    float btWheelInfo_wheelsDampingRelaxation_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_wheelsDampingRelaxation_get
    void btWheelInfo_frictionSlip_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_frictionSlip_set
    float btWheelInfo_frictionSlip_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_frictionSlip_get
    void btWheelInfo_steering_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_steering_set
    float btWheelInfo_steering_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_steering_get
    void btWheelInfo_rotation_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_rotation_set
    float btWheelInfo_rotation_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_rotation_get
    void btWheelInfo_deltaRotation_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_deltaRotation_set
    float btWheelInfo_deltaRotation_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_deltaRotation_get
    void btWheelInfo_rollInfluence_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_rollInfluence_set
    float btWheelInfo_rollInfluence_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_rollInfluence_get
    void btWheelInfo_maxSuspensionForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_maxSuspensionForce_set
    float btWheelInfo_maxSuspensionForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_maxSuspensionForce_get
    void btWheelInfo_engineForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_engineForce_set
    float btWheelInfo_engineForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_engineForce_get
    void btWheelInfo_brake_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_brake_set
    float btWheelInfo_brake_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_brake_get
    void btWheelInfo_bIsFrontWheel_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,boolean) -> btWheelInfo_bIsFrontWheel_set
    boolean btWheelInfo_bIsFrontWheel_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_bIsFrontWheel_get
    void btWheelInfo_clientInfo_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,long) -> btWheelInfo_clientInfo_set
    long btWheelInfo_clientInfo_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_clientInfo_get
    long new_btWheelInfo__SWIG_0() -> new_btWheelInfo__SWIG_0
    long new_btWheelInfo__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo) -> new_btWheelInfo__SWIG_1
    void btWheelInfo_updateWheel(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo) -> btWheelInfo_updateWheel
    void btWheelInfo_clippedInvContactDotSuspension_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_clippedInvContactDotSuspension_set
    float btWheelInfo_clippedInvContactDotSuspension_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_clippedInvContactDotSuspension_get
    void btWheelInfo_suspensionRelativeVelocity_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_suspensionRelativeVelocity_set
    float btWheelInfo_suspensionRelativeVelocity_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_suspensionRelativeVelocity_get
    void btWheelInfo_wheelsSuspensionForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_wheelsSuspensionForce_set
    float btWheelInfo_wheelsSuspensionForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_wheelsSuspensionForce_get
    void btWheelInfo_skidInfo_set(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,float) -> btWheelInfo_skidInfo_set
    float btWheelInfo_skidInfo_get(long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btWheelInfo_skidInfo_get
    void delete_btWheelInfo(long) -> delete_btWheelInfo
    long new_btRaycastVehicle_btVehicleTuning() -> new_btRaycastVehicle_btVehicleTuning
    void btRaycastVehicle_btVehicleTuning_suspensionStiffness_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,float) -> btRaycastVehicle_btVehicleTuning_suspensionStiffness_set
    float btRaycastVehicle_btVehicleTuning_suspensionStiffness_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning) -> btRaycastVehicle_btVehicleTuning_suspensionStiffness_get
    void btRaycastVehicle_btVehicleTuning_suspensionCompression_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,float) -> btRaycastVehicle_btVehicleTuning_suspensionCompression_set
    float btRaycastVehicle_btVehicleTuning_suspensionCompression_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning) -> btRaycastVehicle_btVehicleTuning_suspensionCompression_get
    void btRaycastVehicle_btVehicleTuning_suspensionDamping_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,float) -> btRaycastVehicle_btVehicleTuning_suspensionDamping_set
    float btRaycastVehicle_btVehicleTuning_suspensionDamping_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning) -> btRaycastVehicle_btVehicleTuning_suspensionDamping_get
    void btRaycastVehicle_btVehicleTuning_maxSuspensionTravelCm_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,float) -> btRaycastVehicle_btVehicleTuning_maxSuspensionTravelCm_set
    float btRaycastVehicle_btVehicleTuning_maxSuspensionTravelCm_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning) -> btRaycastVehicle_btVehicleTuning_maxSuspensionTravelCm_get
    void btRaycastVehicle_btVehicleTuning_frictionSlip_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,float) -> btRaycastVehicle_btVehicleTuning_frictionSlip_set
    float btRaycastVehicle_btVehicleTuning_frictionSlip_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning) -> btRaycastVehicle_btVehicleTuning_frictionSlip_get
    void btRaycastVehicle_btVehicleTuning_maxSuspensionForce_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,float) -> btRaycastVehicle_btVehicleTuning_maxSuspensionForce_set
    float btRaycastVehicle_btVehicleTuning_maxSuspensionForce_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning) -> btRaycastVehicle_btVehicleTuning_maxSuspensionForce_get
    void delete_btRaycastVehicle_btVehicleTuning(long) -> delete_btRaycastVehicle_btVehicleTuning
    long new_btRaycastVehicle(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster) -> new_btRaycastVehicle
    void delete_btRaycastVehicle(long) -> delete_btRaycastVehicle
    com.badlogic.gdx.math.Matrix4 btRaycastVehicle_getChassisWorldTransform(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle) -> btRaycastVehicle_getChassisWorldTransform
    float btRaycastVehicle_rayCast(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btRaycastVehicle_rayCast
    void btRaycastVehicle_updateVehicle(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,float) -> btRaycastVehicle_updateVehicle
    void btRaycastVehicle_resetSuspension(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle) -> btRaycastVehicle_resetSuspension
    float btRaycastVehicle_getSteeringValue(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int) -> btRaycastVehicle_getSteeringValue
    void btRaycastVehicle_setSteeringValue(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,float,int) -> btRaycastVehicle_setSteeringValue
    void btRaycastVehicle_applyEngineForce(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,float,int) -> btRaycastVehicle_applyEngineForce
    com.badlogic.gdx.math.Matrix4 btRaycastVehicle_getWheelTransformWS(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int) -> btRaycastVehicle_getWheelTransformWS
    void btRaycastVehicle_updateWheelTransform__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int,boolean) -> btRaycastVehicle_updateWheelTransform__SWIG_0
    void btRaycastVehicle_updateWheelTransform__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int) -> btRaycastVehicle_updateWheelTransform__SWIG_1
    long btRaycastVehicle_addWheel(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float,long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,boolean) -> btRaycastVehicle_addWheel
    int btRaycastVehicle_getNumWheels(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle) -> btRaycastVehicle_getNumWheels
    void btRaycastVehicle_wheelInfo_set(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,long) -> btRaycastVehicle_wheelInfo_set
    long btRaycastVehicle_wheelInfo_get(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle) -> btRaycastVehicle_wheelInfo_get
    long btRaycastVehicle_getWheelInfo__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int) -> btRaycastVehicle_getWheelInfo__SWIG_0
    void btRaycastVehicle_updateWheelTransformsWS__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,boolean) -> btRaycastVehicle_updateWheelTransformsWS__SWIG_0
    void btRaycastVehicle_updateWheelTransformsWS__SWIG_1(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,long,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> btRaycastVehicle_updateWheelTransformsWS__SWIG_1
    void btRaycastVehicle_setBrake(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,float,int) -> btRaycastVehicle_setBrake
    void btRaycastVehicle_setPitchControl(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,float) -> btRaycastVehicle_setPitchControl
    void btRaycastVehicle_updateSuspension(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,float) -> btRaycastVehicle_updateSuspension
    void btRaycastVehicle_updateFriction(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,float) -> btRaycastVehicle_updateFriction
    long btRaycastVehicle_getRigidBody__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle) -> btRaycastVehicle_getRigidBody__SWIG_0
    int btRaycastVehicle_getRightAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle) -> btRaycastVehicle_getRightAxis
    int btRaycastVehicle_getUpAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle) -> btRaycastVehicle_getUpAxis
    int btRaycastVehicle_getForwardAxis(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle) -> btRaycastVehicle_getForwardAxis
    com.badlogic.gdx.math.Vector3 btRaycastVehicle_getForwardVector(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle) -> btRaycastVehicle_getForwardVector
    float btRaycastVehicle_getCurrentSpeedKmHour(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle) -> btRaycastVehicle_getCurrentSpeedKmHour
    void btRaycastVehicle_setCoordinateSystem(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int,int,int) -> btRaycastVehicle_setCoordinateSystem
    int btRaycastVehicle_getUserConstraintType(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle) -> btRaycastVehicle_getUserConstraintType
    void btRaycastVehicle_setUserConstraintType(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int) -> btRaycastVehicle_setUserConstraintType
    void btRaycastVehicle_setUserConstraintId(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle,int) -> btRaycastVehicle_setUserConstraintId
    int btRaycastVehicle_getUserConstraintId(long,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle) -> btRaycastVehicle_getUserConstraintId
    long new_btDefaultVehicleRaycaster(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld) -> new_btDefaultVehicleRaycaster
    void delete_btDefaultVehicleRaycaster(long) -> delete_btDefaultVehicleRaycaster
    long btRigidBody_SWIGUpcast(long) -> btRigidBody_SWIGUpcast
    long btTypedConstraint_SWIGUpcast(long) -> btTypedConstraint_SWIGUpcast
    long btDynamicsWorld_SWIGUpcast(long) -> btDynamicsWorld_SWIGUpcast
    long btSimpleDynamicsWorld_SWIGUpcast(long) -> btSimpleDynamicsWorld_SWIGUpcast
    long btDiscreteDynamicsWorld_SWIGUpcast(long) -> btDiscreteDynamicsWorld_SWIGUpcast
    long btCharacterControllerInterface_SWIGUpcast(long) -> btCharacterControllerInterface_SWIGUpcast
    long btKinematicCharacterController_SWIGUpcast(long) -> btKinematicCharacterController_SWIGUpcast
    long btContactSolverInfo_SWIGUpcast(long) -> btContactSolverInfo_SWIGUpcast
    long btSequentialImpulseConstraintSolver_SWIGUpcast(long) -> btSequentialImpulseConstraintSolver_SWIGUpcast
    long btSliderConstraint_SWIGUpcast(long) -> btSliderConstraint_SWIGUpcast
    long btPoint2PointConstraint_SWIGUpcast(long) -> btPoint2PointConstraint_SWIGUpcast
    long btGeneric6DofConstraint_SWIGUpcast(long) -> btGeneric6DofConstraint_SWIGUpcast
    long btUniversalConstraint_SWIGUpcast(long) -> btUniversalConstraint_SWIGUpcast
    long btContactConstraint_SWIGUpcast(long) -> btContactConstraint_SWIGUpcast
    long btConeTwistConstraint_SWIGUpcast(long) -> btConeTwistConstraint_SWIGUpcast
    long btGeneric6DofSpringConstraint_SWIGUpcast(long) -> btGeneric6DofSpringConstraint_SWIGUpcast
    long btHingeConstraint_SWIGUpcast(long) -> btHingeConstraint_SWIGUpcast
    long btHinge2Constraint_SWIGUpcast(long) -> btHinge2Constraint_SWIGUpcast
    long btRaycastVehicle_SWIGUpcast(long) -> btRaycastVehicle_SWIGUpcast
    long btDefaultVehicleRaycaster_SWIGUpcast(long) -> btDefaultVehicleRaycaster_SWIGUpcast
    void SwigDirector_InternalTickCallback_onInternalTick(com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback,long,float) -> SwigDirector_InternalTickCallback_onInternalTick
    void swig_module_init() -> swig_module_init
com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback -> com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.InternalTickCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void onInternalTick(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,float) -> onInternalTick
    void detach() -> detach
    void attach(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,boolean) -> attach
    void attach() -> attach
    void detach(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld,boolean) -> detach
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t -> com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t) -> getCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t -> com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t) -> getCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3DoubleData -> com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3DoubleData:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3DoubleData) -> getCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3FloatData -> com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3FloatData:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3FloatData) -> getCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btSerializer -> com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btSerializer:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btSerializer) -> getCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_f_p_btDynamicsWorld_float__void -> com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_f_p_btDynamicsWorld_float__void:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_f_p_btDynamicsWorld_float__void) -> getCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float -> com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float) -> getCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_int -> com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_int:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_int) -> getCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btCollisionObject -> com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btCollisionObject:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btCollisionObject) -> getCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btPersistentManifold -> com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btPersistentManifold:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btPersistentManifold) -> getCPtr
com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btTypedConstraint -> com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btTypedConstraint:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btTypedConstraint) -> getCPtr
com.badlogic.gdx.physics.bullet.dynamics.bt6DofFlags -> com.badlogic.gdx.physics.bullet.dynamics.bt6DofFlags:
    int BT_6DOF_FLAGS_CFM_NORM -> BT_6DOF_FLAGS_CFM_NORM
    int BT_6DOF_FLAGS_CFM_STOP -> BT_6DOF_FLAGS_CFM_STOP
    int BT_6DOF_FLAGS_ERP_STOP -> BT_6DOF_FLAGS_ERP_STOP
com.badlogic.gdx.physics.bullet.dynamics.btActionInterface -> com.badlogic.gdx.physics.bullet.dynamics.btActionInterface:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btActionInterface) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void updateAction(com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,float) -> updateAction
    void debugDraw(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> debugDraw
com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit -> com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btAngularLimit) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void set(float,float,float,float,float) -> set
    void set(float,float,float,float) -> set
    void set(float,float,float) -> set
    void set(float,float) -> set
    void test(float) -> test
    float getSoftness() -> getSoftness
    float getBiasFactor() -> getBiasFactor
    float getRelaxationFactor() -> getRelaxationFactor
    float getCorrection() -> getCorrection
    float getSign() -> getSign
    float getHalfRange() -> getHalfRange
    boolean isLimit() -> isLimit
    void fit(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float) -> fit
    float getError() -> getError
    float getLow() -> getLow
    float getHigh() -> getHigh
com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface -> com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btCharacterControllerInterface) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setWalkDirection(com.badlogic.gdx.math.Vector3) -> setWalkDirection
    void setVelocityForTimeInterval(com.badlogic.gdx.math.Vector3,float) -> setVelocityForTimeInterval
    void reset(com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> reset
    void warp(com.badlogic.gdx.math.Vector3) -> warp
    void preStep(com.badlogic.gdx.physics.bullet.collision.btCollisionWorld) -> preStep
    void playerStep(com.badlogic.gdx.physics.bullet.collision.btCollisionWorld,float) -> playerStep
    boolean canJump() -> canJump
    void jump() -> jump
    boolean onGround() -> onGround
    void setUpInterpolate(boolean) -> setUpInterpolate
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint -> com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void getInfo1NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1) -> getInfo1NonVirtual
    void getInfo2NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3) -> getInfo2NonVirtual
    void updateRHS(float) -> updateRHS
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyA() -> getRigidBodyA
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyB() -> getRigidBodyB
    void setAngularOnly(boolean) -> setAngularOnly
    void setLimit(int,float) -> setLimit
    void setLimit(float,float,float,float,float,float) -> setLimit
    void setLimit(float,float,float,float,float) -> setLimit
    void setLimit(float,float,float,float) -> setLimit
    void setLimit(float,float,float) -> setLimit
    com.badlogic.gdx.math.Matrix4 getAFrame() -> getAFrame
    com.badlogic.gdx.math.Matrix4 getBFrame() -> getBFrame
    int getSolveTwistLimit() -> getSolveTwistLimit
    int getSolveSwingLimit() -> getSolveSwingLimit
    float getTwistLimitSign() -> getTwistLimitSign
    void calcAngleInfo() -> calcAngleInfo
    void calcAngleInfo2(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3) -> calcAngleInfo2
    float getSwingSpan1() -> getSwingSpan1
    float getSwingSpan2() -> getSwingSpan2
    float getTwistSpan() -> getTwistSpan
    float getTwistAngle() -> getTwistAngle
    boolean isPastSwingLimit() -> isPastSwingLimit
    void setDamping(float) -> setDamping
    void enableMotor(boolean) -> enableMotor
    void setMaxMotorImpulse(float) -> setMaxMotorImpulse
    void setMaxMotorImpulseNormalized(float) -> setMaxMotorImpulseNormalized
    float getFixThresh() -> getFixThresh
    void setFixThresh(float) -> setFixThresh
    void setMotorTarget(com.badlogic.gdx.math.Quaternion) -> setMotorTarget
    void setMotorTargetInConstraintSpace(com.badlogic.gdx.math.Quaternion) -> setMotorTargetInConstraintSpace
    com.badlogic.gdx.math.Vector3 GetPointForAngle(float,float) -> GetPointForAngle
    void setParam(int,float,int) -> setParam
    void setParam(int,float) -> setParam
    void setFrames(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> setFrames
    com.badlogic.gdx.math.Matrix4 getFrameOffsetA() -> getFrameOffsetA
    com.badlogic.gdx.math.Matrix4 getFrameOffsetB() -> getFrameOffsetB
    float getParam(int,int) -> getParam
    float getParam(int) -> getParam
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData -> com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> setTypeConstraintData
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData getTypeConstraintData() -> getTypeConstraintData
    void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> setRbAFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbAFrame() -> getRbAFrame
    void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> setRbBFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbBFrame() -> getRbBFrame
    void setSwingSpan1(float) -> setSwingSpan1
    float getSwingSpan1() -> getSwingSpan1
    void setSwingSpan2(float) -> setSwingSpan2
    float getSwingSpan2() -> getSwingSpan2
    void setTwistSpan(float) -> setTwistSpan
    float getTwistSpan() -> getTwistSpan
    void setLimitSoftness(float) -> setLimitSoftness
    float getLimitSoftness() -> getLimitSoftness
    void setBiasFactor(float) -> setBiasFactor
    float getBiasFactor() -> getBiasFactor
    void setRelaxationFactor(float) -> setRelaxationFactor
    float getRelaxationFactor() -> getRelaxationFactor
    void setDamping(float) -> setDamping
    float getDamping() -> getDamping
    void setPad(java.lang.String) -> setPad
    java.lang.String getPad() -> getPad
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData -> com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraintDoubleData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> setTypeConstraintData
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData getTypeConstraintData() -> getTypeConstraintData
    void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> setRbAFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbAFrame() -> getRbAFrame
    void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> setRbBFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbBFrame() -> getRbBFrame
    void setSwingSpan1(double) -> setSwingSpan1
    double getSwingSpan1() -> getSwingSpan1
    void setSwingSpan2(double) -> setSwingSpan2
    double getSwingSpan2() -> getSwingSpan2
    void setTwistSpan(double) -> setTwistSpan
    double getTwistSpan() -> getTwistSpan
    void setLimitSoftness(double) -> setLimitSoftness
    double getLimitSoftness() -> getLimitSoftness
    void setBiasFactor(double) -> setBiasFactor
    double getBiasFactor() -> getBiasFactor
    void setRelaxationFactor(double) -> setRelaxationFactor
    double getRelaxationFactor() -> getRelaxationFactor
    void setDamping(double) -> setDamping
    double getDamping() -> getDamping
com.badlogic.gdx.physics.bullet.dynamics.btConeTwistFlags -> com.badlogic.gdx.physics.bullet.dynamics.btConeTwistFlags:
    int BT_CONETWIST_FLAGS_LIN_CFM -> BT_CONETWIST_FLAGS_LIN_CFM
    int BT_CONETWIST_FLAGS_LIN_ERP -> BT_CONETWIST_FLAGS_LIN_ERP
    int BT_CONETWIST_FLAGS_ANG_CFM -> BT_CONETWIST_FLAGS_ANG_CFM
com.badlogic.gdx.physics.bullet.dynamics.btConstraintParams -> com.badlogic.gdx.physics.bullet.dynamics.btConstraintParams:
    int BT_CONSTRAINT_ERP -> BT_CONSTRAINT_ERP
    int BT_CONSTRAINT_STOP_ERP -> BT_CONSTRAINT_STOP_ERP
    int BT_CONSTRAINT_CFM -> BT_CONSTRAINT_CFM
    int BT_CONSTRAINT_STOP_CFM -> BT_CONSTRAINT_STOP_CFM
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting -> com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTau(float) -> setTau
    float getTau() -> getTau
    void setDamping(float) -> setDamping
    float getDamping() -> getDamping
    void setImpulseClamp(float) -> setImpulseClamp
    float getImpulseClamp() -> getImpulseClamp
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver -> com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void prepareSolve(int,int) -> prepareSolve
    float solveGroup(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btCollisionObject,int,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btPersistentManifold,int,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_p_btTypedConstraint,int,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> solveGroup
    void allSolved(com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> allSolved
    void reset() -> reset
    int getSolverType() -> getSolverType
com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolverType -> com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolverType:
    int BT_SEQUENTIAL_IMPULSE_SOLVER -> BT_SEQUENTIAL_IMPULSE_SOLVER
    int BT_MLCP_SOLVER -> BT_MLCP_SOLVER
com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint -> com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btContactConstraint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setContactManifold(com.badlogic.gdx.physics.bullet.collision.btPersistentManifold) -> setContactManifold
    com.badlogic.gdx.physics.bullet.collision.btPersistentManifold getContactManifold() -> getContactManifold
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo -> com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData -> com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTau(float) -> setTau
    float getTau() -> getTau
    void setDamping(float) -> setDamping
    float getDamping() -> getDamping
    void setFriction(float) -> setFriction
    float getFriction() -> getFriction
    void setTimeStep(float) -> setTimeStep
    float getTimeStep() -> getTimeStep
    void setRestitution(float) -> setRestitution
    float getRestitution() -> getRestitution
    void setNumIterations(int) -> setNumIterations
    int getNumIterations() -> getNumIterations
    void setMaxErrorReduction(float) -> setMaxErrorReduction
    float getMaxErrorReduction() -> getMaxErrorReduction
    void setSor(float) -> setSor
    float getSor() -> getSor
    void setErp(float) -> setErp
    float getErp() -> getErp
    void setErp2(float) -> setErp2
    float getErp2() -> getErp2
    void setGlobalCfm(float) -> setGlobalCfm
    float getGlobalCfm() -> getGlobalCfm
    void setSplitImpulse(int) -> setSplitImpulse
    int getSplitImpulse() -> getSplitImpulse
    void setSplitImpulsePenetrationThreshold(float) -> setSplitImpulsePenetrationThreshold
    float getSplitImpulsePenetrationThreshold() -> getSplitImpulsePenetrationThreshold
    void setSplitImpulseTurnErp(float) -> setSplitImpulseTurnErp
    float getSplitImpulseTurnErp() -> getSplitImpulseTurnErp
    void setLinearSlop(float) -> setLinearSlop
    float getLinearSlop() -> getLinearSlop
    void setWarmstartingFactor(float) -> setWarmstartingFactor
    float getWarmstartingFactor() -> getWarmstartingFactor
    void setSolverMode(int) -> setSolverMode
    int getSolverMode() -> getSolverMode
    void setRestingContactRestitutionThreshold(int) -> setRestingContactRestitutionThreshold
    int getRestingContactRestitutionThreshold() -> getRestingContactRestitutionThreshold
    void setMinimumSolverBatchSize(int) -> setMinimumSolverBatchSize
    int getMinimumSolverBatchSize() -> getMinimumSolverBatchSize
    void setMaxGyroscopicForce(float) -> setMaxGyroscopicForce
    float getMaxGyroscopicForce() -> getMaxGyroscopicForce
    void setSingleAxisRollingFrictionThreshold(float) -> setSingleAxisRollingFrictionThreshold
    float getSingleAxisRollingFrictionThreshold() -> getSingleAxisRollingFrictionThreshold
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData -> com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTau(double) -> setTau
    double getTau() -> getTau
    void setDamping(double) -> setDamping
    double getDamping() -> getDamping
    void setFriction(double) -> setFriction
    double getFriction() -> getFriction
    void setTimeStep(double) -> setTimeStep
    double getTimeStep() -> getTimeStep
    void setRestitution(double) -> setRestitution
    double getRestitution() -> getRestitution
    void setMaxErrorReduction(double) -> setMaxErrorReduction
    double getMaxErrorReduction() -> getMaxErrorReduction
    void setSor(double) -> setSor
    double getSor() -> getSor
    void setErp(double) -> setErp
    double getErp() -> getErp
    void setErp2(double) -> setErp2
    double getErp2() -> getErp2
    void setGlobalCfm(double) -> setGlobalCfm
    double getGlobalCfm() -> getGlobalCfm
    void setSplitImpulsePenetrationThreshold(double) -> setSplitImpulsePenetrationThreshold
    double getSplitImpulsePenetrationThreshold() -> getSplitImpulsePenetrationThreshold
    void setSplitImpulseTurnErp(double) -> setSplitImpulseTurnErp
    double getSplitImpulseTurnErp() -> getSplitImpulseTurnErp
    void setLinearSlop(double) -> setLinearSlop
    double getLinearSlop() -> getLinearSlop
    void setWarmstartingFactor(double) -> setWarmstartingFactor
    double getWarmstartingFactor() -> getWarmstartingFactor
    void setMaxGyroscopicForce(double) -> setMaxGyroscopicForce
    double getMaxGyroscopicForce() -> getMaxGyroscopicForce
    void setSingleAxisRollingFrictionThreshold(double) -> setSingleAxisRollingFrictionThreshold
    double getSingleAxisRollingFrictionThreshold() -> getSingleAxisRollingFrictionThreshold
    void setNumIterations(int) -> setNumIterations
    int getNumIterations() -> getNumIterations
    void setSolverMode(int) -> setSolverMode
    int getSolverMode() -> getSolverMode
    void setRestingContactRestitutionThreshold(int) -> setRestingContactRestitutionThreshold
    int getRestingContactRestitutionThreshold() -> getRestingContactRestitutionThreshold
    void setMinimumSolverBatchSize(int) -> setMinimumSolverBatchSize
    int getMinimumSolverBatchSize() -> getMinimumSolverBatchSize
    void setSplitImpulse(int) -> setSplitImpulse
    int getSplitImpulse() -> getSplitImpulse
    void setPadding(java.lang.String) -> setPadding
    java.lang.String getPadding() -> getPadding
com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData -> com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTau(float) -> setTau
    float getTau() -> getTau
    void setDamping(float) -> setDamping
    float getDamping() -> getDamping
    void setFriction(float) -> setFriction
    float getFriction() -> getFriction
    void setTimeStep(float) -> setTimeStep
    float getTimeStep() -> getTimeStep
    void setRestitution(float) -> setRestitution
    float getRestitution() -> getRestitution
    void setMaxErrorReduction(float) -> setMaxErrorReduction
    float getMaxErrorReduction() -> getMaxErrorReduction
    void setSor(float) -> setSor
    float getSor() -> getSor
    void setErp(float) -> setErp
    float getErp() -> getErp
    void setErp2(float) -> setErp2
    float getErp2() -> getErp2
    void setGlobalCfm(float) -> setGlobalCfm
    float getGlobalCfm() -> getGlobalCfm
    void setSplitImpulsePenetrationThreshold(float) -> setSplitImpulsePenetrationThreshold
    float getSplitImpulsePenetrationThreshold() -> getSplitImpulsePenetrationThreshold
    void setSplitImpulseTurnErp(float) -> setSplitImpulseTurnErp
    float getSplitImpulseTurnErp() -> getSplitImpulseTurnErp
    void setLinearSlop(float) -> setLinearSlop
    float getLinearSlop() -> getLinearSlop
    void setWarmstartingFactor(float) -> setWarmstartingFactor
    float getWarmstartingFactor() -> getWarmstartingFactor
    void setMaxGyroscopicForce(float) -> setMaxGyroscopicForce
    float getMaxGyroscopicForce() -> getMaxGyroscopicForce
    void setSingleAxisRollingFrictionThreshold(float) -> setSingleAxisRollingFrictionThreshold
    float getSingleAxisRollingFrictionThreshold() -> getSingleAxisRollingFrictionThreshold
    void setNumIterations(int) -> setNumIterations
    int getNumIterations() -> getNumIterations
    void setSolverMode(int) -> setSolverMode
    int getSolverMode() -> getSolverMode
    void setRestingContactRestitutionThreshold(int) -> setRestingContactRestitutionThreshold
    int getRestingContactRestitutionThreshold() -> getRestingContactRestitutionThreshold
    void setMinimumSolverBatchSize(int) -> setMinimumSolverBatchSize
    int getMinimumSolverBatchSize() -> getMinimumSolverBatchSize
    void setSplitImpulse(int) -> setSplitImpulse
    int getSplitImpulse() -> getSplitImpulse
    void setPadding(java.lang.String) -> setPadding
    java.lang.String getPadding() -> getPadding
com.badlogic.gdx.physics.bullet.dynamics.btDefaultVehicleRaycaster -> com.badlogic.gdx.physics.bullet.dynamics.btDefaultVehicleRaycaster:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btDefaultVehicleRaycaster) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld -> com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btDiscreteDynamicsWorld) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int stepSimulation(float,int,float) -> stepSimulation
    int stepSimulation(float,int) -> stepSimulation
    int stepSimulation(float) -> stepSimulation
    void synchronizeSingleMotionState(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> synchronizeSingleMotionState
    void addConstraint(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,boolean) -> addConstraint
    void addConstraint(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> addConstraint
    com.badlogic.gdx.physics.bullet.collision.btSimulationIslandManager getSimulationIslandManager() -> getSimulationIslandManager
    com.badlogic.gdx.physics.bullet.collision.btCollisionWorld getCollisionWorld() -> getCollisionWorld
    void addCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short,short) -> addCollisionObject
    void addCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject,short) -> addCollisionObject
    void addCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> addCollisionObject
    void addRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> addRigidBody
    void addRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,short,short) -> addRigidBody
    void debugDrawConstraint(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> debugDrawConstraint
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint getConstraint(int) -> getConstraint
    void applyGravity() -> applyGravity
    void setNumTasks(int) -> setNumTasks
    void updateVehicles(float) -> updateVehicles
    void setSynchronizeAllMotionStates(boolean) -> setSynchronizeAllMotionStates
    boolean getSynchronizeAllMotionStates() -> getSynchronizeAllMotionStates
    void setApplySpeculativeContactRestitution(boolean) -> setApplySpeculativeContactRestitution
    boolean getApplySpeculativeContactRestitution() -> getApplySpeculativeContactRestitution
    void setLatencyMotionStateInterpolation(boolean) -> setLatencyMotionStateInterpolation
    boolean getLatencyMotionStateInterpolation() -> getLatencyMotionStateInterpolation
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld -> com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int stepSimulation(float,int,float) -> stepSimulation
    int stepSimulation(float,int) -> stepSimulation
    int stepSimulation(float) -> stepSimulation
    void addConstraint(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint,boolean) -> addConstraint
    void addConstraint(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> addConstraint
    void removeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> removeConstraint
    void addAction(com.badlogic.gdx.physics.bullet.dynamics.btActionInterface) -> addAction
    void removeAction(com.badlogic.gdx.physics.bullet.dynamics.btActionInterface) -> removeAction
    void setGravity(com.badlogic.gdx.math.Vector3) -> setGravity
    com.badlogic.gdx.math.Vector3 getGravity() -> getGravity
    void synchronizeMotionStates() -> synchronizeMotionStates
    void addRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> addRigidBody
    void addRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,short,short) -> addRigidBody
    void removeRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> removeRigidBody
    void setConstraintSolver(com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver) -> setConstraintSolver
    com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver getConstraintSolver() -> getConstraintSolver
    int getNumConstraints() -> getNumConstraints
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint getConstraint(int) -> getConstraint
    int getWorldType() -> getWorldType
    void clearForces() -> clearForces
    void setInternalTickCallback(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_f_p_btDynamicsWorld_float__void,long,boolean) -> setInternalTickCallback
    void setInternalTickCallback(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_f_p_btDynamicsWorld_float__void,long) -> setInternalTickCallback
    void setInternalTickCallback(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_f_p_btDynamicsWorld_float__void) -> setInternalTickCallback
    void setWorldUserInfo(long) -> setWorldUserInfo
    long getWorldUserInfo() -> getWorldUserInfo
    com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo getSolverInfo() -> getSolverInfo
    void addVehicle(com.badlogic.gdx.physics.bullet.dynamics.btActionInterface) -> addVehicle
    void removeVehicle(com.badlogic.gdx.physics.bullet.dynamics.btActionInterface) -> removeVehicle
    void addCharacter(com.badlogic.gdx.physics.bullet.dynamics.btActionInterface) -> addCharacter
    void removeCharacter(com.badlogic.gdx.physics.bullet.dynamics.btActionInterface) -> removeCharacter
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData -> com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldDoubleData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setSolverInfo(com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData) -> setSolverInfo
    com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoDoubleData getSolverInfo() -> getSolverInfo
    void setGravity(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setGravity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getGravity() -> getGravity
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData -> com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldFloatData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setSolverInfo(com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData) -> setSolverInfo
    com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfoFloatData getSolverInfo() -> getSolverInfo
    void setGravity(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setGravity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getGravity() -> getGravity
com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldType -> com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorldType:
    int BT_SIMPLE_DYNAMICS_WORLD -> BT_SIMPLE_DYNAMICS_WORLD
    int BT_DISCRETE_DYNAMICS_WORLD -> BT_DISCRETE_DYNAMICS_WORLD
    int BT_CONTINUOUS_DYNAMICS_WORLD -> BT_CONTINUOUS_DYNAMICS_WORLD
    int BT_SOFT_RIGID_DYNAMICS_WORLD -> BT_SOFT_RIGID_DYNAMICS_WORLD
    int BT_GPU_DYNAMICS_WORLD -> BT_GPU_DYNAMICS_WORLD
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint -> com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setUseSolveConstraintObsolete(boolean) -> setUseSolveConstraintObsolete
    boolean getUseSolveConstraintObsolete() -> getUseSolveConstraintObsolete
    void calculateTransforms(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> calculateTransforms
    void calculateTransforms() -> calculateTransforms
    com.badlogic.gdx.math.Matrix4 getCalculatedTransformA() -> getCalculatedTransformA
    com.badlogic.gdx.math.Matrix4 getCalculatedTransformB() -> getCalculatedTransformB
    com.badlogic.gdx.math.Matrix4 getFrameOffsetA() -> getFrameOffsetA
    com.badlogic.gdx.math.Matrix4 getFrameOffsetB() -> getFrameOffsetB
    void getInfo1NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1) -> getInfo1NonVirtual
    void getInfo2NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getInfo2NonVirtual
    void updateRHS(float) -> updateRHS
    com.badlogic.gdx.math.Vector3 getAxis(int) -> getAxis
    float getAngle(int) -> getAngle
    float getRelativePivotPosition(int) -> getRelativePivotPosition
    void setFrames(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> setFrames
    boolean testAngularLimitMotor(int) -> testAngularLimitMotor
    void setLinearLowerLimit(com.badlogic.gdx.math.Vector3) -> setLinearLowerLimit
    void getLinearLowerLimit(com.badlogic.gdx.math.Vector3) -> getLinearLowerLimit
    void setLinearUpperLimit(com.badlogic.gdx.math.Vector3) -> setLinearUpperLimit
    void getLinearUpperLimit(com.badlogic.gdx.math.Vector3) -> getLinearUpperLimit
    void setAngularLowerLimit(com.badlogic.gdx.math.Vector3) -> setAngularLowerLimit
    void getAngularLowerLimit(com.badlogic.gdx.math.Vector3) -> getAngularLowerLimit
    void setAngularUpperLimit(com.badlogic.gdx.math.Vector3) -> setAngularUpperLimit
    void getAngularUpperLimit(com.badlogic.gdx.math.Vector3) -> getAngularUpperLimit
    com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor getRotationalLimitMotor(int) -> getRotationalLimitMotor
    com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor getTranslationalLimitMotor() -> getTranslationalLimitMotor
    void setLimit(int,float,float) -> setLimit
    boolean isLimited(int) -> isLimited
    void calcAnchorPos() -> calcAnchorPos
    int get_limit_motor_info2(com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,int,com.badlogic.gdx.math.Vector3,int,int) -> get_limit_motor_info2
    int get_limit_motor_info2(com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,int,com.badlogic.gdx.math.Vector3,int) -> get_limit_motor_info2
    boolean getUseFrameOffset() -> getUseFrameOffset
    void setUseFrameOffset(boolean) -> setUseFrameOffset
    void setParam(int,float,int) -> setParam
    void setParam(int,float) -> setParam
    float getParam(int,int) -> getParam
    float getParam(int) -> getParam
    void setAxis(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setAxis
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData -> com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> setTypeConstraintData
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData getTypeConstraintData() -> getTypeConstraintData
    void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> setRbAFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbAFrame() -> getRbAFrame
    void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> setRbBFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbBFrame() -> getRbBFrame
    void setLinearUpperLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setLinearUpperLimit
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLinearUpperLimit() -> getLinearUpperLimit
    void setLinearLowerLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setLinearLowerLimit
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLinearLowerLimit() -> getLinearLowerLimit
    void setAngularUpperLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setAngularUpperLimit
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAngularUpperLimit() -> getAngularUpperLimit
    void setAngularLowerLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setAngularLowerLimit
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAngularLowerLimit() -> getAngularLowerLimit
    void setUseLinearReferenceFrameA(int) -> setUseLinearReferenceFrameA
    int getUseLinearReferenceFrameA() -> getUseLinearReferenceFrameA
    void setUseOffsetForConstraintFrame(int) -> setUseOffsetForConstraintFrame
    int getUseOffsetForConstraintFrame() -> getUseOffsetForConstraintFrame
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2 -> com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> setTypeConstraintData
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData getTypeConstraintData() -> getTypeConstraintData
    void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> setRbAFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbAFrame() -> getRbAFrame
    void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> setRbBFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbBFrame() -> getRbBFrame
    void setLinearUpperLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setLinearUpperLimit
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getLinearUpperLimit() -> getLinearUpperLimit
    void setLinearLowerLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setLinearLowerLimit
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getLinearLowerLimit() -> getLinearLowerLimit
    void setAngularUpperLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setAngularUpperLimit
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getAngularUpperLimit() -> getAngularUpperLimit
    void setAngularLowerLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setAngularLowerLimit
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getAngularLowerLimit() -> getAngularLowerLimit
    void setUseLinearReferenceFrameA(int) -> setUseLinearReferenceFrameA
    int getUseLinearReferenceFrameA() -> getUseLinearReferenceFrameA
    void setUseOffsetForConstraintFrame(int) -> setUseOffsetForConstraintFrame
    int getUseOffsetForConstraintFrame() -> getUseOffsetForConstraintFrame
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint -> com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void enableSpring(int,boolean) -> enableSpring
    void setStiffness(int,float) -> setStiffness
    void setDamping(int,float) -> setDamping
    void setEquilibriumPoint() -> setEquilibriumPoint
    void setEquilibriumPoint(int) -> setEquilibriumPoint
    void setEquilibriumPoint(int,float) -> setEquilibriumPoint
    void setAxis(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setAxis
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData -> com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void set6dofData(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData) -> set6dofData
    com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintData get6dofData() -> get6dofData
    void setSpringEnabled(int[]) -> setSpringEnabled
    int[] getSpringEnabled() -> getSpringEnabled
    void setEquilibriumPoint(float[]) -> setEquilibriumPoint
    float[] getEquilibriumPoint() -> getEquilibriumPoint
    void setSpringStiffness(float[]) -> setSpringStiffness
    float[] getSpringStiffness() -> getSpringStiffness
    void setSpringDamping(float[]) -> setSpringDamping
    float[] getSpringDamping() -> getSpringDamping
com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2 -> com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraintDoubleData2) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void set6dofData(com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2) -> set6dofData
    com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraintDoubleData2 get6dofData() -> get6dofData
    void setSpringEnabled(int[]) -> setSpringEnabled
    int[] getSpringEnabled() -> getSpringEnabled
    void setEquilibriumPoint(double[]) -> setEquilibriumPoint
    double[] getEquilibriumPoint() -> getEquilibriumPoint
    void setSpringStiffness(double[]) -> setSpringStiffness
    double[] getSpringStiffness() -> getSpringStiffness
    void setSpringDamping(double[]) -> setSpringDamping
    double[] getSpringDamping() -> getSpringDamping
com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint -> com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btHinge2Constraint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.math.Vector3 getAnchor() -> getAnchor
    com.badlogic.gdx.math.Vector3 getAnchor2() -> getAnchor2
    com.badlogic.gdx.math.Vector3 getAxis1() -> getAxis1
    com.badlogic.gdx.math.Vector3 getAxis2() -> getAxis2
    float getAngle1() -> getAngle1
    float getAngle2() -> getAngle2
    void setUpperLimit(float) -> setUpperLimit
    void setLowerLimit(float) -> setLowerLimit
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint -> com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void getInfo1NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1) -> getInfo1NonVirtual
    void getInfo2NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getInfo2NonVirtual
    void getInfo2Internal(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getInfo2Internal
    void getInfo2InternalUsingFrameOffset(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getInfo2InternalUsingFrameOffset
    void updateRHS(float) -> updateRHS
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyA() -> getRigidBodyA
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyB() -> getRigidBodyB
    com.badlogic.gdx.math.Matrix4 getFrameOffsetA() -> getFrameOffsetA
    com.badlogic.gdx.math.Matrix4 getFrameOffsetB() -> getFrameOffsetB
    void setFrames(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> setFrames
    void setAngularOnly(boolean) -> setAngularOnly
    void enableAngularMotor(boolean,float,float) -> enableAngularMotor
    void enableMotor(boolean) -> enableMotor
    void setMaxMotorImpulse(float) -> setMaxMotorImpulse
    void setMotorTarget(com.badlogic.gdx.math.Quaternion,float) -> setMotorTarget
    void setMotorTarget(float,float) -> setMotorTarget
    void setLimit(float,float,float,float,float) -> setLimit
    void setLimit(float,float,float,float) -> setLimit
    void setLimit(float,float,float) -> setLimit
    void setLimit(float,float) -> setLimit
    void setAxis(com.badlogic.gdx.math.Vector3) -> setAxis
    float getLowerLimit() -> getLowerLimit
    float getUpperLimit() -> getUpperLimit
    float getHingeAngle() -> getHingeAngle
    float getHingeAngle(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> getHingeAngle
    void testLimit(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> testLimit
    com.badlogic.gdx.math.Matrix4 getAFrame() -> getAFrame
    com.badlogic.gdx.math.Matrix4 getBFrame() -> getBFrame
    int getSolveLimit() -> getSolveLimit
    float getLimitSign() -> getLimitSign
    boolean getAngularOnly() -> getAngularOnly
    boolean getEnableAngularMotor() -> getEnableAngularMotor
    float getMotorTargetVelosity() -> getMotorTargetVelosity
    float getMaxMotorImpulse() -> getMaxMotorImpulse
    boolean getUseFrameOffset() -> getUseFrameOffset
    void setUseFrameOffset(boolean) -> setUseFrameOffset
    void setParam(int,float,int) -> setParam
    void setParam(int,float) -> setParam
    float getParam(int,int) -> getParam
    float getParam(int) -> getParam
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData -> com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> setTypeConstraintData
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData getTypeConstraintData() -> getTypeConstraintData
    void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> setRbAFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbAFrame() -> getRbAFrame
    void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> setRbBFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbBFrame() -> getRbBFrame
    void setUseReferenceFrameA(int) -> setUseReferenceFrameA
    int getUseReferenceFrameA() -> getUseReferenceFrameA
    void setAngularOnly(int) -> setAngularOnly
    int getAngularOnly() -> getAngularOnly
    void setEnableAngularMotor(int) -> setEnableAngularMotor
    int getEnableAngularMotor() -> getEnableAngularMotor
    void setMotorTargetVelocity(float) -> setMotorTargetVelocity
    float getMotorTargetVelocity() -> getMotorTargetVelocity
    void setMaxMotorImpulse(float) -> setMaxMotorImpulse
    float getMaxMotorImpulse() -> getMaxMotorImpulse
    void setLowerLimit(float) -> setLowerLimit
    float getLowerLimit() -> getLowerLimit
    void setUpperLimit(float) -> setUpperLimit
    float getUpperLimit() -> getUpperLimit
    void setLimitSoftness(float) -> setLimitSoftness
    float getLimitSoftness() -> getLimitSoftness
    void setBiasFactor(float) -> setBiasFactor
    float getBiasFactor() -> getBiasFactor
    void setRelaxationFactor(float) -> setRelaxationFactor
    float getRelaxationFactor() -> getRelaxationFactor
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2 -> com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintDoubleData2) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> setTypeConstraintData
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData getTypeConstraintData() -> getTypeConstraintData
    void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> setRbAFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbAFrame() -> getRbAFrame
    void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> setRbBFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbBFrame() -> getRbBFrame
    void setUseReferenceFrameA(int) -> setUseReferenceFrameA
    int getUseReferenceFrameA() -> getUseReferenceFrameA
    void setAngularOnly(int) -> setAngularOnly
    int getAngularOnly() -> getAngularOnly
    void setEnableAngularMotor(int) -> setEnableAngularMotor
    int getEnableAngularMotor() -> getEnableAngularMotor
    void setMotorTargetVelocity(double) -> setMotorTargetVelocity
    double getMotorTargetVelocity() -> getMotorTargetVelocity
    void setMaxMotorImpulse(double) -> setMaxMotorImpulse
    double getMaxMotorImpulse() -> getMaxMotorImpulse
    void setLowerLimit(double) -> setLowerLimit
    double getLowerLimit() -> getLowerLimit
    void setUpperLimit(double) -> setUpperLimit
    double getUpperLimit() -> getUpperLimit
    void setLimitSoftness(double) -> setLimitSoftness
    double getLimitSoftness() -> getLimitSoftness
    void setBiasFactor(double) -> setBiasFactor
    double getBiasFactor() -> getBiasFactor
    void setRelaxationFactor(double) -> setRelaxationFactor
    double getRelaxationFactor() -> getRelaxationFactor
    void setPadding1(java.lang.String) -> setPadding1
    java.lang.String getPadding1() -> getPadding1
com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData -> com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraintFloatData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> setTypeConstraintData
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData getTypeConstraintData() -> getTypeConstraintData
    void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> setRbAFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbAFrame() -> getRbAFrame
    void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> setRbBFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbBFrame() -> getRbBFrame
    void setUseReferenceFrameA(int) -> setUseReferenceFrameA
    int getUseReferenceFrameA() -> getUseReferenceFrameA
    void setAngularOnly(int) -> setAngularOnly
    int getAngularOnly() -> getAngularOnly
    void setEnableAngularMotor(int) -> setEnableAngularMotor
    int getEnableAngularMotor() -> getEnableAngularMotor
    void setMotorTargetVelocity(float) -> setMotorTargetVelocity
    float getMotorTargetVelocity() -> getMotorTargetVelocity
    void setMaxMotorImpulse(float) -> setMaxMotorImpulse
    float getMaxMotorImpulse() -> getMaxMotorImpulse
    void setLowerLimit(float) -> setLowerLimit
    float getLowerLimit() -> getLowerLimit
    void setUpperLimit(float) -> setUpperLimit
    float getUpperLimit() -> getUpperLimit
    void setLimitSoftness(float) -> setLimitSoftness
    float getLimitSoftness() -> getLimitSoftness
    void setBiasFactor(float) -> setBiasFactor
    float getBiasFactor() -> getBiasFactor
    void setRelaxationFactor(float) -> setRelaxationFactor
    float getRelaxationFactor() -> getRelaxationFactor
com.badlogic.gdx.physics.bullet.dynamics.btHingeFlags -> com.badlogic.gdx.physics.bullet.dynamics.btHingeFlags:
    int BT_HINGE_FLAGS_CFM_STOP -> BT_HINGE_FLAGS_CFM_STOP
    int BT_HINGE_FLAGS_ERP_STOP -> BT_HINGE_FLAGS_ERP_STOP
    int BT_HINGE_FLAGS_CFM_NORM -> BT_HINGE_FLAGS_CFM_NORM
com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry -> com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    float getDiagonal() -> getDiagonal
    float getNonDiagonal(com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,float) -> getNonDiagonal
    float getNonDiagonal(com.badlogic.gdx.physics.bullet.dynamics.btJacobianEntry,float,float) -> getNonDiagonal
    float getRelativeVelocity(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getRelativeVelocity
    void setLinearJointAxis(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setLinearJointAxis
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLinearJointAxis() -> getLinearJointAxis
    void setAJ(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAJ
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAJ() -> getAJ
    void setBJ(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setBJ
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getBJ() -> getBJ
    void set0MinvJt(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> set0MinvJt
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 get0MinvJt() -> get0MinvJt
    void set1MinvJt(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> set1MinvJt
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 get1MinvJt() -> get1MinvJt
    void setAdiag(float) -> setAdiag
    float getAdiag() -> getAdiag
com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback -> com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setAppliedForceBodyA(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAppliedForceBodyA
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAppliedForceBodyA() -> getAppliedForceBodyA
    void setAppliedTorqueBodyA(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAppliedTorqueBodyA
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAppliedTorqueBodyA() -> getAppliedTorqueBodyA
    void setAppliedForceBodyB(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAppliedForceBodyB
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAppliedForceBodyB() -> getAppliedForceBodyB
    void setAppliedTorqueBodyB(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAppliedTorqueBodyB
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAppliedTorqueBodyB() -> getAppliedTorqueBodyB
com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController -> com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btKinematicCharacterController) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setUpAxis(int) -> setUpAxis
    void setFallSpeed(float) -> setFallSpeed
    void setJumpSpeed(float) -> setJumpSpeed
    void setMaxJumpHeight(float) -> setMaxJumpHeight
    void setGravity(float) -> setGravity
    float getGravity() -> getGravity
    void setMaxSlope(float) -> setMaxSlope
    float getMaxSlope() -> getMaxSlope
    com.badlogic.gdx.physics.bullet.collision.btPairCachingGhostObject getGhostObject() -> getGhostObject
    void setUseGhostSweepTest(boolean) -> setUseGhostSweepTest
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint -> com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setUseSolveConstraintObsolete(boolean) -> setUseSolveConstraintObsolete
    boolean getUseSolveConstraintObsolete() -> getUseSolveConstraintObsolete
    void setSetting(com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting) -> setSetting
    com.badlogic.gdx.physics.bullet.dynamics.btConstraintSetting getSetting() -> getSetting
    void getInfo1NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1) -> getInfo1NonVirtual
    void getInfo2NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> getInfo2NonVirtual
    void updateRHS(float) -> updateRHS
    void setPivotA(com.badlogic.gdx.math.Vector3) -> setPivotA
    void setPivotB(com.badlogic.gdx.math.Vector3) -> setPivotB
    com.badlogic.gdx.math.Vector3 getPivotInA() -> getPivotInA
    com.badlogic.gdx.math.Vector3 getPivotInB() -> getPivotInB
    void setParam(int,float,int) -> setParam
    void setParam(int,float) -> setParam
    float getParam(int,int) -> getParam
    float getParam(int) -> getParam
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData -> com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> setTypeConstraintData
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData getTypeConstraintData() -> getTypeConstraintData
    void setPivotInA(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setPivotInA
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getPivotInA() -> getPivotInA
    void setPivotInB(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setPivotInB
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getPivotInB() -> getPivotInB
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2 -> com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintDoubleData2) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> setTypeConstraintData
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData getTypeConstraintData() -> getTypeConstraintData
    void setPivotInA(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setPivotInA
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getPivotInA() -> getPivotInA
    void setPivotInB(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setPivotInB
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getPivotInB() -> getPivotInB
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData -> com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraintFloatData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> setTypeConstraintData
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData getTypeConstraintData() -> getTypeConstraintData
    void setPivotInA(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setPivotInA
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getPivotInA() -> getPivotInA
    void setPivotInB(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setPivotInB
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getPivotInB() -> getPivotInB
com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointFlags -> com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointFlags:
    int BT_P2P_FLAGS_ERP -> BT_P2P_FLAGS_ERP
    int BT_P2P_FLAGS_CFM -> BT_P2P_FLAGS_CFM
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle -> com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.math.Matrix4 getChassisWorldTransform() -> getChassisWorldTransform
    float rayCast(com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> rayCast
    void updateVehicle(float) -> updateVehicle
    void resetSuspension() -> resetSuspension
    float getSteeringValue(int) -> getSteeringValue
    void setSteeringValue(float,int) -> setSteeringValue
    void applyEngineForce(float,int) -> applyEngineForce
    com.badlogic.gdx.math.Matrix4 getWheelTransformWS(int) -> getWheelTransformWS
    void updateWheelTransform(int,boolean) -> updateWheelTransform
    void updateWheelTransform(int) -> updateWheelTransform
    com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo addWheel(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float,com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning,boolean) -> addWheel
    int getNumWheels() -> getNumWheels
    void setWheelInfo(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t) -> setWheelInfo
    com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btWheelInfo_t getWheelInfo() -> getWheelInfo
    com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo getWheelInfo(int) -> getWheelInfo
    void updateWheelTransformsWS(com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo,boolean) -> updateWheelTransformsWS
    void updateWheelTransformsWS(com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> updateWheelTransformsWS
    void setBrake(float,int) -> setBrake
    void setPitchControl(float) -> setPitchControl
    void updateSuspension(float) -> updateSuspension
    void updateFriction(float) -> updateFriction
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBody() -> getRigidBody
    int getRightAxis() -> getRightAxis
    int getUpAxis() -> getUpAxis
    int getForwardAxis() -> getForwardAxis
    com.badlogic.gdx.math.Vector3 getForwardVector() -> getForwardVector
    float getCurrentSpeedKmHour() -> getCurrentSpeedKmHour
    void setCoordinateSystem(int,int,int) -> setCoordinateSystem
    int getUserConstraintType() -> getUserConstraintType
    void setUserConstraintType(int) -> setUserConstraintType
    void setUserConstraintId(int) -> setUserConstraintId
    int getUserConstraintId() -> getUserConstraintId
com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning -> com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btRaycastVehicle$btVehicleTuning) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setSuspensionStiffness(float) -> setSuspensionStiffness
    float getSuspensionStiffness() -> getSuspensionStiffness
    void setSuspensionCompression(float) -> setSuspensionCompression
    float getSuspensionCompression() -> getSuspensionCompression
    void setSuspensionDamping(float) -> setSuspensionDamping
    float getSuspensionDamping() -> getSuspensionDamping
    void setMaxSuspensionTravelCm(float) -> setMaxSuspensionTravelCm
    float getMaxSuspensionTravelCm() -> getMaxSuspensionTravelCm
    void setFrictionSlip(float) -> setFrictionSlip
    float getFrictionSlip() -> getFrictionSlip
    void setMaxSuspensionForce(float) -> setMaxSuspensionForce
    float getMaxSuspensionForce() -> getMaxSuspensionForce
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody -> com.badlogic.gdx.physics.bullet.dynamics.btRigidBody:
    long swigCPtr -> swigCPtr
    com.badlogic.gdx.physics.bullet.linearmath.btMotionState motionState -> motionState
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setMotionState(com.badlogic.gdx.physics.bullet.linearmath.btMotionState) -> setMotionState
    void refMotionState(com.badlogic.gdx.physics.bullet.linearmath.btMotionState) -> refMotionState
    com.badlogic.gdx.physics.bullet.linearmath.btMotionState getMotionState() -> getMotionState
    void dispose() -> dispose
    void proceedToTransform(com.badlogic.gdx.math.Matrix4) -> proceedToTransform
    void predictIntegratedTransform(float,com.badlogic.gdx.math.Matrix4) -> predictIntegratedTransform
    void saveKinematicState(float) -> saveKinematicState
    void applyGravity() -> applyGravity
    void setGravity(com.badlogic.gdx.math.Vector3) -> setGravity
    com.badlogic.gdx.math.Vector3 getGravity() -> getGravity
    void setDamping(float,float) -> setDamping
    float getLinearDamping() -> getLinearDamping
    float getAngularDamping() -> getAngularDamping
    float getLinearSleepingThreshold() -> getLinearSleepingThreshold
    float getAngularSleepingThreshold() -> getAngularSleepingThreshold
    void applyDamping(float) -> applyDamping
    void setMassProps(float,com.badlogic.gdx.math.Vector3) -> setMassProps
    com.badlogic.gdx.math.Vector3 getLinearFactor() -> getLinearFactor
    void setLinearFactor(com.badlogic.gdx.math.Vector3) -> setLinearFactor
    float getInvMass() -> getInvMass
    com.badlogic.gdx.math.Matrix3 getInvInertiaTensorWorld() -> getInvInertiaTensorWorld
    void integrateVelocities(float) -> integrateVelocities
    void setCenterOfMassTransform(com.badlogic.gdx.math.Matrix4) -> setCenterOfMassTransform
    void applyCentralForce(com.badlogic.gdx.math.Vector3) -> applyCentralForce
    com.badlogic.gdx.math.Vector3 getTotalForce() -> getTotalForce
    com.badlogic.gdx.math.Vector3 getTotalTorque() -> getTotalTorque
    com.badlogic.gdx.math.Vector3 getInvInertiaDiagLocal() -> getInvInertiaDiagLocal
    void setInvInertiaDiagLocal(com.badlogic.gdx.math.Vector3) -> setInvInertiaDiagLocal
    void setSleepingThresholds(float,float) -> setSleepingThresholds
    void applyTorque(com.badlogic.gdx.math.Vector3) -> applyTorque
    void applyForce(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> applyForce
    void applyCentralImpulse(com.badlogic.gdx.math.Vector3) -> applyCentralImpulse
    void applyTorqueImpulse(com.badlogic.gdx.math.Vector3) -> applyTorqueImpulse
    void applyImpulse(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> applyImpulse
    void clearForces() -> clearForces
    void updateInertiaTensor() -> updateInertiaTensor
    com.badlogic.gdx.math.Vector3 getCenterOfMassPosition() -> getCenterOfMassPosition
    com.badlogic.gdx.math.Quaternion getOrientation() -> getOrientation
    com.badlogic.gdx.math.Matrix4 getCenterOfMassTransform() -> getCenterOfMassTransform
    com.badlogic.gdx.math.Vector3 getLinearVelocity() -> getLinearVelocity
    com.badlogic.gdx.math.Vector3 getAngularVelocity() -> getAngularVelocity
    void setLinearVelocity(com.badlogic.gdx.math.Vector3) -> setLinearVelocity
    void setAngularVelocity(com.badlogic.gdx.math.Vector3) -> setAngularVelocity
    com.badlogic.gdx.math.Vector3 getVelocityInLocalPoint(com.badlogic.gdx.math.Vector3) -> getVelocityInLocalPoint
    void translate(com.badlogic.gdx.math.Vector3) -> translate
    void getAabb(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getAabb
    float computeImpulseDenominator(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> computeImpulseDenominator
    float computeAngularImpulseDenominator(com.badlogic.gdx.math.Vector3) -> computeAngularImpulseDenominator
    void updateDeactivation(float) -> updateDeactivation
    boolean wantsSleeping() -> wantsSleeping
    com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy getBroadphaseProxy() -> getBroadphaseProxy
    void setNewBroadphaseProxy(com.badlogic.gdx.physics.bullet.collision.btBroadphaseProxy) -> setNewBroadphaseProxy
    com.badlogic.gdx.physics.bullet.linearmath.btMotionState internalGetMotionState() -> internalGetMotionState
    void internalSetMotionState(com.badlogic.gdx.physics.bullet.linearmath.btMotionState) -> internalSetMotionState
    void setContactSolverType(int) -> setContactSolverType
    int getContactSolverType() -> getContactSolverType
    void setFrictionSolverType(int) -> setFrictionSolverType
    int getFrictionSolverType() -> getFrictionSolverType
    void setAngularFactor(com.badlogic.gdx.math.Vector3) -> setAngularFactor
    void setAngularFactor(float) -> setAngularFactor
    com.badlogic.gdx.math.Vector3 getAngularFactor() -> getAngularFactor
    boolean isInWorld() -> isInWorld
    boolean checkCollideWithOverride(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> checkCollideWithOverride
    void addConstraintRef(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> addConstraintRef
    void removeConstraintRef(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> removeConstraintRef
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint getConstraintRef(int) -> getConstraintRef
    int getNumConstraintRefs() -> getNumConstraintRefs
    void setFlags(int) -> setFlags
    int getFlags() -> getFlags
    com.badlogic.gdx.math.Vector3 computeGyroscopicForce(float) -> computeGyroscopicForce
com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo -> com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo:
    long swigCPtr -> swigCPtr
    com.badlogic.gdx.physics.bullet.linearmath.btMotionState motionState -> motionState
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape collisionShape -> collisionShape
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody$btRigidBodyConstructionInfo) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setMotionState(com.badlogic.gdx.physics.bullet.linearmath.btMotionState) -> setMotionState
    void refMotionState(com.badlogic.gdx.physics.bullet.linearmath.btMotionState) -> refMotionState
    com.badlogic.gdx.physics.bullet.linearmath.btMotionState getMotionState() -> getMotionState
    void setCollisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> setCollisionShape
    void refCollisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> refCollisionShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape getCollisionShape() -> getCollisionShape
    void dispose() -> dispose
    void setMass(float) -> setMass
    float getMass() -> getMass
    void setI_motionState(com.badlogic.gdx.physics.bullet.linearmath.btMotionState) -> setI_motionState
    com.badlogic.gdx.physics.bullet.linearmath.btMotionState getI_motionState() -> getI_motionState
    void setStartWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setStartWorldTransform
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getStartWorldTransform() -> getStartWorldTransform
    void setI_collisionShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> setI_collisionShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape getI_collisionShape() -> getI_collisionShape
    void setLocalInertia(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setLocalInertia
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLocalInertia() -> getLocalInertia
    void setLinearDamping(float) -> setLinearDamping
    float getLinearDamping() -> getLinearDamping
    void setAngularDamping(float) -> setAngularDamping
    float getAngularDamping() -> getAngularDamping
    void setFriction(float) -> setFriction
    float getFriction() -> getFriction
    void setRollingFriction(float) -> setRollingFriction
    float getRollingFriction() -> getRollingFriction
    void setRestitution(float) -> setRestitution
    float getRestitution() -> getRestitution
    void setLinearSleepingThreshold(float) -> setLinearSleepingThreshold
    float getLinearSleepingThreshold() -> getLinearSleepingThreshold
    void setAngularSleepingThreshold(float) -> setAngularSleepingThreshold
    float getAngularSleepingThreshold() -> getAngularSleepingThreshold
    void setAdditionalDamping(boolean) -> setAdditionalDamping
    boolean getAdditionalDamping() -> getAdditionalDamping
    void setAdditionalDampingFactor(float) -> setAdditionalDampingFactor
    float getAdditionalDampingFactor() -> getAdditionalDampingFactor
    void setAdditionalLinearDampingThresholdSqr(float) -> setAdditionalLinearDampingThresholdSqr
    float getAdditionalLinearDampingThresholdSqr() -> getAdditionalLinearDampingThresholdSqr
    void setAdditionalAngularDampingThresholdSqr(float) -> setAdditionalAngularDampingThresholdSqr
    float getAdditionalAngularDampingThresholdSqr() -> getAdditionalAngularDampingThresholdSqr
    void setAdditionalAngularDampingFactor(float) -> setAdditionalAngularDampingFactor
    float getAdditionalAngularDampingFactor() -> getAdditionalAngularDampingFactor
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData -> com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setCollisionObjectData(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData) -> setCollisionObjectData
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectDoubleData getCollisionObjectData() -> getCollisionObjectData
    void setInvInertiaTensorWorld(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3DoubleData) -> setInvInertiaTensorWorld
    com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3DoubleData getInvInertiaTensorWorld() -> getInvInertiaTensorWorld
    void setLinearVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setLinearVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getLinearVelocity() -> getLinearVelocity
    void setAngularVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setAngularVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getAngularVelocity() -> getAngularVelocity
    void setAngularFactor(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setAngularFactor
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getAngularFactor() -> getAngularFactor
    void setLinearFactor(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setLinearFactor
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getLinearFactor() -> getLinearFactor
    void setGravity(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setGravity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getGravity() -> getGravity
    void setGravity_acceleration(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setGravity_acceleration
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getGravity_acceleration() -> getGravity_acceleration
    void setInvInertiaLocal(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setInvInertiaLocal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getInvInertiaLocal() -> getInvInertiaLocal
    void setTotalForce(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setTotalForce
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getTotalForce() -> getTotalForce
    void setTotalTorque(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setTotalTorque
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getTotalTorque() -> getTotalTorque
    void setInverseMass(double) -> setInverseMass
    double getInverseMass() -> getInverseMass
    void setLinearDamping(double) -> setLinearDamping
    double getLinearDamping() -> getLinearDamping
    void setAngularDamping(double) -> setAngularDamping
    double getAngularDamping() -> getAngularDamping
    void setAdditionalDampingFactor(double) -> setAdditionalDampingFactor
    double getAdditionalDampingFactor() -> getAdditionalDampingFactor
    void setAdditionalLinearDampingThresholdSqr(double) -> setAdditionalLinearDampingThresholdSqr
    double getAdditionalLinearDampingThresholdSqr() -> getAdditionalLinearDampingThresholdSqr
    void setAdditionalAngularDampingThresholdSqr(double) -> setAdditionalAngularDampingThresholdSqr
    double getAdditionalAngularDampingThresholdSqr() -> getAdditionalAngularDampingThresholdSqr
    void setAdditionalAngularDampingFactor(double) -> setAdditionalAngularDampingFactor
    double getAdditionalAngularDampingFactor() -> getAdditionalAngularDampingFactor
    void setLinearSleepingThreshold(double) -> setLinearSleepingThreshold
    double getLinearSleepingThreshold() -> getLinearSleepingThreshold
    void setAngularSleepingThreshold(double) -> setAngularSleepingThreshold
    double getAngularSleepingThreshold() -> getAngularSleepingThreshold
    void setAdditionalDamping(int) -> setAdditionalDamping
    int getAdditionalDamping() -> getAdditionalDamping
    void setPadding(java.lang.String) -> setPadding
    java.lang.String getPadding() -> getPadding
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFlags -> com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFlags:
    int BT_DISABLE_WORLD_GRAVITY -> BT_DISABLE_WORLD_GRAVITY
    int BT_ENABLE_GYROPSCOPIC_FORCE -> BT_ENABLE_GYROPSCOPIC_FORCE
com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData -> com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setCollisionObjectData(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> setCollisionObjectData
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData getCollisionObjectData() -> getCollisionObjectData
    void setInvInertiaTensorWorld(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3FloatData) -> setInvInertiaTensorWorld
    com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btMatrix3x3FloatData getInvInertiaTensorWorld() -> getInvInertiaTensorWorld
    void setLinearVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setLinearVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLinearVelocity() -> getLinearVelocity
    void setAngularVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setAngularVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAngularVelocity() -> getAngularVelocity
    void setAngularFactor(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setAngularFactor
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAngularFactor() -> getAngularFactor
    void setLinearFactor(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setLinearFactor
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLinearFactor() -> getLinearFactor
    void setGravity(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setGravity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getGravity() -> getGravity
    void setGravity_acceleration(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setGravity_acceleration
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getGravity_acceleration() -> getGravity_acceleration
    void setInvInertiaLocal(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setInvInertiaLocal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getInvInertiaLocal() -> getInvInertiaLocal
    void setTotalForce(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setTotalForce
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getTotalForce() -> getTotalForce
    void setTotalTorque(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setTotalTorque
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getTotalTorque() -> getTotalTorque
    void setInverseMass(float) -> setInverseMass
    float getInverseMass() -> getInverseMass
    void setLinearDamping(float) -> setLinearDamping
    float getLinearDamping() -> getLinearDamping
    void setAngularDamping(float) -> setAngularDamping
    float getAngularDamping() -> getAngularDamping
    void setAdditionalDampingFactor(float) -> setAdditionalDampingFactor
    float getAdditionalDampingFactor() -> getAdditionalDampingFactor
    void setAdditionalLinearDampingThresholdSqr(float) -> setAdditionalLinearDampingThresholdSqr
    float getAdditionalLinearDampingThresholdSqr() -> getAdditionalLinearDampingThresholdSqr
    void setAdditionalAngularDampingThresholdSqr(float) -> setAdditionalAngularDampingThresholdSqr
    float getAdditionalAngularDampingThresholdSqr() -> getAdditionalAngularDampingThresholdSqr
    void setAdditionalAngularDampingFactor(float) -> setAdditionalAngularDampingFactor
    float getAdditionalAngularDampingFactor() -> getAdditionalAngularDampingFactor
    void setLinearSleepingThreshold(float) -> setLinearSleepingThreshold
    float getLinearSleepingThreshold() -> getLinearSleepingThreshold
    void setAngularSleepingThreshold(float) -> setAngularSleepingThreshold
    float getAngularSleepingThreshold() -> getAngularSleepingThreshold
    void setAdditionalDamping(int) -> setAdditionalDamping
    int getAdditionalDamping() -> getAdditionalDamping
com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor -> com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btRotationalLimitMotor) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setLoLimit(float) -> setLoLimit
    float getLoLimit() -> getLoLimit
    void setHiLimit(float) -> setHiLimit
    float getHiLimit() -> getHiLimit
    void setTargetVelocity(float) -> setTargetVelocity
    float getTargetVelocity() -> getTargetVelocity
    void setMaxMotorForce(float) -> setMaxMotorForce
    float getMaxMotorForce() -> getMaxMotorForce
    void setMaxLimitForce(float) -> setMaxLimitForce
    float getMaxLimitForce() -> getMaxLimitForce
    void setDamping(float) -> setDamping
    float getDamping() -> getDamping
    void setLimitSoftness(float) -> setLimitSoftness
    float getLimitSoftness() -> getLimitSoftness
    void setNormalCFM(float) -> setNormalCFM
    float getNormalCFM() -> getNormalCFM
    void setStopERP(float) -> setStopERP
    float getStopERP() -> getStopERP
    void setStopCFM(float) -> setStopCFM
    float getStopCFM() -> getStopCFM
    void setBounce(float) -> setBounce
    float getBounce() -> getBounce
    void setEnableMotor(boolean) -> setEnableMotor
    boolean getEnableMotor() -> getEnableMotor
    void setCurrentLimitError(float) -> setCurrentLimitError
    float getCurrentLimitError() -> getCurrentLimitError
    void setCurrentPosition(float) -> setCurrentPosition
    float getCurrentPosition() -> getCurrentPosition
    void setCurrentLimit(int) -> setCurrentLimit
    int getCurrentLimit() -> getCurrentLimit
    void setAccumulatedImpulse(float) -> setAccumulatedImpulse
    float getAccumulatedImpulse() -> getAccumulatedImpulse
    boolean isLimited() -> isLimited
    boolean needApplyTorques() -> needApplyTorques
    int testLimitValue(float) -> testLimitValue
    float solveAngularLimits(float,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> solveAngularLimits
com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver -> com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSequentialImpulseConstraintSolver) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    long btRand2() -> btRand2
    int btRandInt2(int) -> btRandInt2
    void setRandSeed(long) -> setRandSeed
    long getRandSeed() -> getRandSeed
com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld -> com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSimpleDynamicsWorld) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int stepSimulation(float,int,float) -> stepSimulation
    int stepSimulation(float,int) -> stepSimulation
    int stepSimulation(float) -> stepSimulation
    void addRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> addRigidBody
    void addRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,short,short) -> addRigidBody
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint -> com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void getInfo1NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1) -> getInfo1NonVirtual
    void getInfo2NonVirtual(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,float) -> getInfo2NonVirtual
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyA() -> getRigidBodyA
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyB() -> getRigidBodyB
    com.badlogic.gdx.math.Matrix4 getCalculatedTransformA() -> getCalculatedTransformA
    com.badlogic.gdx.math.Matrix4 getCalculatedTransformB() -> getCalculatedTransformB
    com.badlogic.gdx.math.Matrix4 getFrameOffsetA() -> getFrameOffsetA
    com.badlogic.gdx.math.Matrix4 getFrameOffsetB() -> getFrameOffsetB
    float getLowerLinLimit() -> getLowerLinLimit
    void setLowerLinLimit(float) -> setLowerLinLimit
    float getUpperLinLimit() -> getUpperLinLimit
    void setUpperLinLimit(float) -> setUpperLinLimit
    float getLowerAngLimit() -> getLowerAngLimit
    void setLowerAngLimit(float) -> setLowerAngLimit
    float getUpperAngLimit() -> getUpperAngLimit
    void setUpperAngLimit(float) -> setUpperAngLimit
    boolean getUseLinearReferenceFrameA() -> getUseLinearReferenceFrameA
    float getSoftnessDirLin() -> getSoftnessDirLin
    float getRestitutionDirLin() -> getRestitutionDirLin
    float getDampingDirLin() -> getDampingDirLin
    float getSoftnessDirAng() -> getSoftnessDirAng
    float getRestitutionDirAng() -> getRestitutionDirAng
    float getDampingDirAng() -> getDampingDirAng
    float getSoftnessLimLin() -> getSoftnessLimLin
    float getRestitutionLimLin() -> getRestitutionLimLin
    float getDampingLimLin() -> getDampingLimLin
    float getSoftnessLimAng() -> getSoftnessLimAng
    float getRestitutionLimAng() -> getRestitutionLimAng
    float getDampingLimAng() -> getDampingLimAng
    float getSoftnessOrthoLin() -> getSoftnessOrthoLin
    float getRestitutionOrthoLin() -> getRestitutionOrthoLin
    float getDampingOrthoLin() -> getDampingOrthoLin
    float getSoftnessOrthoAng() -> getSoftnessOrthoAng
    float getRestitutionOrthoAng() -> getRestitutionOrthoAng
    float getDampingOrthoAng() -> getDampingOrthoAng
    void setSoftnessDirLin(float) -> setSoftnessDirLin
    void setRestitutionDirLin(float) -> setRestitutionDirLin
    void setDampingDirLin(float) -> setDampingDirLin
    void setSoftnessDirAng(float) -> setSoftnessDirAng
    void setRestitutionDirAng(float) -> setRestitutionDirAng
    void setDampingDirAng(float) -> setDampingDirAng
    void setSoftnessLimLin(float) -> setSoftnessLimLin
    void setRestitutionLimLin(float) -> setRestitutionLimLin
    void setDampingLimLin(float) -> setDampingLimLin
    void setSoftnessLimAng(float) -> setSoftnessLimAng
    void setRestitutionLimAng(float) -> setRestitutionLimAng
    void setDampingLimAng(float) -> setDampingLimAng
    void setSoftnessOrthoLin(float) -> setSoftnessOrthoLin
    void setRestitutionOrthoLin(float) -> setRestitutionOrthoLin
    void setDampingOrthoLin(float) -> setDampingOrthoLin
    void setSoftnessOrthoAng(float) -> setSoftnessOrthoAng
    void setRestitutionOrthoAng(float) -> setRestitutionOrthoAng
    void setDampingOrthoAng(float) -> setDampingOrthoAng
    void setPoweredLinMotor(boolean) -> setPoweredLinMotor
    boolean getPoweredLinMotor() -> getPoweredLinMotor
    void setTargetLinMotorVelocity(float) -> setTargetLinMotorVelocity
    float getTargetLinMotorVelocity() -> getTargetLinMotorVelocity
    void setMaxLinMotorForce(float) -> setMaxLinMotorForce
    float getMaxLinMotorForce() -> getMaxLinMotorForce
    void setPoweredAngMotor(boolean) -> setPoweredAngMotor
    boolean getPoweredAngMotor() -> getPoweredAngMotor
    void setTargetAngMotorVelocity(float) -> setTargetAngMotorVelocity
    float getTargetAngMotorVelocity() -> getTargetAngMotorVelocity
    void setMaxAngMotorForce(float) -> setMaxAngMotorForce
    float getMaxAngMotorForce() -> getMaxAngMotorForce
    float getLinearPos() -> getLinearPos
    float getAngularPos() -> getAngularPos
    boolean getSolveLinLimit() -> getSolveLinLimit
    float getLinDepth() -> getLinDepth
    boolean getSolveAngLimit() -> getSolveAngLimit
    float getAngDepth() -> getAngDepth
    void calculateTransforms(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> calculateTransforms
    void testLinLimits() -> testLinLimits
    void testAngLimits() -> testAngLimits
    com.badlogic.gdx.math.Vector3 getAncorInA() -> getAncorInA
    com.badlogic.gdx.math.Vector3 getAncorInB() -> getAncorInB
    boolean getUseFrameOffset() -> getUseFrameOffset
    void setUseFrameOffset(boolean) -> setUseFrameOffset
    void setFrames(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> setFrames
    void setParam(int,float,int) -> setParam
    void setParam(int,float) -> setParam
    float getParam(int,int) -> getParam
    float getParam(int) -> getParam
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData -> com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> setTypeConstraintData
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData getTypeConstraintData() -> getTypeConstraintData
    void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> setRbAFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbAFrame() -> getRbAFrame
    void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> setRbBFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getRbBFrame() -> getRbBFrame
    void setLinearUpperLimit(float) -> setLinearUpperLimit
    float getLinearUpperLimit() -> getLinearUpperLimit
    void setLinearLowerLimit(float) -> setLinearLowerLimit
    float getLinearLowerLimit() -> getLinearLowerLimit
    void setAngularUpperLimit(float) -> setAngularUpperLimit
    float getAngularUpperLimit() -> getAngularUpperLimit
    void setAngularLowerLimit(float) -> setAngularLowerLimit
    float getAngularLowerLimit() -> getAngularLowerLimit
    void setUseLinearReferenceFrameA(int) -> setUseLinearReferenceFrameA
    int getUseLinearReferenceFrameA() -> getUseLinearReferenceFrameA
    void setUseOffsetForConstraintFrame(int) -> setUseOffsetForConstraintFrame
    int getUseOffsetForConstraintFrame() -> getUseOffsetForConstraintFrame
com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData -> com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraintDoubleData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTypeConstraintData(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> setTypeConstraintData
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData getTypeConstraintData() -> getTypeConstraintData
    void setRbAFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> setRbAFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbAFrame() -> getRbAFrame
    void setRbBFrame(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> setRbBFrame
    com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData getRbBFrame() -> getRbBFrame
    void setLinearUpperLimit(double) -> setLinearUpperLimit
    double getLinearUpperLimit() -> getLinearUpperLimit
    void setLinearLowerLimit(double) -> setLinearLowerLimit
    double getLinearLowerLimit() -> getLinearLowerLimit
    void setAngularUpperLimit(double) -> setAngularUpperLimit
    double getAngularUpperLimit() -> getAngularUpperLimit
    void setAngularLowerLimit(double) -> setAngularLowerLimit
    double getAngularLowerLimit() -> getAngularLowerLimit
    void setUseLinearReferenceFrameA(int) -> setUseLinearReferenceFrameA
    int getUseLinearReferenceFrameA() -> getUseLinearReferenceFrameA
    void setUseOffsetForConstraintFrame(int) -> setUseOffsetForConstraintFrame
    int getUseOffsetForConstraintFrame() -> getUseOffsetForConstraintFrame
com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags -> com.badlogic.gdx.physics.bullet.dynamics.btSliderFlags:
    int BT_SLIDER_FLAGS_CFM_DIRLIN -> BT_SLIDER_FLAGS_CFM_DIRLIN
    int BT_SLIDER_FLAGS_ERP_DIRLIN -> BT_SLIDER_FLAGS_ERP_DIRLIN
    int BT_SLIDER_FLAGS_CFM_DIRANG -> BT_SLIDER_FLAGS_CFM_DIRANG
    int BT_SLIDER_FLAGS_ERP_DIRANG -> BT_SLIDER_FLAGS_ERP_DIRANG
    int BT_SLIDER_FLAGS_CFM_ORTLIN -> BT_SLIDER_FLAGS_CFM_ORTLIN
    int BT_SLIDER_FLAGS_ERP_ORTLIN -> BT_SLIDER_FLAGS_ERP_ORTLIN
    int BT_SLIDER_FLAGS_CFM_ORTANG -> BT_SLIDER_FLAGS_CFM_ORTANG
    int BT_SLIDER_FLAGS_ERP_ORTANG -> BT_SLIDER_FLAGS_ERP_ORTANG
    int BT_SLIDER_FLAGS_CFM_LIMLIN -> BT_SLIDER_FLAGS_CFM_LIMLIN
    int BT_SLIDER_FLAGS_ERP_LIMLIN -> BT_SLIDER_FLAGS_ERP_LIMLIN
    int BT_SLIDER_FLAGS_CFM_LIMANG -> BT_SLIDER_FLAGS_CFM_LIMANG
    int BT_SLIDER_FLAGS_ERP_LIMANG -> BT_SLIDER_FLAGS_ERP_LIMANG
com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint -> com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSolve2LinearConstraint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void resolveUnilateralPairConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float) -> resolveUnilateralPairConstraint
    void resolveBilateralPairConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float) -> resolveBilateralPairConstraint
com.badlogic.gdx.physics.bullet.dynamics.btSolverBody -> com.badlogic.gdx.physics.bullet.dynamics.btSolverBody:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSolverBody) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setWorldTransform
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getWorldTransform() -> getWorldTransform
    void setDeltaLinearVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setDeltaLinearVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getDeltaLinearVelocity() -> getDeltaLinearVelocity
    void setDeltaAngularVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setDeltaAngularVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getDeltaAngularVelocity() -> getDeltaAngularVelocity
    void setAngularFactor(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAngularFactor
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAngularFactor() -> getAngularFactor
    void setLinearFactor(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setLinearFactor
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLinearFactor() -> getLinearFactor
    void setInvMass(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setInvMass
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getInvMass() -> getInvMass
    void setPushVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setPushVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getPushVelocity() -> getPushVelocity
    void setTurnVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setTurnVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getTurnVelocity() -> getTurnVelocity
    void setLinearVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setLinearVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLinearVelocity() -> getLinearVelocity
    void setAngularVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAngularVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAngularVelocity() -> getAngularVelocity
    void setExternalForceImpulse(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setExternalForceImpulse
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getExternalForceImpulse() -> getExternalForceImpulse
    void setExternalTorqueImpulse(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setExternalTorqueImpulse
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getExternalTorqueImpulse() -> getExternalTorqueImpulse
    void setOriginalBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> setOriginalBody
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getOriginalBody() -> getOriginalBody
    void getVelocityInLocalPointNoDelta(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getVelocityInLocalPointNoDelta
    void getVelocityInLocalPointObsolete(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getVelocityInLocalPointObsolete
    void getAngularVelocity(com.badlogic.gdx.math.Vector3) -> getAngularVelocity
    void applyImpulse(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> applyImpulse
    void internalApplyPushImpulse(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> internalApplyPushImpulse
    com.badlogic.gdx.math.Vector3 internalGetDeltaLinearVelocity() -> internalGetDeltaLinearVelocity
    com.badlogic.gdx.math.Vector3 internalGetDeltaAngularVelocity() -> internalGetDeltaAngularVelocity
    com.badlogic.gdx.math.Vector3 internalGetAngularFactor() -> internalGetAngularFactor
    com.badlogic.gdx.math.Vector3 internalGetInvMass() -> internalGetInvMass
    void internalSetInvMass(com.badlogic.gdx.math.Vector3) -> internalSetInvMass
    com.badlogic.gdx.math.Vector3 internalGetPushVelocity() -> internalGetPushVelocity
    com.badlogic.gdx.math.Vector3 internalGetTurnVelocity() -> internalGetTurnVelocity
    void internalGetVelocityInLocalPointObsolete(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> internalGetVelocityInLocalPointObsolete
    void internalGetAngularVelocity(com.badlogic.gdx.math.Vector3) -> internalGetAngularVelocity
    void internalApplyImpulse(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> internalApplyImpulse
    void writebackVelocity() -> writebackVelocity
    void writebackVelocityAndTransform(float,float) -> writebackVelocityAndTransform
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint -> com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setRelpos1CrossNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setRelpos1CrossNormal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRelpos1CrossNormal() -> getRelpos1CrossNormal
    void setContactNormal1(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setContactNormal1
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getContactNormal1() -> getContactNormal1
    void setRelpos2CrossNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setRelpos2CrossNormal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRelpos2CrossNormal() -> getRelpos2CrossNormal
    void setContactNormal2(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setContactNormal2
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getContactNormal2() -> getContactNormal2
    void setAngularComponentA(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAngularComponentA
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAngularComponentA() -> getAngularComponentA
    void setAngularComponentB(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAngularComponentB
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAngularComponentB() -> getAngularComponentB
    void setAppliedPushImpulse(float) -> setAppliedPushImpulse
    float getAppliedPushImpulse() -> getAppliedPushImpulse
    void setAppliedImpulse(float) -> setAppliedImpulse
    float getAppliedImpulse() -> getAppliedImpulse
    void setFriction(float) -> setFriction
    float getFriction() -> getFriction
    void setJacDiagABInv(float) -> setJacDiagABInv
    float getJacDiagABInv() -> getJacDiagABInv
    void setRhs(float) -> setRhs
    float getRhs() -> getRhs
    void setCfm(float) -> setCfm
    float getCfm() -> getCfm
    void setLowerLimit(float) -> setLowerLimit
    float getLowerLimit() -> getLowerLimit
    void setUpperLimit(float) -> setUpperLimit
    float getUpperLimit() -> getUpperLimit
    void setRhsPenetration(float) -> setRhsPenetration
    float getRhsPenetration() -> getRhsPenetration
    void setOriginalContactPoint(long) -> setOriginalContactPoint
    long getOriginalContactPoint() -> getOriginalContactPoint
    void setUnusedPadding4(float) -> setUnusedPadding4
    float getUnusedPadding4() -> getUnusedPadding4
    void setNumRowsForNonContactConstraint(int) -> setNumRowsForNonContactConstraint
    int getNumRowsForNonContactConstraint() -> getNumRowsForNonContactConstraint
    void setOverrideNumSolverIterations(int) -> setOverrideNumSolverIterations
    int getOverrideNumSolverIterations() -> getOverrideNumSolverIterations
    void setFrictionIndex(int) -> setFrictionIndex
    int getFrictionIndex() -> getFrictionIndex
    void setSolverBodyIdA(int) -> setSolverBodyIdA
    int getSolverBodyIdA() -> getSolverBodyIdA
    void setSolverBodyIdB(int) -> setSolverBodyIdB
    int getSolverBodyIdB() -> getSolverBodyIdB
com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint$btSolverConstraintType -> com.badlogic.gdx.physics.bullet.dynamics.btSolverConstraint$btSolverConstraintType:
    int BT_SOLVER_CONTACT_1D -> BT_SOLVER_CONTACT_1D
    int BT_SOLVER_FRICTION_1D -> BT_SOLVER_FRICTION_1D
com.badlogic.gdx.physics.bullet.dynamics.btSolverMode -> com.badlogic.gdx.physics.bullet.dynamics.btSolverMode:
    int SOLVER_RANDMIZE_ORDER -> SOLVER_RANDMIZE_ORDER
    int SOLVER_FRICTION_SEPARATE -> SOLVER_FRICTION_SEPARATE
    int SOLVER_USE_WARMSTARTING -> SOLVER_USE_WARMSTARTING
    int SOLVER_USE_2_FRICTION_DIRECTIONS -> SOLVER_USE_2_FRICTION_DIRECTIONS
    int SOLVER_ENABLE_FRICTION_DIRECTION_CACHING -> SOLVER_ENABLE_FRICTION_DIRECTION_CACHING
    int SOLVER_DISABLE_VELOCITY_DEPENDENT_FRICTION_DIRECTION -> SOLVER_DISABLE_VELOCITY_DEPENDENT_FRICTION_DIRECTION
    int SOLVER_CACHE_FRIENDLY -> SOLVER_CACHE_FRIENDLY
    int SOLVER_SIMD -> SOLVER_SIMD
    int SOLVER_INTERLEAVE_CONTACT_AND_FRICTION_CONSTRAINTS -> SOLVER_INTERLEAVE_CONTACT_AND_FRICTION_CONSTRAINTS
    int SOLVER_ALLOW_ZERO_LENGTH_FRICTION_DIRECTIONS -> SOLVER_ALLOW_ZERO_LENGTH_FRICTION_DIRECTIONS
com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor -> com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btTranslationalLimitMotor) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setLowerLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setLowerLimit
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLowerLimit() -> getLowerLimit
    void setUpperLimit(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setUpperLimit
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getUpperLimit() -> getUpperLimit
    void setAccumulatedImpulse(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAccumulatedImpulse
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAccumulatedImpulse() -> getAccumulatedImpulse
    void setLimitSoftness(float) -> setLimitSoftness
    float getLimitSoftness() -> getLimitSoftness
    void setDamping(float) -> setDamping
    float getDamping() -> getDamping
    void setRestitution(float) -> setRestitution
    float getRestitution() -> getRestitution
    void setNormalCFM(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setNormalCFM
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormalCFM() -> getNormalCFM
    void setStopERP(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setStopERP
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getStopERP() -> getStopERP
    void setStopCFM(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setStopCFM
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getStopCFM() -> getStopCFM
    void setEnableMotor(boolean[]) -> setEnableMotor
    boolean[] getEnableMotor() -> getEnableMotor
    void setTargetVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setTargetVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getTargetVelocity() -> getTargetVelocity
    void setMaxMotorForce(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setMaxMotorForce
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getMaxMotorForce() -> getMaxMotorForce
    void setCurrentLimitError(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setCurrentLimitError
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getCurrentLimitError() -> getCurrentLimitError
    void setCurrentLinearDiff(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setCurrentLinearDiff
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getCurrentLinearDiff() -> getCurrentLinearDiff
    void setCurrentLimit(int[]) -> setCurrentLimit
    int[] getCurrentLimit() -> getCurrentLimit
    boolean isLimited(int) -> isLimited
    boolean needApplyForce(int) -> needApplyForce
    int testLimitValue(int,float) -> testLimitValue
    float solveLinearAxis(float,float,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,int,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> solveLinearAxis
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint -> com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getFixedBody() -> getFixedBody
    int getOverrideNumSolverIterations() -> getOverrideNumSolverIterations
    void setOverrideNumSolverIterations(int) -> setOverrideNumSolverIterations
    void buildJacobian() -> buildJacobian
    void setupSolverConstraint(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btAlignedObjectArrayT_btSolverConstraint_t,int,int,float) -> setupSolverConstraint
    void getInfo1(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1) -> getInfo1
    void getInfo2(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> getInfo2
    void internalSetAppliedImpulse(float) -> internalSetAppliedImpulse
    float internalGetAppliedImpulse() -> internalGetAppliedImpulse
    float getBreakingImpulseThreshold() -> getBreakingImpulseThreshold
    void setBreakingImpulseThreshold(float) -> setBreakingImpulseThreshold
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    void solveConstraintObsolete(com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,com.badlogic.gdx.physics.bullet.dynamics.btSolverBody,float) -> solveConstraintObsolete
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyA() -> getRigidBodyA
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyB() -> getRigidBodyB
    int getUserConstraintType() -> getUserConstraintType
    void setUserConstraintType(int) -> setUserConstraintType
    void setUserConstraintId(int) -> setUserConstraintId
    int getUserConstraintId() -> getUserConstraintId
    void setUserConstraintPtr(long) -> setUserConstraintPtr
    long getUserConstraintPtr() -> getUserConstraintPtr
    void setJointFeedback(com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback) -> setJointFeedback
    com.badlogic.gdx.physics.bullet.dynamics.btJointFeedback getJointFeedback() -> getJointFeedback
    int getUid() -> getUid
    boolean needsFeedback() -> needsFeedback
    void enableFeedback(boolean) -> enableFeedback
    float getAppliedImpulse() -> getAppliedImpulse
    int getConstraintType() -> getConstraintType
    void setDbgDrawSize(float) -> setDbgDrawSize
    float getDbgDrawSize() -> getDbgDrawSize
    void setParam(int,float,int) -> setParam
    void setParam(int,float) -> setParam
    float getParam(int,int) -> getParam
    float getParam(int) -> getParam
    int calculateSerializeBufferSize() -> calculateSerializeBufferSize
    java.lang.String serialize(long,com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_btSerializer) -> serialize
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1 -> com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo1) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setNumConstraintRows(int) -> setNumConstraintRows
    int getNumConstraintRows() -> getNumConstraintRows
    void setNub(int) -> setNub
    int getNub() -> getNub
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2 -> com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint$btConstraintInfo2) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setFps(float) -> setFps
    float getFps() -> getFps
    void setErp(float) -> setErp
    float getErp() -> getErp
    void setJ1linearAxis(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float) -> setJ1linearAxis
    com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getJ1linearAxis() -> getJ1linearAxis
    void setJ1angularAxis(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float) -> setJ1angularAxis
    com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getJ1angularAxis() -> getJ1angularAxis
    void setJ2linearAxis(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float) -> setJ2linearAxis
    com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getJ2linearAxis() -> getJ2linearAxis
    void setJ2angularAxis(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float) -> setJ2angularAxis
    com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getJ2angularAxis() -> getJ2angularAxis
    void setRowskip(int) -> setRowskip
    int getRowskip() -> getRowskip
    void setConstraintError(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float) -> setConstraintError
    com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getConstraintError() -> getConstraintError
    void setCfm(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float) -> setCfm
    com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getCfm() -> getCfm
    void setLowerLimit(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float) -> setLowerLimit
    com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getLowerLimit() -> getLowerLimit
    void setUpperLimit(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float) -> setUpperLimit
    com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_float getUpperLimit() -> getUpperLimit
    void setFindex(com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_int) -> setFindex
    com.badlogic.gdx.physics.bullet.dynamics.SWIGTYPE_p_int getFindex() -> getFindex
    void setNumIterations(int) -> setNumIterations
    int getNumIterations() -> getNumIterations
    void setDamping(float) -> setDamping
    float getDamping() -> getDamping
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData -> com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setRbA(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> setRbA
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData getRbA() -> getRbA
    void setRbB(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> setRbB
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData getRbB() -> getRbB
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setObjectType(int) -> setObjectType
    int getObjectType() -> getObjectType
    void setUserConstraintType(int) -> setUserConstraintType
    int getUserConstraintType() -> getUserConstraintType
    void setUserConstraintId(int) -> setUserConstraintId
    int getUserConstraintId() -> getUserConstraintId
    void setNeedsFeedback(int) -> setNeedsFeedback
    int getNeedsFeedback() -> getNeedsFeedback
    void setAppliedImpulse(float) -> setAppliedImpulse
    float getAppliedImpulse() -> getAppliedImpulse
    void setDbgDrawSize(float) -> setDbgDrawSize
    float getDbgDrawSize() -> getDbgDrawSize
    void setDisableCollisionsBetweenLinkedBodies(int) -> setDisableCollisionsBetweenLinkedBodies
    int getDisableCollisionsBetweenLinkedBodies() -> getDisableCollisionsBetweenLinkedBodies
    void setOverrideNumSolverIterations(int) -> setOverrideNumSolverIterations
    int getOverrideNumSolverIterations() -> getOverrideNumSolverIterations
    void setBreakingImpulseThreshold(float) -> setBreakingImpulseThreshold
    float getBreakingImpulseThreshold() -> getBreakingImpulseThreshold
    void setIsEnabled(int) -> setIsEnabled
    int getIsEnabled() -> getIsEnabled
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData -> com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintDoubleData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setRbA(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> setRbA
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData getRbA() -> getRbA
    void setRbB(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData) -> setRbB
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyDoubleData getRbB() -> getRbB
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setObjectType(int) -> setObjectType
    int getObjectType() -> getObjectType
    void setUserConstraintType(int) -> setUserConstraintType
    int getUserConstraintType() -> getUserConstraintType
    void setUserConstraintId(int) -> setUserConstraintId
    int getUserConstraintId() -> getUserConstraintId
    void setNeedsFeedback(int) -> setNeedsFeedback
    int getNeedsFeedback() -> getNeedsFeedback
    void setAppliedImpulse(double) -> setAppliedImpulse
    double getAppliedImpulse() -> getAppliedImpulse
    void setDbgDrawSize(double) -> setDbgDrawSize
    double getDbgDrawSize() -> getDbgDrawSize
    void setDisableCollisionsBetweenLinkedBodies(int) -> setDisableCollisionsBetweenLinkedBodies
    int getDisableCollisionsBetweenLinkedBodies() -> getDisableCollisionsBetweenLinkedBodies
    void setOverrideNumSolverIterations(int) -> setOverrideNumSolverIterations
    int getOverrideNumSolverIterations() -> getOverrideNumSolverIterations
    void setBreakingImpulseThreshold(double) -> setBreakingImpulseThreshold
    double getBreakingImpulseThreshold() -> getBreakingImpulseThreshold
    void setIsEnabled(int) -> setIsEnabled
    int getIsEnabled() -> getIsEnabled
    void setPadding(java.lang.String) -> setPadding
    java.lang.String getPadding() -> getPadding
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData -> com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintFloatData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setRbA(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> setRbA
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData getRbA() -> getRbA
    void setRbB(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> setRbB
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData getRbB() -> getRbB
    void setName(java.lang.String) -> setName
    java.lang.String getName() -> getName
    void setObjectType(int) -> setObjectType
    int getObjectType() -> getObjectType
    void setUserConstraintType(int) -> setUserConstraintType
    int getUserConstraintType() -> getUserConstraintType
    void setUserConstraintId(int) -> setUserConstraintId
    int getUserConstraintId() -> getUserConstraintId
    void setNeedsFeedback(int) -> setNeedsFeedback
    int getNeedsFeedback() -> getNeedsFeedback
    void setAppliedImpulse(float) -> setAppliedImpulse
    float getAppliedImpulse() -> getAppliedImpulse
    void setDbgDrawSize(float) -> setDbgDrawSize
    float getDbgDrawSize() -> getDbgDrawSize
    void setDisableCollisionsBetweenLinkedBodies(int) -> setDisableCollisionsBetweenLinkedBodies
    int getDisableCollisionsBetweenLinkedBodies() -> getDisableCollisionsBetweenLinkedBodies
    void setOverrideNumSolverIterations(int) -> setOverrideNumSolverIterations
    int getOverrideNumSolverIterations() -> getOverrideNumSolverIterations
    void setBreakingImpulseThreshold(float) -> setBreakingImpulseThreshold
    float getBreakingImpulseThreshold() -> getBreakingImpulseThreshold
    void setIsEnabled(int) -> setIsEnabled
    int getIsEnabled() -> getIsEnabled
com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintType -> com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraintType:
    int POINT2POINT_CONSTRAINT_TYPE -> POINT2POINT_CONSTRAINT_TYPE
    int HINGE_CONSTRAINT_TYPE -> HINGE_CONSTRAINT_TYPE
    int CONETWIST_CONSTRAINT_TYPE -> CONETWIST_CONSTRAINT_TYPE
    int D6_CONSTRAINT_TYPE -> D6_CONSTRAINT_TYPE
    int SLIDER_CONSTRAINT_TYPE -> SLIDER_CONSTRAINT_TYPE
    int CONTACT_CONSTRAINT_TYPE -> CONTACT_CONSTRAINT_TYPE
    int D6_SPRING_CONSTRAINT_TYPE -> D6_SPRING_CONSTRAINT_TYPE
    int GEAR_CONSTRAINT_TYPE -> GEAR_CONSTRAINT_TYPE
    int FIXED_CONSTRAINT_TYPE -> FIXED_CONSTRAINT_TYPE
    int MAX_CONSTRAINT_TYPE -> MAX_CONSTRAINT_TYPE
com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint -> com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btUniversalConstraint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.math.Vector3 getAnchor() -> getAnchor
    com.badlogic.gdx.math.Vector3 getAnchor2() -> getAnchor2
    com.badlogic.gdx.math.Vector3 getAxis1() -> getAxis1
    com.badlogic.gdx.math.Vector3 getAxis2() -> getAxis2
    float getAngle1() -> getAngle1
    float getAngle2() -> getAngle2
    void setUpperLimit(float,float) -> setUpperLimit
    void setLowerLimit(float,float) -> setLowerLimit
    void setAxis(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setAxis
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster -> com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    long castRay(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult) -> castRay
com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult -> com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btVehicleRaycaster$btVehicleRaycasterResult) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setHitPointInWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setHitPointInWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitPointInWorld() -> getHitPointInWorld
    void setHitNormalInWorld(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setHitNormalInWorld
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHitNormalInWorld() -> getHitNormalInWorld
    void setDistFraction(float) -> setDistFraction
    float getDistFraction() -> getDistFraction
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo -> com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setRaycastInfo(com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo) -> setRaycastInfo
    com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo getRaycastInfo() -> getRaycastInfo
    void setWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setWorldTransform
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getWorldTransform() -> getWorldTransform
    void setChassisConnectionPointCS(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setChassisConnectionPointCS
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getChassisConnectionPointCS() -> getChassisConnectionPointCS
    void setWheelDirectionCS(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setWheelDirectionCS
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWheelDirectionCS() -> getWheelDirectionCS
    void setWheelAxleCS(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setWheelAxleCS
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWheelAxleCS() -> getWheelAxleCS
    void setSuspensionRestLength1(float) -> setSuspensionRestLength1
    float getSuspensionRestLength1() -> getSuspensionRestLength1
    void setMaxSuspensionTravelCm(float) -> setMaxSuspensionTravelCm
    float getMaxSuspensionTravelCm() -> getMaxSuspensionTravelCm
    float getSuspensionRestLength() -> getSuspensionRestLength
    void setWheelsRadius(float) -> setWheelsRadius
    float getWheelsRadius() -> getWheelsRadius
    void setSuspensionStiffness(float) -> setSuspensionStiffness
    float getSuspensionStiffness() -> getSuspensionStiffness
    void setWheelsDampingCompression(float) -> setWheelsDampingCompression
    float getWheelsDampingCompression() -> getWheelsDampingCompression
    void setWheelsDampingRelaxation(float) -> setWheelsDampingRelaxation
    float getWheelsDampingRelaxation() -> getWheelsDampingRelaxation
    void setFrictionSlip(float) -> setFrictionSlip
    float getFrictionSlip() -> getFrictionSlip
    void setSteering(float) -> setSteering
    float getSteering() -> getSteering
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void setDeltaRotation(float) -> setDeltaRotation
    float getDeltaRotation() -> getDeltaRotation
    void setRollInfluence(float) -> setRollInfluence
    float getRollInfluence() -> getRollInfluence
    void setMaxSuspensionForce(float) -> setMaxSuspensionForce
    float getMaxSuspensionForce() -> getMaxSuspensionForce
    void setEngineForce(float) -> setEngineForce
    float getEngineForce() -> getEngineForce
    void setBrake(float) -> setBrake
    float getBrake() -> getBrake
    void setBIsFrontWheel(boolean) -> setBIsFrontWheel
    boolean getBIsFrontWheel() -> getBIsFrontWheel
    void setClientInfo(long) -> setClientInfo
    long getClientInfo() -> getClientInfo
    void updateWheel(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo) -> updateWheel
    void setClippedInvContactDotSuspension(float) -> setClippedInvContactDotSuspension
    float getClippedInvContactDotSuspension() -> getClippedInvContactDotSuspension
    void setSuspensionRelativeVelocity(float) -> setSuspensionRelativeVelocity
    float getSuspensionRelativeVelocity() -> getSuspensionRelativeVelocity
    void setWheelsSuspensionForce(float) -> setWheelsSuspensionForce
    float getWheelsSuspensionForce() -> getWheelsSuspensionForce
    void setSkidInfo(float) -> setSkidInfo
    float getSkidInfo() -> getSkidInfo
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo -> com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btWheelInfo$RaycastInfo) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setContactNormalWS(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setContactNormalWS
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getContactNormalWS() -> getContactNormalWS
    void setContactPointWS(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setContactPointWS
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getContactPointWS() -> getContactPointWS
    void setSuspensionLength(float) -> setSuspensionLength
    float getSuspensionLength() -> getSuspensionLength
    void setHardPointWS(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setHardPointWS
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getHardPointWS() -> getHardPointWS
    void setWheelDirectionWS(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setWheelDirectionWS
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWheelDirectionWS() -> getWheelDirectionWS
    void setWheelAxleWS(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setWheelAxleWS
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWheelAxleWS() -> getWheelAxleWS
    void setIsInContact(boolean) -> setIsInContact
    boolean getIsInContact() -> getIsInContact
    void setGroundObject(long) -> setGroundObject
    long getGroundObject() -> getGroundObject
com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo -> com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.dynamics.btWheelInfoConstructionInfo) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setChassisConnectionCS(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setChassisConnectionCS
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getChassisConnectionCS() -> getChassisConnectionCS
    void setWheelDirectionCS(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setWheelDirectionCS
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWheelDirectionCS() -> getWheelDirectionCS
    void setWheelAxleCS(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setWheelAxleCS
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWheelAxleCS() -> getWheelAxleCS
    void setSuspensionRestLength(float) -> setSuspensionRestLength
    float getSuspensionRestLength() -> getSuspensionRestLength
    void setMaxSuspensionTravelCm(float) -> setMaxSuspensionTravelCm
    float getMaxSuspensionTravelCm() -> getMaxSuspensionTravelCm
    void setWheelRadius(float) -> setWheelRadius
    float getWheelRadius() -> getWheelRadius
    void setSuspensionStiffness(float) -> setSuspensionStiffness
    float getSuspensionStiffness() -> getSuspensionStiffness
    void setWheelsDampingCompression(float) -> setWheelsDampingCompression
    float getWheelsDampingCompression() -> getWheelsDampingCompression
    void setWheelsDampingRelaxation(float) -> setWheelsDampingRelaxation
    float getWheelsDampingRelaxation() -> getWheelsDampingRelaxation
    void setFrictionSlip(float) -> setFrictionSlip
    float getFrictionSlip() -> getFrictionSlip
    void setMaxSuspensionForce(float) -> setMaxSuspensionForce
    float getMaxSuspensionForce() -> getMaxSuspensionForce
    void setBIsFrontWheel(boolean) -> setBIsFrontWheel
    boolean getBIsFrontWheel() -> getBIsFrontWheel
com.badlogic.gdx.physics.bullet.extras.Extras -> com.badlogic.gdx.physics.bullet.extras.Extras:
    com.badlogic.gdx.math.Vector3 staticVector3 -> staticVector3
    com.badlogic.gdx.utils.Pool poolVector3 -> poolVector3
    com.badlogic.gdx.math.Quaternion staticQuaternion -> staticQuaternion
    com.badlogic.gdx.utils.Pool poolQuaternion -> poolQuaternion
    com.badlogic.gdx.math.Matrix3 staticMatrix3 -> staticMatrix3
    com.badlogic.gdx.utils.Pool poolMatrix3 -> poolMatrix3
    com.badlogic.gdx.math.Matrix4 staticMatrix4 -> staticMatrix4
    com.badlogic.gdx.utils.Pool poolMatrix4 -> poolMatrix4
com.badlogic.gdx.physics.bullet.extras.Extras$1 -> com.badlogic.gdx.physics.bullet.extras.Extras$1:
    com.badlogic.gdx.math.Vector3 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.extras.Extras$2 -> com.badlogic.gdx.physics.bullet.extras.Extras$2:
    com.badlogic.gdx.math.Quaternion newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.extras.Extras$3 -> com.badlogic.gdx.physics.bullet.extras.Extras$3:
    com.badlogic.gdx.math.Matrix3 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.extras.Extras$4 -> com.badlogic.gdx.physics.bullet.extras.Extras$4:
    com.badlogic.gdx.math.Matrix4 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.extras.ExtrasJNI -> com.badlogic.gdx.physics.bullet.extras.ExtrasJNI:
    long new_btStringArray__SWIG_0() -> new_btStringArray__SWIG_0
    void delete_btStringArray(long) -> delete_btStringArray
    long new_btStringArray__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btStringArray) -> new_btStringArray__SWIG_1
    int btStringArray_size(long,com.badlogic.gdx.physics.bullet.extras.btStringArray) -> btStringArray_size
    java.lang.String btStringArray_at__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,int) -> btStringArray_at__SWIG_0
    void btStringArray_clear(long,com.badlogic.gdx.physics.bullet.extras.btStringArray) -> btStringArray_clear
    void btStringArray_pop_back(long,com.badlogic.gdx.physics.bullet.extras.btStringArray) -> btStringArray_pop_back
    void btStringArray_resizeNoInitialize(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,int) -> btStringArray_resizeNoInitialize
    void btStringArray_resize__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,int,java.lang.String) -> btStringArray_resize__SWIG_0
    void btStringArray_resize__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,int) -> btStringArray_resize__SWIG_1
    java.lang.String btStringArray_expandNonInitializing(long,com.badlogic.gdx.physics.bullet.extras.btStringArray) -> btStringArray_expandNonInitializing
    java.lang.String btStringArray_expand__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,java.lang.String) -> btStringArray_expand__SWIG_0
    java.lang.String btStringArray_expand__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btStringArray) -> btStringArray_expand__SWIG_1
    void btStringArray_push_back(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,java.lang.String) -> btStringArray_push_back
    int btStringArray_capacity(long,com.badlogic.gdx.physics.bullet.extras.btStringArray) -> btStringArray_capacity
    void btStringArray_reserve(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,int) -> btStringArray_reserve
    long new_btStringArray_less() -> new_btStringArray_less
    void delete_btStringArray_less(long) -> delete_btStringArray_less
    void btStringArray_swap(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,int,int) -> btStringArray_swap
    int btStringArray_findBinarySearch(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,java.lang.String) -> btStringArray_findBinarySearch
    int btStringArray_findLinearSearch(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,java.lang.String) -> btStringArray_findLinearSearch
    void btStringArray_remove(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,java.lang.String) -> btStringArray_remove
    void btStringArray_initializeFromBuffer(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,long,int,int) -> btStringArray_initializeFromBuffer
    void btStringArray_copyFromArray(long,com.badlogic.gdx.physics.bullet.extras.btStringArray,long,com.badlogic.gdx.physics.bullet.extras.btStringArray) -> btStringArray_copyFromArray
    long new_btWorldImporter(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld) -> new_btWorldImporter
    void delete_btWorldImporter(long) -> delete_btWorldImporter
    void btWorldImporter_deleteAllData(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter) -> btWorldImporter_deleteAllData
    void btWorldImporter_setVerboseMode(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,int) -> btWorldImporter_setVerboseMode
    int btWorldImporter_getVerboseMode(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter) -> btWorldImporter_getVerboseMode
    int btWorldImporter_getNumCollisionShapes(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter) -> btWorldImporter_getNumCollisionShapes
    long btWorldImporter_getCollisionShapeByIndex(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,int) -> btWorldImporter_getCollisionShapeByIndex
    int btWorldImporter_getNumRigidBodies(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter) -> btWorldImporter_getNumRigidBodies
    long btWorldImporter_getRigidBodyByIndex(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,int) -> btWorldImporter_getRigidBodyByIndex
    int btWorldImporter_getNumConstraints(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter) -> btWorldImporter_getNumConstraints
    long btWorldImporter_getConstraintByIndex(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,int) -> btWorldImporter_getConstraintByIndex
    int btWorldImporter_getNumBvhs(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter) -> btWorldImporter_getNumBvhs
    long btWorldImporter_getBvhByIndex(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,int) -> btWorldImporter_getBvhByIndex
    int btWorldImporter_getNumTriangleInfoMaps(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter) -> btWorldImporter_getNumTriangleInfoMaps
    long btWorldImporter_getTriangleInfoMapByIndex(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,int) -> btWorldImporter_getTriangleInfoMapByIndex
    long btWorldImporter_getCollisionShapeByName(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,java.lang.String) -> btWorldImporter_getCollisionShapeByName
    long btWorldImporter_getRigidBodyByName(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,java.lang.String) -> btWorldImporter_getRigidBodyByName
    long btWorldImporter_getConstraintByName(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,java.lang.String) -> btWorldImporter_getConstraintByName
    java.lang.String btWorldImporter_getNameForPointer__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long) -> btWorldImporter_getNameForPointer__SWIG_0
    void btWorldImporter_setDynamicsWorldInfo(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo) -> btWorldImporter_setDynamicsWorldInfo
    long btWorldImporter_createRigidBody(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,boolean,float,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,java.lang.String) -> btWorldImporter_createRigidBody
    long btWorldImporter_createCollisionObject(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,java.lang.String) -> btWorldImporter_createCollisionObject
    long btWorldImporter_createPlaneShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,com.badlogic.gdx.math.Vector3,float) -> btWorldImporter_createPlaneShape
    long btWorldImporter_createBoxShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,com.badlogic.gdx.math.Vector3) -> btWorldImporter_createBoxShape
    long btWorldImporter_createSphereShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,float) -> btWorldImporter_createSphereShape
    long btWorldImporter_createCapsuleShapeX(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,float,float) -> btWorldImporter_createCapsuleShapeX
    long btWorldImporter_createCapsuleShapeY(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,float,float) -> btWorldImporter_createCapsuleShapeY
    long btWorldImporter_createCapsuleShapeZ(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,float,float) -> btWorldImporter_createCapsuleShapeZ
    long btWorldImporter_createCylinderShapeX(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,float,float) -> btWorldImporter_createCylinderShapeX
    long btWorldImporter_createCylinderShapeY(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,float,float) -> btWorldImporter_createCylinderShapeY
    long btWorldImporter_createCylinderShapeZ(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,float,float) -> btWorldImporter_createCylinderShapeZ
    long btWorldImporter_createTriangleMeshContainer(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter) -> btWorldImporter_createTriangleMeshContainer
    long btWorldImporter_createBvhTriangleMeshShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,long,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh) -> btWorldImporter_createBvhTriangleMeshShape
    long btWorldImporter_createConvexTriangleMeshShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface) -> btWorldImporter_createConvexTriangleMeshShape
    long btWorldImporter_createGimpactShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface) -> btWorldImporter_createGimpactShape
    long btWorldImporter_createStridingMeshInterfaceData(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData) -> btWorldImporter_createStridingMeshInterfaceData
    long btWorldImporter_createConvexHullShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter) -> btWorldImporter_createConvexHullShape
    long btWorldImporter_createCompoundShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter) -> btWorldImporter_createCompoundShape
    long btWorldImporter_createScaledTrangleMeshShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,com.badlogic.gdx.math.Vector3) -> btWorldImporter_createScaledTrangleMeshShape
    long btWorldImporter_createMultiSphereShape(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,int) -> btWorldImporter_createMultiSphereShape
    long btWorldImporter_createMeshInterface(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData) -> btWorldImporter_createMeshInterface
    long btWorldImporter_createOptimizedBvh(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter) -> btWorldImporter_createOptimizedBvh
    long btWorldImporter_createTriangleInfoMap(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter) -> btWorldImporter_createTriangleInfoMap
    long btWorldImporter_createPoint2PointConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btWorldImporter_createPoint2PointConstraint__SWIG_0
    long btWorldImporter_createPoint2PointConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> btWorldImporter_createPoint2PointConstraint__SWIG_1
    long btWorldImporter_createHingeConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> btWorldImporter_createHingeConstraint__SWIG_0
    long btWorldImporter_createHingeConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> btWorldImporter_createHingeConstraint__SWIG_1
    long btWorldImporter_createHingeConstraint__SWIG_2(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean) -> btWorldImporter_createHingeConstraint__SWIG_2
    long btWorldImporter_createHingeConstraint__SWIG_3(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4) -> btWorldImporter_createHingeConstraint__SWIG_3
    long btWorldImporter_createConeTwistConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> btWorldImporter_createConeTwistConstraint__SWIG_0
    long btWorldImporter_createConeTwistConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4) -> btWorldImporter_createConeTwistConstraint__SWIG_1
    long btWorldImporter_createGeneric6DofConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> btWorldImporter_createGeneric6DofConstraint__SWIG_0
    long btWorldImporter_createGeneric6DofConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean) -> btWorldImporter_createGeneric6DofConstraint__SWIG_1
    long btWorldImporter_createGeneric6DofSpringConstraint(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> btWorldImporter_createGeneric6DofSpringConstraint
    long btWorldImporter_createSliderConstraint__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> btWorldImporter_createSliderConstraint__SWIG_0
    long btWorldImporter_createSliderConstraint__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btWorldImporter,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean) -> btWorldImporter_createSliderConstraint__SWIG_1
    long new_btBulletWorldImporter__SWIG_0(long,com.badlogic.gdx.physics.bullet.dynamics.btDynamicsWorld) -> new_btBulletWorldImporter__SWIG_0
    long new_btBulletWorldImporter__SWIG_1() -> new_btBulletWorldImporter__SWIG_1
    void delete_btBulletWorldImporter(long) -> delete_btBulletWorldImporter
    boolean btBulletWorldImporter_loadFile(long,com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,java.lang.String) -> btBulletWorldImporter_loadFile
    boolean btBulletWorldImporter_loadFileFromMemory__SWIG_0(long,com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long) -> btBulletWorldImporter_loadFileFromMemory__SWIG_0
    boolean btBulletWorldImporter_convertAllObjects(long,com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long) -> btBulletWorldImporter_convertAllObjects
    boolean btBulletWorldImporter_convertAllObjectsSwigExplicitbtBulletWorldImporter(long,com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long) -> btBulletWorldImporter_convertAllObjectsSwigExplicitbtBulletWorldImporter
    boolean btBulletWorldImporter_loadFileFromMemory__SWIG_1(long,com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,java.nio.ByteBuffer,int) -> btBulletWorldImporter_loadFileFromMemory__SWIG_1
    void btBulletWorldImporter_director_connect(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,boolean,boolean) -> btBulletWorldImporter_director_connect
    void btBulletWorldImporter_change_ownership(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,boolean) -> btBulletWorldImporter_change_ownership
    long btBulletWorldImporter_SWIGUpcast(long) -> btBulletWorldImporter_SWIGUpcast
    void SwigDirector_btBulletWorldImporter_deleteAllData(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter) -> SwigDirector_btBulletWorldImporter_deleteAllData
    void SwigDirector_btBulletWorldImporter_setDynamicsWorldInfo(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,com.badlogic.gdx.math.Vector3,long) -> SwigDirector_btBulletWorldImporter_setDynamicsWorldInfo
    long SwigDirector_btBulletWorldImporter_createRigidBody(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,boolean,float,com.badlogic.gdx.math.Matrix4,long,java.lang.String) -> SwigDirector_btBulletWorldImporter_createRigidBody
    long SwigDirector_btBulletWorldImporter_createCollisionObject(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,com.badlogic.gdx.math.Matrix4,long,java.lang.String) -> SwigDirector_btBulletWorldImporter_createCollisionObject
    long SwigDirector_btBulletWorldImporter_createPlaneShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,com.badlogic.gdx.math.Vector3,float) -> SwigDirector_btBulletWorldImporter_createPlaneShape
    long SwigDirector_btBulletWorldImporter_createBoxShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,com.badlogic.gdx.math.Vector3) -> SwigDirector_btBulletWorldImporter_createBoxShape
    long SwigDirector_btBulletWorldImporter_createSphereShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,float) -> SwigDirector_btBulletWorldImporter_createSphereShape
    long SwigDirector_btBulletWorldImporter_createCapsuleShapeX(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,float,float) -> SwigDirector_btBulletWorldImporter_createCapsuleShapeX
    long SwigDirector_btBulletWorldImporter_createCapsuleShapeY(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,float,float) -> SwigDirector_btBulletWorldImporter_createCapsuleShapeY
    long SwigDirector_btBulletWorldImporter_createCapsuleShapeZ(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,float,float) -> SwigDirector_btBulletWorldImporter_createCapsuleShapeZ
    long SwigDirector_btBulletWorldImporter_createCylinderShapeX(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,float,float) -> SwigDirector_btBulletWorldImporter_createCylinderShapeX
    long SwigDirector_btBulletWorldImporter_createCylinderShapeY(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,float,float) -> SwigDirector_btBulletWorldImporter_createCylinderShapeY
    long SwigDirector_btBulletWorldImporter_createCylinderShapeZ(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,float,float) -> SwigDirector_btBulletWorldImporter_createCylinderShapeZ
    long SwigDirector_btBulletWorldImporter_createTriangleMeshContainer(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter) -> SwigDirector_btBulletWorldImporter_createTriangleMeshContainer
    long SwigDirector_btBulletWorldImporter_createBvhTriangleMeshShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long) -> SwigDirector_btBulletWorldImporter_createBvhTriangleMeshShape
    long SwigDirector_btBulletWorldImporter_createConvexTriangleMeshShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long) -> SwigDirector_btBulletWorldImporter_createConvexTriangleMeshShape
    long SwigDirector_btBulletWorldImporter_createGimpactShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long) -> SwigDirector_btBulletWorldImporter_createGimpactShape
    long SwigDirector_btBulletWorldImporter_createStridingMeshInterfaceData(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long) -> SwigDirector_btBulletWorldImporter_createStridingMeshInterfaceData
    long SwigDirector_btBulletWorldImporter_createConvexHullShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter) -> SwigDirector_btBulletWorldImporter_createConvexHullShape
    long SwigDirector_btBulletWorldImporter_createCompoundShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter) -> SwigDirector_btBulletWorldImporter_createCompoundShape
    long SwigDirector_btBulletWorldImporter_createScaledTrangleMeshShape(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,com.badlogic.gdx.math.Vector3) -> SwigDirector_btBulletWorldImporter_createScaledTrangleMeshShape
    long SwigDirector_btBulletWorldImporter_createMeshInterface(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long) -> SwigDirector_btBulletWorldImporter_createMeshInterface
    long SwigDirector_btBulletWorldImporter_createOptimizedBvh(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter) -> SwigDirector_btBulletWorldImporter_createOptimizedBvh
    long SwigDirector_btBulletWorldImporter_createTriangleInfoMap(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter) -> SwigDirector_btBulletWorldImporter_createTriangleInfoMap
    long SwigDirector_btBulletWorldImporter_createPoint2PointConstraint__SWIG_0(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> SwigDirector_btBulletWorldImporter_createPoint2PointConstraint__SWIG_0
    long SwigDirector_btBulletWorldImporter_createPoint2PointConstraint__SWIG_1(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,com.badlogic.gdx.math.Vector3) -> SwigDirector_btBulletWorldImporter_createPoint2PointConstraint__SWIG_1
    long SwigDirector_btBulletWorldImporter_createHingeConstraint__SWIG_0(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> SwigDirector_btBulletWorldImporter_createHingeConstraint__SWIG_0
    long SwigDirector_btBulletWorldImporter_createHingeConstraint__SWIG_1(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> SwigDirector_btBulletWorldImporter_createHingeConstraint__SWIG_1
    long SwigDirector_btBulletWorldImporter_createHingeConstraint__SWIG_2(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,com.badlogic.gdx.math.Matrix4,boolean) -> SwigDirector_btBulletWorldImporter_createHingeConstraint__SWIG_2
    long SwigDirector_btBulletWorldImporter_createHingeConstraint__SWIG_3(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,com.badlogic.gdx.math.Matrix4) -> SwigDirector_btBulletWorldImporter_createHingeConstraint__SWIG_3
    long SwigDirector_btBulletWorldImporter_createConeTwistConstraint__SWIG_0(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> SwigDirector_btBulletWorldImporter_createConeTwistConstraint__SWIG_0
    long SwigDirector_btBulletWorldImporter_createConeTwistConstraint__SWIG_1(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,com.badlogic.gdx.math.Matrix4) -> SwigDirector_btBulletWorldImporter_createConeTwistConstraint__SWIG_1
    long SwigDirector_btBulletWorldImporter_createGeneric6DofConstraint__SWIG_0(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> SwigDirector_btBulletWorldImporter_createGeneric6DofConstraint__SWIG_0
    long SwigDirector_btBulletWorldImporter_createGeneric6DofConstraint__SWIG_1(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,com.badlogic.gdx.math.Matrix4,boolean) -> SwigDirector_btBulletWorldImporter_createGeneric6DofConstraint__SWIG_1
    long SwigDirector_btBulletWorldImporter_createGeneric6DofSpringConstraint(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> SwigDirector_btBulletWorldImporter_createGeneric6DofSpringConstraint
    long SwigDirector_btBulletWorldImporter_createSliderConstraint__SWIG_0(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,long,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> SwigDirector_btBulletWorldImporter_createSliderConstraint__SWIG_0
    long SwigDirector_btBulletWorldImporter_createSliderConstraint__SWIG_1(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long,com.badlogic.gdx.math.Matrix4,boolean) -> SwigDirector_btBulletWorldImporter_createSliderConstraint__SWIG_1
    boolean SwigDirector_btBulletWorldImporter_convertAllObjects(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter,long) -> SwigDirector_btBulletWorldImporter_convertAllObjects
    void swig_module_init() -> swig_module_init
com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_bParse__btBulletFile -> com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_bParse__btBulletFile:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_bParse__btBulletFile) -> getCPtr
com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_btGImpactMeshShape -> com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_btGImpactMeshShape:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_btGImpactMeshShape) -> getCPtr
com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter -> com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.extras.btBulletWorldImporter) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    boolean loadFile(com.badlogic.gdx.files.FileHandle) -> loadFile
    boolean loadFile(java.lang.String) -> loadFile
    boolean loadFileFromMemory(com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_bParse__btBulletFile) -> loadFileFromMemory
    boolean convertAllObjects(com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_bParse__btBulletFile) -> convertAllObjects
    boolean loadFileFromMemory(java.nio.ByteBuffer,int) -> loadFileFromMemory
com.badlogic.gdx.physics.bullet.extras.btStringArray -> com.badlogic.gdx.physics.bullet.extras.btStringArray:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.extras.btStringArray) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int size() -> size
    java.lang.String at(int) -> at
    void clear() -> clear
    void pop_back() -> pop_back
    void resizeNoInitialize(int) -> resizeNoInitialize
    void resize(int,java.lang.String) -> resize
    void resize(int) -> resize
    java.lang.String expandNonInitializing() -> expandNonInitializing
    java.lang.String expand(java.lang.String) -> expand
    java.lang.String expand() -> expand
    void push_back(java.lang.String) -> push_back
    int capacity() -> capacity
    void reserve(int) -> reserve
    void swap(int,int) -> swap
    int findBinarySearch(java.lang.String) -> findBinarySearch
    int findLinearSearch(java.lang.String) -> findLinearSearch
    void remove(java.lang.String) -> remove
    void initializeFromBuffer(long,int,int) -> initializeFromBuffer
    void copyFromArray(com.badlogic.gdx.physics.bullet.extras.btStringArray) -> copyFromArray
com.badlogic.gdx.physics.bullet.extras.btStringArray$less -> com.badlogic.gdx.physics.bullet.extras.btStringArray$less:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.extras.btStringArray$less) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.extras.btWorldImporter -> com.badlogic.gdx.physics.bullet.extras.btWorldImporter:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.extras.btWorldImporter) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void deleteAllData() -> deleteAllData
    void setVerboseMode(int) -> setVerboseMode
    int getVerboseMode() -> getVerboseMode
    int getNumCollisionShapes() -> getNumCollisionShapes
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape getCollisionShapeByIndex(int) -> getCollisionShapeByIndex
    int getNumRigidBodies() -> getNumRigidBodies
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getRigidBodyByIndex(int) -> getRigidBodyByIndex
    int getNumConstraints() -> getNumConstraints
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint getConstraintByIndex(int) -> getConstraintByIndex
    int getNumBvhs() -> getNumBvhs
    com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh getBvhByIndex(int) -> getBvhByIndex
    int getNumTriangleInfoMaps() -> getNumTriangleInfoMaps
    com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap getTriangleInfoMapByIndex(int) -> getTriangleInfoMapByIndex
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape getCollisionShapeByName(java.lang.String) -> getCollisionShapeByName
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBodyByName(java.lang.String) -> getRigidBodyByName
    com.badlogic.gdx.physics.bullet.dynamics.btTypedConstraint getConstraintByName(java.lang.String) -> getConstraintByName
    java.lang.String getNameForPointer(long) -> getNameForPointer
    void setDynamicsWorldInfo(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.dynamics.btContactSolverInfo) -> setDynamicsWorldInfo
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody createRigidBody(boolean,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,java.lang.String) -> createRigidBody
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject createCollisionObject(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,java.lang.String) -> createCollisionObject
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape createPlaneShape(com.badlogic.gdx.math.Vector3,float) -> createPlaneShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape createBoxShape(com.badlogic.gdx.math.Vector3) -> createBoxShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape createSphereShape(float) -> createSphereShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape createCapsuleShapeX(float,float) -> createCapsuleShapeX
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape createCapsuleShapeY(float,float) -> createCapsuleShapeY
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape createCapsuleShapeZ(float,float) -> createCapsuleShapeZ
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape createCylinderShapeX(float,float) -> createCylinderShapeX
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape createCylinderShapeY(float,float) -> createCylinderShapeY
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape createCylinderShapeZ(float,float) -> createCylinderShapeZ
    com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray createTriangleMeshContainer() -> createTriangleMeshContainer
    com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape createBvhTriangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface,com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh) -> createBvhTriangleMeshShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape createConvexTriangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface) -> createConvexTriangleMeshShape
    com.badlogic.gdx.physics.bullet.extras.SWIGTYPE_p_btGImpactMeshShape createGimpactShape(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterface) -> createGimpactShape
    com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData createStridingMeshInterfaceData(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData) -> createStridingMeshInterfaceData
    com.badlogic.gdx.physics.bullet.collision.btConvexHullShape createConvexHullShape() -> createConvexHullShape
    com.badlogic.gdx.physics.bullet.collision.btCompoundShape createCompoundShape() -> createCompoundShape
    com.badlogic.gdx.physics.bullet.collision.btScaledBvhTriangleMeshShape createScaledTrangleMeshShape(com.badlogic.gdx.physics.bullet.collision.btBvhTriangleMeshShape,com.badlogic.gdx.math.Vector3) -> createScaledTrangleMeshShape
    com.badlogic.gdx.physics.bullet.collision.btMultiSphereShape createMultiSphereShape(com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer,int) -> createMultiSphereShape
    com.badlogic.gdx.physics.bullet.collision.btTriangleIndexVertexArray createMeshInterface(com.badlogic.gdx.physics.bullet.collision.btStridingMeshInterfaceData) -> createMeshInterface
    com.badlogic.gdx.physics.bullet.collision.btOptimizedBvh createOptimizedBvh() -> createOptimizedBvh
    com.badlogic.gdx.physics.bullet.collision.btTriangleInfoMap createTriangleInfoMap() -> createTriangleInfoMap
    com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint createPoint2PointConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> createPoint2PointConstraint
    com.badlogic.gdx.physics.bullet.dynamics.btPoint2PointConstraint createPoint2PointConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> createPoint2PointConstraint
    com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint createHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> createHingeConstraint
    com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint createHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> createHingeConstraint
    com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint createHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean) -> createHingeConstraint
    com.badlogic.gdx.physics.bullet.dynamics.btHingeConstraint createHingeConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4) -> createHingeConstraint
    com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint createConeTwistConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> createConeTwistConstraint
    com.badlogic.gdx.physics.bullet.dynamics.btConeTwistConstraint createConeTwistConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4) -> createConeTwistConstraint
    com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint createGeneric6DofConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> createGeneric6DofConstraint
    com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofConstraint createGeneric6DofConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean) -> createGeneric6DofConstraint
    com.badlogic.gdx.physics.bullet.dynamics.btGeneric6DofSpringConstraint createGeneric6DofSpringConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> createGeneric6DofSpringConstraint
    com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint createSliderConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,boolean) -> createSliderConstraint
    com.badlogic.gdx.physics.bullet.dynamics.btSliderConstraint createSliderConstraint(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Matrix4,boolean) -> createSliderConstraint
com.badlogic.gdx.physics.bullet.linearmath.ConvexH -> com.badlogic.gdx.physics.bullet.linearmath.ConvexH:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.ConvexH) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setVertices(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> setVertices
    com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getVertices() -> getVertices
    void setEdges(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t) -> setEdges
    com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t getEdges() -> getEdges
    void setFacets(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t) -> setFacets
    com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t getFacets() -> getFacets
com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge -> com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setEa(short) -> setEa
    short getEa() -> getEa
    void setV(short) -> setV
    short getV() -> getV
    void setP(short) -> setP
    short getP() -> getP
com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3 -> com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setAngle(float) -> setAngle
    float getAngle() -> getAngle
    void setOrgIndex(int) -> setOrgIndex
    int getOrgIndex() -> getOrgIndex
com.badlogic.gdx.physics.bullet.linearmath.HullDesc -> com.badlogic.gdx.physics.bullet.linearmath.HullDesc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.HullDesc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    boolean HasHullFlag(int) -> HasHullFlag
    void SetHullFlag(int) -> SetHullFlag
    void ClearHullFlag(int) -> ClearHullFlag
    void setMFlags(long) -> setMFlags
    long getMFlags() -> getMFlags
    void setMVcount(long) -> setMVcount
    long getMVcount() -> getMVcount
    void setMVertices(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setMVertices
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getMVertices() -> getMVertices
    void setMVertexStride(long) -> setMVertexStride
    long getMVertexStride() -> getMVertexStride
    void setMNormalEpsilon(float) -> setMNormalEpsilon
    float getMNormalEpsilon() -> getMNormalEpsilon
    void setMMaxVertices(long) -> setMMaxVertices
    long getMMaxVertices() -> getMMaxVertices
    void setMMaxFaces(long) -> setMMaxFaces
    long getMMaxFaces() -> getMMaxFaces
com.badlogic.gdx.physics.bullet.linearmath.HullError -> com.badlogic.gdx.physics.bullet.linearmath.HullError:
    int QE_OK -> QE_OK
    int QE_FAIL -> QE_FAIL
com.badlogic.gdx.physics.bullet.linearmath.HullFlag -> com.badlogic.gdx.physics.bullet.linearmath.HullFlag:
    int QF_TRIANGLES -> QF_TRIANGLES
    int QF_REVERSE_ORDER -> QF_REVERSE_ORDER
    int QF_DEFAULT -> QF_DEFAULT
com.badlogic.gdx.physics.bullet.linearmath.HullLibrary -> com.badlogic.gdx.physics.bullet.linearmath.HullLibrary:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.HullLibrary) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setVertexIndexMapping(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t) -> setVertexIndexMapping
    com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t getVertexIndexMapping() -> getVertexIndexMapping
    int CreateConvexHull(com.badlogic.gdx.physics.bullet.linearmath.HullDesc,com.badlogic.gdx.physics.bullet.linearmath.HullResult) -> CreateConvexHull
    int ReleaseResult(com.badlogic.gdx.physics.bullet.linearmath.HullResult) -> ReleaseResult
com.badlogic.gdx.physics.bullet.linearmath.HullResult -> com.badlogic.gdx.physics.bullet.linearmath.HullResult:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.HullResult) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setMPolygons(boolean) -> setMPolygons
    boolean getMPolygons() -> getMPolygons
    void setMNumOutputVertices(long) -> setMNumOutputVertices
    long getMNumOutputVertices() -> getMNumOutputVertices
    void setOutputVertices(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> setOutputVertices
    com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getOutputVertices() -> getOutputVertices
    void setMNumFaces(long) -> setMNumFaces
    long getMNumFaces() -> getMNumFaces
    void setMNumIndices(long) -> setMNumIndices
    long getMNumIndices() -> getMNumIndices
    void setIndices(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t) -> setIndices
    com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t getIndices() -> getIndices
com.badlogic.gdx.physics.bullet.linearmath.LinearMath -> com.badlogic.gdx.physics.bullet.linearmath.LinearMath:
    com.badlogic.gdx.math.Vector3 staticVector3 -> staticVector3
    com.badlogic.gdx.utils.Pool poolVector3 -> poolVector3
    com.badlogic.gdx.math.Quaternion staticQuaternion -> staticQuaternion
    com.badlogic.gdx.utils.Pool poolQuaternion -> poolQuaternion
    com.badlogic.gdx.math.Matrix3 staticMatrix3 -> staticMatrix3
    com.badlogic.gdx.utils.Pool poolMatrix3 -> poolMatrix3
    com.badlogic.gdx.math.Matrix4 staticMatrix4 -> staticMatrix4
    com.badlogic.gdx.utils.Pool poolMatrix4 -> poolMatrix4
    boolean $assertionsDisabled -> $assertionsDisabled
    int btGetVersion() -> btGetVersion
    void setBtInfinityMask(int) -> setBtInfinityMask
    int getBtInfinityMask() -> getBtInfinityMask
    float btSqrt(float) -> btSqrt
    float btFabs(float) -> btFabs
    float btCos(float) -> btCos
    float btSin(float) -> btSin
    float btTan(float) -> btTan
    float btAcos(float) -> btAcos
    float btAsin(float) -> btAsin
    float btAtan(float) -> btAtan
    float btAtan2(float,float) -> btAtan2
    float btExp(float) -> btExp
    float btLog(float) -> btLog
    float btPow(float,float) -> btPow
    float btFmod(float,float) -> btFmod
    float btAtan2Fast(float,float) -> btAtan2Fast
    boolean btFuzzyZero(float) -> btFuzzyZero
    boolean btEqual(float,float) -> btEqual
    boolean btGreaterEqual(float,float) -> btGreaterEqual
    int btIsNegative(float) -> btIsNegative
    float btRadians(float) -> btRadians
    float btDegrees(float) -> btDegrees
    float btFsel(float,float,float) -> btFsel
    boolean btMachineIsLittleEndian() -> btMachineIsLittleEndian
    long btSelect(long,long,long) -> btSelect
    int btSelect(long,int,int) -> btSelect
    float btSelect(long,float,float) -> btSelect
    long btSwapEndian(long) -> btSwapEndian
    int btSwapEndian(int) -> btSwapEndian
    int btSwapEndian(short) -> btSwapEndian
    long btSwapEndianFloat(float) -> btSwapEndianFloat
    float btUnswapEndianFloat(long) -> btUnswapEndianFloat
    void btSwapEndianDouble(double,java.nio.ByteBuffer) -> btSwapEndianDouble
    double btUnswapEndianDouble(java.nio.ByteBuffer) -> btUnswapEndianDouble
    float btLargeDot(java.nio.FloatBuffer,java.nio.FloatBuffer,int) -> btLargeDot
    float btNormalizeAngle(float) -> btNormalizeAngle
    float btDot(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btDot
    float btDistance2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btDistance2
    float btDistance(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btDistance
    float btAngle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btAngle
    com.badlogic.gdx.math.Vector3 btCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btCross
    float btTriple(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btTriple
    com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> lerp
    void btSwapScalarEndian(float,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float) -> btSwapScalarEndian
    void btSwapVector3Endian(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btSwapVector3Endian
    void btUnSwapVector3Endian(com.badlogic.gdx.math.Vector3) -> btUnSwapVector3Endian
    float dot(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion) -> dot
    float length(com.badlogic.gdx.math.Quaternion) -> length
    float btAngle(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion) -> btAngle
    com.badlogic.gdx.math.Quaternion inverse(com.badlogic.gdx.math.Quaternion) -> inverse
    com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion,float) -> slerp
    com.badlogic.gdx.math.Vector3 quatRotate(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3) -> quatRotate
    com.badlogic.gdx.math.Quaternion shortestArcQuat(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> shortestArcQuat
    com.badlogic.gdx.math.Quaternion shortestArcQuatNormalize2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> shortestArcQuatNormalize2
    void AabbExpand(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> AabbExpand
    boolean TestPointAgainstAabb2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> TestPointAgainstAabb2
    boolean TestAabbAgainstAabb2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> TestAabbAgainstAabb2
    boolean TestTriangleAgainstAabb2(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> TestTriangleAgainstAabb2
    int btOutcode(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btOutcode
    boolean btRayAabb2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long[],com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float,float,float) -> btRayAabb2
    boolean btRayAabb(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float,com.badlogic.gdx.math.Vector3) -> btRayAabb
    void btTransformAabb(com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btTransformAabb
    void btTransformAabb(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btTransformAabb
    long testQuantizedAabbAgainstQuantizedAabb(java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer) -> testQuantizedAabbAgainstQuantizedAabb
    void GEN_srand(long) -> GEN_srand
    long GEN_rand() -> GEN_rand
    com.badlogic.gdx.math.Vector3 btAabbSupport(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btAabbSupport
    void GrahamScanConvexHull2D(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t,com.badlogic.gdx.math.Vector3) -> GrahamScanConvexHull2D
    long btAlignedAllocInternal(long,int) -> btAlignedAllocInternal
    void btAlignedFreeInternal(long) -> btAlignedFreeInternal
    void btAlignedAllocSetCustom(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t__p_void,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_p_void__void) -> btAlignedAllocSetCustom
    void btAlignedAllocSetCustomAligned(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t_int__p_void,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_p_void__void) -> btAlignedAllocSetCustomAligned
    int getBT_HASH_NULL() -> getBT_HASH_NULL
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$1 -> com.badlogic.gdx.physics.bullet.linearmath.LinearMath$1:
    com.badlogic.gdx.math.Vector3 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$2 -> com.badlogic.gdx.physics.bullet.linearmath.LinearMath$2:
    com.badlogic.gdx.math.Quaternion newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$3 -> com.badlogic.gdx.physics.bullet.linearmath.LinearMath$3:
    com.badlogic.gdx.math.Matrix3 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.linearmath.LinearMath$4 -> com.badlogic.gdx.physics.bullet.linearmath.LinearMath$4:
    com.badlogic.gdx.math.Matrix4 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.linearmath.LinearMathConstants -> com.badlogic.gdx.physics.bullet.linearmath.LinearMathConstants:
    int BT_BULLET_VERSION -> BT_BULLET_VERSION
    double BT_LARGE_FLOAT -> BT_LARGE_FLOAT
    java.lang.String btVector3DataName -> btVector3DataName
    int USE_BANCHLESS -> USE_BANCHLESS
    int BT_USE_PLACEMENT_NEW -> BT_USE_PLACEMENT_NEW
com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI -> com.badlogic.gdx.physics.bullet.linearmath.LinearMathJNI:
    int btGetVersion() -> btGetVersion
    void btInfinityMask_set(int) -> btInfinityMask_set
    int btInfinityMask_get() -> btInfinityMask_get
    float btSqrt(float) -> btSqrt
    float btFabs(float) -> btFabs
    float btCos(float) -> btCos
    float btSin(float) -> btSin
    float btTan(float) -> btTan
    float btAcos(float) -> btAcos
    float btAsin(float) -> btAsin
    float btAtan(float) -> btAtan
    float btAtan2(float,float) -> btAtan2
    float btExp(float) -> btExp
    float btLog(float) -> btLog
    float btPow(float,float) -> btPow
    float btFmod(float,float) -> btFmod
    float btAtan2Fast(float,float) -> btAtan2Fast
    boolean btFuzzyZero(float) -> btFuzzyZero
    boolean btEqual(float,float) -> btEqual
    boolean btGreaterEqual(float,float) -> btGreaterEqual
    int btIsNegative(float) -> btIsNegative
    float btRadians(float) -> btRadians
    float btDegrees(float) -> btDegrees
    float btFsel(float,float,float) -> btFsel
    boolean btMachineIsLittleEndian() -> btMachineIsLittleEndian
    long btSelect__SWIG_0(long,long,long) -> btSelect__SWIG_0
    int btSelect__SWIG_1(long,int,int) -> btSelect__SWIG_1
    float btSelect__SWIG_2(long,float,float) -> btSelect__SWIG_2
    long btSwapEndian__SWIG_0(long) -> btSwapEndian__SWIG_0
    int btSwapEndian__SWIG_1(int) -> btSwapEndian__SWIG_1
    int btSwapEndian__SWIG_3(short) -> btSwapEndian__SWIG_3
    long btSwapEndianFloat(float) -> btSwapEndianFloat
    float btUnswapEndianFloat(long) -> btUnswapEndianFloat
    void btSwapEndianDouble(double,java.nio.ByteBuffer) -> btSwapEndianDouble
    double btUnswapEndianDouble(java.nio.ByteBuffer) -> btUnswapEndianDouble
    float btLargeDot(java.nio.FloatBuffer,java.nio.FloatBuffer,int) -> btLargeDot
    float btNormalizeAngle(float) -> btNormalizeAngle
    long new_btTypedObject(int) -> new_btTypedObject
    void btTypedObject_objectType_set(long,com.badlogic.gdx.physics.bullet.linearmath.btTypedObject,int) -> btTypedObject_objectType_set
    int btTypedObject_objectType_get(long,com.badlogic.gdx.physics.bullet.linearmath.btTypedObject) -> btTypedObject_objectType_get
    void delete_btTypedObject(long) -> delete_btTypedObject
    long new_btTransform__SWIG_0() -> new_btTransform__SWIG_0
    long new_btTransform__SWIG_1(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3) -> new_btTransform__SWIG_1
    long new_btTransform__SWIG_2(com.badlogic.gdx.math.Quaternion) -> new_btTransform__SWIG_2
    long new_btTransform__SWIG_3(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3) -> new_btTransform__SWIG_3
    long new_btTransform__SWIG_4(com.badlogic.gdx.math.Matrix3) -> new_btTransform__SWIG_4
    long new_btTransform__SWIG_5(com.badlogic.gdx.math.Matrix4) -> new_btTransform__SWIG_5
    void btTransform_mult(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> btTransform_mult
    com.badlogic.gdx.math.Matrix3 btTransform_getBasis__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btTransform_getBasis__SWIG_0
    com.badlogic.gdx.math.Vector3 btTransform_getOrigin__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btTransform_getOrigin__SWIG_0
    com.badlogic.gdx.math.Quaternion btTransform_getRotation(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btTransform_getRotation
    void btTransform_setFromOpenGLMatrix(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,float[]) -> btTransform_setFromOpenGLMatrix
    void btTransform_getOpenGLMatrix(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,float[]) -> btTransform_getOpenGLMatrix
    void btTransform_setOrigin(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.math.Vector3) -> btTransform_setOrigin
    com.badlogic.gdx.math.Vector3 btTransform_invXform(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.math.Vector3) -> btTransform_invXform
    void btTransform_setBasis(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.math.Matrix3) -> btTransform_setBasis
    void btTransform_setRotation(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.math.Quaternion) -> btTransform_setRotation
    void btTransform_setIdentity(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btTransform_setIdentity
    com.badlogic.gdx.math.Matrix4 btTransform_inverse(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btTransform_inverse
    com.badlogic.gdx.math.Matrix4 btTransform_inverseTimes(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.math.Matrix4) -> btTransform_inverseTimes
    com.badlogic.gdx.math.Matrix4 btTransform_getIdentity() -> btTransform_getIdentity
    void btTransform_serialize(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btTransform_serialize
    void btTransform_serializeFloat(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btTransform_serializeFloat
    void btTransform_deSerialize(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btTransform_deSerialize
    void btTransform_deSerializeDouble(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> btTransform_deSerializeDouble
    void btTransform_deSerializeFloat(long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btTransform_deSerializeFloat
    void delete_btTransform(long) -> delete_btTransform
    void btTransformFloatData_basis_set(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData,long) -> btTransformFloatData_basis_set
    long btTransformFloatData_basis_get(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btTransformFloatData_basis_get
    void btTransformFloatData_origin_set(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btTransformFloatData_origin_set
    long btTransformFloatData_origin_get(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> btTransformFloatData_origin_get
    long new_btTransformFloatData() -> new_btTransformFloatData
    void delete_btTransformFloatData(long) -> delete_btTransformFloatData
    void btTransformDoubleData_basis_set(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData,long) -> btTransformDoubleData_basis_set
    long btTransformDoubleData_basis_get(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> btTransformDoubleData_basis_get
    void btTransformDoubleData_origin_set(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btTransformDoubleData_origin_set
    long btTransformDoubleData_origin_get(long,com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> btTransformDoubleData_origin_get
    long new_btTransformDoubleData() -> new_btTransformDoubleData
    void delete_btTransformDoubleData(long) -> delete_btTransformDoubleData
    void btVector3_floats_set(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float[]) -> btVector3_floats_set
    float[] btVector3_floats_get(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_floats_get
    long new_btVector3__SWIG_0() -> new_btVector3__SWIG_0
    long new_btVector3__SWIG_1(float,float,float) -> new_btVector3__SWIG_1
    float btVector3_dot(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3) -> btVector3_dot
    float btVector3_length2(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_length2
    float btVector3_length(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_length
    float btVector3_norm(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_norm
    float btVector3_distance2(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3) -> btVector3_distance2
    float btVector3_distance(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3) -> btVector3_distance
    com.badlogic.gdx.math.Vector3 btVector3_safeNormalize(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_safeNormalize
    com.badlogic.gdx.math.Vector3 btVector3_normalize(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_normalize
    com.badlogic.gdx.math.Vector3 btVector3_normalized(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_normalized
    com.badlogic.gdx.math.Vector3 btVector3_rotate(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3,float) -> btVector3_rotate
    float btVector3_angle(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3) -> btVector3_angle
    com.badlogic.gdx.math.Vector3 btVector3_absolute(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_absolute
    com.badlogic.gdx.math.Vector3 btVector3_cross(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3) -> btVector3_cross
    float btVector3_triple(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btVector3_triple
    int btVector3_minAxis(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_minAxis
    int btVector3_maxAxis(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_maxAxis
    int btVector3_furthestAxis(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_furthestAxis
    int btVector3_closestAxis(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_closestAxis
    void btVector3_setInterpolate3(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> btVector3_setInterpolate3
    com.badlogic.gdx.math.Vector3 btVector3_lerp(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3,float) -> btVector3_lerp
    float btVector3_getX(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_getX
    float btVector3_getY(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_getY
    float btVector3_getZ(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_getZ
    void btVector3_setX(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float) -> btVector3_setX
    void btVector3_setY(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float) -> btVector3_setY
    void btVector3_setZ(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float) -> btVector3_setZ
    void btVector3_setW(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float) -> btVector3_setW
    float btVector3_x(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_x
    float btVector3_y(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_y
    float btVector3_z(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_z
    float btVector3_w(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_w
    void btVector3_setMax(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3) -> btVector3_setMax
    void btVector3_setMin(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3) -> btVector3_setMin
    void btVector3_setValue(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float) -> btVector3_setValue
    void btVector3_getSkewSymmetricMatrix(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_getSkewSymmetricMatrix
    void btVector3_setZero(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_setZero
    boolean btVector3_isZero(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_isZero
    boolean btVector3_fuzzyZero(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btVector3_fuzzyZero
    void btVector3_serialize(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btVector3_serialize
    void btVector3_deSerialize(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btVector3_deSerialize
    void btVector3_serializeFloat(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btVector3_serializeFloat
    void btVector3_deSerializeFloat(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btVector3_deSerializeFloat
    void btVector3_serializeDouble(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btVector3_serializeDouble
    void btVector3_deSerializeDouble(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btVector3_deSerializeDouble
    int btVector3_maxDot(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,long) -> btVector3_maxDot
    int btVector3_minDot(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,long) -> btVector3_minDot
    com.badlogic.gdx.math.Vector3 btVector3_dot3(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btVector3_dot3
    void delete_btVector3(long) -> delete_btVector3
    float btDot(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btDot
    float btDistance2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btDistance2
    float btDistance(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btDistance
    float btAngle__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btAngle__SWIG_0
    com.badlogic.gdx.math.Vector3 btCross(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btCross
    float btTriple(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btTriple
    com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> lerp
    long new_btVector4__SWIG_0() -> new_btVector4__SWIG_0
    long new_btVector4__SWIG_1(float,float,float,float) -> new_btVector4__SWIG_1
    long btVector4_absolute4(long,com.badlogic.gdx.physics.bullet.linearmath.btVector4) -> btVector4_absolute4
    float btVector4_getW(long,com.badlogic.gdx.physics.bullet.linearmath.btVector4) -> btVector4_getW
    int btVector4_maxAxis4(long,com.badlogic.gdx.physics.bullet.linearmath.btVector4) -> btVector4_maxAxis4
    int btVector4_minAxis4(long,com.badlogic.gdx.physics.bullet.linearmath.btVector4) -> btVector4_minAxis4
    int btVector4_closestAxis4(long,com.badlogic.gdx.physics.bullet.linearmath.btVector4) -> btVector4_closestAxis4
    void btVector4_setValue(long,com.badlogic.gdx.physics.bullet.linearmath.btVector4,float,float,float,float) -> btVector4_setValue
    void delete_btVector4(long) -> delete_btVector4
    void btSwapScalarEndian(float,long) -> btSwapScalarEndian
    void btSwapVector3Endian(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btSwapVector3Endian
    void btUnSwapVector3Endian(com.badlogic.gdx.math.Vector3) -> btUnSwapVector3Endian
    void btVector3FloatData_floats_set(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData,float[]) -> btVector3FloatData_floats_set
    float[] btVector3FloatData_floats_get(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btVector3FloatData_floats_get
    long new_btVector3FloatData() -> new_btVector3FloatData
    void delete_btVector3FloatData(long) -> delete_btVector3FloatData
    void btVector3DoubleData_floats_set(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData,double[]) -> btVector3DoubleData_floats_set
    double[] btVector3DoubleData_floats_get(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> btVector3DoubleData_floats_get
    long new_btVector3DoubleData() -> new_btVector3DoubleData
    void delete_btVector3DoubleData(long) -> delete_btVector3DoubleData
    long new_btQuaternion__SWIG_0() -> new_btQuaternion__SWIG_0
    long new_btQuaternion__SWIG_1(float,float,float,float) -> new_btQuaternion__SWIG_1
    long new_btQuaternion__SWIG_2(com.badlogic.gdx.math.Vector3,float) -> new_btQuaternion__SWIG_2
    long new_btQuaternion__SWIG_3(float,float,float) -> new_btQuaternion__SWIG_3
    void btQuaternion_setRotation(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,com.badlogic.gdx.math.Vector3,float) -> btQuaternion_setRotation
    void btQuaternion_setEuler(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,float,float,float) -> btQuaternion_setEuler
    void btQuaternion_setEulerZYX(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,float,float,float) -> btQuaternion_setEulerZYX
    float btQuaternion_dot(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,com.badlogic.gdx.math.Quaternion) -> btQuaternion_dot
    float btQuaternion_length2(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion) -> btQuaternion_length2
    float btQuaternion_length(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion) -> btQuaternion_length
    com.badlogic.gdx.math.Quaternion btQuaternion_normalize(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion) -> btQuaternion_normalize
    com.badlogic.gdx.math.Quaternion btQuaternion_normalized(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion) -> btQuaternion_normalized
    float btQuaternion_angle(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,com.badlogic.gdx.math.Quaternion) -> btQuaternion_angle
    float btQuaternion_angleShortestPath(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,com.badlogic.gdx.math.Quaternion) -> btQuaternion_angleShortestPath
    float btQuaternion_getAngle(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion) -> btQuaternion_getAngle
    float btQuaternion_getAngleShortestPath(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion) -> btQuaternion_getAngleShortestPath
    com.badlogic.gdx.math.Vector3 btQuaternion_getAxis(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion) -> btQuaternion_getAxis
    com.badlogic.gdx.math.Quaternion btQuaternion_inverse(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion) -> btQuaternion_inverse
    com.badlogic.gdx.math.Quaternion btQuaternion_farthest(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,com.badlogic.gdx.math.Quaternion) -> btQuaternion_farthest
    com.badlogic.gdx.math.Quaternion btQuaternion_nearest(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,com.badlogic.gdx.math.Quaternion) -> btQuaternion_nearest
    com.badlogic.gdx.math.Quaternion btQuaternion_slerp(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion,com.badlogic.gdx.math.Quaternion,float) -> btQuaternion_slerp
    com.badlogic.gdx.math.Quaternion btQuaternion_getIdentity() -> btQuaternion_getIdentity
    float btQuaternion_getW(long,com.badlogic.gdx.physics.bullet.linearmath.btQuaternion) -> btQuaternion_getW
    void delete_btQuaternion(long) -> delete_btQuaternion
    float dot(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion) -> dot
    float length(com.badlogic.gdx.math.Quaternion) -> length
    float btAngle__SWIG_1(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion) -> btAngle__SWIG_1
    com.badlogic.gdx.math.Quaternion inverse(com.badlogic.gdx.math.Quaternion) -> inverse
    com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion,float) -> slerp
    com.badlogic.gdx.math.Vector3 quatRotate(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3) -> quatRotate
    com.badlogic.gdx.math.Quaternion shortestArcQuat(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> shortestArcQuat
    com.badlogic.gdx.math.Quaternion shortestArcQuatNormalize2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> shortestArcQuatNormalize2
    void AabbExpand(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> AabbExpand
    boolean TestPointAgainstAabb2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> TestPointAgainstAabb2
    boolean TestAabbAgainstAabb2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> TestAabbAgainstAabb2
    boolean TestTriangleAgainstAabb2(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> TestTriangleAgainstAabb2
    int btOutcode(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btOutcode
    boolean btRayAabb2(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long[],long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,float,float) -> btRayAabb2
    boolean btRayAabb(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.math.Vector3) -> btRayAabb
    void btTransformAabb__SWIG_0(com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btTransformAabb__SWIG_0
    void btTransformAabb__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btTransformAabb__SWIG_1
    long testQuantizedAabbAgainstQuantizedAabb(java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer) -> testQuantizedAabbAgainstQuantizedAabb
    void delete_btIDebugDraw(long) -> delete_btIDebugDraw
    void btIDebugDraw_drawLine__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawLine__SWIG_0
    void btIDebugDraw_drawLine__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawLine__SWIG_1
    void btIDebugDraw_drawLineSwigExplicitbtIDebugDraw__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawLineSwigExplicitbtIDebugDraw__SWIG_1
    void btIDebugDraw_drawSphere__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawSphere__SWIG_0
    void btIDebugDraw_drawSphereSwigExplicitbtIDebugDraw__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawSphereSwigExplicitbtIDebugDraw__SWIG_0
    void btIDebugDraw_drawSphere__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawSphere__SWIG_1
    void btIDebugDraw_drawSphereSwigExplicitbtIDebugDraw__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawSphereSwigExplicitbtIDebugDraw__SWIG_1
    void btIDebugDraw_drawTriangle__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float) -> btIDebugDraw_drawTriangle__SWIG_0
    void btIDebugDraw_drawTriangleSwigExplicitbtIDebugDraw__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float) -> btIDebugDraw_drawTriangleSwigExplicitbtIDebugDraw__SWIG_0
    void btIDebugDraw_drawTriangle__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float) -> btIDebugDraw_drawTriangle__SWIG_1
    void btIDebugDraw_drawTriangleSwigExplicitbtIDebugDraw__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float) -> btIDebugDraw_drawTriangleSwigExplicitbtIDebugDraw__SWIG_1
    void btIDebugDraw_drawContactPoint(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,int,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawContactPoint
    void btIDebugDraw_reportErrorWarning(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,java.lang.String) -> btIDebugDraw_reportErrorWarning
    void btIDebugDraw_draw3dText(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.lang.String) -> btIDebugDraw_draw3dText
    void btIDebugDraw_setDebugMode(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int) -> btIDebugDraw_setDebugMode
    int btIDebugDraw_getDebugMode(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btIDebugDraw_getDebugMode
    void btIDebugDraw_drawAabb(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawAabb
    void btIDebugDraw_drawAabbSwigExplicitbtIDebugDraw(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawAabbSwigExplicitbtIDebugDraw
    void btIDebugDraw_drawTransform(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,float) -> btIDebugDraw_drawTransform
    void btIDebugDraw_drawTransformSwigExplicitbtIDebugDraw(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,float) -> btIDebugDraw_drawTransformSwigExplicitbtIDebugDraw
    void btIDebugDraw_drawArc__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,boolean,float) -> btIDebugDraw_drawArc__SWIG_0
    void btIDebugDraw_drawArcSwigExplicitbtIDebugDraw__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,boolean,float) -> btIDebugDraw_drawArcSwigExplicitbtIDebugDraw__SWIG_0
    void btIDebugDraw_drawArc__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,boolean) -> btIDebugDraw_drawArc__SWIG_1
    void btIDebugDraw_drawArcSwigExplicitbtIDebugDraw__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,boolean) -> btIDebugDraw_drawArcSwigExplicitbtIDebugDraw__SWIG_1
    void btIDebugDraw_drawSpherePatch__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,boolean) -> btIDebugDraw_drawSpherePatch__SWIG_0
    void btIDebugDraw_drawSpherePatchSwigExplicitbtIDebugDraw__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,boolean) -> btIDebugDraw_drawSpherePatchSwigExplicitbtIDebugDraw__SWIG_0
    void btIDebugDraw_drawSpherePatch__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float) -> btIDebugDraw_drawSpherePatch__SWIG_1
    void btIDebugDraw_drawSpherePatchSwigExplicitbtIDebugDraw__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float) -> btIDebugDraw_drawSpherePatchSwigExplicitbtIDebugDraw__SWIG_1
    void btIDebugDraw_drawSpherePatch__SWIG_2(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawSpherePatch__SWIG_2
    void btIDebugDraw_drawSpherePatchSwigExplicitbtIDebugDraw__SWIG_2(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawSpherePatchSwigExplicitbtIDebugDraw__SWIG_2
    void btIDebugDraw_drawBox__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawBox__SWIG_0
    void btIDebugDraw_drawBoxSwigExplicitbtIDebugDraw__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawBoxSwigExplicitbtIDebugDraw__SWIG_0
    void btIDebugDraw_drawBox__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawBox__SWIG_1
    void btIDebugDraw_drawBoxSwigExplicitbtIDebugDraw__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawBoxSwigExplicitbtIDebugDraw__SWIG_1
    void btIDebugDraw_drawCapsule(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawCapsule
    void btIDebugDraw_drawCapsuleSwigExplicitbtIDebugDraw(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawCapsuleSwigExplicitbtIDebugDraw
    void btIDebugDraw_drawCylinder(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawCylinder
    void btIDebugDraw_drawCylinderSwigExplicitbtIDebugDraw(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawCylinderSwigExplicitbtIDebugDraw
    void btIDebugDraw_drawCone(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawCone
    void btIDebugDraw_drawConeSwigExplicitbtIDebugDraw(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawConeSwigExplicitbtIDebugDraw
    void btIDebugDraw_drawPlane(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawPlane
    void btIDebugDraw_drawPlaneSwigExplicitbtIDebugDraw(long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btIDebugDraw_drawPlaneSwigExplicitbtIDebugDraw
    long new_btIDebugDraw() -> new_btIDebugDraw
    void btIDebugDraw_director_connect(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,boolean,boolean) -> btIDebugDraw_director_connect
    void btIDebugDraw_change_ownership(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,boolean) -> btIDebugDraw_change_ownership
    void btGeometryUtil_getPlaneEquationsFromVertices(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> btGeometryUtil_getPlaneEquationsFromVertices
    void btGeometryUtil_getVerticesFromPlaneEquations(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> btGeometryUtil_getVerticesFromPlaneEquations
    boolean btGeometryUtil_isInside(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3,float) -> btGeometryUtil_isInside
    boolean btGeometryUtil_isPointInsidePlanes(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3,float) -> btGeometryUtil_isPointInsidePlanes
    boolean btGeometryUtil_areVerticesBehindPlane(com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,float) -> btGeometryUtil_areVerticesBehindPlane
    long new_btGeometryUtil() -> new_btGeometryUtil
    void delete_btGeometryUtil(long) -> delete_btGeometryUtil
    void GEN_srand(long) -> GEN_srand
    long GEN_rand() -> GEN_rand
    com.badlogic.gdx.math.Vector3 btAabbSupport(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btAabbSupport
    void btTransformUtil_integrateTransform(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4) -> btTransformUtil_integrateTransform
    void btTransformUtil_calculateVelocityQuaternion(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btTransformUtil_calculateVelocityQuaternion
    void btTransformUtil_calculateDiffAxisAngleQuaternion(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3,long) -> btTransformUtil_calculateDiffAxisAngleQuaternion
    void btTransformUtil_calculateVelocity(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btTransformUtil_calculateVelocity
    void btTransformUtil_calculateDiffAxisAngle(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,long) -> btTransformUtil_calculateDiffAxisAngle
    long new_btTransformUtil() -> new_btTransformUtil
    void delete_btTransformUtil(long) -> delete_btTransformUtil
    long new_btConvexSeparatingDistanceUtil(float,float) -> new_btConvexSeparatingDistanceUtil
    float btConvexSeparatingDistanceUtil_getConservativeSeparatingDistance(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil) -> btConvexSeparatingDistanceUtil_getConservativeSeparatingDistance
    void btConvexSeparatingDistanceUtil_updateSeparatingDistance(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> btConvexSeparatingDistanceUtil_updateSeparatingDistance
    void btConvexSeparatingDistanceUtil_initSeparatingDistance(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> btConvexSeparatingDistanceUtil_initSeparatingDistance
    void delete_btConvexSeparatingDistanceUtil(long) -> delete_btConvexSeparatingDistanceUtil
    long new_HullResult() -> new_HullResult
    void HullResult_mPolygons_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult,boolean) -> HullResult_mPolygons_set
    boolean HullResult_mPolygons_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult) -> HullResult_mPolygons_get
    void HullResult_mNumOutputVertices_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult,long) -> HullResult_mNumOutputVertices_set
    long HullResult_mNumOutputVertices_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult) -> HullResult_mNumOutputVertices_get
    void HullResult_OutputVertices_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> HullResult_OutputVertices_set
    long HullResult_OutputVertices_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult) -> HullResult_OutputVertices_get
    void HullResult_mNumFaces_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult,long) -> HullResult_mNumFaces_set
    long HullResult_mNumFaces_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult) -> HullResult_mNumFaces_get
    void HullResult_mNumIndices_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult,long) -> HullResult_mNumIndices_set
    long HullResult_mNumIndices_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult) -> HullResult_mNumIndices_get
    void HullResult_Indices_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult,long) -> HullResult_Indices_set
    long HullResult_Indices_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullResult) -> HullResult_Indices_get
    void delete_HullResult(long) -> delete_HullResult
    long new_HullDesc__SWIG_0() -> new_HullDesc__SWIG_0
    long new_HullDesc__SWIG_1(int,long,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,long) -> new_HullDesc__SWIG_1
    long new_HullDesc__SWIG_2(int,long,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> new_HullDesc__SWIG_2
    boolean HullDesc_HasHullFlag(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,int) -> HullDesc_HasHullFlag
    void HullDesc_SetHullFlag(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,int) -> HullDesc_SetHullFlag
    void HullDesc_ClearHullFlag(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,int) -> HullDesc_ClearHullFlag
    void HullDesc_mFlags_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,long) -> HullDesc_mFlags_set
    long HullDesc_mFlags_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc) -> HullDesc_mFlags_get
    void HullDesc_mVcount_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,long) -> HullDesc_mVcount_set
    long HullDesc_mVcount_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc) -> HullDesc_mVcount_get
    void HullDesc_mVertices_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> HullDesc_mVertices_set
    long HullDesc_mVertices_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc) -> HullDesc_mVertices_get
    void HullDesc_mVertexStride_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,long) -> HullDesc_mVertexStride_set
    long HullDesc_mVertexStride_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc) -> HullDesc_mVertexStride_get
    void HullDesc_mNormalEpsilon_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,float) -> HullDesc_mNormalEpsilon_set
    float HullDesc_mNormalEpsilon_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc) -> HullDesc_mNormalEpsilon_get
    void HullDesc_mMaxVertices_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,long) -> HullDesc_mMaxVertices_set
    long HullDesc_mMaxVertices_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc) -> HullDesc_mMaxVertices_get
    void HullDesc_mMaxFaces_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,long) -> HullDesc_mMaxFaces_set
    long HullDesc_mMaxFaces_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc) -> HullDesc_mMaxFaces_get
    void delete_HullDesc(long) -> delete_HullDesc
    void btPlane_normal_set(long,com.badlogic.gdx.physics.bullet.linearmath.btPlane,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btPlane_normal_set
    long btPlane_normal_get(long,com.badlogic.gdx.physics.bullet.linearmath.btPlane) -> btPlane_normal_get
    void btPlane_dist_set(long,com.badlogic.gdx.physics.bullet.linearmath.btPlane,float) -> btPlane_dist_set
    float btPlane_dist_get(long,com.badlogic.gdx.physics.bullet.linearmath.btPlane) -> btPlane_dist_get
    long new_btPlane__SWIG_0(com.badlogic.gdx.math.Vector3,float) -> new_btPlane__SWIG_0
    long new_btPlane__SWIG_1() -> new_btPlane__SWIG_1
    void delete_btPlane(long) -> delete_btPlane
    void ConvexH_HalfEdge_ea_set(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge,short) -> ConvexH_HalfEdge_ea_set
    short ConvexH_HalfEdge_ea_get(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge) -> ConvexH_HalfEdge_ea_get
    void ConvexH_HalfEdge_v_set(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge,short) -> ConvexH_HalfEdge_v_set
    short ConvexH_HalfEdge_v_get(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge) -> ConvexH_HalfEdge_v_get
    void ConvexH_HalfEdge_p_set(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge,short) -> ConvexH_HalfEdge_p_set
    short ConvexH_HalfEdge_p_get(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH$HalfEdge) -> ConvexH_HalfEdge_p_get
    long new_ConvexH_HalfEdge__SWIG_0() -> new_ConvexH_HalfEdge__SWIG_0
    long new_ConvexH_HalfEdge__SWIG_1(short,short,short) -> new_ConvexH_HalfEdge__SWIG_1
    void delete_ConvexH_HalfEdge(long) -> delete_ConvexH_HalfEdge
    long new_ConvexH__SWIG_0() -> new_ConvexH__SWIG_0
    void delete_ConvexH(long) -> delete_ConvexH
    void ConvexH_vertices_set(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> ConvexH_vertices_set
    long ConvexH_vertices_get(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH) -> ConvexH_vertices_get
    void ConvexH_edges_set(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH,long) -> ConvexH_edges_set
    long ConvexH_edges_get(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH) -> ConvexH_edges_get
    void ConvexH_facets_set(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH,long) -> ConvexH_facets_set
    long ConvexH_facets_get(long,com.badlogic.gdx.physics.bullet.linearmath.ConvexH) -> ConvexH_facets_get
    long new_ConvexH__SWIG_1(int,int,int) -> new_ConvexH__SWIG_1
    void int4_x_set(long,com.badlogic.gdx.physics.bullet.linearmath.int4,int) -> int4_x_set
    int int4_x_get(long,com.badlogic.gdx.physics.bullet.linearmath.int4) -> int4_x_get
    void int4_y_set(long,com.badlogic.gdx.physics.bullet.linearmath.int4,int) -> int4_y_set
    int int4_y_get(long,com.badlogic.gdx.physics.bullet.linearmath.int4) -> int4_y_get
    void int4_z_set(long,com.badlogic.gdx.physics.bullet.linearmath.int4,int) -> int4_z_set
    int int4_z_get(long,com.badlogic.gdx.physics.bullet.linearmath.int4) -> int4_z_get
    void int4_w_set(long,com.badlogic.gdx.physics.bullet.linearmath.int4,int) -> int4_w_set
    int int4_w_get(long,com.badlogic.gdx.physics.bullet.linearmath.int4) -> int4_w_get
    long new_int4__SWIG_0() -> new_int4__SWIG_0
    long new_int4__SWIG_1(int,int,int,int) -> new_int4__SWIG_1
    void delete_int4(long) -> delete_int4
    long new_PHullResult() -> new_PHullResult
    void PHullResult_mVcount_set(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult,long) -> PHullResult_mVcount_set
    long PHullResult_mVcount_get(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult) -> PHullResult_mVcount_get
    void PHullResult_mIndexCount_set(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult,long) -> PHullResult_mIndexCount_set
    long PHullResult_mIndexCount_get(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult) -> PHullResult_mIndexCount_get
    void PHullResult_mFaceCount_set(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult,long) -> PHullResult_mFaceCount_set
    long PHullResult_mFaceCount_get(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult) -> PHullResult_mFaceCount_get
    void PHullResult_mVertices_set(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> PHullResult_mVertices_set
    long PHullResult_mVertices_get(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult) -> PHullResult_mVertices_get
    void PHullResult_Indices_set(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult,long) -> PHullResult_Indices_set
    long PHullResult_Indices_get(long,com.badlogic.gdx.physics.bullet.linearmath.PHullResult) -> PHullResult_Indices_get
    void delete_PHullResult(long) -> delete_PHullResult
    void HullLibrary_vertexIndexMapping_set(long,com.badlogic.gdx.physics.bullet.linearmath.HullLibrary,long) -> HullLibrary_vertexIndexMapping_set
    long HullLibrary_vertexIndexMapping_get(long,com.badlogic.gdx.physics.bullet.linearmath.HullLibrary) -> HullLibrary_vertexIndexMapping_get
    int HullLibrary_CreateConvexHull(long,com.badlogic.gdx.physics.bullet.linearmath.HullLibrary,long,com.badlogic.gdx.physics.bullet.linearmath.HullDesc,long,com.badlogic.gdx.physics.bullet.linearmath.HullResult) -> HullLibrary_CreateConvexHull
    int HullLibrary_ReleaseResult(long,com.badlogic.gdx.physics.bullet.linearmath.HullLibrary,long,com.badlogic.gdx.physics.bullet.linearmath.HullResult) -> HullLibrary_ReleaseResult
    long new_HullLibrary() -> new_HullLibrary
    void delete_HullLibrary(long) -> delete_HullLibrary
    long new_GrahamVector3(com.badlogic.gdx.math.Vector3,int) -> new_GrahamVector3
    void GrahamVector3_angle_set(long,com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3,float) -> GrahamVector3_angle_set
    float GrahamVector3_angle_get(long,com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3) -> GrahamVector3_angle_get
    void GrahamVector3_orgIndex_set(long,com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3,int) -> GrahamVector3_orgIndex_set
    int GrahamVector3_orgIndex_get(long,com.badlogic.gdx.physics.bullet.linearmath.GrahamVector3) -> GrahamVector3_orgIndex_get
    void delete_GrahamVector3(long) -> delete_GrahamVector3
    void btAngleCompareFunc_anchor_set(long,com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btAngleCompareFunc_anchor_set
    long btAngleCompareFunc_anchor_get(long,com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc) -> btAngleCompareFunc_anchor_get
    long new_btAngleCompareFunc(com.badlogic.gdx.math.Vector3) -> new_btAngleCompareFunc
    void delete_btAngleCompareFunc(long) -> delete_btAngleCompareFunc
    void GrahamScanConvexHull2D(long,long,com.badlogic.gdx.math.Vector3) -> GrahamScanConvexHull2D
    long new_btPoolAllocator(int,int) -> new_btPoolAllocator
    void delete_btPoolAllocator(long) -> delete_btPoolAllocator
    int btPoolAllocator_getFreeCount(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator) -> btPoolAllocator_getFreeCount
    int btPoolAllocator_getUsedCount(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator) -> btPoolAllocator_getUsedCount
    int btPoolAllocator_getMaxCount(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator) -> btPoolAllocator_getMaxCount
    long btPoolAllocator_allocate(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator,int) -> btPoolAllocator_allocate
    boolean btPoolAllocator_validPtr(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator,long) -> btPoolAllocator_validPtr
    void btPoolAllocator_freeMemory(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator,long) -> btPoolAllocator_freeMemory
    int btPoolAllocator_getElementSize(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator) -> btPoolAllocator_getElementSize
    java.nio.ByteBuffer btPoolAllocator_getPoolAddress__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator) -> btPoolAllocator_getPoolAddress__SWIG_0
    int btConvexHullComputer_Edge_getSourceVertex(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge) -> btConvexHullComputer_Edge_getSourceVertex
    int btConvexHullComputer_Edge_getTargetVertex(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge) -> btConvexHullComputer_Edge_getTargetVertex
    long btConvexHullComputer_Edge_getNextEdgeOfVertex(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge) -> btConvexHullComputer_Edge_getNextEdgeOfVertex
    long btConvexHullComputer_Edge_getNextEdgeOfFace(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge) -> btConvexHullComputer_Edge_getNextEdgeOfFace
    long btConvexHullComputer_Edge_getReverseEdge(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge) -> btConvexHullComputer_Edge_getReverseEdge
    long new_btConvexHullComputer_Edge() -> new_btConvexHullComputer_Edge
    void delete_btConvexHullComputer_Edge(long) -> delete_btConvexHullComputer_Edge
    void btConvexHullComputer_vertices_set(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> btConvexHullComputer_vertices_set
    long btConvexHullComputer_vertices_get(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer) -> btConvexHullComputer_vertices_get
    void btConvexHullComputer_edges_set(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer,long) -> btConvexHullComputer_edges_set
    long btConvexHullComputer_edges_get(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer) -> btConvexHullComputer_edges_get
    void btConvexHullComputer_faces_set(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer,long) -> btConvexHullComputer_faces_set
    long btConvexHullComputer_faces_get(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer) -> btConvexHullComputer_faces_get
    float btConvexHullComputer_compute__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer,java.nio.FloatBuffer,int,int,float,float) -> btConvexHullComputer_compute__SWIG_0
    float btConvexHullComputer_compute__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer,java.nio.DoubleBuffer,int,int,float,float) -> btConvexHullComputer_compute__SWIG_1
    long new_btConvexHullComputer() -> new_btConvexHullComputer
    void delete_btConvexHullComputer(long) -> delete_btConvexHullComputer
    long new_btGEN_Link__SWIG_0() -> new_btGEN_Link__SWIG_0
    long new_btGEN_Link__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link,long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link) -> new_btGEN_Link__SWIG_1
    long btGEN_Link_getNext(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link) -> btGEN_Link_getNext
    long btGEN_Link_getPrev(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link) -> btGEN_Link_getPrev
    boolean btGEN_Link_isHead(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link) -> btGEN_Link_isHead
    boolean btGEN_Link_isTail(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link) -> btGEN_Link_isTail
    void btGEN_Link_insertBefore(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link,long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link) -> btGEN_Link_insertBefore
    void btGEN_Link_insertAfter(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link,long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link) -> btGEN_Link_insertAfter
    void btGEN_Link_remove(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link) -> btGEN_Link_remove
    void delete_btGEN_Link(long) -> delete_btGEN_Link
    long new_btGEN_List() -> new_btGEN_List
    long btGEN_List_getHead(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_List) -> btGEN_List_getHead
    long btGEN_List_getTail(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_List) -> btGEN_List_getTail
    void btGEN_List_addHead(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_List,long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link) -> btGEN_List_addHead
    void btGEN_List_addTail(long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_List,long,com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link) -> btGEN_List_addTail
    void delete_btGEN_List(long) -> delete_btGEN_List
    long btAlignedAllocInternal(long,int) -> btAlignedAllocInternal
    void btAlignedFreeInternal(long) -> btAlignedFreeInternal
    void btAlignedAllocSetCustom(long,long) -> btAlignedAllocSetCustom
    void btAlignedAllocSetCustomAligned(long,long) -> btAlignedAllocSetCustomAligned
    void btHashString_string_set(long,com.badlogic.gdx.physics.bullet.linearmath.btHashString,java.lang.String) -> btHashString_string_set
    java.lang.String btHashString_string_get(long,com.badlogic.gdx.physics.bullet.linearmath.btHashString) -> btHashString_string_get
    void btHashString_hash_set(long,com.badlogic.gdx.physics.bullet.linearmath.btHashString,long) -> btHashString_hash_set
    long btHashString_hash_get(long,com.badlogic.gdx.physics.bullet.linearmath.btHashString) -> btHashString_hash_get
    long new_btHashString(java.lang.String) -> new_btHashString
    int btHashString_portableStringCompare(long,com.badlogic.gdx.physics.bullet.linearmath.btHashString,java.lang.String,java.lang.String) -> btHashString_portableStringCompare
    boolean btHashString_equals(long,com.badlogic.gdx.physics.bullet.linearmath.btHashString,long,com.badlogic.gdx.physics.bullet.linearmath.btHashString) -> btHashString_equals
    void delete_btHashString(long) -> delete_btHashString
    int BT_HASH_NULL_get() -> BT_HASH_NULL_get
    long new_btHashInt(int) -> new_btHashInt
    int btHashInt_getUid1(long,com.badlogic.gdx.physics.bullet.linearmath.btHashInt) -> btHashInt_getUid1
    void btHashInt_setUid1(long,com.badlogic.gdx.physics.bullet.linearmath.btHashInt,int) -> btHashInt_setUid1
    boolean btHashInt_equals(long,com.badlogic.gdx.physics.bullet.linearmath.btHashInt,long,com.badlogic.gdx.physics.bullet.linearmath.btHashInt) -> btHashInt_equals
    long btHashInt_getHash(long,com.badlogic.gdx.physics.bullet.linearmath.btHashInt) -> btHashInt_getHash
    void delete_btHashInt(long) -> delete_btHashInt
    long new_btHashPtr(long) -> new_btHashPtr
    long btHashPtr_getPointer(long,com.badlogic.gdx.physics.bullet.linearmath.btHashPtr) -> btHashPtr_getPointer
    boolean btHashPtr_equals(long,com.badlogic.gdx.physics.bullet.linearmath.btHashPtr,long,com.badlogic.gdx.physics.bullet.linearmath.btHashPtr) -> btHashPtr_equals
    long btHashPtr_getHash(long,com.badlogic.gdx.physics.bullet.linearmath.btHashPtr) -> btHashPtr_getHash
    void delete_btHashPtr(long) -> delete_btHashPtr
    void btBlock_previous_set(long,com.badlogic.gdx.physics.bullet.linearmath.btBlock,long,com.badlogic.gdx.physics.bullet.linearmath.btBlock) -> btBlock_previous_set
    long btBlock_previous_get(long,com.badlogic.gdx.physics.bullet.linearmath.btBlock) -> btBlock_previous_get
    void btBlock_address_set(long,com.badlogic.gdx.physics.bullet.linearmath.btBlock,java.nio.ByteBuffer) -> btBlock_address_set
    java.nio.ByteBuffer btBlock_address_get(long,com.badlogic.gdx.physics.bullet.linearmath.btBlock) -> btBlock_address_get
    long new_btBlock() -> new_btBlock
    void delete_btBlock(long) -> delete_btBlock
    long new_btStackAlloc(long) -> new_btStackAlloc
    void delete_btStackAlloc(long) -> delete_btStackAlloc
    void btStackAlloc_create(long,com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc,long) -> btStackAlloc_create
    void btStackAlloc_destroy(long,com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc) -> btStackAlloc_destroy
    int btStackAlloc_getAvailableMemory(long,com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc) -> btStackAlloc_getAvailableMemory
    java.nio.ByteBuffer btStackAlloc_allocate(long,com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc,long) -> btStackAlloc_allocate
    long btStackAlloc_beginBlock(long,com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc) -> btStackAlloc_beginBlock
    void btStackAlloc_endBlock(long,com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc,long,com.badlogic.gdx.physics.bullet.linearmath.btBlock) -> btStackAlloc_endBlock
    void delete_btMotionState(long) -> delete_btMotionState
    void btMotionState_getWorldTransform(long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.math.Matrix4) -> btMotionState_getWorldTransform
    void btMotionState_setWorldTransform(long,com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.math.Matrix4) -> btMotionState_setWorldTransform
    long new_btMotionState() -> new_btMotionState
    void btMotionState_director_connect(com.badlogic.gdx.physics.bullet.linearmath.btMotionState,long,boolean,boolean) -> btMotionState_director_connect
    void btMotionState_change_ownership(com.badlogic.gdx.physics.bullet.linearmath.btMotionState,long,boolean) -> btMotionState_change_ownership
    void btDefaultMotionState_graphicsWorldTrans_set(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btDefaultMotionState_graphicsWorldTrans_set
    long btDefaultMotionState_graphicsWorldTrans_get(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState) -> btDefaultMotionState_graphicsWorldTrans_get
    void btDefaultMotionState_centerOfMassOffset_set(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btDefaultMotionState_centerOfMassOffset_set
    long btDefaultMotionState_centerOfMassOffset_get(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState) -> btDefaultMotionState_centerOfMassOffset_get
    void btDefaultMotionState_startWorldTrans_set(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btDefaultMotionState_startWorldTrans_set
    long btDefaultMotionState_startWorldTrans_get(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState) -> btDefaultMotionState_startWorldTrans_get
    void btDefaultMotionState_userPointer_set(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState,long) -> btDefaultMotionState_userPointer_set
    long btDefaultMotionState_userPointer_get(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState) -> btDefaultMotionState_userPointer_get
    long new_btDefaultMotionState__SWIG_0(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> new_btDefaultMotionState__SWIG_0
    long new_btDefaultMotionState__SWIG_1(com.badlogic.gdx.math.Matrix4) -> new_btDefaultMotionState__SWIG_1
    long new_btDefaultMotionState__SWIG_2() -> new_btDefaultMotionState__SWIG_2
    void btDefaultMotionState_getGraphicsWorldTrans(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState,com.badlogic.gdx.math.Matrix4) -> btDefaultMotionState_getGraphicsWorldTrans
    void btDefaultMotionState_getCenterOfMassOffset(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState,com.badlogic.gdx.math.Matrix4) -> btDefaultMotionState_getCenterOfMassOffset
    void btDefaultMotionState_getStartWorldTrans(long,com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState,com.badlogic.gdx.math.Matrix4) -> btDefaultMotionState_getStartWorldTrans
    void delete_btDefaultMotionState(long) -> delete_btDefaultMotionState
    long new_btVector3Array__SWIG_0() -> new_btVector3Array__SWIG_0
    void delete_btVector3Array(long) -> delete_btVector3Array
    long new_btVector3Array__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> new_btVector3Array__SWIG_1
    int btVector3Array_size(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> btVector3Array_size
    com.badlogic.gdx.math.Vector3 btVector3Array_at__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,int) -> btVector3Array_at__SWIG_0
    void btVector3Array_clear(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> btVector3Array_clear
    void btVector3Array_pop_back(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> btVector3Array_pop_back
    void btVector3Array_resizeNoInitialize(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,int) -> btVector3Array_resizeNoInitialize
    void btVector3Array_resize__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,int,com.badlogic.gdx.math.Vector3) -> btVector3Array_resize__SWIG_0
    void btVector3Array_resize__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,int) -> btVector3Array_resize__SWIG_1
    com.badlogic.gdx.math.Vector3 btVector3Array_expandNonInitializing(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> btVector3Array_expandNonInitializing
    com.badlogic.gdx.math.Vector3 btVector3Array_expand__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3) -> btVector3Array_expand__SWIG_0
    com.badlogic.gdx.math.Vector3 btVector3Array_expand__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> btVector3Array_expand__SWIG_1
    void btVector3Array_push_back(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3) -> btVector3Array_push_back
    int btVector3Array_capacity(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> btVector3Array_capacity
    void btVector3Array_reserve(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,int) -> btVector3Array_reserve
    long new_btVector3Array_less() -> new_btVector3Array_less
    void delete_btVector3Array_less(long) -> delete_btVector3Array_less
    void btVector3Array_swap(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,int,int) -> btVector3Array_swap
    int btVector3Array_findBinarySearch(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3) -> btVector3Array_findBinarySearch
    int btVector3Array_findLinearSearch(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3) -> btVector3Array_findLinearSearch
    void btVector3Array_remove(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3) -> btVector3Array_remove
    void btVector3Array_initializeFromBuffer(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,long,int,int) -> btVector3Array_initializeFromBuffer
    void btVector3Array_copyFromArray(long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> btVector3Array_copyFromArray
    long new_btScalarArray__SWIG_0() -> new_btScalarArray__SWIG_0
    void delete_btScalarArray(long) -> delete_btScalarArray
    long new_btScalarArray__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> new_btScalarArray__SWIG_1
    int btScalarArray_size(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> btScalarArray_size
    float btScalarArray_at__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,int) -> btScalarArray_at__SWIG_0
    void btScalarArray_clear(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> btScalarArray_clear
    void btScalarArray_pop_back(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> btScalarArray_pop_back
    void btScalarArray_resizeNoInitialize(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,int) -> btScalarArray_resizeNoInitialize
    void btScalarArray_resize__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,int,float) -> btScalarArray_resize__SWIG_0
    void btScalarArray_resize__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,int) -> btScalarArray_resize__SWIG_1
    long btScalarArray_expandNonInitializing(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> btScalarArray_expandNonInitializing
    long btScalarArray_expand__SWIG_0(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,float) -> btScalarArray_expand__SWIG_0
    long btScalarArray_expand__SWIG_1(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> btScalarArray_expand__SWIG_1
    void btScalarArray_push_back(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,float) -> btScalarArray_push_back
    int btScalarArray_capacity(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> btScalarArray_capacity
    void btScalarArray_reserve(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,int) -> btScalarArray_reserve
    long new_btScalarArray_less() -> new_btScalarArray_less
    void delete_btScalarArray_less(long) -> delete_btScalarArray_less
    void btScalarArray_swap(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,int,int) -> btScalarArray_swap
    int btScalarArray_findBinarySearch(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,float) -> btScalarArray_findBinarySearch
    int btScalarArray_findLinearSearch(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,float) -> btScalarArray_findLinearSearch
    void btScalarArray_remove(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,float) -> btScalarArray_remove
    void btScalarArray_initializeFromBuffer(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,long,int,int) -> btScalarArray_initializeFromBuffer
    void btScalarArray_copyFromArray(long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray,long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> btScalarArray_copyFromArray
    long btVector4_SWIGUpcast(long) -> btVector4_SWIGUpcast
    long GrahamVector3_SWIGUpcast(long) -> GrahamVector3_SWIGUpcast
    long btDefaultMotionState_SWIGUpcast(long) -> btDefaultMotionState_SWIGUpcast
    void SwigDirector_btIDebugDraw_drawLine__SWIG_0(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long) -> SwigDirector_btIDebugDraw_drawLine__SWIG_0
    void SwigDirector_btIDebugDraw_drawLine__SWIG_1(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,long) -> SwigDirector_btIDebugDraw_drawLine__SWIG_1
    void SwigDirector_btIDebugDraw_drawSphere__SWIG_0(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,long,long) -> SwigDirector_btIDebugDraw_drawSphere__SWIG_0
    void SwigDirector_btIDebugDraw_drawSphere__SWIG_1(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,float,long) -> SwigDirector_btIDebugDraw_drawSphere__SWIG_1
    void SwigDirector_btIDebugDraw_drawTriangle__SWIG_0(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,long,long,long,long,float) -> SwigDirector_btIDebugDraw_drawTriangle__SWIG_0
    void SwigDirector_btIDebugDraw_drawTriangle__SWIG_1(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,long,float) -> SwigDirector_btIDebugDraw_drawTriangle__SWIG_1
    void SwigDirector_btIDebugDraw_drawContactPoint(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,float,int,long) -> SwigDirector_btIDebugDraw_drawContactPoint
    void SwigDirector_btIDebugDraw_reportErrorWarning(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,java.lang.String) -> SwigDirector_btIDebugDraw_reportErrorWarning
    void SwigDirector_btIDebugDraw_draw3dText(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,java.lang.String) -> SwigDirector_btIDebugDraw_draw3dText
    void SwigDirector_btIDebugDraw_setDebugMode(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int) -> SwigDirector_btIDebugDraw_setDebugMode
    int SwigDirector_btIDebugDraw_getDebugMode(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> SwigDirector_btIDebugDraw_getDebugMode
    void SwigDirector_btIDebugDraw_drawAabb(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long) -> SwigDirector_btIDebugDraw_drawAabb
    void SwigDirector_btIDebugDraw_drawTransform(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,float) -> SwigDirector_btIDebugDraw_drawTransform
    void SwigDirector_btIDebugDraw_drawArc__SWIG_0(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,float,float,float,float,long,boolean,float) -> SwigDirector_btIDebugDraw_drawArc__SWIG_0
    void SwigDirector_btIDebugDraw_drawArc__SWIG_1(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,float,float,float,float,long,boolean) -> SwigDirector_btIDebugDraw_drawArc__SWIG_1
    void SwigDirector_btIDebugDraw_drawSpherePatch__SWIG_0(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,float,float,float,float,float,long,float,boolean) -> SwigDirector_btIDebugDraw_drawSpherePatch__SWIG_0
    void SwigDirector_btIDebugDraw_drawSpherePatch__SWIG_1(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,float,float,float,float,float,long,float) -> SwigDirector_btIDebugDraw_drawSpherePatch__SWIG_1
    void SwigDirector_btIDebugDraw_drawSpherePatch__SWIG_2(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,float,float,float,float,float,long) -> SwigDirector_btIDebugDraw_drawSpherePatch__SWIG_2
    void SwigDirector_btIDebugDraw_drawBox__SWIG_0(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long) -> SwigDirector_btIDebugDraw_drawBox__SWIG_0
    void SwigDirector_btIDebugDraw_drawBox__SWIG_1(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,long,long,long) -> SwigDirector_btIDebugDraw_drawBox__SWIG_1
    void SwigDirector_btIDebugDraw_drawCapsule(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,long) -> SwigDirector_btIDebugDraw_drawCapsule
    void SwigDirector_btIDebugDraw_drawCylinder(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,long) -> SwigDirector_btIDebugDraw_drawCylinder
    void SwigDirector_btIDebugDraw_drawCone(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,float,float,int,long,long) -> SwigDirector_btIDebugDraw_drawCone
    void SwigDirector_btIDebugDraw_drawPlane(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,long,float,long,long) -> SwigDirector_btIDebugDraw_drawPlane
    void SwigDirector_btMotionState_getWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.math.Matrix4) -> SwigDirector_btMotionState_getWorldTransform
    void SwigDirector_btMotionState_setWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btMotionState,com.badlogic.gdx.math.Matrix4) -> SwigDirector_btMotionState_setWorldTransform
    void swig_module_init() -> swig_module_init
com.badlogic.gdx.physics.bullet.linearmath.PHullResult -> com.badlogic.gdx.physics.bullet.linearmath.PHullResult:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.PHullResult) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setMVcount(long) -> setMVcount
    long getMVcount() -> getMVcount
    void setMIndexCount(long) -> setMIndexCount
    long getMIndexCount() -> getMIndexCount
    void setMFaceCount(long) -> setMFaceCount
    long getMFaceCount() -> getMFaceCount
    void setMVertices(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setMVertices
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getMVertices() -> getMVertices
    void setIndices(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t) -> setIndices
    com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t getIndices() -> getIndices
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t -> com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_ConvexH__HalfEdge_t) -> getCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t -> com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_GrahamVector3_t) -> getCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t -> com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t) -> getCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t -> com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btPlane_t) -> getCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t -> com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t) -> getCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t -> com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_unsigned_int_t) -> getCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3DoubleData -> com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3DoubleData:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3DoubleData) -> getCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3FloatData -> com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3FloatData:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3FloatData) -> getCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_p_void__void -> com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_p_void__void:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_p_void__void) -> getCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t__p_void -> com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t__p_void:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t__p_void) -> getCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t_int__p_void -> com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t_int__p_void:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_f_size_t_int__p_void) -> getCPtr
com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float -> com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float) -> getCPtr
com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc -> com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btAngleCompareFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setAnchor(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAnchor
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAnchor() -> getAnchor
com.badlogic.gdx.physics.bullet.linearmath.btBlock -> com.badlogic.gdx.physics.bullet.linearmath.btBlock:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btBlock) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setPrevious(com.badlogic.gdx.physics.bullet.linearmath.btBlock) -> setPrevious
    com.badlogic.gdx.physics.bullet.linearmath.btBlock getPrevious() -> getPrevious
    void setAddress(java.nio.ByteBuffer) -> setAddress
    java.nio.ByteBuffer getAddress() -> getAddress
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer -> com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setVertices(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> setVertices
    com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getVertices() -> getVertices
    void setEdges(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t) -> setEdges
    com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_btConvexHullComputer__Edge_t getEdges() -> getEdges
    void setFaces(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t) -> setFaces
    com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btAlignedObjectArrayT_int_t getFaces() -> getFaces
    float compute(java.nio.FloatBuffer,int,int,float,float) -> compute
    float compute(java.nio.DoubleBuffer,int,int,float,float) -> compute
com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge -> com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int getSourceVertex() -> getSourceVertex
    int getTargetVertex() -> getTargetVertex
    com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge getNextEdgeOfVertex() -> getNextEdgeOfVertex
    com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge getNextEdgeOfFace() -> getNextEdgeOfFace
    com.badlogic.gdx.physics.bullet.linearmath.btConvexHullComputer$Edge getReverseEdge() -> getReverseEdge
com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil -> com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btConvexSeparatingDistanceUtil) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    float getConservativeSeparatingDistance() -> getConservativeSeparatingDistance
    void updateSeparatingDistance(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> updateSeparatingDistance
    void initSeparatingDistance(com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> initSeparatingDistance
com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState -> com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btDefaultMotionState) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setGraphicsWorldTrans(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setGraphicsWorldTrans
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getGraphicsWorldTrans() -> getGraphicsWorldTrans
    void setCenterOfMassOffset(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setCenterOfMassOffset
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getCenterOfMassOffset() -> getCenterOfMassOffset
    void setStartWorldTrans(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setStartWorldTrans
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getStartWorldTrans() -> getStartWorldTrans
    void setUserPointer(long) -> setUserPointer
    long getUserPointer() -> getUserPointer
    void getGraphicsWorldTrans(com.badlogic.gdx.math.Matrix4) -> getGraphicsWorldTrans
    void getCenterOfMassOffset(com.badlogic.gdx.math.Matrix4) -> getCenterOfMassOffset
    void getStartWorldTrans(com.badlogic.gdx.math.Matrix4) -> getStartWorldTrans
com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link -> com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link getNext() -> getNext
    com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link getPrev() -> getPrev
    boolean isHead() -> isHead
    boolean isTail() -> isTail
    void insertBefore(com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link) -> insertBefore
    void insertAfter(com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link) -> insertAfter
    void remove() -> remove
com.badlogic.gdx.physics.bullet.linearmath.btGEN_List -> com.badlogic.gdx.physics.bullet.linearmath.btGEN_List:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btGEN_List) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link getHead() -> getHead
    com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link getTail() -> getTail
    void addHead(com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link) -> addHead
    void addTail(com.badlogic.gdx.physics.bullet.linearmath.btGEN_Link) -> addTail
com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil -> com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btGeometryUtil) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void getPlaneEquationsFromVertices(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> getPlaneEquationsFromVertices
    void getVerticesFromPlaneEquations(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> getVerticesFromPlaneEquations
    boolean isInside(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3,float) -> isInside
    boolean isPointInsidePlanes(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,com.badlogic.gdx.math.Vector3,float) -> isPointInsidePlanes
    boolean areVerticesBehindPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array,float) -> areVerticesBehindPlane
com.badlogic.gdx.physics.bullet.linearmath.btHashInt -> com.badlogic.gdx.physics.bullet.linearmath.btHashInt:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btHashInt) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int getUid1() -> getUid1
    void setUid1(int) -> setUid1
    boolean equals(com.badlogic.gdx.physics.bullet.linearmath.btHashInt) -> equals
    long getHash() -> getHash
com.badlogic.gdx.physics.bullet.linearmath.btHashPtr -> com.badlogic.gdx.physics.bullet.linearmath.btHashPtr:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btHashPtr) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    long getPointer() -> getPointer
    boolean equals(com.badlogic.gdx.physics.bullet.linearmath.btHashPtr) -> equals
    long getHash() -> getHash
com.badlogic.gdx.physics.bullet.linearmath.btHashString -> com.badlogic.gdx.physics.bullet.linearmath.btHashString:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btHashString) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setString(java.lang.String) -> setString
    java.lang.String getString() -> getString
    void setHash(long) -> setHash
    long getHash() -> getHash
    int portableStringCompare(java.lang.String,java.lang.String) -> portableStringCompare
    boolean equals(com.badlogic.gdx.physics.bullet.linearmath.btHashString) -> equals
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw -> com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void drawLine(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> drawLine
    void drawLine(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> drawLine
    void drawSphere(float,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> drawSphere
    void drawSphere(com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> drawSphere
    void drawTriangle(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float) -> drawTriangle
    void drawTriangle(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float) -> drawTriangle
    void drawContactPoint(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,int,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> drawContactPoint
    void reportErrorWarning(java.lang.String) -> reportErrorWarning
    void draw3dText(com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.lang.String) -> draw3dText
    void setDebugMode(int) -> setDebugMode
    int getDebugMode() -> getDebugMode
    void drawAabb(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> drawAabb
    void drawTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransform,float) -> drawTransform
    void drawArc(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,com.badlogic.gdx.physics.bullet.linearmath.btVector3,boolean,float) -> drawArc
    void drawArc(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,com.badlogic.gdx.physics.bullet.linearmath.btVector3,boolean) -> drawArc
    void drawSpherePatch(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,boolean) -> drawSpherePatch
    void drawSpherePatch(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float) -> drawSpherePatch
    void drawSpherePatch(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,float,float,float,float,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> drawSpherePatch
    void drawBox(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> drawBox
    void drawBox(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> drawBox
    void drawCapsule(float,float,int,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> drawCapsule
    void drawCylinder(float,float,int,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> drawCylinder
    void drawCone(float,float,int,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> drawCone
    void drawPlane(com.badlogic.gdx.physics.bullet.linearmath.btVector3,float,com.badlogic.gdx.physics.bullet.linearmath.btTransform,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> drawPlane
com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes -> com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw$DebugDrawModes:
    int DBG_NoDebug -> DBG_NoDebug
    int DBG_DrawWireframe -> DBG_DrawWireframe
    int DBG_DrawAabb -> DBG_DrawAabb
    int DBG_DrawFeaturesText -> DBG_DrawFeaturesText
    int DBG_DrawContactPoints -> DBG_DrawContactPoints
    int DBG_NoDeactivation -> DBG_NoDeactivation
    int DBG_NoHelpText -> DBG_NoHelpText
    int DBG_DrawText -> DBG_DrawText
    int DBG_ProfileTimings -> DBG_ProfileTimings
    int DBG_EnableSatComparison -> DBG_EnableSatComparison
    int DBG_DisableBulletLCP -> DBG_DisableBulletLCP
    int DBG_EnableCCD -> DBG_EnableCCD
    int DBG_DrawConstraints -> DBG_DrawConstraints
    int DBG_DrawConstraintLimits -> DBG_DrawConstraintLimits
    int DBG_FastWireframe -> DBG_FastWireframe
    int DBG_DrawNormals -> DBG_DrawNormals
    int DBG_MAX_DEBUG_DRAW_MODE -> DBG_MAX_DEBUG_DRAW_MODE
com.badlogic.gdx.physics.bullet.linearmath.btMotionState -> com.badlogic.gdx.physics.bullet.linearmath.btMotionState:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btMotionState) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void swigDirectorDisconnect() -> swigDirectorDisconnect
    void swigReleaseOwnership() -> swigReleaseOwnership
    void swigTakeOwnership() -> swigTakeOwnership
    void getWorldTransform(com.badlogic.gdx.math.Matrix4) -> getWorldTransform
    void setWorldTransform(com.badlogic.gdx.math.Matrix4) -> setWorldTransform
com.badlogic.gdx.physics.bullet.linearmath.btPlane -> com.badlogic.gdx.physics.bullet.linearmath.btPlane:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btPlane) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setNormal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormal() -> getNormal
    void setDist(float) -> setDist
    float getDist() -> getDist
com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator -> com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btPoolAllocator) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int getFreeCount() -> getFreeCount
    int getUsedCount() -> getUsedCount
    int getMaxCount() -> getMaxCount
    long allocate(int) -> allocate
    boolean validPtr(long) -> validPtr
    void freeMemory(long) -> freeMemory
    int getElementSize() -> getElementSize
    java.nio.ByteBuffer getPoolAddress() -> getPoolAddress
com.badlogic.gdx.physics.bullet.linearmath.btQuaternion -> com.badlogic.gdx.physics.bullet.linearmath.btQuaternion:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btQuaternion) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setRotation(com.badlogic.gdx.math.Vector3,float) -> setRotation
    void setEuler(float,float,float) -> setEuler
    void setEulerZYX(float,float,float) -> setEulerZYX
    float dot(com.badlogic.gdx.math.Quaternion) -> dot
    float length2() -> length2
    float length() -> length
    com.badlogic.gdx.math.Quaternion normalize() -> normalize
    com.badlogic.gdx.math.Quaternion normalized() -> normalized
    float angle(com.badlogic.gdx.math.Quaternion) -> angle
    float angleShortestPath(com.badlogic.gdx.math.Quaternion) -> angleShortestPath
    float getAngle() -> getAngle
    float getAngleShortestPath() -> getAngleShortestPath
    com.badlogic.gdx.math.Vector3 getAxis() -> getAxis
    com.badlogic.gdx.math.Quaternion inverse() -> inverse
    com.badlogic.gdx.math.Quaternion farthest(com.badlogic.gdx.math.Quaternion) -> farthest
    com.badlogic.gdx.math.Quaternion nearest(com.badlogic.gdx.math.Quaternion) -> nearest
    com.badlogic.gdx.math.Quaternion slerp(com.badlogic.gdx.math.Quaternion,float) -> slerp
    com.badlogic.gdx.math.Quaternion getIdentity() -> getIdentity
    float getW() -> getW
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray -> com.badlogic.gdx.physics.bullet.linearmath.btScalarArray:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int size() -> size
    float at(int) -> at
    void clear() -> clear
    void pop_back() -> pop_back
    void resizeNoInitialize(int) -> resizeNoInitialize
    void resize(int,float) -> resize
    void resize(int) -> resize
    com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float expandNonInitializing() -> expandNonInitializing
    com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float expand(float) -> expand
    com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float expand() -> expand
    void push_back(float) -> push_back
    int capacity() -> capacity
    void reserve(int) -> reserve
    void swap(int,int) -> swap
    int findBinarySearch(float) -> findBinarySearch
    int findLinearSearch(float) -> findLinearSearch
    void remove(float) -> remove
    void initializeFromBuffer(long,int,int) -> initializeFromBuffer
    void copyFromArray(com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> copyFromArray
com.badlogic.gdx.physics.bullet.linearmath.btScalarArray$less -> com.badlogic.gdx.physics.bullet.linearmath.btScalarArray$less:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btScalarArray$less) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc -> com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btStackAlloc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void create(long) -> create
    void destroy() -> destroy
    int getAvailableMemory() -> getAvailableMemory
    java.nio.ByteBuffer allocate(long) -> allocate
    com.badlogic.gdx.physics.bullet.linearmath.btBlock beginBlock() -> beginBlock
    void endBlock(com.badlogic.gdx.physics.bullet.linearmath.btBlock) -> endBlock
com.badlogic.gdx.physics.bullet.linearmath.btTransform -> com.badlogic.gdx.physics.bullet.linearmath.btTransform:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void mult(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4) -> mult
    com.badlogic.gdx.math.Matrix3 getBasis() -> getBasis
    com.badlogic.gdx.math.Vector3 getOrigin() -> getOrigin
    com.badlogic.gdx.math.Quaternion getRotation() -> getRotation
    void setFromOpenGLMatrix(float[]) -> setFromOpenGLMatrix
    void getOpenGLMatrix(float[]) -> getOpenGLMatrix
    void setOrigin(com.badlogic.gdx.math.Vector3) -> setOrigin
    com.badlogic.gdx.math.Vector3 invXform(com.badlogic.gdx.math.Vector3) -> invXform
    void setBasis(com.badlogic.gdx.math.Matrix3) -> setBasis
    void setRotation(com.badlogic.gdx.math.Quaternion) -> setRotation
    void setIdentity() -> setIdentity
    com.badlogic.gdx.math.Matrix4 inverse() -> inverse
    com.badlogic.gdx.math.Matrix4 inverseTimes(com.badlogic.gdx.math.Matrix4) -> inverseTimes
    com.badlogic.gdx.math.Matrix4 getIdentity() -> getIdentity
    void serialize(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> serialize
    void serializeFloat(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> serializeFloat
    void deSerialize(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> deSerialize
    void deSerializeDouble(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> deSerializeDouble
    void deSerializeFloat(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> deSerializeFloat
com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData -> com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btTransformDoubleData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setBasis(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3DoubleData) -> setBasis
    com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3DoubleData getBasis() -> getBasis
    void setOrigin(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> setOrigin
    com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData getOrigin() -> getOrigin
com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData -> com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setBasis(com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3FloatData) -> setBasis
    com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_btMatrix3x3FloatData getBasis() -> getBasis
    void setOrigin(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setOrigin
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getOrigin() -> getOrigin
com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil -> com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btTransformUtil) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void integrateTransform(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix4) -> integrateTransform
    void calculateVelocityQuaternion(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> calculateVelocityQuaternion
    void calculateDiffAxisAngleQuaternion(com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Quaternion,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float) -> calculateDiffAxisAngleQuaternion
    void calculateVelocity(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> calculateVelocity
    void calculateDiffAxisAngle(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float) -> calculateDiffAxisAngle
com.badlogic.gdx.physics.bullet.linearmath.btTypedObject -> com.badlogic.gdx.physics.bullet.linearmath.btTypedObject:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btTypedObject) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setObjectType(int) -> setObjectType
    int getObjectType() -> getObjectType
com.badlogic.gdx.physics.bullet.linearmath.btVector3 -> com.badlogic.gdx.physics.bullet.linearmath.btVector3:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setFloats(float[]) -> setFloats
    float[] getFloats() -> getFloats
    float dot(com.badlogic.gdx.math.Vector3) -> dot
    float length2() -> length2
    float length() -> length
    float norm() -> norm
    float distance2(com.badlogic.gdx.math.Vector3) -> distance2
    float distance(com.badlogic.gdx.math.Vector3) -> distance
    com.badlogic.gdx.math.Vector3 safeNormalize() -> safeNormalize
    com.badlogic.gdx.math.Vector3 normalize() -> normalize
    com.badlogic.gdx.math.Vector3 normalized() -> normalized
    com.badlogic.gdx.math.Vector3 rotate(com.badlogic.gdx.math.Vector3,float) -> rotate
    float angle(com.badlogic.gdx.math.Vector3) -> angle
    com.badlogic.gdx.math.Vector3 absolute() -> absolute
    com.badlogic.gdx.math.Vector3 cross(com.badlogic.gdx.math.Vector3) -> cross
    float triple(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> triple
    int minAxis() -> minAxis
    int maxAxis() -> maxAxis
    int furthestAxis() -> furthestAxis
    int closestAxis() -> closestAxis
    void setInterpolate3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> setInterpolate3
    com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float) -> lerp
    float getX() -> getX
    float getY() -> getY
    float getZ() -> getZ
    void setX(float) -> setX
    void setY(float) -> setY
    void setZ(float) -> setZ
    void setW(float) -> setW
    float x() -> x
    float y() -> y
    float z() -> z
    float w() -> w
    void setMax(com.badlogic.gdx.math.Vector3) -> setMax
    void setMin(com.badlogic.gdx.math.Vector3) -> setMin
    void setValue(float,float,float) -> setValue
    void getSkewSymmetricMatrix(com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> getSkewSymmetricMatrix
    void setZero() -> setZero
    boolean isZero() -> isZero
    boolean fuzzyZero() -> fuzzyZero
    void serialize(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> serialize
    void deSerialize(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> deSerialize
    void serializeFloat(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> serializeFloat
    void deSerializeFloat(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> deSerializeFloat
    void serializeDouble(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> serializeDouble
    void deSerializeDouble(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> deSerializeDouble
    int maxDot(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float) -> maxDot
    int minDot(com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,com.badlogic.gdx.physics.bullet.linearmath.SWIGTYPE_p_float) -> minDot
    com.badlogic.gdx.math.Vector3 dot3(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> dot3
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array -> com.badlogic.gdx.physics.bullet.linearmath.btVector3Array:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int size() -> size
    com.badlogic.gdx.math.Vector3 at(int) -> at
    void clear() -> clear
    void pop_back() -> pop_back
    void resizeNoInitialize(int) -> resizeNoInitialize
    void resize(int,com.badlogic.gdx.math.Vector3) -> resize
    void resize(int) -> resize
    com.badlogic.gdx.math.Vector3 expandNonInitializing() -> expandNonInitializing
    com.badlogic.gdx.math.Vector3 expand(com.badlogic.gdx.math.Vector3) -> expand
    com.badlogic.gdx.math.Vector3 expand() -> expand
    void push_back(com.badlogic.gdx.math.Vector3) -> push_back
    int capacity() -> capacity
    void reserve(int) -> reserve
    void swap(int,int) -> swap
    int findBinarySearch(com.badlogic.gdx.math.Vector3) -> findBinarySearch
    int findLinearSearch(com.badlogic.gdx.math.Vector3) -> findLinearSearch
    void remove(com.badlogic.gdx.math.Vector3) -> remove
    void initializeFromBuffer(long,int,int) -> initializeFromBuffer
    void copyFromArray(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> copyFromArray
com.badlogic.gdx.physics.bullet.linearmath.btVector3Array$less -> com.badlogic.gdx.physics.bullet.linearmath.btVector3Array$less:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array$less) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData -> com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btVector3DoubleData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setFloats(double[]) -> setFloats
    double[] getFloats() -> getFloats
com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData -> com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setFloats(float[]) -> setFloats
    float[] getFloats() -> getFloats
com.badlogic.gdx.physics.bullet.linearmath.btVector4 -> com.badlogic.gdx.physics.bullet.linearmath.btVector4:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.btVector4) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    com.badlogic.gdx.physics.bullet.linearmath.btVector4 absolute4() -> absolute4
    float getW() -> getW
    int maxAxis4() -> maxAxis4
    int minAxis4() -> minAxis4
    int closestAxis4() -> closestAxis4
    void setValue(float,float,float,float) -> setValue
com.badlogic.gdx.physics.bullet.linearmath.int4 -> com.badlogic.gdx.physics.bullet.linearmath.int4:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.linearmath.int4) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setX(int) -> setX
    int getX() -> getX
    void setY(int) -> setY
    int getY() -> getY
    void setZ(int) -> setZ
    int getZ() -> getZ
    void setW(int) -> setW
    int getW() -> getW
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_a_3_1__a_3_1__float -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_a_3_1__a_3_1__float:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_a_3_1__a_3_1__float) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_bool_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_bool_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_bool_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_int_t -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_int_t:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_int_t) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3 -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btSoftBody__eFeature___ -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btSoftBody__eFeature___:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btSoftBody__eFeature___) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_f_p_btSoftBody_float_float__void -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_f_p_btSoftBody_float_float__void:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_f_p_btSoftBody_float_float__void) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_float -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_float:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_float) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_int -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_int:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_int) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_SoftBodyMaterialData -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_SoftBodyMaterialData:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_SoftBodyMaterialData) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node -> com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node:
    long swigCPtr -> swigCPtr
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node) -> getCPtr
com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData -> com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setFramexform(com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> setFramexform
    com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData getFramexform() -> getFramexform
    void setLocii(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData) -> setLocii
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData getLocii() -> getLocii
    void setInvwi(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData) -> setInvwi
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData getInvwi() -> getInvwi
    void setCom(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setCom
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getCom() -> getCom
    void setVimpulses(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setVimpulses
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getVimpulses() -> getVimpulses
    void setDimpulses(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setDimpulses
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getDimpulses() -> getDimpulses
    void setLv(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setLv
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLv() -> getLv
    void setAv(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setAv
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAv() -> getAv
    void setFramerefs(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setFramerefs
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getFramerefs() -> getFramerefs
    void setNodeIndices(java.nio.IntBuffer) -> setNodeIndices
    java.nio.IntBuffer getNodeIndices() -> getNodeIndices
    void setMasses(java.nio.FloatBuffer) -> setMasses
    java.nio.FloatBuffer getMasses() -> getMasses
    void setNumFrameRefs(int) -> setNumFrameRefs
    int getNumFrameRefs() -> getNumFrameRefs
    void setNumNodes(int) -> setNumNodes
    int getNumNodes() -> getNumNodes
    void setNumMasses(int) -> setNumMasses
    int getNumMasses() -> getNumMasses
    void setIdmass(float) -> setIdmass
    float getIdmass() -> getIdmass
    void setImass(float) -> setImass
    float getImass() -> getImass
    void setNvimpulses(int) -> setNvimpulses
    int getNvimpulses() -> getNvimpulses
    void setNdimpulses(int) -> setNdimpulses
    int getNdimpulses() -> getNdimpulses
    void setNdamping(float) -> setNdamping
    float getNdamping() -> getNdamping
    void setLdamping(float) -> setLdamping
    float getLdamping() -> getLdamping
    void setAdamping(float) -> setAdamping
    float getAdamping() -> getAdamping
    void setMatching(float) -> setMatching
    float getMatching() -> getMatching
    void setMaxSelfCollisionImpulse(float) -> setMaxSelfCollisionImpulse
    float getMaxSelfCollisionImpulse() -> getMaxSelfCollisionImpulse
    void setSelfCollisionImpulseFactor(float) -> setSelfCollisionImpulseFactor
    float getSelfCollisionImpulseFactor() -> getSelfCollisionImpulseFactor
    void setContainsAnchor(int) -> setContainsAnchor
    int getContainsAnchor() -> getContainsAnchor
    void setCollide(int) -> setCollide
    int getCollide() -> getCollide
    void setClusterIndex(int) -> setClusterIndex
    int getClusterIndex() -> getClusterIndex
com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData -> com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setAeroModel(int) -> setAeroModel
    int getAeroModel() -> getAeroModel
    void setBaumgarte(float) -> setBaumgarte
    float getBaumgarte() -> getBaumgarte
    void setDamping(float) -> setDamping
    float getDamping() -> getDamping
    void setDrag(float) -> setDrag
    float getDrag() -> getDrag
    void setLift(float) -> setLift
    float getLift() -> getLift
    void setPressure(float) -> setPressure
    float getPressure() -> getPressure
    void setVolume(float) -> setVolume
    float getVolume() -> getVolume
    void setDynamicFriction(float) -> setDynamicFriction
    float getDynamicFriction() -> getDynamicFriction
    void setPoseMatch(float) -> setPoseMatch
    float getPoseMatch() -> getPoseMatch
    void setRigidContactHardness(float) -> setRigidContactHardness
    float getRigidContactHardness() -> getRigidContactHardness
    void setKineticContactHardness(float) -> setKineticContactHardness
    float getKineticContactHardness() -> getKineticContactHardness
    void setSoftContactHardness(float) -> setSoftContactHardness
    float getSoftContactHardness() -> getSoftContactHardness
    void setAnchorHardness(float) -> setAnchorHardness
    float getAnchorHardness() -> getAnchorHardness
    void setSoftRigidClusterHardness(float) -> setSoftRigidClusterHardness
    float getSoftRigidClusterHardness() -> getSoftRigidClusterHardness
    void setSoftKineticClusterHardness(float) -> setSoftKineticClusterHardness
    float getSoftKineticClusterHardness() -> getSoftKineticClusterHardness
    void setSoftSoftClusterHardness(float) -> setSoftSoftClusterHardness
    float getSoftSoftClusterHardness() -> getSoftSoftClusterHardness
    void setSoftRigidClusterImpulseSplit(float) -> setSoftRigidClusterImpulseSplit
    float getSoftRigidClusterImpulseSplit() -> getSoftRigidClusterImpulseSplit
    void setSoftKineticClusterImpulseSplit(float) -> setSoftKineticClusterImpulseSplit
    float getSoftKineticClusterImpulseSplit() -> getSoftKineticClusterImpulseSplit
    void setSoftSoftClusterImpulseSplit(float) -> setSoftSoftClusterImpulseSplit
    float getSoftSoftClusterImpulseSplit() -> getSoftSoftClusterImpulseSplit
    void setMaxVolume(float) -> setMaxVolume
    float getMaxVolume() -> getMaxVolume
    void setTimeScale(float) -> setTimeScale
    float getTimeScale() -> getTimeScale
    void setVelocityIterations(int) -> setVelocityIterations
    int getVelocityIterations() -> getVelocityIterations
    void setPositionIterations(int) -> setPositionIterations
    int getPositionIterations() -> getPositionIterations
    void setDriftIterations(int) -> setDriftIterations
    int getDriftIterations() -> getDriftIterations
    void setClusterIterations(int) -> setClusterIterations
    int getClusterIterations() -> getClusterIterations
    void setCollisionFlags(int) -> setCollisionFlags
    int getCollisionFlags() -> getCollisionFlags
com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData -> com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setNormal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getNormal() -> getNormal
    void setMaterial(com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData) -> setMaterial
    com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData getMaterial() -> getMaterial
    void setNodeIndices(int[]) -> setNodeIndices
    int[] getNodeIndices() -> getNodeIndices
    void setRestArea(float) -> setRestArea
    float getRestArea() -> getRestArea
com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData -> com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setMaterial(com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData) -> setMaterial
    com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData getMaterial() -> getMaterial
    void setNodeIndices(int[]) -> setNodeIndices
    int[] getNodeIndices() -> getNodeIndices
    void setRestLength(float) -> setRestLength
    float getRestLength() -> getRestLength
    void setBbending(int) -> setBbending
    int getBbending() -> getBbending
com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData -> com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setLinearStiffness(float) -> setLinearStiffness
    float getLinearStiffness() -> getLinearStiffness
    void setAngularStiffness(float) -> setAngularStiffness
    float getAngularStiffness() -> getAngularStiffness
    void setVolumeStiffness(float) -> setVolumeStiffness
    float getVolumeStiffness() -> getVolumeStiffness
    void setFlags(int) -> setFlags
    int getFlags() -> getFlags
com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData -> com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setMaterial(com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData) -> setMaterial
    com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData getMaterial() -> getMaterial
    void setPosition(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setPosition
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getPosition() -> getPosition
    void setPreviousPosition(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setPreviousPosition
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getPreviousPosition() -> getPreviousPosition
    void setVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getVelocity() -> getVelocity
    void setAccumulatedForce(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setAccumulatedForce
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getAccumulatedForce() -> getAccumulatedForce
    void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setNormal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getNormal() -> getNormal
    void setInverseMass(float) -> setInverseMass
    float getInverseMass() -> getInverseMass
    void setArea(float) -> setArea
    float getArea() -> getArea
    void setAttach(int) -> setAttach
    int getAttach() -> getAttach
    void setPad(int) -> setPad
    int getPad() -> getPad
com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData -> com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setRot(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData) -> setRot
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData getRot() -> getRot
    void setScale(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData) -> setScale
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData getScale() -> getScale
    void setAqq(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData) -> setAqq
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData getAqq() -> getAqq
    void setCom(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setCom
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getCom() -> getCom
    void setPositions(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setPositions
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getPositions() -> getPositions
    void setWeights(java.nio.FloatBuffer) -> setWeights
    java.nio.FloatBuffer getWeights() -> getWeights
    void setNumPositions(int) -> setNumPositions
    int getNumPositions() -> getNumPositions
    void setNumWeigts(int) -> setNumWeigts
    int getNumWeigts() -> getNumWeigts
    void setBvolume(int) -> setBvolume
    int getBvolume() -> getBvolume
    void setBframe(int) -> setBframe
    int getBframe() -> getBframe
    void setRestVolume(float) -> setRestVolume
    float getRestVolume() -> getRestVolume
    void setPad(int) -> setPad
    int getPad() -> getPad
com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData -> com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setC0(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setC0
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getC0() -> getC0
    void setMaterial(com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData) -> setMaterial
    com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData getMaterial() -> getMaterial
    void setNodeIndices(int[]) -> setNodeIndices
    int[] getNodeIndices() -> getNodeIndices
    void setRestVolume(float) -> setRestVolume
    float getRestVolume() -> getRestVolume
    void setC1(float) -> setC1
    float getC1() -> getC1
    void setC2(float) -> setC2
    float getC2() -> getC2
    void setPad(int) -> setPad
    int getPad() -> getPad
com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData -> com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setC0(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData) -> setC0
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3FloatData getC0() -> getC0
    void setC1(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setC1
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getC1() -> getC1
    void setLocalFrame(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setLocalFrame
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getLocalFrame() -> getLocalFrame
    void setRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> setRigidBody
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData getRigidBody() -> getRigidBody
    void setNodeIndex(int) -> setNodeIndex
    int getNodeIndex() -> getNodeIndex
    void setC2(float) -> setC2
    float getC2() -> getC2
com.badlogic.gdx.physics.bullet.softbody.Softbody -> com.badlogic.gdx.physics.bullet.softbody.Softbody:
    com.badlogic.gdx.math.Vector3 staticVector3 -> staticVector3
    com.badlogic.gdx.utils.Pool poolVector3 -> poolVector3
    com.badlogic.gdx.math.Quaternion staticQuaternion -> staticQuaternion
    com.badlogic.gdx.utils.Pool poolQuaternion -> poolQuaternion
    com.badlogic.gdx.math.Matrix3 staticMatrix3 -> staticMatrix3
    com.badlogic.gdx.utils.Pool poolMatrix3 -> poolMatrix3
    com.badlogic.gdx.math.Matrix4 staticMatrix4 -> staticMatrix4
    com.badlogic.gdx.utils.Pool poolMatrix4 -> poolMatrix4
    com.badlogic.gdx.math.Matrix3 Lerp(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,float) -> Lerp
    com.badlogic.gdx.math.Vector3 Clamp(com.badlogic.gdx.math.Vector3,float) -> Clamp
    float ClusterMetric(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ClusterMetric
    com.badlogic.gdx.math.Matrix3 ScaleAlongAxis(com.badlogic.gdx.math.Vector3,float) -> ScaleAlongAxis
    com.badlogic.gdx.math.Matrix3 Cross(com.badlogic.gdx.math.Vector3) -> Cross
    com.badlogic.gdx.math.Matrix3 Diagonal(float) -> Diagonal
    com.badlogic.gdx.math.Matrix3 Add(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3) -> Add
    com.badlogic.gdx.math.Matrix3 Sub(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3) -> Sub
    com.badlogic.gdx.math.Matrix3 Mul(com.badlogic.gdx.math.Matrix3,float) -> Mul
    void Orthogonalize(com.badlogic.gdx.math.Matrix3) -> Orthogonalize
    com.badlogic.gdx.math.Matrix3 MassMatrix(float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3) -> MassMatrix
    com.badlogic.gdx.math.Matrix3 ImpulseMatrix(float,float,float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3) -> ImpulseMatrix
    com.badlogic.gdx.math.Matrix3 ImpulseMatrix(float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3) -> ImpulseMatrix
    com.badlogic.gdx.math.Matrix3 AngularImpulseMatrix(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3) -> AngularImpulseMatrix
    com.badlogic.gdx.math.Vector3 ProjectOnAxis(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ProjectOnAxis
    com.badlogic.gdx.math.Vector3 ProjectOnPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ProjectOnPlane
    void ProjectOrigin(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_float) -> ProjectOrigin
    void ProjectOrigin(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_float) -> ProjectOrigin
    com.badlogic.gdx.math.Vector3 BaryCoord(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> BaryCoord
    float ImplicitSolve(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,int) -> ImplicitSolve
    float ImplicitSolve(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> ImplicitSolve
    com.badlogic.gdx.math.Vector3 NormalizeAny(com.badlogic.gdx.math.Vector3) -> NormalizeAny
    com.badlogic.gdx.physics.bullet.collision.btDbvtAabbMm VolumeOf(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face,float) -> VolumeOf
    com.badlogic.gdx.math.Vector3 CenterOf(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face) -> CenterOf
    float AreaOf(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> AreaOf
    float VolumeOf(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> VolumeOf
    void EvaluateMedium(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium) -> EvaluateMedium
    void ApplyClampedForce(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.math.Vector3,float) -> ApplyClampedForce
    int MatchEdge(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> MatchEdge
    int PolarDecompose(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3) -> PolarDecompose
com.badlogic.gdx.physics.bullet.softbody.Softbody$1 -> com.badlogic.gdx.physics.bullet.softbody.Softbody$1:
    com.badlogic.gdx.math.Vector3 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.softbody.Softbody$2 -> com.badlogic.gdx.physics.bullet.softbody.Softbody$2:
    com.badlogic.gdx.math.Quaternion newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.softbody.Softbody$3 -> com.badlogic.gdx.physics.bullet.softbody.Softbody$3:
    com.badlogic.gdx.math.Matrix3 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.softbody.Softbody$4 -> com.badlogic.gdx.physics.bullet.softbody.Softbody$4:
    com.badlogic.gdx.math.Matrix4 newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.physics.bullet.softbody.SoftbodyConstants -> com.badlogic.gdx.physics.bullet.softbody.SoftbodyConstants:
    java.lang.String btSoftBodyDataName -> btSoftBodyDataName
com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI -> com.badlogic.gdx.physics.bullet.softbody.SoftbodyJNI:
    void delete_btSoftBodySolver(long) -> delete_btSoftBodySolver
    int btSoftBodySolver_getSolverType(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver) -> btSoftBodySolver_getSolverType
    boolean btSoftBodySolver_checkInitialized(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver) -> btSoftBodySolver_checkInitialized
    void btSoftBodySolver_optimize__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,long,boolean) -> btSoftBodySolver_optimize__SWIG_0
    void btSoftBodySolver_optimize__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,long) -> btSoftBodySolver_optimize__SWIG_1
    void btSoftBodySolver_copyBackToSoftBodies__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,boolean) -> btSoftBodySolver_copyBackToSoftBodies__SWIG_0
    void btSoftBodySolver_copyBackToSoftBodies__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver) -> btSoftBodySolver_copyBackToSoftBodies__SWIG_1
    void btSoftBodySolver_predictMotion(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,float) -> btSoftBodySolver_predictMotion
    void btSoftBodySolver_solveConstraints(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,float) -> btSoftBodySolver_solveConstraints
    void btSoftBodySolver_updateSoftBodies(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver) -> btSoftBodySolver_updateSoftBodies
    void btSoftBodySolver_processCollision__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btSoftBodySolver_processCollision__SWIG_0
    void btSoftBodySolver_processCollision__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBodySolver_processCollision__SWIG_1
    void btSoftBodySolver_setNumberOfPositionIterations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,int) -> btSoftBodySolver_setNumberOfPositionIterations
    int btSoftBodySolver_getNumberOfPositionIterations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver) -> btSoftBodySolver_getNumberOfPositionIterations
    void btSoftBodySolver_setNumberOfVelocityIterations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver,int) -> btSoftBodySolver_setNumberOfVelocityIterations
    int btSoftBodySolver_getNumberOfVelocityIterations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver) -> btSoftBodySolver_getNumberOfVelocityIterations
    float btSoftBodySolver_getTimeScale(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver) -> btSoftBodySolver_getTimeScale
    void delete_btSoftBodySolverOutput(long) -> delete_btSoftBodySolverOutput
    void btSoftBodySolverOutput_copySoftBodyToVertexBuffer(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolverOutput,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor) -> btSoftBodySolverOutput_copySoftBodyToVertexBuffer
    long new_btDefaultSoftBodySolver() -> new_btDefaultSoftBodySolver
    void delete_btDefaultSoftBodySolver(long) -> delete_btDefaultSoftBodySolver
    void btDefaultSoftBodySolver_optimize__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver,long,boolean) -> btDefaultSoftBodySolver_optimize__SWIG_0
    void btDefaultSoftBodySolver_optimize__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver,long) -> btDefaultSoftBodySolver_optimize__SWIG_1
    void btDefaultSoftBodySolver_copyBackToSoftBodies__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver,boolean) -> btDefaultSoftBodySolver_copyBackToSoftBodies__SWIG_0
    void btDefaultSoftBodySolver_copyBackToSoftBodies__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver) -> btDefaultSoftBodySolver_copyBackToSoftBodies__SWIG_1
    void btDefaultSoftBodySolver_copySoftBodyToVertexBuffer(long,com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor) -> btDefaultSoftBodySolver_copySoftBodyToVertexBuffer
    void btDefaultSoftBodySolver_processCollision__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btDefaultSoftBodySolver_processCollision__SWIG_0
    void btDefaultSoftBodySolver_processCollision__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btDefaultSoftBodySolver_processCollision__SWIG_1
    void btSparseSdf3_IntFrac_b_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac,int) -> btSparseSdf3_IntFrac_b_set
    int btSparseSdf3_IntFrac_b_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac) -> btSparseSdf3_IntFrac_b_get
    void btSparseSdf3_IntFrac_i_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac,int) -> btSparseSdf3_IntFrac_i_set
    int btSparseSdf3_IntFrac_i_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac) -> btSparseSdf3_IntFrac_i_get
    void btSparseSdf3_IntFrac_f_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac,float) -> btSparseSdf3_IntFrac_f_set
    float btSparseSdf3_IntFrac_f_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac) -> btSparseSdf3_IntFrac_f_get
    long new_btSparseSdf3_IntFrac() -> new_btSparseSdf3_IntFrac
    void delete_btSparseSdf3_IntFrac(long) -> delete_btSparseSdf3_IntFrac
    void btSparseSdf3_Cell_d_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell,long) -> btSparseSdf3_Cell_d_set
    long btSparseSdf3_Cell_d_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell) -> btSparseSdf3_Cell_d_get
    void btSparseSdf3_Cell_c_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell,int[]) -> btSparseSdf3_Cell_c_set
    int[] btSparseSdf3_Cell_c_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell) -> btSparseSdf3_Cell_c_get
    void btSparseSdf3_Cell_puid_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell,int) -> btSparseSdf3_Cell_puid_set
    int btSparseSdf3_Cell_puid_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell) -> btSparseSdf3_Cell_puid_get
    void btSparseSdf3_Cell_hash_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell,long) -> btSparseSdf3_Cell_hash_set
    long btSparseSdf3_Cell_hash_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell) -> btSparseSdf3_Cell_hash_get
    void btSparseSdf3_Cell_pclient_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btSparseSdf3_Cell_pclient_set
    long btSparseSdf3_Cell_pclient_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell) -> btSparseSdf3_Cell_pclient_get
    void btSparseSdf3_Cell_next_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell,long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell) -> btSparseSdf3_Cell_next_set
    long btSparseSdf3_Cell_next_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell) -> btSparseSdf3_Cell_next_get
    long new_btSparseSdf3_Cell() -> new_btSparseSdf3_Cell
    void delete_btSparseSdf3_Cell(long) -> delete_btSparseSdf3_Cell
    void btSparseSdf3_cells_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,long) -> btSparseSdf3_cells_set
    long btSparseSdf3_cells_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3) -> btSparseSdf3_cells_get
    void btSparseSdf3_voxelsz_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,float) -> btSparseSdf3_voxelsz_set
    float btSparseSdf3_voxelsz_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3) -> btSparseSdf3_voxelsz_get
    void btSparseSdf3_puid_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int) -> btSparseSdf3_puid_set
    int btSparseSdf3_puid_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3) -> btSparseSdf3_puid_get
    void btSparseSdf3_ncells_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int) -> btSparseSdf3_ncells_set
    int btSparseSdf3_ncells_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3) -> btSparseSdf3_ncells_get
    void btSparseSdf3_clampCells_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int) -> btSparseSdf3_clampCells_set
    int btSparseSdf3_clampCells_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3) -> btSparseSdf3_clampCells_get
    void btSparseSdf3_nprobes_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int) -> btSparseSdf3_nprobes_set
    int btSparseSdf3_nprobes_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3) -> btSparseSdf3_nprobes_get
    void btSparseSdf3_nqueries_set(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int) -> btSparseSdf3_nqueries_set
    int btSparseSdf3_nqueries_get(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3) -> btSparseSdf3_nqueries_get
    void btSparseSdf3_Initialize__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int,int) -> btSparseSdf3_Initialize__SWIG_0
    void btSparseSdf3_Initialize__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int) -> btSparseSdf3_Initialize__SWIG_1
    void btSparseSdf3_Initialize__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3) -> btSparseSdf3_Initialize__SWIG_2
    void btSparseSdf3_Reset(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3) -> btSparseSdf3_Reset
    void btSparseSdf3_GarbageCollect__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,int) -> btSparseSdf3_GarbageCollect__SWIG_0
    void btSparseSdf3_GarbageCollect__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3) -> btSparseSdf3_GarbageCollect__SWIG_1
    int btSparseSdf3_RemoveReferences(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btSparseSdf3_RemoveReferences
    float btSparseSdf3_Evaluate(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3,float) -> btSparseSdf3_Evaluate
    void btSparseSdf3_BuildCell(long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3,long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell) -> btSparseSdf3_BuildCell
    float btSparseSdf3_DistanceToShape(com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btSparseSdf3_DistanceToShape
    long btSparseSdf3_Decompose(float) -> btSparseSdf3_Decompose
    float btSparseSdf3_Lerp(float,float,float) -> btSparseSdf3_Lerp
    long btSparseSdf3_Hash(int,int,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btSparseSdf3_Hash
    long new_btSparseSdf3() -> new_btSparseSdf3
    void delete_btSparseSdf3(long) -> delete_btSparseSdf3
    void btSoftBodyWorldInfo_air_density_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,float) -> btSoftBodyWorldInfo_air_density_set
    float btSoftBodyWorldInfo_air_density_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo) -> btSoftBodyWorldInfo_air_density_get
    void btSoftBodyWorldInfo_water_density_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,float) -> btSoftBodyWorldInfo_water_density_set
    float btSoftBodyWorldInfo_water_density_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo) -> btSoftBodyWorldInfo_water_density_get
    void btSoftBodyWorldInfo_water_offset_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,float) -> btSoftBodyWorldInfo_water_offset_set
    float btSoftBodyWorldInfo_water_offset_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo) -> btSoftBodyWorldInfo_water_offset_get
    void btSoftBodyWorldInfo_maxDisplacement_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,float) -> btSoftBodyWorldInfo_maxDisplacement_set
    float btSoftBodyWorldInfo_maxDisplacement_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo) -> btSoftBodyWorldInfo_maxDisplacement_get
    void btSoftBodyWorldInfo_water_normal_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBodyWorldInfo_water_normal_set
    long btSoftBodyWorldInfo_water_normal_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo) -> btSoftBodyWorldInfo_water_normal_get
    void btSoftBodyWorldInfo_broadphase_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface) -> btSoftBodyWorldInfo_broadphase_set
    long btSoftBodyWorldInfo_broadphase_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo) -> btSoftBodyWorldInfo_broadphase_get
    void btSoftBodyWorldInfo_dispatcher_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,long,com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> btSoftBodyWorldInfo_dispatcher_set
    long btSoftBodyWorldInfo_dispatcher_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo) -> btSoftBodyWorldInfo_dispatcher_get
    void btSoftBodyWorldInfo_gravity_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBodyWorldInfo_gravity_set
    long btSoftBodyWorldInfo_gravity_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo) -> btSoftBodyWorldInfo_gravity_get
    void btSoftBodyWorldInfo_sparsesdf_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,long,com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3) -> btSoftBodyWorldInfo_sparsesdf_set
    long btSoftBodyWorldInfo_sparsesdf_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo) -> btSoftBodyWorldInfo_sparsesdf_get
    long new_btSoftBodyWorldInfo() -> new_btSoftBodyWorldInfo
    void delete_btSoftBodyWorldInfo(long) -> delete_btSoftBodyWorldInfo
    void btSoftBody_collisionDisabledObjects_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray) -> btSoftBody_collisionDisabledObjects_set
    long btSoftBody_collisionDisabledObjects_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_collisionDisabledObjects_get
    void btSoftBody_softBodySolver_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver) -> btSoftBody_softBodySolver_set
    long btSoftBody_softBodySolver_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_softBodySolver_get
    long new_btSoftBody_eAeroModel() -> new_btSoftBody_eAeroModel
    void delete_btSoftBody_eAeroModel(long) -> delete_btSoftBody_eAeroModel
    long new_btSoftBody_eVSolver() -> new_btSoftBody_eVSolver
    void delete_btSoftBody_eVSolver(long) -> delete_btSoftBody_eVSolver
    long new_btSoftBody_ePSolver() -> new_btSoftBody_ePSolver
    void delete_btSoftBody_ePSolver(long) -> delete_btSoftBody_ePSolver
    long new_btSoftBody_eSolverPresets() -> new_btSoftBody_eSolverPresets
    void delete_btSoftBody_eSolverPresets(long) -> delete_btSoftBody_eSolverPresets
    long new_btSoftBody_eFeature() -> new_btSoftBody_eFeature
    void delete_btSoftBody_eFeature(long) -> delete_btSoftBody_eFeature
    long new_btSoftBody_fCollision() -> new_btSoftBody_fCollision
    void delete_btSoftBody_fCollision(long) -> delete_btSoftBody_fCollision
    long new_btSoftBody_fMaterial() -> new_btSoftBody_fMaterial
    void delete_btSoftBody_fMaterial(long) -> delete_btSoftBody_fMaterial
    void btSoftBody_sRayCast_body_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_sRayCast_body_set
    long btSoftBody_sRayCast_body_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast) -> btSoftBody_sRayCast_body_get
    void btSoftBody_sRayCast_feature_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast,int) -> btSoftBody_sRayCast_feature_set
    int btSoftBody_sRayCast_feature_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast) -> btSoftBody_sRayCast_feature_get
    void btSoftBody_sRayCast_index_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast,int) -> btSoftBody_sRayCast_index_set
    int btSoftBody_sRayCast_index_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast) -> btSoftBody_sRayCast_index_get
    void btSoftBody_sRayCast_fraction_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast,float) -> btSoftBody_sRayCast_fraction_set
    float btSoftBody_sRayCast_fraction_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast) -> btSoftBody_sRayCast_fraction_get
    long new_btSoftBody_sRayCast() -> new_btSoftBody_sRayCast
    void delete_btSoftBody_sRayCast(long) -> delete_btSoftBody_sRayCast
    float btSoftBody_ImplicitFn_Eval(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn,com.badlogic.gdx.math.Vector3) -> btSoftBody_ImplicitFn_Eval
    void delete_btSoftBody_ImplicitFn(long) -> delete_btSoftBody_ImplicitFn
    void btSoftBody_sCti_colObj_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btSoftBody_sCti_colObj_set
    long btSoftBody_sCti_colObj_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti) -> btSoftBody_sCti_colObj_get
    void btSoftBody_sCti_normal_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_sCti_normal_set
    long btSoftBody_sCti_normal_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti) -> btSoftBody_sCti_normal_get
    void btSoftBody_sCti_offset_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti,float) -> btSoftBody_sCti_offset_set
    float btSoftBody_sCti_offset_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti) -> btSoftBody_sCti_offset_get
    long new_btSoftBody_sCti() -> new_btSoftBody_sCti
    void delete_btSoftBody_sCti(long) -> delete_btSoftBody_sCti
    void btSoftBody_sMedium_velocity_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_sMedium_velocity_set
    long btSoftBody_sMedium_velocity_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium) -> btSoftBody_sMedium_velocity_get
    void btSoftBody_sMedium_pressure_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium,float) -> btSoftBody_sMedium_pressure_set
    float btSoftBody_sMedium_pressure_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium) -> btSoftBody_sMedium_pressure_get
    void btSoftBody_sMedium_density_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium,float) -> btSoftBody_sMedium_density_set
    float btSoftBody_sMedium_density_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium) -> btSoftBody_sMedium_density_get
    long new_btSoftBody_sMedium() -> new_btSoftBody_sMedium
    void delete_btSoftBody_sMedium(long) -> delete_btSoftBody_sMedium
    void btSoftBody_Element_tag_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element,long) -> btSoftBody_Element_tag_set
    long btSoftBody_Element_tag_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element) -> btSoftBody_Element_tag_get
    long new_btSoftBody_Element() -> new_btSoftBody_Element
    void delete_btSoftBody_Element(long) -> delete_btSoftBody_Element
    void btSoftBody_Material_kLST_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,float) -> btSoftBody_Material_kLST_set
    float btSoftBody_Material_kLST_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> btSoftBody_Material_kLST_get
    void btSoftBody_Material_kAST_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,float) -> btSoftBody_Material_kAST_set
    float btSoftBody_Material_kAST_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> btSoftBody_Material_kAST_get
    void btSoftBody_Material_kVST_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,float) -> btSoftBody_Material_kVST_set
    float btSoftBody_Material_kVST_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> btSoftBody_Material_kVST_get
    void btSoftBody_Material_flags_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,int) -> btSoftBody_Material_flags_set
    int btSoftBody_Material_flags_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> btSoftBody_Material_flags_get
    long new_btSoftBody_Material() -> new_btSoftBody_Material
    void delete_btSoftBody_Material(long) -> delete_btSoftBody_Material
    void btSoftBody_Feature_material_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> btSoftBody_Feature_material_set
    long btSoftBody_Feature_material_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature) -> btSoftBody_Feature_material_get
    long new_btSoftBody_Feature() -> new_btSoftBody_Feature
    void delete_btSoftBody_Feature(long) -> delete_btSoftBody_Feature
    void btSoftBody_Node_x_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Node_x_set
    long btSoftBody_Node_x_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_Node_x_get
    void btSoftBody_Node_q_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Node_q_set
    long btSoftBody_Node_q_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_Node_q_get
    void btSoftBody_Node_v_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Node_v_set
    long btSoftBody_Node_v_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_Node_v_get
    void btSoftBody_Node_f_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Node_f_set
    long btSoftBody_Node_f_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_Node_f_get
    void btSoftBody_Node_n_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Node_n_set
    long btSoftBody_Node_n_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_Node_n_get
    void btSoftBody_Node_im_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,float) -> btSoftBody_Node_im_set
    float btSoftBody_Node_im_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_Node_im_get
    void btSoftBody_Node_area_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,float) -> btSoftBody_Node_area_set
    float btSoftBody_Node_area_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_Node_area_get
    void btSoftBody_Node_leaf_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btSoftBody_Node_leaf_set
    long btSoftBody_Node_leaf_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_Node_leaf_get
    void btSoftBody_Node_battach_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,int) -> btSoftBody_Node_battach_set
    int btSoftBody_Node_battach_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_Node_battach_get
    long new_btSoftBody_Node() -> new_btSoftBody_Node
    void delete_btSoftBody_Node(long) -> delete_btSoftBody_Node
    void btSoftBody_Link_n_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link,long) -> btSoftBody_Link_n_set
    long btSoftBody_Link_n_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link) -> btSoftBody_Link_n_get
    void btSoftBody_Link_rl_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link,float) -> btSoftBody_Link_rl_set
    float btSoftBody_Link_rl_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link) -> btSoftBody_Link_rl_get
    void btSoftBody_Link_bbending_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link,int) -> btSoftBody_Link_bbending_set
    int btSoftBody_Link_bbending_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link) -> btSoftBody_Link_bbending_get
    void btSoftBody_Link_c0_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link,float) -> btSoftBody_Link_c0_set
    float btSoftBody_Link_c0_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link) -> btSoftBody_Link_c0_get
    void btSoftBody_Link_c1_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link,float) -> btSoftBody_Link_c1_set
    float btSoftBody_Link_c1_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link) -> btSoftBody_Link_c1_get
    void btSoftBody_Link_c2_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link,float) -> btSoftBody_Link_c2_set
    float btSoftBody_Link_c2_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link) -> btSoftBody_Link_c2_get
    void btSoftBody_Link_c3_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Link_c3_set
    long btSoftBody_Link_c3_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link) -> btSoftBody_Link_c3_get
    long new_btSoftBody_Link() -> new_btSoftBody_Link
    void delete_btSoftBody_Link(long) -> delete_btSoftBody_Link
    void btSoftBody_Face_n_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face,long) -> btSoftBody_Face_n_set
    long btSoftBody_Face_n_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face) -> btSoftBody_Face_n_get
    void btSoftBody_Face_normal_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Face_normal_set
    long btSoftBody_Face_normal_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face) -> btSoftBody_Face_normal_get
    void btSoftBody_Face_ra_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face,float) -> btSoftBody_Face_ra_set
    float btSoftBody_Face_ra_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face) -> btSoftBody_Face_ra_get
    void btSoftBody_Face_leaf_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btSoftBody_Face_leaf_set
    long btSoftBody_Face_leaf_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face) -> btSoftBody_Face_leaf_get
    long new_btSoftBody_Face() -> new_btSoftBody_Face
    void delete_btSoftBody_Face(long) -> delete_btSoftBody_Face
    void btSoftBody_Tetra_n_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra,long) -> btSoftBody_Tetra_n_set
    long btSoftBody_Tetra_n_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra) -> btSoftBody_Tetra_n_get
    void btSoftBody_Tetra_rv_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra,float) -> btSoftBody_Tetra_rv_set
    float btSoftBody_Tetra_rv_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra) -> btSoftBody_Tetra_rv_get
    void btSoftBody_Tetra_leaf_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btSoftBody_Tetra_leaf_set
    long btSoftBody_Tetra_leaf_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra) -> btSoftBody_Tetra_leaf_get
    void btSoftBody_Tetra_c0_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Tetra_c0_set
    long btSoftBody_Tetra_c0_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra) -> btSoftBody_Tetra_c0_get
    void btSoftBody_Tetra_c1_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra,float) -> btSoftBody_Tetra_c1_set
    float btSoftBody_Tetra_c1_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra) -> btSoftBody_Tetra_c1_get
    void btSoftBody_Tetra_c2_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra,float) -> btSoftBody_Tetra_c2_set
    float btSoftBody_Tetra_c2_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra) -> btSoftBody_Tetra_c2_get
    long new_btSoftBody_Tetra() -> new_btSoftBody_Tetra
    void delete_btSoftBody_Tetra(long) -> delete_btSoftBody_Tetra
    void btSoftBody_RContact_cti_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti) -> btSoftBody_RContact_cti_set
    long btSoftBody_RContact_cti_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact) -> btSoftBody_RContact_cti_get
    void btSoftBody_RContact_node_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_RContact_node_set
    long btSoftBody_RContact_node_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact) -> btSoftBody_RContact_node_get
    void btSoftBody_RContact_c0_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact,com.badlogic.gdx.math.Matrix3) -> btSoftBody_RContact_c0_set
    com.badlogic.gdx.math.Matrix3 btSoftBody_RContact_c0_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact) -> btSoftBody_RContact_c0_get
    void btSoftBody_RContact_c1_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_RContact_c1_set
    long btSoftBody_RContact_c1_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact) -> btSoftBody_RContact_c1_get
    void btSoftBody_RContact_c2_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact,float) -> btSoftBody_RContact_c2_set
    float btSoftBody_RContact_c2_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact) -> btSoftBody_RContact_c2_get
    void btSoftBody_RContact_c3_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact,float) -> btSoftBody_RContact_c3_set
    float btSoftBody_RContact_c3_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact) -> btSoftBody_RContact_c3_get
    void btSoftBody_RContact_c4_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact,float) -> btSoftBody_RContact_c4_set
    float btSoftBody_RContact_c4_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact) -> btSoftBody_RContact_c4_get
    long new_btSoftBody_RContact() -> new_btSoftBody_RContact
    void delete_btSoftBody_RContact(long) -> delete_btSoftBody_RContact
    void btSoftBody_SContact_node_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_SContact_node_set
    long btSoftBody_SContact_node_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact) -> btSoftBody_SContact_node_get
    void btSoftBody_SContact_face_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face) -> btSoftBody_SContact_face_set
    long btSoftBody_SContact_face_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact) -> btSoftBody_SContact_face_get
    void btSoftBody_SContact_weights_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_SContact_weights_set
    long btSoftBody_SContact_weights_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact) -> btSoftBody_SContact_weights_get
    void btSoftBody_SContact_normal_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_SContact_normal_set
    long btSoftBody_SContact_normal_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact) -> btSoftBody_SContact_normal_get
    void btSoftBody_SContact_margin_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact,float) -> btSoftBody_SContact_margin_set
    float btSoftBody_SContact_margin_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact) -> btSoftBody_SContact_margin_get
    void btSoftBody_SContact_friction_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact,float) -> btSoftBody_SContact_friction_set
    float btSoftBody_SContact_friction_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact) -> btSoftBody_SContact_friction_get
    void btSoftBody_SContact_cfm_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact,float[]) -> btSoftBody_SContact_cfm_set
    float[] btSoftBody_SContact_cfm_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact) -> btSoftBody_SContact_cfm_get
    long new_btSoftBody_SContact() -> new_btSoftBody_SContact
    void delete_btSoftBody_SContact(long) -> delete_btSoftBody_SContact
    void btSoftBody_Anchor_node_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_Anchor_node_set
    long btSoftBody_Anchor_node_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor) -> btSoftBody_Anchor_node_get
    void btSoftBody_Anchor_local_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Anchor_local_set
    long btSoftBody_Anchor_local_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor) -> btSoftBody_Anchor_local_get
    void btSoftBody_Anchor_body_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btSoftBody_Anchor_body_set
    long btSoftBody_Anchor_body_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor) -> btSoftBody_Anchor_body_get
    void btSoftBody_Anchor_influence_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor,float) -> btSoftBody_Anchor_influence_set
    float btSoftBody_Anchor_influence_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor) -> btSoftBody_Anchor_influence_get
    void btSoftBody_Anchor_c0_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor,com.badlogic.gdx.math.Matrix3) -> btSoftBody_Anchor_c0_set
    com.badlogic.gdx.math.Matrix3 btSoftBody_Anchor_c0_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor) -> btSoftBody_Anchor_c0_get
    void btSoftBody_Anchor_c1_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Anchor_c1_set
    long btSoftBody_Anchor_c1_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor) -> btSoftBody_Anchor_c1_get
    void btSoftBody_Anchor_c2_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor,float) -> btSoftBody_Anchor_c2_set
    float btSoftBody_Anchor_c2_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor) -> btSoftBody_Anchor_c2_get
    long new_btSoftBody_Anchor() -> new_btSoftBody_Anchor
    void delete_btSoftBody_Anchor(long) -> delete_btSoftBody_Anchor
    void btSoftBody_Note_text_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note,java.lang.String) -> btSoftBody_Note_text_set
    java.lang.String btSoftBody_Note_text_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note) -> btSoftBody_Note_text_get
    void btSoftBody_Note_offset_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Note_offset_set
    long btSoftBody_Note_offset_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note) -> btSoftBody_Note_offset_get
    void btSoftBody_Note_rank_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note,int) -> btSoftBody_Note_rank_set
    int btSoftBody_Note_rank_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note) -> btSoftBody_Note_rank_get
    void btSoftBody_Note_nodes_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note,long) -> btSoftBody_Note_nodes_set
    long btSoftBody_Note_nodes_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note) -> btSoftBody_Note_nodes_get
    void btSoftBody_Note_coords_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note,float[]) -> btSoftBody_Note_coords_set
    float[] btSoftBody_Note_coords_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note) -> btSoftBody_Note_coords_get
    long new_btSoftBody_Note() -> new_btSoftBody_Note
    void delete_btSoftBody_Note(long) -> delete_btSoftBody_Note
    void btSoftBody_Pose_bvolume_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,boolean) -> btSoftBody_Pose_bvolume_set
    boolean btSoftBody_Pose_bvolume_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose) -> btSoftBody_Pose_bvolume_get
    void btSoftBody_Pose_bframe_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,boolean) -> btSoftBody_Pose_bframe_set
    boolean btSoftBody_Pose_bframe_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose) -> btSoftBody_Pose_bframe_get
    void btSoftBody_Pose_volume_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,float) -> btSoftBody_Pose_volume_set
    float btSoftBody_Pose_volume_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose) -> btSoftBody_Pose_volume_get
    void btSoftBody_Pose_pos_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> btSoftBody_Pose_pos_set
    long btSoftBody_Pose_pos_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose) -> btSoftBody_Pose_pos_get
    void btSoftBody_Pose_wgh_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> btSoftBody_Pose_wgh_set
    long btSoftBody_Pose_wgh_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose) -> btSoftBody_Pose_wgh_get
    void btSoftBody_Pose_com_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Pose_com_set
    long btSoftBody_Pose_com_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose) -> btSoftBody_Pose_com_get
    void btSoftBody_Pose_rot_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,com.badlogic.gdx.math.Matrix3) -> btSoftBody_Pose_rot_set
    com.badlogic.gdx.math.Matrix3 btSoftBody_Pose_rot_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose) -> btSoftBody_Pose_rot_get
    void btSoftBody_Pose_scl_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,com.badlogic.gdx.math.Matrix3) -> btSoftBody_Pose_scl_set
    com.badlogic.gdx.math.Matrix3 btSoftBody_Pose_scl_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose) -> btSoftBody_Pose_scl_get
    void btSoftBody_Pose_aqq_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose,com.badlogic.gdx.math.Matrix3) -> btSoftBody_Pose_aqq_set
    com.badlogic.gdx.math.Matrix3 btSoftBody_Pose_aqq_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose) -> btSoftBody_Pose_aqq_get
    long new_btSoftBody_Pose() -> new_btSoftBody_Pose
    void delete_btSoftBody_Pose(long) -> delete_btSoftBody_Pose
    void btSoftBody_Cluster_masses_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> btSoftBody_Cluster_masses_set
    long btSoftBody_Cluster_masses_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_masses_get
    void btSoftBody_Cluster_nodes_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long) -> btSoftBody_Cluster_nodes_set
    long btSoftBody_Cluster_nodes_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_nodes_get
    void btSoftBody_Cluster_framerefs_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> btSoftBody_Cluster_framerefs_set
    long btSoftBody_Cluster_framerefs_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_framerefs_get
    void btSoftBody_Cluster_framexform_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btSoftBody_Cluster_framexform_set
    long btSoftBody_Cluster_framexform_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_framexform_get
    void btSoftBody_Cluster_idmass_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float) -> btSoftBody_Cluster_idmass_set
    float btSoftBody_Cluster_idmass_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_idmass_get
    void btSoftBody_Cluster_imass_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float) -> btSoftBody_Cluster_imass_set
    float btSoftBody_Cluster_imass_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_imass_get
    void btSoftBody_Cluster_locii_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Matrix3) -> btSoftBody_Cluster_locii_set
    com.badlogic.gdx.math.Matrix3 btSoftBody_Cluster_locii_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_locii_get
    void btSoftBody_Cluster_invwi_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Matrix3) -> btSoftBody_Cluster_invwi_set
    com.badlogic.gdx.math.Matrix3 btSoftBody_Cluster_invwi_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_invwi_get
    void btSoftBody_Cluster_com_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Cluster_com_set
    long btSoftBody_Cluster_com_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_com_get
    void btSoftBody_Cluster_vimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Cluster_vimpulses_set
    long btSoftBody_Cluster_vimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_vimpulses_get
    void btSoftBody_Cluster_dimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Cluster_dimpulses_set
    long btSoftBody_Cluster_dimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_dimpulses_get
    void btSoftBody_Cluster_nvimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,int) -> btSoftBody_Cluster_nvimpulses_set
    int btSoftBody_Cluster_nvimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_nvimpulses_get
    void btSoftBody_Cluster_ndimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,int) -> btSoftBody_Cluster_ndimpulses_set
    int btSoftBody_Cluster_ndimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_ndimpulses_get
    void btSoftBody_Cluster_lv_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Cluster_lv_set
    long btSoftBody_Cluster_lv_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_lv_get
    void btSoftBody_Cluster_av_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Cluster_av_set
    long btSoftBody_Cluster_av_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_av_get
    void btSoftBody_Cluster_leaf_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> btSoftBody_Cluster_leaf_set
    long btSoftBody_Cluster_leaf_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_leaf_get
    void btSoftBody_Cluster_ndamping_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float) -> btSoftBody_Cluster_ndamping_set
    float btSoftBody_Cluster_ndamping_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_ndamping_get
    void btSoftBody_Cluster_ldamping_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float) -> btSoftBody_Cluster_ldamping_set
    float btSoftBody_Cluster_ldamping_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_ldamping_get
    void btSoftBody_Cluster_adamping_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float) -> btSoftBody_Cluster_adamping_set
    float btSoftBody_Cluster_adamping_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_adamping_get
    void btSoftBody_Cluster_matching_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float) -> btSoftBody_Cluster_matching_set
    float btSoftBody_Cluster_matching_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_matching_get
    void btSoftBody_Cluster_maxSelfCollisionImpulse_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float) -> btSoftBody_Cluster_maxSelfCollisionImpulse_set
    float btSoftBody_Cluster_maxSelfCollisionImpulse_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_maxSelfCollisionImpulse_get
    void btSoftBody_Cluster_selfCollisionImpulseFactor_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,float) -> btSoftBody_Cluster_selfCollisionImpulseFactor_set
    float btSoftBody_Cluster_selfCollisionImpulseFactor_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_selfCollisionImpulseFactor_get
    void btSoftBody_Cluster_containsAnchor_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,boolean) -> btSoftBody_Cluster_containsAnchor_set
    boolean btSoftBody_Cluster_containsAnchor_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_containsAnchor_get
    void btSoftBody_Cluster_collide_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,boolean) -> btSoftBody_Cluster_collide_set
    boolean btSoftBody_Cluster_collide_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_collide_get
    void btSoftBody_Cluster_clusterIndex_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,int) -> btSoftBody_Cluster_clusterIndex_set
    int btSoftBody_Cluster_clusterIndex_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Cluster_clusterIndex_get
    long new_btSoftBody_Cluster() -> new_btSoftBody_Cluster
    void delete_btSoftBody_Cluster(long) -> delete_btSoftBody_Cluster
    void btSoftBody_Impulse_velocity_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Impulse_velocity_set
    long btSoftBody_Impulse_velocity_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse) -> btSoftBody_Impulse_velocity_get
    void btSoftBody_Impulse_drift_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Impulse_drift_set
    long btSoftBody_Impulse_drift_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse) -> btSoftBody_Impulse_drift_get
    void btSoftBody_Impulse_asVelocity_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse,int) -> btSoftBody_Impulse_asVelocity_set
    int btSoftBody_Impulse_asVelocity_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse) -> btSoftBody_Impulse_asVelocity_get
    void btSoftBody_Impulse_asDrift_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse,int) -> btSoftBody_Impulse_asDrift_set
    int btSoftBody_Impulse_asDrift_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse) -> btSoftBody_Impulse_asDrift_get
    long new_btSoftBody_Impulse() -> new_btSoftBody_Impulse
    void delete_btSoftBody_Impulse(long) -> delete_btSoftBody_Impulse
    void btSoftBody_Body_soft_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_Body_soft_set
    long btSoftBody_Body_soft_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> btSoftBody_Body_soft_get
    void btSoftBody_Body_rigid_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btSoftBody_Body_rigid_set
    long btSoftBody_Body_rigid_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> btSoftBody_Body_rigid_get
    void btSoftBody_Body_collisionObject_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btSoftBody_Body_collisionObject_set
    long btSoftBody_Body_collisionObject_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> btSoftBody_Body_collisionObject_get
    long new_btSoftBody_Body__SWIG_0() -> new_btSoftBody_Body__SWIG_0
    long new_btSoftBody_Body__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> new_btSoftBody_Body__SWIG_1
    long new_btSoftBody_Body__SWIG_2(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> new_btSoftBody_Body__SWIG_2
    void btSoftBody_Body_activate(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> btSoftBody_Body_activate
    com.badlogic.gdx.math.Matrix3 btSoftBody_Body_invWorldInertia(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> btSoftBody_Body_invWorldInertia
    float btSoftBody_Body_invMass(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> btSoftBody_Body_invMass
    com.badlogic.gdx.math.Matrix4 btSoftBody_Body_xform(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> btSoftBody_Body_xform
    com.badlogic.gdx.math.Vector3 btSoftBody_Body_linearVelocity(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> btSoftBody_Body_linearVelocity
    com.badlogic.gdx.math.Vector3 btSoftBody_Body_angularVelocity__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.math.Vector3) -> btSoftBody_Body_angularVelocity__SWIG_0
    com.badlogic.gdx.math.Vector3 btSoftBody_Body_angularVelocity__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> btSoftBody_Body_angularVelocity__SWIG_1
    com.badlogic.gdx.math.Vector3 btSoftBody_Body_velocity(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.math.Vector3) -> btSoftBody_Body_velocity
    void btSoftBody_Body_applyVImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btSoftBody_Body_applyVImpulse
    void btSoftBody_Body_applyDImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btSoftBody_Body_applyDImpulse
    void btSoftBody_Body_applyImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse,com.badlogic.gdx.math.Vector3) -> btSoftBody_Body_applyImpulse
    void btSoftBody_Body_applyVAImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.math.Vector3) -> btSoftBody_Body_applyVAImpulse
    void btSoftBody_Body_applyDAImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.math.Vector3) -> btSoftBody_Body_applyDAImpulse
    void btSoftBody_Body_applyAImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse) -> btSoftBody_Body_applyAImpulse
    void btSoftBody_Body_applyDCImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.math.Vector3) -> btSoftBody_Body_applyDCImpulse
    void delete_btSoftBody_Body(long) -> delete_btSoftBody_Body
    long new_btSoftBody_Joint_eType() -> new_btSoftBody_Joint_eType
    void delete_btSoftBody_Joint_eType(long) -> delete_btSoftBody_Joint_eType
    long new_btSoftBody_Joint_Specs() -> new_btSoftBody_Joint_Specs
    void btSoftBody_Joint_Specs_erp_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs,float) -> btSoftBody_Joint_Specs_erp_set
    float btSoftBody_Joint_Specs_erp_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs) -> btSoftBody_Joint_Specs_erp_get
    void btSoftBody_Joint_Specs_cfm_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs,float) -> btSoftBody_Joint_Specs_cfm_set
    float btSoftBody_Joint_Specs_cfm_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs) -> btSoftBody_Joint_Specs_cfm_get
    void btSoftBody_Joint_Specs_split_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs,float) -> btSoftBody_Joint_Specs_split_set
    float btSoftBody_Joint_Specs_split_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs) -> btSoftBody_Joint_Specs_split_get
    void delete_btSoftBody_Joint_Specs(long) -> delete_btSoftBody_Joint_Specs
    void btSoftBody_Joint_bodies_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> btSoftBody_Joint_bodies_set
    long btSoftBody_Joint_bodies_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint) -> btSoftBody_Joint_bodies_get
    void btSoftBody_Joint_refs_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Joint_refs_set
    long btSoftBody_Joint_refs_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint) -> btSoftBody_Joint_refs_get
    void btSoftBody_Joint_cfm_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,float) -> btSoftBody_Joint_cfm_set
    float btSoftBody_Joint_cfm_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint) -> btSoftBody_Joint_cfm_get
    void btSoftBody_Joint_erp_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,float) -> btSoftBody_Joint_erp_set
    float btSoftBody_Joint_erp_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint) -> btSoftBody_Joint_erp_get
    void btSoftBody_Joint_split_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,float) -> btSoftBody_Joint_split_set
    float btSoftBody_Joint_split_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint) -> btSoftBody_Joint_split_get
    void btSoftBody_Joint_drift_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Joint_drift_set
    long btSoftBody_Joint_drift_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint) -> btSoftBody_Joint_drift_get
    void btSoftBody_Joint_sdrift_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_Joint_sdrift_set
    long btSoftBody_Joint_sdrift_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint) -> btSoftBody_Joint_sdrift_get
    void btSoftBody_Joint_massmatrix_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,com.badlogic.gdx.math.Matrix3) -> btSoftBody_Joint_massmatrix_set
    com.badlogic.gdx.math.Matrix3 btSoftBody_Joint_massmatrix_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint) -> btSoftBody_Joint_massmatrix_get
    void btSoftBody_Joint_delete_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,boolean) -> btSoftBody_Joint_delete_set
    boolean btSoftBody_Joint_delete_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint) -> btSoftBody_Joint_delete_get
    void delete_btSoftBody_Joint(long) -> delete_btSoftBody_Joint
    void btSoftBody_Joint_Prepare(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,float,int) -> btSoftBody_Joint_Prepare
    void btSoftBody_Joint_Solve(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,float,float) -> btSoftBody_Joint_Solve
    void btSoftBody_Joint_Terminate(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint,float) -> btSoftBody_Joint_Terminate
    int btSoftBody_Joint_Type(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint) -> btSoftBody_Joint_Type
    void btSoftBody_LJoint_Specs_position_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_LJoint_Specs_position_set
    long btSoftBody_LJoint_Specs_position_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs) -> btSoftBody_LJoint_Specs_position_get
    long new_btSoftBody_LJoint_Specs() -> new_btSoftBody_LJoint_Specs
    void delete_btSoftBody_LJoint_Specs(long) -> delete_btSoftBody_LJoint_Specs
    void btSoftBody_LJoint_rpos_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_LJoint_rpos_set
    long btSoftBody_LJoint_rpos_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint) -> btSoftBody_LJoint_rpos_get
    long new_btSoftBody_LJoint() -> new_btSoftBody_LJoint
    void delete_btSoftBody_LJoint(long) -> delete_btSoftBody_LJoint
    void btSoftBody_AJoint_IControl_Prepare(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint) -> btSoftBody_AJoint_IControl_Prepare
    float btSoftBody_AJoint_IControl_Speed(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint,float) -> btSoftBody_AJoint_IControl_Speed
    long btSoftBody_AJoint_IControl_Default() -> btSoftBody_AJoint_IControl_Default
    long new_btSoftBody_AJoint_IControl() -> new_btSoftBody_AJoint_IControl
    void delete_btSoftBody_AJoint_IControl(long) -> delete_btSoftBody_AJoint_IControl
    long new_btSoftBody_AJoint_Specs() -> new_btSoftBody_AJoint_Specs
    void btSoftBody_AJoint_Specs_axis_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_AJoint_Specs_axis_set
    long btSoftBody_AJoint_Specs_axis_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs) -> btSoftBody_AJoint_Specs_axis_get
    void btSoftBody_AJoint_Specs_icontrol_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl) -> btSoftBody_AJoint_Specs_icontrol_set
    long btSoftBody_AJoint_Specs_icontrol_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs) -> btSoftBody_AJoint_Specs_icontrol_get
    void delete_btSoftBody_AJoint_Specs(long) -> delete_btSoftBody_AJoint_Specs
    void btSoftBody_AJoint_axis_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_AJoint_axis_set
    long btSoftBody_AJoint_axis_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint) -> btSoftBody_AJoint_axis_get
    void btSoftBody_AJoint_icontrol_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl) -> btSoftBody_AJoint_icontrol_set
    long btSoftBody_AJoint_icontrol_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint) -> btSoftBody_AJoint_icontrol_get
    long new_btSoftBody_AJoint() -> new_btSoftBody_AJoint
    void delete_btSoftBody_AJoint(long) -> delete_btSoftBody_AJoint
    void btSoftBody_CJoint_life_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint,int) -> btSoftBody_CJoint_life_set
    int btSoftBody_CJoint_life_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint) -> btSoftBody_CJoint_life_get
    void btSoftBody_CJoint_maxlife_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint,int) -> btSoftBody_CJoint_maxlife_set
    int btSoftBody_CJoint_maxlife_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint) -> btSoftBody_CJoint_maxlife_get
    void btSoftBody_CJoint_rpos_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_CJoint_rpos_set
    long btSoftBody_CJoint_rpos_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint) -> btSoftBody_CJoint_rpos_get
    void btSoftBody_CJoint_normal_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_CJoint_normal_set
    long btSoftBody_CJoint_normal_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint) -> btSoftBody_CJoint_normal_get
    void btSoftBody_CJoint_friction_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint,float) -> btSoftBody_CJoint_friction_set
    float btSoftBody_CJoint_friction_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint) -> btSoftBody_CJoint_friction_get
    long new_btSoftBody_CJoint() -> new_btSoftBody_CJoint
    void delete_btSoftBody_CJoint(long) -> delete_btSoftBody_CJoint
    void btSoftBody_Config_aeromodel_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,int) -> btSoftBody_Config_aeromodel_set
    int btSoftBody_Config_aeromodel_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_aeromodel_get
    void btSoftBody_Config_kVCF_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kVCF_set
    float btSoftBody_Config_kVCF_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kVCF_get
    void btSoftBody_Config_kDP_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kDP_set
    float btSoftBody_Config_kDP_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kDP_get
    void btSoftBody_Config_kDG_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kDG_set
    float btSoftBody_Config_kDG_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kDG_get
    void btSoftBody_Config_kLF_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kLF_set
    float btSoftBody_Config_kLF_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kLF_get
    void btSoftBody_Config_kPR_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kPR_set
    float btSoftBody_Config_kPR_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kPR_get
    void btSoftBody_Config_kVC_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kVC_set
    float btSoftBody_Config_kVC_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kVC_get
    void btSoftBody_Config_kDF_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kDF_set
    float btSoftBody_Config_kDF_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kDF_get
    void btSoftBody_Config_kMT_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kMT_set
    float btSoftBody_Config_kMT_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kMT_get
    void btSoftBody_Config_kCHR_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kCHR_set
    float btSoftBody_Config_kCHR_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kCHR_get
    void btSoftBody_Config_kKHR_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kKHR_set
    float btSoftBody_Config_kKHR_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kKHR_get
    void btSoftBody_Config_kSHR_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kSHR_set
    float btSoftBody_Config_kSHR_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kSHR_get
    void btSoftBody_Config_kAHR_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kAHR_set
    float btSoftBody_Config_kAHR_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kAHR_get
    void btSoftBody_Config_kSRHR_CL_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kSRHR_CL_set
    float btSoftBody_Config_kSRHR_CL_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kSRHR_CL_get
    void btSoftBody_Config_kSKHR_CL_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kSKHR_CL_set
    float btSoftBody_Config_kSKHR_CL_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kSKHR_CL_get
    void btSoftBody_Config_kSSHR_CL_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kSSHR_CL_set
    float btSoftBody_Config_kSSHR_CL_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kSSHR_CL_get
    void btSoftBody_Config_kSR_SPLT_CL_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kSR_SPLT_CL_set
    float btSoftBody_Config_kSR_SPLT_CL_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kSR_SPLT_CL_get
    void btSoftBody_Config_kSK_SPLT_CL_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kSK_SPLT_CL_set
    float btSoftBody_Config_kSK_SPLT_CL_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kSK_SPLT_CL_get
    void btSoftBody_Config_kSS_SPLT_CL_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_kSS_SPLT_CL_set
    float btSoftBody_Config_kSS_SPLT_CL_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_kSS_SPLT_CL_get
    void btSoftBody_Config_maxvolume_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_maxvolume_set
    float btSoftBody_Config_maxvolume_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_maxvolume_get
    void btSoftBody_Config_timescale_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,float) -> btSoftBody_Config_timescale_set
    float btSoftBody_Config_timescale_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_timescale_get
    void btSoftBody_Config_viterations_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,int) -> btSoftBody_Config_viterations_set
    int btSoftBody_Config_viterations_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_viterations_get
    void btSoftBody_Config_piterations_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,int) -> btSoftBody_Config_piterations_set
    int btSoftBody_Config_piterations_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_piterations_get
    void btSoftBody_Config_diterations_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,int) -> btSoftBody_Config_diterations_set
    int btSoftBody_Config_diterations_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_diterations_get
    void btSoftBody_Config_citerations_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,int) -> btSoftBody_Config_citerations_set
    int btSoftBody_Config_citerations_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_citerations_get
    void btSoftBody_Config_collisions_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,int) -> btSoftBody_Config_collisions_set
    int btSoftBody_Config_collisions_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_collisions_get
    void btSoftBody_Config_vsequence_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,long) -> btSoftBody_Config_vsequence_set
    long btSoftBody_Config_vsequence_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_vsequence_get
    void btSoftBody_Config_psequence_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,long) -> btSoftBody_Config_psequence_set
    long btSoftBody_Config_psequence_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_psequence_get
    void btSoftBody_Config_dsequence_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config,long) -> btSoftBody_Config_dsequence_set
    long btSoftBody_Config_dsequence_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_Config_dsequence_get
    long new_btSoftBody_Config() -> new_btSoftBody_Config
    void delete_btSoftBody_Config(long) -> delete_btSoftBody_Config
    void btSoftBody_SolverState_sdt_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState,float) -> btSoftBody_SolverState_sdt_set
    float btSoftBody_SolverState_sdt_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState) -> btSoftBody_SolverState_sdt_get
    void btSoftBody_SolverState_isdt_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState,float) -> btSoftBody_SolverState_isdt_set
    float btSoftBody_SolverState_isdt_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState) -> btSoftBody_SolverState_isdt_get
    void btSoftBody_SolverState_velmrg_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState,float) -> btSoftBody_SolverState_velmrg_set
    float btSoftBody_SolverState_velmrg_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState) -> btSoftBody_SolverState_velmrg_get
    void btSoftBody_SolverState_radmrg_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState,float) -> btSoftBody_SolverState_radmrg_set
    float btSoftBody_SolverState_radmrg_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState) -> btSoftBody_SolverState_radmrg_get
    void btSoftBody_SolverState_updmrg_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState,float) -> btSoftBody_SolverState_updmrg_set
    float btSoftBody_SolverState_updmrg_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState) -> btSoftBody_SolverState_updmrg_get
    long new_btSoftBody_SolverState() -> new_btSoftBody_SolverState
    void delete_btSoftBody_SolverState(long) -> delete_btSoftBody_SolverState
    void btSoftBody_RayFromToCaster_rayFrom_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_RayFromToCaster_rayFrom_set
    long btSoftBody_RayFromToCaster_rayFrom_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster) -> btSoftBody_RayFromToCaster_rayFrom_get
    void btSoftBody_RayFromToCaster_rayTo_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_RayFromToCaster_rayTo_set
    long btSoftBody_RayFromToCaster_rayTo_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster) -> btSoftBody_RayFromToCaster_rayTo_get
    void btSoftBody_RayFromToCaster_rayNormalizedDirection_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_RayFromToCaster_rayNormalizedDirection_set
    long btSoftBody_RayFromToCaster_rayNormalizedDirection_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster) -> btSoftBody_RayFromToCaster_rayNormalizedDirection_get
    void btSoftBody_RayFromToCaster_mint_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster,float) -> btSoftBody_RayFromToCaster_mint_set
    float btSoftBody_RayFromToCaster_mint_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster) -> btSoftBody_RayFromToCaster_mint_get
    void btSoftBody_RayFromToCaster_face_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face) -> btSoftBody_RayFromToCaster_face_set
    long btSoftBody_RayFromToCaster_face_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster) -> btSoftBody_RayFromToCaster_face_get
    void btSoftBody_RayFromToCaster_tests_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster,int) -> btSoftBody_RayFromToCaster_tests_set
    int btSoftBody_RayFromToCaster_tests_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster) -> btSoftBody_RayFromToCaster_tests_get
    long new_btSoftBody_RayFromToCaster(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> new_btSoftBody_RayFromToCaster
    float btSoftBody_RayFromToCaster_rayFromToTriangle__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> btSoftBody_RayFromToCaster_rayFromToTriangle__SWIG_0
    float btSoftBody_RayFromToCaster_rayFromToTriangle__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btSoftBody_RayFromToCaster_rayFromToTriangle__SWIG_1
    void delete_btSoftBody_RayFromToCaster(long) -> delete_btSoftBody_RayFromToCaster
    void btSoftBody_cfg_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> btSoftBody_cfg_set
    long btSoftBody_cfg_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_cfg_get
    void btSoftBody_sst_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState) -> btSoftBody_sst_set
    long btSoftBody_sst_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_sst_get
    void btSoftBody_pose_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose) -> btSoftBody_pose_set
    long btSoftBody_pose_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_pose_get
    void btSoftBody_tag_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long) -> btSoftBody_tag_set
    long btSoftBody_tag_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_tag_get
    void btSoftBody_worldInfo_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo) -> btSoftBody_worldInfo_set
    long btSoftBody_worldInfo_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_worldInfo_get
    void btSoftBody_notes_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long) -> btSoftBody_notes_set
    long btSoftBody_notes_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_notes_get
    void btSoftBody_nodes_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long) -> btSoftBody_nodes_set
    long btSoftBody_nodes_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_nodes_get
    void btSoftBody_links_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long) -> btSoftBody_links_set
    long btSoftBody_links_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_links_get
    void btSoftBody_faces_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long) -> btSoftBody_faces_set
    long btSoftBody_faces_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_faces_get
    void btSoftBody_tetras_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long) -> btSoftBody_tetras_set
    long btSoftBody_tetras_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_tetras_get
    void btSoftBody_anchors_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long) -> btSoftBody_anchors_set
    long btSoftBody_anchors_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_anchors_get
    void btSoftBody_rcontacts_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long) -> btSoftBody_rcontacts_set
    long btSoftBody_rcontacts_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_rcontacts_get
    void btSoftBody_scontacts_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long) -> btSoftBody_scontacts_set
    long btSoftBody_scontacts_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_scontacts_get
    void btSoftBody_joints_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long) -> btSoftBody_joints_set
    long btSoftBody_joints_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_joints_get
    void btSoftBody_materials_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long) -> btSoftBody_materials_set
    long btSoftBody_materials_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_materials_get
    void btSoftBody_timeacc_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_timeacc_set
    float btSoftBody_timeacc_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_timeacc_get
    void btSoftBody_bounds_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_bounds_set
    long btSoftBody_bounds_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_bounds_get
    void btSoftBody_bUpdateRtCst_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,boolean) -> btSoftBody_bUpdateRtCst_set
    boolean btSoftBody_bUpdateRtCst_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_bUpdateRtCst_get
    void btSoftBody_ndbvt_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btSoftBody_ndbvt_set
    long btSoftBody_ndbvt_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_ndbvt_get
    void btSoftBody_fdbvt_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btSoftBody_fdbvt_set
    long btSoftBody_fdbvt_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_fdbvt_get
    void btSoftBody_cdbvt_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btDbvt) -> btSoftBody_cdbvt_set
    long btSoftBody_cdbvt_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_cdbvt_get
    void btSoftBody_clusters_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long) -> btSoftBody_clusters_set
    long btSoftBody_clusters_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_clusters_get
    void btSoftBody_clusterConnectivity_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long) -> btSoftBody_clusterConnectivity_set
    long btSoftBody_clusterConnectivity_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_clusterConnectivity_get
    void btSoftBody_initialWorldTransform_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> btSoftBody_initialWorldTransform_set
    long btSoftBody_initialWorldTransform_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_initialWorldTransform_get
    void btSoftBody_windVelocity_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btSoftBody_windVelocity_set
    long btSoftBody_windVelocity_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_windVelocity_get
    void btSoftBody_restLengthScale_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_restLengthScale_set
    float btSoftBody_restLengthScale_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_restLengthScale_get
    long new_btSoftBody__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,int,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer) -> new_btSoftBody__SWIG_0
    long new_btSoftBody__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo) -> new_btSoftBody__SWIG_1
    void btSoftBody_initDefaults(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_initDefaults
    void delete_btSoftBody(long) -> delete_btSoftBody
    void btSoftBody_userIndexMapping_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long) -> btSoftBody_userIndexMapping_set
    long btSoftBody_userIndexMapping_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_userIndexMapping_get
    boolean btSoftBody_checkLink__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int) -> btSoftBody_checkLink__SWIG_0
    boolean btSoftBody_checkLink__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_checkLink__SWIG_1
    boolean btSoftBody_checkFace(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,int) -> btSoftBody_checkFace
    long btSoftBody_appendMaterial(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_appendMaterial
    void btSoftBody_appendNote__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector4,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_appendNote__SWIG_0
    void btSoftBody_appendNote__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector4,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_appendNote__SWIG_1
    void btSoftBody_appendNote__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector4,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_appendNote__SWIG_2
    void btSoftBody_appendNote__SWIG_3(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector4,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_appendNote__SWIG_3
    void btSoftBody_appendNote__SWIG_4(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.linearmath.btVector4) -> btSoftBody_appendNote__SWIG_4
    void btSoftBody_appendNote__SWIG_5(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3) -> btSoftBody_appendNote__SWIG_5
    void btSoftBody_appendNote__SWIG_6(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_appendNote__SWIG_6
    void btSoftBody_appendNote__SWIG_7(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link) -> btSoftBody_appendNote__SWIG_7
    void btSoftBody_appendNote__SWIG_8(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.lang.String,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face) -> btSoftBody_appendNote__SWIG_8
    void btSoftBody_appendNode(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,float) -> btSoftBody_appendNode
    void btSoftBody_appendLink__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> btSoftBody_appendLink__SWIG_0
    void btSoftBody_appendLink__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_appendLink__SWIG_1
    void btSoftBody_appendLink__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_appendLink__SWIG_2
    void btSoftBody_appendLink__SWIG_3(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,boolean) -> btSoftBody_appendLink__SWIG_3
    void btSoftBody_appendLink__SWIG_4(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> btSoftBody_appendLink__SWIG_4
    void btSoftBody_appendLink__SWIG_5(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int) -> btSoftBody_appendLink__SWIG_5
    void btSoftBody_appendLink__SWIG_6(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,boolean) -> btSoftBody_appendLink__SWIG_6
    void btSoftBody_appendLink__SWIG_7(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> btSoftBody_appendLink__SWIG_7
    void btSoftBody_appendLink__SWIG_8(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftBody_appendLink__SWIG_8
    void btSoftBody_appendFace__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> btSoftBody_appendFace__SWIG_0
    void btSoftBody_appendFace__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_appendFace__SWIG_1
    void btSoftBody_appendFace__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_appendFace__SWIG_2
    void btSoftBody_appendFace__SWIG_3(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> btSoftBody_appendFace__SWIG_3
    void btSoftBody_appendFace__SWIG_4(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,int) -> btSoftBody_appendFace__SWIG_4
    void btSoftBody_appendTetra__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> btSoftBody_appendTetra__SWIG_0
    void btSoftBody_appendTetra__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,int,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> btSoftBody_appendTetra__SWIG_1
    void btSoftBody_appendTetra__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,int,int) -> btSoftBody_appendTetra__SWIG_2
    void btSoftBody_appendAnchor__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,boolean,float) -> btSoftBody_appendAnchor__SWIG_0
    void btSoftBody_appendAnchor__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,boolean) -> btSoftBody_appendAnchor__SWIG_1
    void btSoftBody_appendAnchor__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btSoftBody_appendAnchor__SWIG_2
    void btSoftBody_appendAnchor__SWIG_3(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,boolean,float) -> btSoftBody_appendAnchor__SWIG_3
    void btSoftBody_appendAnchor__SWIG_4(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,boolean) -> btSoftBody_appendAnchor__SWIG_4
    void btSoftBody_appendAnchor__SWIG_5(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> btSoftBody_appendAnchor__SWIG_5
    void btSoftBody_appendLinearJoint__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> btSoftBody_appendLinearJoint__SWIG_0
    void btSoftBody_appendLinearJoint__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> btSoftBody_appendLinearJoint__SWIG_1
    void btSoftBody_appendLinearJoint__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs) -> btSoftBody_appendLinearJoint__SWIG_2
    void btSoftBody_appendLinearJoint__SWIG_3(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_appendLinearJoint__SWIG_3
    void btSoftBody_appendAngularJoint__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> btSoftBody_appendAngularJoint__SWIG_0
    void btSoftBody_appendAngularJoint__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> btSoftBody_appendAngularJoint__SWIG_1
    void btSoftBody_appendAngularJoint__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs) -> btSoftBody_appendAngularJoint__SWIG_2
    void btSoftBody_appendAngularJoint__SWIG_3(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_appendAngularJoint__SWIG_3
    void btSoftBody_addForce__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3) -> btSoftBody_addForce__SWIG_0
    void btSoftBody_addForce__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,int) -> btSoftBody_addForce__SWIG_1
    void btSoftBody_addAeroForceToNode(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,int) -> btSoftBody_addAeroForceToNode
    void btSoftBody_addAeroForceToFace(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,int) -> btSoftBody_addAeroForceToFace
    void btSoftBody_addVelocity__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3) -> btSoftBody_addVelocity__SWIG_0
    void btSoftBody_setVelocity(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3) -> btSoftBody_setVelocity
    void btSoftBody_addVelocity__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,int) -> btSoftBody_addVelocity__SWIG_1
    void btSoftBody_setMass(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,float) -> btSoftBody_setMass
    float btSoftBody_getMass(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_getMass
    float btSoftBody_getTotalMass(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_getTotalMass
    void btSoftBody_setTotalMass__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,boolean) -> btSoftBody_setTotalMass__SWIG_0
    void btSoftBody_setTotalMass__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setTotalMass__SWIG_1
    void btSoftBody_setTotalDensity(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setTotalDensity
    void btSoftBody_setVolumeMass(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setVolumeMass
    void btSoftBody_setVolumeDensity(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setVolumeDensity
    void btSoftBody_transform(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Matrix4) -> btSoftBody_transform
    void btSoftBody_translate(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3) -> btSoftBody_translate
    void btSoftBody_rotate(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Quaternion) -> btSoftBody_rotate
    void btSoftBody_scale(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3) -> btSoftBody_scale
    void btSoftBody_setPose(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,boolean,boolean) -> btSoftBody_setPose
    void btSoftBody_resetLinkRestLengths(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_resetLinkRestLengths
    float btSoftBody_getVolume(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_getVolume
    int btSoftBody_clusterCount(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_clusterCount
    com.badlogic.gdx.math.Vector3 btSoftBody_clusterCom__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftBody_clusterCom__SWIG_0
    com.badlogic.gdx.math.Vector3 btSoftBody_clusterCom__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_clusterCom__SWIG_1
    com.badlogic.gdx.math.Vector3 btSoftBody_clusterVelocity(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3) -> btSoftBody_clusterVelocity
    void btSoftBody_clusterVImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btSoftBody_clusterVImpulse
    void btSoftBody_clusterDImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btSoftBody_clusterDImpulse
    void btSoftBody_clusterImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse) -> btSoftBody_clusterImpulse
    void btSoftBody_clusterVAImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3) -> btSoftBody_clusterVAImpulse
    void btSoftBody_clusterDAImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3) -> btSoftBody_clusterDAImpulse
    void btSoftBody_clusterAImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse) -> btSoftBody_clusterAImpulse
    void btSoftBody_clusterDCImpulse(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3) -> btSoftBody_clusterDCImpulse
    int btSoftBody_generateBendingConstraints__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> btSoftBody_generateBendingConstraints__SWIG_0
    int btSoftBody_generateBendingConstraints__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_generateBendingConstraints__SWIG_1
    void btSoftBody_randomizeConstraints(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_randomizeConstraints
    void btSoftBody_releaseCluster(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_releaseCluster
    void btSoftBody_releaseClusters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_releaseClusters
    int btSoftBody_generateClusters__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int) -> btSoftBody_generateClusters__SWIG_0
    int btSoftBody_generateClusters__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_generateClusters__SWIG_1
    void btSoftBody_refine(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn,float,boolean) -> btSoftBody_refine
    boolean btSoftBody_cutLink__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int,int,float) -> btSoftBody_cutLink__SWIG_0
    boolean btSoftBody_cutLink__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,float) -> btSoftBody_cutLink__SWIG_1
    boolean btSoftBody_rayTest__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast) -> btSoftBody_rayTest__SWIG_0
    void btSoftBody_setSolver(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_setSolver
    void btSoftBody_predictMotion(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_predictMotion
    void btSoftBody_solveConstraints(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_solveConstraints
    void btSoftBody_staticSolve(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_staticSolve
    void btSoftBody_solveCommonConstraints(long,int,int) -> btSoftBody_solveCommonConstraints
    void btSoftBody_solveClusters__SWIG_0(long) -> btSoftBody_solveClusters__SWIG_0
    void btSoftBody_integrateMotion(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_integrateMotion
    void btSoftBody_defaultCollisionHandler__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btSoftBody_defaultCollisionHandler__SWIG_0
    void btSoftBody_defaultCollisionHandler__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_defaultCollisionHandler__SWIG_1
    void btSoftBody_setWindVelocity(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3) -> btSoftBody_setWindVelocity
    long btSoftBody_upcast__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> btSoftBody_upcast__SWIG_0
    void btSoftBody_getAabb(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> btSoftBody_getAabb
    void btSoftBody_pointersToIndices(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_pointersToIndices
    void btSoftBody_indicesToPointers__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.nio.IntBuffer) -> btSoftBody_indicesToPointers__SWIG_0
    void btSoftBody_indicesToPointers__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_indicesToPointers__SWIG_1
    int btSoftBody_rayTest__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long,long,long,boolean) -> btSoftBody_rayTest__SWIG_1
    void btSoftBody_initializeFaceTree(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_initializeFaceTree
    com.badlogic.gdx.math.Vector3 btSoftBody_evaluateCom(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_evaluateCom
    boolean btSoftBody_checkContact(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.math.Vector3,float,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti) -> btSoftBody_checkContact
    void btSoftBody_updateNormals(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_updateNormals
    void btSoftBody_updateBounds(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_updateBounds
    void btSoftBody_updatePose(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_updatePose
    void btSoftBody_updateConstants(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_updateConstants
    void btSoftBody_updateLinkConstants(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_updateLinkConstants
    void btSoftBody_updateArea__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,boolean) -> btSoftBody_updateArea__SWIG_0
    void btSoftBody_updateArea__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_updateArea__SWIG_1
    void btSoftBody_initializeClusters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_initializeClusters
    void btSoftBody_updateClusters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_updateClusters
    void btSoftBody_cleanupClusters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_cleanupClusters
    void btSoftBody_prepareClusters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_prepareClusters
    void btSoftBody_solveClusters__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_solveClusters__SWIG_1
    void btSoftBody_applyClusters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,boolean) -> btSoftBody_applyClusters
    void btSoftBody_dampClusters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_dampClusters
    void btSoftBody_applyForces(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_applyForces
    void btSoftBody_PSolve_Anchors(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float) -> btSoftBody_PSolve_Anchors
    void btSoftBody_PSolve_RContacts(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float) -> btSoftBody_PSolve_RContacts
    void btSoftBody_PSolve_SContacts(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float) -> btSoftBody_PSolve_SContacts
    void btSoftBody_PSolve_Links(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float) -> btSoftBody_PSolve_Links
    void btSoftBody_VSolve_Links(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_VSolve_Links
    long btSoftBody_getSolver__SWIG_0(int) -> btSoftBody_getSolver__SWIG_0
    long new_btSoftBody__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.nio.FloatBuffer,int,int,int,java.nio.ShortBuffer,int,int,java.nio.ShortBuffer,int) -> new_btSoftBody__SWIG_2
    int btSoftBody_getNodeCount(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_getNodeCount
    long btSoftBody_getNode(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_getNode
    void btSoftBody_getVertices__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.nio.FloatBuffer,int,int,int) -> btSoftBody_getVertices__SWIG_0
    void btSoftBody_getVertices__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.nio.FloatBuffer,int,int,java.nio.ShortBuffer,int,int,java.nio.ShortBuffer,int) -> btSoftBody_getVertices__SWIG_1
    void btSoftBody_getVertices__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.nio.FloatBuffer,int,int,int,java.nio.ShortBuffer,int,int,java.nio.ShortBuffer,int) -> btSoftBody_getVertices__SWIG_2
    int btSoftBody_getFaceCount(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBody_getFaceCount
    long btSoftBody_getFace(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_getFace
    void btSoftBody_getIndices(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,java.nio.ShortBuffer,int) -> btSoftBody_getIndices
    void btSoftBody_setConfig_kVCF(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kVCF
    void btSoftBody_setConfig_kDP(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kDP
    void btSoftBody_setConfig_kDG(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kDG
    void btSoftBody_setConfig_kLF(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kLF
    void btSoftBody_setConfig_kPR(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kPR
    void btSoftBody_setConfig_kVC(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kVC
    void btSoftBody_setConfig_kDF(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kDF
    void btSoftBody_setConfig_kMT(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kMT
    void btSoftBody_setConfig_kCHR(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kCHR
    void btSoftBody_setConfig_kKHR(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kKHR
    void btSoftBody_setConfig_kSHR(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kSHR
    void btSoftBody_setConfig_kAHR(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kAHR
    void btSoftBody_setConfig_kSRHR_CL(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kSRHR_CL
    void btSoftBody_setConfig_kSKHR_CL(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kSKHR_CL
    void btSoftBody_setConfig_kSSHR_CL(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kSSHR_CL
    void btSoftBody_setConfig_kSR_SPLT_CL(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kSR_SPLT_CL
    void btSoftBody_setConfig_kSK_SPLT_CL(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kSK_SPLT_CL
    void btSoftBody_setConfig_kSS_SPLT_CL(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_kSS_SPLT_CL
    void btSoftBody_setConfig_maxvolume(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_maxvolume
    void btSoftBody_setConfig_timescale(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> btSoftBody_setConfig_timescale
    void btSoftBody_setConfig_viterations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_setConfig_viterations
    void btSoftBody_setConfig_piterations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_setConfig_piterations
    void btSoftBody_setConfig_diterations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_setConfig_diterations
    void btSoftBody_setConfig_citerations(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_setConfig_citerations
    void btSoftBody_setConfig_collisions(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,int) -> btSoftBody_setConfig_collisions
    void btTriIndex_PartIdTriangleIndex_set(long,com.badlogic.gdx.physics.bullet.softbody.btTriIndex,int) -> btTriIndex_PartIdTriangleIndex_set
    int btTriIndex_PartIdTriangleIndex_get(long,com.badlogic.gdx.physics.bullet.softbody.btTriIndex) -> btTriIndex_PartIdTriangleIndex_get
    void btTriIndex_childShape_set(long,com.badlogic.gdx.physics.bullet.softbody.btTriIndex,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> btTriIndex_childShape_set
    long btTriIndex_childShape_get(long,com.badlogic.gdx.physics.bullet.softbody.btTriIndex) -> btTriIndex_childShape_get
    long new_btTriIndex(int,int,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> new_btTriIndex
    int btTriIndex_getTriangleIndex(long,com.badlogic.gdx.physics.bullet.softbody.btTriIndex) -> btTriIndex_getTriangleIndex
    int btTriIndex_getPartId(long,com.badlogic.gdx.physics.bullet.softbody.btTriIndex) -> btTriIndex_getPartId
    int btTriIndex_getUid(long,com.badlogic.gdx.physics.bullet.softbody.btTriIndex) -> btTriIndex_getUid
    void delete_btTriIndex(long) -> delete_btTriIndex
    void btSoftBodyTriangleCallback_triangleCount_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback,int) -> btSoftBodyTriangleCallback_triangleCount_set
    int btSoftBodyTriangleCallback_triangleCount_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback) -> btSoftBodyTriangleCallback_triangleCount_get
    long new_btSoftBodyTriangleCallback(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean) -> new_btSoftBodyTriangleCallback
    void btSoftBodyTriangleCallback_setTimeStepAndCounters(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback,float,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,long,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> btSoftBodyTriangleCallback_setTimeStepAndCounters
    void delete_btSoftBodyTriangleCallback(long) -> delete_btSoftBodyTriangleCallback
    void btSoftBodyTriangleCallback_clearCache(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback) -> btSoftBodyTriangleCallback_clearCache
    com.badlogic.gdx.math.Vector3 btSoftBodyTriangleCallback_getAabbMin(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback) -> btSoftBodyTriangleCallback_getAabbMin
    com.badlogic.gdx.math.Vector3 btSoftBodyTriangleCallback_getAabbMax(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback) -> btSoftBodyTriangleCallback_getAabbMax
    long new_btSoftBodyConcaveCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean) -> new_btSoftBodyConcaveCollisionAlgorithm
    void delete_btSoftBodyConcaveCollisionAlgorithm(long) -> delete_btSoftBodyConcaveCollisionAlgorithm
    void btSoftBodyConcaveCollisionAlgorithm_clearCache(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm) -> btSoftBodyConcaveCollisionAlgorithm_clearCache
    long new_btSoftBodyConcaveCollisionAlgorithm_CreateFunc() -> new_btSoftBodyConcaveCollisionAlgorithm_CreateFunc
    void delete_btSoftBodyConcaveCollisionAlgorithm_CreateFunc(long) -> delete_btSoftBodyConcaveCollisionAlgorithm_CreateFunc
    long new_btSoftBodyConcaveCollisionAlgorithm_SwappedCreateFunc() -> new_btSoftBodyConcaveCollisionAlgorithm_SwappedCreateFunc
    void delete_btSoftBodyConcaveCollisionAlgorithm_SwappedCreateFunc(long) -> delete_btSoftBodyConcaveCollisionAlgorithm_SwappedCreateFunc
    void SoftBodyMaterialData_linearStiffness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData,float) -> SoftBodyMaterialData_linearStiffness_set
    float SoftBodyMaterialData_linearStiffness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData) -> SoftBodyMaterialData_linearStiffness_get
    void SoftBodyMaterialData_angularStiffness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData,float) -> SoftBodyMaterialData_angularStiffness_set
    float SoftBodyMaterialData_angularStiffness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData) -> SoftBodyMaterialData_angularStiffness_get
    void SoftBodyMaterialData_volumeStiffness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData,float) -> SoftBodyMaterialData_volumeStiffness_set
    float SoftBodyMaterialData_volumeStiffness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData) -> SoftBodyMaterialData_volumeStiffness_get
    void SoftBodyMaterialData_flags_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData,int) -> SoftBodyMaterialData_flags_set
    int SoftBodyMaterialData_flags_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData) -> SoftBodyMaterialData_flags_get
    long new_SoftBodyMaterialData() -> new_SoftBodyMaterialData
    void delete_SoftBodyMaterialData(long) -> delete_SoftBodyMaterialData
    void SoftBodyNodeData_material_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData) -> SoftBodyNodeData_material_set
    long SoftBodyNodeData_material_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData) -> SoftBodyNodeData_material_get
    void SoftBodyNodeData_position_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftBodyNodeData_position_set
    long SoftBodyNodeData_position_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData) -> SoftBodyNodeData_position_get
    void SoftBodyNodeData_previousPosition_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftBodyNodeData_previousPosition_set
    long SoftBodyNodeData_previousPosition_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData) -> SoftBodyNodeData_previousPosition_get
    void SoftBodyNodeData_velocity_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftBodyNodeData_velocity_set
    long SoftBodyNodeData_velocity_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData) -> SoftBodyNodeData_velocity_get
    void SoftBodyNodeData_accumulatedForce_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftBodyNodeData_accumulatedForce_set
    long SoftBodyNodeData_accumulatedForce_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData) -> SoftBodyNodeData_accumulatedForce_get
    void SoftBodyNodeData_normal_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftBodyNodeData_normal_set
    long SoftBodyNodeData_normal_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData) -> SoftBodyNodeData_normal_get
    void SoftBodyNodeData_inverseMass_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,float) -> SoftBodyNodeData_inverseMass_set
    float SoftBodyNodeData_inverseMass_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData) -> SoftBodyNodeData_inverseMass_get
    void SoftBodyNodeData_area_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,float) -> SoftBodyNodeData_area_set
    float SoftBodyNodeData_area_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData) -> SoftBodyNodeData_area_get
    void SoftBodyNodeData_attach_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,int) -> SoftBodyNodeData_attach_set
    int SoftBodyNodeData_attach_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData) -> SoftBodyNodeData_attach_get
    void SoftBodyNodeData_pad_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData,int) -> SoftBodyNodeData_pad_set
    int SoftBodyNodeData_pad_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData) -> SoftBodyNodeData_pad_get
    long new_SoftBodyNodeData() -> new_SoftBodyNodeData
    void delete_SoftBodyNodeData(long) -> delete_SoftBodyNodeData
    void SoftBodyLinkData_material_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData) -> SoftBodyLinkData_material_set
    long SoftBodyLinkData_material_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData) -> SoftBodyLinkData_material_get
    void SoftBodyLinkData_nodeIndices_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData,int[]) -> SoftBodyLinkData_nodeIndices_set
    int[] SoftBodyLinkData_nodeIndices_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData) -> SoftBodyLinkData_nodeIndices_get
    void SoftBodyLinkData_restLength_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData,float) -> SoftBodyLinkData_restLength_set
    float SoftBodyLinkData_restLength_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData) -> SoftBodyLinkData_restLength_get
    void SoftBodyLinkData_bbending_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData,int) -> SoftBodyLinkData_bbending_set
    int SoftBodyLinkData_bbending_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData) -> SoftBodyLinkData_bbending_get
    long new_SoftBodyLinkData() -> new_SoftBodyLinkData
    void delete_SoftBodyLinkData(long) -> delete_SoftBodyLinkData
    void SoftBodyFaceData_normal_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftBodyFaceData_normal_set
    long SoftBodyFaceData_normal_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData) -> SoftBodyFaceData_normal_get
    void SoftBodyFaceData_material_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData) -> SoftBodyFaceData_material_set
    long SoftBodyFaceData_material_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData) -> SoftBodyFaceData_material_get
    void SoftBodyFaceData_nodeIndices_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData,int[]) -> SoftBodyFaceData_nodeIndices_set
    int[] SoftBodyFaceData_nodeIndices_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData) -> SoftBodyFaceData_nodeIndices_get
    void SoftBodyFaceData_restArea_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData,float) -> SoftBodyFaceData_restArea_set
    float SoftBodyFaceData_restArea_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData) -> SoftBodyFaceData_restArea_get
    long new_SoftBodyFaceData() -> new_SoftBodyFaceData
    void delete_SoftBodyFaceData(long) -> delete_SoftBodyFaceData
    void SoftBodyTetraData_c0_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftBodyTetraData_c0_set
    long SoftBodyTetraData_c0_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData) -> SoftBodyTetraData_c0_get
    void SoftBodyTetraData_material_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyMaterialData) -> SoftBodyTetraData_material_set
    long SoftBodyTetraData_material_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData) -> SoftBodyTetraData_material_get
    void SoftBodyTetraData_nodeIndices_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData,int[]) -> SoftBodyTetraData_nodeIndices_set
    int[] SoftBodyTetraData_nodeIndices_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData) -> SoftBodyTetraData_nodeIndices_get
    void SoftBodyTetraData_restVolume_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData,float) -> SoftBodyTetraData_restVolume_set
    float SoftBodyTetraData_restVolume_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData) -> SoftBodyTetraData_restVolume_get
    void SoftBodyTetraData_c1_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData,float) -> SoftBodyTetraData_c1_set
    float SoftBodyTetraData_c1_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData) -> SoftBodyTetraData_c1_get
    void SoftBodyTetraData_c2_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData,float) -> SoftBodyTetraData_c2_set
    float SoftBodyTetraData_c2_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData) -> SoftBodyTetraData_c2_get
    void SoftBodyTetraData_pad_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData,int) -> SoftBodyTetraData_pad_set
    int SoftBodyTetraData_pad_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData) -> SoftBodyTetraData_pad_get
    long new_SoftBodyTetraData() -> new_SoftBodyTetraData
    void delete_SoftBodyTetraData(long) -> delete_SoftBodyTetraData
    void SoftRigidAnchorData_c0_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData,long) -> SoftRigidAnchorData_c0_set
    long SoftRigidAnchorData_c0_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData) -> SoftRigidAnchorData_c0_get
    void SoftRigidAnchorData_c1_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftRigidAnchorData_c1_set
    long SoftRigidAnchorData_c1_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData) -> SoftRigidAnchorData_c1_get
    void SoftRigidAnchorData_localFrame_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftRigidAnchorData_localFrame_set
    long SoftRigidAnchorData_localFrame_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData) -> SoftRigidAnchorData_localFrame_get
    void SoftRigidAnchorData_rigidBody_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBodyFloatData) -> SoftRigidAnchorData_rigidBody_set
    long SoftRigidAnchorData_rigidBody_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData) -> SoftRigidAnchorData_rigidBody_get
    void SoftRigidAnchorData_nodeIndex_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData,int) -> SoftRigidAnchorData_nodeIndex_set
    int SoftRigidAnchorData_nodeIndex_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData) -> SoftRigidAnchorData_nodeIndex_get
    void SoftRigidAnchorData_c2_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData,float) -> SoftRigidAnchorData_c2_set
    float SoftRigidAnchorData_c2_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData) -> SoftRigidAnchorData_c2_get
    long new_SoftRigidAnchorData() -> new_SoftRigidAnchorData
    void delete_SoftRigidAnchorData(long) -> delete_SoftRigidAnchorData
    void SoftBodyConfigData_aeroModel_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,int) -> SoftBodyConfigData_aeroModel_set
    int SoftBodyConfigData_aeroModel_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_aeroModel_get
    void SoftBodyConfigData_baumgarte_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_baumgarte_set
    float SoftBodyConfigData_baumgarte_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_baumgarte_get
    void SoftBodyConfigData_damping_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_damping_set
    float SoftBodyConfigData_damping_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_damping_get
    void SoftBodyConfigData_drag_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_drag_set
    float SoftBodyConfigData_drag_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_drag_get
    void SoftBodyConfigData_lift_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_lift_set
    float SoftBodyConfigData_lift_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_lift_get
    void SoftBodyConfigData_pressure_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_pressure_set
    float SoftBodyConfigData_pressure_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_pressure_get
    void SoftBodyConfigData_volume_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_volume_set
    float SoftBodyConfigData_volume_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_volume_get
    void SoftBodyConfigData_dynamicFriction_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_dynamicFriction_set
    float SoftBodyConfigData_dynamicFriction_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_dynamicFriction_get
    void SoftBodyConfigData_poseMatch_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_poseMatch_set
    float SoftBodyConfigData_poseMatch_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_poseMatch_get
    void SoftBodyConfigData_rigidContactHardness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_rigidContactHardness_set
    float SoftBodyConfigData_rigidContactHardness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_rigidContactHardness_get
    void SoftBodyConfigData_kineticContactHardness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_kineticContactHardness_set
    float SoftBodyConfigData_kineticContactHardness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_kineticContactHardness_get
    void SoftBodyConfigData_softContactHardness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_softContactHardness_set
    float SoftBodyConfigData_softContactHardness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_softContactHardness_get
    void SoftBodyConfigData_anchorHardness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_anchorHardness_set
    float SoftBodyConfigData_anchorHardness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_anchorHardness_get
    void SoftBodyConfigData_softRigidClusterHardness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_softRigidClusterHardness_set
    float SoftBodyConfigData_softRigidClusterHardness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_softRigidClusterHardness_get
    void SoftBodyConfigData_softKineticClusterHardness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_softKineticClusterHardness_set
    float SoftBodyConfigData_softKineticClusterHardness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_softKineticClusterHardness_get
    void SoftBodyConfigData_softSoftClusterHardness_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_softSoftClusterHardness_set
    float SoftBodyConfigData_softSoftClusterHardness_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_softSoftClusterHardness_get
    void SoftBodyConfigData_softRigidClusterImpulseSplit_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_softRigidClusterImpulseSplit_set
    float SoftBodyConfigData_softRigidClusterImpulseSplit_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_softRigidClusterImpulseSplit_get
    void SoftBodyConfigData_softKineticClusterImpulseSplit_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_softKineticClusterImpulseSplit_set
    float SoftBodyConfigData_softKineticClusterImpulseSplit_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_softKineticClusterImpulseSplit_get
    void SoftBodyConfigData_softSoftClusterImpulseSplit_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_softSoftClusterImpulseSplit_set
    float SoftBodyConfigData_softSoftClusterImpulseSplit_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_softSoftClusterImpulseSplit_get
    void SoftBodyConfigData_maxVolume_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_maxVolume_set
    float SoftBodyConfigData_maxVolume_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_maxVolume_get
    void SoftBodyConfigData_timeScale_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,float) -> SoftBodyConfigData_timeScale_set
    float SoftBodyConfigData_timeScale_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_timeScale_get
    void SoftBodyConfigData_velocityIterations_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,int) -> SoftBodyConfigData_velocityIterations_set
    int SoftBodyConfigData_velocityIterations_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_velocityIterations_get
    void SoftBodyConfigData_positionIterations_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,int) -> SoftBodyConfigData_positionIterations_set
    int SoftBodyConfigData_positionIterations_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_positionIterations_get
    void SoftBodyConfigData_driftIterations_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,int) -> SoftBodyConfigData_driftIterations_set
    int SoftBodyConfigData_driftIterations_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_driftIterations_get
    void SoftBodyConfigData_clusterIterations_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,int) -> SoftBodyConfigData_clusterIterations_set
    int SoftBodyConfigData_clusterIterations_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_clusterIterations_get
    void SoftBodyConfigData_collisionFlags_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData,int) -> SoftBodyConfigData_collisionFlags_set
    int SoftBodyConfigData_collisionFlags_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> SoftBodyConfigData_collisionFlags_get
    long new_SoftBodyConfigData() -> new_SoftBodyConfigData
    void delete_SoftBodyConfigData(long) -> delete_SoftBodyConfigData
    void SoftBodyPoseData_rot_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,long) -> SoftBodyPoseData_rot_set
    long SoftBodyPoseData_rot_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData) -> SoftBodyPoseData_rot_get
    void SoftBodyPoseData_scale_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,long) -> SoftBodyPoseData_scale_set
    long SoftBodyPoseData_scale_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData) -> SoftBodyPoseData_scale_get
    void SoftBodyPoseData_aqq_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,long) -> SoftBodyPoseData_aqq_set
    long SoftBodyPoseData_aqq_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData) -> SoftBodyPoseData_aqq_get
    void SoftBodyPoseData_com_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftBodyPoseData_com_set
    long SoftBodyPoseData_com_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData) -> SoftBodyPoseData_com_get
    void SoftBodyPoseData_positions_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftBodyPoseData_positions_set
    long SoftBodyPoseData_positions_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData) -> SoftBodyPoseData_positions_get
    void SoftBodyPoseData_weights_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,java.nio.FloatBuffer) -> SoftBodyPoseData_weights_set
    java.nio.FloatBuffer SoftBodyPoseData_weights_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData) -> SoftBodyPoseData_weights_get
    void SoftBodyPoseData_numPositions_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,int) -> SoftBodyPoseData_numPositions_set
    int SoftBodyPoseData_numPositions_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData) -> SoftBodyPoseData_numPositions_get
    void SoftBodyPoseData_numWeigts_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,int) -> SoftBodyPoseData_numWeigts_set
    int SoftBodyPoseData_numWeigts_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData) -> SoftBodyPoseData_numWeigts_get
    void SoftBodyPoseData_bvolume_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,int) -> SoftBodyPoseData_bvolume_set
    int SoftBodyPoseData_bvolume_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData) -> SoftBodyPoseData_bvolume_get
    void SoftBodyPoseData_bframe_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,int) -> SoftBodyPoseData_bframe_set
    int SoftBodyPoseData_bframe_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData) -> SoftBodyPoseData_bframe_get
    void SoftBodyPoseData_restVolume_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,float) -> SoftBodyPoseData_restVolume_set
    float SoftBodyPoseData_restVolume_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData) -> SoftBodyPoseData_restVolume_get
    void SoftBodyPoseData_pad_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData,int) -> SoftBodyPoseData_pad_set
    int SoftBodyPoseData_pad_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData) -> SoftBodyPoseData_pad_get
    long new_SoftBodyPoseData() -> new_SoftBodyPoseData
    void delete_SoftBodyPoseData(long) -> delete_SoftBodyPoseData
    void SoftBodyClusterData_framexform_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long,com.badlogic.gdx.physics.bullet.linearmath.btTransformFloatData) -> SoftBodyClusterData_framexform_set
    long SoftBodyClusterData_framexform_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_framexform_get
    void SoftBodyClusterData_locii_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long) -> SoftBodyClusterData_locii_set
    long SoftBodyClusterData_locii_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_locii_get
    void SoftBodyClusterData_invwi_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long) -> SoftBodyClusterData_invwi_set
    long SoftBodyClusterData_invwi_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_invwi_get
    void SoftBodyClusterData_com_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftBodyClusterData_com_set
    long SoftBodyClusterData_com_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_com_get
    void SoftBodyClusterData_vimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftBodyClusterData_vimpulses_set
    long SoftBodyClusterData_vimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_vimpulses_get
    void SoftBodyClusterData_dimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftBodyClusterData_dimpulses_set
    long SoftBodyClusterData_dimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_dimpulses_get
    void SoftBodyClusterData_lv_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftBodyClusterData_lv_set
    long SoftBodyClusterData_lv_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_lv_get
    void SoftBodyClusterData_av_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftBodyClusterData_av_set
    long SoftBodyClusterData_av_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_av_get
    void SoftBodyClusterData_framerefs_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> SoftBodyClusterData_framerefs_set
    long SoftBodyClusterData_framerefs_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_framerefs_get
    void SoftBodyClusterData_nodeIndices_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,java.nio.IntBuffer) -> SoftBodyClusterData_nodeIndices_set
    java.nio.IntBuffer SoftBodyClusterData_nodeIndices_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_nodeIndices_get
    void SoftBodyClusterData_masses_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,java.nio.FloatBuffer) -> SoftBodyClusterData_masses_set
    java.nio.FloatBuffer SoftBodyClusterData_masses_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_masses_get
    void SoftBodyClusterData_numFrameRefs_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int) -> SoftBodyClusterData_numFrameRefs_set
    int SoftBodyClusterData_numFrameRefs_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_numFrameRefs_get
    void SoftBodyClusterData_numNodes_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int) -> SoftBodyClusterData_numNodes_set
    int SoftBodyClusterData_numNodes_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_numNodes_get
    void SoftBodyClusterData_numMasses_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int) -> SoftBodyClusterData_numMasses_set
    int SoftBodyClusterData_numMasses_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_numMasses_get
    void SoftBodyClusterData_idmass_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float) -> SoftBodyClusterData_idmass_set
    float SoftBodyClusterData_idmass_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_idmass_get
    void SoftBodyClusterData_imass_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float) -> SoftBodyClusterData_imass_set
    float SoftBodyClusterData_imass_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_imass_get
    void SoftBodyClusterData_nvimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int) -> SoftBodyClusterData_nvimpulses_set
    int SoftBodyClusterData_nvimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_nvimpulses_get
    void SoftBodyClusterData_ndimpulses_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int) -> SoftBodyClusterData_ndimpulses_set
    int SoftBodyClusterData_ndimpulses_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_ndimpulses_get
    void SoftBodyClusterData_ndamping_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float) -> SoftBodyClusterData_ndamping_set
    float SoftBodyClusterData_ndamping_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_ndamping_get
    void SoftBodyClusterData_ldamping_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float) -> SoftBodyClusterData_ldamping_set
    float SoftBodyClusterData_ldamping_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_ldamping_get
    void SoftBodyClusterData_adamping_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float) -> SoftBodyClusterData_adamping_set
    float SoftBodyClusterData_adamping_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_adamping_get
    void SoftBodyClusterData_matching_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float) -> SoftBodyClusterData_matching_set
    float SoftBodyClusterData_matching_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_matching_get
    void SoftBodyClusterData_maxSelfCollisionImpulse_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float) -> SoftBodyClusterData_maxSelfCollisionImpulse_set
    float SoftBodyClusterData_maxSelfCollisionImpulse_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_maxSelfCollisionImpulse_get
    void SoftBodyClusterData_selfCollisionImpulseFactor_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,float) -> SoftBodyClusterData_selfCollisionImpulseFactor_set
    float SoftBodyClusterData_selfCollisionImpulseFactor_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_selfCollisionImpulseFactor_get
    void SoftBodyClusterData_containsAnchor_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int) -> SoftBodyClusterData_containsAnchor_set
    int SoftBodyClusterData_containsAnchor_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_containsAnchor_get
    void SoftBodyClusterData_collide_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int) -> SoftBodyClusterData_collide_set
    int SoftBodyClusterData_collide_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_collide_get
    void SoftBodyClusterData_clusterIndex_set(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData,int) -> SoftBodyClusterData_clusterIndex_set
    int SoftBodyClusterData_clusterIndex_get(long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> SoftBodyClusterData_clusterIndex_get
    long new_SoftBodyClusterData() -> new_SoftBodyClusterData
    void delete_SoftBodyClusterData(long) -> delete_SoftBodyClusterData
    void btSoftBodyJointData_bodyA_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,long) -> btSoftBodyJointData_bodyA_set
    long btSoftBodyJointData_bodyA_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData) -> btSoftBodyJointData_bodyA_get
    void btSoftBodyJointData_bodyB_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,long) -> btSoftBodyJointData_bodyB_set
    long btSoftBodyJointData_bodyB_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData) -> btSoftBodyJointData_bodyB_get
    void btSoftBodyJointData_refs_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btSoftBodyJointData_refs_set
    long btSoftBodyJointData_refs_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData) -> btSoftBodyJointData_refs_get
    void btSoftBodyJointData_cfm_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,float) -> btSoftBodyJointData_cfm_set
    float btSoftBodyJointData_cfm_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData) -> btSoftBodyJointData_cfm_get
    void btSoftBodyJointData_erp_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,float) -> btSoftBodyJointData_erp_set
    float btSoftBodyJointData_erp_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData) -> btSoftBodyJointData_erp_get
    void btSoftBodyJointData_split_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,float) -> btSoftBodyJointData_split_set
    float btSoftBodyJointData_split_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData) -> btSoftBodyJointData_split_get
    void btSoftBodyJointData_delete_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,int) -> btSoftBodyJointData_delete_set
    int btSoftBodyJointData_delete_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData) -> btSoftBodyJointData_delete_get
    void btSoftBodyJointData_relPosition_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> btSoftBodyJointData_relPosition_set
    long btSoftBodyJointData_relPosition_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData) -> btSoftBodyJointData_relPosition_get
    void btSoftBodyJointData_bodyAtype_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,int) -> btSoftBodyJointData_bodyAtype_set
    int btSoftBodyJointData_bodyAtype_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData) -> btSoftBodyJointData_bodyAtype_get
    void btSoftBodyJointData_bodyBtype_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,int) -> btSoftBodyJointData_bodyBtype_set
    int btSoftBodyJointData_bodyBtype_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData) -> btSoftBodyJointData_bodyBtype_get
    void btSoftBodyJointData_jointType_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,int) -> btSoftBodyJointData_jointType_set
    int btSoftBodyJointData_jointType_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData) -> btSoftBodyJointData_jointType_get
    void btSoftBodyJointData_pad_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData,int) -> btSoftBodyJointData_pad_set
    int btSoftBodyJointData_pad_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData) -> btSoftBodyJointData_pad_get
    long new_btSoftBodyJointData() -> new_btSoftBodyJointData
    void delete_btSoftBodyJointData(long) -> delete_btSoftBodyJointData
    void btSoftBodyFloatData_collisionObjectData_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> btSoftBodyFloatData_collisionObjectData_set
    long btSoftBodyFloatData_collisionObjectData_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_collisionObjectData_get
    void btSoftBodyFloatData_pose_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData) -> btSoftBodyFloatData_pose_set
    long btSoftBodyFloatData_pose_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_pose_get
    void btSoftBodyFloatData_materials_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long) -> btSoftBodyFloatData_materials_set
    long btSoftBodyFloatData_materials_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_materials_get
    void btSoftBodyFloatData_nodes_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData) -> btSoftBodyFloatData_nodes_set
    long btSoftBodyFloatData_nodes_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_nodes_get
    void btSoftBodyFloatData_links_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData) -> btSoftBodyFloatData_links_set
    long btSoftBodyFloatData_links_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_links_get
    void btSoftBodyFloatData_faces_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData) -> btSoftBodyFloatData_faces_set
    long btSoftBodyFloatData_faces_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_faces_get
    void btSoftBodyFloatData_tetrahedra_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData) -> btSoftBodyFloatData_tetrahedra_set
    long btSoftBodyFloatData_tetrahedra_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_tetrahedra_get
    void btSoftBodyFloatData_anchors_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData) -> btSoftBodyFloatData_anchors_set
    long btSoftBodyFloatData_anchors_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_anchors_get
    void btSoftBodyFloatData_clusters_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> btSoftBodyFloatData_clusters_set
    long btSoftBodyFloatData_clusters_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_clusters_get
    void btSoftBodyFloatData_joints_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData) -> btSoftBodyFloatData_joints_set
    long btSoftBodyFloatData_joints_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_joints_get
    void btSoftBodyFloatData_numMaterials_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int) -> btSoftBodyFloatData_numMaterials_set
    int btSoftBodyFloatData_numMaterials_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_numMaterials_get
    void btSoftBodyFloatData_numNodes_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int) -> btSoftBodyFloatData_numNodes_set
    int btSoftBodyFloatData_numNodes_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_numNodes_get
    void btSoftBodyFloatData_numLinks_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int) -> btSoftBodyFloatData_numLinks_set
    int btSoftBodyFloatData_numLinks_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_numLinks_get
    void btSoftBodyFloatData_numFaces_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int) -> btSoftBodyFloatData_numFaces_set
    int btSoftBodyFloatData_numFaces_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_numFaces_get
    void btSoftBodyFloatData_numTetrahedra_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int) -> btSoftBodyFloatData_numTetrahedra_set
    int btSoftBodyFloatData_numTetrahedra_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_numTetrahedra_get
    void btSoftBodyFloatData_numAnchors_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int) -> btSoftBodyFloatData_numAnchors_set
    int btSoftBodyFloatData_numAnchors_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_numAnchors_get
    void btSoftBodyFloatData_numClusters_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int) -> btSoftBodyFloatData_numClusters_set
    int btSoftBodyFloatData_numClusters_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_numClusters_get
    void btSoftBodyFloatData_numJoints_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,int) -> btSoftBodyFloatData_numJoints_set
    int btSoftBodyFloatData_numJoints_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_numJoints_get
    void btSoftBodyFloatData_config_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData,long,com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> btSoftBodyFloatData_config_set
    long btSoftBodyFloatData_config_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> btSoftBodyFloatData_config_get
    long new_btSoftBodyFloatData() -> new_btSoftBodyFloatData
    void delete_btSoftBodyFloatData(long) -> delete_btSoftBodyFloatData
    long new_fDrawFlags() -> new_fDrawFlags
    void delete_fDrawFlags(long) -> delete_fDrawFlags
    void btSoftBodyHelpers_Draw__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int) -> btSoftBodyHelpers_Draw__SWIG_0
    void btSoftBodyHelpers_Draw__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btSoftBodyHelpers_Draw__SWIG_1
    void btSoftBodyHelpers_DrawInfos(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean,boolean,boolean) -> btSoftBodyHelpers_DrawInfos
    void btSoftBodyHelpers_DrawNodeTree__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int,int) -> btSoftBodyHelpers_DrawNodeTree__SWIG_0
    void btSoftBodyHelpers_DrawNodeTree__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int) -> btSoftBodyHelpers_DrawNodeTree__SWIG_1
    void btSoftBodyHelpers_DrawNodeTree__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btSoftBodyHelpers_DrawNodeTree__SWIG_2
    void btSoftBodyHelpers_DrawFaceTree__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int,int) -> btSoftBodyHelpers_DrawFaceTree__SWIG_0
    void btSoftBodyHelpers_DrawFaceTree__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int) -> btSoftBodyHelpers_DrawFaceTree__SWIG_1
    void btSoftBodyHelpers_DrawFaceTree__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btSoftBodyHelpers_DrawFaceTree__SWIG_2
    void btSoftBodyHelpers_DrawClusterTree__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int,int) -> btSoftBodyHelpers_DrawClusterTree__SWIG_0
    void btSoftBodyHelpers_DrawClusterTree__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int) -> btSoftBodyHelpers_DrawClusterTree__SWIG_1
    void btSoftBodyHelpers_DrawClusterTree__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btSoftBodyHelpers_DrawClusterTree__SWIG_2
    void btSoftBodyHelpers_DrawFrame(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> btSoftBodyHelpers_DrawFrame
    long btSoftBodyHelpers_CreateRope(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int) -> btSoftBodyHelpers_CreateRope
    long btSoftBodyHelpers_CreatePatch(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,boolean) -> btSoftBodyHelpers_CreatePatch
    long btSoftBodyHelpers_CreatePatchUV__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,boolean,java.nio.FloatBuffer) -> btSoftBodyHelpers_CreatePatchUV__SWIG_0
    long btSoftBodyHelpers_CreatePatchUV__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,boolean) -> btSoftBodyHelpers_CreatePatchUV__SWIG_1
    float btSoftBodyHelpers_CalculateUV(int,int,int,int,int) -> btSoftBodyHelpers_CalculateUV
    long btSoftBodyHelpers_CreateEllipsoid(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int) -> btSoftBodyHelpers_CreateEllipsoid
    long btSoftBodyHelpers_CreateFromTriMesh__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.nio.FloatBuffer,java.nio.IntBuffer,int,boolean) -> btSoftBodyHelpers_CreateFromTriMesh__SWIG_0
    long btSoftBodyHelpers_CreateFromTriMesh__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.nio.FloatBuffer,java.nio.IntBuffer,int) -> btSoftBodyHelpers_CreateFromTriMesh__SWIG_1
    long btSoftBodyHelpers_CreateFromConvexHull__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,boolean) -> btSoftBodyHelpers_CreateFromConvexHull__SWIG_0
    long btSoftBodyHelpers_CreateFromConvexHull__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int) -> btSoftBodyHelpers_CreateFromConvexHull__SWIG_1
    long btSoftBodyHelpers_CreateFromTetGenData(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean) -> btSoftBodyHelpers_CreateFromTetGenData
    long new_btSoftBodyHelpers() -> new_btSoftBodyHelpers
    void delete_btSoftBodyHelpers(long) -> delete_btSoftBodyHelpers
    void btSoftBodyCollisionShape_body_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftBodyCollisionShape_body_set
    long btSoftBodyCollisionShape_body_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape) -> btSoftBodyCollisionShape_body_get
    long new_btSoftBodyCollisionShape(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> new_btSoftBodyCollisionShape
    void delete_btSoftBodyCollisionShape(long) -> delete_btSoftBodyCollisionShape
    void btSoftClusterCollisionShape_cluster_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> btSoftClusterCollisionShape_cluster_set
    long btSoftClusterCollisionShape_cluster_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape) -> btSoftClusterCollisionShape_cluster_get
    long new_btSoftClusterCollisionShape(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> new_btSoftClusterCollisionShape
    int btSoftClusterCollisionShape_getShapeType(long,com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape) -> btSoftClusterCollisionShape_getShapeType
    void delete_btSoftClusterCollisionShape(long) -> delete_btSoftClusterCollisionShape
    com.badlogic.gdx.math.Matrix3 Lerp(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,float) -> Lerp
    com.badlogic.gdx.math.Vector3 Clamp(com.badlogic.gdx.math.Vector3,float) -> Clamp
    float ClusterMetric(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ClusterMetric
    com.badlogic.gdx.math.Matrix3 ScaleAlongAxis(com.badlogic.gdx.math.Vector3,float) -> ScaleAlongAxis
    com.badlogic.gdx.math.Matrix3 Cross(com.badlogic.gdx.math.Vector3) -> Cross
    com.badlogic.gdx.math.Matrix3 Diagonal(float) -> Diagonal
    com.badlogic.gdx.math.Matrix3 Add(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3) -> Add
    com.badlogic.gdx.math.Matrix3 Sub(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3) -> Sub
    com.badlogic.gdx.math.Matrix3 Mul(com.badlogic.gdx.math.Matrix3,float) -> Mul
    void Orthogonalize(com.badlogic.gdx.math.Matrix3) -> Orthogonalize
    com.badlogic.gdx.math.Matrix3 MassMatrix(float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3) -> MassMatrix
    com.badlogic.gdx.math.Matrix3 ImpulseMatrix__SWIG_0(float,float,float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3) -> ImpulseMatrix__SWIG_0
    com.badlogic.gdx.math.Matrix3 ImpulseMatrix__SWIG_1(float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Vector3) -> ImpulseMatrix__SWIG_1
    com.badlogic.gdx.math.Matrix3 AngularImpulseMatrix(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3) -> AngularImpulseMatrix
    com.badlogic.gdx.math.Vector3 ProjectOnAxis(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ProjectOnAxis
    com.badlogic.gdx.math.Vector3 ProjectOnPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> ProjectOnPlane
    void ProjectOrigin__SWIG_0(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long) -> ProjectOrigin__SWIG_0
    void ProjectOrigin__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,long) -> ProjectOrigin__SWIG_1
    com.badlogic.gdx.math.Vector3 BaryCoord(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> BaryCoord
    float ImplicitSolve__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float,int) -> ImplicitSolve__SWIG_0
    float ImplicitSolve__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> ImplicitSolve__SWIG_1
    com.badlogic.gdx.math.Vector3 NormalizeAny(com.badlogic.gdx.math.Vector3) -> NormalizeAny
    long VolumeOf__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face,float) -> VolumeOf__SWIG_0
    com.badlogic.gdx.math.Vector3 CenterOf(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face) -> CenterOf
    float AreaOf(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> AreaOf
    float VolumeOf__SWIG_1(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> VolumeOf__SWIG_1
    void EvaluateMedium(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium) -> EvaluateMedium
    void ApplyClampedForce(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.math.Vector3,float) -> ApplyClampedForce
    int MatchEdge(long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> MatchEdge
    int btEigen_system__SWIG_0(com.badlogic.gdx.math.Matrix3,long,long,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> btEigen_system__SWIG_0
    int btEigen_system__SWIG_1(com.badlogic.gdx.math.Matrix3,long) -> btEigen_system__SWIG_1
    long new_btEigen() -> new_btEigen
    void delete_btEigen(long) -> delete_btEigen
    int PolarDecompose(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.math.Matrix3) -> PolarDecompose
    void btSoftColliders_ClusterBase_erp_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase,float) -> btSoftColliders_ClusterBase_erp_set
    float btSoftColliders_ClusterBase_erp_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase) -> btSoftColliders_ClusterBase_erp_get
    void btSoftColliders_ClusterBase_idt_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase,float) -> btSoftColliders_ClusterBase_idt_set
    float btSoftColliders_ClusterBase_idt_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase) -> btSoftColliders_ClusterBase_idt_get
    void btSoftColliders_ClusterBase_margin_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase,float) -> btSoftColliders_ClusterBase_margin_set
    float btSoftColliders_ClusterBase_margin_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase) -> btSoftColliders_ClusterBase_margin_get
    void btSoftColliders_ClusterBase_friction_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase,float) -> btSoftColliders_ClusterBase_friction_set
    float btSoftColliders_ClusterBase_friction_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase) -> btSoftColliders_ClusterBase_friction_get
    void btSoftColliders_ClusterBase_threshold_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase,float) -> btSoftColliders_ClusterBase_threshold_set
    float btSoftColliders_ClusterBase_threshold_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase) -> btSoftColliders_ClusterBase_threshold_get
    long new_btSoftColliders_ClusterBase() -> new_btSoftColliders_ClusterBase
    boolean btSoftColliders_ClusterBase_SolveContact(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase,long,com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint) -> btSoftColliders_ClusterBase_SolveContact
    void delete_btSoftColliders_ClusterBase(long) -> delete_btSoftColliders_ClusterBase
    void btSoftColliders_CollideCL_RS_psb_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftColliders_CollideCL_RS_psb_set
    long btSoftColliders_CollideCL_RS_psb_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS) -> btSoftColliders_CollideCL_RS_psb_get
    void btSoftColliders_CollideCL_RS_colObjWrap_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btSoftColliders_CollideCL_RS_colObjWrap_set
    long btSoftColliders_CollideCL_RS_colObjWrap_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS) -> btSoftColliders_CollideCL_RS_colObjWrap_get
    void btSoftColliders_CollideCL_RS_ProcessColObj(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btSoftColliders_CollideCL_RS_ProcessColObj
    long new_btSoftColliders_CollideCL_RS() -> new_btSoftColliders_CollideCL_RS
    void delete_btSoftColliders_CollideCL_RS(long) -> delete_btSoftColliders_CollideCL_RS
    void btSoftColliders_CollideCL_SS_bodies_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS,long) -> btSoftColliders_CollideCL_SS_bodies_set
    long btSoftColliders_CollideCL_SS_bodies_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS) -> btSoftColliders_CollideCL_SS_bodies_get
    void btSoftColliders_CollideCL_SS_ProcessSoftSoft(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftColliders_CollideCL_SS_ProcessSoftSoft
    long new_btSoftColliders_CollideCL_SS() -> new_btSoftColliders_CollideCL_SS
    void delete_btSoftColliders_CollideCL_SS(long) -> delete_btSoftColliders_CollideCL_SS
    void btSoftColliders_CollideSDF_RS_DoNode(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> btSoftColliders_CollideSDF_RS_DoNode
    void btSoftColliders_CollideSDF_RS_psb_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftColliders_CollideSDF_RS_psb_set
    long btSoftColliders_CollideSDF_RS_psb_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS) -> btSoftColliders_CollideSDF_RS_psb_get
    void btSoftColliders_CollideSDF_RS_colObj1Wrap_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> btSoftColliders_CollideSDF_RS_colObj1Wrap_set
    long btSoftColliders_CollideSDF_RS_colObj1Wrap_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS) -> btSoftColliders_CollideSDF_RS_colObj1Wrap_get
    void btSoftColliders_CollideSDF_RS_rigidBody_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS,long,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> btSoftColliders_CollideSDF_RS_rigidBody_set
    long btSoftColliders_CollideSDF_RS_rigidBody_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS) -> btSoftColliders_CollideSDF_RS_rigidBody_get
    void btSoftColliders_CollideSDF_RS_dynmargin_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS,float) -> btSoftColliders_CollideSDF_RS_dynmargin_set
    float btSoftColliders_CollideSDF_RS_dynmargin_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS) -> btSoftColliders_CollideSDF_RS_dynmargin_get
    void btSoftColliders_CollideSDF_RS_stamargin_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS,float) -> btSoftColliders_CollideSDF_RS_stamargin_set
    float btSoftColliders_CollideSDF_RS_stamargin_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS) -> btSoftColliders_CollideSDF_RS_stamargin_get
    long new_btSoftColliders_CollideSDF_RS() -> new_btSoftColliders_CollideSDF_RS
    void delete_btSoftColliders_CollideSDF_RS(long) -> delete_btSoftColliders_CollideSDF_RS
    void btSoftColliders_CollideVF_SS_psb_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS,long) -> btSoftColliders_CollideVF_SS_psb_set
    long btSoftColliders_CollideVF_SS_psb_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS) -> btSoftColliders_CollideVF_SS_psb_get
    void btSoftColliders_CollideVF_SS_mrg_set(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS,float) -> btSoftColliders_CollideVF_SS_mrg_set
    float btSoftColliders_CollideVF_SS_mrg_get(long,com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS) -> btSoftColliders_CollideVF_SS_mrg_get
    long new_btSoftColliders_CollideVF_SS() -> new_btSoftColliders_CollideVF_SS
    void delete_btSoftColliders_CollideVF_SS(long) -> delete_btSoftColliders_CollideVF_SS
    long new_btSoftColliders() -> new_btSoftColliders
    void delete_btSoftColliders(long) -> delete_btSoftColliders
    long new_btSoftBodyRigidBodyCollisionConfiguration__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDefaultCollisionConstructionInfo) -> new_btSoftBodyRigidBodyCollisionConfiguration__SWIG_0
    long new_btSoftBodyRigidBodyCollisionConfiguration__SWIG_1() -> new_btSoftBodyRigidBodyCollisionConfiguration__SWIG_1
    void delete_btSoftBodyRigidBodyCollisionConfiguration(long) -> delete_btSoftBodyRigidBodyCollisionConfiguration
    void delete_btVertexBufferDescriptor(long) -> delete_btVertexBufferDescriptor
    boolean btVertexBufferDescriptor_hasVertexPositions(long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor) -> btVertexBufferDescriptor_hasVertexPositions
    boolean btVertexBufferDescriptor_hasNormals(long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor) -> btVertexBufferDescriptor_hasNormals
    int btVertexBufferDescriptor_getBufferType(long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor) -> btVertexBufferDescriptor_getBufferType
    int btVertexBufferDescriptor_getVertexOffset(long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor) -> btVertexBufferDescriptor_getVertexOffset
    int btVertexBufferDescriptor_getVertexStride(long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor) -> btVertexBufferDescriptor_getVertexStride
    int btVertexBufferDescriptor_getNormalOffset(long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor) -> btVertexBufferDescriptor_getNormalOffset
    int btVertexBufferDescriptor_getNormalStride(long,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor) -> btVertexBufferDescriptor_getNormalStride
    long new_btCPUVertexBufferDescriptor__SWIG_0(java.nio.FloatBuffer,int,int) -> new_btCPUVertexBufferDescriptor__SWIG_0
    long new_btCPUVertexBufferDescriptor__SWIG_1(java.nio.FloatBuffer,int,int,int,int) -> new_btCPUVertexBufferDescriptor__SWIG_1
    void delete_btCPUVertexBufferDescriptor(long) -> delete_btCPUVertexBufferDescriptor
    java.nio.FloatBuffer btCPUVertexBufferDescriptor_getBasePointer(long,com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor) -> btCPUVertexBufferDescriptor_getBasePointer
    long new_btSoftRigidCollisionAlgorithm(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,boolean) -> new_btSoftRigidCollisionAlgorithm
    void delete_btSoftRigidCollisionAlgorithm(long) -> delete_btSoftRigidCollisionAlgorithm
    long new_btSoftRigidCollisionAlgorithm_CreateFunc() -> new_btSoftRigidCollisionAlgorithm_CreateFunc
    void delete_btSoftRigidCollisionAlgorithm_CreateFunc(long) -> delete_btSoftRigidCollisionAlgorithm_CreateFunc
    long new_btSoftRigidDynamicsWorld__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver) -> new_btSoftRigidDynamicsWorld__SWIG_0
    long new_btSoftRigidDynamicsWorld__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btDispatcher,long,com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface,long,com.badlogic.gdx.physics.bullet.dynamics.btConstraintSolver,long,com.badlogic.gdx.physics.bullet.collision.btCollisionConfiguration) -> new_btSoftRigidDynamicsWorld__SWIG_1
    void delete_btSoftRigidDynamicsWorld(long) -> delete_btSoftRigidDynamicsWorld
    void btSoftRigidDynamicsWorld_addSoftBody__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,short,short) -> btSoftRigidDynamicsWorld_addSoftBody__SWIG_0
    void btSoftRigidDynamicsWorld_addSoftBody__SWIG_1(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody,short) -> btSoftRigidDynamicsWorld_addSoftBody__SWIG_1
    void btSoftRigidDynamicsWorld_addSoftBody__SWIG_2(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftRigidDynamicsWorld_addSoftBody__SWIG_2
    void btSoftRigidDynamicsWorld_removeSoftBody(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld,long,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> btSoftRigidDynamicsWorld_removeSoftBody
    int btSoftRigidDynamicsWorld_getDrawFlags(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld) -> btSoftRigidDynamicsWorld_getDrawFlags
    void btSoftRigidDynamicsWorld_setDrawFlags(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld,int) -> btSoftRigidDynamicsWorld_setDrawFlags
    long btSoftRigidDynamicsWorld_getWorldInfo__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld) -> btSoftRigidDynamicsWorld_getWorldInfo__SWIG_0
    long btSoftRigidDynamicsWorld_getSoftBodyArray__SWIG_0(long,com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld) -> btSoftRigidDynamicsWorld_getSoftBodyArray__SWIG_0
    void btSoftRigidDynamicsWorld_rayTestSingle(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,long,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,long,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> btSoftRigidDynamicsWorld_rayTestSingle
    long new_btSoftSoftCollisionAlgorithm__SWIG_0(long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo) -> new_btSoftSoftCollisionAlgorithm__SWIG_0
    long new_btSoftSoftCollisionAlgorithm__SWIG_1(long,com.badlogic.gdx.physics.bullet.collision.btPersistentManifold,long,com.badlogic.gdx.physics.bullet.collision.btCollisionAlgorithmConstructionInfo,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,long,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> new_btSoftSoftCollisionAlgorithm__SWIG_1
    void delete_btSoftSoftCollisionAlgorithm(long) -> delete_btSoftSoftCollisionAlgorithm
    long new_btSoftSoftCollisionAlgorithm_CreateFunc() -> new_btSoftSoftCollisionAlgorithm_CreateFunc
    void delete_btSoftSoftCollisionAlgorithm_CreateFunc(long) -> delete_btSoftSoftCollisionAlgorithm_CreateFunc
    long btDefaultSoftBodySolver_SWIGUpcast(long) -> btDefaultSoftBodySolver_SWIGUpcast
    long btSoftBody_Material_SWIGUpcast(long) -> btSoftBody_Material_SWIGUpcast
    long btSoftBody_Feature_SWIGUpcast(long) -> btSoftBody_Feature_SWIGUpcast
    long btSoftBody_Node_SWIGUpcast(long) -> btSoftBody_Node_SWIGUpcast
    long btSoftBody_Link_SWIGUpcast(long) -> btSoftBody_Link_SWIGUpcast
    long btSoftBody_Face_SWIGUpcast(long) -> btSoftBody_Face_SWIGUpcast
    long btSoftBody_Tetra_SWIGUpcast(long) -> btSoftBody_Tetra_SWIGUpcast
    long btSoftBody_Note_SWIGUpcast(long) -> btSoftBody_Note_SWIGUpcast
    long btSoftBody_LJoint_Specs_SWIGUpcast(long) -> btSoftBody_LJoint_Specs_SWIGUpcast
    long btSoftBody_LJoint_SWIGUpcast(long) -> btSoftBody_LJoint_SWIGUpcast
    long btSoftBody_AJoint_Specs_SWIGUpcast(long) -> btSoftBody_AJoint_Specs_SWIGUpcast
    long btSoftBody_AJoint_SWIGUpcast(long) -> btSoftBody_AJoint_SWIGUpcast
    long btSoftBody_CJoint_SWIGUpcast(long) -> btSoftBody_CJoint_SWIGUpcast
    long btSoftBody_RayFromToCaster_SWIGUpcast(long) -> btSoftBody_RayFromToCaster_SWIGUpcast
    long btSoftBody_SWIGUpcast(long) -> btSoftBody_SWIGUpcast
    long btSoftBodyTriangleCallback_SWIGUpcast(long) -> btSoftBodyTriangleCallback_SWIGUpcast
    long btSoftBodyConcaveCollisionAlgorithm_CreateFunc_SWIGUpcast(long) -> btSoftBodyConcaveCollisionAlgorithm_CreateFunc_SWIGUpcast
    long btSoftBodyConcaveCollisionAlgorithm_SwappedCreateFunc_SWIGUpcast(long) -> btSoftBodyConcaveCollisionAlgorithm_SwappedCreateFunc_SWIGUpcast
    long btSoftBodyConcaveCollisionAlgorithm_SWIGUpcast(long) -> btSoftBodyConcaveCollisionAlgorithm_SWIGUpcast
    long btSoftBodyCollisionShape_SWIGUpcast(long) -> btSoftBodyCollisionShape_SWIGUpcast
    long btSoftClusterCollisionShape_SWIGUpcast(long) -> btSoftClusterCollisionShape_SWIGUpcast
    long btSoftColliders_ClusterBase_SWIGUpcast(long) -> btSoftColliders_ClusterBase_SWIGUpcast
    long btSoftColliders_CollideCL_RS_SWIGUpcast(long) -> btSoftColliders_CollideCL_RS_SWIGUpcast
    long btSoftColliders_CollideCL_SS_SWIGUpcast(long) -> btSoftColliders_CollideCL_SS_SWIGUpcast
    long btSoftColliders_CollideSDF_RS_SWIGUpcast(long) -> btSoftColliders_CollideSDF_RS_SWIGUpcast
    long btSoftColliders_CollideVF_SS_SWIGUpcast(long) -> btSoftColliders_CollideVF_SS_SWIGUpcast
    long btSoftBodyRigidBodyCollisionConfiguration_SWIGUpcast(long) -> btSoftBodyRigidBodyCollisionConfiguration_SWIGUpcast
    long btCPUVertexBufferDescriptor_SWIGUpcast(long) -> btCPUVertexBufferDescriptor_SWIGUpcast
    long btSoftRigidCollisionAlgorithm_CreateFunc_SWIGUpcast(long) -> btSoftRigidCollisionAlgorithm_CreateFunc_SWIGUpcast
    long btSoftRigidCollisionAlgorithm_SWIGUpcast(long) -> btSoftRigidCollisionAlgorithm_SWIGUpcast
    long btSoftRigidDynamicsWorld_SWIGUpcast(long) -> btSoftRigidDynamicsWorld_SWIGUpcast
    long btSoftSoftCollisionAlgorithm_CreateFunc_SWIGUpcast(long) -> btSoftSoftCollisionAlgorithm_CreateFunc_SWIGUpcast
    long btSoftSoftCollisionAlgorithm_SWIGUpcast(long) -> btSoftSoftCollisionAlgorithm_SWIGUpcast
com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor -> com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btCPUVertexBufferDescriptor) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    long SwigConstructbtCPUVertexBufferDescriptor(java.nio.FloatBuffer,int,int) -> SwigConstructbtCPUVertexBufferDescriptor
    long SwigConstructbtCPUVertexBufferDescriptor(java.nio.FloatBuffer,int,int,int,int) -> SwigConstructbtCPUVertexBufferDescriptor
    java.nio.FloatBuffer getBasePointer() -> getBasePointer
com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver -> com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btDefaultSoftBodySolver) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void optimize(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t,boolean) -> optimize
    void optimize(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t) -> optimize
    void copyBackToSoftBodies(boolean) -> copyBackToSoftBodies
    void copyBackToSoftBodies() -> copyBackToSoftBodies
    void copySoftBodyToVertexBuffer(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor) -> copySoftBodyToVertexBuffer
    void processCollision(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> processCollision
    void processCollision(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> processCollision
com.badlogic.gdx.physics.bullet.softbody.btEigen -> com.badlogic.gdx.physics.bullet.softbody.btEigen:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btEigen) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int system(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3,com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> system
    int system(com.badlogic.gdx.math.Matrix3,com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btMatrix3x3) -> system
com.badlogic.gdx.physics.bullet.softbody.btSoftBody -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setCollisionDisabledObjects(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray) -> setCollisionDisabledObjects
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectConstArray getCollisionDisabledObjects() -> getCollisionDisabledObjects
    void setSoftBodySolver(com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver) -> setSoftBodySolver
    com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver getSoftBodySolver() -> getSoftBodySolver
    void setCfg(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> setCfg
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config getCfg() -> getCfg
    void setSst(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState) -> setSst
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState getSst() -> getSst
    void setPose(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose) -> setPose
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose getPose() -> getPose
    void setTag(long) -> setTag
    long getTag() -> getTag
    void setWorldInfo(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo) -> setWorldInfo
    com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo getWorldInfo() -> getWorldInfo
    void setNotes(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t) -> setNotes
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Note_t getNotes() -> getNotes
    void setNodes(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t) -> setNodes
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_t getNodes() -> getNodes
    void setLinks(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t) -> setLinks
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Link_t getLinks() -> getLinks
    void setFaces(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t) -> setFaces
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Face_t getFaces() -> getFaces
    void setTetras(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t) -> setTetras
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Tetra_t getTetras() -> getTetras
    void setAnchors(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t) -> setAnchors
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Anchor_t getAnchors() -> getAnchors
    void setRcontacts(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t) -> setRcontacts
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__RContact_t getRcontacts() -> getRcontacts
    void setScontacts(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t) -> setScontacts
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__SContact_t getScontacts() -> getScontacts
    void setJoints(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t) -> setJoints
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Joint_p_t getJoints() -> getJoints
    void setMaterials(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t) -> setMaterials
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Material_p_t getMaterials() -> getMaterials
    void setTimeacc(float) -> setTimeacc
    float getTimeacc() -> getTimeacc
    void setBounds(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setBounds
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getBounds() -> getBounds
    void setBUpdateRtCst(boolean) -> setBUpdateRtCst
    boolean getBUpdateRtCst() -> getBUpdateRtCst
    void setNdbvt(com.badlogic.gdx.physics.bullet.collision.btDbvt) -> setNdbvt
    com.badlogic.gdx.physics.bullet.collision.btDbvt getNdbvt() -> getNdbvt
    void setFdbvt(com.badlogic.gdx.physics.bullet.collision.btDbvt) -> setFdbvt
    com.badlogic.gdx.physics.bullet.collision.btDbvt getFdbvt() -> getFdbvt
    void setCdbvt(com.badlogic.gdx.physics.bullet.collision.btDbvt) -> setCdbvt
    com.badlogic.gdx.physics.bullet.collision.btDbvt getCdbvt() -> getCdbvt
    void setClusters(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t) -> setClusters
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Cluster_p_t getClusters() -> getClusters
    void setClusterConnectivity(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_bool_t) -> setClusterConnectivity
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_bool_t getClusterConnectivity() -> getClusterConnectivity
    void setInitialWorldTransform(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setInitialWorldTransform
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getInitialWorldTransform() -> getInitialWorldTransform
    void setWindVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setWindVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWindVelocity() -> getWindVelocity
    void setRestLengthScale(float) -> setRestLengthScale
    float getRestLengthScale() -> getRestLengthScale
    long SwigConstructbtSoftBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,int,com.badlogic.gdx.physics.bullet.linearmath.btVector3,java.nio.FloatBuffer) -> SwigConstructbtSoftBody
    void initDefaults() -> initDefaults
    void setUserIndexMapping(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_int_t) -> setUserIndexMapping
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_int_t getUserIndexMapping() -> getUserIndexMapping
    boolean checkLink(int,int) -> checkLink
    boolean checkLink(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> checkLink
    boolean checkFace(int,int,int) -> checkFace
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material appendMaterial() -> appendMaterial
    void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.btVector4,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> appendNote
    void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.btVector4,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> appendNote
    void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.btVector4,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> appendNote
    void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.btVector4,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> appendNote
    void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.linearmath.btVector4) -> appendNote
    void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3) -> appendNote
    void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> appendNote
    void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link) -> appendNote
    void appendNote(java.lang.String,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face) -> appendNote
    void appendNode(com.badlogic.gdx.math.Vector3,float) -> appendNode
    void appendLink(int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> appendLink
    void appendLink(int) -> appendLink
    void appendLink() -> appendLink
    void appendLink(int,int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,boolean) -> appendLink
    void appendLink(int,int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> appendLink
    void appendLink(int,int) -> appendLink
    void appendLink(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material,boolean) -> appendLink
    void appendLink(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> appendLink
    void appendLink(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> appendLink
    void appendFace(int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> appendFace
    void appendFace(int) -> appendFace
    void appendFace() -> appendFace
    void appendFace(int,int,int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> appendFace
    void appendFace(int,int,int) -> appendFace
    void appendTetra(int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> appendTetra
    void appendTetra(int,int,int,int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> appendTetra
    void appendTetra(int,int,int,int) -> appendTetra
    void appendAnchor(int,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,boolean,float) -> appendAnchor
    void appendAnchor(int,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,boolean) -> appendAnchor
    void appendAnchor(int,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> appendAnchor
    void appendAnchor(int,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,boolean,float) -> appendAnchor
    void appendAnchor(int,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3,boolean) -> appendAnchor
    void appendAnchor(int,com.badlogic.gdx.physics.bullet.dynamics.btRigidBody,com.badlogic.gdx.math.Vector3) -> appendAnchor
    void appendLinearJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> appendLinearJoint
    void appendLinearJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> appendLinearJoint
    void appendLinearJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs) -> appendLinearJoint
    void appendLinearJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> appendLinearJoint
    void appendAngularJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> appendAngularJoint
    void appendAngularJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> appendAngularJoint
    void appendAngularJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs) -> appendAngularJoint
    void appendAngularJoint(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> appendAngularJoint
    void addForce(com.badlogic.gdx.math.Vector3) -> addForce
    void addForce(com.badlogic.gdx.math.Vector3,int) -> addForce
    void addAeroForceToNode(com.badlogic.gdx.math.Vector3,int) -> addAeroForceToNode
    void addAeroForceToFace(com.badlogic.gdx.math.Vector3,int) -> addAeroForceToFace
    void addVelocity(com.badlogic.gdx.math.Vector3) -> addVelocity
    void setVelocity(com.badlogic.gdx.math.Vector3) -> setVelocity
    void addVelocity(com.badlogic.gdx.math.Vector3,int) -> addVelocity
    void setMass(int,float) -> setMass
    float getMass(int) -> getMass
    float getTotalMass() -> getTotalMass
    void setTotalMass(float,boolean) -> setTotalMass
    void setTotalMass(float) -> setTotalMass
    void setTotalDensity(float) -> setTotalDensity
    void setVolumeMass(float) -> setVolumeMass
    void setVolumeDensity(float) -> setVolumeDensity
    void transform(com.badlogic.gdx.math.Matrix4) -> transform
    void translate(com.badlogic.gdx.math.Vector3) -> translate
    void rotate(com.badlogic.gdx.math.Quaternion) -> rotate
    void scale(com.badlogic.gdx.math.Vector3) -> scale
    void setPose(boolean,boolean) -> setPose
    void resetLinkRestLengths() -> resetLinkRestLengths
    float getVolume() -> getVolume
    int clusterCount() -> clusterCount
    com.badlogic.gdx.math.Vector3 clusterCom(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> clusterCom
    com.badlogic.gdx.math.Vector3 clusterCom(int) -> clusterCom
    com.badlogic.gdx.math.Vector3 clusterVelocity(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3) -> clusterVelocity
    void clusterVImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> clusterVImpulse
    void clusterDImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> clusterDImpulse
    void clusterImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse) -> clusterImpulse
    void clusterVAImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3) -> clusterVAImpulse
    void clusterDAImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3) -> clusterDAImpulse
    void clusterAImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse) -> clusterAImpulse
    void clusterDCImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster,com.badlogic.gdx.math.Vector3) -> clusterDCImpulse
    int generateBendingConstraints(int,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> generateBendingConstraints
    int generateBendingConstraints(int) -> generateBendingConstraints
    void randomizeConstraints() -> randomizeConstraints
    void releaseCluster(int) -> releaseCluster
    void releaseClusters() -> releaseClusters
    int generateClusters(int,int) -> generateClusters
    int generateClusters(int) -> generateClusters
    void refine(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn,float,boolean) -> refine
    boolean cutLink(int,int,float) -> cutLink
    boolean cutLink(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node,float) -> cutLink
    boolean rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast) -> rayTest
    void setSolver(int) -> setSolver
    void predictMotion(float) -> predictMotion
    void solveConstraints() -> solveConstraints
    void staticSolve(int) -> staticSolve
    void solveCommonConstraints(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody,int,int) -> solveCommonConstraints
    void solveClusters(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t) -> solveClusters
    void integrateMotion() -> integrateMotion
    void defaultCollisionHandler(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> defaultCollisionHandler
    void defaultCollisionHandler(com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> defaultCollisionHandler
    void setWindVelocity(com.badlogic.gdx.math.Vector3) -> setWindVelocity
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody upcast(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> upcast
    void getAabb(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> getAabb
    void pointersToIndices() -> pointersToIndices
    void indicesToPointers(java.nio.IntBuffer) -> indicesToPointers
    void indicesToPointers() -> indicesToPointers
    int rayTest(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_float,com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btSoftBody__eFeature___,com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_int,boolean) -> rayTest
    void initializeFaceTree() -> initializeFaceTree
    com.badlogic.gdx.math.Vector3 evaluateCom() -> evaluateCom
    boolean checkContact(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti) -> checkContact
    void updateNormals() -> updateNormals
    void updateBounds() -> updateBounds
    void updatePose() -> updatePose
    void updateConstants() -> updateConstants
    void updateLinkConstants() -> updateLinkConstants
    void updateArea(boolean) -> updateArea
    void updateArea() -> updateArea
    void initializeClusters() -> initializeClusters
    void updateClusters() -> updateClusters
    void cleanupClusters() -> cleanupClusters
    void prepareClusters(int) -> prepareClusters
    void solveClusters(float) -> solveClusters
    void applyClusters(boolean) -> applyClusters
    void dampClusters() -> dampClusters
    void applyForces() -> applyForces
    void PSolve_Anchors(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float) -> PSolve_Anchors
    void PSolve_RContacts(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float) -> PSolve_RContacts
    void PSolve_SContacts(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float) -> PSolve_SContacts
    void PSolve_Links(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float,float) -> PSolve_Links
    void VSolve_Links(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,float) -> VSolve_Links
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_f_p_btSoftBody_float_float__void getSolver(int) -> getSolver
    long SwigConstructbtSoftBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.nio.FloatBuffer,int,int,int,java.nio.ShortBuffer,int,int,java.nio.ShortBuffer,int) -> SwigConstructbtSoftBody
    int getNodeCount() -> getNodeCount
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node getNode(int) -> getNode
    void getVertices(java.nio.FloatBuffer,int,int,int) -> getVertices
    void getVertices(java.nio.FloatBuffer,int,int,java.nio.ShortBuffer,int,int,java.nio.ShortBuffer,int) -> getVertices
    void getVertices(java.nio.FloatBuffer,int,int,int,java.nio.ShortBuffer,int,int,java.nio.ShortBuffer,int) -> getVertices
    int getFaceCount() -> getFaceCount
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face getFace(int) -> getFace
    void getIndices(java.nio.ShortBuffer,int) -> getIndices
    void setConfig_kVCF(float) -> setConfig_kVCF
    void setConfig_kDP(float) -> setConfig_kDP
    void setConfig_kDG(float) -> setConfig_kDG
    void setConfig_kLF(float) -> setConfig_kLF
    void setConfig_kPR(float) -> setConfig_kPR
    void setConfig_kVC(float) -> setConfig_kVC
    void setConfig_kDF(float) -> setConfig_kDF
    void setConfig_kMT(float) -> setConfig_kMT
    void setConfig_kCHR(float) -> setConfig_kCHR
    void setConfig_kKHR(float) -> setConfig_kKHR
    void setConfig_kSHR(float) -> setConfig_kSHR
    void setConfig_kAHR(float) -> setConfig_kAHR
    void setConfig_kSRHR_CL(float) -> setConfig_kSRHR_CL
    void setConfig_kSKHR_CL(float) -> setConfig_kSKHR_CL
    void setConfig_kSSHR_CL(float) -> setConfig_kSSHR_CL
    void setConfig_kSR_SPLT_CL(float) -> setConfig_kSR_SPLT_CL
    void setConfig_kSK_SPLT_CL(float) -> setConfig_kSK_SPLT_CL
    void setConfig_kSS_SPLT_CL(float) -> setConfig_kSS_SPLT_CL
    void setConfig_maxvolume(float) -> setConfig_maxvolume
    void setConfig_timescale(float) -> setConfig_timescale
    void setConfig_viterations(int) -> setConfig_viterations
    void setConfig_piterations(int) -> setConfig_piterations
    void setConfig_diterations(int) -> setConfig_diterations
    void setConfig_citerations(int) -> setConfig_citerations
    void setConfig_collisions(int) -> setConfig_collisions
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setAxis(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAxis
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAxis() -> getAxis
    void setIcontrol(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl) -> setIcontrol
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl getIcontrol() -> getIcontrol
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void Prepare(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint) -> Prepare
    float Speed(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint,float) -> Speed
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl Default() -> Default
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$Specs) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setAxis(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAxis
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAxis() -> getAxis
    void setIcontrol(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl) -> setIcontrol
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$AJoint$IControl getIcontrol() -> getIcontrol
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Anchor) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setNode(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> setNode
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node getNode() -> getNode
    void setLocal(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setLocal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLocal() -> getLocal
    void setBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> setBody
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getBody() -> getBody
    void setInfluence(float) -> setInfluence
    float getInfluence() -> getInfluence
    void setC0(com.badlogic.gdx.math.Matrix3) -> setC0
    com.badlogic.gdx.math.Matrix3 getC0() -> getC0
    void setC1(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setC1
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getC1() -> getC1
    void setC2(float) -> setC2
    float getC2() -> getC2
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setSoft(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> setSoft
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster getSoft() -> getSoft
    void setRigid(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> setRigid
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigid() -> getRigid
    void setCollisionObject(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> setCollisionObject
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getCollisionObject() -> getCollisionObject
    void activate() -> activate
    com.badlogic.gdx.math.Matrix3 invWorldInertia() -> invWorldInertia
    float invMass() -> invMass
    com.badlogic.gdx.math.Matrix4 xform() -> xform
    com.badlogic.gdx.math.Vector3 linearVelocity() -> linearVelocity
    com.badlogic.gdx.math.Vector3 angularVelocity(com.badlogic.gdx.math.Vector3) -> angularVelocity
    com.badlogic.gdx.math.Vector3 angularVelocity() -> angularVelocity
    com.badlogic.gdx.math.Vector3 velocity(com.badlogic.gdx.math.Vector3) -> velocity
    void applyVImpulse(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> applyVImpulse
    void applyDImpulse(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> applyDImpulse
    void applyImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse,com.badlogic.gdx.math.Vector3) -> applyImpulse
    void applyVAImpulse(com.badlogic.gdx.math.Vector3) -> applyVAImpulse
    void applyDAImpulse(com.badlogic.gdx.math.Vector3) -> applyDAImpulse
    void applyAImpulse(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse) -> applyAImpulse
    void applyDCImpulse(com.badlogic.gdx.math.Vector3) -> applyDCImpulse
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setLife(int) -> setLife
    int getLife() -> getLife
    void setMaxlife(int) -> setMaxlife
    int getMaxlife() -> getMaxlife
    void setRpos(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setRpos
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRpos() -> getRpos
    void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setNormal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormal() -> getNormal
    void setFriction(float) -> setFriction
    float getFriction() -> getFriction
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setMasses(com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> setMasses
    com.badlogic.gdx.physics.bullet.linearmath.btScalarArray getMasses() -> getMasses
    void setNodes(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t) -> setNodes
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__Node_p_t getNodes() -> getNodes
    void setFramerefs(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> setFramerefs
    com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getFramerefs() -> getFramerefs
    void setFramexform(com.badlogic.gdx.physics.bullet.linearmath.btTransform) -> setFramexform
    com.badlogic.gdx.physics.bullet.linearmath.btTransform getFramexform() -> getFramexform
    void setIdmass(float) -> setIdmass
    float getIdmass() -> getIdmass
    void setImass(float) -> setImass
    float getImass() -> getImass
    void setLocii(com.badlogic.gdx.math.Matrix3) -> setLocii
    com.badlogic.gdx.math.Matrix3 getLocii() -> getLocii
    void setInvwi(com.badlogic.gdx.math.Matrix3) -> setInvwi
    com.badlogic.gdx.math.Matrix3 getInvwi() -> getInvwi
    void setCom(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setCom
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getCom() -> getCom
    void setVimpulses(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setVimpulses
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVimpulses() -> getVimpulses
    void setDimpulses(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setDimpulses
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getDimpulses() -> getDimpulses
    void setNvimpulses(int) -> setNvimpulses
    int getNvimpulses() -> getNvimpulses
    void setNdimpulses(int) -> setNdimpulses
    int getNdimpulses() -> getNdimpulses
    void setLv(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setLv
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getLv() -> getLv
    void setAv(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setAv
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getAv() -> getAv
    void setLeaf(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> setLeaf
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode getLeaf() -> getLeaf
    void setNdamping(float) -> setNdamping
    float getNdamping() -> getNdamping
    void setLdamping(float) -> setLdamping
    float getLdamping() -> getLdamping
    void setAdamping(float) -> setAdamping
    float getAdamping() -> getAdamping
    void setMatching(float) -> setMatching
    float getMatching() -> getMatching
    void setMaxSelfCollisionImpulse(float) -> setMaxSelfCollisionImpulse
    float getMaxSelfCollisionImpulse() -> getMaxSelfCollisionImpulse
    void setSelfCollisionImpulseFactor(float) -> setSelfCollisionImpulseFactor
    float getSelfCollisionImpulseFactor() -> getSelfCollisionImpulseFactor
    void setContainsAnchor(boolean) -> setContainsAnchor
    boolean getContainsAnchor() -> getContainsAnchor
    void setCollide(boolean) -> setCollide
    boolean getCollide() -> getCollide
    void setClusterIndex(int) -> setClusterIndex
    int getClusterIndex() -> getClusterIndex
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Config) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setAeromodel(int) -> setAeromodel
    int getAeromodel() -> getAeromodel
    void setKVCF(float) -> setKVCF
    float getKVCF() -> getKVCF
    void setKDP(float) -> setKDP
    float getKDP() -> getKDP
    void setKDG(float) -> setKDG
    float getKDG() -> getKDG
    void setKLF(float) -> setKLF
    float getKLF() -> getKLF
    void setKPR(float) -> setKPR
    float getKPR() -> getKPR
    void setKVC(float) -> setKVC
    float getKVC() -> getKVC
    void setKDF(float) -> setKDF
    float getKDF() -> getKDF
    void setKMT(float) -> setKMT
    float getKMT() -> getKMT
    void setKCHR(float) -> setKCHR
    float getKCHR() -> getKCHR
    void setKKHR(float) -> setKKHR
    float getKKHR() -> getKKHR
    void setKSHR(float) -> setKSHR
    float getKSHR() -> getKSHR
    void setKAHR(float) -> setKAHR
    float getKAHR() -> getKAHR
    void setKSRHR_CL(float) -> setKSRHR_CL
    float getKSRHR_CL() -> getKSRHR_CL
    void setKSKHR_CL(float) -> setKSKHR_CL
    float getKSKHR_CL() -> getKSKHR_CL
    void setKSSHR_CL(float) -> setKSSHR_CL
    float getKSSHR_CL() -> getKSSHR_CL
    void setKSR_SPLT_CL(float) -> setKSR_SPLT_CL
    float getKSR_SPLT_CL() -> getKSR_SPLT_CL
    void setKSK_SPLT_CL(float) -> setKSK_SPLT_CL
    float getKSK_SPLT_CL() -> getKSK_SPLT_CL
    void setKSS_SPLT_CL(float) -> setKSS_SPLT_CL
    float getKSS_SPLT_CL() -> getKSS_SPLT_CL
    void setMaxvolume(float) -> setMaxvolume
    float getMaxvolume() -> getMaxvolume
    void setTimescale(float) -> setTimescale
    float getTimescale() -> getTimescale
    void setViterations(int) -> setViterations
    int getViterations() -> getViterations
    void setPiterations(int) -> setPiterations
    int getPiterations() -> getPiterations
    void setDiterations(int) -> setDiterations
    int getDiterations() -> getDiterations
    void setCiterations(int) -> setCiterations
    int getCiterations() -> getCiterations
    void setCollisions(int) -> setCollisions
    int getCollisions() -> getCollisions
    void setVsequence(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t) -> setVsequence
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__eVSolver____t getVsequence() -> getVsequence
    void setPsequence(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t) -> setPsequence
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t getPsequence() -> getPsequence
    void setDsequence(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t) -> setDsequence
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody__ePSolver____t getDsequence() -> getDsequence
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Element) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTag(long) -> setTag
    long getTag() -> getTag
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setN(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node) -> setN
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node getN() -> getN
    void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setNormal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormal() -> getNormal
    void setRa(float) -> setRa
    float getRa() -> getRa
    void setLeaf(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> setLeaf
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode getLeaf() -> getLeaf
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Feature) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setMaterial(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> setMaterial
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material getMaterial() -> getMaterial
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ImplicitFn) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    float Eval(com.badlogic.gdx.math.Vector3) -> Eval
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Impulse) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVelocity() -> getVelocity
    void setDrift(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setDrift
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getDrift() -> getDrift
    void setAsVelocity(int) -> setAsVelocity
    int getAsVelocity() -> getAsVelocity
    void setAsDrift(int) -> setAsDrift
    int getAsDrift() -> getAsDrift
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setBodies(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body) -> setBodies
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body getBodies() -> getBodies
    void setRefs(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setRefs
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRefs() -> getRefs
    void setCfm(float) -> setCfm
    float getCfm() -> getCfm
    void setErp(float) -> setErp
    float getErp() -> getErp
    void setSplit(float) -> setSplit
    float getSplit() -> getSplit
    void setDrift(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setDrift
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getDrift() -> getDrift
    void setSdrift(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setSdrift
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getSdrift() -> getSdrift
    void setMassmatrix(com.badlogic.gdx.math.Matrix3) -> setMassmatrix
    com.badlogic.gdx.math.Matrix3 getMassmatrix() -> getMassmatrix
    void setDelete(boolean) -> setDelete
    boolean getDelete() -> getDelete
    void Prepare(float,int) -> Prepare
    void Solve(float,float) -> Solve
    void Terminate(float) -> Terminate
    int Type() -> Type
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$Specs) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setErp(float) -> setErp
    float getErp() -> getErp
    void setCfm(float) -> setCfm
    float getCfm() -> getCfm
    void setSplit(float) -> setSplit
    float getSplit() -> getSplit
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType$_ -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Joint$eType$_:
    int Linear -> Linear
    int Angular -> Angular
    int Contact -> Contact
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setRpos(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setRpos
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRpos() -> getRpos
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$LJoint$Specs) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setPosition(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setPosition
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getPosition() -> getPosition
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Link) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setN(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node) -> setN
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node getN() -> getN
    void setRl(float) -> setRl
    float getRl() -> getRl
    void setBbending(int) -> setBbending
    int getBbending() -> getBbending
    void setC0(float) -> setC0
    float getC0() -> getC0
    void setC1(float) -> setC1
    float getC1() -> getC1
    void setC2(float) -> setC2
    float getC2() -> getC2
    void setC3(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setC3
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getC3() -> getC3
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Material) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setKLST(float) -> setKLST
    float getKLST() -> getKLST
    void setKAST(float) -> setKAST
    float getKAST() -> getKAST
    void setKVST(float) -> setKVST
    float getKVST() -> getKVST
    void setFlags(int) -> setFlags
    int getFlags() -> getFlags
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setX(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setX
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getX() -> getX
    void setQ(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setQ
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getQ() -> getQ
    void setV(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setV
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getV() -> getV
    void setF(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setF
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getF() -> getF
    void setN(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setN
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getN() -> getN
    void setIm(float) -> setIm
    float getIm() -> getIm
    void setArea(float) -> setArea
    float getArea() -> getArea
    void setLeaf(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> setLeaf
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode getLeaf() -> getLeaf
    void setBattach(int) -> setBattach
    int getBattach() -> getBattach
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Note) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    void setOffset(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setOffset
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getOffset() -> getOffset
    void setRank(int) -> setRank
    int getRank() -> getRank
    void setNodes(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node) -> setNodes
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node getNodes() -> getNodes
    void setCoords(float[]) -> setCoords
    float[] getCoords() -> getCoords
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Pose) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setBvolume(boolean) -> setBvolume
    boolean getBvolume() -> getBvolume
    void setBframe(boolean) -> setBframe
    boolean getBframe() -> getBframe
    void setVolume(float) -> setVolume
    float getVolume() -> getVolume
    void setPos(com.badlogic.gdx.physics.bullet.linearmath.btVector3Array) -> setPos
    com.badlogic.gdx.physics.bullet.linearmath.btVector3Array getPos() -> getPos
    void setWgh(com.badlogic.gdx.physics.bullet.linearmath.btScalarArray) -> setWgh
    com.badlogic.gdx.physics.bullet.linearmath.btScalarArray getWgh() -> getWgh
    void setCom(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setCom
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getCom() -> getCom
    void setRot(com.badlogic.gdx.math.Matrix3) -> setRot
    com.badlogic.gdx.math.Matrix3 getRot() -> getRot
    void setScl(com.badlogic.gdx.math.Matrix3) -> setScl
    com.badlogic.gdx.math.Matrix3 getScl() -> getScl
    void setAqq(com.badlogic.gdx.math.Matrix3) -> setAqq
    com.badlogic.gdx.math.Matrix3 getAqq() -> getAqq
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RContact) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setCti(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti) -> setCti
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti getCti() -> getCti
    void setNode(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> setNode
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node getNode() -> getNode
    void setC0(com.badlogic.gdx.math.Matrix3) -> setC0
    com.badlogic.gdx.math.Matrix3 getC0() -> getC0
    void setC1(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setC1
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getC1() -> getC1
    void setC2(float) -> setC2
    float getC2() -> getC2
    void setC3(float) -> setC3
    float getC3() -> getC3
    void setC4(float) -> setC4
    float getC4() -> getC4
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$RayFromToCaster) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setRayFrom(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setRayFrom
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayFrom() -> getRayFrom
    void setRayTo(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setRayTo
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayTo() -> getRayTo
    void setRayNormalizedDirection(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setRayNormalizedDirection
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getRayNormalizedDirection() -> getRayNormalizedDirection
    void setMint(float) -> setMint
    float getMint() -> getMint
    void setFace(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face) -> setFace
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face getFace() -> getFace
    void setTests(int) -> setTests
    int getTests() -> getTests
    float rayFromToTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,float) -> rayFromToTriangle
    float rayFromToTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> rayFromToTriangle
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SContact) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setNode(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> setNode
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node getNode() -> getNode
    void setFace(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face) -> setFace
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Face getFace() -> getFace
    void setWeights(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setWeights
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWeights() -> getWeights
    void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setNormal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormal() -> getNormal
    void setMargin(float) -> setMargin
    float getMargin() -> getMargin
    void setFriction(float) -> setFriction
    float getFriction() -> getFriction
    void setCfm(float[]) -> setCfm
    float[] getCfm() -> getCfm
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$SolverState) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setSdt(float) -> setSdt
    float getSdt() -> getSdt
    void setIsdt(float) -> setIsdt
    float getIsdt() -> getIsdt
    void setVelmrg(float) -> setVelmrg
    float getVelmrg() -> getVelmrg
    void setRadmrg(float) -> setRadmrg
    float getRadmrg() -> getRadmrg
    void setUpdmrg(float) -> setUpdmrg
    float getUpdmrg() -> getUpdmrg
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Tetra) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setN(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node) -> setN
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody__Node getN() -> getN
    void setRv(float) -> setRv
    float getRv() -> getRv
    void setLeaf(com.badlogic.gdx.physics.bullet.collision.btDbvtNode) -> setLeaf
    com.badlogic.gdx.physics.bullet.collision.btDbvtNode getLeaf() -> getLeaf
    void setC0(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setC0
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getC0() -> getC0
    void setC1(float) -> setC1
    float getC1() -> getC1
    void setC2(float) -> setC2
    float getC2() -> getC2
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel$_ -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eAeroModel$_:
    int V_Point -> V_Point
    int V_TwoSided -> V_TwoSided
    int V_TwoSidedLiftDrag -> V_TwoSidedLiftDrag
    int V_OneSided -> V_OneSided
    int F_TwoSided -> F_TwoSided
    int F_TwoSidedLiftDrag -> F_TwoSidedLiftDrag
    int F_OneSided -> F_OneSided
    int END -> END
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature$_ -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eFeature$_:
    int None -> None
    int Node -> Node
    int Link -> Link
    int Face -> Face
    int Tetra -> Tetra
    int END -> END
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver$_ -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$ePSolver$_:
    int Linear -> Linear
    int Anchors -> Anchors
    int RContacts -> RContacts
    int SContacts -> SContacts
    int END -> END
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets$_ -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eSolverPresets$_:
    int Positions -> Positions
    int Velocities -> Velocities
    int Default -> Default
    int END -> END
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver$_ -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$eVSolver$_:
    int Linear -> Linear
    int END -> END
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision$_ -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fCollision$_:
    int RVSmask -> RVSmask
    int SDF_RS -> SDF_RS
    int CL_RS -> CL_RS
    int SVSmask -> SVSmask
    int VF_SS -> VF_SS
    int CL_SS -> CL_SS
    int CL_SELF -> CL_SELF
    int Default -> Default
    int END -> END
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial$_ -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$fMaterial$_:
    int DebugDraw -> DebugDraw
    int Default -> Default
    int END -> END
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sCti) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setColObj(com.badlogic.gdx.physics.bullet.collision.btCollisionObject) -> setColObj
    com.badlogic.gdx.physics.bullet.collision.btCollisionObject getColObj() -> getColObj
    void setNormal(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setNormal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getNormal() -> getNormal
    void setOffset(float) -> setOffset
    float getOffset() -> getOffset
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sMedium) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setVelocity(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setVelocity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getVelocity() -> getVelocity
    void setPressure(float) -> setPressure
    float getPressure() -> getPressure
    void setDensity(float) -> setDensity
    float getDensity() -> getDensity
com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast -> com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$sRayCast) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> setBody
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody getBody() -> getBody
    void setFeature(int) -> setFeature
    int getFeature() -> getFeature
    void setIndex(int) -> setIndex
    int getIndex() -> getIndex
    void setFraction(float) -> setFraction
    float getFraction() -> getFraction
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape -> com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyCollisionShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> setBody
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody getBody() -> getBody
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm -> com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void clearCache() -> clearCache
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$CreateFunc -> com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$CreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$CreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc -> com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyConcaveCollisionAlgorithm$SwappedCreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData -> com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyFloatData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setCollisionObjectData(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData) -> setCollisionObjectData
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectFloatData getCollisionObjectData() -> getCollisionObjectData
    void setPose(com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData) -> setPose
    com.badlogic.gdx.physics.bullet.softbody.SoftBodyPoseData getPose() -> getPose
    void setMaterials(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_SoftBodyMaterialData) -> setMaterials
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_SoftBodyMaterialData getMaterials() -> getMaterials
    void setNodes(com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData) -> setNodes
    com.badlogic.gdx.physics.bullet.softbody.SoftBodyNodeData getNodes() -> getNodes
    void setLinks(com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData) -> setLinks
    com.badlogic.gdx.physics.bullet.softbody.SoftBodyLinkData getLinks() -> getLinks
    void setFaces(com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData) -> setFaces
    com.badlogic.gdx.physics.bullet.softbody.SoftBodyFaceData getFaces() -> getFaces
    void setTetrahedra(com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData) -> setTetrahedra
    com.badlogic.gdx.physics.bullet.softbody.SoftBodyTetraData getTetrahedra() -> getTetrahedra
    void setAnchors(com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData) -> setAnchors
    com.badlogic.gdx.physics.bullet.softbody.SoftRigidAnchorData getAnchors() -> getAnchors
    void setClusters(com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData) -> setClusters
    com.badlogic.gdx.physics.bullet.softbody.SoftBodyClusterData getClusters() -> getClusters
    void setJoints(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData) -> setJoints
    com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData getJoints() -> getJoints
    void setNumMaterials(int) -> setNumMaterials
    int getNumMaterials() -> getNumMaterials
    void setNumNodes(int) -> setNumNodes
    int getNumNodes() -> getNumNodes
    void setNumLinks(int) -> setNumLinks
    int getNumLinks() -> getNumLinks
    void setNumFaces(int) -> setNumFaces
    int getNumFaces() -> getNumFaces
    void setNumTetrahedra(int) -> setNumTetrahedra
    int getNumTetrahedra() -> getNumTetrahedra
    void setNumAnchors(int) -> setNumAnchors
    int getNumAnchors() -> getNumAnchors
    void setNumClusters(int) -> setNumClusters
    int getNumClusters() -> getNumClusters
    void setNumJoints(int) -> setNumJoints
    int getNumJoints() -> getNumJoints
    void setConfig(com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData) -> setConfig
    com.badlogic.gdx.physics.bullet.softbody.SoftBodyConfigData getConfig() -> getConfig
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers -> com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers:
    long swigCPtr -> swigCPtr
    boolean $assertionsDisabled -> $assertionsDisabled
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyHelpers) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void Draw(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int) -> Draw
    void Draw(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> Draw
    void DrawInfos(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,boolean,boolean,boolean) -> DrawInfos
    void DrawNodeTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int,int) -> DrawNodeTree
    void DrawNodeTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int) -> DrawNodeTree
    void DrawNodeTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> DrawNodeTree
    void DrawFaceTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int,int) -> DrawFaceTree
    void DrawFaceTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int) -> DrawFaceTree
    void DrawFaceTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> DrawFaceTree
    void DrawClusterTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int,int) -> DrawClusterTree
    void DrawClusterTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw,int) -> DrawClusterTree
    void DrawClusterTree(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> DrawClusterTree
    void DrawFrame(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.linearmath.btIDebugDraw) -> DrawFrame
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreateRope(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int) -> CreateRope
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreatePatch(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,boolean) -> CreatePatch
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreatePatchUV(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,boolean,java.nio.FloatBuffer) -> CreatePatchUV
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreatePatchUV(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int,int,int,boolean) -> CreatePatchUV
    float CalculateUV(int,int,int,int,int) -> CalculateUV
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreateEllipsoid(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,int) -> CreateEllipsoid
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreateFromTriMesh(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.nio.FloatBuffer,java.nio.IntBuffer,int,boolean) -> CreateFromTriMesh
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreateFromTriMesh(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.nio.FloatBuffer,java.nio.IntBuffer,int) -> CreateFromTriMesh
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreateFromConvexHull(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int,boolean) -> CreateFromConvexHull
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreateFromConvexHull(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,com.badlogic.gdx.physics.bullet.linearmath.btVector3,int) -> CreateFromConvexHull
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody CreateFromTetGenData(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean) -> CreateFromTetGenData
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData -> com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyJointData) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setBodyA(long) -> setBodyA
    long getBodyA() -> getBodyA
    void setBodyB(long) -> setBodyB
    long getBodyB() -> getBodyB
    void setRefs(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setRefs
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getRefs() -> getRefs
    void setCfm(float) -> setCfm
    float getCfm() -> getCfm
    void setErp(float) -> setErp
    float getErp() -> getErp
    void setSplit(float) -> setSplit
    float getSplit() -> getSplit
    void setDelete(int) -> setDelete
    int getDelete() -> getDelete
    void setRelPosition(com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData) -> setRelPosition
    com.badlogic.gdx.physics.bullet.linearmath.btVector3FloatData getRelPosition() -> getRelPosition
    void setBodyAtype(int) -> setBodyAtype
    int getBodyAtype() -> getBodyAtype
    void setBodyBtype(int) -> setBodyBtype
    int getBodyBtype() -> getBodyBtype
    void setJointType(int) -> setJointType
    int getJointType() -> getJointType
    void setPad(int) -> setPad
    int getPad() -> getPad
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyRigidBodyCollisionConfiguration -> com.badlogic.gdx.physics.bullet.softbody.btSoftBodyRigidBodyCollisionConfiguration:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyRigidBodyCollisionConfiguration) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver -> com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    int getSolverType() -> getSolverType
    boolean checkInitialized() -> checkInitialized
    void optimize(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t,boolean) -> optimize
    void optimize(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t) -> optimize
    void copyBackToSoftBodies(boolean) -> copyBackToSoftBodies
    void copyBackToSoftBodies() -> copyBackToSoftBodies
    void predictMotion(float) -> predictMotion
    void solveConstraints(float) -> solveConstraints
    void updateSoftBodies() -> updateSoftBodies
    void processCollision(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> processCollision
    void processCollision(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> processCollision
    void setNumberOfPositionIterations(int) -> setNumberOfPositionIterations
    int getNumberOfPositionIterations() -> getNumberOfPositionIterations
    void setNumberOfVelocityIterations(int) -> setNumberOfVelocityIterations
    int getNumberOfVelocityIterations() -> getNumberOfVelocityIterations
    float getTimeScale() -> getTimeScale
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver$SolverTypes -> com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolver$SolverTypes:
    int DEFAULT_SOLVER -> DEFAULT_SOLVER
    int CPU_SOLVER -> CPU_SOLVER
    int CL_SOLVER -> CL_SOLVER
    int CL_SIMD_SOLVER -> CL_SIMD_SOLVER
    int DX_SOLVER -> DX_SOLVER
    int DX_SIMD_SOLVER -> DX_SIMD_SOLVER
com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolverOutput -> com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolverOutput:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodySolverOutput) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void copySoftBodyToVertexBuffer(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor) -> copySoftBodyToVertexBuffer
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback -> com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyTriangleCallback) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setTriangleCount(int) -> setTriangleCount
    int getTriangleCount() -> getTriangleCount
    void setTimeStepAndCounters(float,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper,com.badlogic.gdx.physics.bullet.collision.btDispatcherInfo,com.badlogic.gdx.physics.bullet.collision.btManifoldResult) -> setTimeStepAndCounters
    void clearCache() -> clearCache
    com.badlogic.gdx.math.Vector3 getAabbMin() -> getAabbMin
    com.badlogic.gdx.math.Vector3 getAabbMax() -> getAabbMax
com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo -> com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setAir_density(float) -> setAir_density
    float getAir_density() -> getAir_density
    void setWater_density(float) -> setWater_density
    float getWater_density() -> getWater_density
    void setWater_offset(float) -> setWater_offset
    float getWater_offset() -> getWater_offset
    void setMaxDisplacement(float) -> setMaxDisplacement
    float getMaxDisplacement() -> getMaxDisplacement
    void setWater_normal(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setWater_normal
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getWater_normal() -> getWater_normal
    void setBroadphase(com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface) -> setBroadphase
    com.badlogic.gdx.physics.bullet.collision.btBroadphaseInterface getBroadphase() -> getBroadphase
    void setDispatcher(com.badlogic.gdx.physics.bullet.collision.btDispatcher) -> setDispatcher
    com.badlogic.gdx.physics.bullet.collision.btDispatcher getDispatcher() -> getDispatcher
    void setGravity(com.badlogic.gdx.physics.bullet.linearmath.btVector3) -> setGravity
    com.badlogic.gdx.physics.bullet.linearmath.btVector3 getGravity() -> getGravity
    void setSparsesdf(com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3) -> setSparsesdf
    com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3 getSparsesdf() -> getSparsesdf
com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape -> com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftClusterCollisionShape) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setCluster(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster) -> setCluster
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Cluster getCluster() -> getCluster
    int getShapeType() -> getShapeType
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders -> com.badlogic.gdx.physics.bullet.softbody.btSoftColliders:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftColliders) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase -> com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$ClusterBase) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setErp(float) -> setErp
    float getErp() -> getErp
    void setIdt(float) -> setIdt
    float getIdt() -> getIdt
    void setMargin(float) -> setMargin
    float getMargin() -> getMargin
    void setFriction(float) -> setFriction
    float getFriction() -> getFriction
    void setThreshold(float) -> setThreshold
    float getThreshold() -> getThreshold
    boolean SolveContact(com.badlogic.gdx.physics.bullet.collision.btGjkEpaSolver2$sResults,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Body,com.badlogic.gdx.physics.bullet.softbody.btSoftBody$CJoint) -> SolveContact
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS -> com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_RS) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setPsb(com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> setPsb
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody getPsb() -> getPsb
    void setColObjWrap(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> setColObjWrap
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper getColObjWrap() -> getColObjWrap
    void ProcessColObj(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> ProcessColObj
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS -> com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideCL_SS) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setBodies(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody) -> setBodies
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody getBodies() -> getBodies
    void ProcessSoftSoft(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> ProcessSoftSoft
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS -> com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideSDF_RS) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void DoNode(com.badlogic.gdx.physics.bullet.softbody.btSoftBody$Node) -> DoNode
    void setPsb(com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> setPsb
    com.badlogic.gdx.physics.bullet.softbody.btSoftBody getPsb() -> getPsb
    void setColObj1Wrap(com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper) -> setColObj1Wrap
    com.badlogic.gdx.physics.bullet.collision.btCollisionObjectWrapper getColObj1Wrap() -> getColObj1Wrap
    void setRigidBody(com.badlogic.gdx.physics.bullet.dynamics.btRigidBody) -> setRigidBody
    com.badlogic.gdx.physics.bullet.dynamics.btRigidBody getRigidBody() -> getRigidBody
    void setDynmargin(float) -> setDynmargin
    float getDynmargin() -> getDynmargin
    void setStamargin(float) -> setStamargin
    float getStamargin() -> getStamargin
com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS -> com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftColliders$CollideVF_SS) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setPsb(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody) -> setPsb
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_p_btSoftBody getPsb() -> getPsb
    void setMrg(float) -> setMrg
    float getMrg() -> getMrg
com.badlogic.gdx.physics.bullet.softbody.btSoftJointBodyType -> com.badlogic.gdx.physics.bullet.softbody.btSoftJointBodyType:
    int BT_JOINT_SOFT_BODY_CLUSTER -> BT_JOINT_SOFT_BODY_CLUSTER
    int BT_JOINT_RIGID_BODY -> BT_JOINT_RIGID_BODY
    int BT_JOINT_COLLISION_OBJECT -> BT_JOINT_COLLISION_OBJECT
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm -> com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm$CreateFunc -> com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm$CreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftRigidCollisionAlgorithm$CreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld -> com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftRigidDynamicsWorld) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void addSoftBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,short,short) -> addSoftBody
    void addSoftBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBody,short) -> addSoftBody
    void addSoftBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> addSoftBody
    void removeSoftBody(com.badlogic.gdx.physics.bullet.softbody.btSoftBody) -> removeSoftBody
    int getDrawFlags() -> getDrawFlags
    void setDrawFlags(int) -> setDrawFlags
    com.badlogic.gdx.physics.bullet.softbody.btSoftBodyWorldInfo getWorldInfo() -> getWorldInfo
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSoftBody_p_t getSoftBodyArray() -> getSoftBodyArray
    void rayTestSingle(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.btCollisionObject,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.physics.bullet.collision.RayResultCallback) -> rayTestSingle
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm -> com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm$CreateFunc -> com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm$CreateFunc:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSoftSoftCollisionAlgorithm$CreateFunc) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3 -> com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setCells(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t) -> setCells
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_btAlignedObjectArrayT_btSparseSdfT_3_t__Cell_p_t getCells() -> getCells
    void setVoxelsz(float) -> setVoxelsz
    float getVoxelsz() -> getVoxelsz
    void setPuid(int) -> setPuid
    int getPuid() -> getPuid
    void setNcells(int) -> setNcells
    int getNcells() -> getNcells
    void setClampCells(int) -> setClampCells
    int getClampCells() -> getClampCells
    void setNprobes(int) -> setNprobes
    int getNprobes() -> getNprobes
    void setNqueries(int) -> setNqueries
    int getNqueries() -> getNqueries
    void Initialize(int,int) -> Initialize
    void Initialize(int) -> Initialize
    void Initialize() -> Initialize
    void Reset() -> Reset
    void GarbageCollect(int) -> GarbageCollect
    void GarbageCollect() -> GarbageCollect
    int RemoveReferences(com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> RemoveReferences
    float Evaluate(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btCollisionShape,com.badlogic.gdx.math.Vector3,float) -> Evaluate
    void BuildCell(com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell) -> BuildCell
    float DistanceToShape(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> DistanceToShape
    com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac Decompose(float) -> Decompose
    float Lerp(float,float,float) -> Lerp
    long Hash(int,int,int,com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> Hash
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell -> com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setD(com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_a_3_1__a_3_1__float) -> setD
    com.badlogic.gdx.physics.bullet.softbody.SWIGTYPE_p_a_3_1__a_3_1__float getD() -> getD
    void setC(int[]) -> setC
    int[] getC() -> getC
    void setPuid(int) -> setPuid
    int getPuid() -> getPuid
    void setHash(long) -> setHash
    long getHash() -> getHash
    void setPclient(com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> setPclient
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape getPclient() -> getPclient
    void setNext(com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell) -> setNext
    com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$Cell getNext() -> getNext
com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac -> com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btSparseSdf3$IntFrac) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setB(int) -> setB
    int getB() -> getB
    void setI(int) -> setI
    int getI() -> getI
    void setF(float) -> setF
    float getF() -> getF
com.badlogic.gdx.physics.bullet.softbody.btTriIndex -> com.badlogic.gdx.physics.bullet.softbody.btTriIndex:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btTriIndex) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    void setPartIdTriangleIndex(int) -> setPartIdTriangleIndex
    int getPartIdTriangleIndex() -> getPartIdTriangleIndex
    void setChildShape(com.badlogic.gdx.physics.bullet.collision.btCollisionShape) -> setChildShape
    com.badlogic.gdx.physics.bullet.collision.btCollisionShape getChildShape() -> getChildShape
    int getTriangleIndex() -> getTriangleIndex
    int getPartId() -> getPartId
    int getUid() -> getUid
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor -> com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
    boolean hasVertexPositions() -> hasVertexPositions
    boolean hasNormals() -> hasNormals
    int getBufferType() -> getBufferType
    int getVertexOffset() -> getVertexOffset
    int getVertexStride() -> getVertexStride
    int getNormalOffset() -> getNormalOffset
    int getNormalStride() -> getNormalStride
com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor$BufferTypes -> com.badlogic.gdx.physics.bullet.softbody.btVertexBufferDescriptor$BufferTypes:
    int CPU_BUFFER -> CPU_BUFFER
    int DX11_BUFFER -> DX11_BUFFER
    int OPENGL_BUFFER -> OPENGL_BUFFER
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags -> com.badlogic.gdx.physics.bullet.softbody.fDrawFlags:
    long swigCPtr -> swigCPtr
    void reset(long,boolean) -> reset
    long getCPtr(com.badlogic.gdx.physics.bullet.softbody.fDrawFlags) -> getCPtr
    void finalize() -> finalize
    void delete() -> delete
com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_ -> com.badlogic.gdx.physics.bullet.softbody.fDrawFlags$_:
    int Nodes -> Nodes
    int Links -> Links
    int Faces -> Faces
    int Tetras -> Tetras
    int Normals -> Normals
    int Contacts -> Contacts
    int Anchors -> Anchors
    int Notes -> Notes
    int Clusters -> Clusters
    int NodeTree -> NodeTree
    int FaceTree -> FaceTree
    int ClusterTree -> ClusterTree
    int Joints -> Joints
    int Std -> Std
    int StdTetra -> StdTetra
com.badlogic.gdx.scenes.scene2d.Action -> com.badlogic.gdx.scenes.scene2d.Action:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.utils.Pool pool -> pool
    boolean act(float) -> act
    void restart() -> restart
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    void reset() -> reset
    com.badlogic.gdx.utils.Pool getPool() -> getPool
    void setPool(com.badlogic.gdx.utils.Pool) -> setPool
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Actor -> com.badlogic.gdx.scenes.scene2d.Actor:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> stage
    com.badlogic.gdx.scenes.scene2d.Group parent -> parent
    com.badlogic.gdx.utils.DelayedRemovalArray listeners -> listeners
    com.badlogic.gdx.utils.DelayedRemovalArray captureListeners -> captureListeners
    com.badlogic.gdx.utils.Array actions -> actions
    java.lang.String name -> name
    com.badlogic.gdx.scenes.scene2d.Touchable touchable -> touchable
    boolean visible -> visible
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float originX -> originX
    float originY -> originY
    float scaleX -> scaleX
    float scaleY -> scaleY
    float rotation -> rotation
    com.badlogic.gdx.graphics.Color color -> color
    java.lang.Object userObject -> userObject
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void act(float) -> act
    boolean fire(com.badlogic.gdx.scenes.scene2d.Event) -> fire
    boolean notify(com.badlogic.gdx.scenes.scene2d.Event,boolean) -> notify
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    boolean remove() -> remove
    boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addListener
    boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeListener
    com.badlogic.gdx.utils.Array getListeners() -> getListeners
    boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addCaptureListener
    boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeCaptureListener
    com.badlogic.gdx.utils.Array getCaptureListeners() -> getCaptureListeners
    void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    void removeAction(com.badlogic.gdx.scenes.scene2d.Action) -> removeAction
    com.badlogic.gdx.utils.Array getActions() -> getActions
    void clearActions() -> clearActions
    void clearListeners() -> clearListeners
    void clear() -> clear
    com.badlogic.gdx.scenes.scene2d.Stage getStage() -> getStage
    void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    boolean isDescendantOf(com.badlogic.gdx.scenes.scene2d.Actor) -> isDescendantOf
    boolean isAscendantOf(com.badlogic.gdx.scenes.scene2d.Actor) -> isAscendantOf
    boolean hasParent() -> hasParent
    com.badlogic.gdx.scenes.scene2d.Group getParent() -> getParent
    void setParent(com.badlogic.gdx.scenes.scene2d.Group) -> setParent
    boolean isTouchable() -> isTouchable
    com.badlogic.gdx.scenes.scene2d.Touchable getTouchable() -> getTouchable
    void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> setTouchable
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    java.lang.Object getUserObject() -> getUserObject
    void setUserObject(java.lang.Object) -> setUserObject
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    void setPosition(float,float) -> setPosition
    void setCenterPosition(float,float) -> setCenterPosition
    float getCenterX() -> getCenterX
    float getCenterY() -> getCenterY
    void moveBy(float,float) -> moveBy
    float getWidth() -> getWidth
    void setWidth(float) -> setWidth
    float getHeight() -> getHeight
    void setHeight(float) -> setHeight
    float getTop() -> getTop
    float getRight() -> getRight
    void sizeChanged() -> sizeChanged
    void setSize(float,float) -> setSize
    void sizeBy(float) -> sizeBy
    void sizeBy(float,float) -> sizeBy
    void setBounds(float,float,float,float) -> setBounds
    float getOriginX() -> getOriginX
    void setOriginX(float) -> setOriginX
    float getOriginY() -> getOriginY
    void setOriginY(float) -> setOriginY
    void setOrigin(float,float) -> setOrigin
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    void setScale(float) -> setScale
    void setScale(float,float) -> setScale
    void scaleBy(float) -> scaleBy
    void scaleBy(float,float) -> scaleBy
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    void rotateBy(float) -> rotateBy
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    void setColor(float,float,float,float) -> setColor
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    void toFront() -> toFront
    void toBack() -> toBack
    void setZIndex(int) -> setZIndex
    int getZIndex() -> getZIndex
    boolean clipBegin() -> clipBegin
    boolean clipBegin(float,float,float,float) -> clipBegin
    void clipEnd() -> clipEnd
    com.badlogic.gdx.math.Vector2 screenToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> screenToLocalCoordinates
    com.badlogic.gdx.math.Vector2 stageToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> stageToLocalCoordinates
    com.badlogic.gdx.math.Vector2 localToStageCoordinates(com.badlogic.gdx.math.Vector2) -> localToStageCoordinates
    com.badlogic.gdx.math.Vector2 localToParentCoordinates(com.badlogic.gdx.math.Vector2) -> localToParentCoordinates
    com.badlogic.gdx.math.Vector2 localToAscendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> localToAscendantCoordinates
    com.badlogic.gdx.math.Vector2 parentToLocalCoordinates(com.badlogic.gdx.math.Vector2) -> parentToLocalCoordinates
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.Event -> com.badlogic.gdx.scenes.scene2d.Event:
    com.badlogic.gdx.scenes.scene2d.Stage stage -> stage
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> targetActor
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> listenerActor
    boolean capture -> capture
    boolean bubbles -> bubbles
    boolean handled -> handled
    boolean stopped -> stopped
    boolean cancelled -> cancelled
    void handle() -> handle
    void cancel() -> cancel
    void stop() -> stop
    void reset() -> reset
    com.badlogic.gdx.scenes.scene2d.Actor getTarget() -> getTarget
    void setTarget(com.badlogic.gdx.scenes.scene2d.Actor) -> setTarget
    com.badlogic.gdx.scenes.scene2d.Actor getListenerActor() -> getListenerActor
    void setListenerActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setListenerActor
    boolean getBubbles() -> getBubbles
    void setBubbles(boolean) -> setBubbles
    boolean isHandled() -> isHandled
    boolean isStopped() -> isStopped
    boolean isCancelled() -> isCancelled
    void setCapture(boolean) -> setCapture
    boolean isCapture() -> isCapture
    void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    com.badlogic.gdx.scenes.scene2d.Stage getStage() -> getStage
com.badlogic.gdx.scenes.scene2d.EventListener -> com.badlogic.gdx.scenes.scene2d.EventListener:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.Group -> com.badlogic.gdx.scenes.scene2d.Group:
    com.badlogic.gdx.utils.SnapshotArray children -> children
    com.badlogic.gdx.math.Matrix3 localTransform -> localTransform
    com.badlogic.gdx.math.Matrix3 worldTransform -> worldTransform
    com.badlogic.gdx.math.Matrix4 batchTransform -> batchTransform
    com.badlogic.gdx.math.Matrix4 oldBatchTransform -> oldBatchTransform
    boolean transform -> transform
    com.badlogic.gdx.math.Rectangle cullingArea -> cullingArea
    com.badlogic.gdx.math.Vector2 point -> point
    void act(float) -> act
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void drawChildren(com.badlogic.gdx.graphics.g2d.Batch,float) -> drawChildren
    void applyTransform(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.math.Matrix4) -> applyTransform
    com.badlogic.gdx.math.Matrix4 computeTransform() -> computeTransform
    void resetTransform(com.badlogic.gdx.graphics.g2d.Batch) -> resetTransform
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void childrenChanged() -> childrenChanged
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAfter
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    void clearChildren() -> clearChildren
    void clear() -> clear
    com.badlogic.gdx.scenes.scene2d.Actor findActor(java.lang.String) -> findActor
    void setStage(com.badlogic.gdx.scenes.scene2d.Stage) -> setStage
    boolean swapActor(int,int) -> swapActor
    boolean swapActor(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> swapActor
    com.badlogic.gdx.utils.SnapshotArray getChildren() -> getChildren
    boolean hasChildren() -> hasChildren
    void setTransform(boolean) -> setTransform
    boolean isTransform() -> isTransform
    com.badlogic.gdx.math.Vector2 localToDescendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> localToDescendantCoordinates
    void print() -> print
    void print(java.lang.String) -> print
com.badlogic.gdx.scenes.scene2d.InputEvent -> com.badlogic.gdx.scenes.scene2d.InputEvent:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type type -> type
    float stageX -> stageX
    float stageY -> stageY
    int pointer -> pointer
    int button -> button
    int keyCode -> keyCode
    int scrollAmount -> scrollAmount
    char character -> character
    com.badlogic.gdx.scenes.scene2d.Actor relatedActor -> relatedActor
    void reset() -> reset
    float getStageX() -> getStageX
    void setStageX(float) -> setStageX
    float getStageY() -> getStageY
    void setStageY(float) -> setStageY
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type getType() -> getType
    void setType(com.badlogic.gdx.scenes.scene2d.InputEvent$Type) -> setType
    int getPointer() -> getPointer
    void setPointer(int) -> setPointer
    int getButton() -> getButton
    void setButton(int) -> setButton
    int getKeyCode() -> getKeyCode
    void setKeyCode(int) -> setKeyCode
    char getCharacter() -> getCharacter
    void setCharacter(char) -> setCharacter
    int getScrollAmount() -> getScrollAmount
    void setScrollAmount(int) -> setScrollAmount
    com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor() -> getRelatedActor
    void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setRelatedActor
    com.badlogic.gdx.math.Vector2 toCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2) -> toCoordinates
    boolean isTouchFocusCancel() -> isTouchFocusCancel
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.InputEvent$Type -> com.badlogic.gdx.scenes.scene2d.InputEvent$Type:
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDown -> touchDown
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchUp -> touchUp
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type touchDragged -> touchDragged
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type mouseMoved -> mouseMoved
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type enter -> enter
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type exit -> exit
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type scrolled -> scrolled
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyDown -> keyDown
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyUp -> keyUp
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type keyTyped -> keyTyped
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] $VALUES -> $VALUES
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type[] values() -> values
    com.badlogic.gdx.scenes.scene2d.InputEvent$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.InputListener -> com.badlogic.gdx.scenes.scene2d.InputListener:
    com.badlogic.gdx.math.Vector2 tmpCoords -> tmpCoords
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    void enter(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> enter
    void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
    boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.InputListener$1 -> com.badlogic.gdx.scenes.scene2d.InputListener$1:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type -> $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type
com.badlogic.gdx.scenes.scene2d.Stage -> com.badlogic.gdx.scenes.scene2d.Stage:
    com.badlogic.gdx.math.Vector2 actorCoords -> actorCoords
    com.badlogic.gdx.utils.viewport.Viewport viewport -> viewport
    com.badlogic.gdx.graphics.g2d.Batch batch -> batch
    boolean ownsBatch -> ownsBatch
    com.badlogic.gdx.scenes.scene2d.Group root -> root
    com.badlogic.gdx.math.Vector2 stageCoords -> stageCoords
    com.badlogic.gdx.scenes.scene2d.Actor[] pointerOverActors -> pointerOverActors
    boolean[] pointerTouched -> pointerTouched
    int[] pointerScreenX -> pointerScreenX
    int[] pointerScreenY -> pointerScreenY
    int mouseScreenX -> mouseScreenX
    int mouseScreenY -> mouseScreenY
    com.badlogic.gdx.scenes.scene2d.Actor mouseOverActor -> mouseOverActor
    com.badlogic.gdx.scenes.scene2d.Actor keyboardFocus -> keyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor scrollFocus -> scrollFocus
    com.badlogic.gdx.utils.SnapshotArray touchFocuses -> touchFocuses
    void draw() -> draw
    void act() -> act
    void act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Actor fireEnterAndExit(com.badlogic.gdx.scenes.scene2d.Actor,int,int,int) -> fireEnterAndExit
    boolean touchDown(int,int,int,int) -> touchDown
    boolean touchDragged(int,int,int) -> touchDragged
    boolean touchUp(int,int,int,int) -> touchUp
    boolean mouseMoved(int,int) -> mouseMoved
    boolean scrolled(int) -> scrolled
    boolean keyDown(int) -> keyDown
    boolean keyUp(int) -> keyUp
    boolean keyTyped(char) -> keyTyped
    void addTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int) -> addTouchFocus
    void removeTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor,int,int) -> removeTouchFocus
    void cancelTouchFocus() -> cancelTouchFocus
    void cancelTouchFocus(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor) -> cancelTouchFocus
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    com.badlogic.gdx.utils.Array getActors() -> getActors
    boolean addListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addListener
    boolean removeListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeListener
    boolean addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> addCaptureListener
    boolean removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> removeCaptureListener
    void clear() -> clear
    void unfocusAll() -> unfocusAll
    void unfocus(com.badlogic.gdx.scenes.scene2d.Actor) -> unfocus
    void setKeyboardFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> setKeyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor getKeyboardFocus() -> getKeyboardFocus
    void setScrollFocus(com.badlogic.gdx.scenes.scene2d.Actor) -> setScrollFocus
    com.badlogic.gdx.scenes.scene2d.Actor getScrollFocus() -> getScrollFocus
    com.badlogic.gdx.graphics.g2d.Batch getSpriteBatch() -> getSpriteBatch
    com.badlogic.gdx.graphics.g2d.Batch getBatch() -> getBatch
    com.badlogic.gdx.utils.viewport.Viewport getViewport() -> getViewport
    void setViewport(com.badlogic.gdx.utils.viewport.Viewport) -> setViewport
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    com.badlogic.gdx.scenes.scene2d.Group getRoot() -> getRoot
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    com.badlogic.gdx.math.Vector2 screenToStageCoordinates(com.badlogic.gdx.math.Vector2) -> screenToStageCoordinates
    com.badlogic.gdx.math.Vector2 stageToScreenCoordinates(com.badlogic.gdx.math.Vector2) -> stageToScreenCoordinates
    com.badlogic.gdx.math.Vector2 toScreenCoordinates(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Matrix4) -> toScreenCoordinates
    void calculateScissors(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> calculateScissors
    void dispose() -> dispose
com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus -> com.badlogic.gdx.scenes.scene2d.Stage$TouchFocus:
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> listener
    com.badlogic.gdx.scenes.scene2d.Actor listenerActor -> listenerActor
    com.badlogic.gdx.scenes.scene2d.Actor target -> target
    int pointer -> pointer
    int button -> button
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.Touchable -> com.badlogic.gdx.scenes.scene2d.Touchable:
    com.badlogic.gdx.scenes.scene2d.Touchable enabled -> enabled
    com.badlogic.gdx.scenes.scene2d.Touchable disabled -> disabled
    com.badlogic.gdx.scenes.scene2d.Touchable childrenOnly -> childrenOnly
    com.badlogic.gdx.scenes.scene2d.Touchable[] $VALUES -> $VALUES
    com.badlogic.gdx.scenes.scene2d.Touchable[] values() -> values
    com.badlogic.gdx.scenes.scene2d.Touchable valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.actions.Actions -> com.badlogic.gdx.scenes.scene2d.actions.Actions:
    com.badlogic.gdx.scenes.scene2d.Action action(java.lang.Class) -> action
    com.badlogic.gdx.scenes.scene2d.actions.AddAction addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    com.badlogic.gdx.scenes.scene2d.actions.AddAction addAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Actor) -> addAction
    com.badlogic.gdx.scenes.scene2d.actions.RemoveAction removeAction(com.badlogic.gdx.scenes.scene2d.Action) -> removeAction
    com.badlogic.gdx.scenes.scene2d.actions.RemoveAction removeAction(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Actor) -> removeAction
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float) -> moveTo
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float) -> moveTo
    com.badlogic.gdx.scenes.scene2d.actions.MoveToAction moveTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> moveTo
    com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float) -> moveBy
    com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float) -> moveBy
    com.badlogic.gdx.scenes.scene2d.actions.MoveByAction moveBy(float,float,float,com.badlogic.gdx.math.Interpolation) -> moveBy
    com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float) -> sizeTo
    com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float) -> sizeTo
    com.badlogic.gdx.scenes.scene2d.actions.SizeToAction sizeTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> sizeTo
    com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float) -> sizeBy
    com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float) -> sizeBy
    com.badlogic.gdx.scenes.scene2d.actions.SizeByAction sizeBy(float,float,float,com.badlogic.gdx.math.Interpolation) -> sizeBy
    com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float) -> scaleTo
    com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float) -> scaleTo
    com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction scaleTo(float,float,float,com.badlogic.gdx.math.Interpolation) -> scaleTo
    com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float) -> scaleBy
    com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float) -> scaleBy
    com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction scaleBy(float,float,float,com.badlogic.gdx.math.Interpolation) -> scaleBy
    com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float) -> rotateTo
    com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float) -> rotateTo
    com.badlogic.gdx.scenes.scene2d.actions.RotateToAction rotateTo(float,float,com.badlogic.gdx.math.Interpolation) -> rotateTo
    com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float) -> rotateBy
    com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float) -> rotateBy
    com.badlogic.gdx.scenes.scene2d.actions.RotateByAction rotateBy(float,float,com.badlogic.gdx.math.Interpolation) -> rotateBy
    com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color) -> color
    com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float) -> color
    com.badlogic.gdx.scenes.scene2d.actions.ColorAction color(com.badlogic.gdx.graphics.Color,float,com.badlogic.gdx.math.Interpolation) -> color
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float) -> alpha
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float) -> alpha
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction alpha(float,float,com.badlogic.gdx.math.Interpolation) -> alpha
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float) -> fadeOut
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeOut(float,com.badlogic.gdx.math.Interpolation) -> fadeOut
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float) -> fadeIn
    com.badlogic.gdx.scenes.scene2d.actions.AlphaAction fadeIn(float,com.badlogic.gdx.math.Interpolation) -> fadeIn
    com.badlogic.gdx.scenes.scene2d.actions.VisibleAction show() -> show
    com.badlogic.gdx.scenes.scene2d.actions.VisibleAction hide() -> hide
    com.badlogic.gdx.scenes.scene2d.actions.VisibleAction visible(boolean) -> visible
    com.badlogic.gdx.scenes.scene2d.actions.TouchableAction touchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> touchable
    com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor() -> removeActor
    com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float) -> delay
    com.badlogic.gdx.scenes.scene2d.actions.DelayAction delay(float,com.badlogic.gdx.scenes.scene2d.Action) -> delay
    com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction timeScale(float,com.badlogic.gdx.scenes.scene2d.Action) -> timeScale
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence(com.badlogic.gdx.scenes.scene2d.Action[]) -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.SequenceAction sequence() -> sequence
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action,com.badlogic.gdx.scenes.scene2d.Action) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel(com.badlogic.gdx.scenes.scene2d.Action[]) -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.ParallelAction parallel() -> parallel
    com.badlogic.gdx.scenes.scene2d.actions.RepeatAction repeat(int,com.badlogic.gdx.scenes.scene2d.Action) -> repeat
    com.badlogic.gdx.scenes.scene2d.actions.RepeatAction forever(com.badlogic.gdx.scenes.scene2d.Action) -> forever
    com.badlogic.gdx.scenes.scene2d.actions.RunnableAction run(java.lang.Runnable) -> run
    com.badlogic.gdx.scenes.scene2d.actions.LayoutAction layout(boolean) -> layout
    com.badlogic.gdx.scenes.scene2d.actions.AfterAction after(com.badlogic.gdx.scenes.scene2d.Action) -> after
    com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction addListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean) -> addListener
    com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction addListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean,com.badlogic.gdx.scenes.scene2d.Actor) -> addListener
    com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction removeListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean) -> removeListener
    com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction removeListener(com.badlogic.gdx.scenes.scene2d.EventListener,boolean,com.badlogic.gdx.scenes.scene2d.Actor) -> removeListener
com.badlogic.gdx.scenes.scene2d.actions.AddAction -> com.badlogic.gdx.scenes.scene2d.actions.AddAction:
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> targetActor
    com.badlogic.gdx.scenes.scene2d.Action action -> action
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Actor getTargetActor() -> getTargetActor
    void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setTargetActor
    com.badlogic.gdx.scenes.scene2d.Action getAction() -> getAction
    void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> setAction
    void restart() -> restart
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction -> com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction:
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> targetActor
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> listener
    boolean capture -> capture
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Actor getTargetActor() -> getTargetActor
    void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setTargetActor
    com.badlogic.gdx.scenes.scene2d.EventListener getListener() -> getListener
    void setListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> setListener
    boolean getCapture() -> getCapture
    void setCapture(boolean) -> setCapture
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.actions.AfterAction -> com.badlogic.gdx.scenes.scene2d.actions.AfterAction:
    com.badlogic.gdx.utils.Array waitForActions -> waitForActions
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    void restart() -> restart
    boolean delegate(float) -> delegate
com.badlogic.gdx.scenes.scene2d.actions.AlphaAction -> com.badlogic.gdx.scenes.scene2d.actions.AlphaAction:
    float start -> start
    float end -> end
    com.badlogic.gdx.graphics.Color color -> color
    void begin() -> begin
    void update(float) -> update
    void reset() -> reset
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
com.badlogic.gdx.scenes.scene2d.actions.ColorAction -> com.badlogic.gdx.scenes.scene2d.actions.ColorAction:
    float startR -> startR
    float startG -> startG
    float startB -> startB
    float startA -> startA
    com.badlogic.gdx.graphics.Color color -> color
    com.badlogic.gdx.graphics.Color end -> end
    void begin() -> begin
    void update(float) -> update
    void reset() -> reset
    com.badlogic.gdx.graphics.Color getColor() -> getColor
    void setColor(com.badlogic.gdx.graphics.Color) -> setColor
    com.badlogic.gdx.graphics.Color getEndColor() -> getEndColor
    void setEndColor(com.badlogic.gdx.graphics.Color) -> setEndColor
com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction -> com.badlogic.gdx.scenes.scene2d.actions.CountdownEventAction:
    int count -> count
    int current -> current
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.actions.DelayAction -> com.badlogic.gdx.scenes.scene2d.actions.DelayAction:
    float duration -> duration
    float time -> time
    boolean delegate(float) -> delegate
    void finish() -> finish
    void restart() -> restart
    float getTime() -> getTime
    void setTime(float) -> setTime
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
com.badlogic.gdx.scenes.scene2d.actions.DelegateAction -> com.badlogic.gdx.scenes.scene2d.actions.DelegateAction:
    com.badlogic.gdx.scenes.scene2d.Action action -> action
    void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> setAction
    com.badlogic.gdx.scenes.scene2d.Action getAction() -> getAction
    boolean delegate(float) -> delegate
    boolean act(float) -> act
    void restart() -> restart
    void reset() -> reset
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.EventAction -> com.badlogic.gdx.scenes.scene2d.actions.EventAction:
    java.lang.Class eventClass -> eventClass
    boolean result -> result
    boolean active -> active
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> listener
    void restart() -> restart
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    boolean act(float) -> act
    boolean isActive() -> isActive
    void setActive(boolean) -> setActive
com.badlogic.gdx.scenes.scene2d.actions.EventAction$1 -> com.badlogic.gdx.scenes.scene2d.actions.EventAction$1:
    com.badlogic.gdx.scenes.scene2d.actions.EventAction this$0 -> this$0
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.actions.FloatAction -> com.badlogic.gdx.scenes.scene2d.actions.FloatAction:
    float start -> start
    float end -> end
    float value -> value
    void begin() -> begin
    void update(float) -> update
    float getValue() -> getValue
    void setValue(float) -> setValue
    float getStart() -> getStart
    void setStart(float) -> setStart
    float getEnd() -> getEnd
    void setEnd(float) -> setEnd
com.badlogic.gdx.scenes.scene2d.actions.IntAction -> com.badlogic.gdx.scenes.scene2d.actions.IntAction:
    int start -> start
    int end -> end
    int value -> value
    void begin() -> begin
    void update(float) -> update
    int getValue() -> getValue
    void setValue(int) -> setValue
    int getStart() -> getStart
    void setStart(int) -> setStart
    int getEnd() -> getEnd
    void setEnd(int) -> setEnd
com.badlogic.gdx.scenes.scene2d.actions.LayoutAction -> com.badlogic.gdx.scenes.scene2d.actions.LayoutAction:
    boolean enabled -> enabled
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    boolean act(float) -> act
    boolean isEnabled() -> isEnabled
    void setLayoutEnabled(boolean) -> setLayoutEnabled
com.badlogic.gdx.scenes.scene2d.actions.MoveByAction -> com.badlogic.gdx.scenes.scene2d.actions.MoveByAction:
    float amountX -> amountX
    float amountY -> amountY
    void updateRelative(float) -> updateRelative
    void setAmount(float,float) -> setAmount
    float getAmountX() -> getAmountX
    void setAmountX(float) -> setAmountX
    float getAmountY() -> getAmountY
    void setAmountY(float) -> setAmountY
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction -> com.badlogic.gdx.scenes.scene2d.actions.MoveToAction:
    float startX -> startX
    float startY -> startY
    float endX -> endX
    float endY -> endY
    void begin() -> begin
    void update(float) -> update
    void setPosition(float,float) -> setPosition
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
com.badlogic.gdx.scenes.scene2d.actions.ParallelAction -> com.badlogic.gdx.scenes.scene2d.actions.ParallelAction:
    com.badlogic.gdx.utils.Array actions -> actions
    boolean complete -> complete
    boolean act(float) -> act
    void restart() -> restart
    void reset() -> reset
    void addAction(com.badlogic.gdx.scenes.scene2d.Action) -> addAction
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    com.badlogic.gdx.utils.Array getActions() -> getActions
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction -> com.badlogic.gdx.scenes.scene2d.actions.RelativeTemporalAction:
    float lastPercent -> lastPercent
    void begin() -> begin
    void update(float) -> update
    void updateRelative(float) -> updateRelative
com.badlogic.gdx.scenes.scene2d.actions.RemoveAction -> com.badlogic.gdx.scenes.scene2d.actions.RemoveAction:
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> targetActor
    com.badlogic.gdx.scenes.scene2d.Action action -> action
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Actor getTargetActor() -> getTargetActor
    void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setTargetActor
    com.badlogic.gdx.scenes.scene2d.Action getAction() -> getAction
    void setAction(com.badlogic.gdx.scenes.scene2d.Action) -> setAction
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction -> com.badlogic.gdx.scenes.scene2d.actions.RemoveActorAction:
    com.badlogic.gdx.scenes.scene2d.Actor removeActor -> removeActor
    boolean removed -> removed
    boolean act(float) -> act
    void restart() -> restart
    void reset() -> reset
    com.badlogic.gdx.scenes.scene2d.Actor getRemoveActor() -> getRemoveActor
    void setRemoveActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setRemoveActor
com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction -> com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction:
    com.badlogic.gdx.scenes.scene2d.Actor targetActor -> targetActor
    com.badlogic.gdx.scenes.scene2d.EventListener listener -> listener
    boolean capture -> capture
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Actor getTargetActor() -> getTargetActor
    void setTargetActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setTargetActor
    com.badlogic.gdx.scenes.scene2d.EventListener getListener() -> getListener
    void setListener(com.badlogic.gdx.scenes.scene2d.EventListener) -> setListener
    boolean getCapture() -> getCapture
    void setCapture(boolean) -> setCapture
    void reset() -> reset
com.badlogic.gdx.scenes.scene2d.actions.RepeatAction -> com.badlogic.gdx.scenes.scene2d.actions.RepeatAction:
    int FOREVER -> FOREVER
    int repeatCount -> repeatCount
    int executedCount -> executedCount
    boolean finished -> finished
    boolean delegate(float) -> delegate
    void finish() -> finish
    void restart() -> restart
    void setCount(int) -> setCount
    int getCount() -> getCount
com.badlogic.gdx.scenes.scene2d.actions.RotateByAction -> com.badlogic.gdx.scenes.scene2d.actions.RotateByAction:
    float amount -> amount
    void updateRelative(float) -> updateRelative
    float getAmount() -> getAmount
    void setAmount(float) -> setAmount
com.badlogic.gdx.scenes.scene2d.actions.RotateToAction -> com.badlogic.gdx.scenes.scene2d.actions.RotateToAction:
    float start -> start
    float end -> end
    void begin() -> begin
    void update(float) -> update
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
com.badlogic.gdx.scenes.scene2d.actions.RunnableAction -> com.badlogic.gdx.scenes.scene2d.actions.RunnableAction:
    java.lang.Runnable runnable -> runnable
    boolean ran -> ran
    boolean act(float) -> act
    void run() -> run
    void restart() -> restart
    void reset() -> reset
    java.lang.Runnable getRunnable() -> getRunnable
    void setRunnable(java.lang.Runnable) -> setRunnable
com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction -> com.badlogic.gdx.scenes.scene2d.actions.ScaleByAction:
    float amountX -> amountX
    float amountY -> amountY
    void updateRelative(float) -> updateRelative
    void setAmount(float,float) -> setAmount
    void setAmount(float) -> setAmount
    float getAmountX() -> getAmountX
    void setAmountX(float) -> setAmountX
    float getAmountY() -> getAmountY
    void setAmountY(float) -> setAmountY
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction -> com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction:
    float startX -> startX
    float startY -> startY
    float endX -> endX
    float endY -> endY
    void begin() -> begin
    void update(float) -> update
    void setScale(float,float) -> setScale
    void setScale(float) -> setScale
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
com.badlogic.gdx.scenes.scene2d.actions.SequenceAction -> com.badlogic.gdx.scenes.scene2d.actions.SequenceAction:
    int index -> index
    boolean act(float) -> act
    void restart() -> restart
com.badlogic.gdx.scenes.scene2d.actions.SizeByAction -> com.badlogic.gdx.scenes.scene2d.actions.SizeByAction:
    float amountWidth -> amountWidth
    float amountHeight -> amountHeight
    void updateRelative(float) -> updateRelative
    void setAmount(float,float) -> setAmount
    float getAmountWidth() -> getAmountWidth
    void setAmountWidth(float) -> setAmountWidth
    float getAmountHeight() -> getAmountHeight
    void setAmountHeight(float) -> setAmountHeight
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction -> com.badlogic.gdx.scenes.scene2d.actions.SizeToAction:
    float startWidth -> startWidth
    float startHeight -> startHeight
    float endWidth -> endWidth
    float endHeight -> endHeight
    void begin() -> begin
    void update(float) -> update
    void setSize(float,float) -> setSize
    float getWidth() -> getWidth
    void setWidth(float) -> setWidth
    float getHeight() -> getHeight
    void setHeight(float) -> setHeight
com.badlogic.gdx.scenes.scene2d.actions.TemporalAction -> com.badlogic.gdx.scenes.scene2d.actions.TemporalAction:
    float duration -> duration
    float time -> time
    com.badlogic.gdx.math.Interpolation interpolation -> interpolation
    boolean reverse -> reverse
    boolean began -> began
    boolean complete -> complete
    boolean act(float) -> act
    void begin() -> begin
    void end() -> end
    void update(float) -> update
    void finish() -> finish
    void restart() -> restart
    void reset() -> reset
    float getTime() -> getTime
    void setTime(float) -> setTime
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
    com.badlogic.gdx.math.Interpolation getInterpolation() -> getInterpolation
    void setInterpolation(com.badlogic.gdx.math.Interpolation) -> setInterpolation
    boolean isReverse() -> isReverse
    void setReverse(boolean) -> setReverse
com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction -> com.badlogic.gdx.scenes.scene2d.actions.TimeScaleAction:
    float scale -> scale
    boolean delegate(float) -> delegate
    float getScale() -> getScale
    void setScale(float) -> setScale
com.badlogic.gdx.scenes.scene2d.actions.TouchableAction -> com.badlogic.gdx.scenes.scene2d.actions.TouchableAction:
    com.badlogic.gdx.scenes.scene2d.Touchable touchable -> touchable
    boolean act(float) -> act
    com.badlogic.gdx.scenes.scene2d.Touchable getTouchable() -> getTouchable
    void setTouchable(com.badlogic.gdx.scenes.scene2d.Touchable) -> setTouchable
com.badlogic.gdx.scenes.scene2d.actions.VisibleAction -> com.badlogic.gdx.scenes.scene2d.actions.VisibleAction:
    boolean visible -> visible
    boolean act(float) -> act
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
com.badlogic.gdx.scenes.scene2d.ui.Button -> com.badlogic.gdx.scenes.scene2d.ui.Button:
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle style -> style
    boolean isChecked -> isChecked
    boolean isDisabled -> isDisabled
    com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup buttonGroup -> buttonGroup
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    void initialize() -> initialize
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
    boolean isChecked() -> isChecked
    boolean isPressed() -> isPressed
    boolean isOver() -> isOver
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener() -> getClickListener
    boolean isDisabled() -> isDisabled
    void setDisabled(boolean) -> setDisabled
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
com.badlogic.gdx.scenes.scene2d.ui.Button$1 -> com.badlogic.gdx.scenes.scene2d.ui.Button$1:
    com.badlogic.gdx.scenes.scene2d.ui.Button this$0 -> this$0
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable up -> up
    com.badlogic.gdx.scenes.scene2d.utils.Drawable down -> down
    com.badlogic.gdx.scenes.scene2d.utils.Drawable over -> over
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checked -> checked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkedOver -> checkedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabled -> disabled
    float pressedOffsetX -> pressedOffsetX
    float pressedOffsetY -> pressedOffsetY
    float unpressedOffsetX -> unpressedOffsetX
    float unpressedOffsetY -> unpressedOffsetY
com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup -> com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup:
    com.badlogic.gdx.utils.Array buttons -> buttons
    com.badlogic.gdx.utils.Array checkedButtons -> checkedButtons
    int minCheckCount -> minCheckCount
    int maxCheckCount -> maxCheckCount
    boolean uncheckLast -> uncheckLast
    com.badlogic.gdx.scenes.scene2d.ui.Button lastChecked -> lastChecked
    void add(com.badlogic.gdx.scenes.scene2d.ui.Button) -> add
    void add(com.badlogic.gdx.scenes.scene2d.ui.Button[]) -> add
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Button) -> remove
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Button[]) -> remove
    void setChecked(java.lang.String) -> setChecked
    boolean canCheck(com.badlogic.gdx.scenes.scene2d.ui.Button,boolean) -> canCheck
    void uncheckAll() -> uncheckAll
    com.badlogic.gdx.scenes.scene2d.ui.Button getChecked() -> getChecked
    com.badlogic.gdx.utils.Array getAllChecked() -> getAllChecked
    com.badlogic.gdx.utils.Array getButtons() -> getButtons
    void setMinCheckCount(int) -> setMinCheckCount
    void setMaxCheckCount(int) -> setMaxCheckCount
    void setUncheckLast(boolean) -> setUncheckLast
com.badlogic.gdx.scenes.scene2d.ui.Cell -> com.badlogic.gdx.scenes.scene2d.ui.Cell:
    com.badlogic.gdx.scenes.scene2d.ui.Value minWidth -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value minHeight -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value prefWidth -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value prefHeight -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value maxWidth -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value maxHeight -> maxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value spaceTop -> spaceTop
    com.badlogic.gdx.scenes.scene2d.ui.Value spaceLeft -> spaceLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value spaceBottom -> spaceBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value spaceRight -> spaceRight
    com.badlogic.gdx.scenes.scene2d.ui.Value padTop -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Value padLeft -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value padBottom -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value padRight -> padRight
    java.lang.Float fillX -> fillX
    java.lang.Float fillY -> fillY
    java.lang.Integer align -> align
    java.lang.Integer expandX -> expandX
    java.lang.Integer expandY -> expandY
    java.lang.Integer colspan -> colspan
    java.lang.Boolean uniformX -> uniformX
    java.lang.Boolean uniformY -> uniformY
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    float actorX -> actorX
    float actorY -> actorY
    float actorWidth -> actorWidth
    float actorHeight -> actorHeight
    com.badlogic.gdx.scenes.scene2d.ui.Table table -> table
    boolean endRow -> endRow
    int column -> column
    int row -> row
    int cellAboveIndex -> cellAboveIndex
    float computedPadTop -> computedPadTop
    float computedPadLeft -> computedPadLeft
    float computedPadBottom -> computedPadBottom
    float computedPadRight -> computedPadRight
    void setLayout(com.badlogic.gdx.scenes.scene2d.ui.Table) -> setLayout
    void set(com.badlogic.gdx.scenes.scene2d.ui.Cell) -> set
    void merge(com.badlogic.gdx.scenes.scene2d.ui.Cell) -> merge
    com.badlogic.gdx.scenes.scene2d.ui.Cell setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    boolean hasActor() -> hasActor
    com.badlogic.gdx.scenes.scene2d.ui.Cell size(com.badlogic.gdx.scenes.scene2d.ui.Value) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Cell size(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Cell size(float) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Cell size(float,float) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Cell width(com.badlogic.gdx.scenes.scene2d.ui.Value) -> width
    com.badlogic.gdx.scenes.scene2d.ui.Cell width(float) -> width
    com.badlogic.gdx.scenes.scene2d.ui.Cell height(com.badlogic.gdx.scenes.scene2d.ui.Value) -> height
    com.badlogic.gdx.scenes.scene2d.ui.Cell height(float) -> height
    com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell minWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Cell minHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(float) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell minSize(float,float) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell minWidth(float) -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Cell minHeight(float) -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(float,float) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefSize(float) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefWidth(float) -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Cell prefHeight(float) -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(float) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxSize(float,float) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxWidth(float) -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Cell maxHeight(float) -> maxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Cell space(com.badlogic.gdx.scenes.scene2d.ui.Value) -> space
    com.badlogic.gdx.scenes.scene2d.ui.Cell space(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> space
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceTop(com.badlogic.gdx.scenes.scene2d.ui.Value) -> spaceTop
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceLeft(com.badlogic.gdx.scenes.scene2d.ui.Value) -> spaceLeft
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceBottom(com.badlogic.gdx.scenes.scene2d.ui.Value) -> spaceBottom
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceRight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> spaceRight
    com.badlogic.gdx.scenes.scene2d.ui.Cell space(float) -> space
    com.badlogic.gdx.scenes.scene2d.ui.Cell space(float,float,float,float) -> space
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceTop(float) -> spaceTop
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceLeft(float) -> spaceLeft
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceBottom(float) -> spaceBottom
    com.badlogic.gdx.scenes.scene2d.ui.Cell spaceRight(float) -> spaceRight
    com.badlogic.gdx.scenes.scene2d.ui.Cell pad(com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Cell pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Cell padTop(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Cell padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Cell padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Cell padRight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Cell pad(float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Cell pad(float,float,float,float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Cell padTop(float) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Cell padLeft(float) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Cell padBottom(float) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Cell padRight(float) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Cell fill() -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Cell fillX() -> fillX
    com.badlogic.gdx.scenes.scene2d.ui.Cell fillY() -> fillY
    com.badlogic.gdx.scenes.scene2d.ui.Cell fill(java.lang.Float,java.lang.Float) -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Cell fill(boolean,boolean) -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Cell fill(boolean) -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Cell align(java.lang.Integer) -> align
    com.badlogic.gdx.scenes.scene2d.ui.Cell center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.Cell top() -> top
    com.badlogic.gdx.scenes.scene2d.ui.Cell left() -> left
    com.badlogic.gdx.scenes.scene2d.ui.Cell bottom() -> bottom
    com.badlogic.gdx.scenes.scene2d.ui.Cell right() -> right
    com.badlogic.gdx.scenes.scene2d.ui.Cell expand() -> expand
    com.badlogic.gdx.scenes.scene2d.ui.Cell expandX() -> expandX
    com.badlogic.gdx.scenes.scene2d.ui.Cell expandY() -> expandY
    com.badlogic.gdx.scenes.scene2d.ui.Cell expand(java.lang.Integer,java.lang.Integer) -> expand
    com.badlogic.gdx.scenes.scene2d.ui.Cell expand(boolean,boolean) -> expand
    com.badlogic.gdx.scenes.scene2d.ui.Cell colspan(java.lang.Integer) -> colspan
    com.badlogic.gdx.scenes.scene2d.ui.Cell uniform() -> uniform
    com.badlogic.gdx.scenes.scene2d.ui.Cell uniformX() -> uniformX
    com.badlogic.gdx.scenes.scene2d.ui.Cell uniformY() -> uniformY
    com.badlogic.gdx.scenes.scene2d.ui.Cell uniform(java.lang.Boolean,java.lang.Boolean) -> uniform
    void setActorBounds(float,float,float,float) -> setActorBounds
    float getActorX() -> getActorX
    void setActorX(float) -> setActorX
    float getActorY() -> getActorY
    void setActorY(float) -> setActorY
    float getActorWidth() -> getActorWidth
    void setActorWidth(float) -> setActorWidth
    float getActorHeight() -> getActorHeight
    void setActorHeight(float) -> setActorHeight
    int getColumn() -> getColumn
    int getRow() -> getRow
    com.badlogic.gdx.scenes.scene2d.ui.Value getMinWidthValue() -> getMinWidthValue
    float getMinWidth() -> getMinWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value getMinHeightValue() -> getMinHeightValue
    float getMinHeight() -> getMinHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value getPrefWidthValue() -> getPrefWidthValue
    float getPrefWidth() -> getPrefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value getPrefHeightValue() -> getPrefHeightValue
    float getPrefHeight() -> getPrefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value getMaxWidthValue() -> getMaxWidthValue
    float getMaxWidth() -> getMaxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value getMaxHeightValue() -> getMaxHeightValue
    float getMaxHeight() -> getMaxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceTopValue() -> getSpaceTopValue
    float getSpaceTop() -> getSpaceTop
    com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceLeftValue() -> getSpaceLeftValue
    float getSpaceLeft() -> getSpaceLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceBottomValue() -> getSpaceBottomValue
    float getSpaceBottom() -> getSpaceBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value getSpaceRightValue() -> getSpaceRightValue
    float getSpaceRight() -> getSpaceRight
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadTopValue() -> getPadTopValue
    float getPadTop() -> getPadTop
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadLeftValue() -> getPadLeftValue
    float getPadLeft() -> getPadLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadBottomValue() -> getPadBottomValue
    float getPadBottom() -> getPadBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadRightValue() -> getPadRightValue
    float getPadRight() -> getPadRight
    float getPadX() -> getPadX
    float getPadY() -> getPadY
    java.lang.Float getFillX() -> getFillX
    java.lang.Float getFillY() -> getFillY
    java.lang.Integer getAlign() -> getAlign
    java.lang.Integer getExpandX() -> getExpandX
    java.lang.Integer getExpandY() -> getExpandY
    java.lang.Integer getColspan() -> getColspan
    java.lang.Boolean getUniformX() -> getUniformX
    java.lang.Boolean getUniformY() -> getUniformY
    boolean isEndRow() -> isEndRow
    float getComputedPadTop() -> getComputedPadTop
    float getComputedPadLeft() -> getComputedPadLeft
    float getComputedPadBottom() -> getComputedPadBottom
    float getComputedPadRight() -> getComputedPadRight
    com.badlogic.gdx.scenes.scene2d.ui.Cell row() -> row
    com.badlogic.gdx.scenes.scene2d.ui.Table getTable() -> getTable
    void clear() -> clear
    void reset() -> reset
    void defaults() -> defaults
com.badlogic.gdx.scenes.scene2d.ui.CheckBox -> com.badlogic.gdx.scenes.scene2d.ui.CheckBox:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.Cell imageCell -> imageCell
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    com.badlogic.gdx.scenes.scene2d.ui.Cell getImageCell() -> getImageCell
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> getStyle
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle -> com.badlogic.gdx.scenes.scene2d.ui.CheckBox$CheckBoxStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOn -> checkboxOn
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOff -> checkboxOff
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOver -> checkboxOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOnDisabled -> checkboxOnDisabled
    com.badlogic.gdx.scenes.scene2d.utils.Drawable checkboxOffDisabled -> checkboxOffDisabled
com.badlogic.gdx.scenes.scene2d.ui.Container -> com.badlogic.gdx.scenes.scene2d.ui.Container:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.ui.Value minWidth -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value minHeight -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value prefWidth -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value prefHeight -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value maxWidth -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value maxHeight -> maxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value padTop -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Value padLeft -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value padBottom -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value padRight -> padRight
    float fillX -> fillX
    float fillY -> fillY
    int align -> align
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    boolean clip -> clip
    boolean round -> round
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float) -> drawBackground
    void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setBackground
    void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable,boolean) -> setBackground
    com.badlogic.gdx.scenes.scene2d.ui.Container background(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getBackground() -> getBackground
    void layout() -> layout
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAfter
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    com.badlogic.gdx.scenes.scene2d.ui.Container size(com.badlogic.gdx.scenes.scene2d.ui.Value) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Container size(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Container size(float) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Container size(float,float) -> size
    com.badlogic.gdx.scenes.scene2d.ui.Container width(com.badlogic.gdx.scenes.scene2d.ui.Value) -> width
    com.badlogic.gdx.scenes.scene2d.ui.Container width(float) -> width
    com.badlogic.gdx.scenes.scene2d.ui.Container height(com.badlogic.gdx.scenes.scene2d.ui.Value) -> height
    com.badlogic.gdx.scenes.scene2d.ui.Container height(float) -> height
    com.badlogic.gdx.scenes.scene2d.ui.Container minSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Container minSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Container minWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Container minHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Container minSize(float) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Container minSize(float,float) -> minSize
    com.badlogic.gdx.scenes.scene2d.ui.Container minWidth(float) -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Container minHeight(float) -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Container prefWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Container prefHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(float,float) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Container prefSize(float) -> prefSize
    com.badlogic.gdx.scenes.scene2d.ui.Container prefWidth(float) -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Container prefHeight(float) -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Container maxWidth(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Container maxHeight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> maxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(float) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Container maxSize(float,float) -> maxSize
    com.badlogic.gdx.scenes.scene2d.ui.Container maxWidth(float) -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Container maxHeight(float) -> maxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Container pad(com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Container pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Container padTop(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Container padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Container padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Container padRight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Container pad(float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Container pad(float,float,float,float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Container padTop(float) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Container padLeft(float) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Container padBottom(float) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Container padRight(float) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Container fill() -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Container fillX() -> fillX
    com.badlogic.gdx.scenes.scene2d.ui.Container fillY() -> fillY
    com.badlogic.gdx.scenes.scene2d.ui.Container fill(float,float) -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Container fill(boolean,boolean) -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Container fill(boolean) -> fill
    com.badlogic.gdx.scenes.scene2d.ui.Container align(int) -> align
    com.badlogic.gdx.scenes.scene2d.ui.Container center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.Container top() -> top
    com.badlogic.gdx.scenes.scene2d.ui.Container left() -> left
    com.badlogic.gdx.scenes.scene2d.ui.Container bottom() -> bottom
    com.badlogic.gdx.scenes.scene2d.ui.Container right() -> right
    float getMinWidth() -> getMinWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value getMinHeightValue() -> getMinHeightValue
    float getMinHeight() -> getMinHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value getPrefWidthValue() -> getPrefWidthValue
    float getPrefWidth() -> getPrefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value getPrefHeightValue() -> getPrefHeightValue
    float getPrefHeight() -> getPrefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value getMaxWidthValue() -> getMaxWidthValue
    float getMaxWidth() -> getMaxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value getMaxHeightValue() -> getMaxHeightValue
    float getMaxHeight() -> getMaxHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadTopValue() -> getPadTopValue
    float getPadTop() -> getPadTop
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadLeftValue() -> getPadLeftValue
    float getPadLeft() -> getPadLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadBottomValue() -> getPadBottomValue
    float getPadBottom() -> getPadBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadRightValue() -> getPadRightValue
    float getPadRight() -> getPadRight
    float getPadX() -> getPadX
    float getPadY() -> getPadY
    float getFillX() -> getFillX
    float getFillY() -> getFillY
    int getAlign() -> getAlign
    void setRound(boolean) -> setRound
    void setClip(boolean) -> setClip
    boolean getClip() -> getClip
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
com.badlogic.gdx.scenes.scene2d.ui.Dialog -> com.badlogic.gdx.scenes.scene2d.ui.Dialog:
    float fadeDuration -> fadeDuration
    com.badlogic.gdx.scenes.scene2d.ui.Table contentTable -> contentTable
    com.badlogic.gdx.scenes.scene2d.ui.Table buttonTable -> buttonTable
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> skin
    com.badlogic.gdx.utils.ObjectMap values -> values
    boolean cancelHide -> cancelHide
    com.badlogic.gdx.scenes.scene2d.Actor previousKeyboardFocus -> previousKeyboardFocus
    com.badlogic.gdx.scenes.scene2d.Actor previousScrollFocus -> previousScrollFocus
    com.badlogic.gdx.scenes.scene2d.InputListener ignoreTouchDown -> ignoreTouchDown
    void initialize() -> initialize
    com.badlogic.gdx.scenes.scene2d.ui.Table getContentTable() -> getContentTable
    com.badlogic.gdx.scenes.scene2d.ui.Table getButtonTable() -> getButtonTable
    com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String) -> text
    com.badlogic.gdx.scenes.scene2d.ui.Dialog text(java.lang.String,com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> text
    com.badlogic.gdx.scenes.scene2d.ui.Dialog text(com.badlogic.gdx.scenes.scene2d.ui.Label) -> text
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(java.lang.String,java.lang.Object,com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog button(com.badlogic.gdx.scenes.scene2d.ui.Button,java.lang.Object) -> button
    com.badlogic.gdx.scenes.scene2d.ui.Dialog show(com.badlogic.gdx.scenes.scene2d.Stage) -> show
    void hide() -> hide
    void setObject(com.badlogic.gdx.scenes.scene2d.Actor,java.lang.Object) -> setObject
    com.badlogic.gdx.scenes.scene2d.ui.Dialog key(int,java.lang.Object) -> key
    void result(java.lang.Object) -> result
    void cancel() -> cancel
com.badlogic.gdx.scenes.scene2d.ui.Dialog$1 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$1:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.Dialog$2 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$2:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.badlogic.gdx.scenes.scene2d.ui.Dialog$3 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$3:
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    void keyboardFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> keyboardFocusChanged
    void scrollFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> scrollFocusChanged
    void focusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent) -> focusChanged
com.badlogic.gdx.scenes.scene2d.ui.Dialog$4 -> com.badlogic.gdx.scenes.scene2d.ui.Dialog$4:
    int val$keycode -> val$keycode
    java.lang.Object val$object -> val$object
    com.badlogic.gdx.scenes.scene2d.ui.Dialog this$0 -> this$0
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup -> com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    int align -> align
    boolean reverse -> reverse
    boolean round -> round
    float spacing -> spacing
    float padTop -> padTop
    float padLeft -> padLeft
    float padBottom -> padBottom
    float padRight -> padRight
    float fill -> fill
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setRound(boolean) -> setRound
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup reverse() -> reverse
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup reverse(boolean) -> reverse
    boolean getReverse() -> getReverse
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup space(float) -> space
    float getSpace() -> getSpace
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup pad(float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup pad(float,float,float,float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padTop(float) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padLeft(float) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padBottom(float) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup padRight(float) -> padRight
    float getPadTop() -> getPadTop
    float getPadLeft() -> getPadLeft
    float getPadBottom() -> getPadBottom
    float getPadRight() -> getPadRight
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup align(int) -> align
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup top() -> top
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup bottom() -> bottom
    int getAlign() -> getAlign
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup fill() -> fill
    com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup fill(float) -> fill
    float getFill() -> getFill
com.badlogic.gdx.scenes.scene2d.ui.Image -> com.badlogic.gdx.scenes.scene2d.ui.Image:
    com.badlogic.gdx.utils.Scaling scaling -> scaling
    int align -> align
    float imageX -> imageX
    float imageY -> imageY
    float imageWidth -> imageWidth
    float imageHeight -> imageHeight
    com.badlogic.gdx.scenes.scene2d.utils.Drawable drawable -> drawable
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void setDrawable(com.badlogic.gdx.scenes.scene2d.ui.Skin,java.lang.String) -> setDrawable
    void setDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable() -> getDrawable
    void setScaling(com.badlogic.gdx.utils.Scaling) -> setScaling
    void setAlign(int) -> setAlign
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getImageX() -> getImageX
    float getImageY() -> getImageY
    float getImageWidth() -> getImageWidth
    float getImageHeight() -> getImageHeight
com.badlogic.gdx.scenes.scene2d.ui.ImageButton -> com.badlogic.gdx.scenes.scene2d.ui.ImageButton:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle getStyle() -> getStyle
    void updateImage() -> updateImage
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    com.badlogic.gdx.scenes.scene2d.ui.Cell getImageCell() -> getImageCell
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.ImageButton$ImageButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp -> imageUp
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown -> imageDown
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver -> imageOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked -> imageChecked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver -> imageCheckedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled -> imageDisabled
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton -> com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton:
    com.badlogic.gdx.scenes.scene2d.ui.Image image -> image
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> label
    com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle getStyle() -> getStyle
    void updateImage() -> updateImage
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Image getImage() -> getImage
    com.badlogic.gdx.scenes.scene2d.ui.Cell getImageCell() -> getImageCell
    com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> getLabel
    com.badlogic.gdx.scenes.scene2d.ui.Cell getLabelCell() -> getLabelCell
    void setText(java.lang.String) -> setText
    java.lang.CharSequence getText() -> getText
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton$ImageTextButtonStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageUp -> imageUp
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDown -> imageDown
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageOver -> imageOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageChecked -> imageChecked
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageCheckedOver -> imageCheckedOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable imageDisabled -> imageDisabled
com.badlogic.gdx.scenes.scene2d.ui.Label -> com.badlogic.gdx.scenes.scene2d.ui.Label:
    com.badlogic.gdx.graphics.Color tempColor -> tempColor
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle style -> style
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds -> bounds
    com.badlogic.gdx.utils.StringBuilder text -> text
    com.badlogic.gdx.utils.StringBuilder tempText -> tempText
    com.badlogic.gdx.graphics.g2d.BitmapFontCache cache -> cache
    int labelAlign -> labelAlign
    com.badlogic.gdx.graphics.g2d.BitmapFont$HAlignment lineAlign -> lineAlign
    boolean wrap -> wrap
    float lastPrefHeight -> lastPrefHeight
    boolean sizeInvalid -> sizeInvalid
    float fontScaleX -> fontScaleX
    float fontScaleY -> fontScaleY
    boolean ellipse -> ellipse
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle getStyle() -> getStyle
    void setText(java.lang.CharSequence) -> setText
    boolean textEquals(java.lang.CharSequence) -> textEquals
    java.lang.CharSequence getText() -> getText
    void invalidate() -> invalidate
    void scaleAndComputeSize() -> scaleAndComputeSize
    void computeSize() -> computeSize
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds getTextBounds() -> getTextBounds
    void setWrap(boolean) -> setWrap
    void setAlignment(int) -> setAlignment
    void setAlignment(int,int) -> setAlignment
    void setFontScale(float) -> setFontScale
    void setFontScale(float,float) -> setFontScale
    float getFontScaleX() -> getFontScaleX
    void setFontScaleX(float) -> setFontScaleX
    float getFontScaleY() -> getFontScaleY
    void setFontScaleY(float) -> setFontScaleY
    void setEllipse(boolean) -> setEllipse
    com.badlogic.gdx.graphics.g2d.BitmapFontCache getBitmapFontCache() -> getBitmapFontCache
com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle -> com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.List -> com.badlogic.gdx.scenes.scene2d.ui.List:
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle style -> style
    com.badlogic.gdx.utils.Array items -> items
    com.badlogic.gdx.math.Rectangle cullingArea -> cullingArea
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    float itemHeight -> itemHeight
    float textOffsetX -> textOffsetX
    float textOffsetY -> textOffsetY
    com.badlogic.gdx.scenes.scene2d.utils.ArraySelection selection -> selection
    void touchDown(float) -> touchDown
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle getStyle() -> getStyle
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.utils.ArraySelection getSelection() -> getSelection
    java.lang.Object getSelected() -> getSelected
    int getSelectedIndex() -> getSelectedIndex
    void setSelectedIndex(int) -> setSelectedIndex
    void setItems(java.lang.Object[]) -> setItems
    void setItems(com.badlogic.gdx.utils.Array) -> setItems
    com.badlogic.gdx.utils.Array getItems() -> getItems
    float getItemHeight() -> getItemHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
com.badlogic.gdx.scenes.scene2d.ui.List$1 -> com.badlogic.gdx.scenes.scene2d.ui.List$1:
    com.badlogic.gdx.scenes.scene2d.ui.List this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle -> com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColorSelected -> fontColorSelected
    com.badlogic.gdx.graphics.Color fontColorUnselected -> fontColorUnselected
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar -> com.badlogic.gdx.scenes.scene2d.ui.ProgressBar:
    com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle style -> style
    float min -> min
    float max -> max
    float stepSize -> stepSize
    float value -> value
    float animateFromValue -> animateFromValue
    float position -> position
    boolean vertical -> vertical
    float animateDuration -> animateDuration
    float animateTime -> animateTime
    com.badlogic.gdx.math.Interpolation animateInterpolation -> animateInterpolation
    float[] snapValues -> snapValues
    float threshold -> threshold
    boolean disabled -> disabled
    boolean shiftIgnoresSnap -> shiftIgnoresSnap
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle getStyle() -> getStyle
    void act(float) -> act
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getValue() -> getValue
    float getVisualValue() -> getVisualValue
    float getKnobPosition() -> getKnobPosition
    boolean setValue(float) -> setValue
    float clamp(float) -> clamp
    void setRange(float,float) -> setRange
    void setStepSize(float) -> setStepSize
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinValue() -> getMinValue
    float getMaxValue() -> getMaxValue
    float getStepSize() -> getStepSize
    void setAnimateDuration(float) -> setAnimateDuration
    void setAnimateInterpolation(com.badlogic.gdx.math.Interpolation) -> setAnimateInterpolation
    void setSnapToValues(float[],float) -> setSnapToValues
    float snap(float) -> snap
    void setDisabled(boolean) -> setDisabled
    boolean isDisabled() -> isDisabled
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle -> com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledBackground -> disabledBackground
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knob -> knob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledKnob -> disabledKnob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knobBefore -> knobBefore
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knobAfter -> knobAfter
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledKnobBefore -> disabledKnobBefore
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledKnobAfter -> disabledKnobAfter
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle style -> style
    com.badlogic.gdx.scenes.scene2d.Actor widget -> widget
    com.badlogic.gdx.math.Rectangle hScrollBounds -> hScrollBounds
    com.badlogic.gdx.math.Rectangle vScrollBounds -> vScrollBounds
    com.badlogic.gdx.math.Rectangle hKnobBounds -> hKnobBounds
    com.badlogic.gdx.math.Rectangle vKnobBounds -> vKnobBounds
    com.badlogic.gdx.math.Rectangle widgetAreaBounds -> widgetAreaBounds
    com.badlogic.gdx.math.Rectangle widgetCullingArea -> widgetCullingArea
    com.badlogic.gdx.math.Rectangle scissorBounds -> scissorBounds
    com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener flickScrollListener -> flickScrollListener
    boolean scrollX -> scrollX
    boolean scrollY -> scrollY
    boolean vScrollOnRight -> vScrollOnRight
    boolean hScrollOnBottom -> hScrollOnBottom
    float amountX -> amountX
    float amountY -> amountY
    float visualAmountX -> visualAmountX
    float visualAmountY -> visualAmountY
    float maxX -> maxX
    float maxY -> maxY
    boolean touchScrollH -> touchScrollH
    boolean touchScrollV -> touchScrollV
    com.badlogic.gdx.math.Vector2 lastPoint -> lastPoint
    float areaWidth -> areaWidth
    float areaHeight -> areaHeight
    boolean fadeScrollBars -> fadeScrollBars
    boolean smoothScrolling -> smoothScrolling
    float fadeAlpha -> fadeAlpha
    float fadeAlphaSeconds -> fadeAlphaSeconds
    float fadeDelay -> fadeDelay
    float fadeDelaySeconds -> fadeDelaySeconds
    boolean cancelTouchFocus -> cancelTouchFocus
    boolean flickScroll -> flickScroll
    float velocityX -> velocityX
    float velocityY -> velocityY
    float flingTimer -> flingTimer
    boolean overscrollX -> overscrollX
    boolean overscrollY -> overscrollY
    float flingTime -> flingTime
    float overscrollDistance -> overscrollDistance
    float overscrollSpeedMin -> overscrollSpeedMin
    float overscrollSpeedMax -> overscrollSpeedMax
    boolean forceScrollX -> forceScrollX
    boolean forceScrollY -> forceScrollY
    boolean disableX -> disableX
    boolean disableY -> disableY
    boolean clamp -> clamp
    boolean scrollbarsOnTop -> scrollbarsOnTop
    boolean variableSizeKnobs -> variableSizeKnobs
    int draggingPointer -> draggingPointer
    void resetFade() -> resetFade
    void cancelTouchFocusedChild(com.badlogic.gdx.scenes.scene2d.InputEvent) -> cancelTouchFocusedChild
    void cancel() -> cancel
    void clamp() -> clamp
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle getStyle() -> getStyle
    void act(float) -> act
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void fling(float,float,float) -> fling
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    void setWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setWidget
    com.badlogic.gdx.scenes.scene2d.Actor getWidget() -> getWidget
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    void addActorAfter(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAfter
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void scrollX(float) -> scrollX
    void scrollY(float) -> scrollY
    void visualScrollX(float) -> visualScrollX
    void visualScrollY(float) -> visualScrollY
    float getMouseWheelX() -> getMouseWheelX
    float getMouseWheelY() -> getMouseWheelY
    void setScrollX(float) -> setScrollX
    float getScrollX() -> getScrollX
    void setScrollY(float) -> setScrollY
    float getScrollY() -> getScrollY
    void updateVisualScroll() -> updateVisualScroll
    float getVisualScrollX() -> getVisualScrollX
    float getVisualScrollY() -> getVisualScrollY
    float getScrollPercentX() -> getScrollPercentX
    void setScrollPercentX(float) -> setScrollPercentX
    float getScrollPercentY() -> getScrollPercentY
    void setScrollPercentY(float) -> setScrollPercentY
    void setFlickScroll(boolean) -> setFlickScroll
    void scrollTo(float,float,float,float) -> scrollTo
    void scrollToCenter(float,float,float,float) -> scrollToCenter
    float getMaxX() -> getMaxX
    float getMaxY() -> getMaxY
    float getScrollBarHeight() -> getScrollBarHeight
    float getScrollBarWidth() -> getScrollBarWidth
    float getScrollWidth() -> getScrollWidth
    float getScrollHeight() -> getScrollHeight
    boolean isScrollX() -> isScrollX
    boolean isScrollY() -> isScrollY
    void setScrollingDisabled(boolean,boolean) -> setScrollingDisabled
    boolean isDragging() -> isDragging
    boolean isPanning() -> isPanning
    boolean isFlinging() -> isFlinging
    void setVelocityX(float) -> setVelocityX
    float getVelocityX() -> getVelocityX
    void setVelocityY(float) -> setVelocityY
    float getVelocityY() -> getVelocityY
    void setOverscroll(boolean,boolean) -> setOverscroll
    void setupOverscroll(float,float,float) -> setupOverscroll
    void setForceScroll(boolean,boolean) -> setForceScroll
    boolean isForceScrollX() -> isForceScrollX
    boolean isForceScrollY() -> isForceScrollY
    void setFlingTime(float) -> setFlingTime
    void setClamp(boolean) -> setClamp
    void setScrollBarPositions(boolean,boolean) -> setScrollBarPositions
    void setFadeScrollBars(boolean) -> setFadeScrollBars
    void setupFadeScrollBars(float,float) -> setupFadeScrollBars
    void setSmoothScrolling(boolean) -> setSmoothScrolling
    void setScrollbarsOnTop(boolean) -> setScrollbarsOnTop
    boolean getVariableSizeKnobs() -> getVariableSizeKnobs
    void setVariableSizeKnobs(boolean) -> setVariableSizeKnobs
    void setCancelTouchFocus(boolean) -> setCancelTouchFocus
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$1:
    float handlePosition -> handlePosition
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$2:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    void pan(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,float,float) -> pan
    void fling(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> fling
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3 -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$3:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane this$0 -> this$0
    boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle -> com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable corner -> corner
    com.badlogic.gdx.scenes.scene2d.utils.Drawable hScroll -> hScroll
    com.badlogic.gdx.scenes.scene2d.utils.Drawable hScrollKnob -> hScrollKnob
    com.badlogic.gdx.scenes.scene2d.utils.Drawable vScroll -> vScroll
    com.badlogic.gdx.scenes.scene2d.utils.Drawable vScrollKnob -> vScrollKnob
com.badlogic.gdx.scenes.scene2d.ui.SelectBox -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox:
    com.badlogic.gdx.math.Vector2 tmpCoords -> tmpCoords
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle style -> style
    com.badlogic.gdx.utils.Array items -> items
    java.lang.Object selected -> selected
    com.badlogic.gdx.graphics.g2d.BitmapFont$TextBounds bounds -> bounds
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll scroll -> scroll
    com.badlogic.gdx.scenes.scene2d.utils.Selection selection -> selection
    com.badlogic.gdx.scenes.scene2d.Actor previousScrollFocus -> previousScrollFocus
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    int maxListCount -> maxListCount
    boolean disabled -> disabled
    void setMaxListCount(int) -> setMaxListCount
    int getMaxListCount() -> getMaxListCount
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle getStyle() -> getStyle
    void setItems(java.lang.Object[]) -> setItems
    void setItems(com.badlogic.gdx.utils.Array) -> setItems
    com.badlogic.gdx.utils.Array getItems() -> getItems
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.utils.Selection getSelection() -> getSelection
    java.lang.Object getSelected() -> getSelected
    void setSelected(java.lang.Object) -> setSelected
    int getSelectedIndex() -> getSelectedIndex
    void setSelectedIndex(int) -> setSelectedIndex
    void setDisabled(boolean) -> setDisabled
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void showList() -> showList
    void hideList() -> hideList
    com.badlogic.gdx.scenes.scene2d.ui.List getList() -> getList
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane getScrollPane() -> getScrollPane
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$1:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll:
    com.badlogic.gdx.scenes.scene2d.ui.List list -> list
    com.badlogic.gdx.math.Vector2 screenCoords -> screenCoords
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox this$0 -> this$0
    void show(com.badlogic.gdx.scenes.scene2d.Stage) -> show
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void act(float) -> act
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$1 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$1:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox val$this$0 -> val$this$0
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll this$1 -> this$1
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$2 -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll$2:
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox val$this$0 -> val$this$0
    com.badlogic.gdx.scenes.scene2d.ui.SelectBox$ListScroll this$1 -> this$1
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle -> com.badlogic.gdx.scenes.scene2d.ui.SelectBox$SelectBoxStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle scrollStyle -> scrollStyle
    com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle listStyle -> listStyle
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOver -> backgroundOver
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundOpen -> backgroundOpen
    com.badlogic.gdx.scenes.scene2d.utils.Drawable backgroundDisabled -> backgroundDisabled
com.badlogic.gdx.scenes.scene2d.ui.Skin -> com.badlogic.gdx.scenes.scene2d.ui.Skin:
    com.badlogic.gdx.utils.ObjectMap resources -> resources
    com.badlogic.gdx.graphics.g2d.TextureAtlas atlas -> atlas
    void load(com.badlogic.gdx.files.FileHandle) -> load
    void addRegions(com.badlogic.gdx.graphics.g2d.TextureAtlas) -> addRegions
    void add(java.lang.String,java.lang.Object) -> add
    void add(java.lang.String,java.lang.Object,java.lang.Class) -> add
    void remove(java.lang.String,java.lang.Class) -> remove
    java.lang.Object get(java.lang.Class) -> get
    java.lang.Object get(java.lang.String,java.lang.Class) -> get
    java.lang.Object optional(java.lang.String,java.lang.Class) -> optional
    boolean has(java.lang.String,java.lang.Class) -> has
    com.badlogic.gdx.utils.ObjectMap getAll(java.lang.Class) -> getAll
    com.badlogic.gdx.graphics.Color getColor(java.lang.String) -> getColor
    com.badlogic.gdx.graphics.g2d.BitmapFont getFont(java.lang.String) -> getFont
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion(java.lang.String) -> getRegion
    com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable getTiledDrawable(java.lang.String) -> getTiledDrawable
    com.badlogic.gdx.graphics.g2d.NinePatch getPatch(java.lang.String) -> getPatch
    com.badlogic.gdx.graphics.g2d.Sprite getSprite(java.lang.String) -> getSprite
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getDrawable(java.lang.String) -> getDrawable
    java.lang.String find(java.lang.Object) -> find
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,float,float,float,float) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(java.lang.String,com.badlogic.gdx.graphics.Color) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,float,float,float,float) -> newDrawable
    com.badlogic.gdx.scenes.scene2d.utils.Drawable newDrawable(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.Color) -> newDrawable
    void setEnabled(com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> setEnabled
    com.badlogic.gdx.graphics.g2d.TextureAtlas getAtlas() -> getAtlas
    void dispose() -> dispose
    com.badlogic.gdx.utils.Json getJsonLoader(com.badlogic.gdx.files.FileHandle) -> getJsonLoader
    com.badlogic.gdx.utils.reflect.Method findMethod(java.lang.Class,java.lang.String) -> findMethod
com.badlogic.gdx.scenes.scene2d.ui.Skin$1 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$1:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    java.lang.Object readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
com.badlogic.gdx.scenes.scene2d.ui.Skin$2 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$2:
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> val$skin
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    com.badlogic.gdx.scenes.scene2d.ui.Skin read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
    void readNamedObjects(com.badlogic.gdx.utils.Json,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readNamedObjects
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$3 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$3:
    com.badlogic.gdx.files.FileHandle val$skinFile -> val$skinFile
    com.badlogic.gdx.scenes.scene2d.ui.Skin val$skin -> val$skin
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    com.badlogic.gdx.graphics.g2d.BitmapFont read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$4 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$4:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    com.badlogic.gdx.graphics.Color read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$5 -> com.badlogic.gdx.scenes.scene2d.ui.Skin$5:
    com.badlogic.gdx.scenes.scene2d.ui.Skin this$0 -> this$0
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable -> com.badlogic.gdx.scenes.scene2d.ui.Skin$TintedDrawable:
    java.lang.String name -> name
    com.badlogic.gdx.graphics.Color color -> color
com.badlogic.gdx.scenes.scene2d.ui.Slider -> com.badlogic.gdx.scenes.scene2d.ui.Slider:
    int draggingPointer -> draggingPointer
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle getStyle() -> getStyle
    boolean calculatePositionAndValue(float,float) -> calculatePositionAndValue
    boolean isDragging() -> isDragging
    com.badlogic.gdx.scenes.scene2d.ui.ProgressBar$ProgressBarStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.Slider$1 -> com.badlogic.gdx.scenes.scene2d.ui.Slider$1:
    com.badlogic.gdx.scenes.scene2d.ui.Slider this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle -> com.badlogic.gdx.scenes.scene2d.ui.Slider$SliderStyle:
com.badlogic.gdx.scenes.scene2d.ui.SplitPane -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane:
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle style -> style
    com.badlogic.gdx.scenes.scene2d.Actor firstWidget -> firstWidget
    com.badlogic.gdx.scenes.scene2d.Actor secondWidget -> secondWidget
    boolean vertical -> vertical
    float splitAmount -> splitAmount
    float minAmount -> minAmount
    float maxAmount -> maxAmount
    float oldSplitAmount -> oldSplitAmount
    com.badlogic.gdx.math.Rectangle firstWidgetBounds -> firstWidgetBounds
    com.badlogic.gdx.math.Rectangle secondWidgetBounds -> secondWidgetBounds
    com.badlogic.gdx.math.Rectangle handleBounds -> handleBounds
    com.badlogic.gdx.math.Rectangle firstScissors -> firstScissors
    com.badlogic.gdx.math.Rectangle secondScissors -> secondScissors
    com.badlogic.gdx.math.Vector2 lastPoint -> lastPoint
    com.badlogic.gdx.math.Vector2 handlePosition -> handlePosition
    void initialize() -> initialize
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle getStyle() -> getStyle
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    void setVertical(boolean) -> setVertical
    void calculateHorizBoundsAndPositions() -> calculateHorizBoundsAndPositions
    void calculateVertBoundsAndPositions() -> calculateVertBoundsAndPositions
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void setSplitAmount(float) -> setSplitAmount
    float getSplit() -> getSplit
    void setMinSplitAmount(float) -> setMinSplitAmount
    void setMaxSplitAmount(float) -> setMaxSplitAmount
    void setFirstWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setFirstWidget
    void setSecondWidget(com.badlogic.gdx.scenes.scene2d.Actor) -> setSecondWidget
    void addActor(com.badlogic.gdx.scenes.scene2d.Actor) -> addActor
    void addActorAt(int,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorAt
    void addActorBefore(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.Actor) -> addActorBefore
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1 -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane$1:
    int draggingPointer -> draggingPointer
    com.badlogic.gdx.scenes.scene2d.ui.SplitPane this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle -> com.badlogic.gdx.scenes.scene2d.ui.SplitPane$SplitPaneStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable handle -> handle
com.badlogic.gdx.scenes.scene2d.ui.Stack -> com.badlogic.gdx.scenes.scene2d.ui.Stack:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    float minWidth -> minWidth
    float minHeight -> minHeight
    float maxWidth -> maxWidth
    float maxHeight -> maxHeight
    boolean sizeInvalid -> sizeInvalid
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void add(com.badlogic.gdx.scenes.scene2d.Actor) -> add
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
com.badlogic.gdx.scenes.scene2d.ui.Table -> com.badlogic.gdx.scenes.scene2d.ui.Table:
    com.badlogic.gdx.utils.Pool cellPool -> cellPool
    float[] columnWeightedWidth -> columnWeightedWidth
    float[] rowWeightedHeight -> rowWeightedHeight
    int columns -> columns
    int rows -> rows
    com.badlogic.gdx.utils.Array cells -> cells
    com.badlogic.gdx.scenes.scene2d.ui.Cell cellDefaults -> cellDefaults
    com.badlogic.gdx.utils.Array columnDefaults -> columnDefaults
    com.badlogic.gdx.scenes.scene2d.ui.Cell rowDefaults -> rowDefaults
    boolean sizeInvalid -> sizeInvalid
    float[] columnMinWidth -> columnMinWidth
    float[] rowMinHeight -> rowMinHeight
    float[] columnPrefWidth -> columnPrefWidth
    float[] rowPrefHeight -> rowPrefHeight
    float tableMinWidth -> tableMinWidth
    float tableMinHeight -> tableMinHeight
    float tablePrefWidth -> tablePrefWidth
    float tablePrefHeight -> tablePrefHeight
    float[] columnWidth -> columnWidth
    float[] rowHeight -> rowHeight
    float[] expandWidth -> expandWidth
    float[] expandHeight -> expandHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value padTop -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Value padLeft -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value padBottom -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value padRight -> padRight
    int align -> align
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug debug -> debug
    com.badlogic.gdx.utils.Array debugRects -> debugRects
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    boolean clip -> clip
    com.badlogic.gdx.scenes.scene2d.ui.Skin skin -> skin
    boolean round -> round
    com.badlogic.gdx.scenes.scene2d.ui.Cell obtainCell() -> obtainCell
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float) -> drawBackground
    void setBackground(java.lang.String) -> setBackground
    void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setBackground
    void setBackground(com.badlogic.gdx.scenes.scene2d.utils.Drawable,boolean) -> setBackground
    com.badlogic.gdx.scenes.scene2d.ui.Table background(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> background
    com.badlogic.gdx.scenes.scene2d.ui.Table background(java.lang.String) -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getBackground() -> getBackground
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void setClip(boolean) -> setClip
    boolean getClip() -> getClip
    void invalidate() -> invalidate
    com.badlogic.gdx.scenes.scene2d.ui.Cell add(com.badlogic.gdx.scenes.scene2d.Actor) -> add
    void add(com.badlogic.gdx.scenes.scene2d.Actor[]) -> add
    com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String) -> add
    com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String,java.lang.String) -> add
    com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String,java.lang.String,com.badlogic.gdx.graphics.Color) -> add
    com.badlogic.gdx.scenes.scene2d.ui.Cell add(java.lang.String,java.lang.String,java.lang.String) -> add
    com.badlogic.gdx.scenes.scene2d.ui.Cell add() -> add
    com.badlogic.gdx.scenes.scene2d.ui.Cell stack(com.badlogic.gdx.scenes.scene2d.Actor[]) -> stack
    boolean removeActor(com.badlogic.gdx.scenes.scene2d.Actor) -> removeActor
    void clearChildren() -> clearChildren
    void reset() -> reset
    com.badlogic.gdx.scenes.scene2d.ui.Cell row() -> row
    void endRow() -> endRow
    com.badlogic.gdx.scenes.scene2d.ui.Cell columnDefaults(int) -> columnDefaults
    com.badlogic.gdx.scenes.scene2d.ui.Cell getCell(com.badlogic.gdx.scenes.scene2d.Actor) -> getCell
    com.badlogic.gdx.utils.Array getCells() -> getCells
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    com.badlogic.gdx.scenes.scene2d.ui.Cell defaults() -> defaults
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value,com.badlogic.gdx.scenes.scene2d.ui.Value) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table padTop(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Table padRight(com.badlogic.gdx.scenes.scene2d.ui.Value) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table pad(float,float,float,float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.Table padTop(float) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.Table padLeft(float) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.Table padBottom(float) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.Table padRight(float) -> padRight
    com.badlogic.gdx.scenes.scene2d.ui.Table align(int) -> align
    com.badlogic.gdx.scenes.scene2d.ui.Table center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.Table top() -> top
    com.badlogic.gdx.scenes.scene2d.ui.Table left() -> left
    com.badlogic.gdx.scenes.scene2d.ui.Table bottom() -> bottom
    com.badlogic.gdx.scenes.scene2d.ui.Table right() -> right
    com.badlogic.gdx.scenes.scene2d.ui.Table debug() -> debug
    com.badlogic.gdx.scenes.scene2d.ui.Table debugTable() -> debugTable
    com.badlogic.gdx.scenes.scene2d.ui.Table debugCell() -> debugCell
    com.badlogic.gdx.scenes.scene2d.ui.Table debugActor() -> debugActor
    com.badlogic.gdx.scenes.scene2d.ui.Table debug(com.badlogic.gdx.scenes.scene2d.ui.Table$Debug) -> debug
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug getDebug() -> getDebug
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadTopValue() -> getPadTopValue
    float getPadTop() -> getPadTop
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadLeftValue() -> getPadLeftValue
    float getPadLeft() -> getPadLeft
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadBottomValue() -> getPadBottomValue
    float getPadBottom() -> getPadBottom
    com.badlogic.gdx.scenes.scene2d.ui.Value getPadRightValue() -> getPadRightValue
    float getPadRight() -> getPadRight
    float getPadX() -> getPadX
    float getPadY() -> getPadY
    int getAlign() -> getAlign
    int getRow(float) -> getRow
    void setSkin(com.badlogic.gdx.scenes.scene2d.ui.Skin) -> setSkin
    void setRound(boolean) -> setRound
    float[] ensureSize(float[],int) -> ensureSize
    void layout() -> layout
    void computeSize() -> computeSize
    void layout(float,float,float,float) -> layout
    void drawDebug(com.badlogic.gdx.scenes.scene2d.Stage) -> drawDebug
com.badlogic.gdx.scenes.scene2d.ui.Table$1 -> com.badlogic.gdx.scenes.scene2d.ui.Table$1:
    com.badlogic.gdx.scenes.scene2d.ui.Cell newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.scenes.scene2d.ui.Table$Debug -> com.badlogic.gdx.scenes.scene2d.ui.Table$Debug:
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug none -> none
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug all -> all
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug table -> table
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug cell -> cell
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug actor -> actor
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug[] $VALUES -> $VALUES
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug[] values() -> values
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.ui.Table$DebugRect -> com.badlogic.gdx.scenes.scene2d.ui.Table$DebugRect:
    com.badlogic.gdx.scenes.scene2d.ui.Table$Debug type -> type
com.badlogic.gdx.scenes.scene2d.ui.Table$TableDebug -> com.badlogic.gdx.scenes.scene2d.ui.Table$TableDebug:
    boolean draw -> draw
    com.badlogic.gdx.Application app -> app
    com.badlogic.gdx.graphics.glutils.ImmediateModeRenderer debugRenderer -> debugRenderer
    void addRectangle(com.badlogic.gdx.scenes.scene2d.ui.Table,com.badlogic.gdx.scenes.scene2d.ui.Table$Debug,float,float,float,float) -> addRectangle
    void draw(com.badlogic.gdx.scenes.scene2d.Stage) -> draw
    void draw(com.badlogic.gdx.utils.Array) -> draw
    void draw(com.badlogic.gdx.scenes.scene2d.ui.Table) -> draw
com.badlogic.gdx.scenes.scene2d.ui.TextArea -> com.badlogic.gdx.scenes.scene2d.ui.TextArea:
    com.badlogic.gdx.utils.IntArray linesBreak -> linesBreak
    java.lang.String lastText -> lastText
    int cursorLine -> cursorLine
    int firstLineShowing -> firstLineShowing
    int linesShowing -> linesShowing
    float moveOffset -> moveOffset
    float prefRows -> prefRows
    void initialize() -> initialize
    int letterUnderCursor(float) -> letterUnderCursor
    void setPrefRows(float) -> setPrefRows
    float getPrefHeight() -> getPrefHeight
    int getLines() -> getLines
    boolean newLineAtEnd() -> newLineAtEnd
    void moveCursorLine(int) -> moveCursorLine
    void updateCurrentLine() -> updateCurrentLine
    void showCursor() -> showCursor
    int calculateCurrentLineIndex(int) -> calculateCurrentLineIndex
    void sizeChanged() -> sizeChanged
    float getTextY(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> getTextY
    void drawSelection(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawSelection
    void drawText(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawText
    void drawCursor(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawCursor
    void calculateOffsets() -> calculateOffsets
    com.badlogic.gdx.scenes.scene2d.InputListener createInputListener() -> createInputListener
    void setSelection(int,int) -> setSelection
    void moveCursor(boolean,boolean) -> moveCursor
    boolean continueCursor(int,int) -> continueCursor
    int getCursorLine() -> getCursorLine
    int getFirstLineShowing() -> getFirstLineShowing
    int getLinesShowing() -> getLinesShowing
com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener -> com.badlogic.gdx.scenes.scene2d.ui.TextArea$TextAreaListener:
    com.badlogic.gdx.scenes.scene2d.ui.TextArea this$0 -> this$0
    void setCursorPosition(float,float) -> setCursorPosition
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
    void goHome(boolean) -> goHome
    void goEnd(boolean) -> goEnd
com.badlogic.gdx.scenes.scene2d.ui.TextButton -> com.badlogic.gdx.scenes.scene2d.ui.TextButton:
    com.badlogic.gdx.scenes.scene2d.ui.Label label -> label
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle style -> style
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle getStyle() -> getStyle
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Label getLabel() -> getLabel
    com.badlogic.gdx.scenes.scene2d.ui.Cell getLabelCell() -> getLabelCell
    void setText(java.lang.String) -> setText
    java.lang.CharSequence getText() -> getText
    com.badlogic.gdx.scenes.scene2d.ui.Button$ButtonStyle getStyle() -> getStyle
com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle -> com.badlogic.gdx.scenes.scene2d.ui.TextButton$TextButtonStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color downFontColor -> downFontColor
    com.badlogic.gdx.graphics.Color overFontColor -> overFontColor
    com.badlogic.gdx.graphics.Color checkedFontColor -> checkedFontColor
    com.badlogic.gdx.graphics.Color checkedOverFontColor -> checkedOverFontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
com.badlogic.gdx.scenes.scene2d.ui.TextField -> com.badlogic.gdx.scenes.scene2d.ui.TextField:
    char BACKSPACE -> BACKSPACE
    char ENTER_DESKTOP -> ENTER_DESKTOP
    char ENTER_ANDROID -> ENTER_ANDROID
    char TAB -> TAB
    char DELETE -> DELETE
    char BULLET -> BULLET
    com.badlogic.gdx.math.Vector2 tmp1 -> tmp1
    com.badlogic.gdx.math.Vector2 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector2 tmp3 -> tmp3
    java.lang.String text -> text
    int cursor -> cursor
    int selectionStart -> selectionStart
    boolean hasSelection -> hasSelection
    boolean writeEnters -> writeEnters
    com.badlogic.gdx.utils.FloatArray glyphAdvances -> glyphAdvances
    com.badlogic.gdx.utils.FloatArray glyphPositions -> glyphPositions
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle style -> style
    java.lang.String messageText -> messageText
    java.lang.CharSequence displayText -> displayText
    com.badlogic.gdx.utils.Clipboard clipboard -> clipboard
    com.badlogic.gdx.scenes.scene2d.InputListener inputListener -> inputListener
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener listener -> listener
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter filter -> filter
    com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard keyboard -> keyboard
    boolean focusTraversal -> focusTraversal
    boolean onlyFontChars -> onlyFontChars
    boolean disabled -> disabled
    boolean rightAligned -> rightAligned
    float selectionX -> selectionX
    float selectionWidth -> selectionWidth
    boolean passwordMode -> passwordMode
    java.lang.StringBuilder passwordBuffer -> passwordBuffer
    char passwordCharacter -> passwordCharacter
    float textHeight -> textHeight
    float textOffset -> textOffset
    float renderOffset -> renderOffset
    int visibleTextStart -> visibleTextStart
    int visibleTextEnd -> visibleTextEnd
    int maxLength -> maxLength
    float blinkTime -> blinkTime
    boolean cursorOn -> cursorOn
    long lastBlink -> lastBlink
    com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask keyRepeatTask -> keyRepeatTask
    float keyRepeatInitialTime -> keyRepeatInitialTime
    float keyRepeatTime -> keyRepeatTime
    void initialize() -> initialize
    com.badlogic.gdx.scenes.scene2d.InputListener createInputListener() -> createInputListener
    int letterUnderCursor(float) -> letterUnderCursor
    boolean isWordCharacter(char) -> isWordCharacter
    int[] wordUnderCursor(int) -> wordUnderCursor
    int[] wordUnderCursor(float) -> wordUnderCursor
    boolean withinMaxLength(int) -> withinMaxLength
    void setMaxLength(int) -> setMaxLength
    int getMaxLength() -> getMaxLength
    void setOnlyFontChars(boolean) -> setOnlyFontChars
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle getStyle() -> getStyle
    void calculateOffsets() -> calculateOffsets
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getTextY(com.badlogic.gdx.graphics.g2d.BitmapFont,com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> getTextY
    void drawSelection(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawSelection
    void drawText(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawText
    void drawCursor(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.graphics.g2d.BitmapFont,float,float) -> drawCursor
    void updateDisplayText() -> updateDisplayText
    void blink() -> blink
    void copy() -> copy
    void cut() -> cut
    void paste() -> paste
    void paste(java.lang.String,boolean) -> paste
    java.lang.String insert(int,java.lang.CharSequence,java.lang.String) -> insert
    int delete() -> delete
    int delete(boolean) -> delete
    int delete(int,int,boolean) -> delete
    void next(boolean) -> next
    com.badlogic.gdx.scenes.scene2d.ui.TextField findNextTextField(com.badlogic.gdx.utils.Array,com.badlogic.gdx.scenes.scene2d.ui.TextField,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean) -> findNextTextField
    com.badlogic.gdx.scenes.scene2d.InputListener getDefaultInputListener() -> getDefaultInputListener
    void setTextFieldListener(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener) -> setTextFieldListener
    void setTextFieldFilter(com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter) -> setTextFieldFilter
    com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter getTextFieldFilter() -> getTextFieldFilter
    void setFocusTraversal(boolean) -> setFocusTraversal
    java.lang.String getMessageText() -> getMessageText
    void setMessageText(java.lang.String) -> setMessageText
    void setText(java.lang.String) -> setText
    java.lang.String getText() -> getText
    int getSelectionStart() -> getSelectionStart
    java.lang.String getSelection() -> getSelection
    void setSelection(int,int) -> setSelection
    void selectAll() -> selectAll
    void clearSelection() -> clearSelection
    void setCursorPosition(int) -> setCursorPosition
    int getCursorPosition() -> getCursorPosition
    com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard getOnscreenKeyboard() -> getOnscreenKeyboard
    void setOnscreenKeyboard(com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard) -> setOnscreenKeyboard
    void setClipboard(com.badlogic.gdx.utils.Clipboard) -> setClipboard
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setRightAligned(boolean) -> setRightAligned
    void setPasswordMode(boolean) -> setPasswordMode
    boolean isPasswordMode() -> isPasswordMode
    void setPasswordCharacter(char) -> setPasswordCharacter
    void setBlinkTime(float) -> setBlinkTime
    void setDisabled(boolean) -> setDisabled
    boolean isDisabled() -> isDisabled
    void moveCursor(boolean,boolean) -> moveCursor
    boolean continueCursor(int,int) -> continueCursor
com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard -> com.badlogic.gdx.scenes.scene2d.ui.TextField$DefaultOnscreenKeyboard:
    void show(boolean) -> show
com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask -> com.badlogic.gdx.scenes.scene2d.ui.TextField$KeyRepeatTask:
    int keycode -> keycode
    com.badlogic.gdx.scenes.scene2d.ui.TextField this$0 -> this$0
    void run() -> run
com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard -> com.badlogic.gdx.scenes.scene2d.ui.TextField$OnscreenKeyboard:
    void show(boolean) -> show
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldClickListener:
    com.badlogic.gdx.scenes.scene2d.ui.TextField this$0 -> this$0
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void setCursorPosition(float,float) -> setCursorPosition
    void goHome(boolean) -> goHome
    void goEnd(boolean) -> goEnd
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    void scheduleKeyRepeatTask(int) -> scheduleKeyRepeatTask
    boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter:
    boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> acceptChar
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldFilter$DigitsOnlyFilter:
    boolean acceptChar(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> acceptChar
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldListener:
    void keyTyped(com.badlogic.gdx.scenes.scene2d.ui.TextField,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle -> com.badlogic.gdx.scenes.scene2d.ui.TextField$TextFieldStyle:
    com.badlogic.gdx.graphics.g2d.BitmapFont font -> font
    com.badlogic.gdx.graphics.Color fontColor -> fontColor
    com.badlogic.gdx.graphics.Color focusedFontColor -> focusedFontColor
    com.badlogic.gdx.graphics.Color disabledFontColor -> disabledFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable focusedBackground -> focusedBackground
    com.badlogic.gdx.scenes.scene2d.utils.Drawable disabledBackground -> disabledBackground
    com.badlogic.gdx.scenes.scene2d.utils.Drawable cursor -> cursor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.graphics.g2d.BitmapFont messageFont -> messageFont
    com.badlogic.gdx.graphics.Color messageFontColor -> messageFontColor
com.badlogic.gdx.scenes.scene2d.ui.Touchpad -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad:
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle style -> style
    boolean touched -> touched
    boolean resetOnTouchUp -> resetOnTouchUp
    float deadzoneRadius -> deadzoneRadius
    com.badlogic.gdx.math.Circle knobBounds -> knobBounds
    com.badlogic.gdx.math.Circle touchBounds -> touchBounds
    com.badlogic.gdx.math.Circle deadzoneBounds -> deadzoneBounds
    com.badlogic.gdx.math.Vector2 knobPosition -> knobPosition
    com.badlogic.gdx.math.Vector2 knobPercent -> knobPercent
    void calculatePositionAndValue(float,float,boolean) -> calculatePositionAndValue
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle getStyle() -> getStyle
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    boolean isTouched() -> isTouched
    boolean getResetOnTouchUp() -> getResetOnTouchUp
    void setResetOnTouchUp(boolean) -> setResetOnTouchUp
    void setDeadzone(float) -> setDeadzone
    float getKnobX() -> getKnobX
    float getKnobY() -> getKnobY
    float getKnobPercentX() -> getKnobPercentX
    float getKnobPercentY() -> getKnobPercentY
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1 -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad$1:
    com.badlogic.gdx.scenes.scene2d.ui.Touchpad this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle -> com.badlogic.gdx.scenes.scene2d.ui.Touchpad$TouchpadStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.scenes.scene2d.utils.Drawable knob -> knob
com.badlogic.gdx.scenes.scene2d.ui.Tree -> com.badlogic.gdx.scenes.scene2d.ui.Tree:
    com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle style -> style
    com.badlogic.gdx.utils.Array rootNodes -> rootNodes
    com.badlogic.gdx.scenes.scene2d.utils.Selection selection -> selection
    float ySpacing -> ySpacing
    float iconSpacingLeft -> iconSpacingLeft
    float iconSpacingRight -> iconSpacingRight
    float padding -> padding
    float indentSpacing -> indentSpacing
    float leftColumnWidth -> leftColumnWidth
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node foundNode -> foundNode
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node overNode -> overNode
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener clickListener -> clickListener
    void initialize() -> initialize
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle) -> setStyle
    void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> add
    void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> insert
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> remove
    void clearChildren() -> clearChildren
    com.badlogic.gdx.utils.Array getNodes() -> getNodes
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void computeSize(com.badlogic.gdx.utils.Array,float) -> computeSize
    void layout() -> layout
    float layout(com.badlogic.gdx.utils.Array,float,float) -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,com.badlogic.gdx.utils.Array,float) -> draw
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getNodeAt(float) -> getNodeAt
    float getNodeAt(com.badlogic.gdx.utils.Array,float,float) -> getNodeAt
    void selectNodes(com.badlogic.gdx.utils.Array,float,float) -> selectNodes
    com.badlogic.gdx.scenes.scene2d.utils.Selection getSelection() -> getSelection
    com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle getStyle() -> getStyle
    com.badlogic.gdx.utils.Array getRootNodes() -> getRootNodes
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getOverNode() -> getOverNode
    void setOverNode(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> setOverNode
    void setPadding(float) -> setPadding
    void setYSpacing(float) -> setYSpacing
    void setIconSpacing(float,float) -> setIconSpacing
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void findExpandedObjects(com.badlogic.gdx.utils.Array) -> findExpandedObjects
    void restoreExpandedObjects(com.badlogic.gdx.utils.Array) -> restoreExpandedObjects
    boolean findExpandedObjects(com.badlogic.gdx.utils.Array,com.badlogic.gdx.utils.Array) -> findExpandedObjects
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object) -> findNode
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(com.badlogic.gdx.utils.Array,java.lang.Object) -> findNode
    void collapseAll() -> collapseAll
    void collapseAll(com.badlogic.gdx.utils.Array) -> collapseAll
    void expandAll() -> expandAll
    void expandAll(com.badlogic.gdx.utils.Array) -> expandAll
    com.badlogic.gdx.scenes.scene2d.utils.ClickListener getClickListener() -> getClickListener
com.badlogic.gdx.scenes.scene2d.ui.Tree$1 -> com.badlogic.gdx.scenes.scene2d.ui.Tree$1:
    com.badlogic.gdx.scenes.scene2d.ui.Tree this$0 -> this$0
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
com.badlogic.gdx.scenes.scene2d.ui.Tree$Node -> com.badlogic.gdx.scenes.scene2d.ui.Tree$Node:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node parent -> parent
    com.badlogic.gdx.utils.Array children -> children
    boolean selectable -> selectable
    boolean expanded -> expanded
    com.badlogic.gdx.scenes.scene2d.utils.Drawable icon -> icon
    float height -> height
    java.lang.Object object -> object
    void setExpanded(boolean) -> setExpanded
    void addToTree(com.badlogic.gdx.scenes.scene2d.ui.Tree) -> addToTree
    void removeFromTree(com.badlogic.gdx.scenes.scene2d.ui.Tree) -> removeFromTree
    void add(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> add
    void addAll(com.badlogic.gdx.utils.Array) -> addAll
    void insert(int,com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> insert
    void remove() -> remove
    void remove(com.badlogic.gdx.scenes.scene2d.ui.Tree$Node) -> remove
    void removeAll() -> removeAll
    com.badlogic.gdx.scenes.scene2d.ui.Tree getTree() -> getTree
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
    boolean isExpanded() -> isExpanded
    com.badlogic.gdx.utils.Array getChildren() -> getChildren
    void updateChildren() -> updateChildren
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node getParent() -> getParent
    void setIcon(com.badlogic.gdx.scenes.scene2d.utils.Drawable) -> setIcon
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
    com.badlogic.gdx.scenes.scene2d.utils.Drawable getIcon() -> getIcon
    com.badlogic.gdx.scenes.scene2d.ui.Tree$Node findNode(java.lang.Object) -> findNode
    void collapseAll() -> collapseAll
    void expandAll() -> expandAll
    void expandTo() -> expandTo
    boolean isSelectable() -> isSelectable
    void setSelectable(boolean) -> setSelectable
    void findExpandedObjects(com.badlogic.gdx.utils.Array) -> findExpandedObjects
    void restoreExpandedObjects(com.badlogic.gdx.utils.Array) -> restoreExpandedObjects
com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle -> com.badlogic.gdx.scenes.scene2d.ui.Tree$TreeStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable plus -> plus
    com.badlogic.gdx.scenes.scene2d.utils.Drawable minus -> minus
    com.badlogic.gdx.scenes.scene2d.utils.Drawable over -> over
    com.badlogic.gdx.scenes.scene2d.utils.Drawable selection -> selection
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
com.badlogic.gdx.scenes.scene2d.ui.Value -> com.badlogic.gdx.scenes.scene2d.ui.Value:
    com.badlogic.gdx.scenes.scene2d.ui.Value$Fixed zero -> zero
    com.badlogic.gdx.scenes.scene2d.ui.Value minWidth -> minWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value minHeight -> minHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value prefWidth -> prefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value prefHeight -> prefHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value maxWidth -> maxWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value maxHeight -> maxHeight
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
    com.badlogic.gdx.scenes.scene2d.ui.Value percentWidth(float) -> percentWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value percentHeight(float) -> percentHeight
    com.badlogic.gdx.scenes.scene2d.ui.Value percentWidth(float,com.badlogic.gdx.scenes.scene2d.Actor) -> percentWidth
    com.badlogic.gdx.scenes.scene2d.ui.Value percentHeight(float,com.badlogic.gdx.scenes.scene2d.Actor) -> percentHeight
com.badlogic.gdx.scenes.scene2d.ui.Value$1 -> com.badlogic.gdx.scenes.scene2d.ui.Value$1:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$10 -> com.badlogic.gdx.scenes.scene2d.ui.Value$10:
    com.badlogic.gdx.scenes.scene2d.Actor val$actor -> val$actor
    float val$percent -> val$percent
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$2 -> com.badlogic.gdx.scenes.scene2d.ui.Value$2:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$3 -> com.badlogic.gdx.scenes.scene2d.ui.Value$3:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$4 -> com.badlogic.gdx.scenes.scene2d.ui.Value$4:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$5 -> com.badlogic.gdx.scenes.scene2d.ui.Value$5:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$6 -> com.badlogic.gdx.scenes.scene2d.ui.Value$6:
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$7 -> com.badlogic.gdx.scenes.scene2d.ui.Value$7:
    float val$percent -> val$percent
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$8 -> com.badlogic.gdx.scenes.scene2d.ui.Value$8:
    float val$percent -> val$percent
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$9 -> com.badlogic.gdx.scenes.scene2d.ui.Value$9:
    com.badlogic.gdx.scenes.scene2d.Actor val$actor -> val$actor
    float val$percent -> val$percent
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.Value$Fixed -> com.badlogic.gdx.scenes.scene2d.ui.Value$Fixed:
    float value -> value
    float get(com.badlogic.gdx.scenes.scene2d.Actor) -> get
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup -> com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup:
    float prefWidth -> prefWidth
    float prefHeight -> prefHeight
    boolean sizeInvalid -> sizeInvalid
    int align -> align
    boolean reverse -> reverse
    boolean round -> round
    float spacing -> spacing
    float padTop -> padTop
    float padLeft -> padLeft
    float padBottom -> padBottom
    float padRight -> padRight
    float fill -> fill
    void invalidate() -> invalidate
    void computeSize() -> computeSize
    void layout() -> layout
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    void setRound(boolean) -> setRound
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup reverse() -> reverse
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup reverse(boolean) -> reverse
    boolean getReverse() -> getReverse
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup space(float) -> space
    float getSpace() -> getSpace
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup pad(float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup pad(float,float,float,float) -> pad
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padTop(float) -> padTop
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padLeft(float) -> padLeft
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padBottom(float) -> padBottom
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup padRight(float) -> padRight
    float getPadTop() -> getPadTop
    float getPadLeft() -> getPadLeft
    float getPadBottom() -> getPadBottom
    float getPadRight() -> getPadRight
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup align(int) -> align
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup center() -> center
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup left() -> left
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup right() -> right
    int getAlign() -> getAlign
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup fill() -> fill
    com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup fill(float) -> fill
    float getFill() -> getFill
com.badlogic.gdx.scenes.scene2d.ui.Widget -> com.badlogic.gdx.scenes.scene2d.ui.Widget:
    boolean needsLayout -> needsLayout
    boolean fillParent -> fillParent
    boolean layoutEnabled -> layoutEnabled
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
    void setLayoutEnabled(boolean) -> setLayoutEnabled
    void validate() -> validate
    boolean needsLayout() -> needsLayout
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    void sizeChanged() -> sizeChanged
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void layout() -> layout
com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup -> com.badlogic.gdx.scenes.scene2d.ui.WidgetGroup:
    boolean needsLayout -> needsLayout
    boolean fillParent -> fillParent
    boolean layoutEnabled -> layoutEnabled
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
    void setLayoutEnabled(boolean) -> setLayoutEnabled
    void setLayoutEnabled(com.badlogic.gdx.scenes.scene2d.Group,boolean) -> setLayoutEnabled
    void validate() -> validate
    boolean needsLayout() -> needsLayout
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    void childrenChanged() -> childrenChanged
    void sizeChanged() -> sizeChanged
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    void layout() -> layout
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
com.badlogic.gdx.scenes.scene2d.ui.Window -> com.badlogic.gdx.scenes.scene2d.ui.Window:
    com.badlogic.gdx.math.Vector2 tmpPosition -> tmpPosition
    com.badlogic.gdx.math.Vector2 tmpSize -> tmpSize
    int MOVE -> MOVE
    com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle style -> style
    java.lang.String title -> title
    com.badlogic.gdx.graphics.g2d.BitmapFontCache titleCache -> titleCache
    boolean isMovable -> isMovable
    boolean isModal -> isModal
    boolean isResizable -> isResizable
    int resizeBorder -> resizeBorder
    boolean dragging -> dragging
    int titleAlignment -> titleAlignment
    boolean keepWithinStage -> keepWithinStage
    com.badlogic.gdx.scenes.scene2d.ui.Table buttonTable -> buttonTable
    void setStyle(com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle) -> setStyle
    com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle getStyle() -> getStyle
    void keepWithinStage() -> keepWithinStage
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float) -> draw
    void drawBackground(com.badlogic.gdx.graphics.g2d.Batch,float,float,float) -> drawBackground
    com.badlogic.gdx.scenes.scene2d.Actor hit(float,float,boolean) -> hit
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setTitleAlignment(int) -> setTitleAlignment
    boolean isMovable() -> isMovable
    void setMovable(boolean) -> setMovable
    boolean isModal() -> isModal
    void setModal(boolean) -> setModal
    void setKeepWithinStage(boolean) -> setKeepWithinStage
    boolean isResizable() -> isResizable
    void setResizable(boolean) -> setResizable
    void setResizeBorder(int) -> setResizeBorder
    boolean isDragging() -> isDragging
    float getTitleWidth() -> getTitleWidth
    float getPrefWidth() -> getPrefWidth
    com.badlogic.gdx.scenes.scene2d.ui.Table getButtonTable() -> getButtonTable
com.badlogic.gdx.scenes.scene2d.ui.Window$1 -> com.badlogic.gdx.scenes.scene2d.ui.Window$1:
    com.badlogic.gdx.scenes.scene2d.ui.Window this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
com.badlogic.gdx.scenes.scene2d.ui.Window$2 -> com.badlogic.gdx.scenes.scene2d.ui.Window$2:
    int edge -> edge
    float startX -> startX
    float startY -> startY
    float lastX -> lastX
    float lastY -> lastY
    com.badlogic.gdx.scenes.scene2d.ui.Window this$0 -> this$0
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    boolean mouseMoved(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> mouseMoved
    boolean scrolled(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> scrolled
    boolean keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyDown
    boolean keyUp(com.badlogic.gdx.scenes.scene2d.InputEvent,int) -> keyUp
    boolean keyTyped(com.badlogic.gdx.scenes.scene2d.InputEvent,char) -> keyTyped
com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle -> com.badlogic.gdx.scenes.scene2d.ui.Window$WindowStyle:
    com.badlogic.gdx.scenes.scene2d.utils.Drawable background -> background
    com.badlogic.gdx.graphics.g2d.BitmapFont titleFont -> titleFont
    com.badlogic.gdx.graphics.Color titleFontColor -> titleFontColor
    com.badlogic.gdx.scenes.scene2d.utils.Drawable stageBackground -> stageBackground
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener -> com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener:
    com.badlogic.gdx.math.Vector2 tmpCoords -> tmpCoords
    com.badlogic.gdx.input.GestureDetector detector -> detector
    com.badlogic.gdx.scenes.scene2d.InputEvent event -> event
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.Actor touchDownTarget -> touchDownTarget
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    void touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void tap(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> tap
    boolean longPress(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> longPress
    void fling(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> fling
    void pan(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,float,float) -> pan
    void zoom(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> zoom
    void pinch(com.badlogic.gdx.scenes.scene2d.InputEvent,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
    com.badlogic.gdx.input.GestureDetector getGestureDetector() -> getGestureDetector
    com.badlogic.gdx.scenes.scene2d.Actor getTouchDownTarget() -> getTouchDownTarget
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1 -> com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$1:
    com.badlogic.gdx.math.Vector2 initialPointer1 -> initialPointer1
    com.badlogic.gdx.math.Vector2 initialPointer2 -> initialPointer2
    com.badlogic.gdx.math.Vector2 pointer1 -> pointer1
    com.badlogic.gdx.math.Vector2 pointer2 -> pointer2
    com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener this$0 -> this$0
    boolean tap(float,float,int,int) -> tap
    boolean longPress(float,float) -> longPress
    boolean fling(float,float,int) -> fling
    boolean pan(float,float,float,float) -> pan
    boolean zoom(float,float) -> zoom
    boolean pinch(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> pinch
com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2 -> com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener$2:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type -> $SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type
com.badlogic.gdx.scenes.scene2d.utils.Align -> com.badlogic.gdx.scenes.scene2d.utils.Align:
    int center -> center
    int top -> top
    int bottom -> bottom
    int left -> left
    int right -> right
com.badlogic.gdx.scenes.scene2d.utils.ArraySelection -> com.badlogic.gdx.scenes.scene2d.utils.ArraySelection:
    com.badlogic.gdx.utils.Array items -> items
    boolean rangeSelect -> rangeSelect
    void choose(java.lang.Object) -> choose
    boolean getRangeSelect() -> getRangeSelect
    void setRangeSelect(boolean) -> setRangeSelect
com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable -> com.badlogic.gdx.scenes.scene2d.utils.BaseDrawable:
    float leftWidth -> leftWidth
    float rightWidth -> rightWidth
    float topHeight -> topHeight
    float bottomHeight -> bottomHeight
    float minWidth -> minWidth
    float minHeight -> minHeight
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    float getLeftWidth() -> getLeftWidth
    void setLeftWidth(float) -> setLeftWidth
    float getRightWidth() -> getRightWidth
    void setRightWidth(float) -> setRightWidth
    float getTopHeight() -> getTopHeight
    void setTopHeight(float) -> setTopHeight
    float getBottomHeight() -> getBottomHeight
    void setBottomHeight(float) -> setBottomHeight
    float getMinWidth() -> getMinWidth
    void setMinWidth(float) -> setMinWidth
    float getMinHeight() -> getMinHeight
    void setMinHeight(float) -> setMinHeight
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener -> com.badlogic.gdx.scenes.scene2d.utils.ChangeListener:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    void changed(com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent,com.badlogic.gdx.scenes.scene2d.Actor) -> changed
com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent -> com.badlogic.gdx.scenes.scene2d.utils.ChangeListener$ChangeEvent:
com.badlogic.gdx.scenes.scene2d.utils.ClickListener -> com.badlogic.gdx.scenes.scene2d.utils.ClickListener:
    float visualPressedDuration -> visualPressedDuration
    float tapSquareSize -> tapSquareSize
    float touchDownX -> touchDownX
    float touchDownY -> touchDownY
    int pressedPointer -> pressedPointer
    int pressedButton -> pressedButton
    int button -> button
    boolean pressed -> pressed
    boolean over -> over
    boolean cancelled -> cancelled
    float visualPressedTime -> visualPressedTime
    long tapCountInterval -> tapCountInterval
    int tapCount -> tapCount
    long lastTapTime -> lastTapTime
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void enter(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> enter
    void exit(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.Actor) -> exit
    void cancel() -> cancel
    void clicked(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float) -> clicked
    boolean isOver(com.badlogic.gdx.scenes.scene2d.Actor,float,float) -> isOver
    boolean inTapSquare(float,float) -> inTapSquare
    boolean inTapSquare() -> inTapSquare
    void invalidateTapSquare() -> invalidateTapSquare
    boolean isPressed() -> isPressed
    boolean isVisualPressed() -> isVisualPressed
    boolean isOver() -> isOver
    void setTapSquareSize(float) -> setTapSquareSize
    float getTapSquareSize() -> getTapSquareSize
    void setTapCountInterval(float) -> setTapCountInterval
    int getTapCount() -> getTapCount
    float getTouchDownX() -> getTouchDownX
    float getTouchDownY() -> getTouchDownY
    int getPressedButton() -> getPressedButton
    int getPressedPointer() -> getPressedPointer
    int getButton() -> getButton
    void setButton(int) -> setButton
com.badlogic.gdx.scenes.scene2d.utils.Cullable -> com.badlogic.gdx.scenes.scene2d.utils.Cullable:
    void setCullingArea(com.badlogic.gdx.math.Rectangle) -> setCullingArea
com.badlogic.gdx.scenes.scene2d.utils.Disableable -> com.badlogic.gdx.scenes.scene2d.utils.Disableable:
    void setDisabled(boolean) -> setDisabled
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop:
    com.badlogic.gdx.math.Vector2 tmpVector -> tmpVector
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload payload -> payload
    com.badlogic.gdx.scenes.scene2d.Actor dragActor -> dragActor
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target target -> target
    boolean isValidTarget -> isValidTarget
    com.badlogic.gdx.utils.Array targets -> targets
    com.badlogic.gdx.utils.ObjectMap sourceListeners -> sourceListeners
    float tapSquareSize -> tapSquareSize
    int button -> button
    float dragActorX -> dragActorX
    float dragActorY -> dragActorY
    float touchOffsetX -> touchOffsetX
    float touchOffsetY -> touchOffsetY
    long dragStartTime -> dragStartTime
    int dragTime -> dragTime
    int activePointer -> activePointer
    void addSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source) -> addSource
    void removeSource(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source) -> removeSource
    void addTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> addTarget
    void removeTarget(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> removeTarget
    void clear() -> clear
    void setTapSquareSize(float) -> setTapSquareSize
    void setButton(int) -> setButton
    void setDragActorPosition(float,float) -> setDragActorPosition
    void setTouchOffset(float,float) -> setTouchOffset
    boolean isDragging() -> isDragging
    com.badlogic.gdx.scenes.scene2d.Actor getDragActor() -> getDragActor
    void setDragTime(int) -> setDragTime
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1 -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$1:
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source val$source -> val$source
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop this$0 -> this$0
    void dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStart
    void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> drag
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStop
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload:
    com.badlogic.gdx.scenes.scene2d.Actor dragActor -> dragActor
    com.badlogic.gdx.scenes.scene2d.Actor validDragActor -> validDragActor
    com.badlogic.gdx.scenes.scene2d.Actor invalidDragActor -> invalidDragActor
    java.lang.Object object -> object
    void setDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setDragActor
    com.badlogic.gdx.scenes.scene2d.Actor getDragActor() -> getDragActor
    void setValidDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setValidDragActor
    com.badlogic.gdx.scenes.scene2d.Actor getValidDragActor() -> getValidDragActor
    void setInvalidDragActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setInvalidDragActor
    com.badlogic.gdx.scenes.scene2d.Actor getInvalidDragActor() -> getInvalidDragActor
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStart
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target) -> dragStop
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target -> com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Target:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    boolean drag(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload,float,float,int) -> drag
    void reset(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload) -> reset
    void drop(com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Source,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop$Payload,float,float,int) -> drop
    com.badlogic.gdx.scenes.scene2d.Actor getActor() -> getActor
com.badlogic.gdx.scenes.scene2d.utils.DragListener -> com.badlogic.gdx.scenes.scene2d.utils.DragListener:
    float tapSquareSize -> tapSquareSize
    float touchDownX -> touchDownX
    float touchDownY -> touchDownY
    int pressedPointer -> pressedPointer
    int button -> button
    boolean dragging -> dragging
    float deltaX -> deltaX
    float deltaY -> deltaY
    boolean touchDown(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchDown
    void touchDragged(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> touchDragged
    void touchUp(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,int) -> touchUp
    void dragStart(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStart
    void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> drag
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStop
    void cancel() -> cancel
    boolean isDragging() -> isDragging
    void setTapSquareSize(float) -> setTapSquareSize
    float getTapSquareSize() -> getTapSquareSize
    float getTouchDownX() -> getTouchDownX
    float getTouchDownY() -> getTouchDownY
    float getDeltaX() -> getDeltaX
    float getDeltaY() -> getDeltaY
    int getButton() -> getButton
    void setButton(int) -> setButton
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener -> com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane scroll -> scroll
    com.badlogic.gdx.utils.Timer$Task scrollUp -> scrollUp
    com.badlogic.gdx.utils.Timer$Task scrollDown -> scrollDown
    com.badlogic.gdx.math.Interpolation interpolation -> interpolation
    float minSpeed -> minSpeed
    float maxSpeed -> maxSpeed
    float tickSecs -> tickSecs
    long startTime -> startTime
    long rampTime -> rampTime
    void setup(float,float,float,float) -> setup
    float getScrollPixels() -> getScrollPixels
    void drag(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> drag
    void dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int) -> dragStop
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1 -> com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$1:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane val$scroll -> val$scroll
    com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener this$0 -> this$0
    void run() -> run
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2 -> com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener$2:
    com.badlogic.gdx.scenes.scene2d.ui.ScrollPane val$scroll -> val$scroll
    com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener this$0 -> this$0
    void run() -> run
com.badlogic.gdx.scenes.scene2d.utils.Drawable -> com.badlogic.gdx.scenes.scene2d.utils.Drawable:
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    float getLeftWidth() -> getLeftWidth
    void setLeftWidth(float) -> setLeftWidth
    float getRightWidth() -> getRightWidth
    void setRightWidth(float) -> setRightWidth
    float getTopHeight() -> getTopHeight
    void setTopHeight(float) -> setTopHeight
    float getBottomHeight() -> getBottomHeight
    void setBottomHeight(float) -> setBottomHeight
    float getMinWidth() -> getMinWidth
    void setMinWidth(float) -> setMinWidth
    float getMinHeight() -> getMinHeight
    void setMinHeight(float) -> setMinHeight
com.badlogic.gdx.scenes.scene2d.utils.FocusListener -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener:
    boolean handle(com.badlogic.gdx.scenes.scene2d.Event) -> handle
    void keyboardFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> keyboardFocusChanged
    void scrollFocusChanged(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent,com.badlogic.gdx.scenes.scene2d.Actor,boolean) -> scrollFocusChanged
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1 -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener$1:
    int[] $SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type -> $SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent:
    boolean focused -> focused
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type type -> type
    com.badlogic.gdx.scenes.scene2d.Actor relatedActor -> relatedActor
    void reset() -> reset
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type getType() -> getType
    void setType(com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type) -> setType
    com.badlogic.gdx.scenes.scene2d.Actor getRelatedActor() -> getRelatedActor
    void setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setRelatedActor
com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type -> com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type:
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type keyboard -> keyboard
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type scroll -> scroll
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] $VALUES -> $VALUES
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type[] values() -> values
    com.badlogic.gdx.scenes.scene2d.utils.FocusListener$FocusEvent$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.scenes.scene2d.utils.Layout -> com.badlogic.gdx.scenes.scene2d.utils.Layout:
    void layout() -> layout
    void invalidate() -> invalidate
    void invalidateHierarchy() -> invalidateHierarchy
    void validate() -> validate
    void pack() -> pack
    void setFillParent(boolean) -> setFillParent
    void setLayoutEnabled(boolean) -> setLayoutEnabled
    float getMinWidth() -> getMinWidth
    float getMinHeight() -> getMinHeight
    float getPrefWidth() -> getPrefWidth
    float getPrefHeight() -> getPrefHeight
    float getMaxWidth() -> getMaxWidth
    float getMaxHeight() -> getMaxHeight
com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable -> com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable:
    com.badlogic.gdx.graphics.g2d.NinePatch patch -> patch
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    void setPatch(com.badlogic.gdx.graphics.g2d.NinePatch) -> setPatch
    com.badlogic.gdx.graphics.g2d.NinePatch getPatch() -> getPatch
com.badlogic.gdx.scenes.scene2d.utils.ScissorStack -> com.badlogic.gdx.scenes.scene2d.utils.ScissorStack:
    com.badlogic.gdx.utils.Array scissors -> scissors
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Rectangle viewport -> viewport
    boolean pushScissors(com.badlogic.gdx.math.Rectangle) -> pushScissors
    com.badlogic.gdx.math.Rectangle popScissors() -> popScissors
    void fix(com.badlogic.gdx.math.Rectangle) -> fix
    void calculateScissors(com.badlogic.gdx.graphics.Camera,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> calculateScissors
    void calculateScissors(com.badlogic.gdx.graphics.Camera,float,float,float,float,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> calculateScissors
    com.badlogic.gdx.math.Rectangle getViewport() -> getViewport
com.badlogic.gdx.scenes.scene2d.utils.Selection -> com.badlogic.gdx.scenes.scene2d.utils.Selection:
    com.badlogic.gdx.scenes.scene2d.Actor actor -> actor
    com.badlogic.gdx.utils.ObjectSet selected -> selected
    com.badlogic.gdx.utils.ObjectSet old -> old
    boolean isDisabled -> isDisabled
    boolean toggle -> toggle
    boolean multiple -> multiple
    boolean required -> required
    boolean programmaticChangeEvents -> programmaticChangeEvents
    java.lang.Object lastSelected -> lastSelected
    void setActor(com.badlogic.gdx.scenes.scene2d.Actor) -> setActor
    void choose(java.lang.Object) -> choose
    boolean hasItems() -> hasItems
    boolean isEmpty() -> isEmpty
    int size() -> size
    com.badlogic.gdx.utils.ObjectSet items() -> items
    java.lang.Object first() -> first
    void snapshot() -> snapshot
    void revert() -> revert
    void cleanup() -> cleanup
    void set(java.lang.Object) -> set
    void setAll(com.badlogic.gdx.utils.Array) -> setAll
    void add(java.lang.Object) -> add
    void addAll(com.badlogic.gdx.utils.Array) -> addAll
    void remove(java.lang.Object) -> remove
    void removeAll(com.badlogic.gdx.utils.Array) -> removeAll
    void clear() -> clear
    boolean fireChangeEvent() -> fireChangeEvent
    boolean contains(java.lang.Object) -> contains
    java.lang.Object getLastSelected() -> getLastSelected
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
    void setDisabled(boolean) -> setDisabled
    boolean isDisabled() -> isDisabled
    boolean getToggle() -> getToggle
    void setToggle(boolean) -> setToggle
    boolean getMultiple() -> getMultiple
    void setMultiple(boolean) -> setMultiple
    boolean getRequired() -> getRequired
    void setRequired(boolean) -> setRequired
    void setProgrammaticChangeEvents(boolean) -> setProgrammaticChangeEvents
    java.lang.String toString() -> toString
com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable -> com.badlogic.gdx.scenes.scene2d.utils.SpriteDrawable:
    com.badlogic.gdx.graphics.g2d.Sprite sprite -> sprite
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float,float,float,float,float) -> draw
    void setSprite(com.badlogic.gdx.graphics.g2d.Sprite) -> setSprite
    com.badlogic.gdx.graphics.g2d.Sprite getSprite() -> getSprite
com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable -> com.badlogic.gdx.scenes.scene2d.utils.TextureRegionDrawable:
    com.badlogic.gdx.graphics.g2d.TextureRegion region -> region
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float,float,float,float,float) -> draw
    void setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion) -> setRegion
    com.badlogic.gdx.graphics.g2d.TextureRegion getRegion() -> getRegion
com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable -> com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable:
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float) -> draw
com.badlogic.gdx.scenes.scene2d.utils.TransformDrawable -> com.badlogic.gdx.scenes.scene2d.utils.TransformDrawable:
    void draw(com.badlogic.gdx.graphics.g2d.Batch,float,float,float,float,float,float,float,float,float) -> draw
com.badlogic.gdx.scenes.scene2d.utils.UIUtils -> com.badlogic.gdx.scenes.scene2d.utils.UIUtils:
    boolean isMac -> isMac
    boolean isWindows -> isWindows
    boolean isLinux -> isLinux
    boolean left() -> left
    boolean left(int) -> left
    boolean right() -> right
    boolean right(int) -> right
    boolean middle() -> middle
    boolean middle(int) -> middle
    boolean shift() -> shift
    boolean shift(int) -> shift
    boolean ctrl() -> ctrl
    boolean ctrl(int) -> ctrl
    boolean alt() -> alt
    boolean alt(int) -> alt
com.badlogic.gdx.utils.Array -> com.badlogic.gdx.utils.Array:
    java.lang.Object[] items -> items
    int size -> size
    boolean ordered -> ordered
    com.badlogic.gdx.utils.Array$ArrayIterable iterable -> iterable
    com.badlogic.gdx.utils.Predicate$PredicateIterable predicateIterable -> predicateIterable
    void add(java.lang.Object) -> add
    void addAll(com.badlogic.gdx.utils.Array) -> addAll
    void addAll(com.badlogic.gdx.utils.Array,int,int) -> addAll
    void addAll(java.lang.Object[]) -> addAll
    void addAll(java.lang.Object[],int,int) -> addAll
    java.lang.Object get(int) -> get
    void set(int,java.lang.Object) -> set
    void insert(int,java.lang.Object) -> insert
    void swap(int,int) -> swap
    boolean contains(java.lang.Object,boolean) -> contains
    int indexOf(java.lang.Object,boolean) -> indexOf
    int lastIndexOf(java.lang.Object,boolean) -> lastIndexOf
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    java.lang.Object removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.Array,boolean) -> removeAll
    java.lang.Object pop() -> pop
    java.lang.Object peek() -> peek
    java.lang.Object first() -> first
    void clear() -> clear
    java.lang.Object[] shrink() -> shrink
    java.lang.Object[] ensureCapacity(int) -> ensureCapacity
    java.lang.Object[] resize(int) -> resize
    void sort() -> sort
    void sort(java.util.Comparator) -> sort
    java.lang.Object selectRanked(java.util.Comparator,int) -> selectRanked
    int selectRankedIndex(java.util.Comparator,int) -> selectRankedIndex
    void reverse() -> reverse
    void shuffle() -> shuffle
    java.util.Iterator iterator() -> iterator
    java.lang.Iterable select(com.badlogic.gdx.utils.Predicate) -> select
    void truncate(int) -> truncate
    java.lang.Object random() -> random
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Class) -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.Array of(java.lang.Class) -> of
    com.badlogic.gdx.utils.Array of(boolean,int,java.lang.Class) -> of
    com.badlogic.gdx.utils.Array with(java.lang.Object[]) -> with
com.badlogic.gdx.utils.Array$ArrayIterable -> com.badlogic.gdx.utils.Array$ArrayIterable:
    com.badlogic.gdx.utils.Array array -> array
    boolean allowRemove -> allowRemove
    com.badlogic.gdx.utils.Array$ArrayIterator iterator1 -> iterator1
    com.badlogic.gdx.utils.Array$ArrayIterator iterator2 -> iterator2
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.Array$ArrayIterator -> com.badlogic.gdx.utils.Array$ArrayIterator:
    com.badlogic.gdx.utils.Array array -> array
    boolean allowRemove -> allowRemove
    int index -> index
    boolean valid -> valid
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ArrayMap -> com.badlogic.gdx.utils.ArrayMap:
    java.lang.Object[] keys -> keys
    java.lang.Object[] values -> values
    int size -> size
    boolean ordered -> ordered
    com.badlogic.gdx.utils.ArrayMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.ArrayMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.ArrayMap$Values valuesIter1 -> valuesIter1
    com.badlogic.gdx.utils.ArrayMap$Values valuesIter2 -> valuesIter2
    com.badlogic.gdx.utils.ArrayMap$Keys keysIter1 -> keysIter1
    com.badlogic.gdx.utils.ArrayMap$Keys keysIter2 -> keysIter2
    void put(java.lang.Object,java.lang.Object) -> put
    void put(java.lang.Object,java.lang.Object,int) -> put
    void putAll(com.badlogic.gdx.utils.ArrayMap) -> putAll
    void putAll(com.badlogic.gdx.utils.ArrayMap,int,int) -> putAll
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getKey(java.lang.Object,boolean) -> getKey
    java.lang.Object getKeyAt(int) -> getKeyAt
    java.lang.Object getValueAt(int) -> getValueAt
    java.lang.Object firstKey() -> firstKey
    java.lang.Object firstValue() -> firstValue
    void setKey(int,java.lang.Object) -> setKey
    void setValue(int,java.lang.Object) -> setValue
    void insert(int,java.lang.Object,java.lang.Object) -> insert
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    int indexOfKey(java.lang.Object) -> indexOfKey
    int indexOfValue(java.lang.Object,boolean) -> indexOfValue
    java.lang.Object removeKey(java.lang.Object) -> removeKey
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    void removeIndex(int) -> removeIndex
    java.lang.Object peekKey() -> peekKey
    java.lang.Object peekValue() -> peekValue
    void clear(int) -> clear
    void clear() -> clear
    void shrink() -> shrink
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.ArrayMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ArrayMap$Values values() -> values
    com.badlogic.gdx.utils.ArrayMap$Keys keys() -> keys
com.badlogic.gdx.utils.ArrayMap$Entries -> com.badlogic.gdx.utils.ArrayMap$Entries:
    com.badlogic.gdx.utils.ArrayMap map -> map
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> entry
    int index -> index
    boolean valid -> valid
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> next
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ArrayMap$Keys -> com.badlogic.gdx.utils.ArrayMap$Keys:
    com.badlogic.gdx.utils.ArrayMap map -> map
    int index -> index
    boolean valid -> valid
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
    com.badlogic.gdx.utils.Array toArray() -> toArray
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
com.badlogic.gdx.utils.ArrayMap$Values -> com.badlogic.gdx.utils.ArrayMap$Values:
    com.badlogic.gdx.utils.ArrayMap map -> map
    int index -> index
    boolean valid -> valid
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
    com.badlogic.gdx.utils.Array toArray() -> toArray
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
com.badlogic.gdx.utils.AtomicQueue -> com.badlogic.gdx.utils.AtomicQueue:
    java.util.concurrent.atomic.AtomicInteger writeIndex -> writeIndex
    java.util.concurrent.atomic.AtomicInteger readIndex -> readIndex
    java.util.concurrent.atomic.AtomicReferenceArray queue -> queue
    int next(int) -> next
    boolean put(java.lang.Object) -> put
    java.lang.Object poll() -> poll
com.badlogic.gdx.utils.Base64Coder -> com.badlogic.gdx.utils.Base64Coder:
    java.lang.String systemLineSeparator -> systemLineSeparator
    char[] map1 -> map1
    byte[] map2 -> map2
    java.lang.String encodeString(java.lang.String) -> encodeString
    java.lang.String encodeLines(byte[]) -> encodeLines
    java.lang.String encodeLines(byte[],int,int,int,java.lang.String) -> encodeLines
    char[] encode(byte[]) -> encode
    char[] encode(byte[],int) -> encode
    char[] encode(byte[],int,int) -> encode
    java.lang.String decodeString(java.lang.String) -> decodeString
    byte[] decodeLines(java.lang.String) -> decodeLines
    byte[] decode(java.lang.String) -> decode
    byte[] decode(char[]) -> decode
    byte[] decode(char[],int,int) -> decode
com.badlogic.gdx.utils.BaseJsonReader -> com.badlogic.gdx.utils.BaseJsonReader:
    com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream) -> parse
    com.badlogic.gdx.utils.JsonValue parse(com.badlogic.gdx.files.FileHandle) -> parse
com.badlogic.gdx.utils.BinaryHeap -> com.badlogic.gdx.utils.BinaryHeap:
    int size -> size
    com.badlogic.gdx.utils.BinaryHeap$Node[] nodes -> nodes
    boolean isMaxHeap -> isMaxHeap
    com.badlogic.gdx.utils.BinaryHeap$Node add(com.badlogic.gdx.utils.BinaryHeap$Node) -> add
    com.badlogic.gdx.utils.BinaryHeap$Node add(com.badlogic.gdx.utils.BinaryHeap$Node,float) -> add
    com.badlogic.gdx.utils.BinaryHeap$Node peek() -> peek
    com.badlogic.gdx.utils.BinaryHeap$Node pop() -> pop
    com.badlogic.gdx.utils.BinaryHeap$Node remove(com.badlogic.gdx.utils.BinaryHeap$Node) -> remove
    com.badlogic.gdx.utils.BinaryHeap$Node remove(int) -> remove
    void clear() -> clear
    void setValue(com.badlogic.gdx.utils.BinaryHeap$Node,float) -> setValue
    void up(int) -> up
    void down(int) -> down
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.BinaryHeap$Node -> com.badlogic.gdx.utils.BinaryHeap$Node:
    float value -> value
    int index -> index
    float getValue() -> getValue
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.Bits -> com.badlogic.gdx.utils.Bits:
    long[] bits -> bits
    boolean get(int) -> get
    boolean getAndClear(int) -> getAndClear
    boolean getAndSet(int) -> getAndSet
    void set(int) -> set
    void flip(int) -> flip
    void checkCapacity(int) -> checkCapacity
    void clear(int) -> clear
    void clear() -> clear
    int numBits() -> numBits
    int length() -> length
    boolean isEmpty() -> isEmpty
    int nextSetBit(int) -> nextSetBit
    int nextClearBit(int) -> nextClearBit
    void and(com.badlogic.gdx.utils.Bits) -> and
    void andNot(com.badlogic.gdx.utils.Bits) -> andNot
    void or(com.badlogic.gdx.utils.Bits) -> or
    void xor(com.badlogic.gdx.utils.Bits) -> xor
    boolean intersects(com.badlogic.gdx.utils.Bits) -> intersects
    boolean containsAll(com.badlogic.gdx.utils.Bits) -> containsAll
com.badlogic.gdx.utils.BooleanArray -> com.badlogic.gdx.utils.BooleanArray:
    boolean[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(boolean) -> add
    void addAll(com.badlogic.gdx.utils.BooleanArray) -> addAll
    void addAll(com.badlogic.gdx.utils.BooleanArray,int,int) -> addAll
    void addAll(boolean[]) -> addAll
    void addAll(boolean[],int,int) -> addAll
    boolean get(int) -> get
    void set(int,boolean) -> set
    void insert(int,boolean) -> insert
    void swap(int,int) -> swap
    boolean removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.BooleanArray) -> removeAll
    boolean pop() -> pop
    boolean peek() -> peek
    boolean first() -> first
    void clear() -> clear
    boolean[] shrink() -> shrink
    boolean[] ensureCapacity(int) -> ensureCapacity
    boolean[] resize(int) -> resize
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    boolean random() -> random
    boolean[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.BooleanArray with(boolean[]) -> with
com.badlogic.gdx.utils.BufferUtils -> com.badlogic.gdx.utils.BufferUtils:
    com.badlogic.gdx.utils.Array unsafeBuffers -> unsafeBuffers
    int allocatedUnsafe -> allocatedUnsafe
    void copy(float[],java.nio.Buffer,int,int) -> copy
    void copy(byte[],int,java.nio.Buffer,int) -> copy
    void copy(short[],int,java.nio.Buffer,int) -> copy
    void copy(char[],int,int,java.nio.Buffer) -> copy
    void copy(int[],int,int,java.nio.Buffer) -> copy
    void copy(long[],int,int,java.nio.Buffer) -> copy
    void copy(float[],int,int,java.nio.Buffer) -> copy
    void copy(double[],int,int,java.nio.Buffer) -> copy
    void copy(char[],int,java.nio.Buffer,int) -> copy
    void copy(int[],int,java.nio.Buffer,int) -> copy
    void copy(long[],int,java.nio.Buffer,int) -> copy
    void copy(float[],int,java.nio.Buffer,int) -> copy
    void copy(double[],int,java.nio.Buffer,int) -> copy
    void copy(java.nio.Buffer,java.nio.Buffer,int) -> copy
    void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix4) -> transform
    void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix4) -> transform
    void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix4,int) -> transform
    void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix4,int) -> transform
    void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix3) -> transform
    void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix3) -> transform
    void transform(java.nio.Buffer,int,int,int,com.badlogic.gdx.math.Matrix3,int) -> transform
    void transform(float[],int,int,int,com.badlogic.gdx.math.Matrix3,int) -> transform
    long findFloats(java.nio.Buffer,int,java.nio.Buffer,int) -> findFloats
    long findFloats(float[],int,java.nio.Buffer,int) -> findFloats
    long findFloats(java.nio.Buffer,int,float[],int) -> findFloats
    long findFloats(float[],int,float[],int) -> findFloats
    long findFloats(java.nio.Buffer,int,java.nio.Buffer,int,float) -> findFloats
    long findFloats(float[],int,java.nio.Buffer,int,float) -> findFloats
    long findFloats(java.nio.Buffer,int,float[],int,float) -> findFloats
    long findFloats(float[],int,float[],int,float) -> findFloats
    int positionInBytes(java.nio.Buffer) -> positionInBytes
    int bytesToElements(java.nio.Buffer,int) -> bytesToElements
    int elementsToBytes(java.nio.Buffer,int) -> elementsToBytes
    java.nio.FloatBuffer newFloatBuffer(int) -> newFloatBuffer
    java.nio.DoubleBuffer newDoubleBuffer(int) -> newDoubleBuffer
    java.nio.ByteBuffer newByteBuffer(int) -> newByteBuffer
    java.nio.ShortBuffer newShortBuffer(int) -> newShortBuffer
    java.nio.CharBuffer newCharBuffer(int) -> newCharBuffer
    java.nio.IntBuffer newIntBuffer(int) -> newIntBuffer
    java.nio.LongBuffer newLongBuffer(int) -> newLongBuffer
    void disposeUnsafeByteBuffer(java.nio.ByteBuffer) -> disposeUnsafeByteBuffer
    java.nio.ByteBuffer newUnsafeByteBuffer(int) -> newUnsafeByteBuffer
    long getUnsafeBufferAddress(java.nio.Buffer) -> getUnsafeBufferAddress
    java.nio.ByteBuffer newUnsafeByteBuffer(java.nio.ByteBuffer) -> newUnsafeByteBuffer
    int getAllocatedBytesUnsafe() -> getAllocatedBytesUnsafe
    void freeMemory(java.nio.ByteBuffer) -> freeMemory
    java.nio.ByteBuffer newDisposableByteBuffer(int) -> newDisposableByteBuffer
    long getBufferAddress(java.nio.Buffer) -> getBufferAddress
    void clear(java.nio.ByteBuffer,int) -> clear
    void copyJni(float[],java.nio.Buffer,int,int) -> copyJni
    void copyJni(byte[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(char[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(short[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(int[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(long[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(float[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(double[],int,java.nio.Buffer,int,int) -> copyJni
    void copyJni(java.nio.Buffer,int,java.nio.Buffer,int,int) -> copyJni
    void transformV4M4Jni(java.nio.Buffer,int,int,float[],int) -> transformV4M4Jni
    void transformV4M4Jni(float[],int,int,float[],int) -> transformV4M4Jni
    void transformV3M4Jni(java.nio.Buffer,int,int,float[],int) -> transformV3M4Jni
    void transformV3M4Jni(float[],int,int,float[],int) -> transformV3M4Jni
    void transformV2M4Jni(java.nio.Buffer,int,int,float[],int) -> transformV2M4Jni
    void transformV2M4Jni(float[],int,int,float[],int) -> transformV2M4Jni
    void transformV3M3Jni(java.nio.Buffer,int,int,float[],int) -> transformV3M3Jni
    void transformV3M3Jni(float[],int,int,float[],int) -> transformV3M3Jni
    void transformV2M3Jni(java.nio.Buffer,int,int,float[],int) -> transformV2M3Jni
    void transformV2M3Jni(float[],int,int,float[],int) -> transformV2M3Jni
    long find(java.nio.Buffer,int,int,java.nio.Buffer,int,int) -> find
    long find(float[],int,int,java.nio.Buffer,int,int) -> find
    long find(java.nio.Buffer,int,int,float[],int,int) -> find
    long find(float[],int,int,float[],int,int) -> find
    long find(java.nio.Buffer,int,int,java.nio.Buffer,int,int,float) -> find
    long find(float[],int,int,java.nio.Buffer,int,int,float) -> find
    long find(java.nio.Buffer,int,int,float[],int,int,float) -> find
    long find(float[],int,int,float[],int,int,float) -> find
com.badlogic.gdx.utils.ByteArray -> com.badlogic.gdx.utils.ByteArray:
    byte[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(byte) -> add
    void addAll(com.badlogic.gdx.utils.ByteArray) -> addAll
    void addAll(com.badlogic.gdx.utils.ByteArray,int,int) -> addAll
    void addAll(byte[]) -> addAll
    void addAll(byte[],int,int) -> addAll
    byte get(int) -> get
    void set(int,byte) -> set
    void incr(int,byte) -> incr
    void mul(int,byte) -> mul
    void insert(int,byte) -> insert
    void swap(int,int) -> swap
    boolean contains(byte) -> contains
    int indexOf(byte) -> indexOf
    int lastIndexOf(byte) -> lastIndexOf
    boolean removeValue(byte) -> removeValue
    int removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.ByteArray) -> removeAll
    byte pop() -> pop
    byte peek() -> peek
    byte first() -> first
    void clear() -> clear
    byte[] shrink() -> shrink
    byte[] ensureCapacity(int) -> ensureCapacity
    byte[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    byte random() -> random
    byte[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.ByteArray with(byte[]) -> with
com.badlogic.gdx.utils.CharArray -> com.badlogic.gdx.utils.CharArray:
    char[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(char) -> add
    void addAll(com.badlogic.gdx.utils.CharArray) -> addAll
    void addAll(com.badlogic.gdx.utils.CharArray,int,int) -> addAll
    void addAll(char[]) -> addAll
    void addAll(char[],int,int) -> addAll
    char get(int) -> get
    void set(int,char) -> set
    void incr(int,char) -> incr
    void mul(int,char) -> mul
    void insert(int,char) -> insert
    void swap(int,int) -> swap
    boolean contains(char) -> contains
    int indexOf(char) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    boolean removeValue(char) -> removeValue
    char removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.CharArray) -> removeAll
    char pop() -> pop
    char peek() -> peek
    char first() -> first
    void clear() -> clear
    char[] shrink() -> shrink
    char[] ensureCapacity(int) -> ensureCapacity
    char[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    char random() -> random
    char[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.CharArray with(char[]) -> with
com.badlogic.gdx.utils.Clipboard -> com.badlogic.gdx.utils.Clipboard:
    java.lang.String getContents() -> getContents
    void setContents(java.lang.String) -> setContents
com.badlogic.gdx.utils.ComparableTimSort -> com.badlogic.gdx.utils.ComparableTimSort:
    int MIN_MERGE -> MIN_MERGE
    java.lang.Object[] a -> a
    int MIN_GALLOP -> MIN_GALLOP
    int minGallop -> minGallop
    int INITIAL_TMP_STORAGE_LENGTH -> INITIAL_TMP_STORAGE_LENGTH
    java.lang.Object[] tmp -> tmp
    int stackSize -> stackSize
    int[] runBase -> runBase
    int[] runLen -> runLen
    boolean DEBUG -> DEBUG
    void doSort(java.lang.Object[],int,int) -> doSort
    void sort(java.lang.Object[]) -> sort
    void sort(java.lang.Object[],int,int) -> sort
    void binarySort(java.lang.Object[],int,int,int) -> binarySort
    int countRunAndMakeAscending(java.lang.Object[],int,int) -> countRunAndMakeAscending
    void reverseRange(java.lang.Object[],int,int) -> reverseRange
    int minRunLength(int) -> minRunLength
    void pushRun(int,int) -> pushRun
    void mergeCollapse() -> mergeCollapse
    void mergeForceCollapse() -> mergeForceCollapse
    void mergeAt(int) -> mergeAt
    int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int) -> gallopLeft
    int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int) -> gallopRight
    void mergeLo(int,int,int,int) -> mergeLo
    void mergeHi(int,int,int,int) -> mergeHi
    java.lang.Object[] ensureCapacity(int) -> ensureCapacity
    void rangeCheck(int,int,int) -> rangeCheck
com.badlogic.gdx.utils.DataInput -> com.badlogic.gdx.utils.DataInput:
    char[] chars -> chars
    int readInt(boolean) -> readInt
    java.lang.String readString() -> readString
    void readUtf8_slow(int,int,int) -> readUtf8_slow
com.badlogic.gdx.utils.DataOutput -> com.badlogic.gdx.utils.DataOutput:
    int writeInt(int,boolean) -> writeInt
    void writeString(java.lang.String) -> writeString
    void writeString_slow(java.lang.String,int,int) -> writeString_slow
com.badlogic.gdx.utils.DelayedRemovalArray -> com.badlogic.gdx.utils.DelayedRemovalArray:
    boolean iterating -> iterating
    com.badlogic.gdx.utils.IntArray remove -> remove
    void begin() -> begin
    void end() -> end
    void remove(int) -> remove
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    java.lang.Object removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    void set(int,java.lang.Object) -> set
    void insert(int,java.lang.Object) -> insert
    void swap(int,int) -> swap
    java.lang.Object pop() -> pop
    void clear() -> clear
    void sort() -> sort
    void sort(java.util.Comparator) -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    com.badlogic.gdx.utils.DelayedRemovalArray with(java.lang.Object[]) -> with
com.badlogic.gdx.utils.Disposable -> com.badlogic.gdx.utils.Disposable:
    void dispose() -> dispose
com.badlogic.gdx.utils.FloatArray -> com.badlogic.gdx.utils.FloatArray:
    float[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(float) -> add
    void addAll(com.badlogic.gdx.utils.FloatArray) -> addAll
    void addAll(com.badlogic.gdx.utils.FloatArray,int,int) -> addAll
    void addAll(float[]) -> addAll
    void addAll(float[],int,int) -> addAll
    float get(int) -> get
    void set(int,float) -> set
    void incr(int,float) -> incr
    void mul(int,float) -> mul
    void insert(int,float) -> insert
    void swap(int,int) -> swap
    boolean contains(float) -> contains
    int indexOf(float) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    boolean removeValue(float) -> removeValue
    float removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.FloatArray) -> removeAll
    float pop() -> pop
    float peek() -> peek
    float first() -> first
    void clear() -> clear
    float[] shrink() -> shrink
    float[] ensureCapacity(int) -> ensureCapacity
    float[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    float random() -> random
    float[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    boolean equals(java.lang.Object,float) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.FloatArray with(float[]) -> with
com.badlogic.gdx.utils.GdxBuild -> com.badlogic.gdx.utils.GdxBuild:
    void main(java.lang.String[]) -> main
com.badlogic.gdx.utils.GdxNativesLoader -> com.badlogic.gdx.utils.GdxNativesLoader:
    boolean disableNativesLoading -> disableNativesLoading
    boolean nativesLoaded -> nativesLoaded
    void load() -> load
com.badlogic.gdx.utils.GdxRuntimeException -> com.badlogic.gdx.utils.GdxRuntimeException:
    long serialVersionUID -> serialVersionUID
com.badlogic.gdx.utils.I18NBundle -> com.badlogic.gdx.utils.I18NBundle:
    java.lang.String DEFAULT_ENCODING -> DEFAULT_ENCODING
    boolean simpleFormatter -> simpleFormatter
    com.badlogic.gdx.utils.I18NBundle parent -> parent
    java.util.Locale locale -> locale
    com.badlogic.gdx.utils.ObjectMap properties -> properties
    com.badlogic.gdx.utils.TextFormatter formatter -> formatter
    boolean getSimpleFormatter() -> getSimpleFormatter
    void setSimpleFormatter(boolean) -> setSimpleFormatter
    com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle) -> createBundle
    com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle,java.util.Locale) -> createBundle
    com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle,java.lang.String) -> createBundle
    com.badlogic.gdx.utils.I18NBundle createBundle(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String) -> createBundle
    com.badlogic.gdx.utils.I18NBundle createBundleImpl(com.badlogic.gdx.files.FileHandle,java.util.Locale,java.lang.String) -> createBundleImpl
    java.util.List getCandidateLocales(java.util.Locale) -> getCandidateLocales
    java.util.Locale getFallbackLocale(java.util.Locale) -> getFallbackLocale
    com.badlogic.gdx.utils.I18NBundle loadBundleChain(com.badlogic.gdx.files.FileHandle,java.lang.String,java.util.List,int,com.badlogic.gdx.utils.I18NBundle) -> loadBundleChain
    com.badlogic.gdx.utils.I18NBundle loadBundle(com.badlogic.gdx.files.FileHandle,java.lang.String,java.util.Locale) -> loadBundle
    void load(java.io.Reader) -> load
    com.badlogic.gdx.files.FileHandle toFileHandle(com.badlogic.gdx.files.FileHandle,java.util.Locale) -> toFileHandle
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
    java.lang.String get(java.lang.String) -> get
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
com.badlogic.gdx.utils.IdentityMap -> com.badlogic.gdx.utils.IdentityMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IdentityMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.IdentityMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.IdentityMap$Values values1 -> values1
    com.badlogic.gdx.utils.IdentityMap$Values values2 -> values2
    com.badlogic.gdx.utils.IdentityMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.IdentityMap$Keys keys2 -> keys2
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putResize(java.lang.Object,java.lang.Object) -> putResize
    void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,java.lang.Object) -> putStash
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.lang.Object getStash(java.lang.Object,java.lang.Object) -> getStash
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeStash(java.lang.Object) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(java.lang.Object,boolean) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.IdentityMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IdentityMap$Values values() -> values
    com.badlogic.gdx.utils.IdentityMap$Keys keys() -> keys
com.badlogic.gdx.utils.IdentityMap$Entries -> com.badlogic.gdx.utils.IdentityMap$Entries:
    com.badlogic.gdx.utils.IdentityMap$Entry entry -> entry
    com.badlogic.gdx.utils.IdentityMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IdentityMap$Entry -> com.badlogic.gdx.utils.IdentityMap$Entry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IdentityMap$Keys -> com.badlogic.gdx.utils.IdentityMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IdentityMap$MapIterator -> com.badlogic.gdx.utils.IdentityMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IdentityMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IdentityMap$Values -> com.badlogic.gdx.utils.IdentityMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void toArray(com.badlogic.gdx.utils.Array) -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntArray -> com.badlogic.gdx.utils.IntArray:
    int[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(int) -> add
    void addAll(com.badlogic.gdx.utils.IntArray) -> addAll
    void addAll(com.badlogic.gdx.utils.IntArray,int,int) -> addAll
    void addAll(int[]) -> addAll
    void addAll(int[],int,int) -> addAll
    int get(int) -> get
    void set(int,int) -> set
    void incr(int,int) -> incr
    void mul(int,int) -> mul
    void insert(int,int) -> insert
    void swap(int,int) -> swap
    boolean contains(int) -> contains
    int indexOf(int) -> indexOf
    int lastIndexOf(int) -> lastIndexOf
    boolean removeValue(int) -> removeValue
    int removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.IntArray) -> removeAll
    int pop() -> pop
    int peek() -> peek
    int first() -> first
    void clear() -> clear
    int[] shrink() -> shrink
    int[] ensureCapacity(int) -> ensureCapacity
    int[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    int random() -> random
    int[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.IntArray with(int[]) -> with
com.badlogic.gdx.utils.IntFloatMap -> com.badlogic.gdx.utils.IntFloatMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    float[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntFloatMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.IntFloatMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.IntFloatMap$Values values1 -> values1
    com.badlogic.gdx.utils.IntFloatMap$Values values2 -> values2
    com.badlogic.gdx.utils.IntFloatMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.IntFloatMap$Keys keys2 -> keys2
    void put(int,float) -> put
    void putAll(com.badlogic.gdx.utils.IntFloatMap) -> putAll
    void putResize(int,float) -> putResize
    void push(int,float,int,int,int,int,int,int) -> push
    void putStash(int,float) -> putStash
    float get(int,float) -> get
    float getStash(int,float) -> getStash
    float getAndIncrement(int,float,float) -> getAndIncrement
    float getAndIncrementStash(int,float,float) -> getAndIncrementStash
    float remove(int,float) -> remove
    float removeStash(int,float) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(float) -> containsValue
    boolean containsValue(float,float) -> containsValue
    boolean containsKey(int) -> containsKey
    boolean containsKeyStash(int) -> containsKeyStash
    int findKey(float,int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.IntFloatMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IntFloatMap$Values values() -> values
    com.badlogic.gdx.utils.IntFloatMap$Keys keys() -> keys
com.badlogic.gdx.utils.IntFloatMap$Entries -> com.badlogic.gdx.utils.IntFloatMap$Entries:
    com.badlogic.gdx.utils.IntFloatMap$Entry entry -> entry
    com.badlogic.gdx.utils.IntFloatMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IntFloatMap$Entry -> com.badlogic.gdx.utils.IntFloatMap$Entry:
    int key -> key
    float value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntFloatMap$Keys -> com.badlogic.gdx.utils.IntFloatMap$Keys:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntFloatMap$MapIterator -> com.badlogic.gdx.utils.IntFloatMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntFloatMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IntFloatMap$Values -> com.badlogic.gdx.utils.IntFloatMap$Values:
    boolean hasNext() -> hasNext
    float next() -> next
    com.badlogic.gdx.utils.FloatArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntIntMap -> com.badlogic.gdx.utils.IntIntMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    int[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    int zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntIntMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.IntIntMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.IntIntMap$Values values1 -> values1
    com.badlogic.gdx.utils.IntIntMap$Values values2 -> values2
    com.badlogic.gdx.utils.IntIntMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.IntIntMap$Keys keys2 -> keys2
    void put(int,int) -> put
    void putAll(com.badlogic.gdx.utils.IntIntMap) -> putAll
    void putResize(int,int) -> putResize
    void push(int,int,int,int,int,int,int,int) -> push
    void putStash(int,int) -> putStash
    int get(int,int) -> get
    int getStash(int,int) -> getStash
    int getAndIncrement(int,int,int) -> getAndIncrement
    int getAndIncrementStash(int,int,int) -> getAndIncrementStash
    int remove(int,int) -> remove
    int removeStash(int,int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(int) -> containsValue
    boolean containsKey(int) -> containsKey
    boolean containsKeyStash(int) -> containsKeyStash
    int findKey(int,int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.IntIntMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IntIntMap$Values values() -> values
    com.badlogic.gdx.utils.IntIntMap$Keys keys() -> keys
com.badlogic.gdx.utils.IntIntMap$Entries -> com.badlogic.gdx.utils.IntIntMap$Entries:
    com.badlogic.gdx.utils.IntIntMap$Entry entry -> entry
    com.badlogic.gdx.utils.IntIntMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IntIntMap$Entry -> com.badlogic.gdx.utils.IntIntMap$Entry:
    int key -> key
    int value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntIntMap$Keys -> com.badlogic.gdx.utils.IntIntMap$Keys:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntIntMap$MapIterator -> com.badlogic.gdx.utils.IntIntMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntIntMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IntIntMap$Values -> com.badlogic.gdx.utils.IntIntMap$Values:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntMap -> com.badlogic.gdx.utils.IntMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    java.lang.Object zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.IntMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.IntMap$Values values1 -> values1
    com.badlogic.gdx.utils.IntMap$Values values2 -> values2
    com.badlogic.gdx.utils.IntMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.IntMap$Keys keys2 -> keys2
    java.lang.Object put(int,java.lang.Object) -> put
    void putAll(com.badlogic.gdx.utils.IntMap) -> putAll
    void putResize(int,java.lang.Object) -> putResize
    void push(int,java.lang.Object,int,int,int,int,int,int) -> push
    void putStash(int,java.lang.Object) -> putStash
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    java.lang.Object getStash(int,java.lang.Object) -> getStash
    java.lang.Object remove(int) -> remove
    java.lang.Object removeStash(int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(int) -> containsKey
    boolean containsKeyStash(int) -> containsKeyStash
    int findKey(java.lang.Object,boolean,int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.IntMap$Entries entries() -> entries
    com.badlogic.gdx.utils.IntMap$Values values() -> values
    com.badlogic.gdx.utils.IntMap$Keys keys() -> keys
com.badlogic.gdx.utils.IntMap$Entries -> com.badlogic.gdx.utils.IntMap$Entries:
    com.badlogic.gdx.utils.IntMap$Entry entry -> entry
    com.badlogic.gdx.utils.IntMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.IntMap$Entry -> com.badlogic.gdx.utils.IntMap$Entry:
    int key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.IntMap$Keys -> com.badlogic.gdx.utils.IntMap$Keys:
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntMap$MapIterator -> com.badlogic.gdx.utils.IntMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.IntMap$Values -> com.badlogic.gdx.utils.IntMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.IntSet -> com.badlogic.gdx.utils.IntSet:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    int[] keyTable -> keyTable
    int capacity -> capacity
    int stashSize -> stashSize
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.IntSet$IntSetIterator iterator1 -> iterator1
    com.badlogic.gdx.utils.IntSet$IntSetIterator iterator2 -> iterator2
    boolean add(int) -> add
    void addAll(com.badlogic.gdx.utils.IntArray) -> addAll
    void addAll(com.badlogic.gdx.utils.IntArray,int,int) -> addAll
    void addAll(int[]) -> addAll
    void addAll(int[],int,int) -> addAll
    void addAll(com.badlogic.gdx.utils.IntSet) -> addAll
    void addResize(int) -> addResize
    void push(int,int,int,int,int,int,int) -> push
    void addStash(int) -> addStash
    boolean remove(int) -> remove
    boolean removeStash(int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean contains(int) -> contains
    boolean containsKeyStash(int) -> containsKeyStash
    int first() -> first
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.IntSet$IntSetIterator iterator() -> iterator
    com.badlogic.gdx.utils.IntSet with(int[]) -> with
com.badlogic.gdx.utils.IntSet$IntSetIterator -> com.badlogic.gdx.utils.IntSet$IntSetIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.IntSet set -> set
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
com.badlogic.gdx.utils.Json -> com.badlogic.gdx.utils.Json:
    boolean debug -> debug
    com.badlogic.gdx.utils.JsonWriter writer -> writer
    java.lang.String typeName -> typeName
    boolean usePrototypes -> usePrototypes
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> outputType
    com.badlogic.gdx.utils.ObjectMap typeToFields -> typeToFields
    com.badlogic.gdx.utils.ObjectMap tagToClass -> tagToClass
    com.badlogic.gdx.utils.ObjectMap classToTag -> classToTag
    com.badlogic.gdx.utils.ObjectMap classToSerializer -> classToSerializer
    com.badlogic.gdx.utils.ObjectMap classToDefaultValues -> classToDefaultValues
    com.badlogic.gdx.utils.Json$Serializer defaultSerializer -> defaultSerializer
    boolean ignoreUnknownFields -> ignoreUnknownFields
    void setIgnoreUnknownFields(boolean) -> setIgnoreUnknownFields
    void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> setOutputType
    void addClassTag(java.lang.String,java.lang.Class) -> addClassTag
    java.lang.Class getClass(java.lang.String) -> getClass
    java.lang.String getTag(java.lang.Class) -> getTag
    void setTypeName(java.lang.String) -> setTypeName
    void setDefaultSerializer(com.badlogic.gdx.utils.Json$Serializer) -> setDefaultSerializer
    void setSerializer(java.lang.Class,com.badlogic.gdx.utils.Json$Serializer) -> setSerializer
    com.badlogic.gdx.utils.Json$Serializer getSerializer(java.lang.Class) -> getSerializer
    void setUsePrototypes(boolean) -> setUsePrototypes
    void setElementType(java.lang.Class,java.lang.String,java.lang.Class) -> setElementType
    com.badlogic.gdx.utils.ObjectMap cacheFields(java.lang.Class) -> cacheFields
    java.lang.String toJson(java.lang.Object) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.Class) -> toJson
    java.lang.String toJson(java.lang.Object,java.lang.Class,java.lang.Class) -> toJson
    void toJson(java.lang.Object,com.badlogic.gdx.files.FileHandle) -> toJson
    void toJson(java.lang.Object,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> toJson
    void toJson(java.lang.Object,java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> toJson
    void toJson(java.lang.Object,java.io.Writer) -> toJson
    void toJson(java.lang.Object,java.lang.Class,java.io.Writer) -> toJson
    void toJson(java.lang.Object,java.lang.Class,java.lang.Class,java.io.Writer) -> toJson
    void setWriter(java.io.Writer) -> setWriter
    com.badlogic.gdx.utils.JsonWriter getWriter() -> getWriter
    void writeFields(java.lang.Object) -> writeFields
    java.lang.Object[] getDefaultValues(java.lang.Class) -> getDefaultValues
    void writeField(java.lang.Object,java.lang.String) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.Class) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.String) -> writeField
    void writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class) -> writeField
    void writeValue(java.lang.String,java.lang.Object) -> writeValue
    void writeValue(java.lang.String,java.lang.Object,java.lang.Class) -> writeValue
    void writeValue(java.lang.String,java.lang.Object,java.lang.Class,java.lang.Class) -> writeValue
    void writeValue(java.lang.Object) -> writeValue
    void writeValue(java.lang.Object,java.lang.Class) -> writeValue
    void writeValue(java.lang.Object,java.lang.Class,java.lang.Class) -> writeValue
    void writeObjectStart(java.lang.String) -> writeObjectStart
    void writeObjectStart(java.lang.String,java.lang.Class,java.lang.Class) -> writeObjectStart
    void writeObjectStart() -> writeObjectStart
    void writeObjectStart(java.lang.Class,java.lang.Class) -> writeObjectStart
    void writeObjectEnd() -> writeObjectEnd
    void writeArrayStart(java.lang.String) -> writeArrayStart
    void writeArrayStart() -> writeArrayStart
    void writeArrayEnd() -> writeArrayEnd
    void writeType(java.lang.Class) -> writeType
    java.lang.Object fromJson(java.lang.Class,java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.Reader) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.io.InputStream) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.io.InputStream) -> fromJson
    java.lang.Object fromJson(java.lang.Class,com.badlogic.gdx.files.FileHandle) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle) -> fromJson
    java.lang.Object fromJson(java.lang.Class,char[],int,int) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,char[],int,int) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.String) -> fromJson
    java.lang.Object fromJson(java.lang.Class,java.lang.Class,java.lang.String) -> fromJson
    void readField(java.lang.Object,java.lang.String,com.badlogic.gdx.utils.JsonValue) -> readField
    void readField(java.lang.Object,java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readField
    void readField(java.lang.Object,java.lang.String,java.lang.String,com.badlogic.gdx.utils.JsonValue) -> readField
    void readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readField
    void readFields(java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readFields
    java.lang.Object readValue(java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.Class,java.lang.Class,java.lang.Object,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.Object readValue(java.lang.Class,java.lang.Class,com.badlogic.gdx.utils.JsonValue) -> readValue
    java.lang.String convertToString(java.lang.Object) -> convertToString
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.lang.String prettyPrint(java.lang.Object) -> prettyPrint
    java.lang.String prettyPrint(java.lang.String) -> prettyPrint
    java.lang.String prettyPrint(java.lang.Object,int) -> prettyPrint
    java.lang.String prettyPrint(java.lang.String,int) -> prettyPrint
    java.lang.String prettyPrint(java.lang.Object,com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> prettyPrint
    java.lang.String prettyPrint(java.lang.String,com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> prettyPrint
com.badlogic.gdx.utils.Json$FieldMetadata -> com.badlogic.gdx.utils.Json$FieldMetadata:
    com.badlogic.gdx.utils.reflect.Field field -> field
    java.lang.Class elementType -> elementType
com.badlogic.gdx.utils.Json$ReadOnlySerializer -> com.badlogic.gdx.utils.Json$ReadOnlySerializer:
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.utils.Json$Serializable -> com.badlogic.gdx.utils.Json$Serializable:
    void write(com.badlogic.gdx.utils.Json) -> write
    void read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue) -> read
com.badlogic.gdx.utils.Json$Serializer -> com.badlogic.gdx.utils.Json$Serializer:
    void write(com.badlogic.gdx.utils.Json,java.lang.Object,java.lang.Class) -> write
    java.lang.Object read(com.badlogic.gdx.utils.Json,com.badlogic.gdx.utils.JsonValue,java.lang.Class) -> read
com.badlogic.gdx.utils.JsonReader -> com.badlogic.gdx.utils.JsonReader:
    byte[] _json_actions -> _json_actions
    short[] _json_key_offsets -> _json_key_offsets
    char[] _json_trans_keys -> _json_trans_keys
    byte[] _json_single_lengths -> _json_single_lengths
    byte[] _json_range_lengths -> _json_range_lengths
    short[] _json_index_offsets -> _json_index_offsets
    byte[] _json_indicies -> _json_indicies
    byte[] _json_trans_targs -> _json_trans_targs
    byte[] _json_trans_actions -> _json_trans_actions
    byte[] _json_eof_actions -> _json_eof_actions
    int json_start -> json_start
    int json_first_final -> json_first_final
    int json_error -> json_error
    int json_en_object -> json_en_object
    int json_en_array -> json_en_array
    int json_en_main -> json_en_main
    com.badlogic.gdx.utils.Array elements -> elements
    com.badlogic.gdx.utils.Array lastChild -> lastChild
    com.badlogic.gdx.utils.JsonValue root -> root
    com.badlogic.gdx.utils.JsonValue current -> current
    com.badlogic.gdx.utils.JsonValue parse(java.lang.String) -> parse
    com.badlogic.gdx.utils.JsonValue parse(java.io.Reader) -> parse
    com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream) -> parse
    com.badlogic.gdx.utils.JsonValue parse(com.badlogic.gdx.files.FileHandle) -> parse
    com.badlogic.gdx.utils.JsonValue parse(char[],int,int) -> parse
    byte[] init__json_actions_0() -> init__json_actions_0
    short[] init__json_key_offsets_0() -> init__json_key_offsets_0
    char[] init__json_trans_keys_0() -> init__json_trans_keys_0
    byte[] init__json_single_lengths_0() -> init__json_single_lengths_0
    byte[] init__json_range_lengths_0() -> init__json_range_lengths_0
    short[] init__json_index_offsets_0() -> init__json_index_offsets_0
    byte[] init__json_indicies_0() -> init__json_indicies_0
    byte[] init__json_trans_targs_0() -> init__json_trans_targs_0
    byte[] init__json_trans_actions_0() -> init__json_trans_actions_0
    byte[] init__json_eof_actions_0() -> init__json_eof_actions_0
    void addChild(java.lang.String,com.badlogic.gdx.utils.JsonValue) -> addChild
    void startObject(java.lang.String) -> startObject
    void startArray(java.lang.String) -> startArray
    void pop() -> pop
    void string(java.lang.String,java.lang.String) -> string
    void number(java.lang.String,double) -> number
    void number(java.lang.String,long) -> number
    void bool(java.lang.String,boolean) -> bool
    java.lang.String unescape(java.lang.String) -> unescape
com.badlogic.gdx.utils.JsonValue -> com.badlogic.gdx.utils.JsonValue:
    com.badlogic.gdx.utils.JsonValue$ValueType type -> type
    java.lang.String stringValue -> stringValue
    double doubleValue -> doubleValue
    long longValue -> longValue
    java.lang.String name -> name
    com.badlogic.gdx.utils.JsonValue child -> child
    com.badlogic.gdx.utils.JsonValue next -> next
    com.badlogic.gdx.utils.JsonValue prev -> prev
    int size -> size
    com.badlogic.gdx.utils.JsonValue get(int) -> get
    com.badlogic.gdx.utils.JsonValue get(java.lang.String) -> get
    boolean has(java.lang.String) -> has
    com.badlogic.gdx.utils.JsonValue require(int) -> require
    com.badlogic.gdx.utils.JsonValue require(java.lang.String) -> require
    com.badlogic.gdx.utils.JsonValue remove(int) -> remove
    com.badlogic.gdx.utils.JsonValue remove(java.lang.String) -> remove
    int size() -> size
    java.lang.String asString() -> asString
    float asFloat() -> asFloat
    double asDouble() -> asDouble
    long asLong() -> asLong
    int asInt() -> asInt
    boolean asBoolean() -> asBoolean
    byte asByte() -> asByte
    short asShort() -> asShort
    char asChar() -> asChar
    java.lang.String[] asStringArray() -> asStringArray
    float[] asFloatArray() -> asFloatArray
    double[] asDoubleArray() -> asDoubleArray
    long[] asLongArray() -> asLongArray
    int[] asIntArray() -> asIntArray
    boolean[] asBooleanArray() -> asBooleanArray
    byte[] asByteArray() -> asByteArray
    short[] asShortArray() -> asShortArray
    char[] asCharArray() -> asCharArray
    boolean hasChild(java.lang.String) -> hasChild
    com.badlogic.gdx.utils.JsonValue getChild(java.lang.String) -> getChild
    java.lang.String getString(java.lang.String,java.lang.String) -> getString
    float getFloat(java.lang.String,float) -> getFloat
    double getDouble(java.lang.String,double) -> getDouble
    long getLong(java.lang.String,long) -> getLong
    int getInt(java.lang.String,int) -> getInt
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
    byte getByte(java.lang.String,byte) -> getByte
    short getShort(java.lang.String,short) -> getShort
    char getChar(java.lang.String,char) -> getChar
    java.lang.String getString(java.lang.String) -> getString
    float getFloat(java.lang.String) -> getFloat
    double getDouble(java.lang.String) -> getDouble
    long getLong(java.lang.String) -> getLong
    int getInt(java.lang.String) -> getInt
    boolean getBoolean(java.lang.String) -> getBoolean
    byte getByte(java.lang.String) -> getByte
    short getShort(java.lang.String) -> getShort
    char getChar(java.lang.String) -> getChar
    java.lang.String getString(int) -> getString
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    long getLong(int) -> getLong
    int getInt(int) -> getInt
    boolean getBoolean(int) -> getBoolean
    byte getByte(int) -> getByte
    short getShort(int) -> getShort
    char getChar(int) -> getChar
    com.badlogic.gdx.utils.JsonValue$ValueType type() -> type
    void setType(com.badlogic.gdx.utils.JsonValue$ValueType) -> setType
    boolean isArray() -> isArray
    boolean isObject() -> isObject
    boolean isString() -> isString
    boolean isNumber() -> isNumber
    boolean isDouble() -> isDouble
    boolean isLong() -> isLong
    boolean isBoolean() -> isBoolean
    boolean isNull() -> isNull
    boolean isValue() -> isValue
    java.lang.String name() -> name
    void setName(java.lang.String) -> setName
    com.badlogic.gdx.utils.JsonValue child() -> child
    com.badlogic.gdx.utils.JsonValue next() -> next
    void setNext(com.badlogic.gdx.utils.JsonValue) -> setNext
    com.badlogic.gdx.utils.JsonValue prev() -> prev
    void setPrev(com.badlogic.gdx.utils.JsonValue) -> setPrev
    void set(java.lang.String) -> set
    void set(double) -> set
    void set(long) -> set
    void set(boolean) -> set
    java.lang.String toString() -> toString
    java.lang.String prettyPrint(com.badlogic.gdx.utils.JsonWriter$OutputType,int) -> prettyPrint
    java.lang.String prettyPrint(com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> prettyPrint
    void prettyPrint(com.badlogic.gdx.utils.JsonValue,com.badlogic.gdx.utils.StringBuilder,int,com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings) -> prettyPrint
    boolean isFlat(com.badlogic.gdx.utils.JsonValue) -> isFlat
    boolean isNumeric(com.badlogic.gdx.utils.JsonValue) -> isNumeric
    void indent(int,com.badlogic.gdx.utils.StringBuilder) -> indent
    com.badlogic.gdx.utils.JsonValue$JsonIterator iterator() -> iterator
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.JsonValue$1 -> com.badlogic.gdx.utils.JsonValue$1:
    int[] $SwitchMap$com$badlogic$gdx$utils$JsonValue$ValueType -> $SwitchMap$com$badlogic$gdx$utils$JsonValue$ValueType
com.badlogic.gdx.utils.JsonValue$JsonIterator -> com.badlogic.gdx.utils.JsonValue$JsonIterator:
    com.badlogic.gdx.utils.JsonValue entry -> entry
    com.badlogic.gdx.utils.JsonValue current -> current
    com.badlogic.gdx.utils.JsonValue this$0 -> this$0
    boolean hasNext() -> hasNext
    com.badlogic.gdx.utils.JsonValue next() -> next
    void remove() -> remove
    java.util.Iterator iterator() -> iterator
    java.lang.Object next() -> next
com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings -> com.badlogic.gdx.utils.JsonValue$PrettyPrintSettings:
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> outputType
    int singleLineColumns -> singleLineColumns
    boolean wrapNumericArrays -> wrapNumericArrays
com.badlogic.gdx.utils.JsonValue$ValueType -> com.badlogic.gdx.utils.JsonValue$ValueType:
    com.badlogic.gdx.utils.JsonValue$ValueType object -> object
    com.badlogic.gdx.utils.JsonValue$ValueType array -> array
    com.badlogic.gdx.utils.JsonValue$ValueType stringValue -> stringValue
    com.badlogic.gdx.utils.JsonValue$ValueType doubleValue -> doubleValue
    com.badlogic.gdx.utils.JsonValue$ValueType longValue -> longValue
    com.badlogic.gdx.utils.JsonValue$ValueType booleanValue -> booleanValue
    com.badlogic.gdx.utils.JsonValue$ValueType nullValue -> nullValue
    com.badlogic.gdx.utils.JsonValue$ValueType[] $VALUES -> $VALUES
    com.badlogic.gdx.utils.JsonValue$ValueType[] values() -> values
    com.badlogic.gdx.utils.JsonValue$ValueType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.utils.JsonWriter -> com.badlogic.gdx.utils.JsonWriter:
    java.io.Writer writer -> writer
    com.badlogic.gdx.utils.Array stack -> stack
    com.badlogic.gdx.utils.JsonWriter$JsonObject current -> current
    boolean named -> named
    com.badlogic.gdx.utils.JsonWriter$OutputType outputType -> outputType
    java.io.Writer getWriter() -> getWriter
    void setOutputType(com.badlogic.gdx.utils.JsonWriter$OutputType) -> setOutputType
    com.badlogic.gdx.utils.JsonWriter name(java.lang.String) -> name
    com.badlogic.gdx.utils.JsonWriter object() -> object
    com.badlogic.gdx.utils.JsonWriter array() -> array
    com.badlogic.gdx.utils.JsonWriter value(java.lang.Object) -> value
    com.badlogic.gdx.utils.JsonWriter object(java.lang.String) -> object
    com.badlogic.gdx.utils.JsonWriter array(java.lang.String) -> array
    com.badlogic.gdx.utils.JsonWriter set(java.lang.String,java.lang.Object) -> set
    com.badlogic.gdx.utils.JsonWriter pop() -> pop
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
com.badlogic.gdx.utils.JsonWriter$1 -> com.badlogic.gdx.utils.JsonWriter$1:
    int[] $SwitchMap$com$badlogic$gdx$utils$JsonWriter$OutputType -> $SwitchMap$com$badlogic$gdx$utils$JsonWriter$OutputType
com.badlogic.gdx.utils.JsonWriter$JsonObject -> com.badlogic.gdx.utils.JsonWriter$JsonObject:
    boolean array -> array
    boolean needsComma -> needsComma
    com.badlogic.gdx.utils.JsonWriter this$0 -> this$0
    void close() -> close
com.badlogic.gdx.utils.JsonWriter$OutputType -> com.badlogic.gdx.utils.JsonWriter$OutputType:
    com.badlogic.gdx.utils.JsonWriter$OutputType json -> json
    com.badlogic.gdx.utils.JsonWriter$OutputType javascript -> javascript
    com.badlogic.gdx.utils.JsonWriter$OutputType minimal -> minimal
    java.util.regex.Pattern javascriptPattern -> javascriptPattern
    java.util.regex.Pattern minimalNamePattern -> minimalNamePattern
    java.util.regex.Pattern minimalValuePattern -> minimalValuePattern
    com.badlogic.gdx.utils.JsonWriter$OutputType[] $VALUES -> $VALUES
    com.badlogic.gdx.utils.JsonWriter$OutputType[] values() -> values
    com.badlogic.gdx.utils.JsonWriter$OutputType valueOf(java.lang.String) -> valueOf
    java.lang.String quoteValue(java.lang.Object) -> quoteValue
    java.lang.String quoteName(java.lang.String) -> quoteName
com.badlogic.gdx.utils.LittleEndianInputStream -> com.badlogic.gdx.utils.LittleEndianInputStream:
    java.io.DataInputStream din -> din
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    char readChar() -> readChar
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readLine() -> readLine
    java.lang.String readUTF() -> readUTF
com.badlogic.gdx.utils.Logger -> com.badlogic.gdx.utils.Logger:
    int NONE -> NONE
    int ERROR -> ERROR
    int INFO -> INFO
    int DEBUG -> DEBUG
    java.lang.String tag -> tag
    int level -> level
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Exception) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Exception) -> info
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Throwable) -> error
    void setLevel(int) -> setLevel
    int getLevel() -> getLevel
com.badlogic.gdx.utils.LongArray -> com.badlogic.gdx.utils.LongArray:
    long[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(long) -> add
    void addAll(com.badlogic.gdx.utils.LongArray) -> addAll
    void addAll(com.badlogic.gdx.utils.LongArray,int,int) -> addAll
    void addAll(long[]) -> addAll
    void addAll(long[],int,int) -> addAll
    long get(int) -> get
    void set(int,long) -> set
    void incr(int,long) -> incr
    void mul(int,long) -> mul
    void insert(int,long) -> insert
    void swap(int,int) -> swap
    boolean contains(long) -> contains
    int indexOf(long) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    boolean removeValue(long) -> removeValue
    long removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.LongArray) -> removeAll
    long pop() -> pop
    long peek() -> peek
    long first() -> first
    void clear() -> clear
    long[] shrink() -> shrink
    long[] ensureCapacity(int) -> ensureCapacity
    long[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    long random() -> random
    long[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.LongArray with(long[]) -> with
com.badlogic.gdx.utils.LongMap -> com.badlogic.gdx.utils.LongMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int EMPTY -> EMPTY
    int size -> size
    long[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    java.lang.Object zeroValue -> zeroValue
    boolean hasZeroValue -> hasZeroValue
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.LongMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.LongMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.LongMap$Values values1 -> values1
    com.badlogic.gdx.utils.LongMap$Values values2 -> values2
    com.badlogic.gdx.utils.LongMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.LongMap$Keys keys2 -> keys2
    java.lang.Object put(long,java.lang.Object) -> put
    void putAll(com.badlogic.gdx.utils.LongMap) -> putAll
    void putResize(long,java.lang.Object) -> putResize
    void push(long,java.lang.Object,int,long,int,long,int,long) -> push
    void putStash(long,java.lang.Object) -> putStash
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    java.lang.Object getStash(long,java.lang.Object) -> getStash
    java.lang.Object remove(long) -> remove
    java.lang.Object removeStash(long) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(long) -> containsKey
    boolean containsKeyStash(long) -> containsKeyStash
    long findKey(java.lang.Object,boolean,long) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(long) -> hash2
    int hash3(long) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.LongMap$Entries entries() -> entries
    com.badlogic.gdx.utils.LongMap$Values values() -> values
    com.badlogic.gdx.utils.LongMap$Keys keys() -> keys
com.badlogic.gdx.utils.LongMap$Entries -> com.badlogic.gdx.utils.LongMap$Entries:
    com.badlogic.gdx.utils.LongMap$Entry entry -> entry
    com.badlogic.gdx.utils.LongMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.LongMap$Entry -> com.badlogic.gdx.utils.LongMap$Entry:
    long key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.LongMap$Keys -> com.badlogic.gdx.utils.LongMap$Keys:
    long next() -> next
    com.badlogic.gdx.utils.LongArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.LongMap$MapIterator -> com.badlogic.gdx.utils.LongMap$MapIterator:
    int INDEX_ILLEGAL -> INDEX_ILLEGAL
    int INDEX_ZERO -> INDEX_ZERO
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.LongMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.LongMap$Values -> com.badlogic.gdx.utils.LongMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.NumberUtils -> com.badlogic.gdx.utils.NumberUtils:
    boolean intToFloatColorMask -> intToFloatColorMask
    int floatToIntBits(float) -> floatToIntBits
    int floatToRawIntBits(float) -> floatToRawIntBits
    int floatToIntColor(float) -> floatToIntColor
    float intToFloatColor(int) -> intToFloatColor
    float intBitsToFloat(int) -> intBitsToFloat
    long doubleToLongBits(double) -> doubleToLongBits
    double longBitsToDouble(long) -> longBitsToDouble
com.badlogic.gdx.utils.ObjectFloatMap -> com.badlogic.gdx.utils.ObjectFloatMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    float[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectFloatMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.ObjectFloatMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.ObjectFloatMap$Values values1 -> values1
    com.badlogic.gdx.utils.ObjectFloatMap$Values values2 -> values2
    com.badlogic.gdx.utils.ObjectFloatMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.ObjectFloatMap$Keys keys2 -> keys2
    void put(java.lang.Object,float) -> put
    void putAll(com.badlogic.gdx.utils.ObjectFloatMap) -> putAll
    void putResize(java.lang.Object,float) -> putResize
    void push(java.lang.Object,float,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,float) -> putStash
    float get(java.lang.Object,float) -> get
    float getStash(java.lang.Object,float) -> getStash
    float getAndIncrement(java.lang.Object,float,float) -> getAndIncrement
    float getAndIncrementStash(java.lang.Object,float,float) -> getAndIncrementStash
    float remove(java.lang.Object,float) -> remove
    float removeStash(java.lang.Object,float) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(float) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(float) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.ObjectFloatMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectFloatMap$Values values() -> values
    com.badlogic.gdx.utils.ObjectFloatMap$Keys keys() -> keys
com.badlogic.gdx.utils.ObjectFloatMap$Entries -> com.badlogic.gdx.utils.ObjectFloatMap$Entries:
    com.badlogic.gdx.utils.ObjectFloatMap$Entry entry -> entry
    com.badlogic.gdx.utils.ObjectFloatMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectFloatMap$Entry -> com.badlogic.gdx.utils.ObjectFloatMap$Entry:
    java.lang.Object key -> key
    float value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectFloatMap$Keys -> com.badlogic.gdx.utils.ObjectFloatMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectFloatMap$MapIterator -> com.badlogic.gdx.utils.ObjectFloatMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectFloatMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.ObjectFloatMap$Values -> com.badlogic.gdx.utils.ObjectFloatMap$Values:
    boolean hasNext() -> hasNext
    float next() -> next
    com.badlogic.gdx.utils.FloatArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectIntMap -> com.badlogic.gdx.utils.ObjectIntMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    int[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.ObjectIntMap$Values values1 -> values1
    com.badlogic.gdx.utils.ObjectIntMap$Values values2 -> values2
    com.badlogic.gdx.utils.ObjectIntMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.ObjectIntMap$Keys keys2 -> keys2
    void put(java.lang.Object,int) -> put
    void putAll(com.badlogic.gdx.utils.ObjectIntMap) -> putAll
    void putResize(java.lang.Object,int) -> putResize
    void push(java.lang.Object,int,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,int) -> putStash
    int get(java.lang.Object,int) -> get
    int getStash(java.lang.Object,int) -> getStash
    int getAndIncrement(java.lang.Object,int,int) -> getAndIncrement
    int getAndIncrementStash(java.lang.Object,int,int) -> getAndIncrementStash
    int remove(java.lang.Object,int) -> remove
    int removeStash(java.lang.Object,int) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(int) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(int) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.ObjectIntMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectIntMap$Values values() -> values
    com.badlogic.gdx.utils.ObjectIntMap$Keys keys() -> keys
com.badlogic.gdx.utils.ObjectIntMap$Entries -> com.badlogic.gdx.utils.ObjectIntMap$Entries:
    com.badlogic.gdx.utils.ObjectIntMap$Entry entry -> entry
    com.badlogic.gdx.utils.ObjectIntMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectIntMap$Entry -> com.badlogic.gdx.utils.ObjectIntMap$Entry:
    java.lang.Object key -> key
    int value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectIntMap$Keys -> com.badlogic.gdx.utils.ObjectIntMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectIntMap$MapIterator -> com.badlogic.gdx.utils.ObjectIntMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectIntMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
com.badlogic.gdx.utils.ObjectIntMap$Values -> com.badlogic.gdx.utils.ObjectIntMap$Values:
    boolean hasNext() -> hasNext
    int next() -> next
    com.badlogic.gdx.utils.IntArray toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectMap -> com.badlogic.gdx.utils.ObjectMap:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    java.lang.Object[] valueTable -> valueTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectMap$Entries entries1 -> entries1
    com.badlogic.gdx.utils.ObjectMap$Entries entries2 -> entries2
    com.badlogic.gdx.utils.ObjectMap$Values values1 -> values1
    com.badlogic.gdx.utils.ObjectMap$Values values2 -> values2
    com.badlogic.gdx.utils.ObjectMap$Keys keys1 -> keys1
    com.badlogic.gdx.utils.ObjectMap$Keys keys2 -> keys2
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object put_internal(java.lang.Object,java.lang.Object) -> put_internal
    void putAll(com.badlogic.gdx.utils.ObjectMap) -> putAll
    void putResize(java.lang.Object,java.lang.Object) -> putResize
    void push(java.lang.Object,java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void putStash(java.lang.Object,java.lang.Object) -> putStash
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getStash(java.lang.Object) -> getStash
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.lang.Object getStash(java.lang.Object,java.lang.Object) -> getStash
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeStash(java.lang.Object) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean containsValue(java.lang.Object,boolean) -> containsValue
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object findKey(java.lang.Object,boolean) -> findKey
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString(java.lang.String) -> toString
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String,boolean) -> toString
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.ObjectMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectMap$Values values() -> values
    com.badlogic.gdx.utils.ObjectMap$Keys keys() -> keys
com.badlogic.gdx.utils.ObjectMap$Entries -> com.badlogic.gdx.utils.ObjectMap$Entries:
    com.badlogic.gdx.utils.ObjectMap$Entry entry -> entry
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> next
    boolean hasNext() -> hasNext
    java.util.Iterator iterator() -> iterator
    void remove() -> remove
    void reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.ObjectMap$Entry -> com.badlogic.gdx.utils.ObjectMap$Entry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.ObjectMap$Keys -> com.badlogic.gdx.utils.ObjectMap$Keys:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectMap$MapIterator -> com.badlogic.gdx.utils.ObjectMap$MapIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectMap map -> map
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void advance() -> advance
    void remove() -> remove
com.badlogic.gdx.utils.ObjectMap$Values -> com.badlogic.gdx.utils.ObjectMap$Values:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray() -> toArray
    void toArray(com.badlogic.gdx.utils.Array) -> toArray
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.ObjectSet -> com.badlogic.gdx.utils.ObjectSet:
    int PRIME1 -> PRIME1
    int PRIME2 -> PRIME2
    int PRIME3 -> PRIME3
    int size -> size
    java.lang.Object[] keyTable -> keyTable
    int capacity -> capacity
    int stashSize -> stashSize
    float loadFactor -> loadFactor
    int hashShift -> hashShift
    int mask -> mask
    int threshold -> threshold
    int stashCapacity -> stashCapacity
    int pushIterations -> pushIterations
    com.badlogic.gdx.utils.ObjectSet$SetIterator iterator1 -> iterator1
    com.badlogic.gdx.utils.ObjectSet$SetIterator iterator2 -> iterator2
    boolean add(java.lang.Object) -> add
    void addAll(com.badlogic.gdx.utils.Array) -> addAll
    void addAll(com.badlogic.gdx.utils.Array,int,int) -> addAll
    void addAll(java.lang.Object[]) -> addAll
    void addAll(java.lang.Object[],int,int) -> addAll
    void addAll(com.badlogic.gdx.utils.ObjectSet) -> addAll
    void addResize(java.lang.Object) -> addResize
    void push(java.lang.Object,int,java.lang.Object,int,java.lang.Object,int,java.lang.Object) -> push
    void addStash(java.lang.Object) -> addStash
    boolean remove(java.lang.Object) -> remove
    boolean removeStash(java.lang.Object) -> removeStash
    void removeStashIndex(int) -> removeStashIndex
    void shrink(int) -> shrink
    void clear(int) -> clear
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsKeyStash(java.lang.Object) -> containsKeyStash
    java.lang.Object first() -> first
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    int hash2(int) -> hash2
    int hash3(int) -> hash3
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.ObjectSet$SetIterator iterator() -> iterator
    com.badlogic.gdx.utils.ObjectSet with(java.lang.Object[]) -> with
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.ObjectSet$SetIterator -> com.badlogic.gdx.utils.ObjectSet$SetIterator:
    boolean hasNext -> hasNext
    com.badlogic.gdx.utils.ObjectSet set -> set
    int nextIndex -> nextIndex
    int currentIndex -> currentIndex
    boolean valid -> valid
    void reset() -> reset
    void findNextIndex() -> findNextIndex
    void remove() -> remove
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.util.Iterator iterator() -> iterator
    com.badlogic.gdx.utils.Array toArray(com.badlogic.gdx.utils.Array) -> toArray
    com.badlogic.gdx.utils.Array toArray() -> toArray
com.badlogic.gdx.utils.OrderedMap -> com.badlogic.gdx.utils.OrderedMap:
    com.badlogic.gdx.utils.Array keys -> keys
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void clear(int) -> clear
    void clear() -> clear
    com.badlogic.gdx.utils.Array orderedKeys() -> orderedKeys
    com.badlogic.gdx.utils.ObjectMap$Entries entries() -> entries
    com.badlogic.gdx.utils.ObjectMap$Keys keys() -> keys
    com.badlogic.gdx.utils.ObjectMap$Values values() -> values
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.OrderedMap$1 -> com.badlogic.gdx.utils.OrderedMap$1:
    com.badlogic.gdx.utils.OrderedMap this$0 -> this$0
    void advance() -> advance
    com.badlogic.gdx.utils.ObjectMap$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.badlogic.gdx.utils.OrderedMap$2 -> com.badlogic.gdx.utils.OrderedMap$2:
    com.badlogic.gdx.utils.OrderedMap this$0 -> this$0
    void advance() -> advance
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.OrderedMap$3 -> com.badlogic.gdx.utils.OrderedMap$3:
    com.badlogic.gdx.utils.OrderedMap this$0 -> this$0
    void advance() -> advance
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.PauseableThread -> com.badlogic.gdx.utils.PauseableThread:
    java.lang.Runnable runnable -> runnable
    boolean paused -> paused
    boolean exit -> exit
    void run() -> run
    void onPause() -> onPause
    void onResume() -> onResume
    boolean isPaused() -> isPaused
    void stopThread() -> stopThread
com.badlogic.gdx.utils.PerformanceCounter -> com.badlogic.gdx.utils.PerformanceCounter:
    float nano2seconds -> nano2seconds
    long startTime -> startTime
    long lastTick -> lastTick
    com.badlogic.gdx.math.FloatCounter time -> time
    com.badlogic.gdx.math.FloatCounter load -> load
    java.lang.String name -> name
    float current -> current
    boolean valid -> valid
    void tick() -> tick
    void tick(float) -> tick
    void start() -> start
    void stop() -> stop
    void reset() -> reset
    java.lang.String toString() -> toString
    com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder) -> toString
com.badlogic.gdx.utils.PerformanceCounters -> com.badlogic.gdx.utils.PerformanceCounters:
    float nano2seconds -> nano2seconds
    long lastTick -> lastTick
    com.badlogic.gdx.utils.Array counters -> counters
    com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String,int) -> add
    com.badlogic.gdx.utils.PerformanceCounter add(java.lang.String) -> add
    void tick() -> tick
    void tick(float) -> tick
    com.badlogic.gdx.utils.StringBuilder toString(com.badlogic.gdx.utils.StringBuilder) -> toString
com.badlogic.gdx.utils.Pool -> com.badlogic.gdx.utils.Pool:
    int max -> max
    int peak -> peak
    com.badlogic.gdx.utils.Array freeObjects -> freeObjects
    java.lang.Object newObject() -> newObject
    java.lang.Object obtain() -> obtain
    void free(java.lang.Object) -> free
    void freeAll(com.badlogic.gdx.utils.Array) -> freeAll
    void clear() -> clear
    int getFree() -> getFree
com.badlogic.gdx.utils.Pool$Poolable -> com.badlogic.gdx.utils.Pool$Poolable:
    void reset() -> reset
com.badlogic.gdx.utils.PooledLinkedList -> com.badlogic.gdx.utils.PooledLinkedList:
    com.badlogic.gdx.utils.PooledLinkedList$Item head -> head
    com.badlogic.gdx.utils.PooledLinkedList$Item tail -> tail
    com.badlogic.gdx.utils.PooledLinkedList$Item iter -> iter
    com.badlogic.gdx.utils.PooledLinkedList$Item curr -> curr
    int size -> size
    com.badlogic.gdx.utils.Pool pool -> pool
    void add(java.lang.Object) -> add
    void iter() -> iter
    java.lang.Object next() -> next
    void remove() -> remove
    void clear() -> clear
com.badlogic.gdx.utils.PooledLinkedList$1 -> com.badlogic.gdx.utils.PooledLinkedList$1:
    com.badlogic.gdx.utils.PooledLinkedList this$0 -> this$0
    com.badlogic.gdx.utils.PooledLinkedList$Item newObject() -> newObject
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.PooledLinkedList$Item -> com.badlogic.gdx.utils.PooledLinkedList$Item:
    java.lang.Object payload -> payload
    com.badlogic.gdx.utils.PooledLinkedList$Item next -> next
    com.badlogic.gdx.utils.PooledLinkedList$Item prev -> prev
com.badlogic.gdx.utils.Pools -> com.badlogic.gdx.utils.Pools:
    com.badlogic.gdx.utils.ObjectMap typePools -> typePools
    com.badlogic.gdx.utils.Pool get(java.lang.Class) -> get
    java.lang.Object obtain(java.lang.Class) -> obtain
    void free(java.lang.Object) -> free
    void freeAll(com.badlogic.gdx.utils.Array) -> freeAll
    void freeAll(com.badlogic.gdx.utils.Array,boolean) -> freeAll
com.badlogic.gdx.utils.Predicate -> com.badlogic.gdx.utils.Predicate:
    boolean evaluate(java.lang.Object) -> evaluate
com.badlogic.gdx.utils.Predicate$PredicateIterable -> com.badlogic.gdx.utils.Predicate$PredicateIterable:
    java.lang.Iterable iterable -> iterable
    com.badlogic.gdx.utils.Predicate predicate -> predicate
    com.badlogic.gdx.utils.Predicate$PredicateIterator iterator -> iterator
    void set(java.lang.Iterable,com.badlogic.gdx.utils.Predicate) -> set
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.Predicate$PredicateIterator -> com.badlogic.gdx.utils.Predicate$PredicateIterator:
    java.util.Iterator iterator -> iterator
    com.badlogic.gdx.utils.Predicate predicate -> predicate
    boolean end -> end
    boolean peeked -> peeked
    java.lang.Object next -> next
    void set(java.lang.Iterable,com.badlogic.gdx.utils.Predicate) -> set
    void set(java.util.Iterator,com.badlogic.gdx.utils.Predicate) -> set
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.badlogic.gdx.utils.PropertiesUtils -> com.badlogic.gdx.utils.PropertiesUtils:
    int NONE -> NONE
    int SLASH -> SLASH
    int UNICODE -> UNICODE
    int CONTINUE -> CONTINUE
    int KEY_DONE -> KEY_DONE
    int IGNORE -> IGNORE
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    void load(com.badlogic.gdx.utils.ObjectMap,java.io.Reader) -> load
    void store(com.badlogic.gdx.utils.ObjectMap,java.io.Writer,java.lang.String) -> store
    void storeImpl(com.badlogic.gdx.utils.ObjectMap,java.io.Writer,java.lang.String,boolean) -> storeImpl
    void dumpString(com.badlogic.gdx.utils.StringBuilder,java.lang.String,boolean,boolean) -> dumpString
    void writeComment(java.io.Writer,java.lang.String) -> writeComment
com.badlogic.gdx.utils.QuickSelect -> com.badlogic.gdx.utils.QuickSelect:
    java.lang.Object[] array -> array
    java.util.Comparator comp -> comp
    int select(java.lang.Object[],java.util.Comparator,int,int) -> select
    int partition(int,int,int) -> partition
    int recursiveSelect(int,int,int) -> recursiveSelect
    int medianOfThreePivot(int,int) -> medianOfThreePivot
    void swap(int,int) -> swap
com.badlogic.gdx.utils.ReflectionPool -> com.badlogic.gdx.utils.ReflectionPool:
    com.badlogic.gdx.utils.reflect.Constructor constructor -> constructor
    com.badlogic.gdx.utils.reflect.Constructor findConstructor(java.lang.Class) -> findConstructor
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.Scaling -> com.badlogic.gdx.utils.Scaling:
    com.badlogic.gdx.utils.Scaling fit -> fit
    com.badlogic.gdx.utils.Scaling fill -> fill
    com.badlogic.gdx.utils.Scaling fillX -> fillX
    com.badlogic.gdx.utils.Scaling fillY -> fillY
    com.badlogic.gdx.utils.Scaling stretch -> stretch
    com.badlogic.gdx.utils.Scaling stretchX -> stretchX
    com.badlogic.gdx.utils.Scaling stretchY -> stretchY
    com.badlogic.gdx.utils.Scaling none -> none
    com.badlogic.gdx.math.Vector2 temp -> temp
    com.badlogic.gdx.utils.Scaling[] $VALUES -> $VALUES
    com.badlogic.gdx.utils.Scaling[] values() -> values
    com.badlogic.gdx.utils.Scaling valueOf(java.lang.String) -> valueOf
    com.badlogic.gdx.math.Vector2 apply(float,float,float,float) -> apply
com.badlogic.gdx.utils.Scaling$1 -> com.badlogic.gdx.utils.Scaling$1:
    int[] $SwitchMap$com$badlogic$gdx$utils$Scaling -> $SwitchMap$com$badlogic$gdx$utils$Scaling
com.badlogic.gdx.utils.ScreenUtils -> com.badlogic.gdx.utils.ScreenUtils:
    com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture() -> getFrameBufferTexture
    com.badlogic.gdx.graphics.g2d.TextureRegion getFrameBufferTexture(int,int,int,int) -> getFrameBufferTexture
    com.badlogic.gdx.graphics.Pixmap getFrameBufferPixmap(int,int,int,int) -> getFrameBufferPixmap
    byte[] getFrameBufferPixels(boolean) -> getFrameBufferPixels
    byte[] getFrameBufferPixels(int,int,int,int,boolean) -> getFrameBufferPixels
com.badlogic.gdx.utils.Select -> com.badlogic.gdx.utils.Select:
    com.badlogic.gdx.utils.Select instance -> instance
    com.badlogic.gdx.utils.QuickSelect quickSelect -> quickSelect
    com.badlogic.gdx.utils.Select instance() -> instance
    java.lang.Object select(java.lang.Object[],java.util.Comparator,int,int) -> select
    int selectIndex(java.lang.Object[],java.util.Comparator,int,int) -> selectIndex
    int fastMin(java.lang.Object[],java.util.Comparator,int) -> fastMin
    int fastMax(java.lang.Object[],java.util.Comparator,int) -> fastMax
com.badlogic.gdx.utils.SerializationException -> com.badlogic.gdx.utils.SerializationException:
    java.lang.StringBuffer trace -> trace
    boolean causedBy(java.lang.Class) -> causedBy
    boolean causedBy(java.lang.Throwable,java.lang.Class) -> causedBy
    java.lang.String getMessage() -> getMessage
    void addTrace(java.lang.String) -> addTrace
com.badlogic.gdx.utils.SharedLibraryLoader -> com.badlogic.gdx.utils.SharedLibraryLoader:
    boolean isWindows -> isWindows
    boolean isLinux -> isLinux
    boolean isMac -> isMac
    boolean isIos -> isIos
    boolean isAndroid -> isAndroid
    boolean isARM -> isARM
    boolean is64Bit -> is64Bit
    java.lang.String abi -> abi
    java.util.HashSet loadedLibraries -> loadedLibraries
    java.lang.String nativesJar -> nativesJar
    java.lang.String crc(java.io.InputStream) -> crc
    java.lang.String mapLibraryName(java.lang.String) -> mapLibraryName
    void load(java.lang.String) -> load
    java.io.InputStream readFile(java.lang.String) -> readFile
    java.io.File extractFile(java.lang.String,java.lang.String) -> extractFile
    java.io.File getExtractedFile(java.lang.String,java.lang.String) -> getExtractedFile
    boolean canWrite(java.io.File) -> canWrite
    boolean canExecute(java.io.File) -> canExecute
    java.io.File extractFile(java.lang.String,java.lang.String,java.io.File) -> extractFile
    void loadFile(java.lang.String) -> loadFile
    java.lang.Throwable loadFile(java.lang.String,java.lang.String,java.io.File) -> loadFile
com.badlogic.gdx.utils.ShortArray -> com.badlogic.gdx.utils.ShortArray:
    short[] items -> items
    int size -> size
    boolean ordered -> ordered
    void add(int) -> add
    void add(short) -> add
    void addAll(com.badlogic.gdx.utils.ShortArray) -> addAll
    void addAll(com.badlogic.gdx.utils.ShortArray,int,int) -> addAll
    void addAll(short[]) -> addAll
    void addAll(short[],int,int) -> addAll
    short get(int) -> get
    void set(int,short) -> set
    void incr(int,short) -> incr
    void mul(int,short) -> mul
    void insert(int,short) -> insert
    void swap(int,int) -> swap
    boolean contains(short) -> contains
    int indexOf(short) -> indexOf
    int lastIndexOf(char) -> lastIndexOf
    boolean removeValue(short) -> removeValue
    short removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.ShortArray) -> removeAll
    short pop() -> pop
    short peek() -> peek
    short first() -> first
    void clear() -> clear
    short[] shrink() -> shrink
    short[] ensureCapacity(int) -> ensureCapacity
    short[] resize(int) -> resize
    void sort() -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    short random() -> random
    short[] toArray() -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.ShortArray with(short[]) -> with
com.badlogic.gdx.utils.SnapshotArray -> com.badlogic.gdx.utils.SnapshotArray:
    java.lang.Object[] snapshot -> snapshot
    java.lang.Object[] recycled -> recycled
    int snapshots -> snapshots
    java.lang.Object[] begin() -> begin
    void end() -> end
    void modified() -> modified
    void set(int,java.lang.Object) -> set
    void insert(int,java.lang.Object) -> insert
    void swap(int,int) -> swap
    boolean removeValue(java.lang.Object,boolean) -> removeValue
    java.lang.Object removeIndex(int) -> removeIndex
    void removeRange(int,int) -> removeRange
    boolean removeAll(com.badlogic.gdx.utils.Array,boolean) -> removeAll
    java.lang.Object pop() -> pop
    void clear() -> clear
    void sort() -> sort
    void sort(java.util.Comparator) -> sort
    void reverse() -> reverse
    void shuffle() -> shuffle
    void truncate(int) -> truncate
    com.badlogic.gdx.utils.SnapshotArray with(java.lang.Object[]) -> with
com.badlogic.gdx.utils.Sort -> com.badlogic.gdx.utils.Sort:
    com.badlogic.gdx.utils.Sort instance -> instance
    com.badlogic.gdx.utils.TimSort timSort -> timSort
    com.badlogic.gdx.utils.ComparableTimSort comparableTimSort -> comparableTimSort
    void sort(com.badlogic.gdx.utils.Array) -> sort
    void sort(java.lang.Object[]) -> sort
    void sort(java.lang.Object[],int,int) -> sort
    void sort(com.badlogic.gdx.utils.Array,java.util.Comparator) -> sort
    void sort(java.lang.Object[],java.util.Comparator) -> sort
    void sort(java.lang.Object[],java.util.Comparator,int,int) -> sort
    com.badlogic.gdx.utils.Sort instance() -> instance
com.badlogic.gdx.utils.SortedIntList -> com.badlogic.gdx.utils.SortedIntList:
    com.badlogic.gdx.utils.SortedIntList$NodePool nodePool -> nodePool
    com.badlogic.gdx.utils.SortedIntList$Iterator iterator -> iterator
    int size -> size
    com.badlogic.gdx.utils.SortedIntList$Node first -> first
    java.lang.Object insert(int,java.lang.Object) -> insert
    java.lang.Object get(int) -> get
    void clear() -> clear
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.badlogic.gdx.utils.SortedIntList$Iterator -> com.badlogic.gdx.utils.SortedIntList$Iterator:
    com.badlogic.gdx.utils.SortedIntList$Node position -> position
    com.badlogic.gdx.utils.SortedIntList$Node previousPosition -> previousPosition
    com.badlogic.gdx.utils.SortedIntList this$0 -> this$0
    boolean hasNext() -> hasNext
    com.badlogic.gdx.utils.SortedIntList$Node next() -> next
    void remove() -> remove
    com.badlogic.gdx.utils.SortedIntList$Iterator reset() -> reset
    java.lang.Object next() -> next
com.badlogic.gdx.utils.SortedIntList$Node -> com.badlogic.gdx.utils.SortedIntList$Node:
    com.badlogic.gdx.utils.SortedIntList$Node p -> p
    com.badlogic.gdx.utils.SortedIntList$Node n -> n
    java.lang.Object value -> value
    int index -> index
com.badlogic.gdx.utils.SortedIntList$NodePool -> com.badlogic.gdx.utils.SortedIntList$NodePool:
    com.badlogic.gdx.utils.SortedIntList$Node newObject() -> newObject
    com.badlogic.gdx.utils.SortedIntList$Node obtain(com.badlogic.gdx.utils.SortedIntList$Node,com.badlogic.gdx.utils.SortedIntList$Node,java.lang.Object,int) -> obtain
    java.lang.Object newObject() -> newObject
com.badlogic.gdx.utils.StreamUtils -> com.badlogic.gdx.utils.StreamUtils:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    byte[] EMPTY_BYTES -> EMPTY_BYTES
    void copyStream(java.io.InputStream,java.io.OutputStream) -> copyStream
    void copyStream(java.io.InputStream,java.io.OutputStream,int) -> copyStream
    byte[] copyStreamToByteArray(java.io.InputStream) -> copyStreamToByteArray
    byte[] copyStreamToByteArray(java.io.InputStream,int) -> copyStreamToByteArray
    java.lang.String copyStreamToString(java.io.InputStream) -> copyStreamToString
    java.lang.String copyStreamToString(java.io.InputStream,int) -> copyStreamToString
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.badlogic.gdx.utils.StreamUtils$OptimizedByteArrayOutputStream -> com.badlogic.gdx.utils.StreamUtils$OptimizedByteArrayOutputStream:
    byte[] toByteArray() -> toByteArray
com.badlogic.gdx.utils.StringBuilder -> com.badlogic.gdx.utils.StringBuilder:
    int INITIAL_CAPACITY -> INITIAL_CAPACITY
    char[] chars -> chars
    int length -> length
    char[] digits -> digits
    int numChars(int,int) -> numChars
    int numChars(long,int) -> numChars
    char[] getValue() -> getValue
    void enlargeBuffer(int) -> enlargeBuffer
    void appendNull() -> appendNull
    void append0(char[]) -> append0
    void append0(char[],int,int) -> append0
    void append0(char) -> append0
    void append0(java.lang.String) -> append0
    void append0(java.lang.CharSequence,int,int) -> append0
    int capacity() -> capacity
    char charAt(int) -> charAt
    void delete0(int,int) -> delete0
    void deleteCharAt0(int) -> deleteCharAt0
    void ensureCapacity(int) -> ensureCapacity
    void getChars(int,int,char[],int) -> getChars
    void insert0(int,char[]) -> insert0
    void insert0(int,char[],int,int) -> insert0
    void insert0(int,char) -> insert0
    void insert0(int,java.lang.String) -> insert0
    void insert0(int,java.lang.CharSequence,int,int) -> insert0
    int length() -> length
    void move(int,int) -> move
    void replace0(int,int,java.lang.String) -> replace0
    void reverse0() -> reverse0
    void setCharAt(int,char) -> setCharAt
    void setLength(int) -> setLength
    java.lang.String substring(int) -> substring
    java.lang.String substring(int,int) -> substring
    java.lang.String toString() -> toString
    java.lang.CharSequence subSequence(int,int) -> subSequence
    int indexOf(java.lang.String) -> indexOf
    int indexOf(java.lang.String,int) -> indexOf
    int lastIndexOf(java.lang.String) -> lastIndexOf
    int lastIndexOf(java.lang.String,int) -> lastIndexOf
    void trimToSize() -> trimToSize
    int codePointAt(int) -> codePointAt
    int codePointBefore(int) -> codePointBefore
    int codePointCount(int,int) -> codePointCount
    int offsetByCodePoints(int,int) -> offsetByCodePoints
    com.badlogic.gdx.utils.StringBuilder append(boolean) -> append
    com.badlogic.gdx.utils.StringBuilder append(char) -> append
    com.badlogic.gdx.utils.StringBuilder append(int) -> append
    com.badlogic.gdx.utils.StringBuilder append(int,int) -> append
    com.badlogic.gdx.utils.StringBuilder append(int,int,char) -> append
    com.badlogic.gdx.utils.StringBuilder append(long) -> append
    com.badlogic.gdx.utils.StringBuilder append(long,int) -> append
    com.badlogic.gdx.utils.StringBuilder append(long,int,char) -> append
    com.badlogic.gdx.utils.StringBuilder append(float) -> append
    com.badlogic.gdx.utils.StringBuilder append(double) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.Object) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.String) -> append
    com.badlogic.gdx.utils.StringBuilder append(char[]) -> append
    com.badlogic.gdx.utils.StringBuilder append(char[],int,int) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence) -> append
    com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder) -> append
    com.badlogic.gdx.utils.StringBuilder append(java.lang.CharSequence,int,int) -> append
    com.badlogic.gdx.utils.StringBuilder append(com.badlogic.gdx.utils.StringBuilder,int,int) -> append
    com.badlogic.gdx.utils.StringBuilder appendCodePoint(int) -> appendCodePoint
    com.badlogic.gdx.utils.StringBuilder delete(int,int) -> delete
    com.badlogic.gdx.utils.StringBuilder deleteCharAt(int) -> deleteCharAt
    com.badlogic.gdx.utils.StringBuilder insert(int,boolean) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,char) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,int) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,long) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,float) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,double) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.Object) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.String) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,char[]) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,char[],int,int) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence) -> insert
    com.badlogic.gdx.utils.StringBuilder insert(int,java.lang.CharSequence,int,int) -> insert
    com.badlogic.gdx.utils.StringBuilder replace(int,int,java.lang.String) -> replace
    com.badlogic.gdx.utils.StringBuilder reverse() -> reverse
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.badlogic.gdx.utils.TextFormatter -> com.badlogic.gdx.utils.TextFormatter:
    java.text.MessageFormat messageFormat -> messageFormat
    com.badlogic.gdx.utils.StringBuilder buffer -> buffer
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    java.lang.String replaceEscapeChars(java.lang.String) -> replaceEscapeChars
    java.lang.String simpleFormat(java.lang.String,java.lang.Object[]) -> simpleFormat
com.badlogic.gdx.utils.TimSort -> com.badlogic.gdx.utils.TimSort:
    int MIN_MERGE -> MIN_MERGE
    java.lang.Object[] a -> a
    java.util.Comparator c -> c
    int MIN_GALLOP -> MIN_GALLOP
    int minGallop -> minGallop
    int INITIAL_TMP_STORAGE_LENGTH -> INITIAL_TMP_STORAGE_LENGTH
    java.lang.Object[] tmp -> tmp
    int tmpCount -> tmpCount
    int stackSize -> stackSize
    int[] runBase -> runBase
    int[] runLen -> runLen
    boolean DEBUG -> DEBUG
    void doSort(java.lang.Object[],java.util.Comparator,int,int) -> doSort
    void sort(java.lang.Object[],java.util.Comparator) -> sort
    void sort(java.lang.Object[],int,int,java.util.Comparator) -> sort
    void binarySort(java.lang.Object[],int,int,int,java.util.Comparator) -> binarySort
    int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator) -> countRunAndMakeAscending
    void reverseRange(java.lang.Object[],int,int) -> reverseRange
    int minRunLength(int) -> minRunLength
    void pushRun(int,int) -> pushRun
    void mergeCollapse() -> mergeCollapse
    void mergeForceCollapse() -> mergeForceCollapse
    void mergeAt(int) -> mergeAt
    int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> gallopLeft
    int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator) -> gallopRight
    void mergeLo(int,int,int,int) -> mergeLo
    void mergeHi(int,int,int,int) -> mergeHi
    java.lang.Object[] ensureCapacity(int) -> ensureCapacity
    void rangeCheck(int,int,int) -> rangeCheck
com.badlogic.gdx.utils.TimeUtils -> com.badlogic.gdx.utils.TimeUtils:
    long nanosPerMilli -> nanosPerMilli
    long nanoTime() -> nanoTime
    long millis() -> millis
    long nanosToMillis(long) -> nanosToMillis
    long millisToNanos(long) -> millisToNanos
    long timeSinceNanos(long) -> timeSinceNanos
    long timeSinceMillis(long) -> timeSinceMillis
com.badlogic.gdx.utils.Timer -> com.badlogic.gdx.utils.Timer:
    com.badlogic.gdx.utils.Array instances -> instances
    com.badlogic.gdx.utils.Timer$TimerThread thread -> thread
    int CANCELLED -> CANCELLED
    int FOREVER -> FOREVER
    com.badlogic.gdx.utils.Timer instance -> instance
    com.badlogic.gdx.utils.Array tasks -> tasks
    com.badlogic.gdx.utils.Timer instance() -> instance
    void postTask(com.badlogic.gdx.utils.Timer$Task) -> postTask
    void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float) -> scheduleTask
    void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float) -> scheduleTask
    void scheduleTask(com.badlogic.gdx.utils.Timer$Task,float,float,int) -> scheduleTask
    void stop() -> stop
    void start() -> start
    void clear() -> clear
    long update(long,long) -> update
    void delay(long) -> delay
    void wake() -> wake
    void post(com.badlogic.gdx.utils.Timer$Task) -> post
    void schedule(com.badlogic.gdx.utils.Timer$Task,float) -> schedule
    void schedule(com.badlogic.gdx.utils.Timer$Task,float,float) -> schedule
    void schedule(com.badlogic.gdx.utils.Timer$Task,float,float,int) -> schedule
    void checkStatics() -> checkStatics
com.badlogic.gdx.utils.Timer$Task -> com.badlogic.gdx.utils.Timer$Task:
    long executeTimeMillis -> executeTimeMillis
    long intervalMillis -> intervalMillis
    int repeatCount -> repeatCount
    void run() -> run
    void cancel() -> cancel
    boolean isScheduled() -> isScheduled
    long getExecuteTimeMillis() -> getExecuteTimeMillis
com.badlogic.gdx.utils.Timer$TimerThread -> com.badlogic.gdx.utils.Timer$TimerThread:
    com.badlogic.gdx.Application app -> app
    long pauseMillis -> pauseMillis
    void run() -> run
    void resume() -> resume
    void pause() -> pause
    void dispose() -> dispose
com.badlogic.gdx.utils.UBJsonReader -> com.badlogic.gdx.utils.UBJsonReader:
    boolean oldFormat -> oldFormat
    com.badlogic.gdx.utils.JsonValue parse(java.io.InputStream) -> parse
    com.badlogic.gdx.utils.JsonValue parse(com.badlogic.gdx.files.FileHandle) -> parse
    com.badlogic.gdx.utils.JsonValue parse(java.io.DataInputStream) -> parse
    com.badlogic.gdx.utils.JsonValue parse(java.io.DataInputStream,byte) -> parse
    com.badlogic.gdx.utils.JsonValue parseArray(java.io.DataInputStream) -> parseArray
    com.badlogic.gdx.utils.JsonValue parseObject(java.io.DataInputStream) -> parseObject
    com.badlogic.gdx.utils.JsonValue parseData(java.io.DataInputStream,byte) -> parseData
    java.lang.String parseString(java.io.DataInputStream,byte) -> parseString
    java.lang.String parseString(java.io.DataInputStream,boolean,byte) -> parseString
    long parseSize(java.io.DataInputStream,boolean,long) -> parseSize
    long parseSize(java.io.DataInputStream,byte,boolean,long) -> parseSize
    short readUChar(java.io.DataInputStream) -> readUChar
    int readUShort(java.io.DataInputStream) -> readUShort
    long readUInt(java.io.DataInputStream) -> readUInt
    java.lang.String readString(java.io.DataInputStream,long) -> readString
com.badlogic.gdx.utils.UBJsonWriter -> com.badlogic.gdx.utils.UBJsonWriter:
    java.io.DataOutputStream out -> out
    com.badlogic.gdx.utils.UBJsonWriter$JsonObject current -> current
    boolean named -> named
    com.badlogic.gdx.utils.Array stack -> stack
    com.badlogic.gdx.utils.UBJsonWriter object() -> object
    com.badlogic.gdx.utils.UBJsonWriter object(java.lang.String) -> object
    com.badlogic.gdx.utils.UBJsonWriter array() -> array
    com.badlogic.gdx.utils.UBJsonWriter array(java.lang.String) -> array
    com.badlogic.gdx.utils.UBJsonWriter name(java.lang.String) -> name
    com.badlogic.gdx.utils.UBJsonWriter value(byte) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(short) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(int) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(long) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(float) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(double) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(boolean) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(char) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(java.lang.String) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(byte[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(short[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(int[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(long[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(float[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(double[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(boolean[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(char[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(java.lang.String[]) -> value
    com.badlogic.gdx.utils.UBJsonWriter value(java.lang.Object) -> value
    com.badlogic.gdx.utils.UBJsonWriter value() -> value
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,byte) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,short) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,int) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,long) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,float) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,double) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,boolean) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,char) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,java.lang.String) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,byte[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,short[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,int[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,long[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,float[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,double[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,boolean[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,char[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String,java.lang.String[]) -> set
    com.badlogic.gdx.utils.UBJsonWriter set(java.lang.String) -> set
    void checkName() -> checkName
    com.badlogic.gdx.utils.UBJsonWriter pop() -> pop
    com.badlogic.gdx.utils.UBJsonWriter pop(boolean) -> pop
    void flush() -> flush
    void close() -> close
com.badlogic.gdx.utils.UBJsonWriter$JsonObject -> com.badlogic.gdx.utils.UBJsonWriter$JsonObject:
    boolean array -> array
    com.badlogic.gdx.utils.UBJsonWriter this$0 -> this$0
    void close() -> close
com.badlogic.gdx.utils.XmlReader -> com.badlogic.gdx.utils.XmlReader:
    com.badlogic.gdx.utils.Array elements -> elements
    com.badlogic.gdx.utils.XmlReader$Element root -> root
    com.badlogic.gdx.utils.XmlReader$Element current -> current
    com.badlogic.gdx.utils.StringBuilder textBuffer -> textBuffer
    byte[] _xml_actions -> _xml_actions
    byte[] _xml_key_offsets -> _xml_key_offsets
    char[] _xml_trans_keys -> _xml_trans_keys
    byte[] _xml_single_lengths -> _xml_single_lengths
    byte[] _xml_range_lengths -> _xml_range_lengths
    short[] _xml_index_offsets -> _xml_index_offsets
    byte[] _xml_indicies -> _xml_indicies
    byte[] _xml_trans_targs -> _xml_trans_targs
    byte[] _xml_trans_actions -> _xml_trans_actions
    int xml_start -> xml_start
    int xml_first_final -> xml_first_final
    int xml_error -> xml_error
    int xml_en_elementBody -> xml_en_elementBody
    int xml_en_main -> xml_en_main
    com.badlogic.gdx.utils.XmlReader$Element parse(java.lang.String) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(java.io.Reader) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(java.io.InputStream) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(com.badlogic.gdx.files.FileHandle) -> parse
    com.badlogic.gdx.utils.XmlReader$Element parse(char[],int,int) -> parse
    byte[] init__xml_actions_0() -> init__xml_actions_0
    byte[] init__xml_key_offsets_0() -> init__xml_key_offsets_0
    char[] init__xml_trans_keys_0() -> init__xml_trans_keys_0
    byte[] init__xml_single_lengths_0() -> init__xml_single_lengths_0
    byte[] init__xml_range_lengths_0() -> init__xml_range_lengths_0
    short[] init__xml_index_offsets_0() -> init__xml_index_offsets_0
    byte[] init__xml_indicies_0() -> init__xml_indicies_0
    byte[] init__xml_trans_targs_0() -> init__xml_trans_targs_0
    byte[] init__xml_trans_actions_0() -> init__xml_trans_actions_0
    void open(java.lang.String) -> open
    void attribute(java.lang.String,java.lang.String) -> attribute
    java.lang.String entity(java.lang.String) -> entity
    void text(java.lang.String) -> text
    void close() -> close
com.badlogic.gdx.utils.XmlReader$Element -> com.badlogic.gdx.utils.XmlReader$Element:
    java.lang.String name -> name
    com.badlogic.gdx.utils.ObjectMap attributes -> attributes
    com.badlogic.gdx.utils.Array children -> children
    java.lang.String text -> text
    com.badlogic.gdx.utils.XmlReader$Element parent -> parent
    java.lang.String getName() -> getName
    com.badlogic.gdx.utils.ObjectMap getAttributes() -> getAttributes
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(java.lang.String,java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    int getChildCount() -> getChildCount
    com.badlogic.gdx.utils.XmlReader$Element getChild(int) -> getChild
    void addChild(com.badlogic.gdx.utils.XmlReader$Element) -> addChild
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    void removeChild(int) -> removeChild
    void removeChild(com.badlogic.gdx.utils.XmlReader$Element) -> removeChild
    void remove() -> remove
    com.badlogic.gdx.utils.XmlReader$Element getParent() -> getParent
    java.lang.String toString() -> toString
    java.lang.String toString(java.lang.String) -> toString
    com.badlogic.gdx.utils.XmlReader$Element getChildByName(java.lang.String) -> getChildByName
    com.badlogic.gdx.utils.XmlReader$Element getChildByNameRecursive(java.lang.String) -> getChildByNameRecursive
    com.badlogic.gdx.utils.Array getChildrenByName(java.lang.String) -> getChildrenByName
    com.badlogic.gdx.utils.Array getChildrenByNameRecursively(java.lang.String) -> getChildrenByNameRecursively
    void getChildrenByNameRecursively(java.lang.String,com.badlogic.gdx.utils.Array) -> getChildrenByNameRecursively
    float getFloatAttribute(java.lang.String) -> getFloatAttribute
    float getFloatAttribute(java.lang.String,float) -> getFloatAttribute
    int getIntAttribute(java.lang.String) -> getIntAttribute
    int getIntAttribute(java.lang.String,int) -> getIntAttribute
    boolean getBooleanAttribute(java.lang.String) -> getBooleanAttribute
    boolean getBooleanAttribute(java.lang.String,boolean) -> getBooleanAttribute
    java.lang.String get(java.lang.String) -> get
    java.lang.String get(java.lang.String,java.lang.String) -> get
    int getInt(java.lang.String) -> getInt
    int getInt(java.lang.String,int) -> getInt
    float getFloat(java.lang.String) -> getFloat
    float getFloat(java.lang.String,float) -> getFloat
    boolean getBoolean(java.lang.String) -> getBoolean
    boolean getBoolean(java.lang.String,boolean) -> getBoolean
com.badlogic.gdx.utils.XmlWriter -> com.badlogic.gdx.utils.XmlWriter:
    java.io.Writer writer -> writer
    com.badlogic.gdx.utils.Array stack -> stack
    java.lang.String currentElement -> currentElement
    boolean indentNextClose -> indentNextClose
    int indent -> indent
    void indent() -> indent
    com.badlogic.gdx.utils.XmlWriter element(java.lang.String) -> element
    com.badlogic.gdx.utils.XmlWriter element(java.lang.String,java.lang.Object) -> element
    boolean startElementContent() -> startElementContent
    com.badlogic.gdx.utils.XmlWriter attribute(java.lang.String,java.lang.Object) -> attribute
    com.badlogic.gdx.utils.XmlWriter text(java.lang.Object) -> text
    com.badlogic.gdx.utils.XmlWriter pop() -> pop
    void close() -> close
    void write(char[],int,int) -> write
    void flush() -> flush
com.badlogic.gdx.utils.async.AsyncExecutor -> com.badlogic.gdx.utils.async.AsyncExecutor:
    java.util.concurrent.ExecutorService executor -> executor
    com.badlogic.gdx.utils.async.AsyncResult submit(com.badlogic.gdx.utils.async.AsyncTask) -> submit
    void dispose() -> dispose
com.badlogic.gdx.utils.async.AsyncExecutor$1 -> com.badlogic.gdx.utils.async.AsyncExecutor$1:
    com.badlogic.gdx.utils.async.AsyncExecutor this$0 -> this$0
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.badlogic.gdx.utils.async.AsyncExecutor$2 -> com.badlogic.gdx.utils.async.AsyncExecutor$2:
    com.badlogic.gdx.utils.async.AsyncTask val$task -> val$task
    com.badlogic.gdx.utils.async.AsyncExecutor this$0 -> this$0
    java.lang.Object call() -> call
com.badlogic.gdx.utils.async.AsyncResult -> com.badlogic.gdx.utils.async.AsyncResult:
    java.util.concurrent.Future future -> future
    boolean isDone() -> isDone
    java.lang.Object get() -> get
com.badlogic.gdx.utils.async.AsyncTask -> com.badlogic.gdx.utils.async.AsyncTask:
    java.lang.Object call() -> call
com.badlogic.gdx.utils.async.ThreadUtils -> com.badlogic.gdx.utils.async.ThreadUtils:
    void yield() -> yield
com.badlogic.gdx.utils.compression.CRC -> com.badlogic.gdx.utils.compression.CRC:
    int[] Table -> Table
    int _value -> _value
    void Init() -> Init
    void Update(byte[],int,int) -> Update
    void Update(byte[]) -> Update
    void UpdateByte(int) -> UpdateByte
    int GetDigest() -> GetDigest
com.badlogic.gdx.utils.compression.ICodeProgress -> com.badlogic.gdx.utils.compression.ICodeProgress:
    void SetProgress(long,long) -> SetProgress
com.badlogic.gdx.utils.compression.Lzma -> com.badlogic.gdx.utils.compression.Lzma:
    void compress(java.io.InputStream,java.io.OutputStream) -> compress
    void decompress(java.io.InputStream,java.io.OutputStream) -> decompress
com.badlogic.gdx.utils.compression.Lzma$CommandLine -> com.badlogic.gdx.utils.compression.Lzma$CommandLine:
    int kEncode -> kEncode
    int kDecode -> kDecode
    int kBenchmak -> kBenchmak
    int Command -> Command
    int NumBenchmarkPasses -> NumBenchmarkPasses
    int DictionarySize -> DictionarySize
    boolean DictionarySizeIsDefined -> DictionarySizeIsDefined
    int Lc -> Lc
    int Lp -> Lp
    int Pb -> Pb
    int Fb -> Fb
    boolean FbIsDefined -> FbIsDefined
    boolean Eos -> Eos
    int Algorithm -> Algorithm
    int MatchFinder -> MatchFinder
    java.lang.String InFile -> InFile
    java.lang.String OutFile -> OutFile
com.badlogic.gdx.utils.compression.lz.BinTree -> com.badlogic.gdx.utils.compression.lz.BinTree:
    int _cyclicBufferPos -> _cyclicBufferPos
    int _cyclicBufferSize -> _cyclicBufferSize
    int _matchMaxLen -> _matchMaxLen
    int[] _son -> _son
    int[] _hash -> _hash
    int _cutValue -> _cutValue
    int _hashMask -> _hashMask
    int _hashSizeSum -> _hashSizeSum
    boolean HASH_ARRAY -> HASH_ARRAY
    int kHash2Size -> kHash2Size
    int kHash3Size -> kHash3Size
    int kBT2HashSize -> kBT2HashSize
    int kStartMaxLen -> kStartMaxLen
    int kHash3Offset -> kHash3Offset
    int kEmptyHashValue -> kEmptyHashValue
    int kMaxValForNormalize -> kMaxValForNormalize
    int kNumHashDirectBytes -> kNumHashDirectBytes
    int kMinMatchCheck -> kMinMatchCheck
    int kFixHashSize -> kFixHashSize
    int[] CrcTable -> CrcTable
    void SetType(int) -> SetType
    void Init() -> Init
    void MovePos() -> MovePos
    boolean Create(int,int,int,int) -> Create
    int GetMatches(int[]) -> GetMatches
    void Skip(int) -> Skip
    void NormalizeLinks(int[],int,int) -> NormalizeLinks
    void Normalize() -> Normalize
    void SetCutValue(int) -> SetCutValue
com.badlogic.gdx.utils.compression.lz.InWindow -> com.badlogic.gdx.utils.compression.lz.InWindow:
    byte[] _bufferBase -> _bufferBase
    java.io.InputStream _stream -> _stream
    int _posLimit -> _posLimit
    boolean _streamEndWasReached -> _streamEndWasReached
    int _pointerToLastSafePosition -> _pointerToLastSafePosition
    int _bufferOffset -> _bufferOffset
    int _blockSize -> _blockSize
    int _pos -> _pos
    int _keepSizeBefore -> _keepSizeBefore
    int _keepSizeAfter -> _keepSizeAfter
    int _streamPos -> _streamPos
    void MoveBlock() -> MoveBlock
    void ReadBlock() -> ReadBlock
    void Free() -> Free
    void Create(int,int,int) -> Create
    void SetStream(java.io.InputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init() -> Init
    void MovePos() -> MovePos
    byte GetIndexByte(int) -> GetIndexByte
    int GetMatchLen(int,int,int) -> GetMatchLen
    int GetNumAvailableBytes() -> GetNumAvailableBytes
    void ReduceOffsets(int) -> ReduceOffsets
com.badlogic.gdx.utils.compression.lz.OutWindow -> com.badlogic.gdx.utils.compression.lz.OutWindow:
    byte[] _buffer -> _buffer
    int _pos -> _pos
    int _windowSize -> _windowSize
    int _streamPos -> _streamPos
    java.io.OutputStream _stream -> _stream
    void Create(int) -> Create
    void SetStream(java.io.OutputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init(boolean) -> Init
    void Flush() -> Flush
    void CopyBlock(int,int) -> CopyBlock
    void PutByte(byte) -> PutByte
    byte GetByte(int) -> GetByte
com.badlogic.gdx.utils.compression.lzma.Base -> com.badlogic.gdx.utils.compression.lzma.Base:
    int kNumRepDistances -> kNumRepDistances
    int kNumStates -> kNumStates
    int kNumPosSlotBits -> kNumPosSlotBits
    int kDicLogSizeMin -> kDicLogSizeMin
    int kNumLenToPosStatesBits -> kNumLenToPosStatesBits
    int kNumLenToPosStates -> kNumLenToPosStates
    int kMatchMinLen -> kMatchMinLen
    int kNumAlignBits -> kNumAlignBits
    int kAlignTableSize -> kAlignTableSize
    int kAlignMask -> kAlignMask
    int kStartPosModelIndex -> kStartPosModelIndex
    int kEndPosModelIndex -> kEndPosModelIndex
    int kNumPosModels -> kNumPosModels
    int kNumFullDistances -> kNumFullDistances
    int kNumLitPosStatesBitsEncodingMax -> kNumLitPosStatesBitsEncodingMax
    int kNumLitContextBitsMax -> kNumLitContextBitsMax
    int kNumPosStatesBitsMax -> kNumPosStatesBitsMax
    int kNumPosStatesMax -> kNumPosStatesMax
    int kNumPosStatesBitsEncodingMax -> kNumPosStatesBitsEncodingMax
    int kNumPosStatesEncodingMax -> kNumPosStatesEncodingMax
    int kNumLowLenBits -> kNumLowLenBits
    int kNumMidLenBits -> kNumMidLenBits
    int kNumHighLenBits -> kNumHighLenBits
    int kNumLowLenSymbols -> kNumLowLenSymbols
    int kNumMidLenSymbols -> kNumMidLenSymbols
    int kNumLenSymbols -> kNumLenSymbols
    int kMatchMaxLen -> kMatchMaxLen
    int StateInit() -> StateInit
    int StateUpdateChar(int) -> StateUpdateChar
    int StateUpdateMatch(int) -> StateUpdateMatch
    int StateUpdateRep(int) -> StateUpdateRep
    int StateUpdateShortRep(int) -> StateUpdateShortRep
    boolean StateIsCharState(int) -> StateIsCharState
    int GetLenToPosState(int) -> GetLenToPosState
com.badlogic.gdx.utils.compression.lzma.Decoder -> com.badlogic.gdx.utils.compression.lzma.Decoder:
    com.badlogic.gdx.utils.compression.lz.OutWindow m_OutWindow -> m_OutWindow
    com.badlogic.gdx.utils.compression.rangecoder.Decoder m_RangeDecoder -> m_RangeDecoder
    short[] m_IsMatchDecoders -> m_IsMatchDecoders
    short[] m_IsRepDecoders -> m_IsRepDecoders
    short[] m_IsRepG0Decoders -> m_IsRepG0Decoders
    short[] m_IsRepG1Decoders -> m_IsRepG1Decoders
    short[] m_IsRepG2Decoders -> m_IsRepG2Decoders
    short[] m_IsRep0LongDecoders -> m_IsRep0LongDecoders
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_PosSlotDecoder -> m_PosSlotDecoder
    short[] m_PosDecoders -> m_PosDecoders
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder m_PosAlignDecoder -> m_PosAlignDecoder
    com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder m_LenDecoder -> m_LenDecoder
    com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder m_RepLenDecoder -> m_RepLenDecoder
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder m_LiteralDecoder -> m_LiteralDecoder
    int m_DictionarySize -> m_DictionarySize
    int m_DictionarySizeCheck -> m_DictionarySizeCheck
    int m_PosStateMask -> m_PosStateMask
    boolean SetDictionarySize(int) -> SetDictionarySize
    boolean SetLcLpPb(int,int,int) -> SetLcLpPb
    void Init() -> Init
    boolean Code(java.io.InputStream,java.io.OutputStream,long) -> Code
    boolean SetDecoderProperties(byte[]) -> SetDecoderProperties
com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder -> com.badlogic.gdx.utils.compression.lzma.Decoder$LenDecoder:
    short[] m_Choice -> m_Choice
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_LowCoder -> m_LowCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder[] m_MidCoder -> m_MidCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder m_HighCoder -> m_HighCoder
    int m_NumPosStates -> m_NumPosStates
    com.badlogic.gdx.utils.compression.lzma.Decoder this$0 -> this$0
    void Create(int) -> Create
    void Init() -> Init
    int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder,int) -> Decode
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder -> com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder:
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2[] m_Coders -> m_Coders
    int m_NumPrevBits -> m_NumPrevBits
    int m_NumPosBits -> m_NumPosBits
    int m_PosMask -> m_PosMask
    com.badlogic.gdx.utils.compression.lzma.Decoder this$0 -> this$0
    void Create(int,int) -> Create
    void Init() -> Init
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2 GetDecoder(int,byte) -> GetDecoder
com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2 -> com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder$Decoder2:
    short[] m_Decoders -> m_Decoders
    com.badlogic.gdx.utils.compression.lzma.Decoder$LiteralDecoder this$1 -> this$1
    void Init() -> Init
    byte DecodeNormal(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> DecodeNormal
    byte DecodeWithMatchByte(com.badlogic.gdx.utils.compression.rangecoder.Decoder,byte) -> DecodeWithMatchByte
com.badlogic.gdx.utils.compression.lzma.Encoder -> com.badlogic.gdx.utils.compression.lzma.Encoder:
    int EMatchFinderTypeBT2 -> EMatchFinderTypeBT2
    int EMatchFinderTypeBT4 -> EMatchFinderTypeBT4
    int kIfinityPrice -> kIfinityPrice
    byte[] g_FastPos -> g_FastPos
    int _state -> _state
    byte _previousByte -> _previousByte
    int[] _repDistances -> _repDistances
    int kDefaultDictionaryLogSize -> kDefaultDictionaryLogSize
    int kNumFastBytesDefault -> kNumFastBytesDefault
    int kNumLenSpecSymbols -> kNumLenSpecSymbols
    int kNumOpts -> kNumOpts
    com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal[] _optimum -> _optimum
    com.badlogic.gdx.utils.compression.lz.BinTree _matchFinder -> _matchFinder
    com.badlogic.gdx.utils.compression.rangecoder.Encoder _rangeEncoder -> _rangeEncoder
    short[] _isMatch -> _isMatch
    short[] _isRep -> _isRep
    short[] _isRepG0 -> _isRepG0
    short[] _isRepG1 -> _isRepG1
    short[] _isRepG2 -> _isRepG2
    short[] _isRep0Long -> _isRep0Long
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _posSlotEncoder -> _posSlotEncoder
    short[] _posEncoders -> _posEncoders
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder _posAlignEncoder -> _posAlignEncoder
    com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder _lenEncoder -> _lenEncoder
    com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder _repMatchLenEncoder -> _repMatchLenEncoder
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder _literalEncoder -> _literalEncoder
    int[] _matchDistances -> _matchDistances
    int _numFastBytes -> _numFastBytes
    int _longestMatchLength -> _longestMatchLength
    int _numDistancePairs -> _numDistancePairs
    int _additionalOffset -> _additionalOffset
    int _optimumEndIndex -> _optimumEndIndex
    int _optimumCurrentIndex -> _optimumCurrentIndex
    boolean _longestMatchWasFound -> _longestMatchWasFound
    int[] _posSlotPrices -> _posSlotPrices
    int[] _distancesPrices -> _distancesPrices
    int[] _alignPrices -> _alignPrices
    int _alignPriceCount -> _alignPriceCount
    int _distTableSize -> _distTableSize
    int _posStateBits -> _posStateBits
    int _posStateMask -> _posStateMask
    int _numLiteralPosStateBits -> _numLiteralPosStateBits
    int _numLiteralContextBits -> _numLiteralContextBits
    int _dictionarySize -> _dictionarySize
    int _dictionarySizePrev -> _dictionarySizePrev
    int _numFastBytesPrev -> _numFastBytesPrev
    long nowPos64 -> nowPos64
    boolean _finished -> _finished
    java.io.InputStream _inStream -> _inStream
    int _matchFinderType -> _matchFinderType
    boolean _writeEndMark -> _writeEndMark
    boolean _needReleaseMFStream -> _needReleaseMFStream
    int[] reps -> reps
    int[] repLens -> repLens
    int backRes -> backRes
    long[] processedInSize -> processedInSize
    long[] processedOutSize -> processedOutSize
    boolean[] finished -> finished
    int kPropSize -> kPropSize
    byte[] properties -> properties
    int[] tempPrices -> tempPrices
    int _matchPriceCount -> _matchPriceCount
    int GetPosSlot(int) -> GetPosSlot
    int GetPosSlot2(int) -> GetPosSlot2
    void BaseInit() -> BaseInit
    void Create() -> Create
    void SetWriteEndMarkerMode(boolean) -> SetWriteEndMarkerMode
    void Init() -> Init
    int ReadMatchDistances() -> ReadMatchDistances
    void MovePos(int) -> MovePos
    int GetRepLen1Price(int,int) -> GetRepLen1Price
    int GetPureRepPrice(int,int,int) -> GetPureRepPrice
    int GetRepPrice(int,int,int,int) -> GetRepPrice
    int GetPosLenPrice(int,int,int) -> GetPosLenPrice
    int Backward(int) -> Backward
    int GetOptimum(int) -> GetOptimum
    boolean ChangePair(int,int) -> ChangePair
    void WriteEndMarker(int) -> WriteEndMarker
    void Flush(int) -> Flush
    void CodeOneBlock(long[],long[],boolean[]) -> CodeOneBlock
    void ReleaseMFStream() -> ReleaseMFStream
    void SetOutStream(java.io.OutputStream) -> SetOutStream
    void ReleaseOutStream() -> ReleaseOutStream
    void ReleaseStreams() -> ReleaseStreams
    void SetStreams(java.io.InputStream,java.io.OutputStream,long,long) -> SetStreams
    void Code(java.io.InputStream,java.io.OutputStream,long,long,com.badlogic.gdx.utils.compression.ICodeProgress) -> Code
    void WriteCoderProperties(java.io.OutputStream) -> WriteCoderProperties
    void FillDistancesPrices() -> FillDistancesPrices
    void FillAlignPrices() -> FillAlignPrices
    boolean SetAlgorithm(int) -> SetAlgorithm
    boolean SetDictionarySize(int) -> SetDictionarySize
    boolean SetNumFastBytes(int) -> SetNumFastBytes
    boolean SetMatchFinder(int) -> SetMatchFinder
    boolean SetLcLpPb(int,int,int) -> SetLcLpPb
    void SetEndMarkerMode(boolean) -> SetEndMarkerMode
com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder -> com.badlogic.gdx.utils.compression.lzma.Encoder$LenEncoder:
    short[] _choice -> _choice
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _lowCoder -> _lowCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder[] _midCoder -> _midCoder
    com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder _highCoder -> _highCoder
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void Init(int) -> Init
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> Encode
    void SetPrices(int,int,int[],int) -> SetPrices
com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder -> com.badlogic.gdx.utils.compression.lzma.Encoder$LenPriceTableEncoder:
    int[] _prices -> _prices
    int _tableSize -> _tableSize
    int[] _counters -> _counters
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void SetTableSize(int) -> SetTableSize
    int GetPrice(int,int) -> GetPrice
    void UpdateTable(int) -> UpdateTable
    void UpdateTables(int) -> UpdateTables
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> Encode
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder -> com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder:
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2[] m_Coders -> m_Coders
    int m_NumPrevBits -> m_NumPrevBits
    int m_NumPosBits -> m_NumPosBits
    int m_PosMask -> m_PosMask
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void Create(int,int) -> Create
    void Init() -> Init
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2 GetSubCoder(int,byte) -> GetSubCoder
com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2 -> com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder$Encoder2:
    short[] m_Encoders -> m_Encoders
    com.badlogic.gdx.utils.compression.lzma.Encoder$LiteralEncoder this$1 -> this$1
    void Init() -> Init
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte) -> Encode
    void EncodeMatched(com.badlogic.gdx.utils.compression.rangecoder.Encoder,byte,byte) -> EncodeMatched
    int GetPrice(boolean,byte,byte) -> GetPrice
com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal -> com.badlogic.gdx.utils.compression.lzma.Encoder$Optimal:
    int State -> State
    boolean Prev1IsChar -> Prev1IsChar
    boolean Prev2 -> Prev2
    int PosPrev2 -> PosPrev2
    int BackPrev2 -> BackPrev2
    int Price -> Price
    int PosPrev -> PosPrev
    int BackPrev -> BackPrev
    int Backs0 -> Backs0
    int Backs1 -> Backs1
    int Backs2 -> Backs2
    int Backs3 -> Backs3
    com.badlogic.gdx.utils.compression.lzma.Encoder this$0 -> this$0
    void MakeAsChar() -> MakeAsChar
    void MakeAsShortRep() -> MakeAsShortRep
    boolean IsShortRep() -> IsShortRep
com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder -> com.badlogic.gdx.utils.compression.rangecoder.BitTreeDecoder:
    short[] Models -> Models
    int NumBitLevels -> NumBitLevels
    void Init() -> Init
    int Decode(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> Decode
    int ReverseDecode(com.badlogic.gdx.utils.compression.rangecoder.Decoder) -> ReverseDecode
    int ReverseDecode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Decoder,int) -> ReverseDecode
com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder -> com.badlogic.gdx.utils.compression.rangecoder.BitTreeEncoder:
    short[] Models -> Models
    int NumBitLevels -> NumBitLevels
    void Init() -> Init
    void Encode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int) -> Encode
    void ReverseEncode(com.badlogic.gdx.utils.compression.rangecoder.Encoder,int) -> ReverseEncode
    int GetPrice(int) -> GetPrice
    int ReverseGetPrice(int) -> ReverseGetPrice
    int ReverseGetPrice(short[],int,int,int) -> ReverseGetPrice
    void ReverseEncode(short[],int,com.badlogic.gdx.utils.compression.rangecoder.Encoder,int,int) -> ReverseEncode
com.badlogic.gdx.utils.compression.rangecoder.Decoder -> com.badlogic.gdx.utils.compression.rangecoder.Decoder:
    int kTopMask -> kTopMask
    int kNumBitModelTotalBits -> kNumBitModelTotalBits
    int kBitModelTotal -> kBitModelTotal
    int kNumMoveBits -> kNumMoveBits
    int Range -> Range
    int Code -> Code
    java.io.InputStream Stream -> Stream
    void SetStream(java.io.InputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init() -> Init
    int DecodeDirectBits(int) -> DecodeDirectBits
    int DecodeBit(short[],int) -> DecodeBit
    void InitBitModels(short[]) -> InitBitModels
com.badlogic.gdx.utils.compression.rangecoder.Encoder -> com.badlogic.gdx.utils.compression.rangecoder.Encoder:
    int kTopMask -> kTopMask
    int kNumBitModelTotalBits -> kNumBitModelTotalBits
    int kBitModelTotal -> kBitModelTotal
    int kNumMoveBits -> kNumMoveBits
    java.io.OutputStream Stream -> Stream
    long Low -> Low
    int Range -> Range
    int _cacheSize -> _cacheSize
    int _cache -> _cache
    long _position -> _position
    int kNumMoveReducingBits -> kNumMoveReducingBits
    int kNumBitPriceShiftBits -> kNumBitPriceShiftBits
    int[] ProbPrices -> ProbPrices
    void SetStream(java.io.OutputStream) -> SetStream
    void ReleaseStream() -> ReleaseStream
    void Init() -> Init
    void FlushData() -> FlushData
    void FlushStream() -> FlushStream
    void ShiftLow() -> ShiftLow
    void EncodeDirectBits(int,int) -> EncodeDirectBits
    long GetProcessedSizeAdd() -> GetProcessedSizeAdd
    void InitBitModels(short[]) -> InitBitModels
    void Encode(short[],int,int) -> Encode
    int GetPrice(int,int) -> GetPrice
    int GetPrice0(int) -> GetPrice0
    int GetPrice1(int) -> GetPrice1
com.badlogic.gdx.utils.reflect.ArrayReflection -> com.badlogic.gdx.utils.reflect.ArrayReflection:
    java.lang.Object newInstance(java.lang.Class,int) -> newInstance
    int getLength(java.lang.Object) -> getLength
    java.lang.Object get(java.lang.Object,int) -> get
    void set(java.lang.Object,int,java.lang.Object) -> set
com.badlogic.gdx.utils.reflect.ClassReflection -> com.badlogic.gdx.utils.reflect.ClassReflection:
    java.lang.Class forName(java.lang.String) -> forName
    java.lang.String getSimpleName(java.lang.Class) -> getSimpleName
    boolean isInstance(java.lang.Class,java.lang.Object) -> isInstance
    boolean isAssignableFrom(java.lang.Class,java.lang.Class) -> isAssignableFrom
    boolean isMemberClass(java.lang.Class) -> isMemberClass
    boolean isStaticClass(java.lang.Class) -> isStaticClass
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    com.badlogic.gdx.utils.reflect.Constructor[] getConstructors(java.lang.Class) -> getConstructors
    com.badlogic.gdx.utils.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]) -> getConstructor
    com.badlogic.gdx.utils.reflect.Constructor getDeclaredConstructor(java.lang.Class,java.lang.Class[]) -> getDeclaredConstructor
    com.badlogic.gdx.utils.reflect.Method[] getMethods(java.lang.Class) -> getMethods
    com.badlogic.gdx.utils.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    com.badlogic.gdx.utils.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    com.badlogic.gdx.utils.reflect.Method getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getDeclaredMethod
    com.badlogic.gdx.utils.reflect.Field[] getFields(java.lang.Class) -> getFields
    com.badlogic.gdx.utils.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    com.badlogic.gdx.utils.reflect.Field[] getDeclaredFields(java.lang.Class) -> getDeclaredFields
    com.badlogic.gdx.utils.reflect.Field getDeclaredField(java.lang.Class,java.lang.String) -> getDeclaredField
com.badlogic.gdx.utils.reflect.Constructor -> com.badlogic.gdx.utils.reflect.Constructor:
    java.lang.reflect.Constructor constructor -> constructor
    java.lang.Class[] getParameterTypes() -> getParameterTypes
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    boolean isAccessible() -> isAccessible
    void setAccessible(boolean) -> setAccessible
    java.lang.Object newInstance(java.lang.Object[]) -> newInstance
com.badlogic.gdx.utils.reflect.Field -> com.badlogic.gdx.utils.reflect.Field:
    java.lang.reflect.Field field -> field
    java.lang.String getName() -> getName
    java.lang.Class getType() -> getType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    boolean isAccessible() -> isAccessible
    void setAccessible(boolean) -> setAccessible
    boolean isDefaultAccess() -> isDefaultAccess
    boolean isFinal() -> isFinal
    boolean isPrivate() -> isPrivate
    boolean isProtected() -> isProtected
    boolean isPublic() -> isPublic
    boolean isStatic() -> isStatic
    boolean isTransient() -> isTransient
    boolean isVolatile() -> isVolatile
    boolean isSynthetic() -> isSynthetic
    java.lang.Class getElementType(int) -> getElementType
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
com.badlogic.gdx.utils.reflect.Method -> com.badlogic.gdx.utils.reflect.Method:
    java.lang.reflect.Method method -> method
    java.lang.String getName() -> getName
    java.lang.Class getReturnType() -> getReturnType
    java.lang.Class[] getParameterTypes() -> getParameterTypes
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    boolean isAccessible() -> isAccessible
    void setAccessible(boolean) -> setAccessible
    boolean isAbstract() -> isAbstract
    boolean isDefaultAccess() -> isDefaultAccess
    boolean isFinal() -> isFinal
    boolean isPrivate() -> isPrivate
    boolean isProtected() -> isProtected
    boolean isPublic() -> isPublic
    boolean isNative() -> isNative
    boolean isStatic() -> isStatic
    boolean isVarArgs() -> isVarArgs
    java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
com.badlogic.gdx.utils.reflect.ReflectionException -> com.badlogic.gdx.utils.reflect.ReflectionException:
com.badlogic.gdx.utils.viewport.ExtendViewport -> com.badlogic.gdx.utils.viewport.ExtendViewport:
    float minWorldWidth -> minWorldWidth
    float minWorldHeight -> minWorldHeight
    float maxWorldWidth -> maxWorldWidth
    float maxWorldHeight -> maxWorldHeight
    void update(int,int,boolean) -> update
    float getMinWorldWidth() -> getMinWorldWidth
    void setMinWorldWidth(float) -> setMinWorldWidth
    float getMinWorldHeight() -> getMinWorldHeight
    void setMinWorldHeight(float) -> setMinWorldHeight
    float getMaxWorldWidth() -> getMaxWorldWidth
    void setMaxWorldWidth(float) -> setMaxWorldWidth
    float getMaxWorldHeight() -> getMaxWorldHeight
    void setMaxWorldHeight(float) -> setMaxWorldHeight
com.badlogic.gdx.utils.viewport.FillViewport -> com.badlogic.gdx.utils.viewport.FillViewport:
com.badlogic.gdx.utils.viewport.FitViewport -> com.badlogic.gdx.utils.viewport.FitViewport:
com.badlogic.gdx.utils.viewport.ScalingViewport -> com.badlogic.gdx.utils.viewport.ScalingViewport:
    com.badlogic.gdx.utils.Scaling scaling -> scaling
    void update(int,int,boolean) -> update
    com.badlogic.gdx.utils.Scaling getScaling() -> getScaling
    void setScaling(com.badlogic.gdx.utils.Scaling) -> setScaling
com.badlogic.gdx.utils.viewport.ScreenViewport -> com.badlogic.gdx.utils.viewport.ScreenViewport:
    float unitsPerPixel -> unitsPerPixel
    void update(int,int,boolean) -> update
    float getUnitsPerPixel() -> getUnitsPerPixel
    void setUnitsPerPixel(float) -> setUnitsPerPixel
com.badlogic.gdx.utils.viewport.StretchViewport -> com.badlogic.gdx.utils.viewport.StretchViewport:
com.badlogic.gdx.utils.viewport.Viewport -> com.badlogic.gdx.utils.viewport.Viewport:
    float worldWidth -> worldWidth
    float worldHeight -> worldHeight
    int viewportWidth -> viewportWidth
    int viewportHeight -> viewportHeight
    int viewportX -> viewportX
    int viewportY -> viewportY
    com.badlogic.gdx.graphics.Camera camera -> camera
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    void update() -> update
    void update(int,int) -> update
    void update(int,int,boolean) -> update
    com.badlogic.gdx.math.Vector2 unproject(com.badlogic.gdx.math.Vector2) -> unproject
    com.badlogic.gdx.math.Vector2 project(com.badlogic.gdx.math.Vector2) -> project
    com.badlogic.gdx.math.Vector3 unproject(com.badlogic.gdx.math.Vector3) -> unproject
    com.badlogic.gdx.math.Vector3 project(com.badlogic.gdx.math.Vector3) -> project
    com.badlogic.gdx.math.collision.Ray getPickRay(float,float) -> getPickRay
    void calculateScissors(com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> calculateScissors
    com.badlogic.gdx.math.Vector2 toScreenCoordinates(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Matrix4) -> toScreenCoordinates
    com.badlogic.gdx.graphics.Camera getCamera() -> getCamera
    void setCamera(com.badlogic.gdx.graphics.Camera) -> setCamera
    void setWorldSize(float,float) -> setWorldSize
    float getWorldWidth() -> getWorldWidth
    void setWorldWidth(float) -> setWorldWidth
    float getWorldHeight() -> getWorldHeight
    void setWorldHeight(float) -> setWorldHeight
    int getViewportX() -> getViewportX
    int getViewportY() -> getViewportY
    int getViewportWidth() -> getViewportWidth
    int getViewportHeight() -> getViewportHeight
    int getLeftGutterWidth() -> getLeftGutterWidth
    int getRightGutterX() -> getRightGutterX
    int getRightGutterWidth() -> getRightGutterWidth
    int getBottomGutterHeight() -> getBottomGutterHeight
    int getTopGutterY() -> getTopGutterY
    int getTopGutterHeight() -> getTopGutterHeight
com.google.ads.AdRequest -> com.google.a.a:
    java.lang.String TEST_EMULATOR -> a
com.google.ads.AdRequest$Gender -> com.google.a.b:
    com.google.ads.AdRequest$Gender UNKNOWN -> a
    com.google.ads.AdRequest$Gender MALE -> b
    com.google.ads.AdRequest$Gender FEMALE -> c
    com.google.ads.AdRequest$Gender[] b -> d
    com.google.ads.AdRequest$Gender[] values() -> values
    com.google.ads.AdRequest$Gender valueOf(java.lang.String) -> valueOf
com.google.ads.AdSize -> com.google.a.c:
    com.google.android.gms.ads.AdSize c -> g
    com.google.ads.AdSize SMART_BANNER -> a
    com.google.ads.AdSize BANNER -> b
    com.google.ads.AdSize IAB_MRECT -> c
    com.google.ads.AdSize IAB_BANNER -> d
    com.google.ads.AdSize IAB_LEADERBOARD -> e
    com.google.ads.AdSize IAB_WIDE_SKYSCRAPER -> f
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int getWidth() -> a
    int getHeight() -> b
    java.lang.String toString() -> toString
com.google.ads.mediation.MediationAdRequest -> com.google.a.a.a:
    java.util.Date d -> a
    com.google.ads.AdRequest$Gender e -> b
    java.util.Set f -> c
    boolean g -> d
    android.location.Location h -> e
com.google.ads.mediation.MediationAdapter -> com.google.a.a.b:
    void destroy() -> a
    java.lang.Class getAdditionalParametersType() -> b
    java.lang.Class getServerParametersType() -> c
com.google.ads.mediation.MediationBannerAdapter -> com.google.a.a.c:
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> a
    android.view.View getBannerView() -> d
com.google.ads.mediation.MediationBannerListener -> com.google.a.a.d:
com.google.ads.mediation.MediationInterstitialAdapter -> com.google.a.a.e:
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> a
    void showInterstitial() -> d
com.google.ads.mediation.MediationInterstitialListener -> com.google.a.a.f:
com.google.ads.mediation.MediationServerParameters -> com.google.a.a.g:
    void load(java.util.Map) -> a
    void a() -> a
com.google.ads.mediation.MediationServerParameters$MappingException -> com.google.a.a.h:
com.google.ads.mediation.MediationServerParameters$Parameter -> com.google.a.a.i:
    java.lang.String name() -> a
    boolean required() -> b
com.google.ads.mediation.NetworkExtras -> com.google.a.a.j:
com.google.ads.mediation.admob.AdMobAdapter -> com.google.a.a.a.a:
    com.google.android.gms.ads.AdView i -> a
    com.google.android.gms.ads.InterstitialAd j -> b
    com.google.android.gms.ads.AdRequest a(android.content.Context,com.google.android.gms.ads.mediation.MediationAdRequest,android.os.Bundle,android.os.Bundle) -> a
    void onDestroy() -> a
    void onPause() -> b
    void onResume() -> c
    void requestBannerAd(android.content.Context,com.google.android.gms.ads.mediation.MediationBannerListener,android.os.Bundle,com.google.android.gms.ads.AdSize,com.google.android.gms.ads.mediation.MediationAdRequest,android.os.Bundle) -> a
    android.view.View getBannerView() -> d
    void requestInterstitialAd(android.content.Context,com.google.android.gms.ads.mediation.MediationInterstitialListener,android.os.Bundle,com.google.android.gms.ads.mediation.MediationAdRequest,android.os.Bundle) -> a
    void showInterstitial() -> e
com.google.ads.mediation.admob.AdMobAdapter$a -> com.google.a.a.a.b:
    com.google.ads.mediation.admob.AdMobAdapter k -> a
    com.google.android.gms.ads.mediation.MediationBannerListener l -> b
    void onAdLoaded() -> a
    void onAdFailedToLoad(int) -> a
    void onAdOpened() -> b
    void onAdClosed() -> c
    void onAdLeftApplication() -> d
com.google.ads.mediation.admob.AdMobAdapter$b -> com.google.a.a.a.c:
    com.google.ads.mediation.admob.AdMobAdapter k -> a
    com.google.android.gms.ads.mediation.MediationInterstitialListener m -> b
    void onAdLoaded() -> a
    void onAdFailedToLoad(int) -> a
    void onAdOpened() -> b
    void onAdClosed() -> c
    void onAdLeftApplication() -> d
com.google.android.gms.R -> com.google.android.gms.a:
com.google.android.gms.R$string -> com.google.android.gms.b:
    int accept -> accept
    int common_android_wear_notification_needs_update_text -> common_android_wear_notification_needs_update_text
    int common_android_wear_update_text -> common_android_wear_update_text
    int common_android_wear_update_title -> common_android_wear_update_title
    int common_google_play_services_enable_button -> common_google_play_services_enable_button
    int common_google_play_services_enable_text -> common_google_play_services_enable_text
    int common_google_play_services_enable_title -> common_google_play_services_enable_title
    int common_google_play_services_error_notification_requested_by_msg -> common_google_play_services_error_notification_requested_by_msg
    int common_google_play_services_install_button -> common_google_play_services_install_button
    int common_google_play_services_install_text_phone -> common_google_play_services_install_text_phone
    int common_google_play_services_install_text_tablet -> common_google_play_services_install_text_tablet
    int common_google_play_services_install_title -> common_google_play_services_install_title
    int common_google_play_services_invalid_account_text -> common_google_play_services_invalid_account_text
    int common_google_play_services_invalid_account_title -> common_google_play_services_invalid_account_title
    int common_google_play_services_needs_enabling_title -> common_google_play_services_needs_enabling_title
    int common_google_play_services_network_error_text -> common_google_play_services_network_error_text
    int common_google_play_services_network_error_title -> common_google_play_services_network_error_title
    int common_google_play_services_notification_needs_installation_title -> common_google_play_services_notification_needs_installation_title
    int common_google_play_services_notification_needs_update_title -> common_google_play_services_notification_needs_update_title
    int common_google_play_services_notification_ticker -> common_google_play_services_notification_ticker
    int common_google_play_services_unknown_issue -> common_google_play_services_unknown_issue
    int common_google_play_services_unsupported_text -> common_google_play_services_unsupported_text
    int common_google_play_services_unsupported_title -> common_google_play_services_unsupported_title
    int common_google_play_services_update_button -> common_google_play_services_update_button
    int common_google_play_services_update_text -> common_google_play_services_update_text
    int common_google_play_services_update_title -> common_google_play_services_update_title
    int common_open_on_phone -> common_open_on_phone
    int common_signin_button_text -> common_signin_button_text
    int common_signin_button_text_long -> common_signin_button_text_long
    int create_calendar_message -> create_calendar_message
    int create_calendar_title -> create_calendar_title
    int decline -> decline
    int store_picture_message -> store_picture_message
    int store_picture_title -> store_picture_title
    int wallet_buy_button_place_holder -> wallet_buy_button_place_holder
com.google.android.gms.R$styleable -> com.google.android.gms.c:
    int[] AdsAttrs -> AdsAttrs
    int AdsAttrs_adSize -> AdsAttrs_adSize
    int AdsAttrs_adSizes -> AdsAttrs_adSizes
    int AdsAttrs_adUnitId -> AdsAttrs_adUnitId
    int[] LoadingImageView -> LoadingImageView
    int LoadingImageView_circleCrop -> LoadingImageView_circleCrop
    int LoadingImageView_imageAspectRatio -> LoadingImageView_imageAspectRatio
    int LoadingImageView_imageAspectRatioAdjust -> LoadingImageView_imageAspectRatioAdjust
    int[] MapAttrs -> MapAttrs
    int MapAttrs_cameraBearing -> MapAttrs_cameraBearing
    int MapAttrs_cameraTargetLat -> MapAttrs_cameraTargetLat
    int MapAttrs_cameraTargetLng -> MapAttrs_cameraTargetLng
    int MapAttrs_cameraTilt -> MapAttrs_cameraTilt
    int MapAttrs_cameraZoom -> MapAttrs_cameraZoom
    int MapAttrs_liteMode -> MapAttrs_liteMode
    int MapAttrs_mapType -> MapAttrs_mapType
    int MapAttrs_uiCompass -> MapAttrs_uiCompass
    int MapAttrs_uiMapToolbar -> MapAttrs_uiMapToolbar
    int MapAttrs_uiRotateGestures -> MapAttrs_uiRotateGestures
    int MapAttrs_uiScrollGestures -> MapAttrs_uiScrollGestures
    int MapAttrs_uiTiltGestures -> MapAttrs_uiTiltGestures
    int MapAttrs_uiZoomControls -> MapAttrs_uiZoomControls
    int MapAttrs_uiZoomGestures -> MapAttrs_uiZoomGestures
    int MapAttrs_useViewLifecycle -> MapAttrs_useViewLifecycle
    int MapAttrs_zOrderOnTop -> MapAttrs_zOrderOnTop
    int[] WalletFragmentOptions -> WalletFragmentOptions
    int WalletFragmentOptions_appTheme -> WalletFragmentOptions_appTheme
    int WalletFragmentOptions_environment -> WalletFragmentOptions_environment
    int WalletFragmentOptions_fragmentMode -> WalletFragmentOptions_fragmentMode
    int WalletFragmentOptions_fragmentStyle -> WalletFragmentOptions_fragmentStyle
    int[] WalletFragmentStyle -> WalletFragmentStyle
    int WalletFragmentStyle_buyButtonAppearance -> WalletFragmentStyle_buyButtonAppearance
    int WalletFragmentStyle_buyButtonHeight -> WalletFragmentStyle_buyButtonHeight
    int WalletFragmentStyle_buyButtonText -> WalletFragmentStyle_buyButtonText
    int WalletFragmentStyle_buyButtonWidth -> WalletFragmentStyle_buyButtonWidth
    int WalletFragmentStyle_maskedWalletDetailsBackground -> WalletFragmentStyle_maskedWalletDetailsBackground
    int WalletFragmentStyle_maskedWalletDetailsButtonBackground -> WalletFragmentStyle_maskedWalletDetailsButtonBackground
    int WalletFragmentStyle_maskedWalletDetailsButtonTextAppearance -> WalletFragmentStyle_maskedWalletDetailsButtonTextAppearance
    int WalletFragmentStyle_maskedWalletDetailsHeaderTextAppearance -> WalletFragmentStyle_maskedWalletDetailsHeaderTextAppearance
    int WalletFragmentStyle_maskedWalletDetailsLogoImageType -> WalletFragmentStyle_maskedWalletDetailsLogoImageType
    int WalletFragmentStyle_maskedWalletDetailsLogoTextColor -> WalletFragmentStyle_maskedWalletDetailsLogoTextColor
    int WalletFragmentStyle_maskedWalletDetailsTextAppearance -> WalletFragmentStyle_maskedWalletDetailsTextAppearance
com.google.android.gms.ads.AdActivity -> com.google.android.gms.ads.AdActivity:
    com.google.android.gms.internal.dx lf -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void X() -> a
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
com.google.android.gms.ads.AdListener -> com.google.android.gms.ads.a:
    void onAdClosed() -> c
    void onAdFailedToLoad(int) -> a
    void onAdLeftApplication() -> d
    void onAdOpened() -> b
    void onAdLoaded() -> a
com.google.android.gms.ads.AdRequest -> com.google.android.gms.ads.b:
    java.lang.String DEVICE_ID_EMULATOR -> a
    com.google.android.gms.internal.bg lg -> b
    com.google.android.gms.internal.bg Y() -> a
com.google.android.gms.ads.AdRequest$1 -> com.google.android.gms.ads.c:
com.google.android.gms.ads.AdRequest$Builder -> com.google.android.gms.ads.d:
    com.google.android.gms.internal.bg$a lh -> a
    com.google.android.gms.ads.AdRequest$Builder addKeyword(java.lang.String) -> a
    com.google.android.gms.ads.AdRequest$Builder addNetworkExtrasBundle(java.lang.Class,android.os.Bundle) -> a
    com.google.android.gms.ads.AdRequest$Builder addTestDevice(java.lang.String) -> b
    com.google.android.gms.ads.AdRequest build() -> a
    com.google.android.gms.ads.AdRequest$Builder setBirthday(java.util.Date) -> a
    com.google.android.gms.ads.AdRequest$Builder setGender(int) -> a
    com.google.android.gms.ads.AdRequest$Builder setLocation(android.location.Location) -> a
    com.google.android.gms.ads.AdRequest$Builder tagForChildDirectedTreatment(boolean) -> a
    com.google.android.gms.internal.bg$a a(com.google.android.gms.ads.AdRequest$Builder) -> a
com.google.android.gms.ads.AdSize -> com.google.android.gms.ads.e:
    com.google.android.gms.ads.AdSize BANNER -> a
    com.google.android.gms.ads.AdSize FULL_BANNER -> b
    com.google.android.gms.ads.AdSize LARGE_BANNER -> c
    com.google.android.gms.ads.AdSize LEADERBOARD -> d
    com.google.android.gms.ads.AdSize MEDIUM_RECTANGLE -> e
    com.google.android.gms.ads.AdSize WIDE_SKYSCRAPER -> f
    com.google.android.gms.ads.AdSize SMART_BANNER -> g
    int li -> h
    int lj -> i
    java.lang.String lk -> j
    boolean equals(java.lang.Object) -> equals
    int getHeight() -> a
    int getHeightInPixels(android.content.Context) -> a
    int getWidth() -> b
    int getWidthInPixels(android.content.Context) -> b
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.android.gms.ads.AdView -> com.google.android.gms.ads.AdView:
    com.google.android.gms.internal.bh ll -> a
    void destroy() -> a
    com.google.android.gms.ads.AdListener getAdListener() -> getAdListener
    com.google.android.gms.ads.AdSize getAdSize() -> getAdSize
    java.lang.String getAdUnitId() -> getAdUnitId
    com.google.android.gms.ads.purchase.InAppPurchaseListener getInAppPurchaseListener() -> getInAppPurchaseListener
    void loadAd(com.google.android.gms.ads.AdRequest) -> a
    void pause() -> b
    void resume() -> c
    void setAdListener(com.google.android.gms.ads.AdListener) -> setAdListener
    void setAdSize(com.google.android.gms.ads.AdSize) -> setAdSize
    void setAdUnitId(java.lang.String) -> setAdUnitId
    void setInAppPurchaseListener(com.google.android.gms.ads.purchase.InAppPurchaseListener) -> setInAppPurchaseListener
    java.lang.String getMediationAdapterClassName() -> getMediationAdapterClassName
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
com.google.android.gms.ads.InterstitialAd -> com.google.android.gms.ads.f:
    com.google.android.gms.internal.bi lm -> a
    void loadAd(com.google.android.gms.ads.AdRequest) -> a
    void setAdListener(com.google.android.gms.ads.AdListener) -> a
    void setAdUnitId(java.lang.String) -> a
    void show() -> a
com.google.android.gms.ads.a -> com.google.android.gms.ads.g:
    com.google.android.gms.ads.AdSize a(int,int,java.lang.String) -> a
com.google.android.gms.ads.doubleclick.AppEventListener -> com.google.android.gms.ads.a.a:
    void onAppEvent(java.lang.String,java.lang.String) -> a
com.google.android.gms.ads.doubleclick.PublisherInterstitialAd -> com.google.android.gms.ads.a.b:
com.google.android.gms.ads.doubleclick.a -> com.google.android.gms.ads.a.c:
com.google.android.gms.ads.doubleclick.b -> com.google.android.gms.ads.a.d:
    void a(com.google.android.gms.ads.doubleclick.a) -> a
com.google.android.gms.ads.identifier.AdvertisingIdClient -> com.google.android.gms.ads.b.a:
    com.google.android.gms.common.a ln -> a
    com.google.android.gms.internal.s lo -> b
    boolean lp -> c
    java.lang.Object lq -> d
    com.google.android.gms.ads.identifier.AdvertisingIdClient$a lr -> e
    android.content.Context mContext -> g
    long ls -> f
    void start() -> a
    void b(boolean) -> a
    void Z() -> d
    com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getInfo() -> b
    void finish() -> c
    void finalize() -> finalize
    com.google.android.gms.common.a h(android.content.Context) -> a
    com.google.android.gms.internal.s a(android.content.Context,com.google.android.gms.common.a) -> a
com.google.android.gms.ads.identifier.AdvertisingIdClient$Info -> com.google.android.gms.ads.b.b:
    java.lang.String lx -> a
    boolean ly -> b
    java.lang.String getId() -> a
    boolean isLimitAdTrackingEnabled() -> b
    java.lang.String toString() -> toString
com.google.android.gms.ads.identifier.AdvertisingIdClient$a -> com.google.android.gms.ads.b.c:
    java.lang.ref.WeakReference lt -> c
    long lu -> d
    java.util.concurrent.CountDownLatch lv -> a
    boolean lw -> b
    void cancel() -> a
    boolean aa() -> b
    void disconnect() -> c
    void run() -> run
com.google.android.gms.ads.mediation.MediationAdRequest -> com.google.android.gms.ads.c.a:
    java.util.Date getBirthday() -> a
    int getGender() -> b
    java.util.Set getKeywords() -> c
    android.location.Location getLocation() -> d
    boolean isTesting() -> e
com.google.android.gms.ads.mediation.MediationAdapter -> com.google.android.gms.ads.c.b:
    void onDestroy() -> a
    void onPause() -> b
    void onResume() -> c
com.google.android.gms.ads.mediation.MediationBannerAdapter -> com.google.android.gms.ads.c.c:
    void requestBannerAd(android.content.Context,com.google.android.gms.ads.mediation.MediationBannerListener,android.os.Bundle,com.google.android.gms.ads.AdSize,com.google.android.gms.ads.mediation.MediationAdRequest,android.os.Bundle) -> a
    android.view.View getBannerView() -> d
com.google.android.gms.ads.mediation.MediationBannerListener -> com.google.android.gms.ads.c.d:
    void onAdLoaded(com.google.android.gms.ads.mediation.MediationBannerAdapter) -> a
    void onAdFailedToLoad(com.google.android.gms.ads.mediation.MediationBannerAdapter,int) -> a
    void onAdOpened(com.google.android.gms.ads.mediation.MediationBannerAdapter) -> b
    void onAdClosed(com.google.android.gms.ads.mediation.MediationBannerAdapter) -> c
    void onAdLeftApplication(com.google.android.gms.ads.mediation.MediationBannerAdapter) -> d
    void onAdClicked(com.google.android.gms.ads.mediation.MediationBannerAdapter) -> e
com.google.android.gms.ads.mediation.MediationInterstitialAdapter -> com.google.android.gms.ads.c.e:
    void requestInterstitialAd(android.content.Context,com.google.android.gms.ads.mediation.MediationInterstitialListener,android.os.Bundle,com.google.android.gms.ads.mediation.MediationAdRequest,android.os.Bundle) -> a
    void showInterstitial() -> e
com.google.android.gms.ads.mediation.MediationInterstitialListener -> com.google.android.gms.ads.c.f:
    void onAdLoaded(com.google.android.gms.ads.mediation.MediationInterstitialAdapter) -> a
    void onAdFailedToLoad(com.google.android.gms.ads.mediation.MediationInterstitialAdapter,int) -> a
    void onAdOpened(com.google.android.gms.ads.mediation.MediationInterstitialAdapter) -> b
    void onAdClosed(com.google.android.gms.ads.mediation.MediationInterstitialAdapter) -> c
    void onAdLeftApplication(com.google.android.gms.ads.mediation.MediationInterstitialAdapter) -> d
com.google.android.gms.ads.mediation.customevent.CustomEvent -> com.google.android.gms.ads.c.a.a:
com.google.android.gms.ads.purchase.InAppPurchase -> com.google.android.gms.ads.d.a:
com.google.android.gms.ads.purchase.InAppPurchaseListener -> com.google.android.gms.ads.d.b:
    void onInAppPurchaseRequested(com.google.android.gms.ads.purchase.InAppPurchase) -> a
com.google.android.gms.ads.purchase.InAppPurchaseResult -> com.google.android.gms.ads.d.c:
com.google.android.gms.ads.purchase.PlayStorePurchaseListener -> com.google.android.gms.ads.d.d:
    boolean isValidPurchase(java.lang.String) -> a
    void onInAppPurchaseFinished(com.google.android.gms.ads.purchase.InAppPurchaseResult) -> a
com.google.android.gms.ads.search.SearchAdRequest -> com.google.android.gms.ads.e.a:
    java.lang.String DEVICE_ID_EMULATOR -> a
    int xA -> b
    int xB -> c
    int xC -> d
    int xD -> e
    int xE -> f
    int xF -> g
    int xG -> h
    int xH -> i
    java.lang.String xI -> j
    int xJ -> k
    java.lang.String xK -> l
    int xL -> m
    int xM -> n
    java.lang.String xN -> o
    int getAnchorTextColor() -> a
    int getBackgroundColor() -> b
    int getBackgroundGradientBottom() -> c
    int getBackgroundGradientTop() -> d
    int getBorderColor() -> e
    int getBorderThickness() -> f
    int getBorderType() -> g
    int getCallButtonColor() -> h
    java.lang.String getCustomChannels() -> i
    int getDescriptionTextColor() -> j
    java.lang.String getFontFace() -> k
    int getHeaderTextColor() -> l
    int getHeaderTextSize() -> m
    java.lang.String getQuery() -> n
com.google.android.gms.auth.AccountChangeEvent -> com.google.android.gms.auth.AccountChangeEvent:
    com.google.android.gms.auth.AccountChangeEventCreator CREATOR -> a
    int Ef -> b
    long Eg -> c
    java.lang.String DZ -> d
    int Eh -> e
    int Ei -> f
    java.lang.String Ej -> g
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.auth.AccountChangeEventCreator -> com.google.android.gms.auth.a:
    com.google.android.gms.auth.AccountChangeEvent createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.auth.AccountChangeEvent[] newArray(int) -> a
    void a(com.google.android.gms.auth.AccountChangeEvent,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.auth.AccountChangeEventsRequest -> com.google.android.gms.auth.AccountChangeEventsRequest:
    com.google.android.gms.auth.AccountChangeEventsRequestCreator CREATOR -> a
    int Ef -> b
    int Ei -> c
    java.lang.String DZ -> d
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.google.android.gms.auth.AccountChangeEventsRequestCreator -> com.google.android.gms.auth.b:
    com.google.android.gms.auth.AccountChangeEventsRequest createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.auth.AccountChangeEventsRequest[] newArray(int) -> a
    void a(com.google.android.gms.auth.AccountChangeEventsRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.auth.AccountChangeEventsResponse -> com.google.android.gms.auth.AccountChangeEventsResponse:
    com.google.android.gms.auth.AccountChangeEventsResponseCreator CREATOR -> a
    int Ef -> b
    java.util.List mp -> c
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.google.android.gms.auth.AccountChangeEventsResponseCreator -> com.google.android.gms.auth.c:
    com.google.android.gms.auth.AccountChangeEventsResponse createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.auth.AccountChangeEventsResponse[] newArray(int) -> a
    void a(com.google.android.gms.auth.AccountChangeEventsResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.cast.ApplicationMetadata -> com.google.android.gms.cast.ApplicationMetadata:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> g
    java.lang.String Fo -> a
    java.lang.String mName -> b
    java.util.List Fp -> c
    java.util.List Fq -> d
    java.lang.String Fr -> e
    android.net.Uri Fs -> f
    int getVersionCode() -> a
    java.lang.String getApplicationId() -> b
    java.lang.String getName() -> c
    java.lang.String getSenderAppIdentifier() -> d
    android.net.Uri fP() -> e
    java.util.List getImages() -> f
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.cast.CastDevice -> com.google.android.gms.cast.CastDevice:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> b
    java.lang.String FG -> c
    java.lang.String FH -> a
    java.net.Inet4Address FI -> d
    java.lang.String FJ -> e
    java.lang.String FK -> f
    java.lang.String FL -> g
    int FM -> h
    java.util.List FN -> i
    int FO -> j
    int FP -> k
    int getVersionCode() -> a
    java.lang.String getDeviceId() -> b
    java.lang.String getFriendlyName() -> c
    java.lang.String getModelName() -> d
    java.lang.String getDeviceVersion() -> e
    int getServicePort() -> f
    java.util.List getIcons() -> g
    int getCapabilities() -> h
    int getStatus() -> i
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.cast.LaunchOptions -> com.google.android.gms.cast.LaunchOptions:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    boolean FQ -> b
    java.lang.String FR -> c
    int getVersionCode() -> a
    boolean getRelaunchIfRunning() -> b
    java.lang.String getLanguage() -> c
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.cast.a -> com.google.android.gms.cast.a:
    com.google.android.gms.cast.ApplicationMetadata u(android.os.Parcel) -> a
    com.google.android.gms.cast.ApplicationMetadata[] V(int) -> a
    void a(com.google.android.gms.cast.ApplicationMetadata,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.cast.b -> com.google.android.gms.cast.b:
    com.google.android.gms.cast.CastDevice v(android.os.Parcel) -> a
    com.google.android.gms.cast.CastDevice[] Z(int) -> a
    void a(com.google.android.gms.cast.CastDevice,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.cast.c -> com.google.android.gms.cast.c:
    com.google.android.gms.cast.LaunchOptions w(android.os.Parcel) -> a
    com.google.android.gms.cast.LaunchOptions[] aa(int) -> a
    void a(com.google.android.gms.cast.LaunchOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.common.ConnectionResult -> com.google.android.gms.common.a:
    com.google.android.gms.common.ConnectionResult Iu -> a
    android.app.PendingIntent mPendingIntent -> b
    int Iv -> c
    java.lang.String gt() -> a
    java.lang.String toString() -> toString
com.google.android.gms.common.GooglePlayServicesClient -> com.google.android.gms.common.b:
com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener -> com.google.android.gms.common.c:
    void onConnectionFailed(com.google.android.gms.common.ConnectionResult) -> a
com.google.android.gms.common.GooglePlayServicesNotAvailableException -> com.google.android.gms.common.d:
    int errorCode -> a
com.google.android.gms.common.GooglePlayServicesRepairableException -> com.google.android.gms.common.e:
    int Eo -> a
com.google.android.gms.common.GooglePlayServicesUtil -> com.google.android.gms.common.f:
    boolean Jg -> a
    boolean Jh -> b
    int Ji -> c
    java.lang.Object Jj -> d
    int isGooglePlayServicesAvailable(android.content.Context) -> a
    void C(android.content.Context) -> b
    void D(android.content.Context) -> e
    boolean a(android.content.pm.PackageManager,android.content.pm.PackageInfo) -> a
    byte[] a(android.content.pm.PackageInfo,boolean) -> a
    byte[] a(android.content.pm.PackageInfo,byte[][]) -> a
    android.content.Intent aj(int) -> a
    boolean gw() -> a
    boolean b(android.content.pm.PackageManager) -> a
    boolean c(android.content.pm.PackageManager) -> b
    android.content.res.Resources getRemoteResource(android.content.Context) -> c
    android.content.Context getRemoteContext(android.content.Context) -> d
com.google.android.gms.common.UserRecoverableException -> com.google.android.gms.common.g:
    android.content.Intent mIntent -> a
com.google.android.gms.common.a -> com.google.android.gms.common.h:
    boolean Is -> a
    java.util.concurrent.BlockingQueue It -> b
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    android.os.IBinder gs() -> a
com.google.android.gms.common.api.CommonStatusCodes -> com.google.android.gms.common.api.a:
    java.lang.String getStatusCodeString(int) -> a
com.google.android.gms.common.api.GoogleApiClient -> com.google.android.gms.common.api.b:
com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks -> com.google.android.gms.common.api.c:
    void onConnected(android.os.Bundle) -> a
    void onConnectionSuspended(int) -> a
com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener -> com.google.android.gms.common.api.d:
com.google.android.gms.common.api.Scope -> com.google.android.gms.common.api.Scope:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String Kv -> b
    java.lang.String gO() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.common.api.Status -> com.google.android.gms.common.api.Status:
    com.google.android.gms.common.api.Status Kw -> a
    com.google.android.gms.common.api.Status Kx -> b
    com.google.android.gms.common.api.Status Ky -> c
    com.google.android.gms.common.api.Status Kz -> d
    com.google.android.gms.common.api.Status KA -> e
    com.google.android.gms.common.api.StatusCreator CREATOR -> f
    int CK -> g
    int Iv -> h
    java.lang.String KB -> i
    android.app.PendingIntent mPendingIntent -> j
    android.app.PendingIntent gP() -> a
    java.lang.String getStatusMessage() -> b
    int getVersionCode() -> c
    int getStatusCode() -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String gt() -> e
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.common.api.StatusCreator -> com.google.android.gms.common.api.e:
    com.google.android.gms.common.api.Status createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.common.api.Status[] newArray(int) -> a
    void a(com.google.android.gms.common.api.Status,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.common.api.e -> com.google.android.gms.common.api.f:
    com.google.android.gms.common.api.Scope z(android.os.Parcel) -> a
    com.google.android.gms.common.api.Scope[] am(int) -> a
    void a(com.google.android.gms.common.api.Scope,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.common.b -> com.google.android.gms.common.i:
    byte[][] Ix -> a
    byte[][] Iy -> b
    byte[][] Iz -> c
    byte[][] IA -> d
    byte[][] IB -> e
    byte[][] IC -> f
    byte[][] IE -> g
    byte[][] IF -> h
    byte[][] IG -> i
    byte[][] IH -> j
    byte[][] II -> k
    byte[][] IJ -> l
    byte[][] IK -> m
    byte[][] IL -> n
    byte[][] IM -> o
    byte[][] IN -> p
    byte[][] IO -> q
    byte[][] IP -> r
    byte[][] IQ -> s
    byte[][] IR -> t
    byte[][] IS -> u
    byte[][] IT -> v
    byte[][] IU -> w
    byte[][] IV -> x
    byte[][] IW -> y
    byte[][] IX -> z
    byte[][] IY -> A
    byte[][] IZ -> B
    byte[][] Ja -> C
    byte[][] Jb -> D
    byte[][] Jc -> E
    java.util.Set Jd -> G
    java.util.Set Je -> H
    java.util.Comparator Jf -> F
    byte[][] a(byte[][][]) -> a
    byte[] aP(java.lang.String) -> a
    java.util.Set a(byte[][]) -> a
    java.util.Set gu() -> a
    java.util.Set gv() -> b
com.google.android.gms.common.b$1 -> com.google.android.gms.common.j:
    int c(byte[],byte[]) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.android.gms.common.data.DataHolder -> com.google.android.gms.common.data.DataHolder:
    com.google.android.gms.common.data.f CREATOR -> a
    int CK -> f
    java.lang.String[] Ld -> g
    android.os.Bundle Le -> b
    android.database.CursorWindow[] Lf -> h
    int Iv -> i
    android.os.Bundle Lg -> j
    int[] Lh -> c
    int Li -> d
    boolean mClosed -> e
    java.lang.Object Lj -> k
    boolean Lk -> l
    com.google.android.gms.common.data.DataHolder$a Ll -> m
    void gX() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> b
    java.lang.String[] gY() -> c
    android.database.CursorWindow[] gZ() -> d
    int getStatusCode() -> e
    android.os.Bundle gV() -> f
    void g(java.lang.String,int) -> a
    boolean aQ(java.lang.String) -> a
    long a(java.lang.String,int,int) -> a
    int b(java.lang.String,int,int) -> b
    java.lang.String c(java.lang.String,int,int) -> c
    boolean d(java.lang.String,int,int) -> d
    float e(java.lang.String,int,int) -> e
    byte[] f(java.lang.String,int,int) -> f
    android.net.Uri g(java.lang.String,int,int) -> g
    boolean h(java.lang.String,int,int) -> h
    int getCount() -> g
    int au(int) -> a
    boolean isClosed() -> h
    void close() -> i
    void finalize() -> finalize
com.google.android.gms.common.data.DataHolder$1 -> com.google.android.gms.common.data.b:
com.google.android.gms.common.data.DataHolder$a -> com.google.android.gms.common.data.c:
    java.lang.String[] Ld -> a
    java.util.ArrayList Lm -> b
    java.lang.String Ln -> c
    java.util.HashMap Lo -> d
    boolean Lp -> e
    java.lang.String Lq -> f
com.google.android.gms.common.data.Freezable -> com.google.android.gms.common.data.d:
    java.lang.Object freeze() -> a
com.google.android.gms.common.data.a -> com.google.android.gms.common.data.a:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    android.os.ParcelFileDescriptor KS -> b
    int Gt -> c
    android.graphics.Bitmap KT -> d
    boolean KU -> e
    java.io.File KV -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.io.FileOutputStream gU() -> a
    void a(java.io.Closeable) -> a
com.google.android.gms.common.data.b -> com.google.android.gms.common.data.e:
    com.google.android.gms.common.data.a A(android.os.Parcel) -> a
    com.google.android.gms.common.data.a[] ar(int) -> a
    void a(com.google.android.gms.common.data.a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.common.data.d -> com.google.android.gms.common.data.f:
    com.google.android.gms.common.data.DataHolder JG -> a
    int KZ -> b
    int La -> c
    int gW() -> b
    void as(int) -> a
    boolean aQ(java.lang.String) -> a
    long getLong(java.lang.String) -> b
    int getInteger(java.lang.String) -> c
    boolean getBoolean(java.lang.String) -> d
    java.lang.String getString(java.lang.String) -> e
    float getFloat(java.lang.String) -> f
    byte[] getByteArray(java.lang.String) -> g
    android.net.Uri aR(java.lang.String) -> h
    boolean aS(java.lang.String) -> i
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.common.data.f -> com.google.android.gms.common.data.g:
    com.google.android.gms.common.data.DataHolder B(android.os.Parcel) -> a
    com.google.android.gms.common.data.DataHolder[] aw(int) -> a
    void a(com.google.android.gms.common.data.DataHolder,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.common.images.ImageManager -> com.google.android.gms.common.images.ImageManager:
    java.lang.Object Lu -> a
    java.util.HashSet Lv -> b
    android.content.Context mContext -> c
    android.os.Handler mHandler -> d
    java.util.concurrent.ExecutorService Ly -> e
    com.google.android.gms.common.images.ImageManager$b Lz -> f
    com.google.android.gms.internal.jc LA -> g
    java.util.Map LB -> h
    java.util.Map LC -> i
    java.util.Map LD -> j
    java.util.Map a(com.google.android.gms.common.images.ImageManager) -> a
    android.content.Context b(com.google.android.gms.common.images.ImageManager) -> b
    com.google.android.gms.internal.jc c(com.google.android.gms.common.images.ImageManager) -> c
    java.util.Map d(com.google.android.gms.common.images.ImageManager) -> d
    java.util.Map e(com.google.android.gms.common.images.ImageManager) -> e
    java.lang.Object he() -> a
    java.util.HashSet hf() -> b
    java.util.concurrent.ExecutorService f(com.google.android.gms.common.images.ImageManager) -> f
    android.os.Handler g(com.google.android.gms.common.images.ImageManager) -> g
    com.google.android.gms.common.images.ImageManager$b h(com.google.android.gms.common.images.ImageManager) -> h
com.google.android.gms.common.images.ImageManager$ImageReceiver -> com.google.android.gms.common.images.ImageManager$ImageReceiver:
    android.net.Uri mUri -> b
    java.util.ArrayList LE -> c
    com.google.android.gms.common.images.ImageManager LF -> a
    void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
    java.util.ArrayList a(com.google.android.gms.common.images.ImageManager$ImageReceiver) -> a
com.google.android.gms.common.images.ImageManager$OnImageLoadedListener -> com.google.android.gms.common.images.a:
    void onImageLoaded(android.net.Uri,android.graphics.drawable.Drawable,boolean) -> a
com.google.android.gms.common.images.ImageManager$b -> com.google.android.gms.common.images.b:
    void a(boolean,com.google.android.gms.common.images.a$a,android.graphics.Bitmap,android.graphics.Bitmap) -> a
    int a(com.google.android.gms.common.images.a$a,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
com.google.android.gms.common.images.ImageManager$c -> com.google.android.gms.common.images.c:
    android.net.Uri mUri -> b
    android.os.ParcelFileDescriptor LG -> c
    com.google.android.gms.common.images.ImageManager LF -> a
    void run() -> run
com.google.android.gms.common.images.ImageManager$f -> com.google.android.gms.common.images.d:
    android.net.Uri mUri -> b
    android.graphics.Bitmap mBitmap -> c
    java.util.concurrent.CountDownLatch mr -> d
    boolean LI -> e
    com.google.android.gms.common.images.ImageManager LF -> a
    void run() -> run
    void a(com.google.android.gms.common.images.ImageManager$ImageReceiver,boolean) -> a
com.google.android.gms.common.images.WebImage -> com.google.android.gms.common.images.WebImage:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    android.net.Uri LU -> b
    int li -> c
    int lj -> d
    int getVersionCode() -> a
    android.net.Uri getUrl() -> b
    int getWidth() -> c
    int getHeight() -> d
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.common.images.a -> com.google.android.gms.common.images.e:
    com.google.android.gms.common.images.a$a LJ -> a
    int LL -> b
    com.google.android.gms.common.images.ImageManager$OnImageLoadedListener LN -> c
    int LR -> d
    void a(android.content.Context,android.graphics.Bitmap,boolean) -> a
    void a(android.content.Context,com.google.android.gms.internal.jc,boolean) -> a
    android.graphics.drawable.Drawable a(android.content.Context,com.google.android.gms.internal.jc,int) -> a
    android.graphics.drawable.Drawable a(android.content.res.Resources,android.graphics.drawable.Drawable) -> a
    void a(android.graphics.drawable.Drawable,boolean,boolean,boolean) -> a
com.google.android.gms.common.images.a$a -> com.google.android.gms.common.images.f:
    android.net.Uri uri -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.common.images.a$c -> com.google.android.gms.common.images.g:
    java.lang.ref.WeakReference LT -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void a(android.graphics.drawable.Drawable,boolean,boolean,boolean) -> a
com.google.android.gms.common.images.b -> com.google.android.gms.common.images.h:
    com.google.android.gms.common.images.WebImage C(android.os.Parcel) -> a
    com.google.android.gms.common.images.WebImage[] aA(int) -> a
    void a(com.google.android.gms.common.images.WebImage,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.common.internal.safeparcel.SafeParcelable -> com.google.android.gms.common.internal.safeparcel.SafeParcelable:
com.google.android.gms.common.internal.safeparcel.a -> com.google.android.gms.common.internal.safeparcel.a:
    int F(android.os.Parcel) -> a
    int aH(int) -> a
    int a(android.os.Parcel,int) -> a
    void b(android.os.Parcel,int) -> b
    void a(android.os.Parcel,int,int) -> a
    void a(android.os.Parcel,int,int,int) -> a
    int G(android.os.Parcel) -> b
    boolean c(android.os.Parcel,int) -> c
    java.lang.Boolean d(android.os.Parcel,int) -> d
    byte e(android.os.Parcel,int) -> e
    short f(android.os.Parcel,int) -> f
    int g(android.os.Parcel,int) -> g
    java.lang.Integer h(android.os.Parcel,int) -> h
    long i(android.os.Parcel,int) -> i
    java.lang.Long j(android.os.Parcel,int) -> j
    java.math.BigInteger k(android.os.Parcel,int) -> k
    float l(android.os.Parcel,int) -> l
    double m(android.os.Parcel,int) -> m
    java.math.BigDecimal n(android.os.Parcel,int) -> n
    java.lang.String o(android.os.Parcel,int) -> o
    android.os.IBinder p(android.os.Parcel,int) -> p
    android.os.Parcelable a(android.os.Parcel,int,android.os.Parcelable$Creator) -> a
    android.os.Bundle q(android.os.Parcel,int) -> q
    byte[] r(android.os.Parcel,int) -> r
    byte[][] s(android.os.Parcel,int) -> s
    boolean[] t(android.os.Parcel,int) -> t
    int[] u(android.os.Parcel,int) -> u
    long[] v(android.os.Parcel,int) -> v
    java.math.BigInteger[] w(android.os.Parcel,int) -> w
    float[] x(android.os.Parcel,int) -> x
    double[] y(android.os.Parcel,int) -> y
    java.math.BigDecimal[] z(android.os.Parcel,int) -> z
    java.lang.String[] A(android.os.Parcel,int) -> A
    java.util.ArrayList B(android.os.Parcel,int) -> B
    java.util.ArrayList C(android.os.Parcel,int) -> C
    java.lang.Object[] b(android.os.Parcel,int,android.os.Parcelable$Creator) -> b
    java.util.ArrayList c(android.os.Parcel,int,android.os.Parcelable$Creator) -> c
    android.os.Parcel D(android.os.Parcel,int) -> D
    android.os.Parcel[] E(android.os.Parcel,int) -> E
    void a(android.os.Parcel,int,java.util.List,java.lang.ClassLoader) -> a
com.google.android.gms.common.internal.safeparcel.a$a -> com.google.android.gms.common.internal.safeparcel.b:
com.google.android.gms.common.internal.safeparcel.b -> com.google.android.gms.common.internal.safeparcel.c:
    void b(android.os.Parcel,int,int) -> b
    int F(android.os.Parcel,int) -> b
    void G(android.os.Parcel,int) -> c
    int H(android.os.Parcel) -> a
    void H(android.os.Parcel,int) -> a
    void a(android.os.Parcel,int,boolean) -> a
    void a(android.os.Parcel,int,java.lang.Boolean,boolean) -> a
    void a(android.os.Parcel,int,byte) -> a
    void a(android.os.Parcel,int,short) -> a
    void c(android.os.Parcel,int,int) -> a
    void a(android.os.Parcel,int,java.lang.Integer,boolean) -> a
    void a(android.os.Parcel,int,long) -> a
    void a(android.os.Parcel,int,java.lang.Long,boolean) -> a
    void a(android.os.Parcel,int,float) -> a
    void a(android.os.Parcel,int,double) -> a
    void a(android.os.Parcel,int,java.lang.String,boolean) -> a
    void a(android.os.Parcel,int,android.os.IBinder,boolean) -> a
    void a(android.os.Parcel,int,android.os.Parcelable,int,boolean) -> a
    void a(android.os.Parcel,int,android.os.Bundle,boolean) -> a
    void a(android.os.Parcel,int,byte[],boolean) -> a
    void a(android.os.Parcel,int,byte[][],boolean) -> a
    void a(android.os.Parcel,int,int[],boolean) -> a
    void a(android.os.Parcel,int,java.lang.String[],boolean) -> a
    void a(android.os.Parcel,int,java.util.List,boolean) -> a
    void b(android.os.Parcel,int,java.util.List,boolean) -> b
    void a(android.os.Parcel,int,android.os.Parcelable[],int,boolean) -> a
    void c(android.os.Parcel,int,java.util.List,boolean) -> c
    void a(android.os.Parcel,android.os.Parcelable,int) -> a
    void a(android.os.Parcel,int,android.os.Parcel,boolean) -> a
    void d(android.os.Parcel,int,java.util.List,boolean) -> d
com.google.android.gms.drive.Contents -> com.google.android.gms.drive.Contents:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    android.os.ParcelFileDescriptor LG -> b
    int ve -> c
    int Oi -> d
    com.google.android.gms.drive.DriveId Oj -> e
    boolean Ok -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getRequestId() -> a
com.google.android.gms.drive.DriveId -> com.google.android.gms.drive.DriveId:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String Ot -> b
    long Ou -> c
    long Ov -> d
    java.lang.String Ow -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String encodeToString() -> a
    byte[] iu() -> b
    java.lang.String toString() -> toString
com.google.android.gms.drive.DrivePreferences -> com.google.android.gms.drive.DrivePreferences:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    boolean Ox -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.RealtimeDocumentSyncRequest -> com.google.android.gms.drive.RealtimeDocumentSyncRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.util.List OK -> b
    java.util.List OL -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.StorageStats -> com.google.android.gms.drive.StorageStats:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    long OM -> b
    long ON -> c
    long OO -> d
    long OP -> e
    int OQ -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.UserMetadata -> com.google.android.gms.drive.UserMetadata:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String OR -> b
    java.lang.String OS -> c
    java.lang.String OT -> d
    boolean OU -> e
    java.lang.String OV -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.google.android.gms.drive.a -> com.google.android.gms.drive.a:
    com.google.android.gms.drive.Contents R(android.os.Parcel) -> a
    com.google.android.gms.drive.Contents[] aX(int) -> a
    void a(com.google.android.gms.drive.Contents,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.c -> com.google.android.gms.drive.b:
    com.google.android.gms.drive.DriveId S(android.os.Parcel) -> a
    com.google.android.gms.drive.DriveId[] aY(int) -> a
    void a(com.google.android.gms.drive.DriveId,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.d -> com.google.android.gms.drive.c:
    com.google.android.gms.drive.DrivePreferences T(android.os.Parcel) -> a
    com.google.android.gms.drive.DrivePreferences[] aZ(int) -> a
    void a(com.google.android.gms.drive.DrivePreferences,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.events.ChangeEvent -> com.google.android.gms.drive.events.ChangeEvent:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId Oj -> b
    int OX -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.google.android.gms.drive.events.CompletionEvent -> com.google.android.gms.drive.events.CompletionEvent:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId Oj -> b
    java.lang.String DZ -> c
    android.os.ParcelFileDescriptor OY -> d
    android.os.ParcelFileDescriptor OZ -> e
    com.google.android.gms.drive.metadata.internal.MetadataBundle Pa -> f
    java.util.List Pb -> g
    int FP -> h
    android.os.IBinder Pc -> i
    boolean Pd -> j
    boolean Pe -> k
    boolean Pf -> l
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.google.android.gms.drive.events.DriveEvent -> com.google.android.gms.drive.events.DriveEvent:
com.google.android.gms.drive.events.ResourceEvent -> com.google.android.gms.drive.events.ResourceEvent:
com.google.android.gms.drive.events.a -> com.google.android.gms.drive.events.a:
    com.google.android.gms.drive.events.ChangeEvent X(android.os.Parcel) -> a
    com.google.android.gms.drive.events.ChangeEvent[] bf(int) -> a
    void a(com.google.android.gms.drive.events.ChangeEvent,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.events.b -> com.google.android.gms.drive.events.b:
    com.google.android.gms.drive.events.CompletionEvent Y(android.os.Parcel) -> a
    com.google.android.gms.drive.events.CompletionEvent[] bg(int) -> a
    void a(com.google.android.gms.drive.events.CompletionEvent,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.f -> com.google.android.gms.drive.d:
    com.google.android.gms.drive.RealtimeDocumentSyncRequest U(android.os.Parcel) -> a
    com.google.android.gms.drive.RealtimeDocumentSyncRequest[] bc(int) -> a
    void a(com.google.android.gms.drive.RealtimeDocumentSyncRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.g -> com.google.android.gms.drive.e:
    com.google.android.gms.drive.StorageStats V(android.os.Parcel) -> a
    com.google.android.gms.drive.StorageStats[] bd(int) -> a
    void a(com.google.android.gms.drive.StorageStats,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.h -> com.google.android.gms.drive.f:
    com.google.android.gms.drive.UserMetadata W(android.os.Parcel) -> a
    com.google.android.gms.drive.UserMetadata[] be(int) -> a
    void a(com.google.android.gms.drive.UserMetadata,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.i -> com.google.android.gms.drive.i:
    boolean OW -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void I(android.os.Parcel,int) -> a
    boolean iB() -> a
com.google.android.gms.drive.internal.AddEventListenerRequest -> com.google.android.gms.drive.internal.AddEventListenerRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId Oj -> b
    int Pm -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.AuthorizeAccessRequest -> com.google.android.gms.drive.internal.AuthorizeAccessRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    long Pn -> b
    com.google.android.gms.drive.DriveId Oj -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.CancelPendingActionsRequest -> com.google.android.gms.drive.internal.CancelPendingActionsRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.util.List Pb -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.CheckResourceIdsExistRequest -> com.google.android.gms.drive.internal.CheckResourceIdsExistRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.util.List Po -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> a
    java.util.List iF() -> b
com.google.android.gms.drive.internal.CloseContentsAndUpdateMetadataRequest -> com.google.android.gms.drive.internal.CloseContentsAndUpdateMetadataRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId Pp -> b
    com.google.android.gms.drive.metadata.internal.MetadataBundle Pq -> c
    com.google.android.gms.drive.Contents Pr -> d
    boolean Oz -> e
    java.lang.String Oy -> f
    int Ps -> g
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.CloseContentsRequest -> com.google.android.gms.drive.internal.CloseContentsRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.Contents Pr -> b
    java.lang.Boolean Pt -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.CreateContentsRequest -> com.google.android.gms.drive.internal.CreateContentsRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    int Oi -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.CreateFileIntentSenderRequest -> com.google.android.gms.drive.internal.CreateFileIntentSenderRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.metadata.internal.MetadataBundle Px -> b
    int ve -> c
    java.lang.String OH -> d
    com.google.android.gms.drive.DriveId OJ -> e
    java.lang.Integer Py -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.CreateFileRequest -> com.google.android.gms.drive.internal.CreateFileRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId Pz -> b
    com.google.android.gms.drive.metadata.internal.MetadataBundle Px -> c
    com.google.android.gms.drive.Contents Pr -> d
    java.lang.Integer Py -> e
    boolean PA -> f
    java.lang.String Oy -> g
    int PB -> h
    int PC -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.CreateFolderRequest -> com.google.android.gms.drive.internal.CreateFolderRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId Pz -> b
    com.google.android.gms.drive.metadata.internal.MetadataBundle Px -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.DeleteResourceRequest -> com.google.android.gms.drive.internal.DeleteResourceRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId Pp -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.DisconnectRequest -> com.google.android.gms.drive.internal.DisconnectRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.FileUploadPreferencesImpl -> com.google.android.gms.drive.internal.FileUploadPreferencesImpl:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    int Qz -> b
    int QA -> c
    boolean QB -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.GetDriveIdFromUniqueIdentifierRequest -> com.google.android.gms.drive.internal.GetDriveIdFromUniqueIdentifierRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String QC -> b
    boolean QD -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.GetMetadataRequest -> com.google.android.gms.drive.internal.GetMetadataRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId Pp -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.ListParentsRequest -> com.google.android.gms.drive.internal.ListParentsRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId QE -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.LoadRealtimeRequest -> com.google.android.gms.drive.internal.LoadRealtimeRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId Oj -> b
    boolean QF -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OnContentsResponse -> com.google.android.gms.drive.internal.OnContentsResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.Contents PW -> b
    boolean QJ -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OnDeviceUsagePreferenceResponse -> com.google.android.gms.drive.internal.OnDeviceUsagePreferenceResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.internal.FileUploadPreferencesImpl QK -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OnDownloadProgressResponse -> com.google.android.gms.drive.internal.OnDownloadProgressResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    long QL -> b
    long QM -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OnDriveIdResponse -> com.google.android.gms.drive.internal.OnDriveIdResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId Pp -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OnDrivePreferencesResponse -> com.google.android.gms.drive.internal.OnDrivePreferencesResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DrivePreferences QN -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OnEventResponse -> com.google.android.gms.drive.internal.OnEventResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    int Pm -> b
    com.google.android.gms.drive.events.ChangeEvent QO -> c
    com.google.android.gms.drive.events.CompletionEvent QP -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OnListEntriesResponse -> com.google.android.gms.drive.internal.OnListEntriesResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.common.data.DataHolder QQ -> b
    boolean PJ -> c
    int describeContents() -> describeContents
    void I(android.os.Parcel,int) -> a
com.google.android.gms.drive.internal.OnListParentsResponse -> com.google.android.gms.drive.internal.OnListParentsResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.common.data.DataHolder QR -> b
    int describeContents() -> describeContents
    void I(android.os.Parcel,int) -> a
com.google.android.gms.drive.internal.OnLoadRealtimeResponse -> com.google.android.gms.drive.internal.OnLoadRealtimeResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    boolean wg -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OnMetadataResponse -> com.google.android.gms.drive.internal.OnMetadataResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.metadata.internal.MetadataBundle Px -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OnResourceIdSetResponse -> com.google.android.gms.drive.internal.OnResourceIdSetResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.util.List Po -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> a
    java.util.List iF() -> b
com.google.android.gms.drive.internal.OnStorageStatsResponse -> com.google.android.gms.drive.internal.OnStorageStatsResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.StorageStats QS -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OnSyncMoreResponse -> com.google.android.gms.drive.internal.OnSyncMoreResponse:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    boolean PJ -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OpenContentsRequest -> com.google.android.gms.drive.internal.OpenContentsRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId Pp -> b
    int Oi -> c
    int QT -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.OpenFileIntentSenderRequest -> com.google.android.gms.drive.internal.OpenFileIntentSenderRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String OH -> b
    java.lang.String[] OI -> c
    com.google.android.gms.drive.DriveId OJ -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.QueryRequest -> com.google.android.gms.drive.internal.QueryRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.query.Query QV -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.RemoveEventListenerRequest -> com.google.android.gms.drive.internal.RemoveEventListenerRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId Oj -> b
    int Pm -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.SetDrivePreferencesRequest -> com.google.android.gms.drive.internal.SetDrivePreferencesRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DrivePreferences QN -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.SetFileUploadPreferencesRequest -> com.google.android.gms.drive.internal.SetFileUploadPreferencesRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.internal.FileUploadPreferencesImpl QK -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.SetResourceParentsRequest -> com.google.android.gms.drive.internal.SetResourceParentsRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId QW -> b
    java.util.List QX -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.TrashResourceRequest -> com.google.android.gms.drive.internal.TrashResourceRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId Pp -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.UpdateMetadataRequest -> com.google.android.gms.drive.internal.UpdateMetadataRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.DriveId Pp -> b
    com.google.android.gms.drive.metadata.internal.MetadataBundle Pq -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.internal.a -> com.google.android.gms.drive.internal.a:
    com.google.android.gms.drive.internal.AddEventListenerRequest Z(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.AddEventListenerRequest[] bj(int) -> a
    void a(com.google.android.gms.drive.internal.AddEventListenerRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.ab -> com.google.android.gms.drive.internal.b:
    com.google.android.gms.drive.internal.FileUploadPreferencesImpl al(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.FileUploadPreferencesImpl[] bA(int) -> a
    void a(com.google.android.gms.drive.internal.FileUploadPreferencesImpl,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.ac -> com.google.android.gms.drive.internal.c:
    com.google.android.gms.drive.internal.GetDriveIdFromUniqueIdentifierRequest am(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.GetDriveIdFromUniqueIdentifierRequest[] bB(int) -> a
    void a(com.google.android.gms.drive.internal.GetDriveIdFromUniqueIdentifierRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.ad -> com.google.android.gms.drive.internal.d:
    com.google.android.gms.drive.internal.GetMetadataRequest an(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.GetMetadataRequest[] bC(int) -> a
    void a(com.google.android.gms.drive.internal.GetMetadataRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.ai -> com.google.android.gms.drive.internal.e:
    com.google.android.gms.drive.internal.ListParentsRequest ao(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.ListParentsRequest[] bD(int) -> a
    void a(com.google.android.gms.drive.internal.ListParentsRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.aj -> com.google.android.gms.drive.internal.f:
    com.google.android.gms.drive.internal.LoadRealtimeRequest ap(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.LoadRealtimeRequest[] bE(int) -> a
    void a(com.google.android.gms.drive.internal.LoadRealtimeRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.ak -> com.google.android.gms.drive.internal.g:
    int versionCode -> a
    java.lang.String QG -> b
    long QH -> c
    long QI -> d
    com.google.android.gms.drive.internal.ak iK() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void a(com.google.android.gms.internal.qp) -> a
    int c() -> b
com.google.android.gms.drive.internal.al -> com.google.android.gms.drive.internal.h:
    com.google.android.gms.drive.internal.OnContentsResponse aq(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnContentsResponse[] bF(int) -> a
    void a(com.google.android.gms.drive.internal.OnContentsResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.am -> com.google.android.gms.drive.internal.i:
    com.google.android.gms.drive.internal.OnDeviceUsagePreferenceResponse ar(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnDeviceUsagePreferenceResponse[] bG(int) -> a
    void a(com.google.android.gms.drive.internal.OnDeviceUsagePreferenceResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.an -> com.google.android.gms.drive.internal.j:
    com.google.android.gms.drive.internal.OnDownloadProgressResponse as(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnDownloadProgressResponse[] bH(int) -> a
    void a(com.google.android.gms.drive.internal.OnDownloadProgressResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.ao -> com.google.android.gms.drive.internal.k:
    com.google.android.gms.drive.internal.OnDriveIdResponse at(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnDriveIdResponse[] bI(int) -> a
    void a(com.google.android.gms.drive.internal.OnDriveIdResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.ap -> com.google.android.gms.drive.internal.l:
    com.google.android.gms.drive.internal.OnDrivePreferencesResponse au(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnDrivePreferencesResponse[] bJ(int) -> a
    void a(com.google.android.gms.drive.internal.OnDrivePreferencesResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.aq -> com.google.android.gms.drive.internal.m:
    com.google.android.gms.drive.internal.OnEventResponse av(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnEventResponse[] bK(int) -> a
    void a(com.google.android.gms.drive.internal.OnEventResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.ar -> com.google.android.gms.drive.internal.n:
    com.google.android.gms.drive.internal.OnListEntriesResponse aw(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnListEntriesResponse[] bL(int) -> a
    void a(com.google.android.gms.drive.internal.OnListEntriesResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.as -> com.google.android.gms.drive.internal.o:
    com.google.android.gms.drive.internal.OnListParentsResponse ax(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnListParentsResponse[] bM(int) -> a
    void a(com.google.android.gms.drive.internal.OnListParentsResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.at -> com.google.android.gms.drive.internal.p:
    com.google.android.gms.drive.internal.OnMetadataResponse ay(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnMetadataResponse[] bN(int) -> a
    void a(com.google.android.gms.drive.internal.OnMetadataResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.au -> com.google.android.gms.drive.internal.q:
    com.google.android.gms.drive.internal.OnLoadRealtimeResponse az(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnLoadRealtimeResponse[] bO(int) -> a
    void a(com.google.android.gms.drive.internal.OnLoadRealtimeResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.av -> com.google.android.gms.drive.internal.r:
    com.google.android.gms.drive.internal.OnResourceIdSetResponse aA(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnResourceIdSetResponse[] bP(int) -> a
    void a(com.google.android.gms.drive.internal.OnResourceIdSetResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.aw -> com.google.android.gms.drive.internal.s:
    com.google.android.gms.drive.internal.OnStorageStatsResponse aB(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnStorageStatsResponse[] bQ(int) -> a
    void a(com.google.android.gms.drive.internal.OnStorageStatsResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.ax -> com.google.android.gms.drive.internal.t:
    com.google.android.gms.drive.internal.OnSyncMoreResponse aC(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OnSyncMoreResponse[] bR(int) -> a
    void a(com.google.android.gms.drive.internal.OnSyncMoreResponse,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.ay -> com.google.android.gms.drive.internal.u:
    com.google.android.gms.drive.internal.OpenContentsRequest aD(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OpenContentsRequest[] bS(int) -> a
    void a(com.google.android.gms.drive.internal.OpenContentsRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.b -> com.google.android.gms.drive.internal.v:
    com.google.android.gms.drive.internal.AuthorizeAccessRequest aa(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.AuthorizeAccessRequest[] bk(int) -> a
    void a(com.google.android.gms.drive.internal.AuthorizeAccessRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.ba -> com.google.android.gms.drive.internal.w:
    com.google.android.gms.drive.internal.OpenFileIntentSenderRequest aE(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.OpenFileIntentSenderRequest[] bT(int) -> a
    void a(com.google.android.gms.drive.internal.OpenFileIntentSenderRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.bb -> com.google.android.gms.drive.internal.x:
    com.google.android.gms.drive.internal.QueryRequest aF(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.QueryRequest[] bU(int) -> a
    void a(com.google.android.gms.drive.internal.QueryRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.bc -> com.google.android.gms.drive.internal.y:
    com.google.android.gms.drive.internal.RemoveEventListenerRequest aG(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.RemoveEventListenerRequest[] bV(int) -> a
    void a(com.google.android.gms.drive.internal.RemoveEventListenerRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.bd -> com.google.android.gms.drive.internal.z:
    com.google.android.gms.drive.internal.SetDrivePreferencesRequest aH(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.SetDrivePreferencesRequest[] bW(int) -> a
    void a(com.google.android.gms.drive.internal.SetDrivePreferencesRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.be -> com.google.android.gms.drive.internal.aa:
    com.google.android.gms.drive.internal.SetFileUploadPreferencesRequest aI(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.SetFileUploadPreferencesRequest[] bX(int) -> a
    void a(com.google.android.gms.drive.internal.SetFileUploadPreferencesRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.bf -> com.google.android.gms.drive.internal.ab:
    com.google.android.gms.drive.internal.SetResourceParentsRequest aJ(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.SetResourceParentsRequest[] bY(int) -> a
    void a(com.google.android.gms.drive.internal.SetResourceParentsRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.bh -> com.google.android.gms.drive.internal.ac:
    com.google.android.gms.drive.internal.TrashResourceRequest aK(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.TrashResourceRequest[] bZ(int) -> a
    void a(com.google.android.gms.drive.internal.TrashResourceRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.bi -> com.google.android.gms.drive.internal.ad:
    com.google.android.gms.drive.internal.UpdateMetadataRequest aL(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.UpdateMetadataRequest[] ca(int) -> a
    void a(com.google.android.gms.drive.internal.UpdateMetadataRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.d -> com.google.android.gms.drive.internal.ae:
    com.google.android.gms.drive.internal.CancelPendingActionsRequest ab(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.CancelPendingActionsRequest[] bl(int) -> a
    void a(com.google.android.gms.drive.internal.CancelPendingActionsRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.e -> com.google.android.gms.drive.internal.af:
    com.google.android.gms.drive.internal.CheckResourceIdsExistRequest ac(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.CheckResourceIdsExistRequest[] bm(int) -> a
    void a(com.google.android.gms.drive.internal.CheckResourceIdsExistRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.f -> com.google.android.gms.drive.internal.ag:
    com.google.android.gms.drive.internal.CloseContentsAndUpdateMetadataRequest ad(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.CloseContentsAndUpdateMetadataRequest[] bn(int) -> a
    void a(com.google.android.gms.drive.internal.CloseContentsAndUpdateMetadataRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.g -> com.google.android.gms.drive.internal.ah:
    com.google.android.gms.drive.internal.CloseContentsRequest ae(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.CloseContentsRequest[] bo(int) -> a
    void a(com.google.android.gms.drive.internal.CloseContentsRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.h -> com.google.android.gms.drive.internal.ai:
    com.google.android.gms.drive.internal.CreateContentsRequest af(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.CreateContentsRequest[] bp(int) -> a
    void a(com.google.android.gms.drive.internal.CreateContentsRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.j -> com.google.android.gms.drive.internal.aj:
    com.google.android.gms.drive.internal.CreateFileIntentSenderRequest ag(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.CreateFileIntentSenderRequest[] br(int) -> a
    void a(com.google.android.gms.drive.internal.CreateFileIntentSenderRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.k -> com.google.android.gms.drive.internal.ak:
    com.google.android.gms.drive.internal.CreateFileRequest ah(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.CreateFileRequest[] bs(int) -> a
    void a(com.google.android.gms.drive.internal.CreateFileRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.l -> com.google.android.gms.drive.internal.al:
    com.google.android.gms.drive.internal.CreateFolderRequest ai(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.CreateFolderRequest[] bt(int) -> a
    void a(com.google.android.gms.drive.internal.CreateFolderRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.n -> com.google.android.gms.drive.internal.am:
    com.google.android.gms.drive.internal.DeleteResourceRequest aj(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.DeleteResourceRequest[] bu(int) -> a
    void a(com.google.android.gms.drive.internal.DeleteResourceRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.o -> com.google.android.gms.drive.internal.an:
    com.google.android.gms.drive.internal.DisconnectRequest ak(android.os.Parcel) -> a
    com.google.android.gms.drive.internal.DisconnectRequest[] bv(int) -> a
    void a(com.google.android.gms.drive.internal.DisconnectRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.internal.w -> com.google.android.gms.drive.internal.ao:
    com.google.android.gms.internal.jp Qp -> a
    void o(java.lang.String,java.lang.String) -> a
com.google.android.gms.drive.metadata.CustomPropertyKey -> com.google.android.gms.drive.metadata.CustomPropertyKey:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String KP -> b
    int mVisibility -> c
    java.util.regex.Pattern Rc -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getKey() -> a
    int getVisibility() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.drive.metadata.MetadataField -> com.google.android.gms.drive.metadata.a:
    java.lang.String getName() -> a
    java.lang.Object h(android.os.Bundle) -> a
com.google.android.gms.drive.metadata.SearchableCollectionMetadataField -> com.google.android.gms.drive.metadata.b:
com.google.android.gms.drive.metadata.SearchableMetadataField -> com.google.android.gms.drive.metadata.c:
com.google.android.gms.drive.metadata.SearchableOrderedMetadataField -> com.google.android.gms.drive.metadata.d:
com.google.android.gms.drive.metadata.SortableMetadataField -> com.google.android.gms.drive.metadata.e:
com.google.android.gms.drive.metadata.a -> com.google.android.gms.drive.metadata.f:
    java.lang.String QY -> a
    java.util.Set QZ -> b
    java.util.Set Ra -> c
    int Rb -> d
    java.lang.String getName() -> a
    java.lang.Object h(android.os.Bundle) -> a
    java.lang.Object i(android.os.Bundle) -> b
    java.lang.String toString() -> toString
com.google.android.gms.drive.metadata.b -> com.google.android.gms.drive.metadata.g:
com.google.android.gms.drive.metadata.c -> com.google.android.gms.drive.metadata.h:
    com.google.android.gms.drive.metadata.CustomPropertyKey aM(android.os.Parcel) -> a
    com.google.android.gms.drive.metadata.CustomPropertyKey[] cb(int) -> a
    void a(com.google.android.gms.drive.metadata.CustomPropertyKey,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.metadata.d -> com.google.android.gms.drive.metadata.i:
com.google.android.gms.drive.metadata.internal.AppVisibleCustomProperties -> com.google.android.gms.drive.metadata.internal.AppVisibleCustomProperties:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.drive.metadata.internal.AppVisibleCustomProperties Rd -> a
    int CK -> b
    java.util.List Re -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.util.Iterator iterator() -> iterator
com.google.android.gms.drive.metadata.internal.AppVisibleCustomProperties$1 -> com.google.android.gms.drive.metadata.internal.a:
com.google.android.gms.drive.metadata.internal.AppVisibleCustomProperties$a -> com.google.android.gms.drive.metadata.internal.b:
    java.util.Map Rf -> a
    com.google.android.gms.drive.metadata.internal.AppVisibleCustomProperties iW() -> a
com.google.android.gms.drive.metadata.internal.CustomProperty -> com.google.android.gms.drive.metadata.internal.CustomProperty:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.metadata.CustomPropertyKey Rg -> b
    java.lang.String mValue -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.metadata.internal.MetadataBundle -> com.google.android.gms.drive.metadata.internal.MetadataBundle:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    android.os.Bundle Ri -> b
    java.lang.Object a(com.google.android.gms.drive.metadata.MetadataField) -> a
    java.util.Set ja() -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.metadata.internal.a -> com.google.android.gms.drive.metadata.internal.c:
    com.google.android.gms.drive.metadata.internal.AppVisibleCustomProperties aN(android.os.Parcel) -> a
    com.google.android.gms.drive.metadata.internal.AppVisibleCustomProperties[] cc(int) -> a
    void a(com.google.android.gms.drive.metadata.internal.AppVisibleCustomProperties,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.metadata.internal.b -> com.google.android.gms.drive.metadata.internal.d:
    java.lang.Boolean j(android.os.Bundle) -> c
    java.lang.Object i(android.os.Bundle) -> b
com.google.android.gms.drive.metadata.internal.c -> com.google.android.gms.drive.metadata.internal.e:
    com.google.android.gms.drive.metadata.internal.CustomProperty aO(android.os.Parcel) -> a
    com.google.android.gms.drive.metadata.internal.CustomProperty[] cd(int) -> a
    void a(com.google.android.gms.drive.metadata.internal.CustomProperty,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.metadata.internal.d -> com.google.android.gms.drive.metadata.internal.f:
    java.util.Date k(android.os.Bundle) -> c
    java.lang.Object i(android.os.Bundle) -> b
com.google.android.gms.drive.metadata.internal.e -> com.google.android.gms.drive.metadata.internal.g:
    java.util.Map Rh -> a
    void b(com.google.android.gms.drive.metadata.MetadataField) -> a
    com.google.android.gms.drive.metadata.MetadataField bm(java.lang.String) -> a
com.google.android.gms.drive.metadata.internal.f -> com.google.android.gms.drive.metadata.internal.h:
    java.lang.Integer l(android.os.Bundle) -> c
    java.lang.Object i(android.os.Bundle) -> b
com.google.android.gms.drive.metadata.internal.g -> com.google.android.gms.drive.metadata.internal.i:
    java.lang.Long m(android.os.Bundle) -> c
    java.lang.Object i(android.os.Bundle) -> b
com.google.android.gms.drive.metadata.internal.h -> com.google.android.gms.drive.metadata.internal.j:
    com.google.android.gms.drive.metadata.internal.MetadataBundle aP(android.os.Parcel) -> a
    com.google.android.gms.drive.metadata.internal.MetadataBundle[] ce(int) -> a
    void a(com.google.android.gms.drive.metadata.internal.MetadataBundle,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.metadata.internal.i -> com.google.android.gms.drive.metadata.internal.k:
    java.util.Collection n(android.os.Bundle) -> c
    java.lang.Object i(android.os.Bundle) -> b
com.google.android.gms.drive.metadata.internal.j -> com.google.android.gms.drive.metadata.internal.l:
    android.os.Parcelable o(android.os.Bundle) -> c
    java.lang.Object i(android.os.Bundle) -> b
com.google.android.gms.drive.metadata.internal.k -> com.google.android.gms.drive.metadata.internal.m:
    java.util.Collection n(android.os.Bundle) -> c
    java.lang.Object i(android.os.Bundle) -> b
com.google.android.gms.drive.metadata.internal.l -> com.google.android.gms.drive.metadata.internal.n:
    java.lang.String p(android.os.Bundle) -> c
    java.lang.Object i(android.os.Bundle) -> b
com.google.android.gms.drive.metadata.internal.m -> com.google.android.gms.drive.metadata.internal.o:
    java.util.Collection bp(java.lang.String) -> a
    java.lang.String q(java.lang.String,java.lang.String) -> a
com.google.android.gms.drive.query.Filter -> com.google.android.gms.drive.query.Filter:
    java.lang.Object a(com.google.android.gms.drive.query.internal.f) -> a
com.google.android.gms.drive.query.Query -> com.google.android.gms.drive.query.Query:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.drive.query.internal.LogicalFilter RY -> a
    java.lang.String RZ -> b
    com.google.android.gms.drive.query.SortOrder Sa -> c
    java.util.List Sb -> d
    int CK -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.google.android.gms.drive.query.SortOrder -> com.google.android.gms.drive.query.SortOrder:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List Sf -> a
    boolean Sg -> b
    int CK -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.google.android.gms.drive.query.a -> com.google.android.gms.drive.query.a:
    com.google.android.gms.drive.query.Query aQ(android.os.Parcel) -> a
    com.google.android.gms.drive.query.Query[] cf(int) -> a
    void a(com.google.android.gms.drive.query.Query,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.b -> com.google.android.gms.drive.query.b:
    com.google.android.gms.drive.query.SortOrder aR(android.os.Parcel) -> a
    com.google.android.gms.drive.query.SortOrder[] cg(int) -> a
    void a(com.google.android.gms.drive.query.SortOrder,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.c -> com.google.android.gms.drive.query.c:
    java.lang.String bq(java.lang.String) -> a
    java.lang.String a(com.google.android.gms.drive.query.internal.Operator,java.util.List) -> a
    java.lang.String jc() -> a
    java.lang.String c(com.google.android.gms.drive.metadata.MetadataField) -> a
    java.lang.String a(com.google.android.gms.drive.query.internal.Operator,com.google.android.gms.drive.metadata.MetadataField,java.lang.Object) -> a
    java.lang.String c(com.google.android.gms.drive.metadata.MetadataField,java.lang.Object) -> a
    java.lang.String a(com.google.android.gms.drive.metadata.b,java.lang.Object) -> a
    java.lang.Object jd() -> b
    java.lang.Object b(com.google.android.gms.drive.query.internal.Operator,java.util.List) -> b
    java.lang.Object j(java.lang.Object) -> a
    java.lang.Object b(com.google.android.gms.drive.metadata.b,java.lang.Object) -> b
    java.lang.Object d(com.google.android.gms.drive.metadata.MetadataField,java.lang.Object) -> b
    java.lang.Object b(com.google.android.gms.drive.query.internal.Operator,com.google.android.gms.drive.metadata.MetadataField,java.lang.Object) -> b
    java.lang.Object d(com.google.android.gms.drive.metadata.MetadataField) -> b
com.google.android.gms.drive.query.internal.AbstractFilter -> com.google.android.gms.drive.query.internal.AbstractFilter:
    java.lang.String toString() -> toString
com.google.android.gms.drive.query.internal.ComparisonFilter -> com.google.android.gms.drive.query.internal.ComparisonFilter:
    com.google.android.gms.drive.query.internal.a CREATOR -> a
    com.google.android.gms.drive.query.internal.Operator Sh -> b
    com.google.android.gms.drive.metadata.internal.MetadataBundle Si -> c
    int CK -> d
    com.google.android.gms.drive.metadata.MetadataField Sj -> e
    java.lang.Object a(com.google.android.gms.drive.query.internal.f) -> a
    java.lang.Object getValue() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.query.internal.FieldOnlyFilter -> com.google.android.gms.drive.query.internal.FieldOnlyFilter:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.drive.metadata.internal.MetadataBundle Si -> a
    int CK -> b
    com.google.android.gms.drive.metadata.MetadataField Sj -> c
    java.lang.Object a(com.google.android.gms.drive.query.internal.f) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.query.internal.FieldWithSortOrder -> com.google.android.gms.drive.query.internal.FieldWithSortOrder:
    com.google.android.gms.drive.query.internal.c CREATOR -> a
    java.lang.String QY -> b
    boolean Sk -> c
    int CK -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.google.android.gms.drive.query.internal.FilterHolder -> com.google.android.gms.drive.query.internal.FilterHolder:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.drive.query.internal.ComparisonFilter Sl -> b
    com.google.android.gms.drive.query.internal.FieldOnlyFilter Sm -> c
    com.google.android.gms.drive.query.internal.LogicalFilter Sn -> d
    com.google.android.gms.drive.query.internal.NotFilter So -> e
    com.google.android.gms.drive.query.internal.InFilter Sp -> f
    com.google.android.gms.drive.query.internal.MatchAllFilter Sq -> g
    com.google.android.gms.drive.query.internal.HasFilter Sr -> h
    com.google.android.gms.drive.query.Filter Ss -> i
    com.google.android.gms.drive.query.Filter getFilter() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.google.android.gms.drive.query.internal.HasFilter -> com.google.android.gms.drive.query.internal.HasFilter:
    com.google.android.gms.drive.query.internal.g CREATOR -> a
    com.google.android.gms.drive.metadata.internal.MetadataBundle Si -> b
    int CK -> c
    com.google.android.gms.drive.metadata.MetadataField Sj -> d
    java.lang.Object a(com.google.android.gms.drive.query.internal.f) -> a
    java.lang.Object getValue() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.query.internal.InFilter -> com.google.android.gms.drive.query.internal.InFilter:
    com.google.android.gms.drive.query.internal.h CREATOR -> a
    com.google.android.gms.drive.metadata.internal.MetadataBundle Si -> b
    int CK -> c
    com.google.android.gms.drive.metadata.b St -> d
    java.lang.Object a(com.google.android.gms.drive.query.internal.f) -> a
    java.lang.Object getValue() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.query.internal.LogicalFilter -> com.google.android.gms.drive.query.internal.LogicalFilter:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.drive.query.internal.Operator Sh -> a
    java.util.List Su -> b
    int CK -> c
    java.lang.Object a(com.google.android.gms.drive.query.internal.f) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.query.internal.MatchAllFilter -> com.google.android.gms.drive.query.internal.MatchAllFilter:
    com.google.android.gms.drive.query.internal.j CREATOR -> a
    int CK -> b
    java.lang.Object a(com.google.android.gms.drive.query.internal.f) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.query.internal.NotFilter -> com.google.android.gms.drive.query.internal.NotFilter:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.drive.query.internal.FilterHolder Sv -> a
    int CK -> b
    java.lang.Object a(com.google.android.gms.drive.query.internal.f) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.query.internal.Operator -> com.google.android.gms.drive.query.internal.Operator:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.drive.query.internal.Operator Sw -> a
    com.google.android.gms.drive.query.internal.Operator Sx -> b
    com.google.android.gms.drive.query.internal.Operator Sy -> c
    com.google.android.gms.drive.query.internal.Operator Sz -> d
    com.google.android.gms.drive.query.internal.Operator SA -> e
    com.google.android.gms.drive.query.internal.Operator SB -> f
    com.google.android.gms.drive.query.internal.Operator SC -> g
    com.google.android.gms.drive.query.internal.Operator SD -> h
    com.google.android.gms.drive.query.internal.Operator SE -> i
    java.lang.String mTag -> j
    int CK -> k
    java.lang.String getTag() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.drive.query.internal.a -> com.google.android.gms.drive.query.internal.a:
    com.google.android.gms.drive.query.internal.ComparisonFilter aS(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.ComparisonFilter[] ch(int) -> a
    void a(com.google.android.gms.drive.query.internal.ComparisonFilter,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.b -> com.google.android.gms.drive.query.internal.b:
    com.google.android.gms.drive.query.internal.FieldOnlyFilter aT(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.FieldOnlyFilter[] ci(int) -> a
    void a(com.google.android.gms.drive.query.internal.FieldOnlyFilter,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.c -> com.google.android.gms.drive.query.internal.c:
    com.google.android.gms.drive.query.internal.FieldWithSortOrder aU(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.FieldWithSortOrder[] cj(int) -> a
    void a(com.google.android.gms.drive.query.internal.FieldWithSortOrder,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.d -> com.google.android.gms.drive.query.internal.d:
    com.google.android.gms.drive.query.internal.FilterHolder aV(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.FilterHolder[] ck(int) -> a
    void a(com.google.android.gms.drive.query.internal.FilterHolder,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.e -> com.google.android.gms.drive.query.internal.e:
    com.google.android.gms.drive.metadata.MetadataField b(com.google.android.gms.drive.metadata.internal.MetadataBundle) -> a
com.google.android.gms.drive.query.internal.f -> com.google.android.gms.drive.query.internal.f:
    java.lang.Object d(com.google.android.gms.drive.metadata.MetadataField) -> b
    java.lang.Object b(com.google.android.gms.drive.query.internal.Operator,com.google.android.gms.drive.metadata.MetadataField,java.lang.Object) -> b
    java.lang.Object d(com.google.android.gms.drive.metadata.MetadataField,java.lang.Object) -> b
    java.lang.Object b(com.google.android.gms.drive.metadata.b,java.lang.Object) -> b
    java.lang.Object j(java.lang.Object) -> a
    java.lang.Object b(com.google.android.gms.drive.query.internal.Operator,java.util.List) -> b
    java.lang.Object jd() -> b
com.google.android.gms.drive.query.internal.g -> com.google.android.gms.drive.query.internal.g:
    com.google.android.gms.drive.query.internal.HasFilter aW(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.HasFilter[] cl(int) -> a
    void a(com.google.android.gms.drive.query.internal.HasFilter,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.h -> com.google.android.gms.drive.query.internal.h:
    com.google.android.gms.drive.query.internal.InFilter aX(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.InFilter[] cm(int) -> a
    void a(com.google.android.gms.drive.query.internal.InFilter,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.i -> com.google.android.gms.drive.query.internal.i:
    com.google.android.gms.drive.query.internal.LogicalFilter aY(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.LogicalFilter[] cn(int) -> a
    void a(com.google.android.gms.drive.query.internal.LogicalFilter,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.j -> com.google.android.gms.drive.query.internal.j:
    com.google.android.gms.drive.query.internal.MatchAllFilter aZ(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.MatchAllFilter[] co(int) -> a
    void a(com.google.android.gms.drive.query.internal.MatchAllFilter,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.k -> com.google.android.gms.drive.query.internal.k:
    com.google.android.gms.drive.query.internal.NotFilter ba(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.NotFilter[] cp(int) -> a
    void a(com.google.android.gms.drive.query.internal.NotFilter,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.query.internal.l -> com.google.android.gms.drive.query.internal.l:
    com.google.android.gms.drive.query.internal.Operator bb(android.os.Parcel) -> a
    com.google.android.gms.drive.query.internal.Operator[] cq(int) -> a
    void a(com.google.android.gms.drive.query.internal.Operator,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.realtime.internal.BeginCompoundOperationRequest -> com.google.android.gms.drive.realtime.internal.BeginCompoundOperationRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    boolean SF -> b
    java.lang.String mName -> c
    boolean SG -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.realtime.internal.EndCompoundOperationRequest -> com.google.android.gms.drive.realtime.internal.EndCompoundOperationRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.realtime.internal.ParcelableCollaborator -> com.google.android.gms.drive.realtime.internal.ParcelableCollaborator:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    boolean SH -> b
    boolean SI -> c
    java.lang.String vZ -> d
    java.lang.String SJ -> e
    java.lang.String OS -> f
    java.lang.String SK -> g
    java.lang.String SL -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.drive.realtime.internal.ParcelableIndexReference -> com.google.android.gms.drive.realtime.internal.ParcelableIndexReference:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String SM -> b
    int mIndex -> c
    boolean SN -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.realtime.internal.a -> com.google.android.gms.drive.realtime.internal.a:
    com.google.android.gms.drive.realtime.internal.BeginCompoundOperationRequest bc(android.os.Parcel) -> a
    com.google.android.gms.drive.realtime.internal.BeginCompoundOperationRequest[] cr(int) -> a
    void a(com.google.android.gms.drive.realtime.internal.BeginCompoundOperationRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.realtime.internal.b -> com.google.android.gms.drive.realtime.internal.b:
    com.google.android.gms.drive.realtime.internal.EndCompoundOperationRequest bd(android.os.Parcel) -> a
    com.google.android.gms.drive.realtime.internal.EndCompoundOperationRequest[] cs(int) -> a
    void a(com.google.android.gms.drive.realtime.internal.EndCompoundOperationRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.realtime.internal.event.ObjectChangedDetails -> com.google.android.gms.drive.realtime.internal.event.ObjectChangedDetails:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    int SO -> b
    int SP -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.realtime.internal.event.ParcelableEvent -> com.google.android.gms.drive.realtime.internal.event.ParcelableEvent:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String vZ -> b
    java.lang.String SJ -> c
    java.util.List SQ -> d
    boolean SR -> e
    java.lang.String SM -> f
    java.lang.String SS -> g
    com.google.android.gms.drive.realtime.internal.event.TextInsertedDetails ST -> h
    com.google.android.gms.drive.realtime.internal.event.TextDeletedDetails SU -> i
    com.google.android.gms.drive.realtime.internal.event.ValuesAddedDetails SV -> j
    com.google.android.gms.drive.realtime.internal.event.ValuesRemovedDetails SW -> k
    com.google.android.gms.drive.realtime.internal.event.ValuesSetDetails SX -> l
    com.google.android.gms.drive.realtime.internal.event.ValueChangedDetails SY -> m
    com.google.android.gms.drive.realtime.internal.event.ReferenceShiftedDetails SZ -> n
    com.google.android.gms.drive.realtime.internal.event.ObjectChangedDetails Ta -> o
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.realtime.internal.event.ParcelableEventList -> com.google.android.gms.drive.realtime.internal.event.ParcelableEventList:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.util.List mp -> b
    com.google.android.gms.common.data.DataHolder Tb -> c
    boolean Tc -> d
    java.util.List Td -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.realtime.internal.event.ReferenceShiftedDetails -> com.google.android.gms.drive.realtime.internal.event.ReferenceShiftedDetails:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String Te -> b
    java.lang.String Tf -> c
    int Tg -> d
    int Th -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.realtime.internal.event.TextDeletedDetails -> com.google.android.gms.drive.realtime.internal.event.TextDeletedDetails:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    int mIndex -> b
    int Ti -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.realtime.internal.event.TextInsertedDetails -> com.google.android.gms.drive.realtime.internal.event.TextInsertedDetails:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    int mIndex -> b
    int Ti -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.realtime.internal.event.ValueChangedDetails -> com.google.android.gms.drive.realtime.internal.event.ValueChangedDetails:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    int Tj -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.realtime.internal.event.ValuesAddedDetails -> com.google.android.gms.drive.realtime.internal.event.ValuesAddedDetails:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    int mIndex -> b
    int SO -> c
    int SP -> d
    java.lang.String Tk -> e
    int Tl -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.realtime.internal.event.ValuesRemovedDetails -> com.google.android.gms.drive.realtime.internal.event.ValuesRemovedDetails:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    int mIndex -> b
    int SO -> c
    int SP -> d
    java.lang.String Tm -> e
    int Tn -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.realtime.internal.event.ValuesSetDetails -> com.google.android.gms.drive.realtime.internal.event.ValuesSetDetails:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    int mIndex -> b
    int SO -> c
    int SP -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.drive.realtime.internal.event.a -> com.google.android.gms.drive.realtime.internal.event.a:
    com.google.android.gms.drive.realtime.internal.event.ObjectChangedDetails bg(android.os.Parcel) -> a
    com.google.android.gms.drive.realtime.internal.event.ObjectChangedDetails[] cw(int) -> a
    void a(com.google.android.gms.drive.realtime.internal.event.ObjectChangedDetails,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.realtime.internal.event.b -> com.google.android.gms.drive.realtime.internal.event.b:
    com.google.android.gms.drive.realtime.internal.event.ParcelableEvent bh(android.os.Parcel) -> a
    com.google.android.gms.drive.realtime.internal.event.ParcelableEvent[] cx(int) -> a
    void a(com.google.android.gms.drive.realtime.internal.event.ParcelableEvent,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.realtime.internal.event.c -> com.google.android.gms.drive.realtime.internal.event.c:
    com.google.android.gms.drive.realtime.internal.event.ParcelableEventList bi(android.os.Parcel) -> a
    com.google.android.gms.drive.realtime.internal.event.ParcelableEventList[] cy(int) -> a
    void a(com.google.android.gms.drive.realtime.internal.event.ParcelableEventList,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.realtime.internal.event.d -> com.google.android.gms.drive.realtime.internal.event.d:
    com.google.android.gms.drive.realtime.internal.event.ReferenceShiftedDetails bj(android.os.Parcel) -> a
    com.google.android.gms.drive.realtime.internal.event.ReferenceShiftedDetails[] cz(int) -> a
    void a(com.google.android.gms.drive.realtime.internal.event.ReferenceShiftedDetails,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.realtime.internal.event.e -> com.google.android.gms.drive.realtime.internal.event.e:
    com.google.android.gms.drive.realtime.internal.event.TextDeletedDetails bk(android.os.Parcel) -> a
    com.google.android.gms.drive.realtime.internal.event.TextDeletedDetails[] cA(int) -> a
    void a(com.google.android.gms.drive.realtime.internal.event.TextDeletedDetails,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.realtime.internal.event.f -> com.google.android.gms.drive.realtime.internal.event.f:
    com.google.android.gms.drive.realtime.internal.event.TextInsertedDetails bl(android.os.Parcel) -> a
    com.google.android.gms.drive.realtime.internal.event.TextInsertedDetails[] cB(int) -> a
    void a(com.google.android.gms.drive.realtime.internal.event.TextInsertedDetails,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.realtime.internal.event.g -> com.google.android.gms.drive.realtime.internal.event.g:
    com.google.android.gms.drive.realtime.internal.event.ValueChangedDetails bm(android.os.Parcel) -> a
    com.google.android.gms.drive.realtime.internal.event.ValueChangedDetails[] cC(int) -> a
    void a(com.google.android.gms.drive.realtime.internal.event.ValueChangedDetails,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.realtime.internal.event.h -> com.google.android.gms.drive.realtime.internal.event.h:
    com.google.android.gms.drive.realtime.internal.event.ValuesAddedDetails bn(android.os.Parcel) -> a
    com.google.android.gms.drive.realtime.internal.event.ValuesAddedDetails[] cD(int) -> a
    void a(com.google.android.gms.drive.realtime.internal.event.ValuesAddedDetails,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.realtime.internal.event.i -> com.google.android.gms.drive.realtime.internal.event.i:
    com.google.android.gms.drive.realtime.internal.event.ValuesRemovedDetails bo(android.os.Parcel) -> a
    com.google.android.gms.drive.realtime.internal.event.ValuesRemovedDetails[] cE(int) -> a
    void a(com.google.android.gms.drive.realtime.internal.event.ValuesRemovedDetails,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.realtime.internal.event.j -> com.google.android.gms.drive.realtime.internal.event.j:
    com.google.android.gms.drive.realtime.internal.event.ValuesSetDetails bp(android.os.Parcel) -> a
    com.google.android.gms.drive.realtime.internal.event.ValuesSetDetails[] cF(int) -> a
    void a(com.google.android.gms.drive.realtime.internal.event.ValuesSetDetails,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.realtime.internal.p -> com.google.android.gms.drive.realtime.internal.c:
    com.google.android.gms.drive.realtime.internal.ParcelableCollaborator be(android.os.Parcel) -> a
    com.google.android.gms.drive.realtime.internal.ParcelableCollaborator[] cu(int) -> a
    void a(com.google.android.gms.drive.realtime.internal.ParcelableCollaborator,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.drive.realtime.internal.q -> com.google.android.gms.drive.realtime.internal.d:
    com.google.android.gms.drive.realtime.internal.ParcelableIndexReference bf(android.os.Parcel) -> a
    com.google.android.gms.drive.realtime.internal.ParcelableIndexReference[] cv(int) -> a
    void a(com.google.android.gms.drive.realtime.internal.ParcelableIndexReference,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.dynamic.d -> com.google.android.gms.a.a:
com.google.android.gms.dynamic.d$a -> com.google.android.gms.a.b:
    com.google.android.gms.dynamic.d ap(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.dynamic.d$a$a -> com.google.android.gms.a.c:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
com.google.android.gms.dynamic.e -> com.google.android.gms.a.d:
    java.lang.Object TH -> a
    com.google.android.gms.dynamic.d k(java.lang.Object) -> a
    java.lang.Object f(com.google.android.gms.dynamic.d) -> a
com.google.android.gms.dynamic.g -> com.google.android.gms.a.e:
    java.lang.String TI -> a
    java.lang.Object TJ -> b
    java.lang.Object L(android.content.Context) -> a
    java.lang.Object d(android.os.IBinder) -> a
com.google.android.gms.dynamic.g$a -> com.google.android.gms.a.f:
com.google.android.gms.fitness.data.BleDevice -> com.google.android.gms.fitness.data.BleDevice:
    int CK -> a
    java.lang.String TW -> b
    java.lang.String mName -> c
    java.util.List TX -> d
    java.util.List TY -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getAddress() -> a
    java.lang.String getName() -> b
    java.util.List getSupportedProfiles() -> c
    java.util.List getDataTypes() -> d
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.BleDevice) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.Bucket -> com.google.android.gms.fitness.data.Bucket:
    int CK -> a
    long LW -> b
    long TO -> c
    com.google.android.gms.fitness.data.Session TQ -> d
    int TZ -> e
    java.util.List Ua -> f
    int Ub -> g
    boolean Uc -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List a(java.util.List,java.util.List,java.util.List) -> a
    long getStartTime(java.util.concurrent.TimeUnit) -> a
    long getEndTime(java.util.concurrent.TimeUnit) -> b
    com.google.android.gms.fitness.data.Session getSession() -> a
    int jm() -> b
    java.util.List getDataSets() -> c
    int getBucketType() -> d
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.Bucket) -> a
    boolean jn() -> e
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String cJ(int) -> a
    int getVersionCode() -> f
    long jo() -> g
    long jp() -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.DataPoint -> com.google.android.gms.fitness.data.DataPoint:
    int CK -> a
    com.google.android.gms.fitness.data.DataSource TN -> b
    long Ud -> c
    long Ue -> d
    com.google.android.gms.fitness.data.Value[] Uf -> e
    com.google.android.gms.fitness.data.DataSource Ug -> f
    long Uh -> g
    long Ui -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.fitness.data.DataSource c(java.util.List,int) -> a
    com.google.android.gms.fitness.data.Value[] jr() -> a
    com.google.android.gms.fitness.data.DataSource getDataSource() -> b
    com.google.android.gms.fitness.data.DataSource getOriginalDataSource() -> c
    long getTimestamp(java.util.concurrent.TimeUnit) -> a
    long js() -> d
    long jt() -> e
    long getStartTime(java.util.concurrent.TimeUnit) -> b
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.DataPoint) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> f
    long getTimestampNanos() -> g
    long ju() -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.DataSet -> com.google.android.gms.fitness.data.DataSet:
    int CK -> a
    com.google.android.gms.fitness.data.DataSource TN -> b
    com.google.android.gms.fitness.data.DataType TM -> c
    java.util.List Uj -> d
    java.util.List Uk -> e
    boolean Uc -> f
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.Object d(java.util.List,int) -> a
    com.google.android.gms.fitness.data.DataSource getDataSource() -> a
    com.google.android.gms.fitness.data.DataType getDataType() -> b
    boolean jn() -> c
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.DataSet) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> d
    java.util.List jv() -> e
    java.util.List f(java.util.List) -> a
    java.util.List jw() -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.DataSource -> com.google.android.gms.fitness.data.DataSource:
    int CK -> a
    com.google.android.gms.fitness.data.DataType TM -> b
    java.lang.String mName -> c
    int Gt -> d
    com.google.android.gms.fitness.data.Device Ul -> e
    com.google.android.gms.fitness.data.a Um -> f
    java.lang.String Un -> g
    boolean Uo -> h
    java.lang.String Up -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.fitness.data.DataType getDataType() -> a
    int getType() -> b
    java.lang.String getName() -> c
    java.lang.String getAppPackageName() -> d
    com.google.android.gms.fitness.data.a jx() -> e
    com.google.android.gms.fitness.data.Device getDevice() -> f
    java.lang.String getStreamName() -> g
    java.lang.String jy() -> l
    boolean jz() -> h
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.DataSource) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toDebugString() -> i
    java.lang.String getTypeString() -> m
    com.google.android.gms.fitness.data.DataSource jA() -> j
    int getVersionCode() -> k
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.DataType -> com.google.android.gms.fitness.data.DataType:
    com.google.android.gms.fitness.data.DataType TYPE_STEP_COUNT_DELTA -> a
    com.google.android.gms.fitness.data.DataType TYPE_STEP_COUNT_CUMULATIVE -> b
    com.google.android.gms.fitness.data.DataType TYPE_STEP_COUNT_CADENCE -> c
    com.google.android.gms.fitness.data.DataType TYPE_ACTIVITY_SEGMENT -> d
    com.google.android.gms.fitness.data.DataType TYPE_CALORIES_CONSUMED -> e
    com.google.android.gms.fitness.data.DataType TYPE_CALORIES_EXPENDED -> f
    com.google.android.gms.fitness.data.DataType TYPE_POWER_SAMPLE -> g
    com.google.android.gms.fitness.data.DataType TYPE_ACTIVITY_SAMPLE -> h
    com.google.android.gms.fitness.data.DataType Uq -> i
    com.google.android.gms.fitness.data.DataType Ur -> j
    com.google.android.gms.fitness.data.DataType TYPE_HEART_RATE_BPM -> k
    com.google.android.gms.fitness.data.DataType TYPE_LOCATION_SAMPLE -> l
    com.google.android.gms.fitness.data.DataType TYPE_DISTANCE_DELTA -> m
    com.google.android.gms.fitness.data.DataType TYPE_DISTANCE_CUMULATIVE -> n
    com.google.android.gms.fitness.data.DataType TYPE_SPEED -> o
    com.google.android.gms.fitness.data.DataType TYPE_CYCLING_WHEEL_REVOLUTION -> p
    com.google.android.gms.fitness.data.DataType TYPE_CYCLING_WHEEL_RPM -> q
    com.google.android.gms.fitness.data.DataType TYPE_CYCLING_PEDALING_CUMULATIVE -> r
    com.google.android.gms.fitness.data.DataType TYPE_CYCLING_PEDALING_CADENCE -> s
    com.google.android.gms.fitness.data.DataType TYPE_HEIGHT -> t
    com.google.android.gms.fitness.data.DataType TYPE_WEIGHT -> u
    java.util.Set AGGREGATE_INPUT_TYPES -> v
    com.google.android.gms.fitness.data.DataType AGGREGATE_ACTIVITY_SUMMARY -> w
    com.google.android.gms.fitness.data.DataType AGGREGATE_STEP_COUNT_DELTA -> x
    com.google.android.gms.fitness.data.DataType AGGREGATE_DISTANCE_DELTA -> y
    com.google.android.gms.fitness.data.DataType AGGREGATE_HEART_RATE_SUMMARY -> z
    com.google.android.gms.fitness.data.DataType AGGREGATE_LOCATION_BOUNDING_BOX -> A
    com.google.android.gms.fitness.data.DataType AGGREGATE_POWER_SUMMARY -> B
    com.google.android.gms.fitness.data.DataType AGGREGATE_SPEED_SUMMARY -> C
    com.google.android.gms.fitness.data.DataType AGGREGATE_WEIGHT_SUMMARY -> D
    java.util.Map Us -> G
    com.google.android.gms.fitness.data.DataType[] Ut -> E
    java.lang.String[] Uu -> F
    int CK -> H
    java.lang.String mName -> I
    java.util.List Uv -> J
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getName() -> a
    java.util.List getFields() -> b
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.DataType) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String jB() -> c
    int getVersionCode() -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.DataType$1 -> com.google.android.gms.fitness.data.b:
com.google.android.gms.fitness.data.Device -> com.google.android.gms.fitness.data.Device:
    int CK -> a
    java.lang.String Uw -> b
    java.lang.String Ux -> c
    java.lang.String TU -> d
    java.lang.String Uy -> e
    int Gt -> f
    int Uz -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getManufacturer() -> a
    java.lang.String getModel() -> b
    java.lang.String getVersion() -> c
    java.lang.String getUid() -> d
    int getType() -> e
    int jC() -> f
    boolean jD() -> k
    java.lang.String getStreamIdentifier() -> g
    com.google.android.gms.fitness.data.Device jE() -> h
    java.lang.String jF() -> i
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.Device) -> a
    int hashCode() -> hashCode
    int getVersionCode() -> j
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.Field -> com.google.android.gms.fitness.data.Field:
    com.google.android.gms.fitness.data.Field FIELD_ACTIVITY -> a
    com.google.android.gms.fitness.data.Field FIELD_CONFIDENCE -> b
    com.google.android.gms.fitness.data.Field FIELD_STEPS -> c
    com.google.android.gms.fitness.data.Field FIELD_DURATION -> d
    com.google.android.gms.fitness.data.Field FIELD_BPM -> e
    com.google.android.gms.fitness.data.Field FIELD_LATITUDE -> f
    com.google.android.gms.fitness.data.Field FIELD_LONGITUDE -> g
    com.google.android.gms.fitness.data.Field FIELD_ACCURACY -> h
    com.google.android.gms.fitness.data.Field FIELD_ALTITUDE -> i
    com.google.android.gms.fitness.data.Field FIELD_DISTANCE -> j
    com.google.android.gms.fitness.data.Field FIELD_HEIGHT -> k
    com.google.android.gms.fitness.data.Field FIELD_WEIGHT -> l
    com.google.android.gms.fitness.data.Field FIELD_SPEED -> m
    com.google.android.gms.fitness.data.Field FIELD_RPM -> n
    com.google.android.gms.fitness.data.Field FIELD_REVOLUTIONS -> o
    com.google.android.gms.fitness.data.Field FIELD_CALORIES -> p
    com.google.android.gms.fitness.data.Field FIELD_WATTS -> q
    com.google.android.gms.fitness.data.Field FIELD_NUM_SEGMENTS -> r
    com.google.android.gms.fitness.data.Field FIELD_AVERAGE -> s
    com.google.android.gms.fitness.data.Field FIELD_MAX -> t
    com.google.android.gms.fitness.data.Field FIELD_MIN -> u
    com.google.android.gms.fitness.data.Field FIELD_LOW_LATITUDE -> v
    com.google.android.gms.fitness.data.Field FIELD_LOW_LONGITUDE -> w
    com.google.android.gms.fitness.data.Field FIELD_HIGH_LATITUDE -> x
    com.google.android.gms.fitness.data.Field FIELD_HIGH_LONGITUDE -> y
    com.google.android.gms.fitness.data.Field UA -> z
    com.google.android.gms.fitness.data.Field UB -> A
    com.google.android.gms.fitness.data.Field UC -> B
    com.google.android.gms.fitness.data.Field UD -> C
    int CK -> D
    java.lang.String mName -> E
    int UE -> F
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.fitness.data.Field bu(java.lang.String) -> a
    com.google.android.gms.fitness.data.Field bv(java.lang.String) -> b
    java.lang.String getName() -> a
    int getFormat() -> b
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.Field) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.RawBucket -> com.google.android.gms.fitness.data.RawBucket:
    int CK -> a
    long LW -> b
    long TO -> c
    com.google.android.gms.fitness.data.Session TQ -> d
    int UI -> e
    java.util.List Ua -> f
    int Ub -> g
    boolean Uc -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.RawBucket) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.RawDataPoint -> com.google.android.gms.fitness.data.RawDataPoint:
    int CK -> a
    long Ud -> b
    long Ue -> c
    com.google.android.gms.fitness.data.Value[] Uf -> d
    int UJ -> e
    int UK -> f
    long Uh -> g
    long Ui -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.RawDataPoint) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.RawDataSet -> com.google.android.gms.fitness.data.RawDataSet:
    int CK -> a
    int UJ -> b
    int UL -> c
    java.util.List UM -> d
    boolean Uc -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.RawDataSet) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.Session -> com.google.android.gms.fitness.data.Session:
    int CK -> a
    long LW -> b
    long TO -> c
    java.lang.String mName -> d
    java.lang.String UN -> e
    java.lang.String UO -> f
    int TZ -> g
    com.google.android.gms.fitness.data.a Um -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getName() -> a
    java.lang.String getIdentifier() -> b
    java.lang.String getDescription() -> c
    int jm() -> d
    com.google.android.gms.fitness.data.a jx() -> e
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.Session) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> f
    long jo() -> g
    long jp() -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.Subscription -> com.google.android.gms.fitness.data.Subscription:
    int CK -> a
    com.google.android.gms.fitness.data.DataSource TN -> b
    com.google.android.gms.fitness.data.DataType TM -> c
    long UQ -> d
    int UR -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.fitness.data.DataSource getDataSource() -> a
    com.google.android.gms.fitness.data.DataType getDataType() -> b
    int getAccuracyMode() -> c
    long jI() -> d
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.Subscription) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.Value -> com.google.android.gms.fitness.data.Value:
    int CK -> a
    int UE -> b
    boolean US -> c
    float UT -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean isSet() -> a
    int getFormat() -> b
    int asInt() -> c
    float asFloat() -> d
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.Value) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> e
    float jL() -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.a -> com.google.android.gms.fitness.data.a:
    com.google.android.gms.fitness.data.a TT -> a
    int CK -> b
    java.lang.String CS -> c
    java.lang.String TU -> d
    java.lang.String TV -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getPackageName() -> a
    java.lang.String getVersion() -> b
    java.lang.String jk() -> c
    com.google.android.gms.fitness.data.a jl() -> d
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.a) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.b -> com.google.android.gms.fitness.data.c:
    com.google.android.gms.fitness.data.a bq(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.a[] cH(int) -> a
    void a(com.google.android.gms.fitness.data.a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.data.c -> com.google.android.gms.fitness.data.d:
    com.google.android.gms.fitness.data.BleDevice br(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.BleDevice[] cI(int) -> a
    void a(com.google.android.gms.fitness.data.BleDevice,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.data.d -> com.google.android.gms.fitness.data.e:
    com.google.android.gms.fitness.data.Bucket bs(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.Bucket[] cK(int) -> a
    void a(com.google.android.gms.fitness.data.Bucket,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.data.e -> com.google.android.gms.fitness.data.f:
    com.google.android.gms.fitness.data.DataPoint bt(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.DataPoint[] cM(int) -> a
    void a(com.google.android.gms.fitness.data.DataPoint,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.data.f -> com.google.android.gms.fitness.data.g:
    com.google.android.gms.fitness.data.DataSet bu(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.DataSet[] cN(int) -> a
    void a(com.google.android.gms.fitness.data.DataSet,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.data.g -> com.google.android.gms.fitness.data.h:
    com.google.android.gms.fitness.data.DataSource bv(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.DataSource[] cO(int) -> a
    void a(com.google.android.gms.fitness.data.DataSource,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.data.h -> com.google.android.gms.fitness.data.i:
    com.google.android.gms.fitness.data.DataType bw(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.DataType[] cP(int) -> a
    void a(com.google.android.gms.fitness.data.DataType,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.data.i -> com.google.android.gms.fitness.data.j:
    com.google.android.gms.fitness.data.Device bx(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.Device[] cQ(int) -> a
    void a(com.google.android.gms.fitness.data.Device,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.data.j -> com.google.android.gms.fitness.data.k:
    com.google.android.gms.fitness.data.Field by(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.Field[] cR(int) -> a
    void a(com.google.android.gms.fitness.data.Field,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.data.k -> com.google.android.gms.fitness.data.l:
    void c(com.google.android.gms.fitness.data.DataPoint) -> a
com.google.android.gms.fitness.data.k$a -> com.google.android.gms.fitness.data.m:
    com.google.android.gms.fitness.data.k aq(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.fitness.data.k$a$a -> com.google.android.gms.fitness.data.n:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    void c(com.google.android.gms.fitness.data.DataPoint) -> a
com.google.android.gms.fitness.data.m -> com.google.android.gms.fitness.data.o:
    com.google.android.gms.fitness.data.RawBucket bz(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.RawBucket[] cS(int) -> a
    void a(com.google.android.gms.fitness.data.RawBucket,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.data.n -> com.google.android.gms.fitness.data.p:
    com.google.android.gms.fitness.data.RawDataPoint bA(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.RawDataPoint[] cT(int) -> a
    void a(com.google.android.gms.fitness.data.RawDataPoint,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.data.o -> com.google.android.gms.fitness.data.r:
    com.google.android.gms.fitness.data.RawDataSet bB(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.RawDataSet[] cU(int) -> a
    void a(com.google.android.gms.fitness.data.RawDataSet,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.data.p -> com.google.android.gms.fitness.data.s:
    com.google.android.gms.fitness.data.Session bC(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.Session[] cW(int) -> a
    void a(com.google.android.gms.fitness.data.Session,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.data.q -> com.google.android.gms.fitness.data.q:
    int CK -> a
    com.google.android.gms.fitness.data.Session TQ -> b
    com.google.android.gms.fitness.data.DataSet UP -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.fitness.data.Session getSession() -> a
    com.google.android.gms.fitness.data.DataSet jH() -> b
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.data.q) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.data.r -> com.google.android.gms.fitness.data.t:
    com.google.android.gms.fitness.data.q bD(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.q[] cX(int) -> a
    void a(com.google.android.gms.fitness.data.q,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.data.s -> com.google.android.gms.fitness.data.u:
    com.google.android.gms.fitness.data.Subscription bE(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.Subscription[] cY(int) -> a
    void a(com.google.android.gms.fitness.data.Subscription,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.data.t -> com.google.android.gms.fitness.data.v:
    int a(java.lang.Object,java.util.List) -> a
com.google.android.gms.fitness.data.u -> com.google.android.gms.fitness.data.w:
    com.google.android.gms.fitness.data.Value bF(android.os.Parcel) -> a
    com.google.android.gms.fitness.data.Value[] cZ(int) -> a
    void a(com.google.android.gms.fitness.data.Value,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.DataDeleteRequest -> com.google.android.gms.fitness.request.DataDeleteRequest:
    int CK -> a
    long LW -> b
    long TO -> c
    java.util.List VH -> d
    java.util.List TY -> e
    java.util.List VI -> f
    boolean VJ -> g
    boolean VK -> h
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getDataSources() -> a
    java.util.List getDataTypes() -> b
    java.util.List getSessions() -> c
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.request.DataDeleteRequest) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> d
    boolean jR() -> e
    boolean jS() -> f
    long jp() -> g
    long jo() -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.DataReadRequest -> com.google.android.gms.fitness.request.DataReadRequest:
    int CK -> a
    java.util.List TY -> b
    java.util.List VH -> c
    long LW -> d
    long TO -> e
    java.util.List VL -> f
    java.util.List VM -> g
    int Ub -> h
    long VN -> i
    com.google.android.gms.fitness.data.DataSource VO -> j
    int VP -> k
    boolean VQ -> l
    boolean VR -> m
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getDataTypes() -> a
    java.util.List getDataSources() -> b
    java.util.List getAggregatedDataTypes() -> c
    java.util.List getAggregatedDataSources() -> d
    int getBucketType() -> e
    com.google.android.gms.fitness.data.DataSource getActivityDataSource() -> f
    int getLimit() -> g
    boolean jV() -> h
    boolean jW() -> i
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.request.DataReadRequest) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> j
    long jp() -> k
    long jo() -> l
    long jX() -> m
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.DataSourcesRequest -> com.google.android.gms.fitness.request.DataSourcesRequest:
    int CK -> a
    java.util.List TY -> b
    java.util.List VS -> c
    boolean VT -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getDataTypes() -> a
    boolean jY() -> b
    java.lang.String toString() -> toString
    int getVersionCode() -> c
    java.util.List jZ() -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.DataTypeCreateRequest -> com.google.android.gms.fitness.request.DataTypeCreateRequest:
    int CK -> a
    java.lang.String mName -> b
    java.util.List Uv -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getName() -> a
    java.util.List getFields() -> b
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.request.DataTypeCreateRequest) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.SessionInsertRequest -> com.google.android.gms.fitness.request.SessionInsertRequest:
    int CK -> a
    com.google.android.gms.fitness.data.Session TQ -> b
    java.util.List Ua -> c
    java.util.List Wh -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.fitness.data.Session getSession() -> a
    java.util.List getDataSets() -> b
    java.util.List getAggregateDataPoints() -> c
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.request.SessionInsertRequest) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.SessionReadRequest -> com.google.android.gms.fitness.request.SessionReadRequest:
    int CK -> a
    java.lang.String Wj -> b
    java.lang.String vZ -> c
    long LW -> d
    long TO -> e
    java.util.List TY -> f
    java.util.List VH -> g
    boolean Wk -> h
    boolean VR -> i
    java.util.List Wl -> j
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getSessionName() -> a
    java.lang.String getSessionId() -> b
    java.util.List getDataTypes() -> c
    java.util.List getDataSources() -> d
    java.util.List getExcludedPackages() -> e
    boolean jV() -> f
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.request.SessionReadRequest) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    long jp() -> g
    long jo() -> h
    boolean kj() -> i
    int getVersionCode() -> j
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.StartBleScanRequest -> com.google.android.gms.fitness.request.StartBleScanRequest:
    int CK -> a
    java.util.List TY -> b
    com.google.android.gms.fitness.request.l Wm -> c
    int Wn -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getDataTypes() -> a
    int getTimeoutSecs() -> b
    android.os.IBinder km() -> c
    java.lang.String toString() -> toString
    int getVersionCode() -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.aa -> com.google.android.gms.fitness.request.aa:
    int CK -> a
    android.app.PendingIntent mPendingIntent -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.app.PendingIntent kb() -> a
    int getVersionCode() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.request.aa) -> a
    int hashCode() -> hashCode
com.google.android.gms.fitness.request.ab -> com.google.android.gms.fitness.request.a:
    com.google.android.gms.fitness.request.aa bX(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.aa[] ds(int) -> a
    void a(com.google.android.gms.fitness.request.aa,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.ac -> com.google.android.gms.fitness.request.c:
    com.google.android.gms.fitness.request.StartBleScanRequest bY(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.StartBleScanRequest[] dt(int) -> a
    void a(com.google.android.gms.fitness.request.StartBleScanRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.ad -> com.google.android.gms.fitness.request.ad:
    int CK -> a
    com.google.android.gms.fitness.request.l Wm -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getVersionCode() -> a
    android.os.IBinder km() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.ae -> com.google.android.gms.fitness.request.d:
    com.google.android.gms.fitness.request.ad bZ(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.ad[] du(int) -> a
    void a(com.google.android.gms.fitness.request.ad,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.af -> com.google.android.gms.fitness.request.af:
    int CK -> a
    com.google.android.gms.fitness.data.Subscription Wo -> b
    boolean Wp -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    com.google.android.gms.fitness.data.Subscription kn() -> a
    boolean ko() -> b
    int getVersionCode() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.ag -> com.google.android.gms.fitness.request.f:
    com.google.android.gms.fitness.request.af ca(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.af[] dv(int) -> a
    void a(com.google.android.gms.fitness.request.af,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.ah -> com.google.android.gms.fitness.request.ah:
    int CK -> a
    java.lang.String VF -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getDeviceAddress() -> a
    java.lang.String toString() -> toString
    int getVersionCode() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.ai -> com.google.android.gms.fitness.request.g:
    com.google.android.gms.fitness.request.ah cb(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.ah[] dw(int) -> a
    void a(com.google.android.gms.fitness.request.ah,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.aj -> com.google.android.gms.fitness.request.aj:
    int CK -> a
    com.google.android.gms.fitness.data.DataType TM -> b
    com.google.android.gms.fitness.data.DataSource TN -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getVersionCode() -> a
    com.google.android.gms.fitness.data.DataType getDataType() -> b
    com.google.android.gms.fitness.data.DataSource getDataSource() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.request.aj) -> a
    int hashCode() -> hashCode
com.google.android.gms.fitness.request.ak -> com.google.android.gms.fitness.request.h:
    com.google.android.gms.fitness.request.aj cc(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.aj[] dx(int) -> a
    void a(com.google.android.gms.fitness.request.aj,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.b -> com.google.android.gms.fitness.request.b:
    int CK -> a
    java.lang.String VF -> b
    com.google.android.gms.fitness.data.BleDevice VG -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getDeviceAddress() -> a
    com.google.android.gms.fitness.data.BleDevice jQ() -> b
    java.lang.String toString() -> toString
    int getVersionCode() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.c -> com.google.android.gms.fitness.request.i:
    com.google.android.gms.fitness.request.b bI(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.b[] dc(int) -> a
    void a(com.google.android.gms.fitness.request.b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.d -> com.google.android.gms.fitness.request.k:
    com.google.android.gms.fitness.request.DataDeleteRequest bJ(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.DataDeleteRequest[] dd(int) -> a
    void a(com.google.android.gms.fitness.request.DataDeleteRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.e -> com.google.android.gms.fitness.request.e:
    int CK -> a
    com.google.android.gms.fitness.data.DataSet UP -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.fitness.data.DataSet jH() -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.request.e) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.f -> com.google.android.gms.fitness.request.l:
    com.google.android.gms.fitness.request.e bK(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.e[] de(int) -> a
    void a(com.google.android.gms.fitness.request.e,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.g -> com.google.android.gms.fitness.request.n:
    com.google.android.gms.fitness.request.DataReadRequest bL(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.DataReadRequest[] df(int) -> a
    void a(com.google.android.gms.fitness.request.DataReadRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.h -> com.google.android.gms.fitness.request.p:
    com.google.android.gms.fitness.request.DataSourcesRequest bM(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.DataSourcesRequest[] dg(int) -> a
    void a(com.google.android.gms.fitness.request.DataSourcesRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.i -> com.google.android.gms.fitness.request.r:
    com.google.android.gms.fitness.request.DataTypeCreateRequest bN(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.DataTypeCreateRequest[] dh(int) -> a
    void a(com.google.android.gms.fitness.request.DataTypeCreateRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.j -> com.google.android.gms.fitness.request.j:
    int CK -> a
    java.lang.String mName -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getName() -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.request.j) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.k -> com.google.android.gms.fitness.request.s:
    com.google.android.gms.fitness.request.j bO(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.j[] di(int) -> a
    void a(com.google.android.gms.fitness.request.j,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.l -> com.google.android.gms.fitness.request.t:
    void onDeviceFound(com.google.android.gms.fitness.data.BleDevice) -> a
    void onScanStopped() -> a
com.google.android.gms.fitness.request.l$a -> com.google.android.gms.fitness.request.v:
    com.google.android.gms.fitness.request.l aB(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.fitness.request.l$a$a -> com.google.android.gms.fitness.request.x:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    void onDeviceFound(com.google.android.gms.fitness.data.BleDevice) -> a
    void onScanStopped() -> a
com.google.android.gms.fitness.request.m -> com.google.android.gms.fitness.request.m:
    int CK -> a
    com.google.android.gms.fitness.data.DataType TM -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.fitness.data.DataType getDataType() -> a
    int getVersionCode() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.n -> com.google.android.gms.fitness.request.z:
    com.google.android.gms.fitness.request.m bP(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.m[] dj(int) -> a
    void a(com.google.android.gms.fitness.request.m,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.o -> com.google.android.gms.fitness.request.o:
    int CK -> c
    com.google.android.gms.fitness.data.DataSource TN -> d
    com.google.android.gms.fitness.data.DataType TM -> e
    com.google.android.gms.fitness.data.k VW -> f
    int VX -> a
    int VY -> b
    long UQ -> g
    long VZ -> h
    android.app.PendingIntent mPendingIntent -> i
    long Wa -> j
    int UR -> k
    java.util.List Wb -> l
    long Wc -> m
    java.util.List Wd -> n
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.fitness.data.DataSource getDataSource() -> a
    com.google.android.gms.fitness.data.DataType getDataType() -> b
    android.app.PendingIntent kb() -> c
    long kc() -> d
    long jI() -> e
    long kd() -> f
    java.util.List ke() -> g
    int getAccuracyMode() -> h
    long kf() -> i
    java.lang.String toString() -> toString
    int getVersionCode() -> j
    android.os.IBinder kg() -> k
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.request.o) -> a
    int hashCode() -> hashCode
com.google.android.gms.fitness.request.p -> com.google.android.gms.fitness.request.ab:
    com.google.android.gms.fitness.request.o bQ(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.o[] dk(int) -> a
    void a(com.google.android.gms.fitness.request.o,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.q -> com.google.android.gms.fitness.request.q:
    int CK -> a
    com.google.android.gms.fitness.data.k VW -> b
    android.app.PendingIntent mPendingIntent -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.app.PendingIntent kb() -> a
    java.lang.String toString() -> toString
    int getVersionCode() -> b
    android.os.IBinder kg() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.r -> com.google.android.gms.fitness.request.ac:
    com.google.android.gms.fitness.request.q bR(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.q[] dm(int) -> a
    void a(com.google.android.gms.fitness.request.q,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.s -> com.google.android.gms.fitness.request.ae:
    com.google.android.gms.fitness.request.SessionInsertRequest bS(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.SessionInsertRequest[] dn(int) -> a
    void a(com.google.android.gms.fitness.request.SessionInsertRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.t -> com.google.android.gms.fitness.request.ag:
    com.google.android.gms.fitness.request.SessionReadRequest bT(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.SessionReadRequest[] do(int) -> a
    void a(com.google.android.gms.fitness.request.SessionReadRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.u -> com.google.android.gms.fitness.request.u:
    int CK -> a
    android.app.PendingIntent mPendingIntent -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.app.PendingIntent kb() -> a
    int getVersionCode() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.request.u) -> a
    int hashCode() -> hashCode
com.google.android.gms.fitness.request.v -> com.google.android.gms.fitness.request.ai:
    com.google.android.gms.fitness.request.u bU(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.u[] dp(int) -> a
    void a(com.google.android.gms.fitness.request.u,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.w -> com.google.android.gms.fitness.request.w:
    int CK -> a
    com.google.android.gms.fitness.data.Session TQ -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.fitness.data.Session getSession() -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.request.w) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.x -> com.google.android.gms.fitness.request.ak:
    com.google.android.gms.fitness.request.w bV(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.w[] dq(int) -> a
    void a(com.google.android.gms.fitness.request.w,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.request.y -> com.google.android.gms.fitness.request.y:
    int CK -> a
    java.lang.String mName -> b
    java.lang.String UN -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getName() -> a
    java.lang.String getIdentifier() -> b
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.request.y) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.request.z -> com.google.android.gms.fitness.request.al:
    com.google.android.gms.fitness.request.y bW(android.os.Parcel) -> a
    com.google.android.gms.fitness.request.y[] dr(int) -> a
    void a(com.google.android.gms.fitness.request.y,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.result.BleDevicesResult -> com.google.android.gms.fitness.result.BleDevicesResult:
    int CK -> a
    java.util.List Wq -> b
    com.google.android.gms.common.api.Status Eb -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getClaimedBleDevices() -> a
    com.google.android.gms.common.api.Status getStatus() -> b
    boolean equals(java.lang.Object) -> equals
    boolean b(com.google.android.gms.fitness.result.BleDevicesResult) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.result.DataReadResult -> com.google.android.gms.fitness.result.DataReadResult:
    int CK -> a
    java.util.List Ua -> b
    com.google.android.gms.common.api.Status Eb -> c
    java.util.List Wr -> d
    int Ws -> e
    java.util.List Uk -> f
    java.util.List Wt -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int kr() -> a
    com.google.android.gms.common.api.Status getStatus() -> b
    boolean equals(java.lang.Object) -> equals
    boolean c(com.google.android.gms.fitness.result.DataReadResult) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> c
    java.util.List ks() -> d
    java.util.List kt() -> e
    java.util.List jw() -> f
    java.util.List ku() -> g
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.result.DataSourcesResult -> com.google.android.gms.fitness.result.DataSourcesResult:
    int CK -> a
    java.util.List VH -> b
    com.google.android.gms.common.api.Status Eb -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getDataSources() -> a
    com.google.android.gms.common.api.Status getStatus() -> b
    boolean equals(java.lang.Object) -> equals
    boolean b(com.google.android.gms.fitness.result.DataSourcesResult) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.result.DataTypeResult -> com.google.android.gms.fitness.result.DataTypeResult:
    int CK -> a
    com.google.android.gms.common.api.Status Eb -> b
    com.google.android.gms.fitness.data.DataType TM -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.common.api.Status getStatus() -> a
    com.google.android.gms.fitness.data.DataType getDataType() -> b
    boolean equals(java.lang.Object) -> equals
    boolean b(com.google.android.gms.fitness.result.DataTypeResult) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.result.ListSubscriptionsResult -> com.google.android.gms.fitness.result.ListSubscriptionsResult:
    int CK -> a
    java.util.List Wu -> b
    com.google.android.gms.common.api.Status Eb -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getSubscriptions() -> a
    com.google.android.gms.common.api.Status getStatus() -> b
    boolean equals(java.lang.Object) -> equals
    boolean b(com.google.android.gms.fitness.result.ListSubscriptionsResult) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.result.SessionReadResult -> com.google.android.gms.fitness.result.SessionReadResult:
    int CK -> a
    java.util.List VI -> b
    java.util.List Wv -> c
    com.google.android.gms.common.api.Status Eb -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getSessions() -> a
    java.util.List kv() -> b
    com.google.android.gms.common.api.Status getStatus() -> c
    boolean equals(java.lang.Object) -> equals
    boolean b(com.google.android.gms.fitness.result.SessionReadResult) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.result.SessionStopResult -> com.google.android.gms.fitness.result.SessionStopResult:
    int CK -> a
    com.google.android.gms.common.api.Status Eb -> b
    java.util.List VI -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.common.api.Status getStatus() -> a
    java.util.List getSessions() -> b
    boolean equals(java.lang.Object) -> equals
    boolean b(com.google.android.gms.fitness.result.SessionStopResult) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getVersionCode() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.fitness.result.a -> com.google.android.gms.fitness.result.a:
    com.google.android.gms.fitness.result.BleDevicesResult cd(android.os.Parcel) -> a
    com.google.android.gms.fitness.result.BleDevicesResult[] dy(int) -> a
    void a(com.google.android.gms.fitness.result.BleDevicesResult,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.result.b -> com.google.android.gms.fitness.result.b:
    com.google.android.gms.fitness.result.DataReadResult ce(android.os.Parcel) -> a
    com.google.android.gms.fitness.result.DataReadResult[] dz(int) -> a
    void a(com.google.android.gms.fitness.result.DataReadResult,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.result.c -> com.google.android.gms.fitness.result.c:
    com.google.android.gms.fitness.result.DataSourcesResult cf(android.os.Parcel) -> a
    com.google.android.gms.fitness.result.DataSourcesResult[] dA(int) -> a
    void a(com.google.android.gms.fitness.result.DataSourcesResult,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.result.d -> com.google.android.gms.fitness.result.d:
    com.google.android.gms.fitness.result.DataTypeResult cg(android.os.Parcel) -> a
    com.google.android.gms.fitness.result.DataTypeResult[] dB(int) -> a
    void a(com.google.android.gms.fitness.result.DataTypeResult,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.result.e -> com.google.android.gms.fitness.result.e:
    com.google.android.gms.fitness.result.ListSubscriptionsResult ch(android.os.Parcel) -> a
    com.google.android.gms.fitness.result.ListSubscriptionsResult[] dC(int) -> a
    void a(com.google.android.gms.fitness.result.ListSubscriptionsResult,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.result.f -> com.google.android.gms.fitness.result.f:
    com.google.android.gms.fitness.result.SessionReadResult ci(android.os.Parcel) -> a
    com.google.android.gms.fitness.result.SessionReadResult[] dD(int) -> a
    void a(com.google.android.gms.fitness.result.SessionReadResult,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.result.g -> com.google.android.gms.fitness.result.g:
    com.google.android.gms.fitness.result.SessionStopResult cj(android.os.Parcel) -> a
    com.google.android.gms.fitness.result.SessionStopResult[] dE(int) -> a
    void a(com.google.android.gms.fitness.result.SessionStopResult,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.fitness.service.FitnessSensorServiceRequest -> com.google.android.gms.fitness.service.FitnessSensorServiceRequest:
    int CK -> a
    com.google.android.gms.fitness.data.DataSource TN -> b
    com.google.android.gms.fitness.data.k VW -> c
    long Wy -> d
    long Wz -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.fitness.data.DataSource getDataSource() -> a
    java.lang.String toString() -> toString
    int getVersionCode() -> b
    android.os.IBinder kg() -> c
    long jI() -> d
    long kx() -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.fitness.service.FitnessSensorServiceRequest) -> a
    int hashCode() -> hashCode
com.google.android.gms.fitness.service.a -> com.google.android.gms.fitness.service.a:
    com.google.android.gms.fitness.service.FitnessSensorServiceRequest ck(android.os.Parcel) -> a
    com.google.android.gms.fitness.service.FitnessSensorServiceRequest[] dF(int) -> a
    void a(com.google.android.gms.fitness.service.FitnessSensorServiceRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.Game -> com.google.android.gms.games.Game:
    java.lang.String getApplicationId() -> a_
    java.lang.String getDisplayName() -> c
    java.lang.String getPrimaryCategory() -> d
    java.lang.String getSecondaryCategory() -> e
    java.lang.String getDescription() -> f
    java.lang.String getDeveloperName() -> g
    android.net.Uri getIconImageUri() -> h
    java.lang.String getIconImageUrl() -> i
    android.net.Uri getHiResImageUri() -> j
    java.lang.String getHiResImageUrl() -> k
    android.net.Uri getFeaturedImageUri() -> l
    java.lang.String getFeaturedImageUrl() -> m
    boolean ky() -> n
    boolean isMuted() -> o
    boolean kz() -> p
    boolean kA() -> q
    java.lang.String kB() -> r
    int kC() -> s
    int getAchievementTotalCount() -> t
    int getLeaderboardCount() -> u
    boolean isRealTimeMultiplayerEnabled() -> v
    boolean isTurnBasedMultiplayerEnabled() -> w
    boolean areSnapshotsEnabled() -> x
    java.lang.String getThemeColor() -> y
com.google.android.gms.games.GameEntity -> com.google.android.gms.games.GameEntity:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String Fo -> b
    java.lang.String OS -> c
    java.lang.String WA -> d
    java.lang.String WB -> e
    java.lang.String UO -> f
    java.lang.String WC -> g
    android.net.Uri WD -> h
    android.net.Uri WE -> i
    android.net.Uri WF -> j
    boolean WG -> k
    boolean WH -> l
    java.lang.String WI -> m
    int WJ -> n
    int WK -> o
    int WL -> p
    boolean WM -> q
    boolean WN -> r
    java.lang.String WO -> s
    java.lang.String WP -> t
    java.lang.String WQ -> u
    boolean WR -> v
    boolean WS -> w
    boolean WT -> x
    java.lang.String WU -> y
    int getVersionCode() -> z
    java.lang.String getApplicationId() -> a_
    java.lang.String getDisplayName() -> c
    java.lang.String getPrimaryCategory() -> d
    java.lang.String getSecondaryCategory() -> e
    java.lang.String getDescription() -> f
    java.lang.String getDeveloperName() -> g
    android.net.Uri getIconImageUri() -> h
    java.lang.String getIconImageUrl() -> i
    android.net.Uri getHiResImageUri() -> j
    java.lang.String getHiResImageUrl() -> k
    android.net.Uri getFeaturedImageUri() -> l
    java.lang.String getFeaturedImageUrl() -> m
    boolean isMuted() -> o
    boolean kz() -> p
    boolean ky() -> n
    boolean kA() -> q
    java.lang.String kB() -> r
    int kC() -> s
    int getAchievementTotalCount() -> t
    int getLeaderboardCount() -> u
    boolean isRealTimeMultiplayerEnabled() -> v
    boolean isTurnBasedMultiplayerEnabled() -> w
    boolean areSnapshotsEnabled() -> x
    java.lang.String getThemeColor() -> y
    com.google.android.gms.games.Game freeze() -> A
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.Game) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.Game,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.Game) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer kD() -> B
    boolean b(java.lang.Integer) -> a
    boolean bz(java.lang.String) -> a
com.google.android.gms.games.GameEntity$GameEntityCreatorCompat -> com.google.android.gms.games.a:
    com.google.android.gms.games.GameEntity cl(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.GameEntityCreator -> com.google.android.gms.games.b:
    com.google.android.gms.games.GameEntity cl(android.os.Parcel) -> a
    com.google.android.gms.games.GameEntity[] dG(int) -> a
    void a(com.google.android.gms.games.GameEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.GameRef -> com.google.android.gms.games.GameRef:
    java.lang.String getApplicationId() -> a_
    java.lang.String getDisplayName() -> c
    java.lang.String getPrimaryCategory() -> d
    java.lang.String getSecondaryCategory() -> e
    java.lang.String getDescription() -> f
    java.lang.String getDeveloperName() -> g
    android.net.Uri getIconImageUri() -> h
    java.lang.String getIconImageUrl() -> i
    android.net.Uri getHiResImageUri() -> j
    java.lang.String getHiResImageUrl() -> k
    android.net.Uri getFeaturedImageUri() -> l
    java.lang.String getFeaturedImageUrl() -> m
    boolean ky() -> n
    boolean isMuted() -> o
    boolean kz() -> p
    boolean kA() -> q
    java.lang.String kB() -> r
    int kC() -> s
    int getAchievementTotalCount() -> t
    int getLeaderboardCount() -> u
    boolean isRealTimeMultiplayerEnabled() -> v
    boolean isTurnBasedMultiplayerEnabled() -> w
    boolean areSnapshotsEnabled() -> x
    java.lang.String getThemeColor() -> y
    com.google.android.gms.games.Game freeze() -> z
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.Player -> com.google.android.gms.games.Player:
    java.lang.String getPlayerId() -> b_
    java.lang.String getDisplayName() -> c
    android.net.Uri getIconImageUri() -> d
    java.lang.String getIconImageUrl() -> e
    android.net.Uri getHiResImageUri() -> f
    java.lang.String getHiResImageUrl() -> g
    long getRetrievedTimestamp() -> h
    long getLastPlayedWithTimestamp() -> i
    int kE() -> j
    boolean isProfileVisible() -> k
    java.lang.String getTitle() -> l
    com.google.android.gms.games.PlayerLevelInfo getLevelInfo() -> m
    com.google.android.gms.games.internal.player.MostRecentGameInfo kF() -> n
com.google.android.gms.games.PlayerEntity -> com.google.android.gms.games.PlayerEntity:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String Xh -> b
    java.lang.String OS -> c
    android.net.Uri WD -> d
    android.net.Uri WE -> e
    long Xi -> f
    int Xj -> g
    long Xk -> h
    java.lang.String WO -> i
    java.lang.String WP -> j
    java.lang.String OH -> k
    com.google.android.gms.games.internal.player.MostRecentGameInfoEntity Xl -> l
    com.google.android.gms.games.PlayerLevelInfo Xm -> m
    boolean Xn -> n
    int getVersionCode() -> o
    java.lang.String getPlayerId() -> b_
    java.lang.String getDisplayName() -> c
    android.net.Uri getIconImageUri() -> d
    java.lang.String getIconImageUrl() -> e
    android.net.Uri getHiResImageUri() -> f
    java.lang.String getHiResImageUrl() -> g
    long getRetrievedTimestamp() -> h
    long getLastPlayedWithTimestamp() -> i
    int kE() -> j
    boolean isProfileVisible() -> k
    java.lang.String getTitle() -> l
    com.google.android.gms.games.PlayerLevelInfo getLevelInfo() -> m
    com.google.android.gms.games.internal.player.MostRecentGameInfo kF() -> n
    com.google.android.gms.games.Player freeze() -> p
    int hashCode() -> hashCode
    int b(com.google.android.gms.games.Player) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.Player,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String c(com.google.android.gms.games.Player) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer kD() -> q
    boolean b(java.lang.Integer) -> a
    boolean bz(java.lang.String) -> a
com.google.android.gms.games.PlayerEntity$PlayerEntityCreatorCompat -> com.google.android.gms.games.c:
    com.google.android.gms.games.PlayerEntity cm(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.PlayerEntityCreator -> com.google.android.gms.games.d:
    com.google.android.gms.games.PlayerEntity cm(android.os.Parcel) -> a
    com.google.android.gms.games.PlayerEntity[] dH(int) -> a
    void a(com.google.android.gms.games.PlayerEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.PlayerLevel -> com.google.android.gms.games.PlayerLevel:
    com.google.android.gms.games.PlayerLevelCreator CREATOR -> a
    int CK -> b
    int Xo -> c
    long Xp -> d
    long Xq -> e
    int getVersionCode() -> a
    int getLevelNumber() -> b
    long getMinXp() -> c
    long getMaxXp() -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.games.PlayerLevelCreator -> com.google.android.gms.games.e:
    com.google.android.gms.games.PlayerLevel createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.games.PlayerLevel[] newArray(int) -> a
    void a(com.google.android.gms.games.PlayerLevel,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.PlayerLevelInfo -> com.google.android.gms.games.PlayerLevelInfo:
    com.google.android.gms.games.PlayerLevelInfoCreator CREATOR -> a
    int CK -> b
    long Xr -> c
    long Xs -> d
    com.google.android.gms.games.PlayerLevel Xt -> e
    com.google.android.gms.games.PlayerLevel Xu -> f
    int getVersionCode() -> a
    long getCurrentXpTotal() -> b
    long getLastLevelUpTimestamp() -> c
    com.google.android.gms.games.PlayerLevel getCurrentLevel() -> d
    com.google.android.gms.games.PlayerLevel getNextLevel() -> e
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.games.PlayerLevelInfoCreator -> com.google.android.gms.games.f:
    com.google.android.gms.games.PlayerLevelInfo createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.games.PlayerLevelInfo[] newArray(int) -> a
    void a(com.google.android.gms.games.PlayerLevelInfo,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.PlayerRef -> com.google.android.gms.games.PlayerRef:
    com.google.android.gms.games.internal.player.PlayerColumnNames Xv -> c
    com.google.android.gms.games.PlayerLevelInfo Xm -> d
    com.google.android.gms.games.internal.player.MostRecentGameInfoRef Xw -> e
    java.lang.String getPlayerId() -> b_
    java.lang.String getDisplayName() -> c
    android.net.Uri getIconImageUri() -> d
    java.lang.String getIconImageUrl() -> e
    android.net.Uri getHiResImageUri() -> f
    java.lang.String getHiResImageUrl() -> g
    long getRetrievedTimestamp() -> h
    long getLastPlayedWithTimestamp() -> i
    int kE() -> j
    boolean isProfileVisible() -> k
    java.lang.String getTitle() -> l
    com.google.android.gms.games.PlayerLevelInfo getLevelInfo() -> m
    com.google.android.gms.games.internal.player.MostRecentGameInfo kF() -> n
    com.google.android.gms.games.Player freeze() -> o
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean kG() -> p
    java.lang.Object freeze() -> a
com.google.android.gms.games.achievement.Achievement -> com.google.android.gms.games.achievement.Achievement:
    java.lang.String getAchievementId() -> c_
    int getType() -> c
    java.lang.String getName() -> d
    java.lang.String getDescription() -> e
    android.net.Uri getUnlockedImageUri() -> f
    java.lang.String getUnlockedImageUrl() -> g
    android.net.Uri getRevealedImageUri() -> h
    java.lang.String getRevealedImageUrl() -> i
    int getTotalSteps() -> j
    java.lang.String getFormattedTotalSteps() -> k
    com.google.android.gms.games.Player getPlayer() -> l
    int getState() -> m
    int getCurrentSteps() -> n
    java.lang.String getFormattedCurrentSteps() -> o
    long getLastUpdatedTimestamp() -> p
    long getXpValue() -> q
com.google.android.gms.games.achievement.AchievementEntity -> com.google.android.gms.games.achievement.AchievementEntity:
    com.google.android.gms.games.achievement.AchievementEntityCreator CREATOR -> a
    int CK -> b
    java.lang.String Xx -> c
    int Gt -> d
    java.lang.String mName -> e
    java.lang.String UO -> f
    android.net.Uri Xy -> g
    java.lang.String Xz -> h
    android.net.Uri XA -> i
    java.lang.String XB -> j
    int XC -> k
    java.lang.String XD -> l
    com.google.android.gms.games.PlayerEntity XE -> m
    int mState -> n
    int XF -> o
    java.lang.String XG -> p
    long XH -> q
    long XI -> r
    int getVersionCode() -> r
    java.lang.String getAchievementId() -> c_
    int getType() -> c
    java.lang.String getName() -> d
    java.lang.String getDescription() -> e
    android.net.Uri getUnlockedImageUri() -> f
    java.lang.String getUnlockedImageUrl() -> g
    android.net.Uri getRevealedImageUri() -> h
    java.lang.String getRevealedImageUrl() -> i
    int getTotalSteps() -> j
    java.lang.String getFormattedTotalSteps() -> k
    com.google.android.gms.games.Player getPlayer() -> l
    int getState() -> m
    int getCurrentSteps() -> n
    java.lang.String getFormattedCurrentSteps() -> o
    long getLastUpdatedTimestamp() -> p
    long getXpValue() -> q
    com.google.android.gms.games.achievement.Achievement freeze() -> s
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.achievement.Achievement) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.achievement.Achievement,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.achievement.Achievement) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.achievement.AchievementEntityCreator -> com.google.android.gms.games.achievement.a:
    com.google.android.gms.games.achievement.AchievementEntity createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.games.achievement.AchievementEntity[] newArray(int) -> a
    void a(com.google.android.gms.games.achievement.AchievementEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.achievement.AchievementRef -> com.google.android.gms.games.achievement.AchievementRef:
    java.lang.String getAchievementId() -> c_
    int getType() -> c
    java.lang.String getName() -> d
    java.lang.String getDescription() -> e
    android.net.Uri getUnlockedImageUri() -> f
    java.lang.String getUnlockedImageUrl() -> g
    android.net.Uri getRevealedImageUri() -> h
    java.lang.String getRevealedImageUrl() -> i
    int getTotalSteps() -> j
    java.lang.String getFormattedTotalSteps() -> k
    com.google.android.gms.games.Player getPlayer() -> l
    int getState() -> m
    int getCurrentSteps() -> n
    java.lang.String getFormattedCurrentSteps() -> o
    long getLastUpdatedTimestamp() -> p
    long getXpValue() -> q
    com.google.android.gms.games.achievement.Achievement freeze() -> r
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.appcontent.AppContentAction -> com.google.android.gms.games.appcontent.AppContentAction:
    java.util.List kH() -> d_
    java.lang.String kI() -> c
    android.os.Bundle getExtras() -> d
    java.lang.String getLabel() -> e
    java.lang.String kJ() -> f
    java.lang.String getType() -> g
com.google.android.gms.games.appcontent.AppContentActionEntity -> com.google.android.gms.games.appcontent.AppContentActionEntity:
    com.google.android.gms.games.appcontent.AppContentActionEntityCreator CREATOR -> a
    int CK -> b
    java.util.ArrayList XJ -> c
    java.lang.String XK -> d
    android.os.Bundle mExtras -> e
    java.lang.String XL -> f
    java.lang.String XM -> g
    java.lang.String vc -> h
    int getVersionCode() -> h
    java.util.List kH() -> d_
    java.lang.String kI() -> c
    android.os.Bundle getExtras() -> d
    java.lang.String getLabel() -> e
    java.lang.String kJ() -> f
    java.lang.String getType() -> g
    com.google.android.gms.games.appcontent.AppContentAction kK() -> i
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.appcontent.AppContentAction) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.appcontent.AppContentAction,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.appcontent.AppContentAction) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.appcontent.AppContentActionEntityCreator -> com.google.android.gms.games.appcontent.a:
    com.google.android.gms.games.appcontent.AppContentActionEntity cn(android.os.Parcel) -> a
    com.google.android.gms.games.appcontent.AppContentActionEntity[] dI(int) -> a
    void a(com.google.android.gms.games.appcontent.AppContentActionEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.appcontent.AppContentActionRef -> com.google.android.gms.games.appcontent.AppContentActionRef:
    java.util.List kH() -> d_
    java.lang.String kI() -> c
    android.os.Bundle getExtras() -> d
    java.lang.String getLabel() -> e
    java.lang.String kJ() -> f
    java.lang.String getType() -> g
    com.google.android.gms.games.appcontent.AppContentAction kK() -> h
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.appcontent.AppContentAnnotation -> com.google.android.gms.games.appcontent.AppContentAnnotation:
    java.lang.String getDescription() -> e_
    android.net.Uri kL() -> c
    java.lang.String getTitle() -> d
    java.lang.String getType() -> e
com.google.android.gms.games.appcontent.AppContentAnnotationEntity -> com.google.android.gms.games.appcontent.AppContentAnnotationEntity:
    com.google.android.gms.games.appcontent.AppContentAnnotationEntityCreator CREATOR -> a
    int CK -> b
    java.lang.String UO -> c
    android.net.Uri XN -> d
    java.lang.String OH -> e
    java.lang.String vc -> f
    int getVersionCode() -> f
    java.lang.String getDescription() -> e_
    android.net.Uri kL() -> c
    java.lang.String getTitle() -> d
    java.lang.String getType() -> e
    com.google.android.gms.games.appcontent.AppContentAnnotation kM() -> g
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.appcontent.AppContentAnnotation) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.appcontent.AppContentAnnotation,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.appcontent.AppContentAnnotation) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.appcontent.AppContentAnnotationEntityCreator -> com.google.android.gms.games.appcontent.b:
    com.google.android.gms.games.appcontent.AppContentAnnotationEntity co(android.os.Parcel) -> a
    com.google.android.gms.games.appcontent.AppContentAnnotationEntity[] dJ(int) -> a
    void a(com.google.android.gms.games.appcontent.AppContentAnnotationEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.appcontent.AppContentAnnotationRef -> com.google.android.gms.games.appcontent.AppContentAnnotationRef:
    java.lang.String getDescription() -> e_
    android.net.Uri kL() -> c
    java.lang.String getTitle() -> d
    java.lang.String getType() -> e
    com.google.android.gms.games.appcontent.AppContentAnnotation kM() -> f
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.appcontent.AppContentCard -> com.google.android.gms.games.appcontent.AppContentCard:
    java.util.List getActions() -> f_
    java.util.List kN() -> c
    java.util.List kH() -> d
    java.lang.String kI() -> e
    int kO() -> f
    java.lang.String getDescription() -> g
    android.os.Bundle kP() -> h
    android.net.Uri getIconImageUri() -> i
    android.net.Uri kL() -> j
    java.lang.String kQ() -> k
    java.lang.String getTitle() -> l
    int kR() -> m
    java.lang.String getType() -> n
com.google.android.gms.games.appcontent.AppContentCardEntity -> com.google.android.gms.games.appcontent.AppContentCardEntity:
    com.google.android.gms.games.appcontent.AppContentCardEntityCreator CREATOR -> a
    int CK -> b
    java.util.ArrayList mActions -> c
    java.util.ArrayList XO -> d
    java.util.ArrayList XJ -> e
    java.lang.String XK -> f
    int XP -> g
    java.lang.String UO -> h
    android.os.Bundle XQ -> i
    android.net.Uri WD -> j
    android.net.Uri XN -> k
    java.lang.String XR -> l
    java.lang.String OH -> m
    int XS -> n
    java.lang.String vc -> o
    int getVersionCode() -> o
    java.util.List getActions() -> f_
    java.util.List kN() -> c
    java.util.List kH() -> d
    java.lang.String kI() -> e
    int kO() -> f
    java.lang.String getDescription() -> g
    android.os.Bundle kP() -> h
    android.net.Uri getIconImageUri() -> i
    android.net.Uri kL() -> j
    java.lang.String kQ() -> k
    java.lang.String getTitle() -> l
    int kR() -> m
    java.lang.String getType() -> n
    com.google.android.gms.games.appcontent.AppContentCard kS() -> p
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.appcontent.AppContentCard) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.appcontent.AppContentCard,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.appcontent.AppContentCard) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.appcontent.AppContentCardEntityCreator -> com.google.android.gms.games.appcontent.c:
    com.google.android.gms.games.appcontent.AppContentCardEntity cp(android.os.Parcel) -> a
    com.google.android.gms.games.appcontent.AppContentCardEntity[] dK(int) -> a
    void a(com.google.android.gms.games.appcontent.AppContentCardEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.appcontent.AppContentCardRef -> com.google.android.gms.games.appcontent.AppContentCardRef:
    java.util.List getActions() -> f_
    java.util.List kN() -> c
    java.util.List kH() -> d
    java.lang.String kI() -> e
    int kO() -> f
    java.lang.String getDescription() -> g
    android.os.Bundle kP() -> h
    android.net.Uri getIconImageUri() -> i
    android.net.Uri kL() -> j
    java.lang.String kQ() -> k
    java.lang.String getTitle() -> l
    int kR() -> m
    java.lang.String getType() -> n
    com.google.android.gms.games.appcontent.AppContentCard kS() -> o
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.appcontent.AppContentCondition -> com.google.android.gms.games.appcontent.AppContentCondition:
    java.lang.String kT() -> g_
    java.lang.String kU() -> c
    java.lang.String kV() -> d
    android.os.Bundle kW() -> e
com.google.android.gms.games.appcontent.AppContentConditionEntity -> com.google.android.gms.games.appcontent.AppContentConditionEntity:
    com.google.android.gms.games.appcontent.AppContentConditionEntityCreator CREATOR -> a
    int CK -> b
    java.lang.String XT -> c
    java.lang.String XU -> d
    java.lang.String XV -> e
    android.os.Bundle XW -> f
    int getVersionCode() -> f
    java.lang.String kT() -> g_
    java.lang.String kU() -> c
    java.lang.String kV() -> d
    android.os.Bundle kW() -> e
    com.google.android.gms.games.appcontent.AppContentCondition kX() -> g
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.appcontent.AppContentCondition) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.appcontent.AppContentCondition,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.appcontent.AppContentCondition) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.appcontent.AppContentConditionEntityCreator -> com.google.android.gms.games.appcontent.d:
    com.google.android.gms.games.appcontent.AppContentConditionEntity cq(android.os.Parcel) -> a
    com.google.android.gms.games.appcontent.AppContentConditionEntity[] dL(int) -> a
    void a(com.google.android.gms.games.appcontent.AppContentConditionEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.appcontent.AppContentConditionRef -> com.google.android.gms.games.appcontent.AppContentConditionRef:
    java.lang.String kT() -> g_
    java.lang.String kU() -> c
    java.lang.String kV() -> d
    android.os.Bundle kW() -> e
    com.google.android.gms.games.appcontent.AppContentCondition kX() -> f
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.appcontent.AppContentSection -> com.google.android.gms.games.appcontent.AppContentSection:
    java.util.List getActions() -> h_
    android.net.Uri kY() -> c
    java.util.List kZ() -> d
    java.lang.String kI() -> e
    android.os.Bundle kP() -> f
    java.lang.String kQ() -> g
    java.lang.String getTitle() -> h
    java.lang.String getType() -> i
com.google.android.gms.games.appcontent.AppContentSectionEntity -> com.google.android.gms.games.appcontent.AppContentSectionEntity:
    com.google.android.gms.games.appcontent.AppContentSectionEntityCreator CREATOR -> a
    int CK -> b
    java.util.ArrayList mActions -> c
    android.net.Uri XY -> d
    java.util.ArrayList XZ -> e
    java.lang.String XK -> f
    android.os.Bundle XQ -> g
    java.lang.String XR -> h
    java.lang.String OH -> i
    java.lang.String vc -> j
    int getVersionCode() -> j
    java.util.List getActions() -> h_
    android.net.Uri kY() -> c
    java.util.List kZ() -> d
    java.lang.String kI() -> e
    android.os.Bundle kP() -> f
    java.lang.String kQ() -> g
    java.lang.String getTitle() -> h
    java.lang.String getType() -> i
    com.google.android.gms.games.appcontent.AppContentSection la() -> k
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.appcontent.AppContentSection) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.appcontent.AppContentSection,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.appcontent.AppContentSection) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.appcontent.AppContentSectionEntityCreator -> com.google.android.gms.games.appcontent.e:
    com.google.android.gms.games.appcontent.AppContentSectionEntity cr(android.os.Parcel) -> a
    com.google.android.gms.games.appcontent.AppContentSectionEntity[] dM(int) -> a
    void a(com.google.android.gms.games.appcontent.AppContentSectionEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.appcontent.AppContentSectionRef -> com.google.android.gms.games.appcontent.AppContentSectionRef:
    int Ya -> d
    java.util.ArrayList lb() -> j
    android.net.Uri kY() -> c
    java.util.ArrayList lc() -> k
    java.lang.String kI() -> e
    android.os.Bundle kP() -> f
    java.lang.String kQ() -> g
    java.lang.String getTitle() -> h
    java.lang.String getType() -> i
    com.google.android.gms.games.appcontent.AppContentSection la() -> l
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.util.List kZ() -> d
    java.util.List getActions() -> h_
    java.lang.Object freeze() -> a
com.google.android.gms.games.appcontent.AppContentTuple -> com.google.android.gms.games.appcontent.AppContentTuple:
    java.lang.String getName() -> i_
    java.lang.String getValue() -> c
com.google.android.gms.games.appcontent.AppContentTupleEntity -> com.google.android.gms.games.appcontent.AppContentTupleEntity:
    com.google.android.gms.games.appcontent.AppContentTupleEntityCreator CREATOR -> a
    int CK -> b
    java.lang.String mName -> c
    java.lang.String mValue -> d
    int getVersionCode() -> d
    java.lang.String getName() -> i_
    java.lang.String getValue() -> c
    com.google.android.gms.games.appcontent.AppContentTuple ld() -> e
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.appcontent.AppContentTuple) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.appcontent.AppContentTuple,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.appcontent.AppContentTuple) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.appcontent.AppContentTupleEntityCreator -> com.google.android.gms.games.appcontent.f:
    com.google.android.gms.games.appcontent.AppContentTupleEntity cs(android.os.Parcel) -> a
    com.google.android.gms.games.appcontent.AppContentTupleEntity[] dN(int) -> a
    void a(com.google.android.gms.games.appcontent.AppContentTupleEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.appcontent.AppContentTupleRef -> com.google.android.gms.games.appcontent.AppContentTupleRef:
    java.lang.String getName() -> i_
    java.lang.String getValue() -> c
    com.google.android.gms.games.appcontent.AppContentTuple ld() -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.appcontent.AppContentUtils -> com.google.android.gms.games.appcontent.g:
    java.util.ArrayList a(com.google.android.gms.common.data.DataHolder,java.util.ArrayList,java.lang.String,int) -> a
    java.util.ArrayList b(com.google.android.gms.common.data.DataHolder,java.util.ArrayList,java.lang.String,int) -> b
    java.util.ArrayList c(com.google.android.gms.common.data.DataHolder,java.util.ArrayList,java.lang.String,int) -> c
    android.os.Bundle d(com.google.android.gms.common.data.DataHolder,java.util.ArrayList,java.lang.String,int) -> d
    void a(com.google.android.gms.common.data.DataHolder,int,java.lang.String,java.lang.String,int,com.google.android.gms.games.appcontent.AppContentUtils$AppContentRunner,java.util.ArrayList) -> a
com.google.android.gms.games.appcontent.AppContentUtils$1 -> com.google.android.gms.games.appcontent.h:
    java.util.ArrayList Yb -> a
    void b(java.util.ArrayList,int) -> a
com.google.android.gms.games.appcontent.AppContentUtils$2 -> com.google.android.gms.games.appcontent.i:
    java.util.ArrayList Yb -> a
    void b(java.util.ArrayList,int) -> a
com.google.android.gms.games.appcontent.AppContentUtils$3 -> com.google.android.gms.games.appcontent.j:
    java.util.ArrayList Yb -> a
    void b(java.util.ArrayList,int) -> a
com.google.android.gms.games.appcontent.AppContentUtils$4 -> com.google.android.gms.games.appcontent.k:
    com.google.android.gms.common.data.DataHolder Yc -> a
    android.os.Bundle Yd -> b
    void b(java.util.ArrayList,int) -> a
com.google.android.gms.games.appcontent.AppContentUtils$AppContentRunner -> com.google.android.gms.games.appcontent.l:
    void b(java.util.ArrayList,int) -> a
com.google.android.gms.games.appcontent.MultiDataBufferRef -> com.google.android.gms.games.appcontent.m:
    java.util.ArrayList XX -> c
com.google.android.gms.games.event.Event -> com.google.android.gms.games.event.Event:
    java.lang.String getEventId() -> j_
    java.lang.String getName() -> c
    java.lang.String getDescription() -> d
    android.net.Uri getIconImageUri() -> e
    java.lang.String getIconImageUrl() -> f
    com.google.android.gms.games.Player getPlayer() -> g
    long getValue() -> h
    java.lang.String getFormattedValue() -> i
    boolean isVisible() -> j
com.google.android.gms.games.event.EventEntity -> com.google.android.gms.games.event.EventEntity:
    com.google.android.gms.games.event.EventEntityCreator CREATOR -> a
    int CK -> b
    java.lang.String Ye -> c
    java.lang.String mName -> d
    java.lang.String UO -> e
    android.net.Uri WD -> f
    java.lang.String WO -> g
    com.google.android.gms.games.PlayerEntity XE -> h
    long Yf -> i
    java.lang.String Yg -> j
    boolean Yh -> k
    int getVersionCode() -> k
    java.lang.String getEventId() -> j_
    java.lang.String getName() -> c
    java.lang.String getDescription() -> d
    android.net.Uri getIconImageUri() -> e
    java.lang.String getIconImageUrl() -> f
    com.google.android.gms.games.Player getPlayer() -> g
    long getValue() -> h
    java.lang.String getFormattedValue() -> i
    boolean isVisible() -> j
    com.google.android.gms.games.event.Event freeze() -> l
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.event.Event) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.event.Event,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.event.Event) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.event.EventEntityCreator -> com.google.android.gms.games.event.a:
    com.google.android.gms.games.event.EventEntity createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.games.event.EventEntity[] newArray(int) -> a
    void a(com.google.android.gms.games.event.EventEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.event.EventRef -> com.google.android.gms.games.event.EventRef:
    java.lang.String getEventId() -> j_
    java.lang.String getName() -> c
    java.lang.String getDescription() -> d
    android.net.Uri getIconImageUri() -> e
    java.lang.String getIconImageUrl() -> f
    com.google.android.gms.games.Player getPlayer() -> g
    long getValue() -> h
    java.lang.String getFormattedValue() -> i
    boolean isVisible() -> j
    com.google.android.gms.games.event.Event freeze() -> k
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.internal.ConnectionInfo -> com.google.android.gms.games.internal.ConnectionInfo:
    com.google.android.gms.games.internal.ConnectionInfoCreator CREATOR -> a
    int CK -> b
    java.lang.String Yi -> c
    int Yj -> d
    int getVersionCode() -> a
    java.lang.String le() -> b
    int lf() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.games.internal.ConnectionInfoCreator -> com.google.android.gms.games.internal.a:
    com.google.android.gms.games.internal.ConnectionInfo ct(android.os.Parcel) -> a
    com.google.android.gms.games.internal.ConnectionInfo[] dR(int) -> a
    void a(com.google.android.gms.games.internal.ConnectionInfo,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.internal.GamesDowngradeableSafeParcel -> com.google.android.gms.games.internal.GamesDowngradeableSafeParcel:
    boolean c(java.lang.Integer) -> b
com.google.android.gms.games.internal.constants.MatchResult -> com.google.android.gms.games.internal.a.a:
    boolean isValid(int) -> a
com.google.android.gms.games.internal.game.ExtendedGame -> com.google.android.gms.games.internal.game.ExtendedGame:
    com.google.android.gms.games.Game getGame() -> k_
    java.util.ArrayList lY() -> c
    int lZ() -> d
    boolean ma() -> e
    int mb() -> f
    long mc() -> g
    long md() -> h
    java.lang.String me() -> i
    long mf() -> j
    java.lang.String mg() -> k
    com.google.android.gms.games.snapshot.SnapshotMetadata mh() -> l
com.google.android.gms.games.internal.game.ExtendedGameEntity -> com.google.android.gms.games.internal.game.ExtendedGameEntity:
    com.google.android.gms.games.internal.game.ExtendedGameEntityCreator CREATOR -> a
    int CK -> b
    com.google.android.gms.games.GameEntity acs -> c
    int act -> d
    boolean acu -> e
    int acv -> f
    long acw -> g
    long acx -> h
    java.lang.String acy -> i
    long acz -> j
    java.lang.String acA -> k
    java.util.ArrayList acB -> l
    com.google.android.gms.games.snapshot.SnapshotMetadataEntity acC -> m
    int getVersionCode() -> m
    com.google.android.gms.games.GameEntity mi() -> n
    java.util.ArrayList lY() -> c
    int lZ() -> d
    boolean ma() -> e
    int mb() -> f
    long mc() -> g
    long md() -> h
    java.lang.String me() -> i
    long mf() -> j
    java.lang.String mg() -> k
    com.google.android.gms.games.snapshot.SnapshotMetadata mh() -> l
    com.google.android.gms.games.internal.game.ExtendedGame mj() -> o
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.internal.game.ExtendedGame) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.internal.game.ExtendedGame,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.internal.game.ExtendedGame) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.google.android.gms.games.Game getGame() -> k_
    java.lang.Object freeze() -> a
    java.lang.Integer kD() -> p
    boolean b(java.lang.Integer) -> a
    boolean bz(java.lang.String) -> a
com.google.android.gms.games.internal.game.ExtendedGameEntity$ExtendedGameEntityCreatorCompat -> com.google.android.gms.games.internal.game.a:
    com.google.android.gms.games.internal.game.ExtendedGameEntity cu(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.internal.game.ExtendedGameEntityCreator -> com.google.android.gms.games.internal.game.b:
    com.google.android.gms.games.internal.game.ExtendedGameEntity cu(android.os.Parcel) -> a
    com.google.android.gms.games.internal.game.ExtendedGameEntity[] eb(int) -> a
    void a(com.google.android.gms.games.internal.game.ExtendedGameEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.internal.game.ExtendedGameRef -> com.google.android.gms.games.internal.game.ExtendedGameRef:
    com.google.android.gms.games.GameRef acr -> c
    com.google.android.gms.games.snapshot.SnapshotMetadataRef acD -> d
    int Ya -> e
    com.google.android.gms.games.internal.game.ExtendedGame mj() -> m
    com.google.android.gms.games.Game getGame() -> k_
    java.util.ArrayList lY() -> c
    int lZ() -> d
    boolean ma() -> e
    int mb() -> f
    long mc() -> g
    long md() -> h
    java.lang.String me() -> i
    long mf() -> j
    java.lang.String mg() -> k
    com.google.android.gms.games.snapshot.SnapshotMetadata mh() -> l
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.internal.game.GameBadge -> com.google.android.gms.games.internal.game.GameBadge:
    int getType() -> l_
    java.lang.String getTitle() -> c
    java.lang.String getDescription() -> d
    android.net.Uri getIconImageUri() -> e
com.google.android.gms.games.internal.game.GameBadgeEntity -> com.google.android.gms.games.internal.game.GameBadgeEntity:
    com.google.android.gms.games.internal.game.GameBadgeEntityCreator CREATOR -> a
    int CK -> b
    int Gt -> c
    java.lang.String OH -> d
    java.lang.String UO -> e
    android.net.Uri WD -> f
    int getVersionCode() -> f
    int getType() -> l_
    java.lang.String getTitle() -> c
    java.lang.String getDescription() -> d
    android.net.Uri getIconImageUri() -> e
    com.google.android.gms.games.internal.game.GameBadge mk() -> g
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.internal.game.GameBadge) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.internal.game.GameBadge,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.internal.game.GameBadge) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer kD() -> h
    boolean b(java.lang.Integer) -> a
    boolean bz(java.lang.String) -> a
com.google.android.gms.games.internal.game.GameBadgeEntity$GameBadgeEntityCreatorCompat -> com.google.android.gms.games.internal.game.c:
    com.google.android.gms.games.internal.game.GameBadgeEntity cv(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.internal.game.GameBadgeEntityCreator -> com.google.android.gms.games.internal.game.d:
    com.google.android.gms.games.internal.game.GameBadgeEntity cv(android.os.Parcel) -> a
    com.google.android.gms.games.internal.game.GameBadgeEntity[] ed(int) -> a
    void a(com.google.android.gms.games.internal.game.GameBadgeEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.internal.game.GameBadgeRef -> com.google.android.gms.games.internal.game.GameBadgeRef:
    com.google.android.gms.games.internal.game.GameBadge mk() -> f
    int getType() -> l_
    java.lang.String getTitle() -> c
    java.lang.String getDescription() -> d
    android.net.Uri getIconImageUri() -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.internal.multiplayer.InvitationClusterCreator -> com.google.android.gms.games.internal.multiplayer.a:
    com.google.android.gms.games.internal.multiplayer.ZInvitationCluster cw(android.os.Parcel) -> a
    com.google.android.gms.games.internal.multiplayer.ZInvitationCluster[] eg(int) -> a
    void a(com.google.android.gms.games.internal.multiplayer.ZInvitationCluster,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.internal.multiplayer.ZInvitationCluster -> com.google.android.gms.games.internal.multiplayer.ZInvitationCluster:
    com.google.android.gms.games.internal.multiplayer.InvitationClusterCreator CREATOR -> a
    int CK -> b
    java.util.ArrayList acE -> c
    void mp() -> m
    int getVersionCode() -> b
    java.util.ArrayList mq() -> c
    com.google.android.gms.games.Game getGame() -> d
    java.lang.String getInvitationId() -> e
    com.google.android.gms.games.multiplayer.Participant getInviter() -> f
    long getCreationTimestamp() -> g
    int getInvitationType() -> h
    int getVariant() -> i
    int getAvailableAutoMatchSlots() -> j
    com.google.android.gms.games.multiplayer.Invitation freeze() -> k
    java.util.ArrayList getParticipants() -> l
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.internal.player.MostRecentGameInfo -> com.google.android.gms.games.internal.player.MostRecentGameInfo:
    java.lang.String mw() -> m_
    java.lang.String mx() -> c
    long my() -> d
    android.net.Uri mz() -> e
    android.net.Uri mA() -> f
    android.net.Uri mB() -> g
com.google.android.gms.games.internal.player.MostRecentGameInfoEntity -> com.google.android.gms.games.internal.player.MostRecentGameInfoEntity:
    com.google.android.gms.games.internal.player.MostRecentGameInfoEntityCreator CREATOR -> a
    int CK -> b
    java.lang.String acF -> c
    java.lang.String acG -> d
    long acH -> e
    android.net.Uri acI -> f
    android.net.Uri acJ -> g
    android.net.Uri acK -> h
    int getVersionCode() -> h
    java.lang.String mw() -> m_
    java.lang.String mx() -> c
    long my() -> d
    android.net.Uri mz() -> e
    android.net.Uri mA() -> f
    android.net.Uri mB() -> g
    com.google.android.gms.games.internal.player.MostRecentGameInfo mC() -> i
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.internal.player.MostRecentGameInfo) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.internal.player.MostRecentGameInfo,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.internal.player.MostRecentGameInfo) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.internal.player.MostRecentGameInfoEntityCreator -> com.google.android.gms.games.internal.player.a:
    com.google.android.gms.games.internal.player.MostRecentGameInfoEntity cx(android.os.Parcel) -> a
    com.google.android.gms.games.internal.player.MostRecentGameInfoEntity[] ei(int) -> a
    void a(com.google.android.gms.games.internal.player.MostRecentGameInfoEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.internal.player.MostRecentGameInfoRef -> com.google.android.gms.games.internal.player.MostRecentGameInfoRef:
    com.google.android.gms.games.internal.player.PlayerColumnNames Xv -> c
    java.lang.String mw() -> m_
    java.lang.String mx() -> c
    long my() -> d
    android.net.Uri mz() -> e
    android.net.Uri mA() -> f
    android.net.Uri mB() -> g
    com.google.android.gms.games.internal.player.MostRecentGameInfo mC() -> h
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.internal.player.PlayerColumnNames -> com.google.android.gms.games.internal.player.b:
    java.lang.String acL -> a
    java.lang.String acM -> b
    java.lang.String acN -> c
    java.lang.String acO -> d
    java.lang.String acP -> e
    java.lang.String acQ -> f
    java.lang.String acR -> g
    java.lang.String acS -> h
    java.lang.String acT -> i
    java.lang.String acU -> j
    java.lang.String acV -> k
    java.lang.String acW -> l
    java.lang.String acX -> m
    java.lang.String acY -> n
    java.lang.String acZ -> o
    java.lang.String ada -> p
    java.lang.String adb -> q
    java.lang.String adc -> r
    java.lang.String add -> s
    java.lang.String ade -> t
    java.lang.String adf -> u
    java.lang.String adg -> v
    java.lang.String adh -> w
    java.lang.String adi -> x
    java.lang.String adj -> y
com.google.android.gms.games.internal.request.GameRequestCluster -> com.google.android.gms.games.internal.request.GameRequestCluster:
    com.google.android.gms.games.internal.request.GameRequestClusterCreator CREATOR -> a
    int CK -> b
    java.util.ArrayList adk -> c
    void mp() -> o
    int getVersionCode() -> b
    java.util.ArrayList mD() -> c
    java.lang.String getRequestId() -> d
    com.google.android.gms.games.Game getGame() -> e
    com.google.android.gms.games.Player getSender() -> f
    java.util.ArrayList mE() -> g
    byte[] getData() -> h
    int getType() -> i
    long getCreationTimestamp() -> j
    long getExpirationTimestamp() -> k
    int getRecipientStatus(java.lang.String) -> a_
    int getStatus() -> l
    com.google.android.gms.games.request.GameRequest freeze() -> m
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.util.List getRecipients() -> n
    java.lang.Object freeze() -> a
com.google.android.gms.games.internal.request.GameRequestClusterCreator -> com.google.android.gms.games.internal.request.a:
    com.google.android.gms.games.internal.request.GameRequestCluster cy(android.os.Parcel) -> a
    com.google.android.gms.games.internal.request.GameRequestCluster[] ej(int) -> a
    void a(com.google.android.gms.games.internal.request.GameRequestCluster,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.Invitation -> com.google.android.gms.games.multiplayer.Invitation:
    com.google.android.gms.games.Game getGame() -> d
    java.lang.String getInvitationId() -> e
    com.google.android.gms.games.multiplayer.Participant getInviter() -> f
    long getCreationTimestamp() -> g
    int getInvitationType() -> h
    int getVariant() -> i
    int getAvailableAutoMatchSlots() -> j
com.google.android.gms.games.multiplayer.InvitationEntity -> com.google.android.gms.games.multiplayer.InvitationEntity:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.games.GameEntity acs -> b
    java.lang.String YG -> c
    long adS -> d
    int adT -> e
    com.google.android.gms.games.multiplayer.ParticipantEntity adU -> f
    java.util.ArrayList adV -> g
    int adW -> h
    int adX -> i
    int getVersionCode() -> b
    com.google.android.gms.games.Game getGame() -> d
    java.lang.String getInvitationId() -> e
    com.google.android.gms.games.multiplayer.Participant getInviter() -> f
    long getCreationTimestamp() -> g
    java.util.ArrayList getParticipants() -> l
    int getInvitationType() -> h
    int getVariant() -> i
    int getAvailableAutoMatchSlots() -> j
    com.google.android.gms.games.multiplayer.Invitation freeze() -> c
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.multiplayer.Invitation) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.multiplayer.Invitation,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.multiplayer.Invitation) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer kD() -> k
    boolean b(java.lang.Integer) -> a
    boolean bz(java.lang.String) -> a
com.google.android.gms.games.multiplayer.InvitationEntity$InvitationEntityCreatorCompat -> com.google.android.gms.games.multiplayer.a:
    com.google.android.gms.games.multiplayer.InvitationEntity cz(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.InvitationEntityCreator -> com.google.android.gms.games.multiplayer.b:
    com.google.android.gms.games.multiplayer.InvitationEntity cz(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.InvitationEntity[] el(int) -> a
    void a(com.google.android.gms.games.multiplayer.InvitationEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.InvitationRef -> com.google.android.gms.games.multiplayer.InvitationRef:
    com.google.android.gms.games.Game adq -> c
    com.google.android.gms.games.multiplayer.ParticipantRef adY -> d
    java.util.ArrayList adV -> e
    com.google.android.gms.games.Game getGame() -> d
    java.lang.String getInvitationId() -> e
    com.google.android.gms.games.multiplayer.Participant getInviter() -> f
    long getCreationTimestamp() -> g
    java.util.ArrayList getParticipants() -> l
    int getInvitationType() -> h
    int getVariant() -> i
    int getAvailableAutoMatchSlots() -> j
    com.google.android.gms.games.multiplayer.Invitation freeze() -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.multiplayer.Participant -> com.google.android.gms.games.multiplayer.Participant:
    int getStatus() -> n_
    java.lang.String le() -> c
    int getCapabilities() -> d
    boolean isConnectedToRoom() -> e
    java.lang.String getDisplayName() -> f
    android.net.Uri getIconImageUri() -> g
    java.lang.String getIconImageUrl() -> h
    android.net.Uri getHiResImageUri() -> i
    java.lang.String getHiResImageUrl() -> j
    java.lang.String getParticipantId() -> k
    com.google.android.gms.games.Player getPlayer() -> l
    com.google.android.gms.games.multiplayer.ParticipantResult getResult() -> m
com.google.android.gms.games.multiplayer.ParticipantEntity -> com.google.android.gms.games.multiplayer.ParticipantEntity:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String Zk -> b
    java.lang.String OS -> c
    android.net.Uri WD -> d
    android.net.Uri WE -> e
    int FP -> f
    java.lang.String Yi -> g
    boolean adZ -> h
    com.google.android.gms.games.PlayerEntity XE -> i
    int FO -> j
    com.google.android.gms.games.multiplayer.ParticipantResult aea -> k
    java.lang.String WO -> l
    java.lang.String WP -> m
    int getVersionCode() -> n
    int getStatus() -> n_
    java.lang.String le() -> c
    boolean isConnectedToRoom() -> e
    java.lang.String getDisplayName() -> f
    android.net.Uri getIconImageUri() -> g
    java.lang.String getIconImageUrl() -> h
    android.net.Uri getHiResImageUri() -> i
    java.lang.String getHiResImageUrl() -> j
    java.lang.String getParticipantId() -> k
    com.google.android.gms.games.Player getPlayer() -> l
    com.google.android.gms.games.multiplayer.ParticipantResult getResult() -> m
    int getCapabilities() -> d
    com.google.android.gms.games.multiplayer.Participant freeze() -> o
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.multiplayer.Participant) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.multiplayer.Participant,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.multiplayer.Participant) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer kD() -> p
    boolean b(java.lang.Integer) -> a
    boolean bz(java.lang.String) -> a
com.google.android.gms.games.multiplayer.ParticipantEntity$ParticipantEntityCreatorCompat -> com.google.android.gms.games.multiplayer.c:
    com.google.android.gms.games.multiplayer.ParticipantEntity cA(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.ParticipantEntityCreator -> com.google.android.gms.games.multiplayer.d:
    com.google.android.gms.games.multiplayer.ParticipantEntity cA(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.ParticipantEntity[] em(int) -> a
    void a(com.google.android.gms.games.multiplayer.ParticipantEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.ParticipantRef -> com.google.android.gms.games.multiplayer.ParticipantRef:
    com.google.android.gms.games.PlayerRef aeb -> c
    com.google.android.gms.games.multiplayer.Participant freeze() -> n
    int getStatus() -> n_
    java.lang.String le() -> c
    boolean isConnectedToRoom() -> e
    java.lang.String getDisplayName() -> f
    android.net.Uri getIconImageUri() -> g
    java.lang.String getIconImageUrl() -> h
    android.net.Uri getHiResImageUri() -> i
    java.lang.String getHiResImageUrl() -> j
    java.lang.String getParticipantId() -> k
    com.google.android.gms.games.Player getPlayer() -> l
    com.google.android.gms.games.multiplayer.ParticipantResult getResult() -> m
    int getCapabilities() -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.multiplayer.ParticipantResult -> com.google.android.gms.games.multiplayer.ParticipantResult:
    com.google.android.gms.games.multiplayer.ParticipantResultCreator CREATOR -> a
    int CK -> b
    java.lang.String Zk -> c
    int aec -> d
    int aed -> e
    int getVersionCode() -> a
    java.lang.String getParticipantId() -> b
    int getResult() -> c
    int getPlacing() -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.games.multiplayer.ParticipantResultCreator -> com.google.android.gms.games.multiplayer.e:
    com.google.android.gms.games.multiplayer.ParticipantResult createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.ParticipantResult[] newArray(int) -> a
    void a(com.google.android.gms.games.multiplayer.ParticipantResult,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.Participatable -> com.google.android.gms.games.multiplayer.f:
    java.util.ArrayList getParticipants() -> l
com.google.android.gms.games.multiplayer.realtime.RealTimeMessage -> com.google.android.gms.games.multiplayer.realtime.RealTimeMessage:
    java.lang.String aee -> a
    byte[] aef -> b
    int aeg -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.games.multiplayer.realtime.RealTimeMessage$1 -> com.google.android.gms.games.multiplayer.realtime.a:
    com.google.android.gms.games.multiplayer.realtime.RealTimeMessage cB(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.realtime.RealTimeMessage[] en(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.realtime.Room -> com.google.android.gms.games.multiplayer.realtime.Room:
    java.lang.String getRoomId() -> o_
    java.lang.String getCreatorId() -> c
    long getCreationTimestamp() -> d
    int getStatus() -> e
    java.lang.String getDescription() -> f
    int getVariant() -> g
    android.os.Bundle getAutoMatchCriteria() -> h
    int getAutoMatchWaitEstimateSeconds() -> i
com.google.android.gms.games.multiplayer.realtime.RoomConfig -> com.google.android.gms.games.multiplayer.realtime.b:
    android.os.Bundle createAutoMatchCriteria(int,int,long) -> a
com.google.android.gms.games.multiplayer.realtime.RoomEntity -> com.google.android.gms.games.multiplayer.realtime.RoomEntity:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String YI -> b
    java.lang.String aep -> c
    long adS -> d
    int aeq -> e
    java.lang.String UO -> f
    int adW -> g
    android.os.Bundle aem -> h
    java.util.ArrayList adV -> i
    int aer -> j
    int getVersionCode() -> j
    java.lang.String getRoomId() -> o_
    java.lang.String getCreatorId() -> c
    long getCreationTimestamp() -> d
    int getStatus() -> e
    java.lang.String getDescription() -> f
    int getVariant() -> g
    android.os.Bundle getAutoMatchCriteria() -> h
    java.util.ArrayList getParticipants() -> l
    int getAutoMatchWaitEstimateSeconds() -> i
    com.google.android.gms.games.multiplayer.realtime.Room freeze() -> k
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.multiplayer.realtime.Room) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.multiplayer.realtime.Room,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.multiplayer.realtime.Room) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
    java.lang.Integer kD() -> m
    boolean b(java.lang.Integer) -> a
    boolean bz(java.lang.String) -> a
com.google.android.gms.games.multiplayer.realtime.RoomEntity$RoomEntityCreatorCompat -> com.google.android.gms.games.multiplayer.realtime.c:
    com.google.android.gms.games.multiplayer.realtime.RoomEntity cC(android.os.Parcel) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.realtime.RoomEntityCreator -> com.google.android.gms.games.multiplayer.realtime.d:
    com.google.android.gms.games.multiplayer.realtime.RoomEntity cC(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.realtime.RoomEntity[] eo(int) -> a
    void a(com.google.android.gms.games.multiplayer.realtime.RoomEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.realtime.RoomRef -> com.google.android.gms.games.multiplayer.realtime.RoomRef:
    int Ya -> c
    java.lang.String getRoomId() -> o_
    java.lang.String getCreatorId() -> c
    long getCreationTimestamp() -> d
    int getStatus() -> e
    java.lang.String getDescription() -> f
    int getVariant() -> g
    android.os.Bundle getAutoMatchCriteria() -> h
    java.util.ArrayList getParticipants() -> l
    int getAutoMatchWaitEstimateSeconds() -> i
    com.google.android.gms.games.multiplayer.realtime.Room freeze() -> j
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch -> com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch:
    int[] MATCH_TURN_STATUS_ALL -> a_
    com.google.android.gms.games.Game getGame() -> p_
    java.lang.String getMatchId() -> c
    java.lang.String getCreatorId() -> d
    long getCreationTimestamp() -> e
    int getStatus() -> f
    int getTurnStatus() -> g
    java.lang.String getDescription() -> h
    int getVariant() -> i
    java.lang.String getLastUpdaterId() -> j
    long getLastUpdatedTimestamp() -> k
    java.lang.String getPendingParticipantId() -> m
    byte[] getData() -> n
    int getVersion() -> o
    java.lang.String getRematchId() -> p
    byte[] getPreviousMatchData() -> q
    int getMatchNumber() -> r
    android.os.Bundle getAutoMatchCriteria() -> s
    int getAvailableAutoMatchSlots() -> t
    boolean isLocallyModified() -> u
    java.lang.String getDescriptionParticipantId() -> v
com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchConfig -> com.google.android.gms.games.multiplayer.turnbased.a:
    android.os.Bundle createAutoMatchCriteria(int,int,long) -> a
com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchEntity -> com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchEntity:
    com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchEntityCreator CREATOR -> b
    int CK -> c
    com.google.android.gms.games.GameEntity acs -> d
    java.lang.String Zb -> e
    java.lang.String aep -> f
    long adS -> g
    java.lang.String aex -> h
    long XH -> i
    java.lang.String aey -> j
    int aez -> k
    int adW -> l
    int Ef -> m
    byte[] aeA -> n
    java.util.ArrayList adV -> o
    java.lang.String aeB -> p
    byte[] aeC -> q
    int aeD -> r
    android.os.Bundle aem -> s
    int aeE -> t
    boolean aeF -> u
    java.lang.String UO -> v
    java.lang.String aeG -> w
    int getVersionCode() -> w
    com.google.android.gms.games.Game getGame() -> p_
    java.lang.String getMatchId() -> c
    java.lang.String getCreatorId() -> d
    long getCreationTimestamp() -> e
    java.lang.String getLastUpdaterId() -> j
    long getLastUpdatedTimestamp() -> k
    java.lang.String getPendingParticipantId() -> m
    int getStatus() -> f
    int getTurnStatus() -> g
    java.lang.String getDescription() -> h
    java.lang.String getDescriptionParticipantId() -> v
    int getVariant() -> i
    byte[] getData() -> n
    int getVersion() -> o
    java.lang.String getRematchId() -> p
    byte[] getPreviousMatchData() -> q
    int getMatchNumber() -> r
    android.os.Bundle getAutoMatchCriteria() -> s
    int getAvailableAutoMatchSlots() -> t
    boolean isLocallyModified() -> u
    java.util.ArrayList getParticipants() -> l
    com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch freeze() -> x
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchEntityCreator -> com.google.android.gms.games.multiplayer.turnbased.b:
    com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchEntity createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchEntity[] newArray(int) -> a
    void a(com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchRef -> com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchRef:
    com.google.android.gms.games.Game adq -> c
    int Ya -> d
    com.google.android.gms.games.Game getGame() -> p_
    java.lang.String getMatchId() -> c
    java.lang.String getCreatorId() -> d
    long getCreationTimestamp() -> e
    int getStatus() -> f
    int getTurnStatus() -> g
    java.lang.String getDescription() -> h
    java.lang.String getDescriptionParticipantId() -> v
    int getVariant() -> i
    java.util.ArrayList getParticipants() -> l
    java.lang.String getLastUpdaterId() -> j
    long getLastUpdatedTimestamp() -> k
    java.lang.String getPendingParticipantId() -> m
    byte[] getData() -> n
    int getVersion() -> o
    java.lang.String getRematchId() -> p
    byte[] getPreviousMatchData() -> q
    int getMatchNumber() -> r
    android.os.Bundle getAutoMatchCriteria() -> s
    int getAvailableAutoMatchSlots() -> t
    boolean isLocallyModified() -> u
    com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch freeze() -> w
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.quest.Milestone -> com.google.android.gms.games.quest.Milestone:
    java.lang.String getMilestoneId() -> q_
    long getCurrentProgress() -> c
    java.lang.String getEventId() -> d
    int getState() -> e
    long getTargetProgress() -> f
    byte[] getCompletionRewardData() -> g
com.google.android.gms.games.quest.MilestoneEntity -> com.google.android.gms.games.quest.MilestoneEntity:
    com.google.android.gms.games.quest.MilestoneEntityCreator CREATOR -> a
    int CK -> b
    java.lang.String Zn -> c
    long aeH -> d
    long aeI -> e
    byte[] aeJ -> f
    int mState -> g
    java.lang.String Ye -> h
    int getVersionCode() -> h
    java.lang.String getEventId() -> d
    java.lang.String getMilestoneId() -> q_
    long getCurrentProgress() -> c
    long getTargetProgress() -> f
    byte[] getCompletionRewardData() -> g
    int getState() -> e
    com.google.android.gms.games.quest.Milestone freeze() -> i
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.quest.Milestone) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.quest.Milestone,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.quest.Milestone) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.quest.MilestoneEntityCreator -> com.google.android.gms.games.quest.a:
    com.google.android.gms.games.quest.MilestoneEntity createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.games.quest.MilestoneEntity[] newArray(int) -> a
    void a(com.google.android.gms.games.quest.MilestoneEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.quest.MilestoneRef -> com.google.android.gms.games.quest.MilestoneRef:
    java.lang.String getMilestoneId() -> q_
    long getCurrentProgress() -> c
    java.lang.String getEventId() -> d
    long mP() -> i
    long getTargetProgress() -> f
    byte[] getCompletionRewardData() -> g
    int getState() -> e
    com.google.android.gms.games.quest.Milestone freeze() -> h
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.quest.Quest -> com.google.android.gms.games.quest.Quest:
    int[] QUEST_STATE_ALL -> b_
    java.lang.String[] QUEST_STATE_NON_TERMINAL -> c_
    java.lang.String getQuestId() -> r_
    java.lang.String getName() -> c
    java.lang.String getDescription() -> d
    android.net.Uri getBannerImageUri() -> e
    java.lang.String getBannerImageUrl() -> f
    android.net.Uri getIconImageUri() -> g
    java.lang.String getIconImageUrl() -> h
    java.util.List mQ() -> i
    com.google.android.gms.games.Game getGame() -> j
    int getState() -> k
    int getType() -> l
    long getAcceptedTimestamp() -> m
    long getEndTimestamp() -> n
    long getLastUpdatedTimestamp() -> o
    long mR() -> p
    long getStartTimestamp() -> q
com.google.android.gms.games.quest.QuestEntity -> com.google.android.gms.games.quest.QuestEntity:
    com.google.android.gms.games.quest.QuestEntityCreator CREATOR -> c
    int CK -> d
    com.google.android.gms.games.GameEntity acs -> e
    java.lang.String aeK -> f
    long aeL -> g
    android.net.Uri aeM -> h
    java.lang.String aeN -> i
    java.lang.String UO -> j
    long aeO -> k
    long XH -> l
    android.net.Uri aeP -> m
    java.lang.String aeQ -> n
    java.lang.String mName -> o
    long aeR -> p
    long aeS -> q
    int mState -> r
    int Gt -> s
    java.util.ArrayList aeT -> t
    int getVersionCode() -> r
    java.lang.String getQuestId() -> r_
    java.lang.String getName() -> c
    java.lang.String getDescription() -> d
    android.net.Uri getIconImageUri() -> g
    java.lang.String getIconImageUrl() -> h
    android.net.Uri getBannerImageUri() -> e
    java.lang.String getBannerImageUrl() -> f
    java.util.List mQ() -> i
    com.google.android.gms.games.Game getGame() -> j
    int getState() -> k
    int getType() -> l
    long getAcceptedTimestamp() -> m
    long getEndTimestamp() -> n
    long getLastUpdatedTimestamp() -> o
    long mR() -> p
    long getStartTimestamp() -> q
    com.google.android.gms.games.quest.Quest freeze() -> s
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.quest.Quest) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.quest.Quest,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.quest.Quest) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.quest.QuestEntityCreator -> com.google.android.gms.games.quest.b:
    com.google.android.gms.games.quest.QuestEntity createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.games.quest.QuestEntity[] newArray(int) -> a
    void a(com.google.android.gms.games.quest.QuestEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.quest.QuestRef -> com.google.android.gms.games.quest.QuestRef:
    com.google.android.gms.games.Game adq -> c
    int Ya -> d
    java.lang.String getQuestId() -> r_
    java.lang.String getName() -> c
    java.lang.String getDescription() -> d
    android.net.Uri getIconImageUri() -> g
    java.lang.String getIconImageUrl() -> h
    android.net.Uri getBannerImageUri() -> e
    java.lang.String getBannerImageUrl() -> f
    java.util.List mQ() -> i
    com.google.android.gms.games.Game getGame() -> j
    int getState() -> k
    int getType() -> l
    long getAcceptedTimestamp() -> m
    long getEndTimestamp() -> n
    long getLastUpdatedTimestamp() -> o
    long mR() -> p
    long getStartTimestamp() -> q
    com.google.android.gms.games.quest.Quest freeze() -> r
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.request.GameRequest -> com.google.android.gms.games.request.GameRequest:
    java.lang.String getRequestId() -> d
    com.google.android.gms.games.Game getGame() -> e
    com.google.android.gms.games.Player getSender() -> f
    java.util.List getRecipients() -> n
    byte[] getData() -> h
    int getType() -> i
    long getCreationTimestamp() -> j
    long getExpirationTimestamp() -> k
    int getRecipientStatus(java.lang.String) -> a_
    int getStatus() -> l
com.google.android.gms.games.request.GameRequestEntity -> com.google.android.gms.games.request.GameRequestEntity:
    com.google.android.gms.games.request.GameRequestEntityCreator CREATOR -> a
    int CK -> b
    com.google.android.gms.games.GameEntity acs -> c
    com.google.android.gms.games.PlayerEntity aeU -> d
    byte[] aeA -> e
    java.lang.String Zt -> f
    java.util.ArrayList aeV -> g
    int Gt -> h
    long adS -> i
    long aeW -> j
    android.os.Bundle aeX -> k
    int FP -> l
    int getVersionCode() -> b
    java.lang.String getRequestId() -> d
    com.google.android.gms.games.Game getGame() -> e
    com.google.android.gms.games.Player getSender() -> f
    java.util.List getRecipients() -> n
    byte[] getData() -> h
    int getType() -> i
    long getCreationTimestamp() -> j
    long getExpirationTimestamp() -> k
    int getRecipientStatus(java.lang.String) -> a_
    int getStatus() -> l
    android.os.Bundle mS() -> c
    com.google.android.gms.games.request.GameRequest freeze() -> g
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.request.GameRequest) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.request.GameRequest,java.lang.Object) -> a
    int[] b(com.google.android.gms.games.request.GameRequest) -> c
    java.lang.String toString() -> toString
    java.lang.String c(com.google.android.gms.games.request.GameRequest) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.request.GameRequestEntityCreator -> com.google.android.gms.games.request.a:
    com.google.android.gms.games.request.GameRequestEntity createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.games.request.GameRequestEntity[] newArray(int) -> a
    void a(com.google.android.gms.games.request.GameRequestEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.request.GameRequestRef -> com.google.android.gms.games.request.GameRequestRef:
    int Ya -> c
    java.lang.String getRequestId() -> d
    com.google.android.gms.games.Game getGame() -> e
    com.google.android.gms.games.Player getSender() -> f
    java.util.List getRecipients() -> n
    byte[] getData() -> h
    int getType() -> i
    long getCreationTimestamp() -> j
    long getExpirationTimestamp() -> k
    int getRecipientStatus(java.lang.String) -> a_
    int getStatus() -> l
    com.google.android.gms.games.request.GameRequest freeze() -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.snapshot.Snapshot -> com.google.android.gms.games.snapshot.Snapshot:
    com.google.android.gms.games.snapshot.SnapshotMetadata getMetadata() -> b
    com.google.android.gms.games.snapshot.SnapshotContents getSnapshotContents() -> c
com.google.android.gms.games.snapshot.SnapshotContents -> com.google.android.gms.games.snapshot.SnapshotContents:
com.google.android.gms.games.snapshot.SnapshotContentsEntity -> com.google.android.gms.games.snapshot.SnapshotContentsEntity:
    java.lang.Object aeY -> b
    com.google.android.gms.games.snapshot.SnapshotContentsEntityCreator CREATOR -> a
    int CK -> c
    com.google.android.gms.drive.Contents PW -> d
    int getVersionCode() -> a
    com.google.android.gms.drive.Contents ir() -> b
    boolean isClosed() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.games.snapshot.SnapshotContentsEntityCreator -> com.google.android.gms.games.snapshot.a:
    com.google.android.gms.games.snapshot.SnapshotContentsEntity cD(android.os.Parcel) -> a
    com.google.android.gms.games.snapshot.SnapshotContentsEntity[] eq(int) -> a
    void a(com.google.android.gms.games.snapshot.SnapshotContentsEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.snapshot.SnapshotEntity -> com.google.android.gms.games.snapshot.SnapshotEntity:
    com.google.android.gms.games.snapshot.SnapshotEntityCreator CREATOR -> a
    int CK -> b
    com.google.android.gms.games.snapshot.SnapshotMetadataEntity aeZ -> c
    com.google.android.gms.games.snapshot.SnapshotContentsEntity afa -> d
    int getVersionCode() -> d
    com.google.android.gms.games.snapshot.SnapshotMetadata getMetadata() -> b
    com.google.android.gms.games.snapshot.SnapshotContents getSnapshotContents() -> c
    boolean isClosed() -> f
    com.google.android.gms.games.snapshot.Snapshot freeze() -> e
    int hashCode() -> hashCode
    int b(com.google.android.gms.games.snapshot.Snapshot) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.snapshot.Snapshot,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String c(com.google.android.gms.games.snapshot.Snapshot) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.snapshot.SnapshotEntityCreator -> com.google.android.gms.games.snapshot.b:
    com.google.android.gms.games.snapshot.SnapshotEntity createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.games.snapshot.SnapshotEntity[] newArray(int) -> a
    void a(com.google.android.gms.games.snapshot.SnapshotEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.snapshot.SnapshotMetadata -> com.google.android.gms.games.snapshot.SnapshotMetadata:
    com.google.android.gms.games.Game getGame() -> s_
    com.google.android.gms.games.Player getOwner() -> c
    java.lang.String getSnapshotId() -> d
    android.net.Uri getCoverImageUri() -> e
    java.lang.String getCoverImageUrl() -> f
    float getCoverImageAspectRatio() -> g
    java.lang.String getUniqueName() -> h
    java.lang.String getTitle() -> i
    java.lang.String getDescription() -> j
    long getLastModifiedTimestamp() -> k
    long getPlayedTime() -> l
    boolean hasChangePending() -> m
com.google.android.gms.games.snapshot.SnapshotMetadataChange -> com.google.android.gms.games.snapshot.c:
    com.google.android.gms.games.snapshot.SnapshotMetadataChange EMPTY_CHANGE -> a
com.google.android.gms.games.snapshot.SnapshotMetadataChangeCreator -> com.google.android.gms.games.snapshot.d:
    com.google.android.gms.games.snapshot.SnapshotMetadataChangeEntity cE(android.os.Parcel) -> a
    com.google.android.gms.games.snapshot.SnapshotMetadataChangeEntity[] er(int) -> a
    void a(com.google.android.gms.games.snapshot.SnapshotMetadataChangeEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.snapshot.SnapshotMetadataChangeEntity -> com.google.android.gms.games.snapshot.SnapshotMetadataChangeEntity:
    com.google.android.gms.games.snapshot.SnapshotMetadataChangeCreator CREATOR -> b
    int CK -> c
    java.lang.String UO -> d
    java.lang.Long afe -> e
    android.net.Uri afd -> f
    com.google.android.gms.common.data.a aff -> g
    int getVersionCode() -> a
    java.lang.String getDescription() -> b
    java.lang.Long getPlayedTimeMillis() -> c
    com.google.android.gms.common.data.a mT() -> d
    android.net.Uri getCoverImageUri() -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.games.snapshot.SnapshotMetadataEntity -> com.google.android.gms.games.snapshot.SnapshotMetadataEntity:
    com.google.android.gms.games.snapshot.SnapshotMetadataEntityCreator CREATOR -> a
    int CK -> b
    com.google.android.gms.games.GameEntity acs -> c
    com.google.android.gms.games.PlayerEntity afg -> d
    java.lang.String YB -> e
    android.net.Uri afd -> f
    java.lang.String afh -> g
    java.lang.String OH -> h
    java.lang.String UO -> i
    long afi -> j
    long afj -> k
    float afk -> l
    java.lang.String afl -> m
    boolean afm -> n
    int getVersionCode() -> n
    com.google.android.gms.games.Game getGame() -> s_
    com.google.android.gms.games.Player getOwner() -> c
    java.lang.String getSnapshotId() -> d
    android.net.Uri getCoverImageUri() -> e
    java.lang.String getCoverImageUrl() -> f
    float getCoverImageAspectRatio() -> g
    java.lang.String getUniqueName() -> h
    java.lang.String getTitle() -> i
    java.lang.String getDescription() -> j
    long getLastModifiedTimestamp() -> k
    long getPlayedTime() -> l
    boolean hasChangePending() -> m
    com.google.android.gms.games.snapshot.SnapshotMetadata freeze() -> o
    int hashCode() -> hashCode
    int a(com.google.android.gms.games.snapshot.SnapshotMetadata) -> a
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.android.gms.games.snapshot.SnapshotMetadata,java.lang.Object) -> a
    java.lang.String toString() -> toString
    java.lang.String b(com.google.android.gms.games.snapshot.SnapshotMetadata) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.games.snapshot.SnapshotMetadataEntityCreator -> com.google.android.gms.games.snapshot.e:
    com.google.android.gms.games.snapshot.SnapshotMetadataEntity createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.games.snapshot.SnapshotMetadataEntity[] newArray(int) -> a
    void a(com.google.android.gms.games.snapshot.SnapshotMetadataEntity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.games.snapshot.SnapshotMetadataRef -> com.google.android.gms.games.snapshot.SnapshotMetadataRef:
    com.google.android.gms.games.Game adq -> c
    com.google.android.gms.games.Player afn -> d
    com.google.android.gms.games.Game getGame() -> s_
    com.google.android.gms.games.Player getOwner() -> c
    java.lang.String getSnapshotId() -> d
    android.net.Uri getCoverImageUri() -> e
    java.lang.String getCoverImageUrl() -> f
    float getCoverImageAspectRatio() -> g
    java.lang.String getUniqueName() -> h
    java.lang.String getTitle() -> i
    java.lang.String getDescription() -> j
    long getLastModifiedTimestamp() -> k
    long getPlayedTime() -> l
    boolean hasChangePending() -> m
    com.google.android.gms.games.snapshot.SnapshotMetadata freeze() -> n
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object freeze() -> a
com.google.android.gms.identity.intents.UserAddressRequest -> com.google.android.gms.identity.intents.UserAddressRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> b
    java.util.List afH -> a
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.identity.intents.a -> com.google.android.gms.identity.intents.a:
    com.google.android.gms.identity.intents.UserAddressRequest cF(android.os.Parcel) -> a
    com.google.android.gms.identity.intents.UserAddressRequest[] es(int) -> a
    void a(com.google.android.gms.identity.intents.UserAddressRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.identity.intents.model.CountrySpecification -> com.google.android.gms.identity.intents.model.CountrySpecification:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> b
    java.lang.String vk -> a
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.identity.intents.model.UserAddress -> com.google.android.gms.identity.intents.model.UserAddress:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> p
    java.lang.String name -> a
    java.lang.String afK -> b
    java.lang.String afL -> c
    java.lang.String afM -> d
    java.lang.String afN -> e
    java.lang.String afO -> f
    java.lang.String afP -> g
    java.lang.String afQ -> h
    java.lang.String vk -> i
    java.lang.String afR -> j
    java.lang.String afS -> k
    java.lang.String afT -> l
    boolean afU -> m
    java.lang.String afV -> n
    java.lang.String afW -> o
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.identity.intents.model.a -> com.google.android.gms.identity.intents.model.a:
    com.google.android.gms.identity.intents.model.CountrySpecification cG(android.os.Parcel) -> a
    com.google.android.gms.identity.intents.model.CountrySpecification[] et(int) -> a
    void a(com.google.android.gms.identity.intents.model.CountrySpecification,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.identity.intents.model.b -> com.google.android.gms.identity.intents.model.b:
    com.google.android.gms.identity.intents.model.UserAddress cH(android.os.Parcel) -> a
    com.google.android.gms.identity.intents.model.UserAddress[] eu(int) -> a
    void a(com.google.android.gms.identity.intents.model.UserAddress,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.aa -> com.google.android.gms.internal.a:
    com.google.android.gms.internal.gu mt -> a
    void a(com.google.android.gms.internal.af,boolean) -> a
com.google.android.gms.internal.ab -> com.google.android.gms.internal.b:
    com.google.android.gms.internal.ab$a mu -> a
    java.lang.Runnable mv -> b
    com.google.android.gms.internal.av mw -> c
    boolean mx -> d
    boolean my -> e
    long mz -> f
    void cancel() -> a
    void pause() -> b
    void resume() -> c
    boolean aD() -> d
    void c(com.google.android.gms.internal.av) -> a
    void a(com.google.android.gms.internal.av,long) -> a
    boolean a(com.google.android.gms.internal.ab,boolean) -> a
    com.google.android.gms.internal.av a(com.google.android.gms.internal.ab) -> a
com.google.android.gms.internal.ab$1 -> com.google.android.gms.internal.c:
    java.lang.ref.WeakReference mA -> c
    com.google.android.gms.internal.u mB -> a
    com.google.android.gms.internal.ab mC -> b
    void run() -> run
com.google.android.gms.internal.ab$a -> com.google.android.gms.internal.d:
    android.os.Handler mHandler -> a
    void removeCallbacks(java.lang.Runnable) -> a
    boolean postDelayed(java.lang.Runnable,long) -> a
com.google.android.gms.internal.ac -> com.google.android.gms.internal.e:
    void a(com.google.android.gms.internal.af,boolean) -> a
com.google.android.gms.internal.ad -> com.google.android.gms.internal.f:
    java.lang.String mD -> a
    org.json.JSONObject mE -> b
    java.lang.String mF -> c
    java.lang.String mG -> d
    java.lang.String aE() -> a
    java.lang.String aF() -> b
    org.json.JSONObject aG() -> c
    java.lang.String aH() -> d
com.google.android.gms.internal.ae -> com.google.android.gms.internal.g:
    java.lang.Object mH -> a
    java.util.WeakHashMap mI -> b
    java.util.ArrayList mJ -> c
    com.google.android.gms.internal.af a(com.google.android.gms.internal.ay,com.google.android.gms.internal.fy) -> a
    com.google.android.gms.internal.af a(android.content.Context,com.google.android.gms.internal.ay,com.google.android.gms.internal.fy,android.view.View,com.google.android.gms.internal.gs) -> a
    boolean c(com.google.android.gms.internal.fy) -> a
    void d(com.google.android.gms.internal.fy) -> b
    void a(com.google.android.gms.internal.af) -> a
    void stop() -> a
    void pause() -> b
    void resume() -> c
com.google.android.gms.internal.af -> com.google.android.gms.internal.h:
    java.lang.Object mH -> a
    java.lang.ref.WeakReference mK -> b
    java.lang.ref.WeakReference mL -> c
    java.lang.ref.WeakReference mM -> d
    com.google.android.gms.internal.ad mN -> e
    android.content.Context mO -> f
    com.google.android.gms.internal.ah mP -> g
    boolean mQ -> h
    android.view.WindowManager mR -> i
    android.os.PowerManager mS -> j
    android.app.KeyguardManager mT -> k
    com.google.android.gms.internal.ag mU -> l
    boolean my -> m
    boolean mV -> n
    java.util.concurrent.BlockingQueue mW -> o
    long mX -> p
    boolean mY -> q
    boolean mZ -> r
    android.content.BroadcastReceiver na -> s
    java.util.HashSet nb -> t
    void a(com.google.android.gms.internal.ac) -> a
    void d(android.view.View) -> a
    void f(boolean) -> a
    void aI() -> a
    void aJ() -> b
    void a(com.google.android.gms.internal.ah) -> a
    void destroy() -> c
    void aK() -> d
    void a(android.view.View,java.util.Map) -> a
    void g(boolean) -> b
    void aL() -> e
    boolean aM() -> f
    int a(int,android.util.DisplayMetrics) -> a
    void aN() -> g
    boolean a(java.util.Map) -> a
    void b(com.google.android.gms.internal.ah) -> b
    void aO() -> h
    org.json.JSONObject aP() -> i
    void a(org.json.JSONObject) -> a
    org.json.JSONObject e(android.view.View) -> b
    boolean f(android.view.View) -> c
    org.json.JSONObject aQ() -> j
    void onScrollChanged() -> onScrollChanged
    void onGlobalLayout() -> onGlobalLayout
    void a(com.google.android.gms.internal.ag) -> a
    void stop() -> k
    void pause() -> l
    void resume() -> m
    boolean b(com.google.android.gms.internal.af,boolean) -> a
    com.google.android.gms.internal.ad b(com.google.android.gms.internal.af) -> a
com.google.android.gms.internal.af$1 -> com.google.android.gms.internal.i:
    android.view.View nc -> a
    com.google.android.gms.internal.af nd -> b
    void aR() -> a
com.google.android.gms.internal.af$2 -> com.google.android.gms.internal.j:
    org.json.JSONObject ne -> a
    com.google.android.gms.internal.af nd -> b
    void run() -> run
com.google.android.gms.internal.af$3 -> com.google.android.gms.internal.k:
    com.google.android.gms.internal.af nd -> a
    void run() -> run
com.google.android.gms.internal.af$4 -> com.google.android.gms.internal.l:
    com.google.android.gms.internal.af nd -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.android.gms.internal.af$5 -> com.google.android.gms.internal.m:
    com.google.android.gms.internal.af nd -> a
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.af$6 -> com.google.android.gms.internal.n:
    com.google.android.gms.internal.af nd -> a
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.af$7 -> com.google.android.gms.internal.o:
    com.google.android.gms.internal.af nd -> a
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.ag -> com.google.android.gms.internal.p:
    void a(com.google.android.gms.internal.af) -> a
com.google.android.gms.internal.ah -> com.google.android.gms.internal.q:
    void a(java.lang.String,org.json.JSONObject) -> a
    void f(java.lang.String) -> a
    void a(java.lang.String,com.google.android.gms.internal.cd) -> a
    void g(java.lang.String) -> b
    void a(com.google.android.gms.internal.ah$a) -> a
    void pause() -> a
    void resume() -> b
    void destroy() -> c
    void a(com.google.android.gms.internal.t,com.google.android.gms.internal.ds,com.google.android.gms.internal.cb,com.google.android.gms.internal.dv,boolean,com.google.android.gms.internal.ce) -> a
com.google.android.gms.internal.ah$a -> com.google.android.gms.internal.r:
    void aR() -> a
com.google.android.gms.internal.ai -> com.google.android.gms.internal.s:
    java.util.concurrent.Future a(android.content.Context,com.google.android.gms.internal.gs,java.lang.String) -> a
    com.google.android.gms.internal.ah a(android.content.Context,com.google.android.gms.internal.gs,com.google.android.gms.internal.gj) -> a
com.google.android.gms.internal.ai$1 -> com.google.android.gms.internal.t:
    android.content.Context nf -> a
    com.google.android.gms.internal.gs ng -> b
    com.google.android.gms.internal.gj nh -> c
    java.lang.String ni -> d
    com.google.android.gms.internal.ai nj -> e
    void run() -> run
com.google.android.gms.internal.ai$2 -> com.google.android.gms.internal.u:
    com.google.android.gms.internal.gj nh -> a
    com.google.android.gms.internal.ah nk -> b
    com.google.android.gms.internal.ai nj -> c
    void aR() -> a
com.google.android.gms.internal.aj -> com.google.android.gms.internal.v:
    com.google.android.gms.internal.gu mo -> a
    void runOnUiThread(java.lang.Runnable) -> a
    void a(java.lang.String,org.json.JSONObject) -> a
    void f(java.lang.String) -> a
    void a(java.lang.String,com.google.android.gms.internal.cd) -> a
    void g(java.lang.String) -> b
    void a(com.google.android.gms.internal.ah$a) -> a
    void pause() -> a
    void resume() -> b
    void a(com.google.android.gms.internal.t,com.google.android.gms.internal.ds,com.google.android.gms.internal.cb,com.google.android.gms.internal.dv,boolean,com.google.android.gms.internal.ce) -> a
    void destroy() -> c
    com.google.android.gms.internal.gu a(com.google.android.gms.internal.aj) -> a
com.google.android.gms.internal.aj$1 -> com.google.android.gms.internal.w:
    java.lang.String nl -> a
    org.json.JSONObject nm -> b
    com.google.android.gms.internal.aj nn -> c
    void run() -> run
com.google.android.gms.internal.aj$2 -> com.google.android.gms.internal.x:
    java.lang.String ni -> a
    com.google.android.gms.internal.aj nn -> b
    void run() -> run
com.google.android.gms.internal.aj$3 -> com.google.android.gms.internal.z:
    com.google.android.gms.internal.ah$a no -> a
    com.google.android.gms.internal.aj nn -> b
    void a(com.google.android.gms.internal.gu) -> a
com.google.android.gms.internal.ak -> com.google.android.gms.internal.aa:
    int np -> a
    int nq -> b
    int nr -> c
    com.google.android.gms.internal.ap ns -> d
    java.lang.Object mH -> e
    java.util.ArrayList nt -> f
    int nu -> g
    int nv -> h
    int nw -> i
    int nx -> j
    java.lang.String ny -> k
    boolean aS() -> a
    java.lang.String aT() -> b
    void aU() -> c
    void aV() -> d
    void aW() -> e
    void h(java.lang.String) -> a
    void i(java.lang.String) -> b
    void j(java.lang.String) -> c
    void aX() -> f
    int a(int,int) -> a
    int getScore() -> g
    void c(int) -> a
    java.lang.String a(java.util.ArrayList,int) -> a
    java.lang.String toString() -> toString
    int aY() -> h
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.internal.al -> com.google.android.gms.internal.ab:
    java.lang.Object mH -> a
    int nz -> b
    java.util.List nA -> c
    com.google.android.gms.internal.ak aZ() -> a
    boolean a(com.google.android.gms.internal.ak) -> a
    boolean b(com.google.android.gms.internal.ak) -> b
    void c(com.google.android.gms.internal.ak) -> c
com.google.android.gms.internal.am -> com.google.android.gms.internal.ac:
    android.app.Activity nB -> a
    android.content.Context mContext -> b
    java.lang.Object mH -> c
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    android.app.Activity getActivity() -> a
    android.content.Context getContext() -> b
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    void setActivity(android.app.Activity) -> a
com.google.android.gms.internal.an -> com.google.android.gms.internal.ad:
    boolean mStarted -> a
    boolean nC -> b
    boolean nD -> c
    java.lang.Object mH -> d
    com.google.android.gms.internal.am nE -> e
    com.google.android.gms.internal.al nF -> f
    com.google.android.gms.internal.ex nG -> g
    int nH -> h
    int np -> i
    int nI -> j
    int nr -> k
    int nJ -> l
    void ba() -> a
    void run() -> run
    boolean g(android.view.View) -> a
    void h(android.view.View) -> b
    boolean bb() -> f
    void a(android.app.Activity) -> a
    com.google.android.gms.internal.an$a a(android.view.View,com.google.android.gms.internal.ak) -> a
    boolean a(android.webkit.WebView,com.google.android.gms.internal.ak) -> a
    void a(com.google.android.gms.internal.ak,android.webkit.WebView,java.lang.String) -> a
    com.google.android.gms.internal.ak bc() -> b
    void wakeup() -> c
    void bd() -> d
    boolean be() -> e
com.google.android.gms.internal.an$1 -> com.google.android.gms.internal.ae:
    android.view.View nK -> a
    com.google.android.gms.internal.an nL -> b
    void run() -> run
com.google.android.gms.internal.an$2 -> com.google.android.gms.internal.af:
    android.webkit.ValueCallback nM -> a
    com.google.android.gms.internal.ak nN -> b
    android.webkit.WebView nO -> c
    com.google.android.gms.internal.an nL -> d
    void run() -> run
com.google.android.gms.internal.an$2$1 -> com.google.android.gms.internal.ag:
    com.google.android.gms.internal.an$2 nP -> a
    void k(java.lang.String) -> a
    void onReceiveValue(java.lang.Object) -> onReceiveValue
com.google.android.gms.internal.an$a -> com.google.android.gms.internal.ah:
    int nQ -> a
    int nR -> b
    com.google.android.gms.internal.an nL -> c
com.google.android.gms.internal.ao -> com.google.android.gms.internal.ai:
    java.security.MessageDigest nS -> b
    java.lang.Object mH -> a
    byte[] l(java.lang.String) -> a
    java.security.MessageDigest bf() -> a
com.google.android.gms.internal.ap -> com.google.android.gms.internal.aj:
    int nT -> a
    int nU -> b
    com.google.android.gms.internal.ao nV -> c
    android.util.Base64OutputStream nW -> d
    java.io.ByteArrayOutputStream nX -> e
    java.lang.String a(java.util.ArrayList) -> a
    java.lang.String m(java.lang.String) -> b
    java.lang.String n(java.lang.String) -> a
com.google.android.gms.internal.ap$1 -> com.google.android.gms.internal.ak:
    com.google.android.gms.internal.ap nY -> a
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.android.gms.internal.ap$2 -> com.google.android.gms.internal.al:
    com.google.android.gms.internal.ap nY -> a
    int a(com.google.android.gms.internal.as$a,com.google.android.gms.internal.as$a) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.android.gms.internal.aq -> com.google.android.gms.internal.am:
    int o(java.lang.String) -> a
    boolean d(int) -> a
    java.lang.String[] p(java.lang.String) -> b
    boolean a(java.lang.Character$UnicodeBlock) -> a
com.google.android.gms.internal.ar -> com.google.android.gms.internal.an:
    java.security.MessageDigest nZ -> b
    byte[] l(java.lang.String) -> a
    byte[] a(java.lang.String[]) -> a
    byte e(int) -> a
com.google.android.gms.internal.as -> com.google.android.gms.internal.ao:
    void a(java.lang.String[],int,int,java.util.PriorityQueue) -> a
    void a(int,long,java.lang.String,java.util.PriorityQueue) -> a
    long a(int,int,long,long,long) -> a
    java.lang.String a(java.lang.String[],int,int) -> a
    long b(java.lang.String[],int,int) -> b
    long a(long,int) -> a
com.google.android.gms.internal.as$a -> com.google.android.gms.internal.ap:
    long value -> a
    java.lang.String oa -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.internal.at -> com.google.android.gms.internal.aq:
    com.google.android.gms.ads.AdListener ob -> a
    void onAdClosed() -> a
    void onAdFailedToLoad(int) -> a
    void onAdLeftApplication() -> b
    void onAdLoaded() -> c
    void onAdOpened() -> d
com.google.android.gms.internal.au -> com.google.android.gms.internal.ar:
    com.google.android.gms.internal.au oc -> a
    com.google.android.gms.internal.bd a(android.content.Context,com.google.android.gms.internal.ay,java.lang.String,com.google.android.gms.internal.cx) -> a
    com.google.android.gms.internal.bd b(android.content.Context,com.google.android.gms.internal.ay,java.lang.String,com.google.android.gms.internal.cx) -> b
    com.google.android.gms.internal.be c(android.os.IBinder) -> b
    java.lang.Object d(android.os.IBinder) -> a
com.google.android.gms.internal.av -> com.google.android.gms.internal.av:
    com.google.android.gms.internal.aw CREATOR -> a
    int versionCode -> b
    long od -> c
    android.os.Bundle extras -> d
    int oe -> e
    java.util.List of -> f
    boolean og -> g
    int oh -> h
    boolean oi -> i
    java.lang.String oj -> j
    com.google.android.gms.internal.bj ok -> k
    android.location.Location ol -> l
    java.lang.String om -> m
    android.os.Bundle on -> n
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.aw -> com.google.android.gms.internal.as:
    com.google.android.gms.internal.av b(android.os.Parcel) -> a
    com.google.android.gms.internal.av[] f(int) -> a
    void a(com.google.android.gms.internal.av,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ax -> com.google.android.gms.internal.at:
    com.google.android.gms.internal.ax oo -> a
    com.google.android.gms.internal.ax bg() -> a
    com.google.android.gms.internal.av a(android.content.Context,com.google.android.gms.internal.bg) -> a
com.google.android.gms.internal.ay -> com.google.android.gms.internal.ay:
    com.google.android.gms.internal.az CREATOR -> a
    int versionCode -> b
    java.lang.String op -> c
    int height -> d
    int heightPixels -> e
    boolean oq -> f
    int width -> g
    int widthPixels -> h
    com.google.android.gms.internal.ay[] or -> i
    int a(android.util.DisplayMetrics) -> a
    int b(android.util.DisplayMetrics) -> b
    int c(android.util.DisplayMetrics) -> c
    int describeContents() -> describeContents
    com.google.android.gms.ads.AdSize bh() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.az -> com.google.android.gms.internal.au:
    com.google.android.gms.internal.ay c(android.os.Parcel) -> a
    com.google.android.gms.internal.ay[] g(int) -> a
    void a(com.google.android.gms.internal.ay,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ba -> com.google.android.gms.internal.aw:
    com.google.android.gms.ads.doubleclick.AppEventListener os -> a
    void onAppEvent(java.lang.String,java.lang.String) -> a
com.google.android.gms.internal.bb -> com.google.android.gms.internal.ax:
    com.google.android.gms.ads.AdSize[] ot -> a
    java.lang.String ou -> b
    com.google.android.gms.ads.AdSize[] q(java.lang.String) -> a
    com.google.android.gms.ads.AdSize[] h(boolean) -> a
    java.lang.String getAdUnitId() -> a
com.google.android.gms.internal.bc -> com.google.android.gms.internal.az:
    void onAdClosed() -> a
    void onAdFailedToLoad(int) -> a
    void onAdLeftApplication() -> b
    void onAdLoaded() -> c
    void onAdOpened() -> d
com.google.android.gms.internal.bc$a -> com.google.android.gms.internal.ba:
    com.google.android.gms.internal.bc e(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.bc$a$a -> com.google.android.gms.internal.bb:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    void onAdClosed() -> a
    void onAdFailedToLoad(int) -> a
    void onAdLeftApplication() -> b
    void onAdLoaded() -> c
    void onAdOpened() -> d
com.google.android.gms.internal.bd -> com.google.android.gms.internal.bc:
    com.google.android.gms.dynamic.d ab() -> a
    void destroy() -> b
    boolean isReady() -> c
    boolean a(com.google.android.gms.internal.av) -> a
    void pause() -> d
    void resume() -> e
    void a(com.google.android.gms.internal.bc) -> a
    void a(com.google.android.gms.internal.bf) -> a
    void showInterstitial() -> f
    void stopLoading() -> g
    void an() -> h
    com.google.android.gms.internal.ay ac() -> i
    void a(com.google.android.gms.internal.ay) -> a
    void a(com.google.android.gms.internal.en) -> a
    void a(com.google.android.gms.internal.er,java.lang.String) -> a
    java.lang.String getMediationAdapterClassName() -> j
    void a(com.google.android.gms.internal.br) -> a
com.google.android.gms.internal.bd$a -> com.google.android.gms.internal.bd:
    com.google.android.gms.internal.bd f(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.bd$a$a -> com.google.android.gms.internal.be:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.dynamic.d ab() -> a
    void destroy() -> b
    boolean isReady() -> c
    boolean a(com.google.android.gms.internal.av) -> a
    void pause() -> d
    void resume() -> e
    void a(com.google.android.gms.internal.bc) -> a
    void a(com.google.android.gms.internal.bf) -> a
    void showInterstitial() -> f
    void stopLoading() -> g
    void an() -> h
    com.google.android.gms.internal.ay ac() -> i
    void a(com.google.android.gms.internal.ay) -> a
    void a(com.google.android.gms.internal.en) -> a
    void a(com.google.android.gms.internal.er,java.lang.String) -> a
    java.lang.String getMediationAdapterClassName() -> j
    void a(com.google.android.gms.internal.br) -> a
com.google.android.gms.internal.be -> com.google.android.gms.internal.bf:
    android.os.IBinder a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.ay,java.lang.String,com.google.android.gms.internal.cy,int) -> a
com.google.android.gms.internal.be$a -> com.google.android.gms.internal.bg:
    com.google.android.gms.internal.be g(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.be$a$a -> com.google.android.gms.internal.bh:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    android.os.IBinder a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.ay,java.lang.String,com.google.android.gms.internal.cy,int) -> a
com.google.android.gms.internal.bf -> com.google.android.gms.internal.bi:
    void onAppEvent(java.lang.String,java.lang.String) -> a
com.google.android.gms.internal.bf$a -> com.google.android.gms.internal.bk:
    com.google.android.gms.internal.bf h(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.bf$a$a -> com.google.android.gms.internal.bl:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    void onAppEvent(java.lang.String,java.lang.String) -> a
com.google.android.gms.internal.bg -> com.google.android.gms.internal.bm:
    java.lang.String DEVICE_ID_EMULATOR -> a
    java.util.Date d -> b
    java.lang.String ov -> c
    int ow -> d
    java.util.Set f -> e
    android.location.Location h -> f
    boolean ox -> g
    android.os.Bundle oy -> h
    java.util.Map oz -> i
    java.lang.String oA -> j
    com.google.android.gms.ads.search.SearchAdRequest oB -> k
    int oC -> l
    java.util.Set oD -> m
    java.util.Date getBirthday() -> a
    java.lang.String getContentUrl() -> b
    int getGender() -> c
    java.util.Set getKeywords() -> d
    android.location.Location getLocation() -> e
    boolean getManualImpressionsEnabled() -> f
    android.os.Bundle getNetworkExtrasBundle(java.lang.Class) -> a
    java.lang.String getPublisherProvidedId() -> g
    com.google.android.gms.ads.search.SearchAdRequest bi() -> h
    boolean isTestDevice(android.content.Context) -> a
    java.util.Map bj() -> i
    android.os.Bundle bk() -> j
    int bl() -> k
com.google.android.gms.internal.bg$a -> com.google.android.gms.internal.bn:
    java.util.HashSet oE -> a
    android.os.Bundle oy -> b
    java.util.HashMap oF -> c
    java.util.HashSet oG -> d
    java.util.Date d -> e
    java.lang.String ov -> f
    int ow -> g
    android.location.Location h -> h
    boolean ox -> i
    java.lang.String oA -> j
    int oC -> k
    void r(java.lang.String) -> a
    void a(java.lang.Class,android.os.Bundle) -> a
    void s(java.lang.String) -> b
    void a(java.util.Date) -> a
    void h(int) -> a
    void a(android.location.Location) -> a
    void j(boolean) -> a
    java.util.Date a(com.google.android.gms.internal.bg$a) -> a
    java.lang.String b(com.google.android.gms.internal.bg$a) -> b
    int c(com.google.android.gms.internal.bg$a) -> c
    java.util.HashSet d(com.google.android.gms.internal.bg$a) -> d
    android.location.Location e(com.google.android.gms.internal.bg$a) -> e
    boolean f(com.google.android.gms.internal.bg$a) -> f
    android.os.Bundle g(com.google.android.gms.internal.bg$a) -> g
    java.util.HashMap h(com.google.android.gms.internal.bg$a) -> h
    java.lang.String i(com.google.android.gms.internal.bg$a) -> i
    int j(com.google.android.gms.internal.bg$a) -> j
    java.util.HashSet k(com.google.android.gms.internal.bg$a) -> k
com.google.android.gms.internal.bh -> com.google.android.gms.internal.bo:
    com.google.android.gms.internal.cx oH -> a
    com.google.android.gms.internal.ax oI -> b
    com.google.android.gms.ads.AdListener ob -> c
    com.google.android.gms.internal.bd oJ -> d
    com.google.android.gms.ads.AdSize[] ot -> e
    java.lang.String ou -> f
    java.lang.String oK -> g
    android.view.ViewGroup oL -> h
    com.google.android.gms.ads.doubleclick.AppEventListener os -> i
    com.google.android.gms.ads.purchase.InAppPurchaseListener oM -> j
    com.google.android.gms.ads.purchase.PlayStorePurchaseListener oN -> k
    com.google.android.gms.ads.doubleclick.b oO -> l
    void destroy() -> a
    com.google.android.gms.ads.AdListener getAdListener() -> b
    com.google.android.gms.ads.AdSize getAdSize() -> c
    java.lang.String getAdUnitId() -> d
    com.google.android.gms.ads.purchase.InAppPurchaseListener getInAppPurchaseListener() -> e
    void a(com.google.android.gms.internal.bg) -> a
    void pause() -> f
    void resume() -> g
    void setAdListener(com.google.android.gms.ads.AdListener) -> a
    void setAdSizes(com.google.android.gms.ads.AdSize[]) -> a
    void a(com.google.android.gms.ads.AdSize[]) -> b
    void setAdUnitId(java.lang.String) -> a
    void setInAppPurchaseListener(com.google.android.gms.ads.purchase.InAppPurchaseListener) -> a
    java.lang.String getMediationAdapterClassName() -> h
    void bm() -> i
    void bn() -> j
com.google.android.gms.internal.bi -> com.google.android.gms.internal.bp:
    com.google.android.gms.internal.cx oH -> a
    android.content.Context mContext -> b
    com.google.android.gms.internal.ax oI -> c
    com.google.android.gms.ads.AdListener ob -> d
    com.google.android.gms.internal.bd oJ -> e
    java.lang.String ou -> f
    java.lang.String oK -> g
    com.google.android.gms.ads.doubleclick.AppEventListener os -> h
    com.google.android.gms.ads.purchase.PlayStorePurchaseListener oN -> i
    com.google.android.gms.ads.purchase.InAppPurchaseListener oM -> j
    com.google.android.gms.ads.doubleclick.PublisherInterstitialAd oP -> k
    com.google.android.gms.ads.doubleclick.b oO -> l
    void a(com.google.android.gms.internal.bg) -> a
    void setAdListener(com.google.android.gms.ads.AdListener) -> a
    void setAdUnitId(java.lang.String) -> a
    void show() -> a
    void v(java.lang.String) -> b
    void w(java.lang.String) -> c
com.google.android.gms.internal.bj -> com.google.android.gms.internal.bj:
    com.google.android.gms.internal.bk CREATOR -> a
    int versionCode -> b
    int oQ -> c
    int backgroundColor -> d
    int oR -> e
    int oS -> f
    int oT -> g
    int oU -> h
    int oV -> i
    int oW -> j
    java.lang.String oX -> k
    int oY -> l
    java.lang.String oZ -> m
    int pa -> n
    int pb -> o
    java.lang.String pc -> p
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.bk -> com.google.android.gms.internal.bq:
    com.google.android.gms.internal.bj d(android.os.Parcel) -> a
    com.google.android.gms.internal.bj[] i(int) -> a
    void a(com.google.android.gms.internal.bj,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.bl -> com.google.android.gms.internal.br:
    android.content.Context mContext -> a
    boolean bo() -> a
    boolean bp() -> b
    boolean bq() -> c
    boolean br() -> d
    boolean bs() -> e
    boolean bt() -> f
    boolean a(android.content.Intent) -> a
com.google.android.gms.internal.bm -> com.google.android.gms.internal.bs:
    java.lang.String pd -> a
    java.lang.String pe -> b
    java.lang.String pf -> c
    java.lang.String pg -> d
    java.lang.String bu() -> a
    java.lang.String bv() -> b
    java.lang.String bw() -> c
    java.lang.String bx() -> d
com.google.android.gms.internal.bn -> com.google.android.gms.internal.bt:
    com.google.android.gms.internal.iy ph -> a
    com.google.android.gms.internal.iy pi -> b
    com.google.android.gms.internal.iy pj -> c
    com.google.android.gms.internal.iy pk -> d
    com.google.android.gms.internal.iy pl -> e
    com.google.android.gms.internal.iy pm -> f
    com.google.android.gms.internal.iy pn -> g
    com.google.android.gms.internal.iy po -> h
    com.google.android.gms.internal.iy pp -> i
    com.google.android.gms.internal.iy pq -> j
    com.google.android.gms.internal.iy pr -> k
    com.google.android.gms.internal.iy ps -> l
    com.google.android.gms.internal.iy pt -> m
    com.google.android.gms.internal.iy pu -> n
    android.os.Bundle pv -> o
    boolean pw -> p
    android.os.Bundle by() -> a
    com.google.android.gms.internal.iy a(java.lang.String,java.lang.String) -> a
    com.google.android.gms.internal.iy c(java.lang.String,boolean) -> a
    com.google.android.gms.internal.iy a(java.lang.String,int) -> a
com.google.android.gms.internal.bo -> com.google.android.gms.internal.bu:
    com.google.android.gms.internal.w px -> a
    java.lang.String py -> b
    java.lang.String pz -> c
    java.lang.String bz() -> a
    java.lang.String bA() -> b
    void a(com.google.android.gms.dynamic.d) -> a
    void av() -> c
    void aw() -> d
com.google.android.gms.internal.bp -> com.google.android.gms.internal.bv:
    com.google.android.gms.internal.bq pA -> a
com.google.android.gms.internal.bq -> com.google.android.gms.internal.bw:
    java.lang.String bz() -> a
    java.lang.String bA() -> b
    void a(com.google.android.gms.dynamic.d) -> a
    void av() -> c
    void aw() -> d
com.google.android.gms.internal.bq$a -> com.google.android.gms.internal.bx:
    com.google.android.gms.internal.bq i(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.bq$a$a -> com.google.android.gms.internal.by:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String bz() -> a
    java.lang.String bA() -> b
    void a(com.google.android.gms.dynamic.d) -> a
    void av() -> c
    void aw() -> d
com.google.android.gms.internal.br -> com.google.android.gms.internal.bz:
    void a(com.google.android.gms.internal.bq) -> a
com.google.android.gms.internal.br$a -> com.google.android.gms.internal.ca:
    com.google.android.gms.internal.br j(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.br$a$a -> com.google.android.gms.internal.cb:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    void a(com.google.android.gms.internal.bq) -> a
com.google.android.gms.internal.bs -> com.google.android.gms.internal.cc:
    com.google.android.gms.ads.doubleclick.b oO -> a
    void a(com.google.android.gms.internal.bq) -> a
com.google.android.gms.internal.bt -> com.google.android.gms.internal.cd:
    java.lang.String pB -> a
    android.graphics.drawable.Drawable pC -> b
    java.lang.String pD -> c
    android.graphics.drawable.Drawable pE -> d
    java.lang.String pF -> e
    double pG -> f
    java.lang.String pH -> g
    java.lang.String pI -> h
    java.lang.Object mH -> i
    com.google.android.gms.internal.bv pJ -> j
    java.lang.String bB() -> a
    com.google.android.gms.dynamic.d bC() -> b
    java.lang.String getBody() -> c
    com.google.android.gms.dynamic.d bD() -> d
    java.lang.String bE() -> e
    double bF() -> f
    java.lang.String bG() -> g
    java.lang.String bH() -> h
    void j(int) -> a
    void aw() -> i
    void a(com.google.android.gms.internal.bv) -> a
com.google.android.gms.internal.bu -> com.google.android.gms.internal.ce:
    java.lang.String pB -> a
    android.graphics.drawable.Drawable pC -> b
    java.lang.String pD -> c
    android.graphics.drawable.Drawable pK -> d
    java.lang.String pF -> e
    java.lang.String pL -> f
    java.lang.Object mH -> g
    com.google.android.gms.internal.bv pJ -> h
    java.lang.String bB() -> a
    com.google.android.gms.dynamic.d bC() -> b
    java.lang.String getBody() -> c
    com.google.android.gms.dynamic.d bI() -> d
    java.lang.String bE() -> e
    java.lang.String bJ() -> f
    void j(int) -> a
    void aw() -> g
    void a(com.google.android.gms.internal.bv) -> a
com.google.android.gms.internal.bv -> com.google.android.gms.internal.cf:
    com.google.android.gms.internal.u pM -> a
    com.google.android.gms.internal.ah pN -> b
    org.json.JSONObject pO -> c
    void b(java.lang.String,int) -> a
    void aw() -> a
com.google.android.gms.internal.bv$a -> com.google.android.gms.internal.cg:
    void a(com.google.android.gms.internal.bv) -> a
com.google.android.gms.internal.bw -> com.google.android.gms.internal.ch:
    void j(int) -> a
    void aw() -> i
    java.lang.String bB() -> a
    com.google.android.gms.dynamic.d bC() -> b
    java.lang.String getBody() -> c
    com.google.android.gms.dynamic.d bD() -> d
    java.lang.String bE() -> e
    double bF() -> f
    java.lang.String bG() -> g
    java.lang.String bH() -> h
com.google.android.gms.internal.bw$a -> com.google.android.gms.internal.ci:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.bx -> com.google.android.gms.internal.cj:
    void j(int) -> a
    void aw() -> g
    java.lang.String bB() -> a
    com.google.android.gms.dynamic.d bC() -> b
    java.lang.String getBody() -> c
    com.google.android.gms.dynamic.d bI() -> d
    java.lang.String bE() -> e
    java.lang.String bJ() -> f
com.google.android.gms.internal.bx$a -> com.google.android.gms.internal.ck:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.by -> com.google.android.gms.internal.cl:
    void a(com.google.android.gms.internal.bw) -> a
com.google.android.gms.internal.bz -> com.google.android.gms.internal.cm:
    void a(com.google.android.gms.internal.bx) -> a
com.google.android.gms.internal.ca -> com.google.android.gms.internal.cn:
    com.google.android.gms.internal.cb pP -> a
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.cb -> com.google.android.gms.internal.co:
    void onAppEvent(java.lang.String,java.lang.String) -> a
com.google.android.gms.internal.cc -> com.google.android.gms.internal.cp:
    com.google.android.gms.internal.cd pQ -> a
    com.google.android.gms.internal.cd pR -> b
    com.google.android.gms.internal.cd pS -> c
    com.google.android.gms.internal.cd pT -> d
    com.google.android.gms.internal.cd pU -> e
    com.google.android.gms.internal.cd pV -> f
    com.google.android.gms.internal.cd pW -> g
    com.google.android.gms.internal.cd pX -> h
    com.google.android.gms.internal.cd pY -> i
    com.google.android.gms.internal.cd pZ -> j
com.google.android.gms.internal.cc$1 -> com.google.android.gms.internal.cq:
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.cc$2 -> com.google.android.gms.internal.cr:
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.cc$3 -> com.google.android.gms.internal.cs:
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.cc$4 -> com.google.android.gms.internal.ct:
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.cc$5 -> com.google.android.gms.internal.cu:
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.cc$6 -> com.google.android.gms.internal.cv:
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.cc$7 -> com.google.android.gms.internal.cw:
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.cc$8 -> com.google.android.gms.internal.cx:
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.cc$9 -> com.google.android.gms.internal.cy:
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.cd -> com.google.android.gms.internal.cz:
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.ce -> com.google.android.gms.internal.da:
    void a(java.lang.String,java.util.ArrayList) -> a
com.google.android.gms.internal.cf -> com.google.android.gms.internal.db:
    com.google.android.gms.internal.cg qa -> a
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.cg -> com.google.android.gms.internal.dc:
    void d(boolean) -> a
com.google.android.gms.internal.ch -> com.google.android.gms.internal.dd:
    java.util.Map qb -> a
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.ci -> com.google.android.gms.internal.de:
    com.google.android.gms.internal.ce qc -> a
    com.google.android.gms.internal.v qd -> b
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
    boolean b(java.util.Map) -> a
    int c(java.util.Map) -> b
com.google.android.gms.internal.cj -> com.google.android.gms.internal.df:
    int a(android.util.DisplayMetrics,java.util.Map,java.lang.String,int) -> a
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.ck -> com.google.android.gms.internal.dg:
    void a(android.content.Context,com.google.android.gms.internal.ck$b) -> a
com.google.android.gms.internal.ck$a -> com.google.android.gms.internal.dh:
    com.google.android.gms.internal.ck$b qe -> a
    com.google.android.gms.internal.cl qf -> b
    java.lang.Object mH -> c
    void onConnectionFailed(com.google.android.gms.common.ConnectionResult) -> a
    void onConnected(android.os.Bundle) -> a
    void onConnectionSuspended(int) -> a
com.google.android.gms.internal.ck$b -> com.google.android.gms.internal.di:
    void a(android.os.Bundle) -> a
com.google.android.gms.internal.cl -> com.google.android.gms.internal.dj:
    int qg -> a
    java.lang.String bK() -> a
    java.lang.String bL() -> b
    com.google.android.gms.internal.cm k(android.os.IBinder) -> a
    void a(com.google.android.gms.internal.jt,com.google.android.gms.internal.jl$e) -> a
    com.google.android.gms.internal.cm bM() -> c
    android.os.IInterface l(android.os.IBinder) -> b
com.google.android.gms.internal.cm -> com.google.android.gms.internal.dk:
    android.os.Bundle bN() -> a
com.google.android.gms.internal.cm$a -> com.google.android.gms.internal.dl:
    com.google.android.gms.internal.cm m(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cm$a$a -> com.google.android.gms.internal.dm:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    android.os.Bundle bN() -> a
com.google.android.gms.internal.cn -> com.google.android.gms.internal.dn:
    void init() -> a
    android.location.Location a(long) -> a
com.google.android.gms.internal.co -> com.google.android.gms.internal.dp:
    void init() -> a
    android.location.Location a(long) -> a
com.google.android.gms.internal.cp -> com.google.android.gms.internal.dq:
    com.google.android.gms.internal.fh qh -> a
    com.google.android.gms.internal.cy lA -> b
    android.content.Context mContext -> c
    java.lang.Object mH -> d
    com.google.android.gms.internal.cr qi -> e
    boolean qj -> f
    com.google.android.gms.internal.cu qk -> g
    void cancel() -> a
    com.google.android.gms.internal.cv a(long,long) -> a
com.google.android.gms.internal.cp$1 -> com.google.android.gms.internal.ds:
    com.google.android.gms.internal.cv ql -> a
    com.google.android.gms.internal.cp qm -> b
    void run() -> run
com.google.android.gms.internal.cq -> com.google.android.gms.internal.dt:
    java.lang.String qn -> a
    java.lang.String qo -> b
    java.util.List qp -> c
    java.lang.String qq -> d
    java.lang.String qr -> e
    java.util.List qs -> f
    java.lang.String qt -> g
com.google.android.gms.internal.cr -> com.google.android.gms.internal.du:
    java.util.List qu -> a
    long qv -> b
    java.util.List qw -> c
    java.util.List qx -> d
    java.util.List qy -> e
    java.lang.String qz -> f
    long qA -> g
    int qB -> h
    int qC -> i
    boolean a(com.google.android.gms.internal.cq) -> a
com.google.android.gms.internal.cs -> com.google.android.gms.internal.dv:
    void ai() -> k
    void aj() -> l
    void ak() -> m
    void al() -> n
    void am() -> o
com.google.android.gms.internal.ct -> com.google.android.gms.internal.dw:
    java.lang.Object mH -> a
    com.google.android.gms.internal.cv$a qD -> b
    com.google.android.gms.internal.cs qE -> c
    void a(com.google.android.gms.internal.cv$a) -> a
    void onAdClicked() -> a
    void onAdClosed() -> b
    void onAdFailedToLoad(int) -> a
    void onAdLeftApplication() -> c
    void onAdOpened() -> d
    void onAdLoaded() -> e
    void a(com.google.android.gms.internal.cs) -> a
com.google.android.gms.internal.cu -> com.google.android.gms.internal.dx:
    java.lang.String qF -> a
    com.google.android.gms.internal.cy lA -> b
    long qG -> c
    com.google.android.gms.internal.cq qH -> d
    com.google.android.gms.internal.av mw -> e
    com.google.android.gms.internal.ay qI -> f
    android.content.Context mContext -> g
    java.lang.Object mH -> h
    com.google.android.gms.internal.gs qJ -> i
    com.google.android.gms.internal.cz qK -> j
    int qL -> k
    void cancel() -> a
    java.lang.String bO() -> b
    void k(int) -> a
    com.google.android.gms.internal.cv b(long,long) -> a
    com.google.android.gms.internal.cz bP() -> c
    void a(com.google.android.gms.internal.ct) -> a
    void a(long,long,long,long) -> a
    void b(long,long,long,long) -> b
    java.lang.Object a(com.google.android.gms.internal.cu) -> a
    int b(com.google.android.gms.internal.cu) -> b
    com.google.android.gms.internal.cz a(com.google.android.gms.internal.cu,com.google.android.gms.internal.cz) -> a
    com.google.android.gms.internal.cz c(com.google.android.gms.internal.cu) -> c
    com.google.android.gms.internal.cz d(com.google.android.gms.internal.cu) -> d
    void a(com.google.android.gms.internal.cu,com.google.android.gms.internal.ct) -> a
com.google.android.gms.internal.cu$1 -> com.google.android.gms.internal.dy:
    com.google.android.gms.internal.ct qM -> a
    com.google.android.gms.internal.cu qN -> b
    void run() -> run
com.google.android.gms.internal.cv -> com.google.android.gms.internal.dz:
    int qO -> a
    com.google.android.gms.internal.cq qP -> b
    com.google.android.gms.internal.cz qQ -> c
    java.lang.String qR -> d
    com.google.android.gms.internal.ct qS -> e
com.google.android.gms.internal.cv$a -> com.google.android.gms.internal.eb:
    void k(int) -> a
com.google.android.gms.internal.cw -> com.google.android.gms.internal.ec:
    java.util.List a(org.json.JSONObject,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,com.google.android.gms.internal.fy,java.lang.String,boolean,java.util.List) -> a
com.google.android.gms.internal.cx -> com.google.android.gms.internal.ed:
    java.util.Map qT -> a
    com.google.android.gms.internal.cz x(java.lang.String) -> a
    boolean y(java.lang.String) -> b
    void d(java.util.Map) -> a
    com.google.android.gms.internal.cz z(java.lang.String) -> c
com.google.android.gms.internal.cy -> com.google.android.gms.internal.ee:
    com.google.android.gms.internal.cz x(java.lang.String) -> a
    boolean y(java.lang.String) -> b
com.google.android.gms.internal.cy$a -> com.google.android.gms.internal.ef:
    com.google.android.gms.internal.cy n(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cy$a$a -> com.google.android.gms.internal.eg:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.internal.cz x(java.lang.String) -> a
    boolean y(java.lang.String) -> b
com.google.android.gms.internal.cz -> com.google.android.gms.internal.eh:
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.ay,com.google.android.gms.internal.av,java.lang.String,com.google.android.gms.internal.da) -> a
    com.google.android.gms.dynamic.d getView() -> a
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.av,java.lang.String,com.google.android.gms.internal.da) -> a
    void showInterstitial() -> b
    void destroy() -> c
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.ay,com.google.android.gms.internal.av,java.lang.String,java.lang.String,com.google.android.gms.internal.da) -> a
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.av,java.lang.String,java.lang.String,com.google.android.gms.internal.da) -> a
    void pause() -> d
    void resume() -> e
com.google.android.gms.internal.cz$a -> com.google.android.gms.internal.ei:
    com.google.android.gms.internal.cz o(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.cz$a$a -> com.google.android.gms.internal.ej:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.ay,com.google.android.gms.internal.av,java.lang.String,com.google.android.gms.internal.da) -> a
    com.google.android.gms.dynamic.d getView() -> a
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.av,java.lang.String,com.google.android.gms.internal.da) -> a
    void showInterstitial() -> b
    void destroy() -> c
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.ay,com.google.android.gms.internal.av,java.lang.String,java.lang.String,com.google.android.gms.internal.da) -> a
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.av,java.lang.String,java.lang.String,com.google.android.gms.internal.da) -> a
    void pause() -> d
    void resume() -> e
com.google.android.gms.internal.da -> com.google.android.gms.internal.ek:
    void onAdClicked() -> a
    void onAdClosed() -> b
    void onAdFailedToLoad(int) -> a
    void onAdLeftApplication() -> c
    void onAdOpened() -> d
    void onAdLoaded() -> e
com.google.android.gms.internal.da$a -> com.google.android.gms.internal.el:
    com.google.android.gms.internal.da p(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.da$a$a -> com.google.android.gms.internal.em:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    void onAdClicked() -> a
    void onAdClosed() -> b
    void onAdFailedToLoad(int) -> a
    void onAdLeftApplication() -> c
    void onAdOpened() -> d
    void onAdLoaded() -> e
com.google.android.gms.internal.db -> com.google.android.gms.internal.en:
    java.util.Date d -> a
    int ow -> b
    java.util.Set f -> c
    boolean g -> d
    android.location.Location h -> e
    int qU -> f
    java.util.Date getBirthday() -> a
    int getGender() -> b
    java.util.Set getKeywords() -> c
    android.location.Location getLocation() -> d
    boolean isTesting() -> e
com.google.android.gms.internal.dc -> com.google.android.gms.internal.eo:
    com.google.android.gms.ads.mediation.MediationAdapter qV -> a
    com.google.android.gms.dynamic.d getView() -> a
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.ay,com.google.android.gms.internal.av,java.lang.String,com.google.android.gms.internal.da) -> a
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.ay,com.google.android.gms.internal.av,java.lang.String,java.lang.String,com.google.android.gms.internal.da) -> a
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.av,java.lang.String,com.google.android.gms.internal.da) -> a
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.av,java.lang.String,java.lang.String,com.google.android.gms.internal.da) -> a
    void showInterstitial() -> b
    void destroy() -> c
    void pause() -> d
    void resume() -> e
    android.os.Bundle a(java.lang.String,int,java.lang.String) -> a
com.google.android.gms.internal.dd -> com.google.android.gms.internal.ep:
    com.google.android.gms.internal.da qW -> a
    void onAdClicked(com.google.android.gms.ads.mediation.MediationBannerAdapter) -> e
    void onAdClosed(com.google.android.gms.ads.mediation.MediationBannerAdapter) -> c
    void onAdFailedToLoad(com.google.android.gms.ads.mediation.MediationBannerAdapter,int) -> a
    void onAdLeftApplication(com.google.android.gms.ads.mediation.MediationBannerAdapter) -> d
    void onAdOpened(com.google.android.gms.ads.mediation.MediationBannerAdapter) -> b
    void onAdLoaded(com.google.android.gms.ads.mediation.MediationBannerAdapter) -> a
    void onAdClosed(com.google.android.gms.ads.mediation.MediationInterstitialAdapter) -> c
    void onAdFailedToLoad(com.google.android.gms.ads.mediation.MediationInterstitialAdapter,int) -> a
    void onAdLeftApplication(com.google.android.gms.ads.mediation.MediationInterstitialAdapter) -> d
    void onAdOpened(com.google.android.gms.ads.mediation.MediationInterstitialAdapter) -> b
    void onAdLoaded(com.google.android.gms.ads.mediation.MediationInterstitialAdapter) -> a
com.google.android.gms.internal.de -> com.google.android.gms.internal.eq:
    com.google.ads.mediation.MediationAdapter qX -> a
    com.google.ads.mediation.NetworkExtras qY -> b
    com.google.android.gms.dynamic.d getView() -> a
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.ay,com.google.android.gms.internal.av,java.lang.String,com.google.android.gms.internal.da) -> a
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.ay,com.google.android.gms.internal.av,java.lang.String,java.lang.String,com.google.android.gms.internal.da) -> a
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.av,java.lang.String,com.google.android.gms.internal.da) -> a
    void a(com.google.android.gms.dynamic.d,com.google.android.gms.internal.av,java.lang.String,java.lang.String,com.google.android.gms.internal.da) -> a
    void showInterstitial() -> b
    void destroy() -> c
    void pause() -> d
    void resume() -> e
    com.google.ads.mediation.MediationServerParameters b(java.lang.String,int,java.lang.String) -> a
com.google.android.gms.internal.df -> com.google.android.gms.internal.er:
    com.google.android.gms.internal.da qW -> a
com.google.android.gms.internal.dg -> com.google.android.gms.internal.es:
    com.google.ads.AdSize b(com.google.android.gms.internal.ay) -> a
    com.google.ads.AdRequest$Gender l(int) -> a
    com.google.ads.mediation.MediationAdRequest d(com.google.android.gms.internal.av) -> a
com.google.android.gms.internal.dh -> com.google.android.gms.internal.et:
    com.google.android.gms.internal.gu mo -> a
    java.util.Map rd -> b
    android.content.Context mContext -> c
    java.lang.String re -> d
    long rf -> e
    long rg -> f
    java.lang.String rh -> g
    java.lang.String ri -> h
    void bQ() -> c
    java.lang.String A(java.lang.String) -> a
    void execute() -> a
    android.content.Intent createIntent() -> b
    android.content.Context a(com.google.android.gms.internal.dh) -> a
    com.google.android.gms.internal.gu b(com.google.android.gms.internal.dh) -> b
com.google.android.gms.internal.dh$1 -> com.google.android.gms.internal.eu:
    com.google.android.gms.internal.dh rj -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.dh$2 -> com.google.android.gms.internal.ev:
    com.google.android.gms.internal.dh rj -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.di -> com.google.android.gms.internal.ew:
    java.util.Set rk -> a
    int li -> b
    int lj -> c
    int rl -> d
    int rm -> e
    boolean rn -> f
    java.lang.String ro -> g
    com.google.android.gms.internal.gu mo -> h
    java.util.Map rd -> i
    android.content.Context mContext -> j
    void bQ() -> e
    boolean b(int,int) -> a
    boolean c(int,int) -> b
    boolean bR() -> a
    void execute() -> b
    void bS() -> c
    void bT() -> d
com.google.android.gms.internal.dj -> com.google.android.gms.internal.ex:
    com.google.android.gms.internal.gu mo -> a
    java.util.Map rd -> b
    android.content.Context mContext -> c
    void execute() -> a
    android.app.DownloadManager$Request b(java.lang.String,java.lang.String) -> a
    java.lang.String B(java.lang.String) -> a
    android.content.Context a(com.google.android.gms.internal.dj) -> a
    com.google.android.gms.internal.gu b(com.google.android.gms.internal.dj) -> b
com.google.android.gms.internal.dj$1 -> com.google.android.gms.internal.ey:
    java.lang.String rp -> a
    java.lang.String rq -> b
    com.google.android.gms.internal.dj rr -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.dj$2 -> com.google.android.gms.internal.ez:
    com.google.android.gms.internal.dj rr -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.dk -> com.google.android.gms.internal.fa:
    boolean rs -> a
    boolean rt -> b
    boolean ru -> c
    boolean rv -> d
    boolean rw -> e
    org.json.JSONObject toJson() -> a
com.google.android.gms.internal.dk$1 -> com.google.android.gms.internal.fb:
com.google.android.gms.internal.dk$a -> com.google.android.gms.internal.fc:
    boolean rs -> a
    boolean rt -> b
    boolean ru -> c
    boolean rv -> d
    boolean rw -> e
    com.google.android.gms.internal.dk$a k(boolean) -> a
    com.google.android.gms.internal.dk$a l(boolean) -> b
    com.google.android.gms.internal.dk$a m(boolean) -> c
    com.google.android.gms.internal.dk$a n(boolean) -> d
    com.google.android.gms.internal.dk$a o(boolean) -> e
    com.google.android.gms.internal.dk bU() -> a
    boolean a(com.google.android.gms.internal.dk$a) -> a
    boolean b(com.google.android.gms.internal.dk$a) -> b
    boolean c(com.google.android.gms.internal.dk$a) -> c
    boolean d(com.google.android.gms.internal.dk$a) -> d
    boolean e(com.google.android.gms.internal.dk$a) -> e
com.google.android.gms.internal.dl -> com.google.android.gms.internal.fd:
    com.google.android.gms.internal.gu mo -> d
    android.content.Context mContext -> e
    android.view.WindowManager mR -> f
    com.google.android.gms.internal.bl rx -> g
    android.util.DisplayMetrics ry -> a
    float rz -> h
    int rA -> b
    int rB -> c
    int rC -> i
    int rD -> j
    int rE -> k
    int[] rF -> l
    void bV() -> g
    void bW() -> a
    void bX() -> h
    void bY() -> b
    void bZ() -> c
    void ca() -> d
    void cb() -> e
    void cc() -> f
    com.google.android.gms.internal.dk cd() -> i
com.google.android.gms.internal.dm -> com.google.android.gms.internal.fe:
    boolean a(android.content.Context,com.google.android.gms.internal.do,com.google.android.gms.internal.dv) -> a
com.google.android.gms.internal.dn -> com.google.android.gms.internal.ff:
    com.google.android.gms.internal.do e(android.os.Parcel) -> a
    com.google.android.gms.internal.do[] m(int) -> a
    void a(com.google.android.gms.internal.do,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.do -> com.google.android.gms.internal.do:
    com.google.android.gms.internal.dn CREATOR -> a
    int versionCode -> b
    java.lang.String rG -> c
    java.lang.String rH -> d
    java.lang.String mimeType -> e
    java.lang.String packageName -> f
    java.lang.String rI -> g
    java.lang.String rJ -> h
    java.lang.String rK -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.dp -> com.google.android.gms.internal.fg:
    int rL -> a
    android.app.Activity nB -> b
    com.google.android.gms.internal.dr rM -> c
    com.google.android.gms.internal.dt rN -> d
    com.google.android.gms.internal.gu mo -> e
    com.google.android.gms.internal.dp$c rO -> f
    com.google.android.gms.internal.du rP -> g
    boolean rQ -> h
    boolean rR -> i
    android.widget.FrameLayout rS -> j
    android.webkit.WebChromeClient$CustomViewCallback rT -> k
    boolean rU -> l
    boolean rV -> m
    boolean rW -> n
    android.widget.RelativeLayout rX -> o
    void a(android.content.Context,com.google.android.gms.internal.dr) -> a
    android.widget.RelativeLayout$LayoutParams a(int,int,int,int) -> c
    void close() -> a
    com.google.android.gms.internal.dt ce() -> b
    void cf() -> c
    void b(int,int,int,int) -> a
    void c(int,int,int,int) -> b
    void onCreate(android.os.Bundle) -> a
    void onRestart() -> d
    void onStart() -> e
    void onResume() -> f
    void onPause() -> g
    void onSaveInstanceState(android.os.Bundle) -> b
    void onStop() -> h
    void onDestroy() -> i
    void p(boolean) -> a
    void X() -> j
    void q(boolean) -> b
    void cg() -> k
    void setRequestedOrientation(int) -> a
    void a(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> a
    void r(boolean) -> c
    void ch() -> l
    void ci() -> m
    void cj() -> n
com.google.android.gms.internal.dp$1 -> com.google.android.gms.internal.fi:
    com.google.android.gms.internal.dp rY -> a
    void a(com.google.android.gms.internal.gu) -> a
com.google.android.gms.internal.dp$a -> com.google.android.gms.internal.fk:
com.google.android.gms.internal.dp$b -> com.google.android.gms.internal.fl:
    com.google.android.gms.internal.gl lJ -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
com.google.android.gms.internal.dp$c -> com.google.android.gms.internal.fm:
    int index -> a
    android.view.ViewGroup$LayoutParams rZ -> b
    android.view.ViewGroup sa -> c
com.google.android.gms.internal.dq -> com.google.android.gms.internal.fn:
    com.google.android.gms.internal.dr f(android.os.Parcel) -> a
    com.google.android.gms.internal.dr[] n(int) -> a
    void a(com.google.android.gms.internal.dr,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.dr -> com.google.android.gms.internal.dr:
    com.google.android.gms.internal.dq CREATOR -> a
    int versionCode -> b
    com.google.android.gms.internal.do sb -> c
    com.google.android.gms.internal.t sc -> d
    com.google.android.gms.internal.ds sd -> e
    com.google.android.gms.internal.gu se -> f
    com.google.android.gms.internal.cb sf -> g
    java.lang.String sg -> h
    boolean sh -> i
    java.lang.String si -> j
    com.google.android.gms.internal.dv sj -> k
    int orientation -> l
    int sk -> m
    java.lang.String rH -> n
    com.google.android.gms.internal.gs lO -> o
    com.google.android.gms.internal.ce sl -> p
    java.lang.String sm -> q
    com.google.android.gms.internal.y sn -> r
    void a(android.content.Intent,com.google.android.gms.internal.dr) -> a
    com.google.android.gms.internal.dr b(android.content.Intent) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.os.IBinder ck() -> a
    android.os.IBinder cl() -> b
    android.os.IBinder cm() -> c
    android.os.IBinder cn() -> d
    android.os.IBinder co() -> e
    android.os.IBinder cp() -> f
com.google.android.gms.internal.ds -> com.google.android.gms.internal.fo:
    void ag() -> p
    void ah() -> q
com.google.android.gms.internal.dt -> com.google.android.gms.internal.fp:
    com.google.android.gms.internal.gu mo -> a
    android.widget.MediaController so -> b
    com.google.android.gms.internal.dt$a sp -> c
    android.widget.VideoView sq -> d
    long sr -> e
    java.lang.String ss -> f
    void a(com.google.android.gms.internal.gu,java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.gu,java.lang.String) -> a
    void a(com.google.android.gms.internal.gu,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.gu,java.lang.String,java.util.Map) -> a
    void destroy() -> a
    void cq() -> b
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void pause() -> c
    void play() -> d
    void seekTo(int) -> a
    void b(android.view.MotionEvent) -> a
    void s(boolean) -> a
    void C(java.lang.String) -> a
    void cr() -> e
com.google.android.gms.internal.dt$a -> com.google.android.gms.internal.fq:
    java.lang.Runnable mv -> a
    boolean st -> b
    void cancel() -> a
    void cs() -> b
    boolean a(com.google.android.gms.internal.dt$a) -> a
com.google.android.gms.internal.dt$a$1 -> com.google.android.gms.internal.fr:
    java.lang.ref.WeakReference su -> c
    com.google.android.gms.internal.dt sv -> a
    com.google.android.gms.internal.dt$a sw -> b
    void run() -> run
com.google.android.gms.internal.du -> com.google.android.gms.internal.fs:
    android.app.Activity nB -> a
    android.widget.ImageButton sx -> b
    void onClick(android.view.View) -> onClick
    void q(boolean) -> a
com.google.android.gms.internal.dv -> com.google.android.gms.internal.ft:
    void af() -> r
com.google.android.gms.internal.dw -> com.google.android.gms.internal.fu:
    com.google.android.gms.internal.dw sy -> a
    com.google.android.gms.internal.dx b(android.app.Activity) -> a
    boolean c(android.app.Activity) -> b
    com.google.android.gms.internal.dx d(android.app.Activity) -> c
    com.google.android.gms.internal.dy q(android.os.IBinder) -> b
    java.lang.Object d(android.os.IBinder) -> a
com.google.android.gms.internal.dw$a -> com.google.android.gms.internal.fv:
com.google.android.gms.internal.dx -> com.google.android.gms.internal.fw:
    void onCreate(android.os.Bundle) -> a
    void onRestart() -> d
    void onStart() -> e
    void onResume() -> f
    void onPause() -> g
    void onSaveInstanceState(android.os.Bundle) -> b
    void onStop() -> h
    void onDestroy() -> i
    void X() -> j
com.google.android.gms.internal.dx$a -> com.google.android.gms.internal.fx:
    com.google.android.gms.internal.dx r(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.dx$a$a -> com.google.android.gms.internal.fy:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    void onCreate(android.os.Bundle) -> a
    void onRestart() -> d
    void onStart() -> e
    void onResume() -> f
    void onPause() -> g
    void onSaveInstanceState(android.os.Bundle) -> b
    void onStop() -> h
    void onDestroy() -> i
    void X() -> j
com.google.android.gms.internal.dy -> com.google.android.gms.internal.fz:
    android.os.IBinder b(com.google.android.gms.dynamic.d) -> a
com.google.android.gms.internal.dy$a -> com.google.android.gms.internal.ga:
    com.google.android.gms.internal.dy s(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.dy$a$a -> com.google.android.gms.internal.gb:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    android.os.IBinder b(com.google.android.gms.dynamic.d) -> a
com.google.android.gms.internal.dz -> com.google.android.gms.internal.gc:
    com.google.android.gms.internal.ea g(android.os.Parcel) -> a
    com.google.android.gms.internal.ea[] o(int) -> a
    void a(com.google.android.gms.internal.ea,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.e -> com.google.android.gms.internal.gd:
    java.lang.String a(byte[],boolean) -> a
    byte[] a(java.lang.String,boolean) -> a
com.google.android.gms.internal.ea -> com.google.android.gms.internal.ea:
    com.google.android.gms.internal.dz CREATOR -> a
    int versionCode -> b
    com.google.android.gms.internal.ek md -> c
    com.google.android.gms.internal.em sz -> d
    android.content.Context sA -> e
    com.google.android.gms.internal.ej sB -> f
    void a(android.content.Intent,com.google.android.gms.internal.ea) -> a
    com.google.android.gms.internal.ea c(android.content.Intent) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.os.IBinder ct() -> a
    android.os.IBinder cu() -> b
    android.os.IBinder cv() -> c
    android.os.IBinder cw() -> d
com.google.android.gms.internal.eb -> com.google.android.gms.internal.ge:
    java.lang.Object sC -> a
    android.content.Context mContext -> b
    void t(android.os.IBinder) -> a
    android.os.Bundle a(java.lang.String,java.lang.String,java.lang.String) -> a
    int c(java.lang.String,java.lang.String) -> a
    android.os.Bundle d(java.lang.String,java.lang.String) -> b
    void destroy() -> a
com.google.android.gms.internal.ec -> com.google.android.gms.internal.gf:
    java.lang.Object mH -> a
    boolean sD -> b
    android.content.Context mContext -> c
    com.google.android.gms.internal.er sE -> d
    com.google.android.gms.internal.eb sF -> e
    com.google.android.gms.internal.eh sG -> f
    java.util.List sH -> g
    com.google.android.gms.internal.ek sI -> h
    void cx() -> a
    void onStop() -> b
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void cy() -> c
    void a(com.google.android.gms.internal.ef,java.lang.String,java.lang.String) -> a
    void b(long) -> a
    boolean c(long) -> b
    com.google.android.gms.internal.ek a(com.google.android.gms.internal.ec) -> a
    android.content.Context b(com.google.android.gms.internal.ec) -> b
    com.google.android.gms.internal.er c(com.google.android.gms.internal.ec) -> c
com.google.android.gms.internal.ec$1 -> com.google.android.gms.internal.gg:
    com.google.android.gms.internal.ef sJ -> a
    android.content.Intent sK -> b
    com.google.android.gms.internal.ec sL -> c
    void run() -> run
com.google.android.gms.internal.ed -> com.google.android.gms.internal.gh:
    java.lang.String mG -> a
    android.content.Context mContext -> b
    java.lang.String sM -> c
    java.util.ArrayList sN -> d
    java.lang.String getProductId() -> a
    int p(int) -> a
    java.lang.String a(java.lang.String,java.util.HashMap) -> a
    void recordResolution(int) -> b
    void recordPlayBillingResolution(int) -> c
    void cz() -> b
com.google.android.gms.internal.ee -> com.google.android.gms.internal.gi:
    android.app.Activity nB -> a
    com.google.android.gms.internal.eh sG -> b
    android.content.Context sO -> c
    com.google.android.gms.internal.em sP -> d
    com.google.android.gms.internal.eb sF -> e
    com.google.android.gms.internal.ef sQ -> f
    com.google.android.gms.internal.ej sR -> g
    com.google.android.gms.internal.ek sI -> h
    java.lang.String sS -> i
    void a(android.content.Context,boolean,com.google.android.gms.internal.ea) -> a
    void onCreate() -> a
    void onDestroy() -> b
    void onActivityResult(int,int,android.content.Intent) -> a
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void a(java.lang.String,boolean,int,android.content.Intent) -> a
com.google.android.gms.internal.ef -> com.google.android.gms.internal.gj:
    long sT -> a
    java.lang.String sU -> b
    java.lang.String sV -> c
com.google.android.gms.internal.eg -> com.google.android.gms.internal.gk:
    boolean sW -> a
    android.content.Context mContext -> b
    int sX -> c
    android.content.Intent sY -> d
    com.google.android.gms.internal.eb sF -> e
    com.google.android.gms.internal.ef sQ -> f
    java.lang.String sM -> g
    boolean isVerified() -> a
    java.lang.String getProductId() -> b
    android.content.Intent getPurchaseData() -> c
    int getResultCode() -> d
    void finishPurchase() -> e
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
com.google.android.gms.internal.eh -> com.google.android.gms.internal.gl:
    java.lang.String sZ -> a
    com.google.android.gms.internal.eh$a ta -> b
    java.lang.Object mH -> c
    com.google.android.gms.internal.eh tb -> d
    com.google.android.gms.internal.eh j(android.content.Context) -> a
    void a(com.google.android.gms.internal.ef) -> a
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> a
    java.util.List d(long) -> a
    void b(com.google.android.gms.internal.ef) -> b
    int getRecordCount() -> b
    void cA() -> c
    com.google.android.gms.internal.ef a(android.database.Cursor) -> a
    java.lang.String cB() -> d
com.google.android.gms.internal.eh$a -> com.google.android.gms.internal.gm:
    com.google.android.gms.internal.eh tc -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.google.android.gms.internal.ei -> com.google.android.gms.internal.gn:
    int d(android.content.Intent) -> a
    int b(android.os.Bundle) -> a
    java.lang.String e(android.content.Intent) -> b
    java.lang.String f(android.content.Intent) -> c
    java.lang.String D(java.lang.String) -> a
    java.lang.String E(java.lang.String) -> b
com.google.android.gms.internal.ej -> com.google.android.gms.internal.go:
    void a(java.lang.String,boolean,int,android.content.Intent,com.google.android.gms.internal.ef) -> a
com.google.android.gms.internal.ek -> com.google.android.gms.internal.gp:
    java.lang.String oK -> a
    java.lang.String cC() -> a
    boolean a(java.lang.String,int,android.content.Intent) -> a
com.google.android.gms.internal.el -> com.google.android.gms.internal.gq:
    boolean b(java.lang.String,java.lang.String,java.lang.String) -> a
    java.security.PublicKey F(java.lang.String) -> a
    boolean a(java.security.PublicKey,java.lang.String,java.lang.String) -> a
com.google.android.gms.internal.em -> com.google.android.gms.internal.gr:
    java.lang.String getProductId() -> a
    void recordResolution(int) -> b
    void recordPlayBillingResolution(int) -> c
com.google.android.gms.internal.em$a -> com.google.android.gms.internal.gt:
    com.google.android.gms.internal.em u(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.em$a$a -> com.google.android.gms.internal.gu:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getProductId() -> a
    void recordResolution(int) -> b
    void recordPlayBillingResolution(int) -> c
com.google.android.gms.internal.en -> com.google.android.gms.internal.gv:
    void a(com.google.android.gms.internal.em) -> a
com.google.android.gms.internal.en$a -> com.google.android.gms.internal.gw:
    com.google.android.gms.internal.en v(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.en$a$a -> com.google.android.gms.internal.gx:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    void a(com.google.android.gms.internal.em) -> a
com.google.android.gms.internal.eo -> com.google.android.gms.internal.gy:
    void onCreate() -> a
    void onDestroy() -> b
    void onActivityResult(int,int,android.content.Intent) -> a
com.google.android.gms.internal.eo$a -> com.google.android.gms.internal.gz:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.eq -> com.google.android.gms.internal.hb:
    java.lang.String getProductId() -> b
    android.content.Intent getPurchaseData() -> c
    int getResultCode() -> d
    boolean isVerified() -> a
    void finishPurchase() -> e
com.google.android.gms.internal.eq$a -> com.google.android.gms.internal.hc:
    com.google.android.gms.internal.eq y(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.eq$a$a -> com.google.android.gms.internal.he:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getProductId() -> b
    android.content.Intent getPurchaseData() -> c
    int getResultCode() -> d
    boolean isVerified() -> a
    void finishPurchase() -> e
com.google.android.gms.internal.er -> com.google.android.gms.internal.hg:
    boolean isValidPurchase(java.lang.String) -> a
    void a(com.google.android.gms.internal.eq) -> a
com.google.android.gms.internal.er$a -> com.google.android.gms.internal.hi:
    com.google.android.gms.internal.er z(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.er$a$a -> com.google.android.gms.internal.hk:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    boolean isValidPurchase(java.lang.String) -> a
    void a(com.google.android.gms.internal.eq) -> a
com.google.android.gms.internal.es -> com.google.android.gms.internal.hm:
    com.google.android.gms.ads.purchase.InAppPurchaseListener oM -> a
    void a(com.google.android.gms.internal.em) -> a
com.google.android.gms.internal.eu -> com.google.android.gms.internal.hn:
    com.google.android.gms.internal.eq te -> a
com.google.android.gms.internal.ev -> com.google.android.gms.internal.ho:
    com.google.android.gms.internal.em sP -> a
com.google.android.gms.internal.ew -> com.google.android.gms.internal.hq:
    com.google.android.gms.ads.purchase.PlayStorePurchaseListener oN -> a
    boolean isValidPurchase(java.lang.String) -> a
    void a(com.google.android.gms.internal.eq) -> a
com.google.android.gms.internal.ex -> com.google.android.gms.internal.hs:
    java.lang.Thread$UncaughtExceptionHandler tf -> a
    java.lang.Thread$UncaughtExceptionHandler tg -> b
    android.content.Context mContext -> c
    com.google.android.gms.internal.gs th -> d
    com.google.android.gms.internal.ex a(android.content.Context,java.lang.Thread,com.google.android.gms.internal.gs) -> a
    boolean k(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    boolean a(java.lang.Throwable) -> a
    boolean G(java.lang.String) -> a
    boolean H(java.lang.String) -> b
    void b(java.lang.Throwable) -> b
    java.lang.String c(java.lang.Throwable) -> c
    java.lang.Throwable d(java.lang.Throwable) -> d
    java.lang.String cD() -> a
com.google.android.gms.internal.ey -> com.google.android.gms.internal.ht:
com.google.android.gms.internal.ez -> com.google.android.gms.internal.hu:
    com.google.android.gms.internal.gf a(android.content.Context,com.google.android.gms.internal.fh$a,com.google.android.gms.internal.k,com.google.android.gms.internal.ez$a) -> a
com.google.android.gms.internal.ez$a -> com.google.android.gms.internal.hv:
    void a(com.google.android.gms.internal.fy$a) -> a
com.google.android.gms.internal.f -> com.google.android.gms.internal.hw:
    int gG -> a
    int gH -> b
    int gI -> c
    int gJ -> d
    int gK -> e
    int gL -> f
    int gM -> g
    int gN -> h
    int gO -> i
    int gP -> j
    int gQ -> k
    int gR -> l
    int gS -> m
    int gT -> n
    int gU -> o
    int gV -> p
    int gW -> q
    int gX -> r
    int gY -> s
    int gZ -> t
    int ha -> u
    int hb -> v
    int hc -> w
    int hd -> x
    int he -> y
    int hf -> z
    int hg -> A
    int hh -> B
    int hi -> C
    int hj -> D
    int hk -> E
    int hl -> F
    int hm -> G
    int hn -> H
    int ho -> I
    int hp -> J
    int hq -> K
    int hr -> L
    int hs -> M
    int ht -> N
    int hu -> O
    int hv -> P
    int hw -> Q
    int hx -> R
    int hy -> S
    int hz -> T
    int hA -> U
    int hB -> V
    int hC -> W
    int hD -> X
    int hE -> Y
    int hF -> Z
    int hG -> aa
    int hH -> ab
    int hI -> ac
    int hJ -> ad
    int hK -> ae
    int hL -> af
    int hM -> ag
    int hN -> ah
    int hO -> ai
    int hP -> aj
    int hQ -> ak
    int hR -> al
    int hS -> am
    int hT -> an
    int hU -> ao
    int hV -> ap
    int hW -> aq
    int hX -> ar
    int hY -> as
    int hZ -> at
    int ia -> au
    int ib -> av
    int ic -> aw
    int ie -> ax
    int if -> ay
    int ig -> az
    int ih -> aA
    int ii -> aB
    int ij -> aC
    int ik -> aD
    int il -> aE
    int im -> aF
    int in -> aG
    int io -> aH
    int ip -> aI
    int iq -> aJ
    int ir -> aK
    int is -> aL
    int it -> aM
    int iu -> aN
    int iv -> aO
    int iw -> aP
    int ix -> aQ
    int iy -> aR
    int iz -> aS
    int iA -> aT
    int iB -> aU
    int iC -> aV
    int iD -> aW
    int iE -> aX
    int iF -> aY
    int iG -> aZ
    int iH -> ba
    int iI -> bb
    int iJ -> bc
    int iK -> bd
    int iL -> be
    int iM -> bf
    int iN -> bg
    int iO -> bh
    int iP -> bi
    int iQ -> bj
    int iR -> bk
    int iS -> bl
    int iT -> bm
    int iU -> bn
    int iV -> bo
    int iW -> bp
    int iX -> bq
    int iY -> br
    int iZ -> bs
    int ja -> bt
    int jb -> bu
    int jc -> bv
    int jd -> bw
    int je -> bx
    int jf -> by
    int jg -> bz
    int jh -> bA
    int ji -> bB
    int jj -> bC
    int jk -> bD
    int jl -> bE
    int jm -> bF
    int jn -> bG
    int jo -> bH
    int jp -> bI
    int jq -> bJ
    int jr -> bK
    int js -> bL
    int jt -> bM
    int ju -> bN
    int jv -> bO
    int jw -> bP
    int jx -> bQ
    int jy -> bR
    int jz -> bS
    int jA -> bT
    int jB -> bU
    int jC -> bV
    int jD -> bW
    int jE -> bX
    int jF -> bY
    int jG -> bZ
    int jH -> ca
    int jI -> cb
    int jJ -> cc
    int jK -> cd
    int jL -> ce
    int jM -> cf
    int jN -> cg
    int jO -> ch
    int jP -> ci
    int jQ -> cj
    int jR -> ck
    int jS -> cl
    int jT -> cm
    int jU -> cn
    int jV -> co
    int jW -> cp
    int jX -> cq
    int jY -> cr
    int jZ -> cs
    int ka -> ct
    int kb -> cu
    int kc -> cv
    int kd -> cw
    int ke -> cx
    int kf -> cy
    int kg -> cz
    int kh -> cA
    int ki -> cB
    int kj -> cC
    int kk -> cD
    int kl -> cE
    int km -> cF
    int kn -> cG
    int ko -> cH
    int kp -> cI
    int kq -> cJ
    int kr -> cK
    int ks -> cL
    int kt -> cM
    com.google.android.gms.internal.f$a[] ku -> cN
    void a(byte[],byte[]) -> a
com.google.android.gms.internal.f$1 -> com.google.android.gms.internal.hx:
com.google.android.gms.internal.f$a -> com.google.android.gms.internal.hy:
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.f$b -> com.google.android.gms.internal.hz:
    com.google.android.gms.internal.f kv -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.f$c -> com.google.android.gms.internal.ia:
    com.google.android.gms.internal.f kv -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.f$d -> com.google.android.gms.internal.ib:
    com.google.android.gms.internal.f kv -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.f$e -> com.google.android.gms.internal.ic:
    com.google.android.gms.internal.f kv -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.f$f -> com.google.android.gms.internal.id:
    com.google.android.gms.internal.f kv -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.f$g -> com.google.android.gms.internal.ie:
    com.google.android.gms.internal.f kv -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.f$h -> com.google.android.gms.internal.ig:
    com.google.android.gms.internal.f kv -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.f$i -> com.google.android.gms.internal.ih:
    com.google.android.gms.internal.f kv -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.f$j -> com.google.android.gms.internal.ii:
    com.google.android.gms.internal.f kv -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.f$k -> com.google.android.gms.internal.ik:
    com.google.android.gms.internal.f kv -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.f$l -> com.google.android.gms.internal.il:
    com.google.android.gms.internal.f kv -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.f$m -> com.google.android.gms.internal.im:
    com.google.android.gms.internal.f kv -> a
    void b(byte[],byte[]) -> a
com.google.android.gms.internal.fa -> com.google.android.gms.internal.in:
    com.google.android.gms.internal.ez$a ti -> a
    java.lang.Object tj -> b
    android.content.Context mContext -> c
    java.lang.Object mH -> d
    com.google.android.gms.internal.fh$a tk -> e
    com.google.android.gms.internal.k tl -> f
    com.google.android.gms.internal.gf tm -> g
    com.google.android.gms.internal.fj tn -> h
    com.google.android.gms.internal.cr qi -> i
    void a(com.google.android.gms.internal.fj) -> a
    void cx() -> a
    void t(boolean) -> a
    void onStop() -> b
    void cE() -> c
    com.google.android.gms.internal.ay a(com.google.android.gms.internal.fh) -> a
    void e(long) -> a
    boolean c(long) -> b
    java.lang.Object a(com.google.android.gms.internal.fa) -> a
    com.google.android.gms.internal.ez$a b(com.google.android.gms.internal.fa) -> b
com.google.android.gms.internal.fa$1 -> com.google.android.gms.internal.ip:
    com.google.android.gms.internal.fa to -> a
    void run() -> run
com.google.android.gms.internal.fa$2 -> com.google.android.gms.internal.iq:
    com.google.android.gms.internal.fy$a tp -> a
    com.google.android.gms.internal.fa to -> b
    void run() -> run
com.google.android.gms.internal.fa$a -> com.google.android.gms.internal.ir:
    int tq -> a
    int getErrorCode() -> a
com.google.android.gms.internal.fb -> com.google.android.gms.internal.is:
    android.os.Handler tr -> d
    long ts -> e
    long tt -> f
    com.google.android.gms.internal.gv$a tu -> g
    com.google.android.gms.internal.gu mo -> a
    boolean tv -> b
    boolean tw -> c
    int lj -> h
    int li -> i
    void run() -> run
    void cF() -> a
    void a(com.google.android.gms.internal.fj,com.google.android.gms.internal.gz) -> a
    void b(com.google.android.gms.internal.fj) -> a
    void cG() -> b
    boolean cH() -> c
    boolean cI() -> d
    int a(com.google.android.gms.internal.fb) -> a
    int b(com.google.android.gms.internal.fb) -> b
    long c(com.google.android.gms.internal.fb) -> c
    long d(com.google.android.gms.internal.fb) -> d
    com.google.android.gms.internal.gv$a e(com.google.android.gms.internal.fb) -> e
    long f(com.google.android.gms.internal.fb) -> f
    android.os.Handler g(com.google.android.gms.internal.fb) -> g
com.google.android.gms.internal.fb$a -> com.google.android.gms.internal.it:
    android.webkit.WebView tx -> b
    android.graphics.Bitmap ty -> c
    com.google.android.gms.internal.fb tz -> a
    void onPreExecute() -> onPreExecute
    java.lang.Boolean b(java.lang.Void[]) -> a
    void a(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.google.android.gms.internal.fc -> com.google.android.gms.internal.iu:
    com.google.android.gms.internal.gf a(android.content.Context,com.google.android.gms.internal.u,com.google.android.gms.internal.fy$a,com.google.android.gms.internal.gu,com.google.android.gms.internal.cy,com.google.android.gms.internal.fc$a) -> a
com.google.android.gms.internal.fc$a -> com.google.android.gms.internal.iv:
    void a(com.google.android.gms.internal.fy) -> a
com.google.android.gms.internal.fd -> com.google.android.gms.internal.iw:
    com.google.android.gms.internal.cy lA -> a
    com.google.android.gms.internal.fc$a tA -> b
    com.google.android.gms.internal.gu mo -> c
    java.lang.Object tj -> d
    android.content.Context mContext -> e
    java.lang.Object mH -> f
    com.google.android.gms.internal.fy$a tB -> g
    com.google.android.gms.internal.fj tn -> h
    boolean tC -> i
    com.google.android.gms.internal.cp tD -> j
    com.google.android.gms.internal.cr qi -> k
    com.google.android.gms.internal.cv tE -> l
    void a(com.google.android.gms.internal.gu) -> a
    void cx() -> a
    void f(long) -> b
    void a(com.google.android.gms.internal.fh,long) -> a
    void g(long) -> a
    void onStop() -> b
    void h(long) -> c
    boolean c(long) -> d
    java.lang.Object a(com.google.android.gms.internal.fd) -> a
    com.google.android.gms.internal.fc$a b(com.google.android.gms.internal.fd) -> b
    com.google.android.gms.internal.fj c(com.google.android.gms.internal.fd) -> c
    com.google.android.gms.internal.gu d(com.google.android.gms.internal.fd) -> d
com.google.android.gms.internal.fd$1 -> com.google.android.gms.internal.ix:
    com.google.android.gms.internal.fd tF -> a
    void run() -> run
com.google.android.gms.internal.fd$2 -> com.google.android.gms.internal.iy:
    com.google.android.gms.internal.fy tG -> a
    com.google.android.gms.internal.fd tF -> b
    void run() -> run
com.google.android.gms.internal.fd$3 -> com.google.android.gms.internal.iz:
    com.google.android.gms.internal.fd tF -> a
    void run() -> run
com.google.android.gms.internal.fd$4 -> com.google.android.gms.internal.ja:
    com.google.android.gms.internal.fb tH -> a
    com.google.android.gms.internal.fd tF -> b
    void run() -> run
com.google.android.gms.internal.fd$a -> com.google.android.gms.internal.jb:
    int tq -> a
    int getErrorCode() -> a
com.google.android.gms.internal.fe -> com.google.android.gms.internal.jc:
    com.google.android.gms.internal.gf a(android.content.Context,com.google.android.gms.internal.fh,com.google.android.gms.internal.fe$a) -> a
    com.google.android.gms.internal.gf b(android.content.Context,com.google.android.gms.internal.fh,com.google.android.gms.internal.fe$a) -> b
    com.google.android.gms.internal.gf c(android.content.Context,com.google.android.gms.internal.fh,com.google.android.gms.internal.fe$a) -> c
com.google.android.gms.internal.fe$a -> com.google.android.gms.internal.jd:
    void a(com.google.android.gms.internal.fj) -> a
com.google.android.gms.internal.ff -> com.google.android.gms.internal.je:
    com.google.android.gms.internal.fh qh -> a
    com.google.android.gms.internal.fe$a tI -> b
    void cJ() -> c
    com.google.android.gms.internal.fl cK() -> d
    void cx() -> a
    void onStop() -> b
    com.google.android.gms.internal.fj a(com.google.android.gms.internal.fl,com.google.android.gms.internal.fh) -> a
com.google.android.gms.internal.ff$a -> com.google.android.gms.internal.jf:
    android.content.Context mContext -> a
    com.google.android.gms.internal.fl cK() -> d
    void cJ() -> c
com.google.android.gms.internal.ff$b -> com.google.android.gms.internal.jh:
    com.google.android.gms.internal.fe$a tI -> a
    com.google.android.gms.internal.fg tJ -> b
    java.lang.Object mH -> c
    com.google.android.gms.internal.fl cK() -> d
    void cJ() -> c
    void onConnectionFailed(com.google.android.gms.common.ConnectionResult) -> a
    void onConnected(android.os.Bundle) -> a
    void onConnectionSuspended(int) -> a
com.google.android.gms.internal.fg -> com.google.android.gms.internal.jk:
    int qg -> a
    java.lang.String bK() -> a
    java.lang.String bL() -> b
    com.google.android.gms.internal.fl B(android.os.IBinder) -> a
    void a(com.google.android.gms.internal.jt,com.google.android.gms.internal.jl$e) -> a
    com.google.android.gms.internal.fl cL() -> c
    android.os.IInterface l(android.os.IBinder) -> b
com.google.android.gms.internal.fh -> com.google.android.gms.internal.fh:
    com.google.android.gms.internal.fi CREATOR -> a
    int versionCode -> b
    android.os.Bundle tK -> c
    com.google.android.gms.internal.av tL -> d
    com.google.android.gms.internal.ay lS -> e
    java.lang.String lL -> f
    android.content.pm.ApplicationInfo applicationInfo -> g
    android.content.pm.PackageInfo tM -> h
    java.lang.String tN -> i
    java.lang.String tO -> j
    java.lang.String tP -> k
    com.google.android.gms.internal.gs lO -> l
    android.os.Bundle tQ -> m
    int tR -> n
    java.util.List mc -> o
    android.os.Bundle tS -> p
    boolean tT -> q
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.fh$a -> com.google.android.gms.internal.jl:
    android.os.Bundle tK -> a
    com.google.android.gms.internal.av tL -> b
    com.google.android.gms.internal.ay lS -> c
    java.lang.String lL -> d
    android.content.pm.ApplicationInfo applicationInfo -> e
    android.content.pm.PackageInfo tM -> f
    java.lang.String tO -> g
    java.lang.String tP -> h
    android.os.Bundle tQ -> i
    com.google.android.gms.internal.gs lO -> j
    int tR -> k
    java.util.List mc -> l
    android.os.Bundle tS -> m
    boolean tT -> n
com.google.android.gms.internal.fi -> com.google.android.gms.internal.jm:
    com.google.android.gms.internal.fh h(android.os.Parcel) -> a
    com.google.android.gms.internal.fh[] q(int) -> a
    void a(com.google.android.gms.internal.fh,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.fj -> com.google.android.gms.internal.fj:
    com.google.android.gms.internal.fk CREATOR -> a
    int versionCode -> b
    java.lang.String sg -> c
    java.lang.String tU -> d
    java.util.List qw -> e
    int errorCode -> f
    java.util.List qx -> g
    long tV -> h
    boolean tW -> i
    long tX -> j
    java.util.List tY -> k
    long qA -> l
    int orientation -> m
    java.lang.String tZ -> n
    long ua -> o
    java.lang.String ub -> p
    boolean uc -> q
    java.lang.String ud -> r
    java.lang.String ue -> s
    boolean uf -> t
    boolean ug -> u
    boolean tT -> v
    boolean uh -> w
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.fk -> com.google.android.gms.internal.jn:
    com.google.android.gms.internal.fj i(android.os.Parcel) -> a
    com.google.android.gms.internal.fj[] r(int) -> a
    void a(com.google.android.gms.internal.fj,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.fl -> com.google.android.gms.internal.jo:
    com.google.android.gms.internal.fj b(com.google.android.gms.internal.fh) -> a
com.google.android.gms.internal.fl$a -> com.google.android.gms.internal.jp:
    com.google.android.gms.internal.fl C(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.fl$a$a -> com.google.android.gms.internal.jq:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.internal.fj b(com.google.android.gms.internal.fh) -> a
com.google.android.gms.internal.fm -> com.google.android.gms.internal.jr:
    com.google.android.gms.internal.fc$a tA -> a
    com.google.android.gms.internal.fj tn -> b
    com.google.android.gms.internal.fy$a tB -> c
    com.google.android.gms.internal.fn ui -> d
    java.lang.Object mH -> e
    java.util.concurrent.Future uj -> f
    void cx() -> a
    void onStop() -> b
    com.google.android.gms.internal.fy s(int) -> a
    com.google.android.gms.internal.fc$a a(com.google.android.gms.internal.fm) -> a
com.google.android.gms.internal.fm$1 -> com.google.android.gms.internal.js:
    com.google.android.gms.internal.fy tG -> a
    com.google.android.gms.internal.fm uk -> b
    void run() -> run
com.google.android.gms.internal.fn -> com.google.android.gms.internal.jt:
    android.content.Context mContext -> a
    com.google.android.gms.internal.gn ul -> b
    com.google.android.gms.internal.u pM -> c
    com.google.android.gms.internal.ai um -> d
    java.lang.Object mH -> e
    com.google.android.gms.internal.fy$a tB -> f
    boolean un -> g
    int tq -> h
    java.util.List uo -> i
    com.google.android.gms.internal.fy cM() -> a
    com.google.android.gms.internal.ah cN() -> c
    org.json.JSONObject c(com.google.android.gms.internal.ah) -> a
    com.google.android.gms.internal.fn$a b(org.json.JSONObject) -> a
    com.google.android.gms.internal.bv$a a(com.google.android.gms.internal.ah,com.google.android.gms.internal.fn$a,org.json.JSONObject) -> a
    com.google.android.gms.internal.fy a(com.google.android.gms.internal.bv$a) -> a
    java.util.concurrent.Future a(org.json.JSONObject,java.lang.String,boolean) -> a
    boolean cO() -> b
    void t(int) -> a
    void a(int,boolean) -> a
    java.lang.String[] b(org.json.JSONObject,java.lang.String) -> a
    java.lang.Object call() -> call
com.google.android.gms.internal.fn$1 -> com.google.android.gms.internal.ju:
    com.google.android.gms.internal.ah up -> a
    com.google.android.gms.internal.gj uq -> b
    com.google.android.gms.internal.fn ur -> c
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.fn$2 -> com.google.android.gms.internal.jv:
    boolean us -> a
    com.google.android.gms.internal.fn ur -> b
    android.graphics.drawable.Drawable cP() -> a
    android.graphics.drawable.Drawable a(java.io.InputStream) -> a
    java.lang.Object cQ() -> b
    java.lang.Object b(java.io.InputStream) -> b
com.google.android.gms.internal.fn$a -> com.google.android.gms.internal.jw:
    com.google.android.gms.internal.bv$a a(com.google.android.gms.internal.fn,org.json.JSONObject) -> a
com.google.android.gms.internal.fo -> com.google.android.gms.internal.jx:
    com.google.android.gms.internal.bt b(com.google.android.gms.internal.fn,org.json.JSONObject) -> b
    com.google.android.gms.internal.bv$a a(com.google.android.gms.internal.fn,org.json.JSONObject) -> a
com.google.android.gms.internal.fp -> com.google.android.gms.internal.jy:
    com.google.android.gms.internal.bu c(com.google.android.gms.internal.fn,org.json.JSONObject) -> b
    com.google.android.gms.internal.bv$a a(com.google.android.gms.internal.fn,org.json.JSONObject) -> a
com.google.android.gms.internal.fq -> com.google.android.gms.internal.jz:
    java.lang.Object ut -> a
    com.google.android.gms.internal.fq uu -> b
    android.content.Context mContext -> c
    com.google.android.gms.internal.fw uv -> d
    com.google.android.gms.internal.cn uw -> e
    com.google.android.gms.internal.bm ux -> f
    com.google.android.gms.internal.fq a(android.content.Context,com.google.android.gms.internal.bm,com.google.android.gms.internal.cn,com.google.android.gms.internal.fw) -> a
    com.google.android.gms.internal.fj a(android.content.Context,com.google.android.gms.internal.bm,com.google.android.gms.internal.cn,com.google.android.gms.internal.fw,com.google.android.gms.internal.fh) -> a
    com.google.android.gms.internal.gv$a I(java.lang.String) -> a
    void a(java.lang.String,java.util.Map,java.lang.String,int) -> a
    com.google.android.gms.internal.fj a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.google.android.gms.internal.fu) -> a
    com.google.android.gms.internal.fj b(com.google.android.gms.internal.fh) -> a
com.google.android.gms.internal.fq$1 -> com.google.android.gms.internal.ka:
    android.content.Context nf -> a
    com.google.android.gms.internal.fh uy -> b
    com.google.android.gms.internal.fs uz -> c
    com.google.android.gms.internal.gv$a uA -> d
    java.lang.String uB -> e
    void run() -> run
com.google.android.gms.internal.fq$2 -> com.google.android.gms.internal.kb:
    com.google.android.gms.internal.fs uz -> a
    void run() -> run
com.google.android.gms.internal.fq$3 -> com.google.android.gms.internal.kc:
    java.lang.String uC -> a
    void a(com.google.android.gms.internal.gu) -> a
com.google.android.gms.internal.fr -> com.google.android.gms.internal.kd:
    java.text.SimpleDateFormat uD -> a
    java.lang.String a(com.google.android.gms.internal.fh,com.google.android.gms.internal.fv,android.location.Location,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.util.HashMap,com.google.android.gms.internal.av) -> a
    void a(java.util.HashMap,com.google.android.gms.internal.fv) -> a
    void a(java.util.HashMap,android.location.Location) -> a
    void a(java.util.HashMap,com.google.android.gms.internal.bj) -> a
    java.lang.Integer u(boolean) -> a
    java.lang.String u(int) -> a
    com.google.android.gms.internal.fj a(android.content.Context,com.google.android.gms.internal.fh,java.lang.String) -> a
com.google.android.gms.internal.fs -> com.google.android.gms.internal.ke:
    java.lang.Object mH -> d
    java.lang.String uE -> e
    com.google.android.gms.internal.gj uF -> f
    com.google.android.gms.internal.gu mo -> a
    com.google.android.gms.internal.cd uG -> b
    com.google.android.gms.internal.cd uH -> c
    void b(com.google.android.gms.internal.gu) -> a
    java.util.concurrent.Future cR() -> a
    void cS() -> b
    java.lang.Object a(com.google.android.gms.internal.fs) -> a
    com.google.android.gms.internal.gj b(com.google.android.gms.internal.fs) -> b
    java.lang.String c(com.google.android.gms.internal.fs) -> c
com.google.android.gms.internal.fs$1 -> com.google.android.gms.internal.kf:
    com.google.android.gms.internal.fs uI -> a
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.fs$2 -> com.google.android.gms.internal.kg:
    com.google.android.gms.internal.fs uI -> a
    void a(com.google.android.gms.internal.gu,java.util.Map) -> a
com.google.android.gms.internal.ft -> com.google.android.gms.internal.kh:
    java.lang.String uJ -> a
    java.lang.String uK -> b
    java.lang.String pD -> c
    java.util.List uL -> d
    java.lang.String uM -> e
    java.lang.String uN -> f
    java.util.List uO -> g
    long uP -> h
    boolean uQ -> i
    long uR -> j
    java.util.List uo -> k
    long uS -> l
    int mOrientation -> m
    boolean uT -> n
    boolean uU -> o
    boolean uV -> p
    boolean uW -> q
    java.lang.String a(java.util.Map,java.lang.String) -> a
    long b(java.util.Map,java.lang.String) -> b
    java.util.List c(java.util.Map,java.lang.String) -> c
    boolean d(java.util.Map,java.lang.String) -> d
    com.google.android.gms.internal.fj i(long) -> a
    void a(java.lang.String,java.util.Map,java.lang.String) -> a
    void e(java.util.Map) -> a
    void f(java.util.Map) -> b
    void g(java.util.Map) -> c
    void h(java.util.Map) -> d
    void i(java.util.Map) -> e
    void j(java.util.Map) -> f
    void k(java.util.Map) -> g
    void l(java.util.Map) -> h
    void m(java.util.Map) -> i
    void n(java.util.Map) -> j
    void o(java.util.Map) -> k
    void p(java.util.Map) -> l
    void q(java.util.Map) -> m
    void r(java.util.Map) -> n
    void s(java.util.Map) -> o
com.google.android.gms.internal.fu -> com.google.android.gms.internal.ki:
    java.util.List uX -> a
    java.util.List uY -> b
    java.lang.String uZ -> c
    java.lang.String va -> d
    java.lang.String vb -> e
    java.lang.String vc -> f
    boolean vd -> g
    int ve -> h
    java.lang.String vf -> i
    int tq -> j
    boolean parseBoolean(java.lang.String) -> b
    java.util.List J(java.lang.String) -> c
    int parseInt(java.lang.String) -> d
    void setUrl(java.lang.String) -> a
    int getErrorCode() -> a
    java.util.List cT() -> b
    java.lang.String cU() -> c
    java.lang.String getUrl() -> d
    java.lang.String getType() -> e
    boolean cV() -> f
com.google.android.gms.internal.fv -> com.google.android.gms.internal.kj:
    int vg -> a
    boolean vh -> b
    boolean vi -> c
    java.lang.String vj -> d
    java.lang.String vk -> e
    boolean vl -> f
    boolean vm -> g
    boolean vn -> h
    java.lang.String vo -> i
    java.lang.String vp -> j
    int vq -> k
    int vr -> l
    int vs -> m
    int vt -> n
    int vu -> o
    int vv -> p
    float vw -> q
    int vx -> r
    int vy -> s
    double vz -> t
    boolean vA -> u
    boolean vB -> v
    int vC -> w
    java.lang.String a(android.content.pm.PackageManager) -> a
    int a(android.content.Context,android.net.ConnectivityManager,android.content.pm.PackageManager) -> a
    android.content.pm.ResolveInfo a(android.content.pm.PackageManager,java.lang.String) -> a
com.google.android.gms.internal.fw -> com.google.android.gms.internal.kl:
    java.lang.String K(java.lang.String) -> a
com.google.android.gms.internal.fx -> com.google.android.gms.internal.kn:
    java.lang.String K(java.lang.String) -> a
com.google.android.gms.internal.fy -> com.google.android.gms.internal.kp:
    com.google.android.gms.internal.av tL -> a
    com.google.android.gms.internal.gu se -> b
    java.util.List qw -> c
    int errorCode -> d
    java.util.List qx -> e
    java.util.List tY -> f
    int orientation -> g
    long qA -> h
    java.lang.String tO -> i
    org.json.JSONObject vD -> j
    boolean tW -> k
    com.google.android.gms.internal.cq qP -> l
    com.google.android.gms.internal.cz qQ -> m
    java.lang.String qR -> n
    com.google.android.gms.internal.cr vE -> o
    com.google.android.gms.internal.ct qS -> p
    long tX -> q
    com.google.android.gms.internal.ay vF -> r
    long tV -> s
    long vG -> t
    long vH -> u
    java.lang.String ub -> v
    com.google.android.gms.internal.bv$a vI -> w
com.google.android.gms.internal.fy$a -> com.google.android.gms.internal.kq:
    com.google.android.gms.internal.fh vJ -> a
    com.google.android.gms.internal.fj vK -> b
    com.google.android.gms.internal.cr vE -> c
    com.google.android.gms.internal.ay lS -> d
    int errorCode -> e
    long vG -> f
    long vH -> g
    org.json.JSONObject vD -> h
com.google.android.gms.internal.fz -> com.google.android.gms.internal.kt:
    com.google.android.gms.internal.ga vL -> a
    java.util.LinkedList vM -> b
    java.lang.Object mH -> c
    java.lang.String vN -> d
    java.lang.String vO -> e
    long vP -> f
    long vQ -> g
    boolean uQ -> h
    long vR -> i
    long vS -> j
    long vT -> k
    long vU -> l
    void e(com.google.android.gms.internal.av) -> a
    void j(long) -> a
    void k(long) -> b
    void cW() -> a
    void cX() -> b
    void cY() -> c
    void v(boolean) -> a
    void w(boolean) -> b
    android.os.Bundle toBundle() -> d
com.google.android.gms.internal.fz$a -> com.google.android.gms.internal.ku:
    long vV -> a
    long vW -> b
    long cZ() -> a
    void da() -> b
    void db() -> c
    android.os.Bundle toBundle() -> d
com.google.android.gms.internal.g -> com.google.android.gms.internal.kw:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(android.view.MotionEvent) -> a
    void a(int,int,int) -> a
com.google.android.gms.internal.ga -> com.google.android.gms.internal.kx:
    com.google.android.gms.internal.ga vX -> c
    java.lang.String vY -> a
    java.lang.String vZ -> b
    java.lang.Object mH -> d
    com.google.android.gms.internal.gb wa -> e
    com.google.android.gms.internal.ld wb -> f
    java.math.BigInteger wc -> g
    java.util.HashSet wd -> h
    java.util.HashMap we -> i
    boolean wf -> j
    boolean uV -> k
    boolean wg -> l
    android.content.Context mContext -> m
    com.google.android.gms.internal.gs qJ -> n
    boolean uW -> o
    com.google.android.gms.internal.am nE -> p
    com.google.android.gms.internal.an wh -> q
    com.google.android.gms.internal.al nF -> r
    java.util.LinkedList wi -> s
    boolean wj -> t
    android.os.Bundle wk -> u
    com.google.android.gms.internal.ex nG -> v
    java.lang.String wl -> w
    com.google.android.gms.internal.ga dc() -> a
    com.google.android.gms.internal.an l(android.content.Context) -> a
    com.google.android.gms.internal.ld dd() -> b
    void x(boolean) -> a
    boolean de() -> c
    java.lang.String df() -> d
    java.lang.String dg() -> e
    void a(com.google.android.gms.internal.fz) -> a
    com.google.android.gms.internal.gb dh() -> f
    com.google.android.gms.internal.gb di() -> g
    void b(java.util.HashSet) -> a
    void c(java.util.HashSet) -> b
    void a(java.lang.String,com.google.android.gms.internal.gd) -> a
    boolean dj() -> h
    boolean dk() -> i
    void a(android.content.Context,boolean) -> a
    void b(android.content.Context,boolean) -> b
    boolean dl() -> j
    boolean dm() -> k
    java.lang.String dn() -> l
    java.lang.String do() -> m
    void a(android.content.Context,com.google.android.gms.internal.gs) -> a
    void b(android.content.Context,com.google.android.gms.internal.gs) -> b
    android.os.Bundle a(android.content.Context,com.google.android.gms.internal.gc,java.lang.String) -> a
    android.os.Bundle b(android.content.Context,com.google.android.gms.internal.gc,java.lang.String) -> b
    java.lang.String c(int,java.lang.String) -> a
    java.lang.String d(int,java.lang.String) -> b
    void a(android.os.Bundle) -> a
    android.os.Bundle bN() -> n
    android.os.Bundle dp() -> o
    void a(java.lang.Thread) -> a
    void e(java.lang.Throwable) -> a
    void f(java.lang.Throwable) -> b
com.google.android.gms.internal.gb -> com.google.android.gms.internal.kz:
    java.lang.Object mH -> a
    java.lang.String vZ -> b
    int wm -> c
    long wn -> d
    long wo -> e
    int wp -> f
    int wq -> g
    long dq() -> a
    void cX() -> b
    void cW() -> c
    void b(com.google.android.gms.internal.av,long) -> a
    android.os.Bundle b(android.content.Context,java.lang.String) -> a
    boolean m(android.content.Context) -> a
com.google.android.gms.internal.gc -> com.google.android.gms.internal.la:
    void a(java.util.HashSet) -> a
com.google.android.gms.internal.gd -> com.google.android.gms.internal.lb:
    java.lang.Object mH -> a
    int wr -> b
    int ws -> c
    com.google.android.gms.internal.ga vL -> d
    java.lang.String vO -> e
    void d(int,int) -> a
    android.os.Bundle toBundle() -> a
com.google.android.gms.internal.ge -> com.google.android.gms.internal.lc:
    java.lang.Object ut -> a
    java.lang.String wt -> b
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String dr() -> a
    void b(android.content.Context,java.lang.String,java.lang.String) -> b
com.google.android.gms.internal.gf -> com.google.android.gms.internal.ld:
    java.lang.Runnable mv -> a
    java.lang.Thread wu -> b
    void start() -> e
    void cancel() -> f
    void onStop() -> b
    void cx() -> a
    java.lang.Thread a(com.google.android.gms.internal.gf,java.lang.Thread) -> a
com.google.android.gms.internal.gf$1 -> com.google.android.gms.internal.le:
    com.google.android.gms.internal.gf wv -> a
    void run() -> run
com.google.android.gms.internal.gg -> com.google.android.gms.internal.lf:
    android.content.SharedPreferences n(android.content.Context) -> b
    void a(android.content.Context,boolean) -> a
    boolean o(android.content.Context) -> a
com.google.android.gms.internal.gh -> com.google.android.gms.internal.lg:
    java.util.concurrent.ThreadFactory ww -> a
    java.util.concurrent.ExecutorService wx -> b
    java.util.concurrent.Future a(java.lang.Runnable) -> a
    java.util.concurrent.Future submit(java.util.concurrent.Callable) -> a
com.google.android.gms.internal.gh$1 -> com.google.android.gms.internal.lh:
    java.lang.Runnable wy -> a
    java.lang.Void ds() -> a
    java.lang.Object call() -> call
com.google.android.gms.internal.gh$2 -> com.google.android.gms.internal.li:
    java.util.concurrent.Callable wz -> a
    java.lang.Object call() -> call
com.google.android.gms.internal.gh$3 -> com.google.android.gms.internal.lj:
    java.util.concurrent.atomic.AtomicInteger wA -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.google.android.gms.internal.gi -> com.google.android.gms.internal.lk:
    java.lang.Object ut -> a
    java.text.SimpleDateFormat[] wB -> b
    boolean wC -> c
    java.lang.String wD -> d
    boolean wE -> e
    void a(android.content.Context,java.lang.String,boolean,java.net.HttpURLConnection) -> a
    void a(android.content.Context,java.lang.String,boolean,java.net.HttpURLConnection,boolean) -> a
    void a(android.content.Context,java.lang.String,boolean,java.net.HttpURLConnection,java.lang.String) -> a
    boolean p(android.content.Context) -> a
    boolean a(android.content.pm.PackageManager,java.lang.String,java.lang.String) -> a
    boolean dt() -> a
    int du() -> b
    int dv() -> c
    void a(android.content.Context,java.lang.String,java.util.List) -> a
    void c(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.util.List,java.lang.String) -> a
    java.lang.String a(java.lang.Readable) -> a
    void q(android.content.Context) -> b
    void a(android.content.Context,java.lang.String,android.webkit.WebSettings) -> a
    java.lang.String dw() -> d
    java.lang.String c(android.content.Context,java.lang.String) -> a
    java.lang.String r(android.content.Context) -> f
    boolean a(java.lang.ClassLoader,java.lang.Class,java.lang.String) -> a
    java.lang.String L(java.lang.String) -> a
    org.json.JSONObject t(java.util.Map) -> a
    org.json.JSONObject c(android.os.Bundle) -> a
    org.json.JSONArray a(java.util.Collection) -> a
    org.json.JSONArray a(java.lang.Object[]) -> a
    void a(org.json.JSONArray,java.lang.Object) -> a
    void a(org.json.JSONObject,java.lang.String,java.lang.Object) -> a
    java.util.Map c(android.net.Uri) -> a
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
    java.lang.String dx() -> e
    int s(android.content.Context) -> c
    int M(java.lang.String) -> b
    int[] t(android.content.Context) -> d
    boolean N(java.lang.String) -> c
    long O(java.lang.String) -> d
    boolean y(boolean) -> a
    java.lang.Object dy() -> f
    java.lang.String P(java.lang.String) -> e
    java.lang.String u(android.content.Context) -> e
com.google.android.gms.internal.gi$1 -> com.google.android.gms.internal.ll:
    android.content.Context nf -> a
    void run() -> run
com.google.android.gms.internal.gi$a -> com.google.android.gms.internal.lm:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.android.gms.internal.gj -> com.google.android.gms.internal.ln:
    java.lang.Object mH -> a
    java.lang.Object wF -> b
    boolean wG -> c
    boolean qj -> d
    void a(java.lang.Object) -> a
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
com.google.android.gms.internal.gk -> com.google.android.gms.internal.lo:
    java.lang.Object wF -> a
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
com.google.android.gms.internal.gl -> com.google.android.gms.internal.lp:
    android.content.Context mContext -> a
    java.lang.String wH -> b
    float rz -> c
    float wI -> d
    float wJ -> e
    float wK -> f
    int mState -> g
    void c(android.view.MotionEvent) -> a
    void a(int,float,float) -> a
    void Q(java.lang.String) -> a
    void showDialog() -> a
    android.content.Context a(com.google.android.gms.internal.gl) -> a
com.google.android.gms.internal.gl$1 -> com.google.android.gms.internal.lq:
    java.lang.String wL -> a
    com.google.android.gms.internal.gl wM -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.gl$2 -> com.google.android.gms.internal.lr:
    com.google.android.gms.internal.gl wM -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.gm -> com.google.android.gms.internal.ls:
    void a(android.content.Context,android.webkit.WebSettings) -> a
    void i(android.view.View) -> a
    void j(android.view.View) -> b
    void a(android.view.Window) -> a
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
com.google.android.gms.internal.gn -> com.google.android.gms.internal.lt:
    com.google.android.gms.internal.gn$a wN -> a
    java.util.concurrent.Future a(java.lang.String,com.google.android.gms.internal.gn$a) -> a
com.google.android.gms.internal.gn$1 -> com.google.android.gms.internal.lu:
    java.lang.Void c(java.io.InputStream) -> a
    java.lang.Void dz() -> a
    java.lang.Object cQ() -> b
    java.lang.Object b(java.io.InputStream) -> b
com.google.android.gms.internal.gn$2 -> com.google.android.gms.internal.lv:
    java.lang.String wO -> a
    com.google.android.gms.internal.gn$a wP -> b
    com.google.android.gms.internal.gn wQ -> c
    java.lang.Object call() -> call
com.google.android.gms.internal.gn$a -> com.google.android.gms.internal.lw:
    java.lang.Object b(java.io.InputStream) -> b
    java.lang.Object cQ() -> b
com.google.android.gms.internal.go -> com.google.android.gms.internal.lx:
    void a(android.content.Context,android.webkit.WebSettings) -> a
    java.lang.String getDefaultUserAgent(android.content.Context) -> a
com.google.android.gms.internal.gp -> com.google.android.gms.internal.ly:
    java.lang.String mG -> a
    android.content.Context mContext -> b
    java.lang.String vf -> c
    java.lang.String wl -> d
    void onStop() -> b
    void cx() -> a
com.google.android.gms.internal.gq -> com.google.android.gms.internal.lz:
    android.os.Handler wR -> a
    int a(android.content.Context,int) -> a
    int a(android.util.DisplayMetrics,int) -> a
    void a(android.view.ViewGroup,com.google.android.gms.internal.ay,java.lang.String,java.lang.String) -> a
    void a(android.view.ViewGroup,com.google.android.gms.internal.ay,java.lang.String) -> a
    void a(android.view.ViewGroup,com.google.android.gms.internal.ay,java.lang.String,int,int) -> a
    java.lang.String v(android.content.Context) -> a
    boolean dA() -> a
    boolean dB() -> b
    java.lang.String R(java.lang.String) -> a
com.google.android.gms.internal.gr -> com.google.android.gms.internal.ma:
    void S(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void T(java.lang.String) -> b
    void b(java.lang.String,java.lang.Throwable) -> b
    void U(java.lang.String) -> c
    void c(java.lang.String,java.lang.Throwable) -> c
    void V(java.lang.String) -> d
    void W(java.lang.String) -> e
    void d(java.lang.String,java.lang.Throwable) -> d
    boolean v(int) -> a
com.google.android.gms.internal.gs -> com.google.android.gms.internal.gs:
    com.google.android.gms.internal.gt CREATOR -> a
    int versionCode -> b
    java.lang.String wS -> c
    int wT -> d
    int wU -> e
    boolean wV -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.gt -> com.google.android.gms.internal.mb:
    com.google.android.gms.internal.gs j(android.os.Parcel) -> a
    com.google.android.gms.internal.gs[] w(int) -> a
    void a(com.google.android.gms.internal.gs,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.gu -> com.google.android.gms.internal.mc:
    com.google.android.gms.internal.gv wW -> a
    com.google.android.gms.internal.gu$a wX -> b
    java.lang.Object mH -> c
    com.google.android.gms.internal.k tl -> d
    com.google.android.gms.internal.gs qJ -> e
    com.google.android.gms.internal.dp wY -> f
    com.google.android.gms.internal.ay qI -> g
    boolean wZ -> h
    boolean xa -> i
    boolean xb -> j
    boolean xc -> k
    android.view.WindowManager mR -> l
    com.google.android.gms.internal.gu a(android.content.Context,com.google.android.gms.internal.ay,boolean,boolean,com.google.android.gms.internal.k,com.google.android.gms.internal.gs) -> a
    void cb() -> a
    void a(java.lang.String,java.util.Map) -> a
    void evaluateJavascript(java.lang.String,android.webkit.ValueCallback) -> evaluateJavascript
    void X(java.lang.String) -> a
    void a(java.lang.String,org.json.JSONObject) -> a
    void b(java.lang.String,org.json.JSONObject) -> b
    void cj() -> b
    void ci() -> c
    com.google.android.gms.internal.dp dC() -> d
    com.google.android.gms.internal.ay ac() -> e
    com.google.android.gms.internal.gv dD() -> f
    boolean dE() -> g
    com.google.android.gms.internal.k dF() -> h
    com.google.android.gms.internal.gs dG() -> i
    boolean dH() -> j
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onMeasure(int,int) -> onMeasure
    void a(android.content.Context,com.google.android.gms.internal.ay) -> a
    void a(com.google.android.gms.internal.dp) -> a
    void a(com.google.android.gms.internal.ay) -> a
    void z(boolean) -> a
    void setContext(android.content.Context) -> setContext
    void q(boolean) -> b
    android.content.Context dI() -> k
    void dJ() -> m
    void dK() -> n
    void dL() -> o
    void destroy() -> destroy
    boolean isDestroyed() -> l
com.google.android.gms.internal.gu$a -> com.google.android.gms.internal.md:
    android.app.Activity xd -> a
    android.content.Context mO -> b
    void setBaseContext(android.content.Context) -> setBaseContext
    void startActivity(android.content.Intent) -> startActivity
    android.content.Context dI() -> a
com.google.android.gms.internal.gv -> com.google.android.gms.internal.me:
    com.google.android.gms.internal.gu mo -> a
    java.util.HashMap xe -> b
    java.lang.Object mH -> c
    com.google.android.gms.internal.t xf -> d
    com.google.android.gms.internal.ds xg -> e
    com.google.android.gms.internal.gv$a tu -> f
    com.google.android.gms.internal.cb pP -> g
    boolean xh -> h
    com.google.android.gms.internal.ce qc -> i
    com.google.android.gms.internal.cg qa -> j
    boolean xi -> k
    com.google.android.gms.internal.dv xj -> l
    com.google.android.gms.internal.dl xk -> m
    com.google.android.gms.internal.v qd -> n
    boolean d(android.net.Uri) -> a
    void a(com.google.android.gms.internal.t,com.google.android.gms.internal.ds,com.google.android.gms.internal.cb,com.google.android.gms.internal.dv,boolean,com.google.android.gms.internal.ce,com.google.android.gms.internal.v) -> a
    void a(com.google.android.gms.internal.t,com.google.android.gms.internal.ds,com.google.android.gms.internal.cb,com.google.android.gms.internal.dv,boolean,com.google.android.gms.internal.ce,com.google.android.gms.internal.cg,com.google.android.gms.internal.v) -> a
    com.google.android.gms.internal.v dM() -> a
    boolean dN() -> b
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void dO() -> c
    void a(com.google.android.gms.internal.do) -> a
    void a(boolean,int) -> a
    void a(boolean,int,java.lang.String) -> a
    void a(boolean,int,java.lang.String,java.lang.String) -> a
    void a(com.google.android.gms.internal.dr) -> a
    void a(java.lang.String,com.google.android.gms.internal.cd) -> a
    void reset() -> d
    void a(com.google.android.gms.internal.gv$a) -> a
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void A(boolean) -> a
    void cg() -> e
    void e(android.net.Uri) -> b
com.google.android.gms.internal.gv$1 -> com.google.android.gms.internal.mf:
    com.google.android.gms.internal.dp xl -> a
    com.google.android.gms.internal.gv xm -> b
    void run() -> run
com.google.android.gms.internal.gv$a -> com.google.android.gms.internal.mg:
    void a(com.google.android.gms.internal.gu) -> a
com.google.android.gms.internal.gw -> com.google.android.gms.internal.mh:
    com.google.android.gms.internal.gu mo -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean) -> a
    void a(android.app.AlertDialog$Builder,java.lang.String,android.webkit.JsResult) -> a
    void a(android.content.Context,android.app.AlertDialog$Builder,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> a
    boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message) -> onCreateWindow
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    void onHideCustomView() -> onHideCustomView
    android.content.Context c(android.webkit.WebView) -> a
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    void a(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback) -> a
com.google.android.gms.internal.gw$1 -> com.google.android.gms.internal.mi:
    android.webkit.JsResult xn -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.android.gms.internal.gw$2 -> com.google.android.gms.internal.mj:
    android.webkit.JsResult xn -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.gw$3 -> com.google.android.gms.internal.mk:
    android.webkit.JsResult xn -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.gw$4 -> com.google.android.gms.internal.ml:
    android.webkit.JsPromptResult xo -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.android.gms.internal.gw$5 -> com.google.android.gms.internal.mm:
    android.webkit.JsPromptResult xo -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.gw$6 -> com.google.android.gms.internal.mn:
    android.webkit.JsPromptResult xo -> a
    android.widget.EditText xp -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.android.gms.internal.gw$7 -> com.google.android.gms.internal.mo:
    int[] xq -> a
com.google.android.gms.internal.gx -> com.google.android.gms.internal.mp:
    android.webkit.WebResourceResponse d(android.content.Context,java.lang.String,java.lang.String) -> a
    android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
com.google.android.gms.internal.gy -> com.google.android.gms.internal.mr:
    void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
com.google.android.gms.internal.gz -> com.google.android.gms.internal.mt:
    java.lang.String xr -> a
    boolean xs -> b
    com.google.android.gms.internal.gu mo -> c
    com.google.android.gms.internal.fb xt -> d
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    boolean Y(java.lang.String) -> a
    java.lang.String Z(java.lang.String) -> b
com.google.android.gms.internal.h -> com.google.android.gms.internal.mu:
    android.view.MotionEvent kw -> a
    android.util.DisplayMetrics kx -> b
    com.google.android.gms.internal.m ky -> c
    com.google.android.gms.internal.n kz -> d
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(android.view.MotionEvent) -> a
    void a(int,int,int) -> a
    java.lang.String a(android.content.Context,java.lang.String,boolean) -> a
    void a(int,long) -> a
    void a(int,java.lang.String) -> a
    void t() -> a
    byte[] u() -> b
    java.lang.String a(byte[],java.lang.String) -> a
    void a(java.lang.String,byte[]) -> a
com.google.android.gms.internal.ha -> com.google.android.gms.internal.ha:
    java.lang.String CE -> a
    java.lang.String CF -> b
    java.lang.String mValue -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel) -> a
com.google.android.gms.internal.ha$1 -> com.google.android.gms.internal.mv:
    com.google.android.gms.internal.ha k(android.os.Parcel) -> a
    com.google.android.gms.internal.ha[] I(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hd -> com.google.android.gms.internal.hd:
    com.google.android.gms.internal.he CREATOR -> a
    int CK -> b
    com.google.android.gms.internal.hh[] CL -> c
    java.lang.String CM -> d
    boolean CN -> e
    android.accounts.Account account -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.he -> com.google.android.gms.internal.mw:
    com.google.android.gms.internal.hd l(android.os.Parcel) -> a
    com.google.android.gms.internal.hd[] J(int) -> a
    void a(com.google.android.gms.internal.hd,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hf -> com.google.android.gms.internal.hf:
    com.google.android.gms.internal.hg CREATOR -> a
    int CK -> b
    java.lang.String CS -> c
    java.lang.String CT -> d
    java.lang.String CU -> e
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.hg -> com.google.android.gms.internal.mx:
    com.google.android.gms.internal.hf m(android.os.Parcel) -> a
    com.google.android.gms.internal.hf[] K(int) -> a
    void a(com.google.android.gms.internal.hf,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hh -> com.google.android.gms.internal.hh:
    int CV -> a
    com.google.android.gms.internal.hi CREATOR -> b
    com.google.android.gms.internal.hp CW -> h
    int CK -> c
    java.lang.String CX -> d
    com.google.android.gms.internal.hp CY -> e
    int CZ -> f
    byte[] Da -> g
    java.lang.String fE() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.hi -> com.google.android.gms.internal.my:
    com.google.android.gms.internal.hh n(android.os.Parcel) -> a
    com.google.android.gms.internal.hh[] L(int) -> a
    void a(com.google.android.gms.internal.hh,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hj -> com.google.android.gms.internal.hj:
    com.google.android.gms.internal.hk CREATOR -> a
    int CK -> b
    int id -> c
    android.os.Bundle Db -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.hk -> com.google.android.gms.internal.mz:
    com.google.android.gms.internal.hj o(android.os.Parcel) -> a
    com.google.android.gms.internal.hj[] M(int) -> a
    void a(com.google.android.gms.internal.hj,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hl -> com.google.android.gms.internal.hl:
com.google.android.gms.internal.hl$a -> com.google.android.gms.internal.hl$a:
    com.google.android.gms.internal.hm CREATOR -> a
    int CK -> b
    android.accounts.Account Dc -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.hl$b -> com.google.android.gms.internal.hl$b:
    com.google.android.gms.common.api.Status Dd -> a
    java.util.List De -> b
    com.google.android.gms.internal.hn CREATOR -> c
    int CK -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.hm -> com.google.android.gms.internal.na:
    com.google.android.gms.internal.hl$a p(android.os.Parcel) -> a
    com.google.android.gms.internal.hl$a[] N(int) -> a
    void a(com.google.android.gms.internal.hl$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hn -> com.google.android.gms.internal.nb:
    com.google.android.gms.internal.hl$b q(android.os.Parcel) -> a
    com.google.android.gms.internal.hl$b[] O(int) -> a
    void a(com.google.android.gms.internal.hl$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ho -> com.google.android.gms.internal.nc:
    java.lang.String[] Df -> a
    java.util.Map Dg -> b
    java.lang.String P(int) -> a
com.google.android.gms.internal.hp -> com.google.android.gms.internal.hp:
    com.google.android.gms.internal.hq CREATOR -> a
    int CK -> b
    java.lang.String name -> c
    java.lang.String Dh -> d
    boolean Di -> e
    int weight -> f
    boolean Dj -> g
    java.lang.String Dk -> h
    com.google.android.gms.internal.hj[] Dl -> i
    int[] Dm -> j
    java.lang.String Dn -> k
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.internal.hp$a -> com.google.android.gms.internal.ne:
    java.lang.String mName -> a
    java.lang.String Do -> b
    boolean Dp -> c
    int Dq -> d
    boolean Dr -> e
    java.lang.String Ds -> f
    java.util.List Dt -> g
    java.util.BitSet Du -> h
    java.lang.String Dv -> i
    com.google.android.gms.internal.hp$a at(java.lang.String) -> a
    com.google.android.gms.internal.hp$a G(boolean) -> a
    com.google.android.gms.internal.hp fG() -> a
com.google.android.gms.internal.hq -> com.google.android.gms.internal.nf:
    com.google.android.gms.internal.hp r(android.os.Parcel) -> a
    com.google.android.gms.internal.hp[] R(int) -> a
    void a(com.google.android.gms.internal.hp,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.hr -> com.google.android.gms.internal.hr:
    com.google.android.gms.internal.hs CREATOR -> a
    int CK -> b
    com.google.android.gms.internal.hf Dw -> c
    long Dx -> d
    int Dy -> e
    java.lang.String pc -> f
    com.google.android.gms.internal.hd Dz -> g
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.google.android.gms.internal.hs -> com.google.android.gms.internal.ng:
    com.google.android.gms.internal.hr s(android.os.Parcel) -> a
    com.google.android.gms.internal.hr[] S(int) -> a
    void a(com.google.android.gms.internal.hr,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.i -> com.google.android.gms.internal.nh:
    java.lang.reflect.Method kA -> e
    java.lang.reflect.Method kB -> f
    java.lang.reflect.Method kC -> g
    java.lang.reflect.Method kD -> h
    java.lang.reflect.Method kE -> i
    java.lang.reflect.Method kF -> j
    java.lang.reflect.Method kG -> k
    java.lang.reflect.Method kH -> l
    java.lang.reflect.Method kI -> m
    java.lang.String kJ -> n
    java.lang.String kK -> o
    java.lang.String kL -> p
    long startTime -> q
    com.google.android.gms.internal.o kM -> r
    boolean kN -> d
    void a(java.lang.String,android.content.Context,com.google.android.gms.internal.m) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    java.lang.String v() -> a
    java.lang.Long w() -> b
    java.lang.String d(android.content.Context) -> d
    java.lang.String x() -> c
    java.util.ArrayList a(android.view.MotionEvent,android.util.DisplayMetrics) -> a
    java.lang.String a(android.content.Context,com.google.android.gms.internal.m) -> a
    java.util.ArrayList e(android.content.Context) -> e
    java.lang.String b(android.content.Context,com.google.android.gms.internal.m) -> b
    java.lang.Long y() -> d
    int[] f(android.content.Context) -> f
    java.lang.String b(byte[],java.lang.String) -> b
    void g(android.content.Context) -> g
com.google.android.gms.internal.i$a -> com.google.android.gms.internal.ni:
com.google.android.gms.internal.if -> com.google.android.gms.internal.if:
    com.google.android.gms.internal.ig CREATOR -> a
    int versionCode -> b
    int responseCode -> c
    android.os.Bundle Ep -> d
    byte[] Eq -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.ig -> com.google.android.gms.internal.nj:
    com.google.android.gms.internal.if t(android.os.Parcel) -> a
    com.google.android.gms.internal.if[] U(int) -> a
    void a(com.google.android.gms.internal.if,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ij -> com.google.android.gms.internal.ij:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String Hd -> b
    int getVersionCode() -> a
    java.lang.String fT() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.internal.ik -> com.google.android.gms.internal.nk:
    com.google.android.gms.internal.ij x(android.os.Parcel) -> a
    com.google.android.gms.internal.ij[] ac(int) -> a
    void a(com.google.android.gms.internal.ij,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.in -> com.google.android.gms.internal.nm:
    boolean a(java.lang.Object,java.lang.Object) -> a
    java.lang.String b(java.util.Locale) -> a
com.google.android.gms.internal.io -> com.google.android.gms.internal.io:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    double Gp -> b
    boolean Gq -> c
    int Hr -> d
    com.google.android.gms.cast.ApplicationMetadata HD -> e
    int Hs -> f
    int getVersionCode() -> a
    double fZ() -> b
    boolean gi() -> c
    int gj() -> d
    int gk() -> e
    com.google.android.gms.cast.ApplicationMetadata getApplicationMetadata() -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.internal.ip -> com.google.android.gms.internal.no:
    com.google.android.gms.internal.io y(android.os.Parcel) -> a
    com.google.android.gms.internal.io[] ai(int) -> a
    void a(com.google.android.gms.internal.io,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.iy -> com.google.android.gms.internal.np:
    java.lang.Object mH -> c
    com.google.android.gms.internal.iy$a KO -> d
    java.lang.String KP -> a
    java.lang.Object KQ -> b
    java.lang.Object KR -> e
    void H(android.content.Context) -> a
    java.lang.String getKey() -> a
    com.google.android.gms.internal.iy h(java.lang.String,boolean) -> a
    com.google.android.gms.internal.iy a(java.lang.String,java.lang.Integer) -> a
    com.google.android.gms.internal.iy l(java.lang.String,java.lang.String) -> a
com.google.android.gms.internal.iy$1 -> com.google.android.gms.internal.nr:
com.google.android.gms.internal.iy$2 -> com.google.android.gms.internal.nt:
com.google.android.gms.internal.iy$3 -> com.google.android.gms.internal.nv:
com.google.android.gms.internal.iy$a -> com.google.android.gms.internal.nx:
com.google.android.gms.internal.iy$b -> com.google.android.gms.internal.nz:
    android.content.ContentResolver mContentResolver -> a
com.google.android.gms.internal.j -> com.google.android.gms.internal.ob:
    com.google.android.gms.ads.identifier.AdvertisingIdClient kO -> e
    java.util.concurrent.CountDownLatch kP -> f
    boolean kQ -> g
    com.google.android.gms.internal.j a(java.lang.String,android.content.Context) -> a
    com.google.android.gms.internal.j$a z() -> e
    void b(android.content.Context) -> b
    com.google.android.gms.ads.identifier.AdvertisingIdClient A() -> f
    boolean a(boolean) -> a
    com.google.android.gms.ads.identifier.AdvertisingIdClient a(com.google.android.gms.ads.identifier.AdvertisingIdClient) -> a
    java.util.concurrent.CountDownLatch B() -> g
com.google.android.gms.internal.j$1 -> com.google.android.gms.internal.od:
    java.lang.Void a(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.google.android.gms.internal.j$a -> com.google.android.gms.internal.of:
    java.lang.String kR -> b
    boolean kS -> c
    com.google.android.gms.internal.j kT -> a
    java.lang.String getId() -> a
    boolean isLimitAdTrackingEnabled() -> b
com.google.android.gms.internal.ja -> com.google.android.gms.internal.og:
    android.graphics.Bitmap a(android.graphics.Bitmap) -> a
    android.graphics.drawable.Drawable a(android.content.res.Resources,android.graphics.drawable.Drawable) -> a
    android.graphics.Bitmap a(android.graphics.drawable.Drawable) -> a
com.google.android.gms.internal.jc -> com.google.android.gms.internal.oi:
com.google.android.gms.internal.jc$a -> com.google.android.gms.internal.oj:
    int Mt -> a
    int Mu -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.internal.je -> com.google.android.gms.internal.ok:
    void f(java.lang.Object) -> a
    void K(boolean) -> a
    void a(boolean,java.lang.Object) -> a
    void aU(java.lang.String) -> a
    void aV(java.lang.String) -> b
com.google.android.gms.internal.jf -> com.google.android.gms.internal.ol:
    boolean Mv -> a
    boolean hl() -> a
com.google.android.gms.internal.jg -> com.google.android.gms.internal.jg:
com.google.android.gms.internal.jg$a -> com.google.android.gms.internal.jg$a:
    com.google.android.gms.internal.jw CREATOR -> a
    int CK -> b
    java.lang.String DZ -> c
    java.util.List Kh -> d
    int JI -> e
    java.lang.String JK -> f
    java.lang.String getAccountName() -> a
    int hn() -> b
    java.lang.String hq() -> c
    java.util.List ho() -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> e
com.google.android.gms.internal.ji -> com.google.android.gms.internal.ji:
    java.lang.Object Mz -> a
    java.lang.ClassLoader MA -> b
    java.lang.Integer MB -> c
    boolean MC -> d
    java.lang.ClassLoader hs() -> C
    java.lang.Integer ht() -> D
    boolean hu() -> E
    boolean aW(java.lang.String) -> b
    boolean a(java.lang.Class) -> a
com.google.android.gms.internal.jj -> com.google.android.gms.internal.jj:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int version -> a
    int MD -> b
    int ME -> c
    java.lang.String MF -> d
    android.os.IBinder MG -> e
    com.google.android.gms.common.api.Scope[] MH -> f
    android.os.Bundle MI -> g
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.jk -> com.google.android.gms.internal.om:
    com.google.android.gms.internal.jj D(android.os.Parcel) -> a
    com.google.android.gms.internal.jj[] aC(int) -> a
    void a(com.google.android.gms.internal.jj,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.jl -> com.google.android.gms.internal.on:
    android.content.Context mContext -> a
    android.os.Looper JF -> e
    android.os.Handler mHandler -> b
    java.lang.Object mH -> f
    android.os.IInterface MJ -> g
    java.util.ArrayList MK -> h
    com.google.android.gms.internal.jl$f ML -> i
    int MM -> j
    java.lang.String[] MN -> k
    boolean MO -> c
    com.google.android.gms.internal.jm JS -> l
    java.lang.String[] MP -> d
    void c(java.lang.String[]) -> a
    java.lang.String bK() -> a
    java.lang.String bL() -> b
    android.os.IInterface l(android.os.IBinder) -> b
    void a(int,android.os.IInterface) -> a
    boolean a(int,int,android.os.IInterface) -> a
    void connect() -> d
    boolean isConnected() -> e
    boolean isConnecting() -> f
    void disconnect() -> g
    void aD(int) -> a
    android.content.Context getContext() -> h
    void N(android.os.IBinder) -> c
    void a(com.google.android.gms.internal.jt,com.google.android.gms.internal.jl$e) -> a
    void a(int,android.os.IBinder,android.os.Bundle) -> a
    void dS() -> i
    android.os.Bundle fX() -> j
    android.os.IInterface hw() -> k
    boolean gN() -> l
    void registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks) -> a
    void registerConnectionFailedListener(com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener) -> a
    com.google.android.gms.internal.jm a(com.google.android.gms.internal.jl) -> a
    void a(com.google.android.gms.internal.jl,int,android.os.IInterface) -> a
    boolean a(com.google.android.gms.internal.jl,int,int,android.os.IInterface) -> a
    java.util.ArrayList b(com.google.android.gms.internal.jl) -> b
    com.google.android.gms.internal.jl$f c(com.google.android.gms.internal.jl) -> c
    android.content.Context d(com.google.android.gms.internal.jl) -> d
    com.google.android.gms.internal.jl$f a(com.google.android.gms.internal.jl,com.google.android.gms.internal.jl$f) -> a
com.google.android.gms.internal.jl$a -> com.google.android.gms.internal.oo:
    com.google.android.gms.internal.jl MQ -> a
    void handleMessage(android.os.Message) -> handleMessage
com.google.android.gms.internal.jl$b -> com.google.android.gms.internal.op:
    java.lang.Object mListener -> b
    boolean MR -> c
    com.google.android.gms.internal.jl MQ -> a
    void g(java.lang.Object) -> a
    void hx() -> a
    void hy() -> b
    void unregister() -> c
    void hz() -> d
com.google.android.gms.internal.jl$e -> com.google.android.gms.internal.oq:
    com.google.android.gms.internal.jl MT -> a
    void b(int,android.os.IBinder,android.os.Bundle) -> a
com.google.android.gms.internal.jl$f -> com.google.android.gms.internal.os:
    com.google.android.gms.internal.jl MQ -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.android.gms.internal.jl$h -> com.google.android.gms.internal.ot:
    int statusCode -> b
    android.os.Bundle MV -> c
    android.os.IBinder MW -> d
    com.google.android.gms.internal.jl MQ -> e
    void b(java.lang.Boolean) -> a
    void hx() -> a
    void g(java.lang.Object) -> a
com.google.android.gms.internal.jm -> com.google.android.gms.internal.ou:
    com.google.android.gms.internal.jm$b MX -> b
    java.util.ArrayList MY -> c
    java.util.ArrayList MZ -> a
    boolean Na -> d
    java.util.ArrayList Nb -> e
    android.os.Handler mHandler -> f
    void dU() -> a
    void f(android.os.Bundle) -> a
    void aE(int) -> a
    void b(com.google.android.gms.common.ConnectionResult) -> a
    void registerConnectionCallbacks(com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks) -> a
    void registerConnectionFailedListener(com.google.android.gms.common.GooglePlayServicesClient$OnConnectionFailedListener) -> a
    java.util.ArrayList a(com.google.android.gms.internal.jm) -> a
    com.google.android.gms.internal.jm$b b(com.google.android.gms.internal.jm) -> b
com.google.android.gms.internal.jm$a -> com.google.android.gms.internal.ow:
    com.google.android.gms.internal.jm Nc -> a
    void handleMessage(android.os.Message) -> handleMessage
com.google.android.gms.internal.jm$b -> com.google.android.gms.internal.ox:
    boolean gN() -> l
    boolean isConnected() -> e
    android.os.Bundle fX() -> j
com.google.android.gms.internal.jn -> com.google.android.gms.internal.oy:
    java.lang.Object Nd -> a
    com.google.android.gms.internal.jn Ne -> b
    android.content.Context mO -> c
    java.util.HashMap Nf -> d
    android.os.Handler mHandler -> e
    com.google.android.gms.internal.jn J(android.content.Context) -> a
    boolean a(java.lang.String,com.google.android.gms.internal.jl$f) -> a
    void b(java.lang.String,com.google.android.gms.internal.jl$f) -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    java.util.HashMap a(com.google.android.gms.internal.jn) -> a
    android.content.Context b(com.google.android.gms.internal.jn) -> b
com.google.android.gms.internal.jn$a -> com.google.android.gms.internal.oz:
    java.lang.String Ng -> b
    com.google.android.gms.internal.jn$a$a Nh -> c
    java.util.HashSet Ni -> d
    int mState -> e
    boolean Nj -> f
    android.os.IBinder Nk -> g
    android.content.ComponentName Nl -> h
    com.google.android.gms.internal.jn Nm -> a
    void hA() -> a
    void hB() -> b
    void a(com.google.android.gms.internal.jl$f) -> a
    void b(com.google.android.gms.internal.jl$f) -> b
    java.lang.String hC() -> c
    boolean isBound() -> d
    int getState() -> e
    boolean c(com.google.android.gms.internal.jl$f) -> c
    boolean hD() -> f
    android.os.IBinder getBinder() -> g
    android.content.ComponentName getComponentName() -> h
    android.os.IBinder a(com.google.android.gms.internal.jn$a,android.os.IBinder) -> a
    android.content.ComponentName a(com.google.android.gms.internal.jn$a,android.content.ComponentName) -> a
    java.util.HashSet a(com.google.android.gms.internal.jn$a) -> a
    int a(com.google.android.gms.internal.jn$a,int) -> a
com.google.android.gms.internal.jn$a$a -> com.google.android.gms.internal.pa:
    com.google.android.gms.internal.jn$a Nn -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.android.gms.internal.jo -> com.google.android.gms.internal.pb:
    android.net.Uri No -> a
    android.net.Uri Np -> b
    android.content.Intent aY(java.lang.String) -> a
    android.net.Uri aZ(java.lang.String) -> c
    android.content.Intent ba(java.lang.String) -> b
    android.content.Intent hE() -> a
com.google.android.gms.internal.jp -> com.google.android.gms.internal.pc:
    java.lang.String Nq -> a
    boolean aF(int) -> a
    void o(java.lang.String,java.lang.String) -> a
com.google.android.gms.internal.js -> com.google.android.gms.internal.pe:
    void b(int,android.os.IBinder,android.os.Bundle) -> a
com.google.android.gms.internal.js$a -> com.google.android.gms.internal.pg:
    com.google.android.gms.internal.js P(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.js$a$a -> com.google.android.gms.internal.ph:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    void b(int,android.os.IBinder,android.os.Bundle) -> a
com.google.android.gms.internal.jt -> com.google.android.gms.internal.pj:
    void a(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.js,int,java.lang.String) -> a
    void a(com.google.android.gms.internal.js,int) -> a
    void b(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> b
    void c(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> c
    void d(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> d
    void e(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> e
    void a(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,android.os.IBinder,java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String,java.lang.String[]) -> a
    void f(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> f
    void g(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> g
    void h(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> h
    void i(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> i
    void j(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> j
    void k(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> k
    void l(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> l
    void m(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> m
    void a(com.google.android.gms.internal.js,int,java.lang.String,android.os.IBinder,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String[],java.lang.String,android.os.Bundle) -> a
    void b(com.google.android.gms.internal.js,int,java.lang.String) -> b
    void c(com.google.android.gms.internal.js,int,java.lang.String) -> c
    void n(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> n
    void d(com.google.android.gms.internal.js,int,java.lang.String) -> d
    void o(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> o
    void e(com.google.android.gms.internal.js,int,java.lang.String) -> e
    void p(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> p
    void b(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String,java.lang.String[]) -> b
    void a(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle) -> a
    void f(com.google.android.gms.internal.js,int,java.lang.String) -> f
    void g(com.google.android.gms.internal.js,int,java.lang.String) -> g
    void a(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) -> a
    void a(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String) -> a
    void h(com.google.android.gms.internal.js,int,java.lang.String) -> h
    void i(com.google.android.gms.internal.js,int,java.lang.String) -> i
    void q(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> q
    void r(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> r
    void j(com.google.android.gms.internal.js,int,java.lang.String) -> j
    void s(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> s
    void k(com.google.android.gms.internal.js,int,java.lang.String) -> k
    void t(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> t
    void l(com.google.android.gms.internal.js,int,java.lang.String) -> l
    void a(com.google.android.gms.internal.js,com.google.android.gms.internal.jj) -> a
com.google.android.gms.internal.jt$a -> com.google.android.gms.internal.pk:
    com.google.android.gms.internal.jt Q(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.jt$a$a -> com.google.android.gms.internal.pl:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    void a(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.js,int,java.lang.String) -> a
    void a(com.google.android.gms.internal.js,int) -> a
    void b(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> b
    void c(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> c
    void d(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> d
    void e(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> e
    void a(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,android.os.IBinder,java.lang.String,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String,java.lang.String[]) -> a
    void f(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> f
    void g(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> g
    void h(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> h
    void i(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> i
    void j(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> j
    void k(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> k
    void l(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> l
    void m(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> m
    void a(com.google.android.gms.internal.js,int,java.lang.String,android.os.IBinder,android.os.Bundle) -> a
    void a(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String[],java.lang.String,android.os.Bundle) -> a
    void b(com.google.android.gms.internal.js,int,java.lang.String) -> b
    void c(com.google.android.gms.internal.js,int,java.lang.String) -> c
    void n(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> n
    void d(com.google.android.gms.internal.js,int,java.lang.String) -> d
    void o(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> o
    void e(com.google.android.gms.internal.js,int,java.lang.String) -> e
    void p(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> p
    void b(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String,java.lang.String[]) -> b
    void a(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle) -> a
    void f(com.google.android.gms.internal.js,int,java.lang.String) -> f
    void g(com.google.android.gms.internal.js,int,java.lang.String) -> g
    void a(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) -> a
    void a(com.google.android.gms.internal.js,int,java.lang.String,java.lang.String) -> a
    void h(com.google.android.gms.internal.js,int,java.lang.String) -> h
    void i(com.google.android.gms.internal.js,int,java.lang.String) -> i
    void q(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> q
    void r(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> r
    void j(com.google.android.gms.internal.js,int,java.lang.String) -> j
    void s(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> s
    void k(com.google.android.gms.internal.js,int,java.lang.String) -> k
    void t(com.google.android.gms.internal.js,int,java.lang.String,android.os.Bundle) -> t
    void l(com.google.android.gms.internal.js,int,java.lang.String) -> l
    void a(com.google.android.gms.internal.js,com.google.android.gms.internal.jj) -> a
com.google.android.gms.internal.jv -> com.google.android.gms.internal.pm:
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int hashCode(java.lang.Object[]) -> a
    com.google.android.gms.internal.jv$a h(java.lang.Object) -> a
com.google.android.gms.internal.jv$1 -> com.google.android.gms.internal.pn:
com.google.android.gms.internal.jv$a -> com.google.android.gms.internal.po:
    java.util.List Nr -> a
    java.lang.Object Ns -> b
    com.google.android.gms.internal.jv$a a(java.lang.String,java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.android.gms.internal.jw -> com.google.android.gms.internal.pp:
    com.google.android.gms.internal.jg$a E(android.os.Parcel) -> a
    com.google.android.gms.internal.jg$a[] aG(int) -> a
    void a(com.google.android.gms.internal.jg$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.jx -> com.google.android.gms.internal.pq:
    java.lang.Object i(java.lang.Object) -> a
    java.lang.String bb(java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.Object) -> a
    java.lang.Object b(java.lang.Object,java.lang.Object) -> a
    void K(boolean) -> a
    void a(boolean,java.lang.Object) -> a
    void a(boolean,java.lang.String,java.lang.Object[]) -> a
    void b(boolean,java.lang.Object) -> b
    void b(boolean,java.lang.String,java.lang.Object[]) -> b
    void L(boolean) -> b
    void aU(java.lang.String) -> b
    void aV(java.lang.String) -> c
com.google.android.gms.internal.k -> com.google.android.gms.internal.pr:
    java.lang.String kU -> a
    java.lang.String kV -> b
    java.lang.String kW -> c
    java.lang.String[] kX -> d
    com.google.android.gms.internal.g kY -> e
    boolean a(android.net.Uri) -> a
    boolean b(android.net.Uri) -> b
    com.google.android.gms.internal.g C() -> a
    void a(android.view.MotionEvent) -> a
    android.net.Uri a(android.net.Uri,android.content.Context) -> a
    android.net.Uri a(android.net.Uri,java.lang.String,java.lang.String) -> a
    android.net.Uri b(android.net.Uri,java.lang.String,java.lang.String) -> b
    android.net.Uri a(android.net.Uri,android.content.Context,java.lang.String,boolean) -> a
com.google.android.gms.internal.kj -> com.google.android.gms.internal.ps:
    java.util.LinkedHashMap Nw -> a
    int size -> b
    int Nx -> c
    int Ny -> d
    int Nz -> e
    int NA -> f
    int NB -> g
    int NC -> h
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> b
    void trimToSize(int) -> a
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> b
    int c(java.lang.Object,java.lang.Object) -> c
    int sizeOf(java.lang.Object,java.lang.Object) -> a
    void evictAll() -> a
    java.lang.String toString() -> toString
com.google.android.gms.internal.kk -> com.google.android.gms.internal.kk:
    com.google.android.gms.internal.kl CREATOR -> a
    int CK -> b
    java.lang.String ND -> c
    int NE -> d
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.google.android.gms.internal.kl -> com.google.android.gms.internal.pt:
    com.google.android.gms.internal.kk I(android.os.Parcel) -> a
    com.google.android.gms.internal.kk[] aJ(int) -> a
    void a(com.google.android.gms.internal.kk,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.km -> com.google.android.gms.internal.km:
    com.google.android.gms.internal.kn CREATOR -> a
    int CK -> b
    com.google.android.gms.internal.ko NF -> c
    int getVersionCode() -> a
    com.google.android.gms.internal.ko hF() -> b
    com.google.android.gms.internal.km a(com.google.android.gms.internal.kr$b) -> a
    com.google.android.gms.internal.kr$b hG() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.kn -> com.google.android.gms.internal.pu:
    com.google.android.gms.internal.km J(android.os.Parcel) -> a
    com.google.android.gms.internal.km[] aK(int) -> a
    void a(com.google.android.gms.internal.km,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ko -> com.google.android.gms.internal.ko:
    com.google.android.gms.internal.kp CREATOR -> a
    int CK -> b
    java.util.HashMap NG -> c
    java.util.HashMap NH -> d
    java.util.ArrayList NI -> e
    void b(java.util.ArrayList) -> a
    int getVersionCode() -> a
    java.util.ArrayList hH() -> b
    com.google.android.gms.internal.ko h(java.lang.String,int) -> a
    int hI() -> c
    int hJ() -> d
    java.lang.String a(java.lang.Integer) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object convertBack(java.lang.Object) -> a
com.google.android.gms.internal.ko$a -> com.google.android.gms.internal.ko$a:
    com.google.android.gms.internal.kq CREATOR -> a
    int versionCode -> b
    java.lang.String NJ -> c
    int NK -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.kp -> com.google.android.gms.internal.pv:
    com.google.android.gms.internal.ko K(android.os.Parcel) -> a
    com.google.android.gms.internal.ko[] aL(int) -> a
    void a(com.google.android.gms.internal.ko,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.kq -> com.google.android.gms.internal.px:
    com.google.android.gms.internal.ko$a L(android.os.Parcel) -> a
    com.google.android.gms.internal.ko$a[] aM(int) -> a
    void a(com.google.android.gms.internal.ko$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.kr -> com.google.android.gms.internal.kr:
    java.util.HashMap hK() -> b
    java.lang.Object bc(java.lang.String) -> a
    boolean a(com.google.android.gms.internal.kr$a) -> a
    boolean bd(java.lang.String) -> b
    boolean be(java.lang.String) -> c
    boolean bf(java.lang.String) -> d
    java.lang.Object a(com.google.android.gms.internal.kr$a,java.lang.Object) -> a
    java.util.HashMap hL() -> c
    java.util.HashMap hM() -> d
    java.lang.String toString() -> toString
    java.lang.Object b(com.google.android.gms.internal.kr$a) -> b
    void a(java.lang.StringBuilder,com.google.android.gms.internal.kr$a,java.lang.Object) -> a
    void a(java.lang.StringBuilder,com.google.android.gms.internal.kr$a,java.util.ArrayList) -> a
com.google.android.gms.internal.kr$a -> com.google.android.gms.internal.kr$a:
    int CK -> j
    int NL -> a
    boolean NM -> b
    int NN -> c
    boolean NO -> d
    java.lang.String NP -> e
    int NQ -> f
    java.lang.Class NR -> g
    java.lang.String NS -> h
    com.google.android.gms.internal.kv NT -> k
    com.google.android.gms.internal.kr$b NU -> l
    com.google.android.gms.internal.kt CREATOR -> i
    int getVersionCode() -> a
    int hI() -> b
    boolean hO() -> c
    int hJ() -> d
    boolean hP() -> e
    java.lang.String hQ() -> f
    int hR() -> g
    java.lang.Class hS() -> h
    java.lang.String hT() -> i
    boolean hU() -> j
    void a(com.google.android.gms.internal.kv) -> a
    com.google.android.gms.internal.km hV() -> k
    java.util.HashMap hW() -> l
    java.lang.Object convertBack(java.lang.Object) -> a
    com.google.android.gms.internal.kr$a i(java.lang.String,int) -> a
    com.google.android.gms.internal.kr$a j(java.lang.String,int) -> b
    com.google.android.gms.internal.kr$a k(java.lang.String,int) -> c
    com.google.android.gms.internal.kr$a l(java.lang.String,int) -> d
    com.google.android.gms.internal.kr$a m(java.lang.String,int) -> e
    com.google.android.gms.internal.kr$a a(java.lang.String,int,java.lang.Class) -> a
    com.google.android.gms.internal.kr$a b(java.lang.String,int,java.lang.Class) -> b
    com.google.android.gms.internal.kr$a a(java.lang.String,int,com.google.android.gms.internal.kr$b,boolean) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    com.google.android.gms.internal.kr$b c(com.google.android.gms.internal.kr$a) -> a
com.google.android.gms.internal.kr$b -> com.google.android.gms.internal.pz:
    int hI() -> c
    int hJ() -> d
    java.lang.Object convertBack(java.lang.Object) -> a
com.google.android.gms.internal.ks -> com.google.android.gms.internal.ks:
    java.lang.Object bc(java.lang.String) -> a
    boolean bd(java.lang.String) -> b
com.google.android.gms.internal.kt -> com.google.android.gms.internal.qa:
    com.google.android.gms.internal.kr$a M(android.os.Parcel) -> a
    com.google.android.gms.internal.kr$a[] aN(int) -> a
    void a(com.google.android.gms.internal.kr$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ku -> com.google.android.gms.internal.qb:
    com.google.android.gms.internal.kv$b N(android.os.Parcel) -> a
    com.google.android.gms.internal.kv$b[] aO(int) -> a
    void a(com.google.android.gms.internal.kv$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.kv -> com.google.android.gms.internal.kv:
    com.google.android.gms.internal.kw CREATOR -> a
    int CK -> b
    java.util.HashMap NV -> c
    java.util.ArrayList NW -> d
    java.lang.String NX -> e
    void hX() -> a
    java.util.HashMap c(java.util.ArrayList) -> a
    int getVersionCode() -> b
    java.util.ArrayList hZ() -> c
    java.util.HashMap bg(java.lang.String) -> a
    java.lang.String ia() -> d
    int describeContents() -> describeContents
    java.lang.String toString() -> toString
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.kv$a -> com.google.android.gms.internal.kv$a:
    com.google.android.gms.internal.kx CREATOR -> a
    int versionCode -> b
    java.lang.String className -> c
    java.util.ArrayList NY -> d
    java.util.ArrayList a(java.util.HashMap) -> a
    java.util.HashMap ib() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.kv$b -> com.google.android.gms.internal.kv$b:
    com.google.android.gms.internal.ku CREATOR -> a
    int versionCode -> b
    java.lang.String fv -> c
    com.google.android.gms.internal.kr$a NZ -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.kw -> com.google.android.gms.internal.qc:
    com.google.android.gms.internal.kv O(android.os.Parcel) -> a
    com.google.android.gms.internal.kv[] aP(int) -> a
    void a(com.google.android.gms.internal.kv,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.kx -> com.google.android.gms.internal.qd:
    com.google.android.gms.internal.kv$a P(android.os.Parcel) -> a
    com.google.android.gms.internal.kv$a[] aQ(int) -> a
    void a(com.google.android.gms.internal.kv$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ky -> com.google.android.gms.internal.ky:
    int CK -> b
    android.os.Parcel Oa -> c
    int Ob -> d
    com.google.android.gms.internal.kv NT -> e
    java.lang.String mClassName -> f
    int Oc -> g
    int Od -> h
    com.google.android.gms.internal.kz CREATOR -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> a
    android.os.Parcel ic() -> e
    com.google.android.gms.internal.kv id() -> f
    java.util.HashMap hK() -> b
    java.lang.Object bc(java.lang.String) -> a
    boolean bd(java.lang.String) -> b
    java.lang.String toString() -> toString
    void a(java.lang.StringBuilder,java.util.HashMap,android.os.Parcel) -> a
    java.util.HashMap b(java.util.HashMap) -> a
    void a(java.lang.StringBuilder,java.lang.String,com.google.android.gms.internal.kr$a,android.os.Parcel,int) -> a
    void a(java.lang.StringBuilder,com.google.android.gms.internal.kr$a,android.os.Parcel,int) -> a
    void b(java.lang.StringBuilder,com.google.android.gms.internal.kr$a,android.os.Parcel,int) -> b
    void b(java.lang.StringBuilder,com.google.android.gms.internal.kr$a,java.lang.Object) -> a
    void b(java.lang.StringBuilder,com.google.android.gms.internal.kr$a,java.util.ArrayList) -> a
    void a(java.lang.StringBuilder,int,java.lang.Object) -> a
    java.util.HashMap g(android.os.Bundle) -> a
com.google.android.gms.internal.kz -> com.google.android.gms.internal.qe:
    com.google.android.gms.internal.ky Q(android.os.Parcel) -> a
    com.google.android.gms.internal.ky[] aR(int) -> a
    void a(com.google.android.gms.internal.ky,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.l -> com.google.android.gms.internal.qf:
com.google.android.gms.internal.la -> com.google.android.gms.internal.qg:
    int a(java.lang.Object[],java.lang.Object) -> a
    boolean b(java.lang.Object[],java.lang.Object) -> b
    void a(java.lang.StringBuilder,java.lang.Object[]) -> a
    void a(java.lang.StringBuilder,int[]) -> a
    void a(java.lang.StringBuilder,long[]) -> a
    void a(java.lang.StringBuilder,float[]) -> a
    void a(java.lang.StringBuilder,double[]) -> a
    void a(java.lang.StringBuilder,boolean[]) -> a
    void a(java.lang.StringBuilder,java.lang.String[]) -> a
    java.util.ArrayList ie() -> a
    java.util.ArrayList b(java.lang.Object[]) -> a
com.google.android.gms.internal.lb -> com.google.android.gms.internal.qh:
    java.lang.String d(byte[]) -> a
    java.lang.String e(byte[]) -> b
com.google.android.gms.internal.lc -> com.google.android.gms.internal.qi:
    java.util.regex.Pattern Oe -> a
    int aS(int) -> a
    int aT(int) -> b
    boolean aU(int) -> c
    boolean K(android.content.Context) -> a
com.google.android.gms.internal.ld -> com.google.android.gms.internal.qj:
    long elapsedRealtime() -> a
com.google.android.gms.internal.lf -> com.google.android.gms.internal.qk:
    long elapsedRealtime() -> a
com.google.android.gms.internal.lg -> com.google.android.gms.internal.ql:
    boolean aV(int) -> a
com.google.android.gms.internal.lh -> com.google.android.gms.internal.qm:
    void b(java.io.Closeable) -> a
    long a(java.io.InputStream,java.io.OutputStream,boolean) -> a
    long a(java.io.InputStream,java.io.OutputStream,boolean,int) -> a
    byte[] d(java.io.InputStream) -> a
    byte[] a(java.io.InputStream,boolean) -> a
com.google.android.gms.internal.li -> com.google.android.gms.internal.qn:
    java.util.regex.Pattern Og -> a
    java.util.regex.Pattern Oh -> b
    java.lang.String bh(java.lang.String) -> a
com.google.android.gms.internal.lj -> com.google.android.gms.internal.qo:
    void a(java.lang.StringBuilder,java.util.HashMap) -> a
com.google.android.gms.internal.lk -> com.google.android.gms.internal.qp:
    int a(byte[],int,int,int) -> a
com.google.android.gms.internal.ll -> com.google.android.gms.internal.qq:
    boolean ig() -> a
    boolean ij() -> b
    boolean im() -> c
    boolean in() -> d
    boolean io() -> e
    boolean aW(int) -> a
com.google.android.gms.internal.ln -> com.google.android.gms.internal.qr:
    com.google.android.gms.drive.metadata.MetadataField Rj -> a
    com.google.android.gms.drive.metadata.MetadataField Rk -> b
    com.google.android.gms.internal.ln$a Rl -> c
    com.google.android.gms.drive.metadata.MetadataField Rm -> d
    com.google.android.gms.drive.metadata.MetadataField Rn -> e
    com.google.android.gms.drive.metadata.MetadataField Ro -> f
    com.google.android.gms.drive.metadata.MetadataField Rp -> g
    com.google.android.gms.drive.metadata.MetadataField Rq -> h
    com.google.android.gms.drive.metadata.MetadataField Rr -> i
    com.google.android.gms.drive.metadata.MetadataField Rs -> j
    com.google.android.gms.drive.metadata.MetadataField Rt -> k
    com.google.android.gms.drive.metadata.MetadataField Ru -> l
    com.google.android.gms.internal.ln$b Rv -> m
    com.google.android.gms.drive.metadata.MetadataField Rw -> n
    com.google.android.gms.drive.metadata.MetadataField Rx -> o
    com.google.android.gms.drive.metadata.MetadataField Ry -> p
    com.google.android.gms.drive.metadata.MetadataField Rz -> q
    com.google.android.gms.internal.ln$c RA -> r
    com.google.android.gms.drive.metadata.MetadataField RB -> s
    com.google.android.gms.drive.metadata.b RC -> t
    com.google.android.gms.drive.metadata.internal.m RD -> u
    com.google.android.gms.drive.metadata.internal.m RE -> v
    com.google.android.gms.internal.ln$d RF -> w
    com.google.android.gms.internal.ln$e RG -> x
    com.google.android.gms.internal.ln$f RH -> y
    com.google.android.gms.drive.metadata.MetadataField RI -> z
    com.google.android.gms.internal.ln$g RJ -> A
    com.google.android.gms.internal.ln$h RK -> B
    com.google.android.gms.drive.metadata.MetadataField RL -> C
    com.google.android.gms.drive.metadata.MetadataField RM -> D
    com.google.android.gms.drive.metadata.MetadataField RN -> E
    com.google.android.gms.drive.metadata.internal.b RO -> F
    com.google.android.gms.drive.metadata.MetadataField RP -> G
com.google.android.gms.internal.ln$1 -> com.google.android.gms.internal.qs:
com.google.android.gms.internal.ln$a -> com.google.android.gms.internal.qt:
com.google.android.gms.internal.ln$b -> com.google.android.gms.internal.qu:
com.google.android.gms.internal.ln$c -> com.google.android.gms.internal.qv:
com.google.android.gms.internal.ln$d -> com.google.android.gms.internal.qw:
com.google.android.gms.internal.ln$e -> com.google.android.gms.internal.qx:
com.google.android.gms.internal.ln$f -> com.google.android.gms.internal.qy:
com.google.android.gms.internal.ln$g -> com.google.android.gms.internal.qz:
com.google.android.gms.internal.ln$h -> com.google.android.gms.internal.ra:
com.google.android.gms.internal.lo -> com.google.android.gms.internal.rb:
com.google.android.gms.internal.lp -> com.google.android.gms.internal.rc:
    com.google.android.gms.internal.lp$a RQ -> a
    com.google.android.gms.internal.lp$b RR -> b
    com.google.android.gms.internal.lp$d RS -> c
    com.google.android.gms.internal.lp$c RT -> d
    com.google.android.gms.internal.lp$e RU -> e
com.google.android.gms.internal.lp$a -> com.google.android.gms.internal.rd:
com.google.android.gms.internal.lp$b -> com.google.android.gms.internal.re:
com.google.android.gms.internal.lp$c -> com.google.android.gms.internal.rf:
com.google.android.gms.internal.lp$d -> com.google.android.gms.internal.rg:
com.google.android.gms.internal.lp$e -> com.google.android.gms.internal.rh:
com.google.android.gms.internal.lq -> com.google.android.gms.internal.ri:
    com.google.android.gms.internal.lq RV -> a
com.google.android.gms.internal.lr -> com.google.android.gms.internal.rj:
    com.google.android.gms.drive.metadata.MetadataField RW -> a
    com.google.android.gms.drive.metadata.MetadataField RX -> b
com.google.android.gms.internal.ls -> com.google.android.gms.internal.rk:
    boolean a(java.util.List,java.util.List) -> a
com.google.android.gms.internal.m -> com.google.android.gms.internal.rl:
    java.lang.String a(byte[],boolean) -> a
    byte[] a(java.lang.String,boolean) -> a
com.google.android.gms.internal.mg -> com.google.android.gms.internal.rm:
    java.lang.ThreadLocal UV -> a
    com.google.android.gms.fitness.data.DataSource c(com.google.android.gms.fitness.data.DataSource) -> a
    boolean jN() -> a
    java.lang.String bw(java.lang.String) -> a
    java.lang.String r(java.lang.String,java.lang.String) -> a
com.google.android.gms.internal.mq -> com.google.android.gms.internal.mq:
    int CK -> a
    java.util.List TY -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getDataTypes() -> a
    java.lang.String toString() -> toString
    int getVersionCode() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.mr -> com.google.android.gms.internal.rn:
    com.google.android.gms.internal.mq bG(android.os.Parcel) -> a
    com.google.android.gms.internal.mq[] da(int) -> a
    void a(com.google.android.gms.internal.mq,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ms -> com.google.android.gms.internal.ms:
    int CK -> a
    com.google.android.gms.fitness.data.DataSource TN -> b
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.google.android.gms.fitness.data.DataSource getDataSource() -> a
    java.lang.String toString() -> toString
    int getVersionCode() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.mt -> com.google.android.gms.internal.ro:
    com.google.android.gms.internal.ms bH(android.os.Parcel) -> a
    com.google.android.gms.internal.ms[] db(int) -> a
    void a(com.google.android.gms.internal.ms,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.n -> com.google.android.gms.internal.rp:
    void reset() -> a
    void b(int,long) -> a
    void b(int,java.lang.String) -> a
    byte[] D() -> b
com.google.android.gms.internal.nd -> com.google.android.gms.internal.nd:
    int CK -> d
    int uid -> a
    java.lang.String packageName -> b
    com.google.android.gms.internal.ne CREATOR -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> a
com.google.android.gms.internal.ne -> com.google.android.gms.internal.rq:
    com.google.android.gms.internal.nd cL(android.os.Parcel) -> a
    com.google.android.gms.internal.nd[] eF(int) -> a
    void a(com.google.android.gms.internal.nd,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.nl -> com.google.android.gms.internal.nl:
    java.util.List ahg -> a
    int CK -> i
    com.google.android.gms.location.LocationRequest We -> b
    boolean ahh -> c
    boolean ahi -> d
    boolean ahj -> e
    java.util.List ahk -> f
    java.lang.String mTag -> g
    com.google.android.gms.internal.nm CREATOR -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.internal.nm -> com.google.android.gms.internal.rr:
    com.google.android.gms.internal.nl cM(android.os.Parcel) -> a
    com.google.android.gms.internal.nl[] eG(int) -> a
    void a(com.google.android.gms.internal.nl,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.nn -> com.google.android.gms.internal.nn:
    int CK -> b
    java.lang.String Zt -> c
    long ahl -> d
    short agf -> e
    double agg -> f
    double agh -> g
    float agi -> h
    int agd -> i
    int agj -> j
    int agk -> k
    com.google.android.gms.internal.no CREATOR -> a
    int getVersionCode() -> a
    short nn() -> b
    double getLatitude() -> c
    double getLongitude() -> d
    float no() -> e
    java.lang.String getRequestId() -> f
    long getExpirationTime() -> g
    int np() -> h
    int getNotificationResponsiveness() -> i
    int nq() -> j
    void cb(java.lang.String) -> a
    void b(float) -> a
    void a(double,double) -> a
    int eH(int) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String eI(int) -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.android.gms.internal.no -> com.google.android.gms.internal.rs:
    com.google.android.gms.internal.nn cN(android.os.Parcel) -> a
    com.google.android.gms.internal.nn[] eJ(int) -> a
    void a(com.google.android.gms.internal.nn,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.nq -> com.google.android.gms.internal.nq:
    com.google.android.gms.internal.nr CREATOR -> a
    int CK -> b
    boolean ahm -> c
    java.util.List ahn -> d
    java.util.Set aho -> e
    boolean nr() -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.nr -> com.google.android.gms.internal.rt:
    com.google.android.gms.internal.nq cO(android.os.Parcel) -> a
    com.google.android.gms.internal.nq[] eK(int) -> a
    void a(com.google.android.gms.internal.nq,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ns -> com.google.android.gms.internal.ns:
    com.google.android.gms.internal.nt CREATOR -> a
    int CK -> b
    int agd -> c
    int ahp -> d
    com.google.android.gms.internal.nu ahq -> e
    int getVersionCode() -> a
    int np() -> b
    int ns() -> c
    com.google.android.gms.internal.nu nt() -> d
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.nt -> com.google.android.gms.internal.ru:
    com.google.android.gms.internal.ns cP(android.os.Parcel) -> a
    com.google.android.gms.internal.ns[] eL(int) -> a
    void a(com.google.android.gms.internal.ns,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.nu -> com.google.android.gms.internal.nu:
    com.google.android.gms.internal.nv CREATOR -> a
    int CK -> b
    java.util.List ahn -> c
    java.lang.String ahr -> f
    boolean ahs -> g
    java.util.List aht -> d
    java.util.List ahu -> e
    java.util.Set aho -> h
    java.util.Set ahv -> i
    java.util.Set ahw -> j
    java.util.Set g(java.util.List) -> a
    java.lang.String nu() -> a
    boolean nv() -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.nv -> com.google.android.gms.internal.rv:
    com.google.android.gms.internal.nu cQ(android.os.Parcel) -> a
    com.google.android.gms.internal.nu[] eM(int) -> a
    void a(com.google.android.gms.internal.nu,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.nw -> com.google.android.gms.internal.nw:
    com.google.android.gms.internal.nx CREATOR -> a
    int CK -> b
    java.lang.String ahx -> c
    java.lang.String mTag -> d
    java.lang.String ahy -> e
    java.lang.String nw() -> a
    java.lang.String getTag() -> b
    java.lang.String getSource() -> c
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.nx -> com.google.android.gms.internal.rw:
    com.google.android.gms.internal.nw cR(android.os.Parcel) -> a
    com.google.android.gms.internal.nw[] eN(int) -> a
    void a(com.google.android.gms.internal.nw,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ny -> com.google.android.gms.internal.ny:
    com.google.android.gms.internal.nz CREATOR -> a
    long ahz -> b
    int CK -> c
    com.google.android.gms.internal.nu ahA -> d
    long agr -> e
    int mPriority -> f
    com.google.android.gms.internal.nu nt() -> a
    long getInterval() -> b
    int getPriority() -> c
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.nz -> com.google.android.gms.internal.rx:
    com.google.android.gms.internal.ny cS(android.os.Parcel) -> a
    com.google.android.gms.internal.ny[] eO(int) -> a
    void a(com.google.android.gms.internal.ny,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.o -> com.google.android.gms.internal.ry:
    com.google.android.gms.internal.m ky -> a
    java.security.SecureRandom kZ -> b
    void c(byte[]) -> a
    byte[] b(java.lang.String) -> a
    byte[] c(byte[],java.lang.String) -> a
com.google.android.gms.internal.o$a -> com.google.android.gms.internal.rz:
    com.google.android.gms.internal.o la -> a
com.google.android.gms.internal.oa -> com.google.android.gms.internal.oa:
    com.google.android.gms.internal.oa ahB -> a
    com.google.android.gms.internal.oa ahC -> b
    com.google.android.gms.internal.oa ahD -> c
    com.google.android.gms.internal.oa ahE -> d
    com.google.android.gms.internal.oa ahF -> e
    com.google.android.gms.internal.oa ahG -> f
    com.google.android.gms.internal.oa ahH -> g
    com.google.android.gms.internal.oa ahI -> h
    com.google.android.gms.internal.oa ahJ -> i
    com.google.android.gms.internal.oa ahK -> j
    com.google.android.gms.internal.oa ahL -> k
    com.google.android.gms.internal.oa ahM -> l
    com.google.android.gms.internal.oa ahN -> m
    com.google.android.gms.internal.oa ahO -> n
    com.google.android.gms.internal.oa ahP -> o
    com.google.android.gms.internal.oa ahQ -> p
    com.google.android.gms.internal.oa ahR -> q
    com.google.android.gms.internal.oa ahS -> r
    com.google.android.gms.internal.oa ahT -> s
    com.google.android.gms.internal.oa ahU -> t
    com.google.android.gms.internal.oa ahV -> u
    com.google.android.gms.internal.oa ahW -> v
    com.google.android.gms.internal.oa ahX -> w
    com.google.android.gms.internal.oa ahY -> x
    com.google.android.gms.internal.oa ahZ -> y
    com.google.android.gms.internal.oa aia -> z
    com.google.android.gms.internal.oa aib -> A
    com.google.android.gms.internal.oa aic -> B
    com.google.android.gms.internal.oa aid -> C
    com.google.android.gms.internal.oa aie -> D
    com.google.android.gms.internal.oa aif -> E
    com.google.android.gms.internal.oa aig -> F
    com.google.android.gms.internal.oa aih -> G
    com.google.android.gms.internal.oa aii -> H
    com.google.android.gms.internal.oa aij -> I
    com.google.android.gms.internal.oa aik -> J
    com.google.android.gms.internal.oa ail -> K
    com.google.android.gms.internal.oa aim -> L
    com.google.android.gms.internal.oa ain -> M
    com.google.android.gms.internal.oa aio -> N
    com.google.android.gms.internal.oa aip -> O
    com.google.android.gms.internal.oa aiq -> P
    com.google.android.gms.internal.oa air -> Q
    com.google.android.gms.internal.oa ais -> R
    com.google.android.gms.internal.oa ait -> S
    com.google.android.gms.internal.oa aiu -> T
    com.google.android.gms.internal.oa aiv -> U
    com.google.android.gms.internal.oa aiw -> V
    com.google.android.gms.internal.oa aix -> W
    com.google.android.gms.internal.oa aiy -> X
    com.google.android.gms.internal.oa aiz -> Y
    com.google.android.gms.internal.oa aiA -> Z
    com.google.android.gms.internal.oa aiB -> aa
    com.google.android.gms.internal.oa aiC -> ab
    com.google.android.gms.internal.oa aiD -> ac
    com.google.android.gms.internal.oa aiE -> ad
    com.google.android.gms.internal.oa aiF -> ae
    com.google.android.gms.internal.oa aiG -> af
    com.google.android.gms.internal.oa aiH -> ag
    com.google.android.gms.internal.oa aiI -> ah
    com.google.android.gms.internal.oa aiJ -> ai
    com.google.android.gms.internal.oa aiK -> aj
    com.google.android.gms.internal.oa aiL -> ak
    com.google.android.gms.internal.oa aiM -> al
    com.google.android.gms.internal.oa aiN -> am
    com.google.android.gms.internal.oa aiO -> an
    com.google.android.gms.internal.oa aiP -> ao
    com.google.android.gms.internal.oa aiQ -> ap
    com.google.android.gms.internal.oa aiR -> aq
    com.google.android.gms.internal.oa aiS -> ar
    com.google.android.gms.internal.oa aiT -> as
    com.google.android.gms.internal.oa aiU -> at
    com.google.android.gms.internal.oa aiV -> au
    com.google.android.gms.internal.oa aiW -> av
    com.google.android.gms.internal.oa aiX -> aw
    com.google.android.gms.internal.oa aiY -> ax
    com.google.android.gms.internal.oa aiZ -> ay
    com.google.android.gms.internal.oa aja -> az
    com.google.android.gms.internal.oa ajb -> aA
    com.google.android.gms.internal.oa ajc -> aB
    com.google.android.gms.internal.oa ajd -> aC
    com.google.android.gms.internal.oa aje -> aD
    com.google.android.gms.internal.oa ajf -> aE
    com.google.android.gms.internal.oa ajg -> aF
    com.google.android.gms.internal.oa ajh -> aG
    com.google.android.gms.internal.oa aji -> aH
    com.google.android.gms.internal.oa ajj -> aI
    com.google.android.gms.internal.oa ajk -> aJ
    com.google.android.gms.internal.oa ajl -> aK
    com.google.android.gms.internal.oa ajm -> aL
    com.google.android.gms.internal.oa ajn -> aM
    com.google.android.gms.internal.oa ajo -> aN
    com.google.android.gms.internal.oa ajp -> aO
    com.google.android.gms.internal.oa ajq -> aP
    com.google.android.gms.internal.oa ajr -> aQ
    com.google.android.gms.internal.oa ajs -> aR
    com.google.android.gms.internal.oa ajt -> aS
    com.google.android.gms.internal.oa aju -> aT
    com.google.android.gms.internal.oa ajv -> aU
    com.google.android.gms.internal.oa ajw -> aV
    com.google.android.gms.internal.oa ajx -> aW
    com.google.android.gms.internal.oa ajy -> aX
    com.google.android.gms.internal.oa ajz -> aY
    com.google.android.gms.internal.oa ajA -> aZ
    com.google.android.gms.internal.oa ajB -> ba
    com.google.android.gms.internal.oa ajC -> bb
    com.google.android.gms.internal.oa ajD -> bc
    com.google.android.gms.internal.oa ajE -> bd
    com.google.android.gms.internal.oa ajF -> be
    com.google.android.gms.internal.oa ajG -> bf
    com.google.android.gms.internal.oa ajH -> bg
    com.google.android.gms.internal.oa ajI -> bh
    com.google.android.gms.internal.oa ajJ -> bi
    com.google.android.gms.internal.oa ajK -> bj
    com.google.android.gms.internal.oa ajL -> bk
    com.google.android.gms.internal.oa ajM -> bl
    com.google.android.gms.internal.oa ajN -> bm
    com.google.android.gms.internal.oa ajO -> bn
    com.google.android.gms.internal.oa ajP -> bo
    com.google.android.gms.internal.oa ajQ -> bp
    com.google.android.gms.internal.oa ajR -> bq
    com.google.android.gms.internal.oa ajS -> br
    com.google.android.gms.internal.oa ajT -> bs
    com.google.android.gms.internal.oa ajU -> bt
    com.google.android.gms.internal.oa ajV -> bu
    com.google.android.gms.internal.oa ajW -> bv
    com.google.android.gms.internal.ob CREATOR -> bw
    int CK -> bx
    java.lang.String vc -> by
    com.google.android.gms.internal.oa cc(java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.ob -> com.google.android.gms.internal.sa:
    com.google.android.gms.internal.oa cT(android.os.Parcel) -> a
    com.google.android.gms.internal.oa[] eP(int) -> a
    void a(com.google.android.gms.internal.oa,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.oc -> com.google.android.gms.internal.oc:
    int CK -> a
    java.lang.String mName -> b
    com.google.android.gms.maps.model.LatLng ajX -> c
    java.lang.String TW -> d
    java.util.List ajY -> e
    java.lang.String ajZ -> f
    java.lang.String aka -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getName() -> a
    com.google.android.gms.maps.model.LatLng nx() -> b
    java.lang.String getAddress() -> c
    java.util.List ny() -> d
    java.lang.String getPhoneNumber() -> e
    java.lang.String nz() -> f
com.google.android.gms.internal.od -> com.google.android.gms.internal.sb:
    com.google.android.gms.internal.oc cU(android.os.Parcel) -> a
    com.google.android.gms.internal.oc[] eQ(int) -> a
    void a(com.google.android.gms.internal.oc,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.oe -> com.google.android.gms.internal.oe:
    com.google.android.gms.internal.oe akb -> a
    com.google.android.gms.internal.oe akc -> b
    java.util.Set akd -> c
    com.google.android.gms.internal.of CREATOR -> d
    int CK -> e
    java.lang.String vc -> f
    int ake -> g
    com.google.android.gms.internal.oe A(java.lang.String,int) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.of -> com.google.android.gms.internal.sc:
    com.google.android.gms.internal.oe cV(android.os.Parcel) -> a
    com.google.android.gms.internal.oe[] eR(int) -> a
    void a(com.google.android.gms.internal.oe,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.oh -> com.google.android.gms.internal.oh:
    com.google.android.gms.internal.oh akf -> a
    com.google.android.gms.internal.oi CREATOR -> b
    int versionCode -> c
    java.lang.String akg -> d
    java.lang.String akh -> e
    java.lang.String aki -> f
    java.lang.String akj -> g
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.oi -> com.google.android.gms.internal.sd:
    com.google.android.gms.internal.oh cW(android.os.Parcel) -> a
    com.google.android.gms.internal.oh[] eS(int) -> a
    void a(com.google.android.gms.internal.oh,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.or -> com.google.android.gms.internal.or:
    com.google.android.gms.internal.ot CREATOR -> a
    int versionCode -> b
    long amW -> c
    java.lang.String tag -> d
    byte[] amX -> e
    android.os.Bundle amY -> f
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.google.android.gms.internal.ot -> com.google.android.gms.internal.se:
    com.google.android.gms.internal.or dt(android.os.Parcel) -> a
    com.google.android.gms.internal.or[] fq(int) -> a
    void a(com.google.android.gms.internal.or,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ov -> com.google.android.gms.internal.ov:
    com.google.android.gms.internal.ow CREATOR -> a
    int versionCode -> b
    java.lang.String packageName -> c
    int ang -> d
    int anh -> e
    java.lang.String ani -> f
    java.lang.String anj -> g
    boolean ank -> h
    java.lang.String anl -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.internal.ow -> com.google.android.gms.internal.sf:
    com.google.android.gms.internal.ov du(android.os.Parcel) -> a
    com.google.android.gms.internal.ov[] fr(int) -> a
    void a(com.google.android.gms.internal.ov,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.p -> com.google.android.gms.internal.sg:
    com.google.android.gms.internal.qp lb -> a
    byte[] lc -> b
    int ld -> c
    void reset() -> a
    void b(int,long) -> a
    void b(int,java.lang.String) -> a
    byte[] D() -> b
com.google.android.gms.internal.pd -> com.google.android.gms.internal.pd:
    com.google.android.gms.internal.pe CREATOR -> a
    java.util.HashMap aom -> af
    java.util.Set aon -> b
    int CK -> c
    com.google.android.gms.internal.pd aoo -> d
    java.util.List aop -> e
    com.google.android.gms.internal.pd aoq -> f
    java.lang.String aor -> g
    java.lang.String aos -> h
    java.lang.String aot -> i
    java.util.List aou -> j
    int aov -> k
    java.util.List aow -> l
    com.google.android.gms.internal.pd aox -> m
    java.util.List aoy -> n
    java.lang.String aoz -> o
    java.lang.String aoA -> p
    com.google.android.gms.internal.pd aoB -> q
    java.lang.String aoC -> r
    java.lang.String aoD -> s
    java.lang.String ov -> t
    java.util.List aoE -> u
    java.lang.String aoF -> v
    java.lang.String aoG -> w
    java.lang.String aoH -> x
    java.lang.String UO -> y
    java.lang.String aoI -> z
    java.lang.String aoJ -> A
    java.lang.String aoK -> B
    java.lang.String aoL -> C
    java.lang.String aoM -> D
    com.google.android.gms.internal.pd aoN -> E
    java.lang.String aoO -> F
    java.lang.String aoP -> G
    java.lang.String CE -> H
    java.lang.String aoQ -> I
    com.google.android.gms.internal.pd aoR -> J
    double agg -> K
    com.google.android.gms.internal.pd aoS -> L
    double agh -> M
    java.lang.String mName -> N
    com.google.android.gms.internal.pd aoT -> O
    java.util.List aoU -> P
    java.lang.String aoV -> Q
    java.lang.String aoW -> R
    java.lang.String aoX -> S
    java.lang.String aoY -> T
    com.google.android.gms.internal.pd aoZ -> U
    java.lang.String apa -> V
    java.lang.String apb -> W
    java.lang.String apc -> X
    com.google.android.gms.internal.pd apd -> Y
    java.lang.String ape -> Z
    java.lang.String apf -> aa
    java.lang.String vc -> ab
    java.lang.String vf -> ac
    java.lang.String apg -> ad
    java.lang.String aph -> ae
    java.util.HashMap hK() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean a(com.google.android.gms.internal.kr$a) -> a
    java.lang.Object b(com.google.android.gms.internal.kr$a) -> b
    com.google.android.gms.internal.pd oI() -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.pe -> com.google.android.gms.internal.sh:
    com.google.android.gms.internal.pd dx(android.os.Parcel) -> a
    com.google.android.gms.internal.pd[] fv(int) -> a
    void a(com.google.android.gms.internal.pd,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.pf -> com.google.android.gms.internal.pf:
    com.google.android.gms.internal.pg CREATOR -> a
    java.util.HashMap aom -> i
    java.util.Set aon -> b
    int CK -> c
    java.lang.String CE -> d
    com.google.android.gms.internal.pd api -> e
    java.lang.String apa -> f
    com.google.android.gms.internal.pd apj -> g
    java.lang.String vc -> h
    java.util.HashMap hK() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean a(com.google.android.gms.internal.kr$a) -> a
    java.lang.Object b(com.google.android.gms.internal.kr$a) -> b
    com.google.android.gms.internal.pf oJ() -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.pg -> com.google.android.gms.internal.si:
    com.google.android.gms.internal.pf dy(android.os.Parcel) -> a
    com.google.android.gms.internal.pf[] fw(int) -> a
    void a(com.google.android.gms.internal.pf,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.pi -> com.google.android.gms.internal.pi:
    com.google.android.gms.internal.pj CREATOR -> a
    java.util.HashMap aom -> B
    java.util.Set aon -> b
    int CK -> c
    java.lang.String apl -> d
    com.google.android.gms.internal.pi$a apm -> e
    java.lang.String apn -> f
    java.lang.String apo -> g
    int app -> h
    com.google.android.gms.internal.pi$b apq -> i
    java.lang.String apr -> j
    java.lang.String OS -> k
    int ow -> l
    java.lang.String CE -> m
    com.google.android.gms.internal.pi$c aps -> n
    boolean apt -> o
    java.lang.String FR -> p
    com.google.android.gms.internal.pi$d apu -> q
    java.lang.String apv -> r
    int apw -> s
    java.util.List apx -> t
    java.util.List apy -> u
    int apz -> v
    int apA -> w
    java.lang.String apB -> x
    java.lang.String vf -> y
    java.util.List apC -> z
    boolean apD -> A
    java.util.HashMap hK() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean a(com.google.android.gms.internal.kr$a) -> a
    java.lang.Object b(com.google.android.gms.internal.kr$a) -> b
    com.google.android.gms.internal.pi oL() -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.pi$a -> com.google.android.gms.internal.pi$a:
    com.google.android.gms.internal.pk CREATOR -> a
    java.util.HashMap aom -> f
    java.util.Set aon -> b
    int CK -> c
    int apE -> d
    int apF -> e
    java.util.HashMap hK() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean a(com.google.android.gms.internal.kr$a) -> a
    java.lang.Object b(com.google.android.gms.internal.kr$a) -> b
    com.google.android.gms.internal.pi$a oM() -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.pi$b -> com.google.android.gms.internal.pi$b:
    com.google.android.gms.internal.pl CREATOR -> a
    java.util.HashMap aom -> g
    java.util.Set aon -> b
    int CK -> c
    com.google.android.gms.internal.pi$b$a apG -> d
    com.google.android.gms.internal.pi$b$b apH -> e
    int apI -> f
    java.util.HashMap hK() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean a(com.google.android.gms.internal.kr$a) -> a
    java.lang.Object b(com.google.android.gms.internal.kr$a) -> b
    com.google.android.gms.internal.pi$b oN() -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.pi$b$a -> com.google.android.gms.internal.pi$b$a:
    com.google.android.gms.internal.pm CREATOR -> a
    java.util.HashMap aom -> f
    java.util.Set aon -> b
    int CK -> c
    int apJ -> d
    int apK -> e
    java.util.HashMap hK() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean a(com.google.android.gms.internal.kr$a) -> a
    java.lang.Object b(com.google.android.gms.internal.kr$a) -> b
    com.google.android.gms.internal.pi$b$a oO() -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.pi$b$b -> com.google.android.gms.internal.pi$b$b:
    com.google.android.gms.internal.pn CREATOR -> a
    java.util.HashMap aom -> g
    java.util.Set aon -> b
    int CK -> c
    int lj -> d
    java.lang.String vf -> e
    int li -> f
    java.util.HashMap hK() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean a(com.google.android.gms.internal.kr$a) -> a
    java.lang.Object b(com.google.android.gms.internal.kr$a) -> b
    com.google.android.gms.internal.pi$b$b oP() -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.pi$c -> com.google.android.gms.internal.pi$c:
    com.google.android.gms.internal.po CREATOR -> a
    java.util.HashMap aom -> e
    java.util.Set aon -> b
    int CK -> c
    java.lang.String vf -> d
    java.util.HashMap hK() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean a(com.google.android.gms.internal.kr$a) -> a
    java.lang.Object b(com.google.android.gms.internal.kr$a) -> b
    com.google.android.gms.internal.pi$c oQ() -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.pi$d -> com.google.android.gms.internal.pi$d:
    com.google.android.gms.internal.pp CREATOR -> a
    java.util.HashMap aom -> j
    java.util.Set aon -> b
    int CK -> c
    java.lang.String aoL -> d
    java.lang.String apL -> e
    java.lang.String aoO -> f
    java.lang.String apM -> g
    java.lang.String apN -> h
    java.lang.String apO -> i
    java.util.HashMap hK() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean a(com.google.android.gms.internal.kr$a) -> a
    java.lang.Object b(com.google.android.gms.internal.kr$a) -> b
    com.google.android.gms.internal.pi$d oR() -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.pi$f -> com.google.android.gms.internal.pi$f:
    com.google.android.gms.internal.pq CREATOR -> a
    java.util.HashMap aom -> m
    java.util.Set aon -> b
    int CK -> c
    java.lang.String apP -> d
    java.lang.String UO -> e
    java.lang.String aoK -> f
    java.lang.String apQ -> g
    java.lang.String mName -> h
    boolean apR -> i
    java.lang.String apa -> j
    java.lang.String OH -> k
    int Gt -> l
    java.util.HashMap hK() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean a(com.google.android.gms.internal.kr$a) -> a
    java.lang.Object b(com.google.android.gms.internal.kr$a) -> b
    com.google.android.gms.internal.pi$f oS() -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.pi$g -> com.google.android.gms.internal.pi$g:
    com.google.android.gms.internal.pr CREATOR -> a
    java.util.HashMap aom -> f
    java.util.Set aon -> b
    int CK -> c
    boolean apR -> d
    java.lang.String mValue -> e
    java.util.HashMap hK() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean a(com.google.android.gms.internal.kr$a) -> a
    java.lang.Object b(com.google.android.gms.internal.kr$a) -> b
    com.google.android.gms.internal.pi$g oT() -> e
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.pi$h -> com.google.android.gms.internal.pi$h:
    com.google.android.gms.internal.ps CREATOR -> a
    java.util.HashMap aom -> g
    java.util.Set aon -> b
    int CK -> c
    java.lang.String XL -> d
    int apS -> h
    int Gt -> e
    java.lang.String mValue -> f
    java.util.HashMap hK() -> b
    int oU() -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean a(com.google.android.gms.internal.kr$a) -> a
    java.lang.Object b(com.google.android.gms.internal.kr$a) -> b
    com.google.android.gms.internal.pi$h oV() -> f
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object freeze() -> a
com.google.android.gms.internal.pj -> com.google.android.gms.internal.sj:
    com.google.android.gms.internal.pi dz(android.os.Parcel) -> a
    com.google.android.gms.internal.pi[] fx(int) -> a
    void a(com.google.android.gms.internal.pi,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.pk -> com.google.android.gms.internal.sk:
    com.google.android.gms.internal.pi$a dA(android.os.Parcel) -> a
    com.google.android.gms.internal.pi$a[] fy(int) -> a
    void a(com.google.android.gms.internal.pi$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.pl -> com.google.android.gms.internal.sl:
    com.google.android.gms.internal.pi$b dB(android.os.Parcel) -> a
    com.google.android.gms.internal.pi$b[] fz(int) -> a
    void a(com.google.android.gms.internal.pi$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.pm -> com.google.android.gms.internal.sm:
    com.google.android.gms.internal.pi$b$a dC(android.os.Parcel) -> a
    com.google.android.gms.internal.pi$b$a[] fA(int) -> a
    void a(com.google.android.gms.internal.pi$b$a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.pn -> com.google.android.gms.internal.sn:
    com.google.android.gms.internal.pi$b$b dD(android.os.Parcel) -> a
    com.google.android.gms.internal.pi$b$b[] fB(int) -> a
    void a(com.google.android.gms.internal.pi$b$b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.po -> com.google.android.gms.internal.so:
    com.google.android.gms.internal.pi$c dE(android.os.Parcel) -> a
    com.google.android.gms.internal.pi$c[] fC(int) -> a
    void a(com.google.android.gms.internal.pi$c,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.pp -> com.google.android.gms.internal.sp:
    com.google.android.gms.internal.pi$d dF(android.os.Parcel) -> a
    com.google.android.gms.internal.pi$d[] fD(int) -> a
    void a(com.google.android.gms.internal.pi$d,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.pq -> com.google.android.gms.internal.sq:
    com.google.android.gms.internal.pi$f dG(android.os.Parcel) -> a
    com.google.android.gms.internal.pi$f[] fE(int) -> a
    void a(com.google.android.gms.internal.pi$f,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.pr -> com.google.android.gms.internal.sr:
    com.google.android.gms.internal.pi$g dH(android.os.Parcel) -> a
    com.google.android.gms.internal.pi$g[] fF(int) -> a
    void a(com.google.android.gms.internal.pi$g,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.ps -> com.google.android.gms.internal.ss:
    com.google.android.gms.internal.pi$h dI(android.os.Parcel) -> a
    com.google.android.gms.internal.pi$h[] fG(int) -> a
    void a(com.google.android.gms.internal.pi$h,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.pw -> com.google.android.gms.internal.pw:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> b
    int[] avX -> a
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.px -> com.google.android.gms.internal.st:
    com.google.android.gms.internal.pw dX(android.os.Parcel) -> a
    com.google.android.gms.internal.pw[] ge(int) -> a
    void a(com.google.android.gms.internal.pw,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.py -> com.google.android.gms.internal.py:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> c
    java.lang.String[] avY -> a
    byte[][] avZ -> b
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.pz -> com.google.android.gms.internal.su:
    com.google.android.gms.internal.py dY(android.os.Parcel) -> a
    com.google.android.gms.internal.py[] gf(int) -> a
    void a(com.google.android.gms.internal.py,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.internal.q -> com.google.android.gms.internal.sv:
    java.lang.String getKey() -> a
    java.lang.String E() -> b
    java.lang.String F() -> c
    java.lang.String G() -> d
    java.lang.String H() -> e
    java.lang.String I() -> f
    java.lang.String J() -> g
    java.lang.String K() -> h
    java.lang.String L() -> i
    java.lang.String M() -> j
    java.lang.String N() -> k
    java.lang.String O() -> l
    java.lang.String P() -> m
    java.lang.String Q() -> n
    java.lang.String R() -> o
    java.lang.String S() -> p
    java.lang.String T() -> q
    java.lang.String U() -> r
    java.lang.String V() -> s
    java.lang.String W() -> t
com.google.android.gms.internal.qn -> com.google.android.gms.internal.sw:
    byte[] ayJ -> a
    int ayK -> b
    int ayL -> c
    void o(byte[]) -> a
com.google.android.gms.internal.qp -> com.google.android.gms.internal.sx:
    byte[] buffer -> a
    int ayV -> b
    int position -> c
    com.google.android.gms.internal.qp q(byte[]) -> a
    com.google.android.gms.internal.qp b(byte[],int,int) -> a
    void b(int,long) -> a
    void t(int,int) -> a
    void b(int,java.lang.String) -> a
    void c(int,long) -> b
    void B(long) -> a
    void gX(int) -> a
    void dj(java.lang.String) -> a
    void b(com.google.android.gms.internal.qw) -> a
    void c(com.google.android.gms.internal.qw) -> b
    void C(long) -> b
    int v(int,int) -> b
    int j(int,java.lang.String) -> b
    int b(int,com.google.android.gms.internal.qw) -> a
    int c(int,com.google.android.gms.internal.qw) -> b
    int e(int,long) -> c
    int gZ(int) -> b
    int dk(java.lang.String) -> b
    int d(com.google.android.gms.internal.qw) -> c
    int e(com.google.android.gms.internal.qw) -> d
    int E(long) -> c
    int rO() -> a
    void rP() -> b
    void b(byte) -> a
    void hb(int) -> c
    void t(byte[]) -> b
    void c(byte[],int,int) -> b
    void x(int,int) -> c
    int hc(int) -> d
    void hd(int) -> e
    int he(int) -> f
    void F(long) -> d
    int G(long) -> e
    long I(long) -> f
com.google.android.gms.internal.qp$a -> com.google.android.gms.internal.sy:
com.google.android.gms.internal.qq -> com.google.android.gms.internal.sz:
    com.google.android.gms.internal.qs ayW -> e
    int c() -> b
    void a(com.google.android.gms.internal.qp) -> a
    boolean a(com.google.android.gms.internal.qq) -> a
    int rQ() -> c
com.google.android.gms.internal.qr -> com.google.android.gms.internal.ta:
    int type -> a
    java.lang.Class ayX -> b
    int tag -> c
    boolean ayY -> d
    void a(java.lang.Object,com.google.android.gms.internal.qp) -> a
    void b(java.lang.Object,com.google.android.gms.internal.qp) -> b
    void c(java.lang.Object,com.google.android.gms.internal.qp) -> c
    int B(java.lang.Object) -> a
    int C(java.lang.Object) -> b
    int D(java.lang.Object) -> c
com.google.android.gms.internal.qs -> com.google.android.gms.internal.tb:
    com.google.android.gms.internal.qt ayZ -> a
    boolean aza -> b
    int[] azb -> c
    com.google.android.gms.internal.qt[] azc -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    boolean isEmpty() -> b
    com.google.android.gms.internal.qt hi(int) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int idealIntArraySize(int) -> b
    int idealByteArraySize(int) -> c
    boolean a(int[],int[],int) -> a
    boolean a(com.google.android.gms.internal.qt[],com.google.android.gms.internal.qt[],int) -> a
com.google.android.gms.internal.qt -> com.google.android.gms.internal.tc:
    com.google.android.gms.internal.qr azd -> a
    java.lang.Object aze -> b
    java.util.List azf -> c
    int c() -> a
    void a(com.google.android.gms.internal.qp) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    byte[] toByteArray() -> b
com.google.android.gms.internal.qw -> com.google.android.gms.internal.td:
    int azh -> f
    int rY() -> d
    int rZ() -> e
    int c() -> b
    void a(com.google.android.gms.internal.qp) -> a
    byte[] f(com.google.android.gms.internal.qw) -> a
    void a(com.google.android.gms.internal.qw,byte[],int,int) -> a
    java.lang.String toString() -> toString
com.google.android.gms.internal.qx -> com.google.android.gms.internal.te:
    java.lang.String g(com.google.android.gms.internal.qw) -> a
    void a(java.lang.String,java.lang.Object,java.lang.StringBuffer,java.lang.StringBuffer) -> a
    java.lang.String dl(java.lang.String) -> a
    java.lang.String dm(java.lang.String) -> b
    java.lang.String bh(java.lang.String) -> c
    void a(byte[],java.lang.StringBuffer) -> a
com.google.android.gms.internal.qy -> com.google.android.gms.internal.tf:
    int tag -> a
    byte[] azi -> b
    int c() -> a
    void a(com.google.android.gms.internal.qp) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.internal.qz -> com.google.android.gms.internal.tg:
    int[] azj -> a
    long[] azk -> b
    float[] azl -> c
    double[] azm -> d
    boolean[] azn -> e
    java.lang.String[] azo -> f
    byte[][] azp -> g
    byte[] azq -> h
    int hl(int) -> a
    int y(int,int) -> a
com.google.android.gms.internal.s -> com.google.android.gms.internal.th:
    java.lang.String getId() -> a
    boolean c(boolean) -> a
    java.lang.String c(java.lang.String) -> a
    void b(java.lang.String,boolean) -> a
com.google.android.gms.internal.s$a -> com.google.android.gms.internal.ti:
    com.google.android.gms.internal.s b(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.internal.s$a$a -> com.google.android.gms.internal.tj:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getId() -> a
    boolean c(boolean) -> a
    java.lang.String c(java.lang.String) -> a
    void b(java.lang.String,boolean) -> a
com.google.android.gms.internal.t -> com.google.android.gms.internal.tk:
    void onAdClicked() -> s
com.google.android.gms.internal.u -> com.google.android.gms.internal.tl:
    com.google.android.gms.internal.av lz -> a
    com.google.android.gms.internal.cy lA -> b
    com.google.android.gms.internal.u$b lB -> c
    com.google.android.gms.internal.ab lC -> d
    com.google.android.gms.internal.ae lD -> e
    boolean lE -> f
    android.content.ComponentCallbacks lF -> g
    void destroy() -> b
    com.google.android.gms.dynamic.d ab() -> a
    com.google.android.gms.internal.ay ac() -> i
    boolean isReady() -> c
    boolean a(com.google.android.gms.internal.av) -> a
    com.google.android.gms.internal.gu a(com.google.android.gms.internal.v) -> a
    void a(com.google.android.gms.internal.fy$a) -> a
    boolean a(com.google.android.gms.internal.fy,boolean) -> a
    void a(com.google.android.gms.internal.fy) -> a
    void b(android.view.View) -> a
    void ad() -> w
    void ae() -> x
    void onAdClicked() -> s
    void af() -> r
    void ag() -> p
    void ah() -> q
    void onAppEvent(java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.util.ArrayList) -> a
    void a(java.lang.String,boolean,int,android.content.Intent,com.google.android.gms.internal.ef) -> a
    void ai() -> k
    void aj() -> l
    void ak() -> m
    void al() -> n
    void am() -> o
    void an() -> h
    void pause() -> d
    void resume() -> e
    void b(com.google.android.gms.internal.av) -> b
    void a(com.google.android.gms.internal.bc) -> a
    void a(com.google.android.gms.internal.ay) -> a
    void a(com.google.android.gms.internal.bf) -> a
    void a(com.google.android.gms.internal.en) -> a
    void a(com.google.android.gms.internal.br) -> a
    void a(com.google.android.gms.internal.er,java.lang.String) -> a
    void a(java.util.List) -> a
    void d(boolean) -> a
    void showInterstitial() -> f
    void stopLoading() -> g
    android.os.Bundle a(com.google.android.gms.internal.an) -> a
    java.lang.String getMediationAdapterClassName() -> j
    void c(android.view.View) -> b
    void ao() -> y
    void a(int) -> a
    void ap() -> z
    void aq() -> A
    void ar() -> B
    void as() -> C
    void at() -> D
    boolean au() -> t
    com.google.android.gms.internal.fh$a a(com.google.android.gms.internal.av,android.os.Bundle) -> a
    void av() -> u
    void aw() -> v
    void e(boolean) -> b
    void a(java.util.HashSet) -> a
    void ax() -> E
    boolean b(com.google.android.gms.internal.fy) -> b
    com.google.android.gms.internal.u$b a(com.google.android.gms.internal.u) -> a
com.google.android.gms.internal.u$1 -> com.google.android.gms.internal.tm:
    com.google.android.gms.internal.u lG -> a
    void onLowMemory() -> onLowMemory
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.google.android.gms.internal.u$2 -> com.google.android.gms.internal.tn:
    com.google.android.gms.internal.v lH -> a
    com.google.android.gms.internal.u lG -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.android.gms.internal.u$3 -> com.google.android.gms.internal.to:
    com.google.android.gms.internal.v lH -> a
    com.google.android.gms.internal.u lG -> b
    void onClick(android.view.View) -> onClick
com.google.android.gms.internal.u$4 -> com.google.android.gms.internal.tp:
    android.content.Intent lI -> a
    com.google.android.gms.internal.u lG -> b
    void run() -> run
com.google.android.gms.internal.u$a -> com.google.android.gms.internal.tq:
    com.google.android.gms.internal.gl lJ -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    com.google.android.gms.internal.gl a(com.google.android.gms.internal.u$a) -> a
com.google.android.gms.internal.u$b -> com.google.android.gms.internal.tr:
    com.google.android.gms.internal.u$a lK -> a
    java.lang.String lL -> b
    android.content.Context lM -> c
    com.google.android.gms.internal.k lN -> d
    com.google.android.gms.internal.gs lO -> e
    com.google.android.gms.internal.bc lP -> f
    com.google.android.gms.internal.gf lQ -> g
    com.google.android.gms.internal.gf lR -> h
    com.google.android.gms.internal.ay lS -> i
    com.google.android.gms.internal.fy lT -> j
    com.google.android.gms.internal.fy$a lU -> k
    com.google.android.gms.internal.fz lV -> l
    com.google.android.gms.internal.bf lW -> m
    com.google.android.gms.internal.er lX -> n
    com.google.android.gms.internal.en lY -> o
    com.google.android.gms.internal.by lZ -> p
    com.google.android.gms.internal.bz ma -> q
    com.google.android.gms.internal.br mb -> r
    java.util.List mc -> s
    com.google.android.gms.internal.ek md -> t
    com.google.android.gms.internal.gd me -> u
    android.view.View mf -> v
    int mg -> w
    boolean mh -> x
    boolean mi -> y
    java.util.HashSet mj -> z
    void a(java.util.HashSet) -> a
    java.util.HashSet ay() -> a
com.google.android.gms.internal.v -> com.google.android.gms.internal.ts:
    com.google.android.gms.internal.v$a mk -> a
    boolean ml -> b
    boolean mm -> c
    void a(com.google.android.gms.internal.v$a) -> a
    void av() -> a
    boolean az() -> b
    void d(java.lang.String) -> a
com.google.android.gms.internal.v$a -> com.google.android.gms.internal.tt:
    void e(java.lang.String) -> a
com.google.android.gms.internal.v$b -> com.google.android.gms.internal.tu:
    com.google.android.gms.internal.fy$a mn -> a
    com.google.android.gms.internal.gu mo -> b
    void e(java.lang.String) -> a
com.google.android.gms.internal.w -> com.google.android.gms.internal.tv:
    void b(android.view.View) -> a
    void av() -> u
    void aw() -> v
com.google.android.gms.internal.x -> com.google.android.gms.internal.tw:
    java.util.List mp -> b
    java.util.concurrent.atomic.AtomicReference mq -> c
    com.google.android.gms.internal.u$b lB -> d
    java.util.concurrent.CountDownLatch mr -> a
    boolean aA() -> a
    void aB() -> c
    boolean aC() -> b
    android.content.Context i(android.content.Context) -> b
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(android.view.MotionEvent) -> a
    void a(int,int,int) -> a
    void run() -> run
    void a(com.google.android.gms.internal.g) -> a
com.google.android.gms.internal.y -> com.google.android.gms.internal.y:
    com.google.android.gms.internal.z CREATOR -> a
    int versionCode -> b
    boolean mi -> c
    boolean ms -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.internal.z -> com.google.android.gms.internal.tx:
    com.google.android.gms.internal.y a(android.os.Parcel) -> a
    com.google.android.gms.internal.y[] b(int) -> a
    void a(com.google.android.gms.internal.y,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.location.ActivityRecognitionResult -> com.google.android.gms.location.ActivityRecognitionResult:
    com.google.android.gms.location.ActivityRecognitionResultCreator CREATOR -> a
    int CK -> e
    java.util.List afX -> b
    long afY -> c
    long afZ -> d
    java.lang.String toString() -> toString
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.location.ActivityRecognitionResultCreator -> com.google.android.gms.location.a:
    com.google.android.gms.location.ActivityRecognitionResult createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.location.ActivityRecognitionResult[] newArray(int) -> a
    void a(com.google.android.gms.location.ActivityRecognitionResult,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.location.DetectedActivity -> com.google.android.gms.location.DetectedActivity:
    java.util.Comparator aga -> a
    com.google.android.gms.location.DetectedActivityCreator CREATOR -> b
    int CK -> e
    int agb -> c
    int agc -> d
    int getType() -> a
    int getConfidence() -> b
    int ev(int) -> a
    int getVersionCode() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.google.android.gms.location.DetectedActivity$1 -> com.google.android.gms.location.b:
    int a(com.google.android.gms.location.DetectedActivity,com.google.android.gms.location.DetectedActivity) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.android.gms.location.DetectedActivityCreator -> com.google.android.gms.location.c:
    com.google.android.gms.location.DetectedActivity createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.location.DetectedActivity[] newArray(int) -> a
    void a(com.google.android.gms.location.DetectedActivity,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.location.GeofencingRequest -> com.google.android.gms.location.GeofencingRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.util.List ago -> b
    int agp -> c
    int getVersionCode() -> a
    java.util.List ng() -> b
    int getInitialTrigger() -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.location.LocationRequest -> com.google.android.gms.location.LocationRequest:
    int CK -> j
    int mPriority -> a
    long agr -> b
    long ags -> c
    boolean Wg -> d
    long age -> e
    int agt -> f
    float agu -> g
    long agv -> h
    com.google.android.gms.location.d CREATOR -> i
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String ez(int) -> a
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int getVersionCode() -> a
com.google.android.gms.location.a -> com.google.android.gms.location.d:
    com.google.android.gms.location.GeofencingRequest cI(android.os.Parcel) -> a
    com.google.android.gms.location.GeofencingRequest[] ex(int) -> a
    void a(com.google.android.gms.location.GeofencingRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.location.d -> com.google.android.gms.location.f:
    com.google.android.gms.location.LocationRequest cJ(android.os.Parcel) -> a
    com.google.android.gms.location.LocationRequest[] eA(int) -> a
    void a(com.google.android.gms.location.LocationRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.location.e -> com.google.android.gms.location.e:
    int CK -> e
    int agw -> a
    int agx -> b
    long agy -> c
    com.google.android.gms.location.f CREATOR -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String eB(int) -> a
com.google.android.gms.location.f -> com.google.android.gms.location.g:
    com.google.android.gms.location.e cK(android.os.Parcel) -> a
    com.google.android.gms.location.e[] eE(int) -> a
    void a(com.google.android.gms.location.e,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.GoogleMapOptions -> com.google.android.gms.maps.GoogleMapOptions:
    com.google.android.gms.maps.a CREATOR -> a
    int CK -> b
    java.lang.Boolean akF -> c
    java.lang.Boolean akG -> d
    int akH -> e
    com.google.android.gms.maps.model.CameraPosition akI -> f
    java.lang.Boolean akJ -> g
    java.lang.Boolean akK -> h
    java.lang.Boolean akL -> i
    java.lang.Boolean akM -> j
    java.lang.Boolean akN -> k
    java.lang.Boolean akO -> l
    java.lang.Boolean akP -> m
    java.lang.Boolean akQ -> n
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> a
    byte nD() -> b
    byte nE() -> c
    byte nF() -> d
    byte nG() -> e
    byte nH() -> f
    byte nI() -> g
    byte nJ() -> h
    byte nK() -> i
    byte nL() -> j
    byte nM() -> k
    int getMapType() -> l
    com.google.android.gms.maps.model.CameraPosition getCamera() -> m
com.google.android.gms.maps.StreetViewPanoramaOptions -> com.google.android.gms.maps.StreetViewPanoramaOptions:
    com.google.android.gms.maps.c CREATOR -> a
    int CK -> b
    com.google.android.gms.maps.model.StreetViewPanoramaCamera alr -> c
    java.lang.String als -> d
    com.google.android.gms.maps.model.LatLng alt -> e
    java.lang.Integer alu -> f
    java.lang.Boolean alv -> g
    java.lang.Boolean akM -> h
    java.lang.Boolean alw -> i
    java.lang.Boolean alx -> j
    java.lang.Boolean akG -> k
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getVersionCode() -> a
    byte nS() -> b
    byte nI() -> c
    byte nT() -> d
    byte nU() -> e
    byte nE() -> f
    com.google.android.gms.maps.model.StreetViewPanoramaCamera getStreetViewPanoramaCamera() -> g
    com.google.android.gms.maps.model.LatLng getPosition() -> h
    java.lang.Integer getRadius() -> i
    java.lang.String getPanoramaId() -> j
com.google.android.gms.maps.a -> com.google.android.gms.maps.a:
    com.google.android.gms.maps.GoogleMapOptions cX(android.os.Parcel) -> a
    com.google.android.gms.maps.GoogleMapOptions[] eT(int) -> a
    void a(com.google.android.gms.maps.GoogleMapOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.b -> com.google.android.gms.maps.b:
    void a(com.google.android.gms.maps.GoogleMapOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.c -> com.google.android.gms.maps.c:
    com.google.android.gms.maps.StreetViewPanoramaOptions cY(android.os.Parcel) -> a
    com.google.android.gms.maps.StreetViewPanoramaOptions[] eU(int) -> a
    void a(com.google.android.gms.maps.StreetViewPanoramaOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.internal.a -> com.google.android.gms.maps.internal.a:
    java.lang.Boolean a(byte) -> a
    byte c(java.lang.Boolean) -> a
com.google.android.gms.maps.internal.aa -> com.google.android.gms.maps.internal.b:
    boolean alL -> a
    boolean ob() -> a
com.google.android.gms.maps.internal.y -> com.google.android.gms.maps.internal.y:
    com.google.android.gms.maps.internal.z CREATOR -> a
    int versionCode -> b
    android.graphics.Point alK -> c
    int getVersionCode() -> a
    android.graphics.Point oa() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.maps.internal.z -> com.google.android.gms.maps.internal.c:
    com.google.android.gms.maps.internal.y cZ(android.os.Parcel) -> a
    com.google.android.gms.maps.internal.y[] eV(int) -> a
    void a(com.google.android.gms.maps.internal.y,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.BitmapDescriptor -> com.google.android.gms.maps.model.a:
    com.google.android.gms.dynamic.d akk -> a
    com.google.android.gms.dynamic.d nA() -> a
com.google.android.gms.maps.model.CameraPosition -> com.google.android.gms.maps.model.CameraPosition:
    com.google.android.gms.maps.model.a CREATOR -> a
    int CK -> f
    com.google.android.gms.maps.model.LatLng target -> b
    float zoom -> c
    float tilt -> d
    float bearing -> e
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int getVersionCode() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.CircleOptions -> com.google.android.gms.maps.model.CircleOptions:
    com.google.android.gms.maps.model.c CREATOR -> a
    int CK -> b
    com.google.android.gms.maps.model.LatLng alS -> c
    double alT -> d
    float alU -> e
    int alV -> f
    int alW -> g
    float alX -> h
    boolean alY -> i
    int getVersionCode() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    com.google.android.gms.maps.model.LatLng getCenter() -> b
    double getRadius() -> c
    float getStrokeWidth() -> d
    int getStrokeColor() -> e
    int getFillColor() -> f
    float getZIndex() -> g
    boolean isVisible() -> h
com.google.android.gms.maps.model.GroundOverlayOptions -> com.google.android.gms.maps.model.GroundOverlayOptions:
    com.google.android.gms.maps.model.e CREATOR -> a
    int CK -> b
    com.google.android.gms.maps.model.BitmapDescriptor ama -> c
    com.google.android.gms.maps.model.LatLng amb -> d
    float amc -> e
    float amd -> f
    com.google.android.gms.maps.model.LatLngBounds ame -> g
    float alQ -> h
    float alX -> i
    boolean alY -> j
    float amf -> k
    float amg -> l
    float amh -> m
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    android.os.IBinder od() -> a
    int getVersionCode() -> b
    com.google.android.gms.maps.model.LatLng getLocation() -> c
    float getWidth() -> d
    float getHeight() -> e
    com.google.android.gms.maps.model.LatLngBounds getBounds() -> f
    float getBearing() -> g
    float getZIndex() -> h
    float getTransparency() -> i
    float getAnchorU() -> j
    float getAnchorV() -> k
    boolean isVisible() -> l
com.google.android.gms.maps.model.LatLng -> com.google.android.gms.maps.model.LatLng:
    com.google.android.gms.maps.model.i CREATOR -> a
    int CK -> d
    double latitude -> b
    double longitude -> c
    int getVersionCode() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.LatLngBounds -> com.google.android.gms.maps.model.LatLngBounds:
    com.google.android.gms.maps.model.g CREATOR -> a
    int CK -> d
    com.google.android.gms.maps.model.LatLng southwest -> b
    com.google.android.gms.maps.model.LatLng northeast -> c
    int getVersionCode() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.MarkerOptions -> com.google.android.gms.maps.model.MarkerOptions:
    com.google.android.gms.maps.model.k CREATOR -> a
    int CK -> b
    com.google.android.gms.maps.model.LatLng alt -> c
    java.lang.String OH -> d
    java.lang.String amp -> e
    com.google.android.gms.maps.model.BitmapDescriptor amq -> f
    float amg -> g
    float amh -> h
    boolean amr -> i
    boolean alY -> j
    boolean ams -> k
    float amt -> l
    float amu -> m
    float amv -> n
    float mAlpha -> o
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int getVersionCode() -> a
    android.os.IBinder oe() -> b
    com.google.android.gms.maps.model.LatLng getPosition() -> c
    java.lang.String getTitle() -> d
    java.lang.String getSnippet() -> e
    float getAnchorU() -> f
    float getAnchorV() -> g
    boolean isDraggable() -> h
    boolean isVisible() -> i
    boolean isFlat() -> j
    float getRotation() -> k
    float getInfoWindowAnchorU() -> l
    float getInfoWindowAnchorV() -> m
    float getAlpha() -> n
com.google.android.gms.maps.model.PolygonOptions -> com.google.android.gms.maps.model.PolygonOptions:
    com.google.android.gms.maps.model.m CREATOR -> a
    int CK -> b
    java.util.List amx -> c
    java.util.List amy -> d
    float alU -> e
    int alV -> f
    int alW -> g
    float alX -> h
    boolean alY -> i
    boolean amz -> j
    int getVersionCode() -> a
    java.util.List of() -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.util.List getPoints() -> c
    float getStrokeWidth() -> d
    int getStrokeColor() -> e
    int getFillColor() -> f
    float getZIndex() -> g
    boolean isVisible() -> h
    boolean isGeodesic() -> i
com.google.android.gms.maps.model.PolylineOptions -> com.google.android.gms.maps.model.PolylineOptions:
    com.google.android.gms.maps.model.o CREATOR -> a
    int CK -> b
    java.util.List amx -> c
    float amc -> d
    int mColor -> e
    float alX -> f
    boolean alY -> g
    boolean amz -> h
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int getVersionCode() -> a
    java.util.List getPoints() -> b
    float getWidth() -> c
    int getColor() -> d
    float getZIndex() -> e
    boolean isVisible() -> f
    boolean isGeodesic() -> g
com.google.android.gms.maps.model.StreetViewPanoramaCamera -> com.google.android.gms.maps.model.StreetViewPanoramaCamera:
    com.google.android.gms.maps.model.q CREATOR -> a
    int CK -> e
    float zoom -> b
    float tilt -> c
    float bearing -> d
    com.google.android.gms.maps.model.StreetViewPanoramaOrientation amB -> f
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int getVersionCode() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.StreetViewPanoramaLink -> com.google.android.gms.maps.model.StreetViewPanoramaLink:
    com.google.android.gms.maps.model.r CREATOR -> a
    int CK -> d
    java.lang.String panoId -> b
    float bearing -> c
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int getVersionCode() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.StreetViewPanoramaLocation -> com.google.android.gms.maps.model.StreetViewPanoramaLocation:
    com.google.android.gms.maps.model.s CREATOR -> a
    int CK -> e
    com.google.android.gms.maps.model.StreetViewPanoramaLink[] links -> b
    com.google.android.gms.maps.model.LatLng position -> c
    java.lang.String panoId -> d
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int getVersionCode() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.StreetViewPanoramaOrientation -> com.google.android.gms.maps.model.StreetViewPanoramaOrientation:
    com.google.android.gms.maps.model.t CREATOR -> a
    int CK -> d
    float tilt -> b
    float bearing -> c
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int getVersionCode() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.StreetViewPanoramaOrientation$Builder -> com.google.android.gms.maps.model.b:
    float bearing -> a
    float tilt -> b
    com.google.android.gms.maps.model.StreetViewPanoramaOrientation$Builder tilt(float) -> a
    com.google.android.gms.maps.model.StreetViewPanoramaOrientation$Builder bearing(float) -> b
    com.google.android.gms.maps.model.StreetViewPanoramaOrientation build() -> a
com.google.android.gms.maps.model.Tile -> com.google.android.gms.maps.model.Tile:
    com.google.android.gms.maps.model.u CREATOR -> a
    int CK -> e
    int width -> b
    int height -> c
    byte[] data -> d
    int getVersionCode() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
com.google.android.gms.maps.model.TileOverlayOptions -> com.google.android.gms.maps.model.TileOverlayOptions:
    com.google.android.gms.maps.model.w CREATOR -> a
    int CK -> b
    com.google.android.gms.maps.model.internal.o amD -> c
    com.google.android.gms.maps.model.TileProvider amE -> d
    boolean alY -> e
    float alX -> f
    boolean amF -> g
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int getVersionCode() -> a
    android.os.IBinder og() -> b
    float getZIndex() -> c
    boolean isVisible() -> d
    boolean getFadeIn() -> e
    com.google.android.gms.maps.model.internal.o a(com.google.android.gms.maps.model.TileOverlayOptions) -> a
com.google.android.gms.maps.model.TileOverlayOptions$1 -> com.google.android.gms.maps.model.c:
    com.google.android.gms.maps.model.internal.o amG -> c
    com.google.android.gms.maps.model.TileOverlayOptions amH -> a
com.google.android.gms.maps.model.TileProvider -> com.google.android.gms.maps.model.d:
    com.google.android.gms.maps.model.Tile NO_TILE -> b
com.google.android.gms.maps.model.VisibleRegion -> com.google.android.gms.maps.model.VisibleRegion:
    com.google.android.gms.maps.model.y CREATOR -> a
    int CK -> g
    com.google.android.gms.maps.model.LatLng nearLeft -> b
    com.google.android.gms.maps.model.LatLng nearRight -> c
    com.google.android.gms.maps.model.LatLng farLeft -> d
    com.google.android.gms.maps.model.LatLng farRight -> e
    com.google.android.gms.maps.model.LatLngBounds latLngBounds -> f
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int hashCode() -> hashCode
    int getVersionCode() -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.maps.model.a -> com.google.android.gms.maps.model.e:
    com.google.android.gms.maps.model.CameraPosition da(android.os.Parcel) -> a
    com.google.android.gms.maps.model.CameraPosition[] eW(int) -> a
    void a(com.google.android.gms.maps.model.CameraPosition,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.b -> com.google.android.gms.maps.model.f:
    void a(com.google.android.gms.maps.model.CameraPosition,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.c -> com.google.android.gms.maps.model.g:
    com.google.android.gms.maps.model.CircleOptions db(android.os.Parcel) -> a
    com.google.android.gms.maps.model.CircleOptions[] eX(int) -> a
    void a(com.google.android.gms.maps.model.CircleOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.d -> com.google.android.gms.maps.model.h:
    void a(com.google.android.gms.maps.model.CircleOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.e -> com.google.android.gms.maps.model.i:
    com.google.android.gms.maps.model.GroundOverlayOptions dc(android.os.Parcel) -> a
    com.google.android.gms.maps.model.GroundOverlayOptions[] eY(int) -> a
    void a(com.google.android.gms.maps.model.GroundOverlayOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.f -> com.google.android.gms.maps.model.j:
    void a(com.google.android.gms.maps.model.GroundOverlayOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.g -> com.google.android.gms.maps.model.k:
    com.google.android.gms.maps.model.LatLngBounds dd(android.os.Parcel) -> a
    com.google.android.gms.maps.model.LatLngBounds[] eZ(int) -> a
    void a(com.google.android.gms.maps.model.LatLngBounds,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.h -> com.google.android.gms.maps.model.l:
    void a(com.google.android.gms.maps.model.LatLngBounds,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.i -> com.google.android.gms.maps.model.m:
    com.google.android.gms.maps.model.LatLng de(android.os.Parcel) -> a
    com.google.android.gms.maps.model.LatLng[] fa(int) -> a
    void a(com.google.android.gms.maps.model.LatLng,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.internal.a -> com.google.android.gms.maps.model.internal.a:
    com.google.android.gms.maps.model.internal.b CREATOR -> a
    int CK -> b
    byte amJ -> c
    android.os.Bundle amK -> d
    android.graphics.Bitmap amL -> e
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int getVersionCode() -> a
    byte oh() -> b
    android.os.Bundle oi() -> c
    android.graphics.Bitmap getBitmap() -> d
com.google.android.gms.maps.model.internal.b -> com.google.android.gms.maps.model.internal.b:
    com.google.android.gms.maps.model.internal.a dp(android.os.Parcel) -> a
    com.google.android.gms.maps.model.internal.a[] fl(int) -> a
    void a(com.google.android.gms.maps.model.internal.a,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.internal.c -> com.google.android.gms.maps.model.internal.c:
    com.google.android.gms.maps.model.internal.d CREATOR -> a
    int CK -> b
    int type -> c
    android.os.Bundle amK -> d
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int getVersionCode() -> a
    int getType() -> b
    android.os.Bundle oi() -> c
com.google.android.gms.maps.model.internal.d -> com.google.android.gms.maps.model.internal.d:
    com.google.android.gms.maps.model.internal.c dq(android.os.Parcel) -> a
    com.google.android.gms.maps.model.internal.c[] fm(int) -> a
    void a(com.google.android.gms.maps.model.internal.c,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.internal.e -> com.google.android.gms.maps.model.internal.e:
    com.google.android.gms.maps.model.internal.f CREATOR -> a
    int CK -> b
    com.google.android.gms.maps.model.internal.a amM -> c
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int getVersionCode() -> a
    com.google.android.gms.maps.model.internal.a oj() -> b
com.google.android.gms.maps.model.internal.f -> com.google.android.gms.maps.model.internal.f:
    com.google.android.gms.maps.model.internal.e dr(android.os.Parcel) -> a
    com.google.android.gms.maps.model.internal.e[] fn(int) -> a
    void a(com.google.android.gms.maps.model.internal.e,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.internal.o -> com.google.android.gms.maps.model.internal.g:
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> a
com.google.android.gms.maps.model.internal.o$a -> com.google.android.gms.maps.model.internal.h:
    com.google.android.gms.maps.model.internal.o bE(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.maps.model.internal.o$a$a -> com.google.android.gms.maps.model.internal.i:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    com.google.android.gms.maps.model.Tile getTile(int,int,int) -> a
com.google.android.gms.maps.model.internal.p -> com.google.android.gms.maps.model.internal.p:
    com.google.android.gms.maps.model.internal.q CREATOR -> a
    int CK -> b
    com.google.android.gms.maps.model.internal.a amN -> c
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    int getVersionCode() -> a
    com.google.android.gms.maps.model.internal.a ol() -> b
com.google.android.gms.maps.model.internal.q -> com.google.android.gms.maps.model.internal.j:
    com.google.android.gms.maps.model.internal.p ds(android.os.Parcel) -> a
    com.google.android.gms.maps.model.internal.p[] fp(int) -> a
    void a(com.google.android.gms.maps.model.internal.p,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.j -> com.google.android.gms.maps.model.n:
    void a(com.google.android.gms.maps.model.LatLng,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.k -> com.google.android.gms.maps.model.o:
    com.google.android.gms.maps.model.MarkerOptions df(android.os.Parcel) -> a
    com.google.android.gms.maps.model.MarkerOptions[] fb(int) -> a
    void a(com.google.android.gms.maps.model.MarkerOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.l -> com.google.android.gms.maps.model.p:
    void a(com.google.android.gms.maps.model.MarkerOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.m -> com.google.android.gms.maps.model.q:
    com.google.android.gms.maps.model.PolygonOptions dg(android.os.Parcel) -> a
    com.google.android.gms.maps.model.PolygonOptions[] fc(int) -> a
    void a(com.google.android.gms.maps.model.PolygonOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.n -> com.google.android.gms.maps.model.r:
    void a(com.google.android.gms.maps.model.PolygonOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.o -> com.google.android.gms.maps.model.s:
    com.google.android.gms.maps.model.PolylineOptions dh(android.os.Parcel) -> a
    com.google.android.gms.maps.model.PolylineOptions[] fd(int) -> a
    void a(com.google.android.gms.maps.model.PolylineOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.p -> com.google.android.gms.maps.model.t:
    void a(com.google.android.gms.maps.model.PolylineOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.q -> com.google.android.gms.maps.model.u:
    com.google.android.gms.maps.model.StreetViewPanoramaCamera di(android.os.Parcel) -> a
    com.google.android.gms.maps.model.StreetViewPanoramaCamera[] fe(int) -> a
    void a(com.google.android.gms.maps.model.StreetViewPanoramaCamera,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.r -> com.google.android.gms.maps.model.v:
    com.google.android.gms.maps.model.StreetViewPanoramaLink dj(android.os.Parcel) -> a
    com.google.android.gms.maps.model.StreetViewPanoramaLink[] ff(int) -> a
    void a(com.google.android.gms.maps.model.StreetViewPanoramaLink,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.s -> com.google.android.gms.maps.model.w:
    com.google.android.gms.maps.model.StreetViewPanoramaLocation dk(android.os.Parcel) -> a
    com.google.android.gms.maps.model.StreetViewPanoramaLocation[] fg(int) -> a
    void a(com.google.android.gms.maps.model.StreetViewPanoramaLocation,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.t -> com.google.android.gms.maps.model.x:
    com.google.android.gms.maps.model.StreetViewPanoramaOrientation dl(android.os.Parcel) -> a
    com.google.android.gms.maps.model.StreetViewPanoramaOrientation[] fh(int) -> a
    void a(com.google.android.gms.maps.model.StreetViewPanoramaOrientation,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.u -> com.google.android.gms.maps.model.y:
    com.google.android.gms.maps.model.Tile dm(android.os.Parcel) -> a
    com.google.android.gms.maps.model.Tile[] fi(int) -> a
    void a(com.google.android.gms.maps.model.Tile,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.v -> com.google.android.gms.maps.model.z:
    void a(com.google.android.gms.maps.model.Tile,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.w -> com.google.android.gms.maps.model.aa:
    com.google.android.gms.maps.model.TileOverlayOptions dn(android.os.Parcel) -> a
    com.google.android.gms.maps.model.TileOverlayOptions[] fj(int) -> a
    void a(com.google.android.gms.maps.model.TileOverlayOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.x -> com.google.android.gms.maps.model.ab:
    void a(com.google.android.gms.maps.model.TileOverlayOptions,android.os.Parcel,int) -> a
com.google.android.gms.maps.model.y -> com.google.android.gms.maps.model.ac:
    com.google.android.gms.maps.model.VisibleRegion do(android.os.Parcel) -> a
    com.google.android.gms.maps.model.VisibleRegion[] fk(int) -> a
    void a(com.google.android.gms.maps.model.VisibleRegion,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.maps.model.z -> com.google.android.gms.maps.model.ad:
    void a(com.google.android.gms.maps.model.VisibleRegion,android.os.Parcel,int) -> a
com.google.android.gms.plus.internal.PlusCommonExtras -> com.google.android.gms.plus.internal.PlusCommonExtras:
    java.lang.String TAG -> a
    com.google.android.gms.plus.internal.f CREATOR -> b
    int CK -> c
    java.lang.String anN -> d
    java.lang.String anO -> e
    int getVersionCode() -> a
    java.lang.String ox() -> b
    java.lang.String oy() -> c
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.plus.internal.f -> com.google.android.gms.plus.internal.a:
    com.google.android.gms.plus.internal.PlusCommonExtras dv(android.os.Parcel) -> a
    com.google.android.gms.plus.internal.PlusCommonExtras[] ft(int) -> a
    void a(com.google.android.gms.plus.internal.PlusCommonExtras,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.plus.internal.h -> com.google.android.gms.plus.internal.h:
    com.google.android.gms.plus.internal.i CREATOR -> a
    int CK -> b
    java.lang.String DZ -> c
    java.lang.String[] anQ -> d
    java.lang.String[] anR -> e
    java.lang.String[] anS -> f
    java.lang.String anT -> g
    java.lang.String anU -> h
    java.lang.String anV -> i
    java.lang.String anW -> j
    com.google.android.gms.plus.internal.PlusCommonExtras anX -> k
    int getVersionCode() -> a
    java.lang.String getAccountName() -> b
    java.lang.String[] oz() -> c
    java.lang.String[] oA() -> d
    java.lang.String[] oB() -> e
    java.lang.String oC() -> f
    java.lang.String oD() -> g
    java.lang.String oE() -> h
    java.lang.String oF() -> i
    com.google.android.gms.plus.internal.PlusCommonExtras oG() -> j
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.plus.internal.i -> com.google.android.gms.plus.internal.b:
    com.google.android.gms.plus.internal.h dw(android.os.Parcel) -> a
    com.google.android.gms.plus.internal.h[] fu(int) -> a
    void a(com.google.android.gms.plus.internal.h,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.plus.model.moments.ItemScope -> com.google.android.gms.plus.a.a.a:
com.google.android.gms.plus.model.moments.Moment -> com.google.android.gms.plus.a.a.b:
com.google.android.gms.plus.model.people.Person -> com.google.android.gms.plus.a.b.a:
com.google.android.gms.plus.model.people.Person$AgeRange -> com.google.android.gms.plus.a.b.b:
com.google.android.gms.plus.model.people.Person$Cover -> com.google.android.gms.plus.a.b.c:
com.google.android.gms.plus.model.people.Person$Cover$CoverInfo -> com.google.android.gms.plus.a.b.d:
com.google.android.gms.plus.model.people.Person$Cover$CoverPhoto -> com.google.android.gms.plus.a.b.e:
com.google.android.gms.plus.model.people.Person$Image -> com.google.android.gms.plus.a.b.f:
com.google.android.gms.plus.model.people.Person$Name -> com.google.android.gms.plus.a.b.g:
com.google.android.gms.plus.model.people.Person$Organizations -> com.google.android.gms.plus.a.b.h:
com.google.android.gms.plus.model.people.Person$PlacesLived -> com.google.android.gms.plus.a.b.i:
com.google.android.gms.plus.model.people.Person$Urls -> com.google.android.gms.plus.a.b.j:
com.google.android.gms.wallet.Address -> com.google.android.gms.wallet.Address:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> l
    java.lang.String name -> a
    java.lang.String afK -> b
    java.lang.String afL -> c
    java.lang.String afM -> d
    java.lang.String vk -> e
    java.lang.String auD -> f
    java.lang.String auE -> g
    java.lang.String afR -> h
    java.lang.String afT -> i
    boolean afU -> j
    java.lang.String afV -> k
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.Cart -> com.google.android.gms.wallet.Cart:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> d
    java.lang.String auF -> a
    java.lang.String auG -> b
    java.util.ArrayList auH -> c
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.CountrySpecification -> com.google.android.gms.wallet.CountrySpecification:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> b
    java.lang.String vk -> a
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.FullWallet -> com.google.android.gms.wallet.FullWallet:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> k
    java.lang.String auL -> a
    java.lang.String auM -> b
    com.google.android.gms.wallet.ProxyCard auN -> c
    java.lang.String auO -> d
    com.google.android.gms.wallet.Address auP -> e
    com.google.android.gms.wallet.Address auQ -> f
    java.lang.String[] auR -> g
    com.google.android.gms.identity.intents.model.UserAddress auS -> h
    com.google.android.gms.identity.intents.model.UserAddress auT -> i
    com.google.android.gms.wallet.InstrumentInfo[] auU -> j
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.FullWalletRequest -> com.google.android.gms.wallet.FullWalletRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> d
    java.lang.String auL -> a
    java.lang.String auM -> b
    com.google.android.gms.wallet.Cart auV -> c
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.InstrumentInfo -> com.google.android.gms.wallet.InstrumentInfo:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String auX -> b
    java.lang.String auY -> c
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String getInstrumentType() -> b
    java.lang.String getInstrumentDetails() -> c
com.google.android.gms.wallet.LineItem -> com.google.android.gms.wallet.LineItem:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> g
    java.lang.String description -> a
    java.lang.String auZ -> b
    java.lang.String ava -> c
    java.lang.String auF -> d
    int avb -> e
    java.lang.String auG -> f
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.LoyaltyWalletObject -> com.google.android.gms.wallet.LoyaltyWalletObject:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> w
    java.lang.String fl -> a
    java.lang.String avd -> b
    java.lang.String ave -> c
    java.lang.String avf -> d
    java.lang.String aki -> e
    java.lang.String avg -> f
    java.lang.String avh -> g
    java.lang.String avi -> h
    java.lang.String avj -> i
    java.lang.String avk -> j
    int state -> k
    java.util.ArrayList avl -> l
    com.google.android.gms.wallet.wobs.l avm -> m
    java.util.ArrayList avn -> n
    java.lang.String avo -> o
    java.lang.String avp -> p
    java.util.ArrayList avq -> q
    boolean avr -> r
    java.util.ArrayList avs -> s
    java.util.ArrayList avt -> t
    java.util.ArrayList avu -> u
    com.google.android.gms.wallet.wobs.f avv -> v
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.MaskedWallet -> com.google.android.gms.wallet.MaskedWallet:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> l
    java.lang.String auL -> a
    java.lang.String auM -> b
    java.lang.String[] auR -> c
    java.lang.String auO -> d
    com.google.android.gms.wallet.Address auP -> e
    com.google.android.gms.wallet.Address auQ -> f
    com.google.android.gms.wallet.LoyaltyWalletObject[] avw -> g
    com.google.android.gms.wallet.OfferWalletObject[] avx -> h
    com.google.android.gms.identity.intents.model.UserAddress auS -> i
    com.google.android.gms.identity.intents.model.UserAddress auT -> j
    com.google.android.gms.wallet.InstrumentInfo[] auU -> k
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.MaskedWalletRequest -> com.google.android.gms.wallet.MaskedWalletRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> o
    java.lang.String auM -> a
    boolean avz -> b
    boolean avA -> c
    boolean avB -> d
    java.lang.String avC -> e
    java.lang.String auG -> f
    java.lang.String avD -> g
    com.google.android.gms.wallet.Cart auV -> h
    boolean avE -> i
    boolean avF -> j
    com.google.android.gms.wallet.CountrySpecification[] avG -> k
    boolean avH -> l
    boolean avI -> m
    java.util.ArrayList avJ -> n
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.NotifyTransactionStatusRequest -> com.google.android.gms.wallet.NotifyTransactionStatusRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String auL -> b
    int status -> c
    java.lang.String avL -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.OfferWalletObject -> com.google.android.gms.wallet.OfferWalletObject:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> d
    java.lang.String fl -> a
    java.lang.String avN -> b
    com.google.android.gms.wallet.wobs.CommonWalletObject avO -> c
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.ProxyCard -> com.google.android.gms.wallet.ProxyCard:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> e
    java.lang.String avP -> a
    java.lang.String avQ -> b
    int avR -> c
    int avS -> d
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.a -> com.google.android.gms.wallet.a:
    com.google.android.gms.wallet.Address dJ(android.os.Parcel) -> a
    com.google.android.gms.wallet.Address[] fQ(int) -> a
    void a(com.google.android.gms.wallet.Address,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.b -> com.google.android.gms.wallet.b:
    com.google.android.gms.wallet.Cart dK(android.os.Parcel) -> a
    com.google.android.gms.wallet.Cart[] fR(int) -> a
    void a(com.google.android.gms.wallet.Cart,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.c -> com.google.android.gms.wallet.c:
    com.google.android.gms.wallet.CountrySpecification dL(android.os.Parcel) -> a
    com.google.android.gms.wallet.CountrySpecification[] fS(int) -> a
    void a(com.google.android.gms.wallet.CountrySpecification,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.d -> com.google.android.gms.wallet.d:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> c
    com.google.android.gms.wallet.LoyaltyWalletObject auJ -> a
    com.google.android.gms.wallet.OfferWalletObject auK -> b
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.e -> com.google.android.gms.wallet.e:
    com.google.android.gms.wallet.d dM(android.os.Parcel) -> a
    com.google.android.gms.wallet.d[] fT(int) -> a
    void a(com.google.android.gms.wallet.d,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.f -> com.google.android.gms.wallet.f:
    com.google.android.gms.wallet.FullWallet dN(android.os.Parcel) -> a
    com.google.android.gms.wallet.FullWallet[] fU(int) -> a
    void a(com.google.android.gms.wallet.FullWallet,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.fragment.WalletFragmentInitParams -> com.google.android.gms.wallet.fragment.WalletFragmentInitParams:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String DZ -> b
    com.google.android.gms.wallet.MaskedWalletRequest awg -> c
    int awu -> d
    com.google.android.gms.wallet.MaskedWallet awh -> e
    java.lang.String getAccountName() -> a
    com.google.android.gms.wallet.MaskedWalletRequest getMaskedWalletRequest() -> b
    int getMaskedWalletRequestCode() -> c
    com.google.android.gms.wallet.MaskedWallet getMaskedWallet() -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.fragment.WalletFragmentOptions -> com.google.android.gms.wallet.fragment.WalletFragmentOptions:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    int avV -> b
    int mTheme -> c
    com.google.android.gms.wallet.fragment.WalletFragmentStyle aww -> d
    int Oi -> e
    int getEnvironment() -> a
    int getTheme() -> b
    com.google.android.gms.wallet.fragment.WalletFragmentStyle getFragmentStyle() -> c
    int getMode() -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.fragment.WalletFragmentStyle -> com.google.android.gms.wallet.fragment.WalletFragmentStyle:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    android.os.Bundle awy -> b
    int awz -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.fragment.a -> com.google.android.gms.wallet.fragment.a:
    com.google.android.gms.wallet.fragment.WalletFragmentInitParams dZ(android.os.Parcel) -> a
    com.google.android.gms.wallet.fragment.WalletFragmentInitParams[] gh(int) -> a
    void a(com.google.android.gms.wallet.fragment.WalletFragmentInitParams,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.fragment.b -> com.google.android.gms.wallet.fragment.b:
    com.google.android.gms.wallet.fragment.WalletFragmentOptions ea(android.os.Parcel) -> a
    com.google.android.gms.wallet.fragment.WalletFragmentOptions[] gi(int) -> a
    void a(com.google.android.gms.wallet.fragment.WalletFragmentOptions,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.fragment.c -> com.google.android.gms.wallet.fragment.c:
    com.google.android.gms.wallet.fragment.WalletFragmentStyle eb(android.os.Parcel) -> a
    com.google.android.gms.wallet.fragment.WalletFragmentStyle[] gj(int) -> a
    void a(com.google.android.gms.wallet.fragment.WalletFragmentStyle,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.g -> com.google.android.gms.wallet.g:
    com.google.android.gms.wallet.FullWalletRequest dO(android.os.Parcel) -> a
    com.google.android.gms.wallet.FullWalletRequest[] fV(int) -> a
    void a(com.google.android.gms.wallet.FullWalletRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.h -> com.google.android.gms.wallet.h:
    com.google.android.gms.wallet.InstrumentInfo dP(android.os.Parcel) -> a
    com.google.android.gms.wallet.InstrumentInfo[] fW(int) -> a
    void a(com.google.android.gms.wallet.InstrumentInfo,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.i -> com.google.android.gms.wallet.i:
    com.google.android.gms.wallet.LineItem dQ(android.os.Parcel) -> a
    com.google.android.gms.wallet.LineItem[] fX(int) -> a
    void a(com.google.android.gms.wallet.LineItem,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.j -> com.google.android.gms.wallet.j:
    com.google.android.gms.wallet.LoyaltyWalletObject dR(android.os.Parcel) -> a
    com.google.android.gms.wallet.LoyaltyWalletObject[] fY(int) -> a
    void a(com.google.android.gms.wallet.LoyaltyWalletObject,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.k -> com.google.android.gms.wallet.k:
    com.google.android.gms.wallet.MaskedWallet dS(android.os.Parcel) -> a
    com.google.android.gms.wallet.MaskedWallet[] fZ(int) -> a
    void a(com.google.android.gms.wallet.MaskedWallet,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.l -> com.google.android.gms.wallet.l:
    com.google.android.gms.wallet.MaskedWalletRequest dT(android.os.Parcel) -> a
    com.google.android.gms.wallet.MaskedWalletRequest[] ga(int) -> a
    void a(com.google.android.gms.wallet.MaskedWalletRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.m -> com.google.android.gms.wallet.m:
    com.google.android.gms.wallet.NotifyTransactionStatusRequest dU(android.os.Parcel) -> a
    com.google.android.gms.wallet.NotifyTransactionStatusRequest[] gb(int) -> a
    void a(com.google.android.gms.wallet.NotifyTransactionStatusRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.n -> com.google.android.gms.wallet.n:
    com.google.android.gms.wallet.OfferWalletObject dV(android.os.Parcel) -> a
    com.google.android.gms.wallet.OfferWalletObject[] gc(int) -> a
    void a(com.google.android.gms.wallet.OfferWalletObject,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.o -> com.google.android.gms.wallet.o:
    com.google.android.gms.wallet.ProxyCard dW(android.os.Parcel) -> a
    com.google.android.gms.wallet.ProxyCard[] gd(int) -> a
    void a(com.google.android.gms.wallet.ProxyCard,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.wobs.CommonWalletObject -> com.google.android.gms.wallet.wobs.CommonWalletObject:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> t
    java.lang.String fl -> a
    java.lang.String avk -> b
    java.lang.String name -> c
    java.lang.String ave -> d
    java.lang.String avg -> e
    java.lang.String avh -> f
    java.lang.String avi -> g
    java.lang.String avj -> h
    int state -> i
    java.util.ArrayList avl -> j
    com.google.android.gms.wallet.wobs.l avm -> k
    java.util.ArrayList avn -> l
    java.lang.String avo -> m
    java.lang.String avp -> n
    java.util.ArrayList avq -> o
    boolean avr -> p
    java.util.ArrayList avs -> q
    java.util.ArrayList avt -> r
    java.util.ArrayList avu -> s
    com.google.android.gms.wallet.wobs.CommonWalletObject$a rh() -> a
    int getVersionCode() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.wobs.CommonWalletObject$1 -> com.google.android.gms.wallet.wobs.a:
com.google.android.gms.wallet.wobs.CommonWalletObject$a -> com.google.android.gms.wallet.wobs.c:
    com.google.android.gms.wallet.wobs.CommonWalletObject awI -> a
    com.google.android.gms.wallet.wobs.CommonWalletObject$a dh(java.lang.String) -> a
    com.google.android.gms.wallet.wobs.CommonWalletObject ri() -> a
com.google.android.gms.wallet.wobs.a -> com.google.android.gms.wallet.wobs.e:
    com.google.android.gms.wallet.wobs.CommonWalletObject ec(android.os.Parcel) -> a
    com.google.android.gms.wallet.wobs.CommonWalletObject[] gl(int) -> a
    void a(com.google.android.gms.wallet.wobs.CommonWalletObject,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.wobs.b -> com.google.android.gms.wallet.wobs.b:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> c
    java.lang.String label -> a
    java.lang.String value -> b
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.wobs.c -> com.google.android.gms.wallet.wobs.h:
    com.google.android.gms.wallet.wobs.b ed(android.os.Parcel) -> a
    com.google.android.gms.wallet.wobs.b[] gm(int) -> a
    void a(com.google.android.gms.wallet.wobs.b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.wobs.d -> com.google.android.gms.wallet.wobs.d:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> d
    java.lang.String awJ -> a
    java.lang.String awK -> b
    java.util.ArrayList awL -> c
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.wobs.e -> com.google.android.gms.wallet.wobs.i:
    com.google.android.gms.wallet.wobs.d ee(android.os.Parcel) -> a
    com.google.android.gms.wallet.wobs.d[] gn(int) -> a
    void a(com.google.android.gms.wallet.wobs.d,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.wobs.f -> com.google.android.gms.wallet.wobs.f:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> e
    java.lang.String label -> a
    com.google.android.gms.wallet.wobs.g awM -> b
    java.lang.String type -> c
    com.google.android.gms.wallet.wobs.l avm -> d
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.wobs.g -> com.google.android.gms.wallet.wobs.g:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> g
    int awN -> a
    java.lang.String awO -> b
    double awP -> c
    java.lang.String awQ -> d
    long awR -> e
    int awS -> f
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.wobs.h -> com.google.android.gms.wallet.wobs.k:
    com.google.android.gms.wallet.wobs.g ef(android.os.Parcel) -> a
    com.google.android.gms.wallet.wobs.g[] go(int) -> a
    void a(com.google.android.gms.wallet.wobs.g,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.wobs.i -> com.google.android.gms.wallet.wobs.m:
    com.google.android.gms.wallet.wobs.f eg(android.os.Parcel) -> a
    com.google.android.gms.wallet.wobs.f[] gp(int) -> a
    void a(com.google.android.gms.wallet.wobs.f,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.wobs.j -> com.google.android.gms.wallet.wobs.j:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> c
    java.lang.String awT -> a
    java.lang.String tU -> b
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.wobs.k -> com.google.android.gms.wallet.wobs.o:
    com.google.android.gms.wallet.wobs.j eh(android.os.Parcel) -> a
    com.google.android.gms.wallet.wobs.j[] gq(int) -> a
    void a(com.google.android.gms.wallet.wobs.j,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.wobs.l -> com.google.android.gms.wallet.wobs.l:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> c
    long awU -> a
    long awV -> b
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.wobs.m -> com.google.android.gms.wallet.wobs.q:
    com.google.android.gms.wallet.wobs.l ei(android.os.Parcel) -> a
    com.google.android.gms.wallet.wobs.l[] gr(int) -> a
    void a(com.google.android.gms.wallet.wobs.l,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.wobs.n -> com.google.android.gms.wallet.wobs.n:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> c
    java.lang.String awW -> a
    java.lang.String description -> b
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.wobs.o -> com.google.android.gms.wallet.wobs.r:
    com.google.android.gms.wallet.wobs.n ej(android.os.Parcel) -> a
    com.google.android.gms.wallet.wobs.n[] gs(int) -> a
    void a(com.google.android.gms.wallet.wobs.n,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wallet.wobs.p -> com.google.android.gms.wallet.wobs.p:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> f
    java.lang.String awT -> a
    java.lang.String tU -> b
    com.google.android.gms.wallet.wobs.l awX -> c
    com.google.android.gms.wallet.wobs.n awY -> d
    com.google.android.gms.wallet.wobs.n awZ -> e
    int getVersionCode() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wallet.wobs.q -> com.google.android.gms.wallet.wobs.s:
    com.google.android.gms.wallet.wobs.p ek(android.os.Parcel) -> a
    com.google.android.gms.wallet.wobs.p[] gt(int) -> a
    void a(com.google.android.gms.wallet.wobs.p,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.Asset -> com.google.android.gms.wearable.Asset:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    byte[] aeA -> d
    java.lang.String axa -> e
    android.os.ParcelFileDescriptor axb -> b
    android.net.Uri uri -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    byte[] getData() -> a
    java.lang.String getDigest() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.android.gms.wearable.DataItem -> com.google.android.gms.wearable.a:
com.google.android.gms.wearable.DataItemAsset -> com.google.android.gms.wearable.b:
    java.lang.String getId() -> b
    java.lang.String getDataItemKey() -> c
com.google.android.gms.wearable.PutDataRequest -> com.google.android.gms.wearable.PutDataRequest:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.Random axj -> b
    int CK -> a
    android.net.Uri mUri -> c
    android.os.Bundle axk -> d
    byte[] aeA -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.net.Uri getUri() -> a
    byte[] getData() -> b
    android.os.Bundle rk() -> c
    java.lang.String toString() -> toString
    java.lang.String toString(boolean) -> a
com.google.android.gms.wearable.a -> com.google.android.gms.wearable.d:
    com.google.android.gms.wearable.Asset el(android.os.Parcel) -> a
    com.google.android.gms.wearable.Asset[] gu(int) -> a
    void a(com.google.android.gms.wearable.Asset,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.c -> com.google.android.gms.wearable.c:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String mName -> b
    java.lang.String TW -> c
    int Gt -> d
    int axc -> e
    boolean axd -> f
    boolean axe -> g
    java.lang.String axf -> h
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    java.lang.String getName() -> a
    java.lang.String getAddress() -> b
    int getType() -> c
    int getRole() -> d
    boolean isConnected() -> e
    java.lang.String rj() -> f
    boolean isEnabled() -> g
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.android.gms.wearable.d -> com.google.android.gms.wearable.e:
    com.google.android.gms.wearable.c em(android.os.Parcel) -> a
    com.google.android.gms.wearable.c[] gv(int) -> a
    void a(com.google.android.gms.wearable.c,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.e -> com.google.android.gms.wearable.f:
    com.google.android.gms.wearable.PutDataRequest en(android.os.Parcel) -> a
    com.google.android.gms.wearable.PutDataRequest[] gw(int) -> a
    void a(com.google.android.gms.wearable.PutDataRequest,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.DataItemAssetParcelable -> com.google.android.gms.wearable.internal.DataItemAssetParcelable:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String CE -> b
    java.lang.String KP -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.google.android.gms.wearable.DataItemAsset ro() -> d
    java.lang.String getId() -> b
    java.lang.String getDataItemKey() -> c
    java.lang.String toString() -> toString
    java.lang.Object freeze() -> a
com.google.android.gms.wearable.internal.aa -> com.google.android.gms.wearable.internal.a:
    com.google.android.gms.wearable.internal.z ew(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.z[] gF(int) -> a
    void a(com.google.android.gms.wearable.internal.z,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.ab -> com.google.android.gms.wearable.internal.ab:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int versionCode -> a
    int statusCode -> b
    com.google.android.gms.wearable.internal.al axO -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wearable.internal.ac -> com.google.android.gms.wearable.internal.c:
    com.google.android.gms.wearable.internal.ab ex(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.ab[] gG(int) -> a
    void a(com.google.android.gms.wearable.internal.ab,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.ae -> com.google.android.gms.wearable.internal.d:
    void aa(com.google.android.gms.common.data.DataHolder) -> a
    void a(com.google.android.gms.wearable.internal.ai) -> a
    void a(com.google.android.gms.wearable.internal.al) -> a
    void b(com.google.android.gms.wearable.internal.al) -> b
com.google.android.gms.wearable.internal.ae$a -> com.google.android.gms.wearable.internal.e:
    com.google.android.gms.wearable.internal.ae bY(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.wearable.internal.ae$a$a -> com.google.android.gms.wearable.internal.f:
    android.os.IBinder le -> a
    android.os.IBinder asBinder() -> asBinder
    void aa(com.google.android.gms.common.data.DataHolder) -> a
    void a(com.google.android.gms.wearable.internal.ai) -> a
    void a(com.google.android.gms.wearable.internal.al) -> a
    void b(com.google.android.gms.wearable.internal.al) -> b
com.google.android.gms.wearable.internal.ai -> com.google.android.gms.wearable.internal.ai:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    int ve -> b
    java.lang.String axW -> c
    byte[] aeA -> d
    java.lang.String ahy -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    int getRequestId() -> a
    java.lang.String getPath() -> b
    byte[] getData() -> c
    java.lang.String getSourceNodeId() -> d
com.google.android.gms.wearable.internal.aj -> com.google.android.gms.wearable.internal.g:
    com.google.android.gms.wearable.internal.ai ey(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.ai[] gH(int) -> a
    void a(com.google.android.gms.wearable.internal.ai,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.al -> com.google.android.gms.wearable.internal.al:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    java.lang.String CE -> b
    java.lang.String OS -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String getId() -> a
    java.lang.String getDisplayName() -> b
com.google.android.gms.wearable.internal.am -> com.google.android.gms.wearable.internal.h:
    com.google.android.gms.wearable.internal.al ez(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.al[] gI(int) -> a
    void a(com.google.android.gms.wearable.internal.al,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.an -> com.google.android.gms.wearable.internal.an:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int versionCode -> a
    java.lang.String packageName -> b
    java.lang.String label -> c
    long ayc -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wearable.internal.ao -> com.google.android.gms.wearable.internal.i:
    com.google.android.gms.wearable.internal.an eA(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.an[] gJ(int) -> a
    void a(com.google.android.gms.wearable.internal.an,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.ap -> com.google.android.gms.wearable.internal.ap:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int versionCode -> a
    int statusCode -> b
    com.google.android.gms.wearable.internal.m axM -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wearable.internal.aq -> com.google.android.gms.wearable.internal.j:
    com.google.android.gms.wearable.internal.ap eB(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.ap[] gK(int) -> a
    void a(com.google.android.gms.wearable.internal.ap,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.ar -> com.google.android.gms.wearable.internal.ar:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.wearable.internal.ae axv -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.os.IBinder rm() -> a
com.google.android.gms.wearable.internal.as -> com.google.android.gms.wearable.internal.k:
    com.google.android.gms.wearable.internal.ar eC(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.ar[] gL(int) -> a
    void a(com.google.android.gms.wearable.internal.ar,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.at -> com.google.android.gms.wearable.internal.at:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int versionCode -> a
    int statusCode -> b
    int ayd -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wearable.internal.au -> com.google.android.gms.wearable.internal.l:
    com.google.android.gms.wearable.internal.at eD(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.at[] gM(int) -> a
    void a(com.google.android.gms.wearable.internal.at,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.aw -> com.google.android.gms.wearable.internal.aw:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int versionCode -> a
    int statusCode -> b
    long ayc -> c
    java.util.List aye -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wearable.internal.ax -> com.google.android.gms.wearable.internal.n:
    com.google.android.gms.wearable.internal.aw eE(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.aw[] gO(int) -> a
    void a(com.google.android.gms.wearable.internal.aw,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.b -> com.google.android.gms.wearable.internal.b:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    com.google.android.gms.wearable.internal.ae axv -> b
    android.content.IntentFilter[] axw -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.os.IBinder rm() -> a
com.google.android.gms.wearable.internal.c -> com.google.android.gms.wearable.internal.o:
    com.google.android.gms.wearable.internal.b eo(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.b[] gx(int) -> a
    void a(com.google.android.gms.wearable.internal.b,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.j -> com.google.android.gms.wearable.internal.q:
    com.google.android.gms.wearable.internal.DataItemAssetParcelable ep(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.DataItemAssetParcelable[] gy(int) -> a
    void a(com.google.android.gms.wearable.internal.DataItemAssetParcelable,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.m -> com.google.android.gms.wearable.internal.m:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int CK -> a
    android.net.Uri mUri -> b
    java.util.Map axH -> c
    byte[] aeA -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    com.google.android.gms.wearable.internal.m rq() -> b
    android.net.Uri getUri() -> c
    byte[] getData() -> d
    android.os.Bundle rk() -> e
    java.lang.String toString() -> toString
    java.lang.String toString(boolean) -> a
    java.lang.Object freeze() -> a
com.google.android.gms.wearable.internal.n -> com.google.android.gms.wearable.internal.s:
    com.google.android.gms.wearable.internal.m eq(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.m[] gz(int) -> a
    void a(com.google.android.gms.wearable.internal.m,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.p -> com.google.android.gms.wearable.internal.p:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int versionCode -> a
    int statusCode -> b
    int axI -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wearable.internal.q -> com.google.android.gms.wearable.internal.u:
    com.google.android.gms.wearable.internal.p er(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.p[] gA(int) -> a
    void a(com.google.android.gms.wearable.internal.p,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.r -> com.google.android.gms.wearable.internal.r:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int versionCode -> a
    int statusCode -> b
    com.google.android.gms.wearable.c axJ -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wearable.internal.s -> com.google.android.gms.wearable.internal.w:
    com.google.android.gms.wearable.internal.r es(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.r[] gB(int) -> a
    void a(com.google.android.gms.wearable.internal.r,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.t -> com.google.android.gms.wearable.internal.t:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int versionCode -> a
    int statusCode -> b
    com.google.android.gms.wearable.c[] axK -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wearable.internal.u -> com.google.android.gms.wearable.internal.y:
    com.google.android.gms.wearable.internal.t et(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.t[] gC(int) -> a
    void a(com.google.android.gms.wearable.internal.t,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.v -> com.google.android.gms.wearable.internal.v:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int versionCode -> a
    int statusCode -> b
    java.util.List axL -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wearable.internal.w -> com.google.android.gms.wearable.internal.aa:
    com.google.android.gms.wearable.internal.v eu(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.v[] gD(int) -> a
    void a(com.google.android.gms.wearable.internal.v,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.x -> com.google.android.gms.wearable.internal.x:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int versionCode -> a
    int statusCode -> b
    com.google.android.gms.wearable.internal.m axM -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.wearable.internal.y -> com.google.android.gms.wearable.internal.ac:
    com.google.android.gms.wearable.internal.x ev(android.os.Parcel) -> a
    com.google.android.gms.wearable.internal.x[] gE(int) -> a
    void a(com.google.android.gms.wearable.internal.x,android.os.Parcel,int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.wearable.internal.z -> com.google.android.gms.wearable.internal.z:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int versionCode -> a
    int statusCode -> b
    android.os.ParcelFileDescriptor axN -> c
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
